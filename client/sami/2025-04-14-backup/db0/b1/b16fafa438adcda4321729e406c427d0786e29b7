
/* /web/static/src/module_loader.js */
(function(odoo){"use strict";if(odoo.loader){return;}
class ModuleLoader{bus=new EventTarget();checkErrorProm=null;factories=new Map();failed=new Set();jobs=new Set();modules=new Map();constructor(root){this.root=root;}
addJob(name){this.jobs.add(name);this.startModules();}
define(name,deps,factory,lazy=false){if(typeof name!=="string"){throw new Error(`Module name should be a string, got: ${String(name)}`);}
if(!Array.isArray(deps)){throw new Error(`Module dependencies should be a list of strings, got: ${String(deps)}`);}
if(typeof factory!=="function"){throw new Error(`Module factory should be a function, got: ${String(factory)}`);}
if(this.factories.has(name)){return;}
this.factories.set(name,{deps,fn:factory,ignoreMissingDeps:globalThis.__odooIgnoreMissingDependencies,});if(!lazy){this.addJob(name);this.checkErrorProm||=Promise.resolve().then(()=>{this.checkErrorProm=null;this.reportErrors(this.findErrors());});}}
findErrors(moduleNames){const findCycle=(currentModuleNames,visited)=>{for(const name of currentModuleNames||[]){if(visited.has(name)){const cycleModuleNames=[...visited,name];return cycleModuleNames.slice(cycleModuleNames.indexOf(name)).map((j)=>`"${j}"`).join(" => ");}
const cycle=findCycle(dependencyGraph[name],new Set(visited).add(name));if(cycle){return cycle;}}
return null;};moduleNames||=this.jobs;const dependencyGraph=Object.create(null);const missing=new Set();const unloaded=new Set();for(const moduleName of moduleNames){const{deps,ignoreMissingDeps}=this.factories.get(moduleName);dependencyGraph[moduleName]=deps;if(ignoreMissingDeps){continue;}
unloaded.add(moduleName);for(const dep of deps){if(!this.factories.has(dep)){missing.add(dep);}}}
const cycle=findCycle(moduleNames,new Set());const errors={};if(cycle){errors.cycle=cycle;}
if(this.failed.size){errors.failed=this.failed;}
if(missing.size){errors.missing=missing;}
if(unloaded.size){errors.unloaded=unloaded;}
return errors;}
findJob(){for(const job of this.jobs){if(this.factories.get(job).deps.every((dep)=>this.modules.has(dep))){return job;}}
return null;}
async reportErrors(errors){if(!Object.keys(errors).length){return;}
const style=document.createElement("style");style.textContent=`
                body::before {
                    font-weight: bold;
                    content: "An error occurred while loading javascript modules, you may find more information in the devtools console";
                    position: fixed;
                    left: 0;
                    bottom: 0;
                    z-index: 100000000000;
                    background-color: #C00;
                    color: #DDD;
                }
            `;document.head.appendChild(style);if(errors.failed){console.error("The following modules failed to load because of an error:",[...errors.failed])}
if(errors.missing){console.error("The following modules are needed by other modules but have not been defined, they may not be present in the correct asset bundle:",[...errors.missing]);}
if(errors.cycle){console.error("The following modules could not be loaded because they form a dependency cycle:",errors.cycle);}
if(errors.unloaded){console.error("The following modules could not be loaded because they have unmet dependencies, this is a secondary error which is likely caused by one of the above problems:",[...errors.unloaded]);}}
startModules(){let job;while((job=this.findJob())){this.startModule(job);}}
startModule(name){const require=(dependency)=>this.modules.get(dependency);this.jobs.delete(name);const factory=this.factories.get(name);let module=null;try{module=factory.fn(require);}catch(error){this.failed.add(name);throw new Error(`Error while loading "${name}":\n${error}`);}
this.modules.set(name,module);this.bus.dispatchEvent(new CustomEvent("module-started",{detail:{moduleName:name,module},}));return module;}}
if(odoo.debug&&!new URLSearchParams(location.search).has("debug")){odoo.debug="";}
const loader=new ModuleLoader();odoo.define=loader.define.bind(loader);odoo.loader=loader;})((globalThis.odoo||={}));;

/* /point_of_sale/static/lib/sha1.js */
(function(_window){'use strict';var Sha1={};_window.Sha1=Sha1;Sha1.hash=function(msg){msg=msg.utf8Encode();var K=[0x5a827999,0x6ed9eba1,0x8f1bbcdc,0xca62c1d6];msg+=String.fromCharCode(0x80);var l=msg.length/4+2;var N=Math.ceil(l/16);var M=new Array(N);for(var i=0;i<N;i++){M[i]=new Array(16);for(var j=0;j<16;j++){M[i][j]=(msg.charCodeAt(i*64+j*4)<<24)|(msg.charCodeAt(i*64+j*4+1)<<16)|(msg.charCodeAt(i*64+j*4+2)<<8)|(msg.charCodeAt(i*64+j*4+3));}}
M[N-1][14]=((msg.length-1)*8)/Math.pow(2,32);M[N-1][14]=Math.floor(M[N-1][14]);M[N-1][15]=((msg.length-1)*8)&0xffffffff;var H0=0x67452301;var H1=0xefcdab89;var H2=0x98badcfe;var H3=0x10325476;var H4=0xc3d2e1f0;var W=new Array(80);var a,b,c,d,e;for(var i=0;i<N;i++){for(var t=0;t<16;t++)W[t]=M[i][t];for(var t=16;t<80;t++)W[t]=Sha1.ROTL(W[t-3]^W[t-8]^W[t-14]^W[t-16],1);a=H0;b=H1;c=H2;d=H3;e=H4;for(var t=0;t<80;t++){var s=Math.floor(t/20);var T=(Sha1.ROTL(a,5)+Sha1.f(s,b,c,d)+e+K[s]+W[t])&0xffffffff;e=d;d=c;c=Sha1.ROTL(b,30);b=a;a=T;}
H0=(H0+a)&0xffffffff;H1=(H1+b)&0xffffffff;H2=(H2+c)&0xffffffff;H3=(H3+d)&0xffffffff;H4=(H4+e)&0xffffffff;}
return Sha1.toHexStr(H0)+Sha1.toHexStr(H1)+Sha1.toHexStr(H2)+
Sha1.toHexStr(H3)+Sha1.toHexStr(H4);};Sha1.f=function(s,x,y,z){switch(s){case 0:return(x&y)^(~x&z);case 1:return x^y^z;case 2:return(x&y)^(x&z)^(y&z);case 3:return x^y^z;}};Sha1.ROTL=function(x,n){return(x<<n)|(x>>>(32-n));};Sha1.toHexStr=function(n){var s="",v;for(var i=7;i>=0;i--){v=(n>>>(i*4))&0xf;s+=v.toString(16);}
return s;};if(typeof String.prototype.utf8Encode=='undefined'){String.prototype.utf8Encode=function(){return unescape(encodeURIComponent(this));};}
if(typeof String.prototype.utf8Decode=='undefined'){String.prototype.utf8Decode=function(){try{return decodeURIComponent(escape(this));}catch(e){return this;}};}
if(typeof module!='undefined'&&module.exports)module.exports=Sha1;if(typeof define=='function'&&define.amd)define([],function(){return Sha1;});})(window);

/* /point_of_sale/static/lib/waitfont.js */
(function(){function waitForWebfonts(fonts,callback){var loadedFonts=0;for(var i=0,l=fonts.length;i<l;++i){(function(font){var node=document.createElement('span');node.innerHTML='giItT1WQy@!-/#';node.style.position='absolute';node.style.left='-10000px';node.style.top='-10000px';node.style.fontSize='300px';node.style.fontFamily='sans-serif';node.style.fontVariant='normal';node.style.fontStyle='normal';node.style.fontWeight='normal';node.style.letterSpacing='0';document.body.appendChild(node);var width=node.offsetWidth;node.style.fontFamily=font;var interval;function checkFont(){if(node&&node.offsetWidth!=width){++loadedFonts;node.parentNode.removeChild(node);node=null;}
if(loadedFonts>=fonts.length){if(interval){clearInterval(interval);}
if(loadedFonts==fonts.length){callback();return true;}}};if(!checkFont()){interval=setInterval(checkFont,50);}})(fonts[i]);}}
window.waitForWebfonts=waitForWebfonts;})();;

/* /web/static/lib/luxon/luxon.js */
var luxon=(function(exports){'use strict';class LuxonError extends Error{}
class InvalidDateTimeError extends LuxonError{constructor(reason){super(`Invalid DateTime: ${reason.toMessage()}`);}}
class InvalidIntervalError extends LuxonError{constructor(reason){super(`Invalid Interval: ${reason.toMessage()}`);}}
class InvalidDurationError extends LuxonError{constructor(reason){super(`Invalid Duration: ${reason.toMessage()}`);}}
class ConflictingSpecificationError extends LuxonError{}
class InvalidUnitError extends LuxonError{constructor(unit){super(`Invalid unit ${unit}`);}}
class InvalidArgumentError extends LuxonError{}
class ZoneIsAbstractError extends LuxonError{constructor(){super("Zone is an abstract class");}}
const n="numeric",s="short",l="long";const DATE_SHORT={year:n,month:n,day:n,};const DATE_MED={year:n,month:s,day:n,};const DATE_MED_WITH_WEEKDAY={year:n,month:s,day:n,weekday:s,};const DATE_FULL={year:n,month:l,day:n,};const DATE_HUGE={year:n,month:l,day:n,weekday:l,};const TIME_SIMPLE={hour:n,minute:n,};const TIME_WITH_SECONDS={hour:n,minute:n,second:n,};const TIME_WITH_SHORT_OFFSET={hour:n,minute:n,second:n,timeZoneName:s,};const TIME_WITH_LONG_OFFSET={hour:n,minute:n,second:n,timeZoneName:l,};const TIME_24_SIMPLE={hour:n,minute:n,hourCycle:"h23",};const TIME_24_WITH_SECONDS={hour:n,minute:n,second:n,hourCycle:"h23",};const TIME_24_WITH_SHORT_OFFSET={hour:n,minute:n,second:n,hourCycle:"h23",timeZoneName:s,};const TIME_24_WITH_LONG_OFFSET={hour:n,minute:n,second:n,hourCycle:"h23",timeZoneName:l,};const DATETIME_SHORT={year:n,month:n,day:n,hour:n,minute:n,};const DATETIME_SHORT_WITH_SECONDS={year:n,month:n,day:n,hour:n,minute:n,second:n,};const DATETIME_MED={year:n,month:s,day:n,hour:n,minute:n,};const DATETIME_MED_WITH_SECONDS={year:n,month:s,day:n,hour:n,minute:n,second:n,};const DATETIME_MED_WITH_WEEKDAY={year:n,month:s,day:n,weekday:s,hour:n,minute:n,};const DATETIME_FULL={year:n,month:l,day:n,hour:n,minute:n,timeZoneName:s,};const DATETIME_FULL_WITH_SECONDS={year:n,month:l,day:n,hour:n,minute:n,second:n,timeZoneName:s,};const DATETIME_HUGE={year:n,month:l,day:n,weekday:l,hour:n,minute:n,timeZoneName:l,};const DATETIME_HUGE_WITH_SECONDS={year:n,month:l,day:n,weekday:l,hour:n,minute:n,second:n,timeZoneName:l,};class Zone{get type(){throw new ZoneIsAbstractError();}
get name(){throw new ZoneIsAbstractError();}
get ianaName(){return this.name;}
get isUniversal(){throw new ZoneIsAbstractError();}
offsetName(ts,opts){throw new ZoneIsAbstractError();}
formatOffset(ts,format){throw new ZoneIsAbstractError();}
offset(ts){throw new ZoneIsAbstractError();}
equals(otherZone){throw new ZoneIsAbstractError();}
get isValid(){throw new ZoneIsAbstractError();}}
let singleton$1=null;class SystemZone extends Zone{static get instance(){if(singleton$1===null){singleton$1=new SystemZone();}
return singleton$1;}
get type(){return"system";}
get name(){return new Intl.DateTimeFormat().resolvedOptions().timeZone;}
get isUniversal(){return false;}
offsetName(ts,{format,locale}){return parseZoneInfo(ts,format,locale);}
formatOffset(ts,format){return formatOffset(this.offset(ts),format);}
offset(ts){return-new Date(ts).getTimezoneOffset();}
equals(otherZone){return otherZone.type==="system";}
get isValid(){return true;}}
let dtfCache={};function makeDTF(zone){if(!dtfCache[zone]){dtfCache[zone]=new Intl.DateTimeFormat("en-US",{hour12:false,timeZone:zone,year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit",era:"short",});}
return dtfCache[zone];}
const typeToPos={year:0,month:1,day:2,era:3,hour:4,minute:5,second:6,};function hackyOffset(dtf,date){const formatted=dtf.format(date).replace(/\u200E/g,""),parsed=/(\d+)\/(\d+)\/(\d+) (AD|BC),? (\d+):(\d+):(\d+)/.exec(formatted),[,fMonth,fDay,fYear,fadOrBc,fHour,fMinute,fSecond]=parsed;return[fYear,fMonth,fDay,fadOrBc,fHour,fMinute,fSecond];}
function partsOffset(dtf,date){const formatted=dtf.formatToParts(date);const filled=[];for(let i=0;i<formatted.length;i++){const{type,value}=formatted[i];const pos=typeToPos[type];if(type==="era"){filled[pos]=value;}else if(!isUndefined(pos)){filled[pos]=parseInt(value,10);}}
return filled;}
let ianaZoneCache={};class IANAZone extends Zone{static create(name){if(!ianaZoneCache[name]){ianaZoneCache[name]=new IANAZone(name);}
return ianaZoneCache[name];}
static resetCache(){ianaZoneCache={};dtfCache={};}
static isValidSpecifier(s){return this.isValidZone(s);}
static isValidZone(zone){if(!zone){return false;}
try{new Intl.DateTimeFormat("en-US",{timeZone:zone}).format();return true;}catch(e){return false;}}
constructor(name){super();this.zoneName=name;this.valid=IANAZone.isValidZone(name);}
get type(){return"iana";}
get name(){return this.zoneName;}
get isUniversal(){return false;}
offsetName(ts,{format,locale}){return parseZoneInfo(ts,format,locale,this.name);}
formatOffset(ts,format){return formatOffset(this.offset(ts),format);}
offset(ts){const date=new Date(ts);if(isNaN(date))return NaN;const dtf=makeDTF(this.name);let[year,month,day,adOrBc,hour,minute,second]=dtf.formatToParts?partsOffset(dtf,date):hackyOffset(dtf,date);if(adOrBc==="BC"){year=-Math.abs(year)+1;}
const adjustedHour=hour===24?0:hour;const asUTC=objToLocalTS({year,month,day,hour:adjustedHour,minute,second,millisecond:0,});let asTS=+date;const over=asTS%1000;asTS-=over>=0?over:1000+over;return(asUTC-asTS)/(60*1000);}
equals(otherZone){return otherZone.type==="iana"&&otherZone.name===this.name;}
get isValid(){return this.valid;}}
let intlLFCache={};function getCachedLF(locString,opts={}){const key=JSON.stringify([locString,opts]);let dtf=intlLFCache[key];if(!dtf){dtf=new Intl.ListFormat(locString,opts);intlLFCache[key]=dtf;}
return dtf;}
let intlDTCache={};function getCachedDTF(locString,opts={}){const key=JSON.stringify([locString,opts]);let dtf=intlDTCache[key];if(!dtf){dtf=new Intl.DateTimeFormat(locString,opts);intlDTCache[key]=dtf;}
return dtf;}
let intlNumCache={};function getCachedINF(locString,opts={}){const key=JSON.stringify([locString,opts]);let inf=intlNumCache[key];if(!inf){inf=new Intl.NumberFormat(locString,opts);intlNumCache[key]=inf;}
return inf;}
let intlRelCache={};function getCachedRTF(locString,opts={}){const{base,...cacheKeyOpts}=opts;const key=JSON.stringify([locString,cacheKeyOpts]);let inf=intlRelCache[key];if(!inf){inf=new Intl.RelativeTimeFormat(locString,opts);intlRelCache[key]=inf;}
return inf;}
let sysLocaleCache=null;function systemLocale(){if(sysLocaleCache){return sysLocaleCache;}else{sysLocaleCache=new Intl.DateTimeFormat().resolvedOptions().locale;return sysLocaleCache;}}
let weekInfoCache={};function getCachedWeekInfo(locString){let data=weekInfoCache[locString];if(!data){const locale=new Intl.Locale(locString);data="getWeekInfo"in locale?locale.getWeekInfo():locale.weekInfo;weekInfoCache[locString]=data;}
return data;}
function parseLocaleString(localeStr){const xIndex=localeStr.indexOf("-x-");if(xIndex!==-1){localeStr=localeStr.substring(0,xIndex);}
const uIndex=localeStr.indexOf("-u-");if(uIndex===-1){return[localeStr];}else{let options;let selectedStr;try{options=getCachedDTF(localeStr).resolvedOptions();selectedStr=localeStr;}catch(e){const smaller=localeStr.substring(0,uIndex);options=getCachedDTF(smaller).resolvedOptions();selectedStr=smaller;}
const{numberingSystem,calendar}=options;return[selectedStr,numberingSystem,calendar];}}
function intlConfigString(localeStr,numberingSystem,outputCalendar){if(outputCalendar||numberingSystem){if(!localeStr.includes("-u-")){localeStr+="-u";}
if(outputCalendar){localeStr+=`-ca-${outputCalendar}`;}
if(numberingSystem){localeStr+=`-nu-${numberingSystem}`;}
return localeStr;}else{return localeStr;}}
function mapMonths(f){const ms=[];for(let i=1;i<=12;i++){const dt=DateTime.utc(2009,i,1);ms.push(f(dt));}
return ms;}
function mapWeekdays(f){const ms=[];for(let i=1;i<=7;i++){const dt=DateTime.utc(2016,11,13+i);ms.push(f(dt));}
return ms;}
function listStuff(loc,length,englishFn,intlFn){const mode=loc.listingMode();if(mode==="error"){return null;}else if(mode==="en"){return englishFn(length);}else{return intlFn(length);}}
function supportsFastNumbers(loc){if(loc.numberingSystem&&loc.numberingSystem!=="latn"){return false;}else{return(loc.numberingSystem==="latn"||!loc.locale||loc.locale.startsWith("en")||new Intl.DateTimeFormat(loc.intl).resolvedOptions().numberingSystem==="latn");}}
class PolyNumberFormatter{constructor(intl,forceSimple,opts){this.padTo=opts.padTo||0;this.floor=opts.floor||false;const{padTo,floor,...otherOpts}=opts;if(!forceSimple||Object.keys(otherOpts).length>0){const intlOpts={useGrouping:false,...opts};if(opts.padTo>0)intlOpts.minimumIntegerDigits=opts.padTo;this.inf=getCachedINF(intl,intlOpts);}}
format(i){if(this.inf){const fixed=this.floor?Math.floor(i):i;return this.inf.format(fixed);}else{const fixed=this.floor?Math.floor(i):roundTo(i,3);return padStart(fixed,this.padTo);}}}
class PolyDateFormatter{constructor(dt,intl,opts){this.opts=opts;this.originalZone=undefined;let z=undefined;if(this.opts.timeZone){this.dt=dt;}else if(dt.zone.type==="fixed"){const gmtOffset=-1*(dt.offset/60);const offsetZ=gmtOffset>=0?`Etc/GMT+${gmtOffset}`:`Etc/GMT${gmtOffset}`;if(dt.offset!==0&&IANAZone.create(offsetZ).valid){z=offsetZ;this.dt=dt;}else{z="UTC";this.dt=dt.offset===0?dt:dt.setZone("UTC").plus({minutes:dt.offset});this.originalZone=dt.zone;}}else if(dt.zone.type==="system"){this.dt=dt;}else if(dt.zone.type==="iana"){this.dt=dt;z=dt.zone.name;}else{z="UTC";this.dt=dt.setZone("UTC").plus({minutes:dt.offset});this.originalZone=dt.zone;}
const intlOpts={...this.opts};intlOpts.timeZone=intlOpts.timeZone||z;this.dtf=getCachedDTF(intl,intlOpts);}
format(){if(this.originalZone){return this.formatToParts().map(({value})=>value).join("");}
return this.dtf.format(this.dt.toJSDate());}
formatToParts(){const parts=this.dtf.formatToParts(this.dt.toJSDate());if(this.originalZone){return parts.map((part)=>{if(part.type==="timeZoneName"){const offsetName=this.originalZone.offsetName(this.dt.ts,{locale:this.dt.locale,format:this.opts.timeZoneName,});return{...part,value:offsetName,};}else{return part;}});}
return parts;}
resolvedOptions(){return this.dtf.resolvedOptions();}}
class PolyRelFormatter{constructor(intl,isEnglish,opts){this.opts={style:"long",...opts};if(!isEnglish&&hasRelative()){this.rtf=getCachedRTF(intl,opts);}}
format(count,unit){if(this.rtf){return this.rtf.format(count,unit);}else{return formatRelativeTime(unit,count,this.opts.numeric,this.opts.style!=="long");}}
formatToParts(count,unit){if(this.rtf){return this.rtf.formatToParts(count,unit);}else{return[];}}}
const fallbackWeekSettings={firstDay:1,minimalDays:4,weekend:[6,7],};class Locale{static fromOpts(opts){return Locale.create(opts.locale,opts.numberingSystem,opts.outputCalendar,opts.weekSettings,opts.defaultToEN);}
static create(locale,numberingSystem,outputCalendar,weekSettings,defaultToEN=false){const specifiedLocale=locale||Settings.defaultLocale;const localeR=specifiedLocale||(defaultToEN?"en-US":systemLocale());const numberingSystemR=numberingSystem||Settings.defaultNumberingSystem;const outputCalendarR=outputCalendar||Settings.defaultOutputCalendar;const weekSettingsR=validateWeekSettings(weekSettings)||Settings.defaultWeekSettings;return new Locale(localeR,numberingSystemR,outputCalendarR,weekSettingsR,specifiedLocale);}
static resetCache(){sysLocaleCache=null;intlDTCache={};intlNumCache={};intlRelCache={};}
static fromObject({locale,numberingSystem,outputCalendar,weekSettings}={}){return Locale.create(locale,numberingSystem,outputCalendar,weekSettings);}
constructor(locale,numbering,outputCalendar,weekSettings,specifiedLocale){const[parsedLocale,parsedNumberingSystem,parsedOutputCalendar]=parseLocaleString(locale);this.locale=parsedLocale;this.numberingSystem=numbering||parsedNumberingSystem||null;this.outputCalendar=outputCalendar||parsedOutputCalendar||null;this.weekSettings=weekSettings;this.intl=intlConfigString(this.locale,this.numberingSystem,this.outputCalendar);this.weekdaysCache={format:{},standalone:{}};this.monthsCache={format:{},standalone:{}};this.meridiemCache=null;this.eraCache={};this.specifiedLocale=specifiedLocale;this.fastNumbersCached=null;}
get fastNumbers(){if(this.fastNumbersCached==null){this.fastNumbersCached=supportsFastNumbers(this);}
return this.fastNumbersCached;}
listingMode(){const isActuallyEn=this.isEnglish();const hasNoWeirdness=(this.numberingSystem===null||this.numberingSystem==="latn")&&(this.outputCalendar===null||this.outputCalendar==="gregory");return isActuallyEn&&hasNoWeirdness?"en":"intl";}
clone(alts){if(!alts||Object.getOwnPropertyNames(alts).length===0){return this;}else{return Locale.create(alts.locale||this.specifiedLocale,alts.numberingSystem||this.numberingSystem,alts.outputCalendar||this.outputCalendar,validateWeekSettings(alts.weekSettings)||this.weekSettings,alts.defaultToEN||false);}}
redefaultToEN(alts={}){return this.clone({...alts,defaultToEN:true});}
redefaultToSystem(alts={}){return this.clone({...alts,defaultToEN:false});}
months(length,format=false){return listStuff(this,length,months,()=>{const intl=format?{month:length,day:"numeric"}:{month:length},formatStr=format?"format":"standalone";if(!this.monthsCache[formatStr][length]){this.monthsCache[formatStr][length]=mapMonths((dt)=>this.extract(dt,intl,"month"));}
return this.monthsCache[formatStr][length];});}
weekdays(length,format=false){return listStuff(this,length,weekdays,()=>{const intl=format?{weekday:length,year:"numeric",month:"long",day:"numeric"}:{weekday:length},formatStr=format?"format":"standalone";if(!this.weekdaysCache[formatStr][length]){this.weekdaysCache[formatStr][length]=mapWeekdays((dt)=>this.extract(dt,intl,"weekday"));}
return this.weekdaysCache[formatStr][length];});}
meridiems(){return listStuff(this,undefined,()=>meridiems,()=>{if(!this.meridiemCache){const intl={hour:"numeric",hourCycle:"h12"};this.meridiemCache=[DateTime.utc(2016,11,13,9),DateTime.utc(2016,11,13,19)].map((dt)=>this.extract(dt,intl,"dayperiod"));}
return this.meridiemCache;});}
eras(length){return listStuff(this,length,eras,()=>{const intl={era:length};if(!this.eraCache[length]){this.eraCache[length]=[DateTime.utc(-40,1,1),DateTime.utc(2017,1,1)].map((dt)=>this.extract(dt,intl,"era"));}
return this.eraCache[length];});}
extract(dt,intlOpts,field){const df=this.dtFormatter(dt,intlOpts),results=df.formatToParts(),matching=results.find((m)=>m.type.toLowerCase()===field);return matching?matching.value:null;}
numberFormatter(opts={}){return new PolyNumberFormatter(this.intl,opts.forceSimple||this.fastNumbers,opts);}
dtFormatter(dt,intlOpts={}){return new PolyDateFormatter(dt,this.intl,intlOpts);}
relFormatter(opts={}){return new PolyRelFormatter(this.intl,this.isEnglish(),opts);}
listFormatter(opts={}){return getCachedLF(this.intl,opts);}
isEnglish(){return(this.locale==="en"||this.locale.toLowerCase()==="en-us"||new Intl.DateTimeFormat(this.intl).resolvedOptions().locale.startsWith("en-us"));}
getWeekSettings(){if(this.weekSettings){return this.weekSettings;}else if(!hasLocaleWeekInfo()){return fallbackWeekSettings;}else{return getCachedWeekInfo(this.locale);}}
getStartOfWeek(){return this.getWeekSettings().firstDay;}
getMinDaysInFirstWeek(){return this.getWeekSettings().minimalDays;}
getWeekendDays(){return this.getWeekSettings().weekend;}
equals(other){return(this.locale===other.locale&&this.numberingSystem===other.numberingSystem&&this.outputCalendar===other.outputCalendar);}}
let singleton=null;class FixedOffsetZone extends Zone{static get utcInstance(){if(singleton===null){singleton=new FixedOffsetZone(0);}
return singleton;}
static instance(offset){return offset===0?FixedOffsetZone.utcInstance:new FixedOffsetZone(offset);}
static parseSpecifier(s){if(s){const r=s.match(/^utc(?:([+-]\d{1,2})(?::(\d{2}))?)?$/i);if(r){return new FixedOffsetZone(signedOffset(r[1],r[2]));}}
return null;}
constructor(offset){super();this.fixed=offset;}
get type(){return"fixed";}
get name(){return this.fixed===0?"UTC":`UTC${formatOffset(this.fixed, "narrow")}`;}
get ianaName(){if(this.fixed===0){return"Etc/UTC";}else{return`Etc/GMT${formatOffset(-this.fixed, "narrow")}`;}}
offsetName(){return this.name;}
formatOffset(ts,format){return formatOffset(this.fixed,format);}
get isUniversal(){return true;}
offset(){return this.fixed;}
equals(otherZone){return otherZone.type==="fixed"&&otherZone.fixed===this.fixed;}
get isValid(){return true;}}
class InvalidZone extends Zone{constructor(zoneName){super();this.zoneName=zoneName;}
get type(){return"invalid";}
get name(){return this.zoneName;}
get isUniversal(){return false;}
offsetName(){return null;}
formatOffset(){return"";}
offset(){return NaN;}
equals(){return false;}
get isValid(){return false;}}
function normalizeZone(input,defaultZone){if(isUndefined(input)||input===null){return defaultZone;}else if(input instanceof Zone){return input;}else if(isString(input)){const lowered=input.toLowerCase();if(lowered==="default")return defaultZone;else if(lowered==="local"||lowered==="system")return SystemZone.instance;else if(lowered==="utc"||lowered==="gmt")return FixedOffsetZone.utcInstance;else return FixedOffsetZone.parseSpecifier(lowered)||IANAZone.create(input);}else if(isNumber(input)){return FixedOffsetZone.instance(input);}else if(typeof input==="object"&&"offset"in input&&typeof input.offset==="function"){return input;}else{return new InvalidZone(input);}}
let now=()=>Date.now(),defaultZone="system",defaultLocale=null,defaultNumberingSystem=null,defaultOutputCalendar=null,twoDigitCutoffYear=60,throwOnInvalid,defaultWeekSettings=null;class Settings{static get now(){return now;}
static set now(n){now=n;}
static set defaultZone(zone){defaultZone=zone;}
static get defaultZone(){return normalizeZone(defaultZone,SystemZone.instance);}
static get defaultLocale(){return defaultLocale;}
static set defaultLocale(locale){defaultLocale=locale;}
static get defaultNumberingSystem(){return defaultNumberingSystem;}
static set defaultNumberingSystem(numberingSystem){defaultNumberingSystem=numberingSystem;}
static get defaultOutputCalendar(){return defaultOutputCalendar;}
static set defaultOutputCalendar(outputCalendar){defaultOutputCalendar=outputCalendar;}
static get defaultWeekSettings(){return defaultWeekSettings;}
static set defaultWeekSettings(weekSettings){defaultWeekSettings=validateWeekSettings(weekSettings);}
static get twoDigitCutoffYear(){return twoDigitCutoffYear;}
static set twoDigitCutoffYear(cutoffYear){twoDigitCutoffYear=cutoffYear%100;}
static get throwOnInvalid(){return throwOnInvalid;}
static set throwOnInvalid(t){throwOnInvalid=t;}
static resetCaches(){Locale.resetCache();IANAZone.resetCache();}}
class Invalid{constructor(reason,explanation){this.reason=reason;this.explanation=explanation;}
toMessage(){if(this.explanation){return`${this.reason}: ${this.explanation}`;}else{return this.reason;}}}
const nonLeapLadder=[0,31,59,90,120,151,181,212,243,273,304,334],leapLadder=[0,31,60,91,121,152,182,213,244,274,305,335];function unitOutOfRange(unit,value){return new Invalid("unit out of range",`you specified ${value} (of type ${typeof value}) as a ${unit}, which is invalid`);}
function dayOfWeek(year,month,day){const d=new Date(Date.UTC(year,month-1,day));if(year<100&&year>=0){d.setUTCFullYear(d.getUTCFullYear()-1900);}
const js=d.getUTCDay();return js===0?7:js;}
function computeOrdinal(year,month,day){return day+(isLeapYear(year)?leapLadder:nonLeapLadder)[month-1];}
function uncomputeOrdinal(year,ordinal){const table=isLeapYear(year)?leapLadder:nonLeapLadder,month0=table.findIndex((i)=>i<ordinal),day=ordinal-table[month0];return{month:month0+1,day};}
function isoWeekdayToLocal(isoWeekday,startOfWeek){return((isoWeekday-startOfWeek+7)%7)+1;}
function gregorianToWeek(gregObj,minDaysInFirstWeek=4,startOfWeek=1){const{year,month,day}=gregObj,ordinal=computeOrdinal(year,month,day),weekday=isoWeekdayToLocal(dayOfWeek(year,month,day),startOfWeek);let weekNumber=Math.floor((ordinal-weekday+14-minDaysInFirstWeek)/7),weekYear;if(weekNumber<1){weekYear=year-1;weekNumber=weeksInWeekYear(weekYear,minDaysInFirstWeek,startOfWeek);}else if(weekNumber>weeksInWeekYear(year,minDaysInFirstWeek,startOfWeek)){weekYear=year+1;weekNumber=1;}else{weekYear=year;}
return{weekYear,weekNumber,weekday,...timeObject(gregObj)};}
function weekToGregorian(weekData,minDaysInFirstWeek=4,startOfWeek=1){const{weekYear,weekNumber,weekday}=weekData,weekdayOfJan4=isoWeekdayToLocal(dayOfWeek(weekYear,1,minDaysInFirstWeek),startOfWeek),yearInDays=daysInYear(weekYear);let ordinal=weekNumber*7+weekday-weekdayOfJan4-7+minDaysInFirstWeek,year;if(ordinal<1){year=weekYear-1;ordinal+=daysInYear(year);}else if(ordinal>yearInDays){year=weekYear+1;ordinal-=daysInYear(weekYear);}else{year=weekYear;}
const{month,day}=uncomputeOrdinal(year,ordinal);return{year,month,day,...timeObject(weekData)};}
function gregorianToOrdinal(gregData){const{year,month,day}=gregData;const ordinal=computeOrdinal(year,month,day);return{year,ordinal,...timeObject(gregData)};}
function ordinalToGregorian(ordinalData){const{year,ordinal}=ordinalData;const{month,day}=uncomputeOrdinal(year,ordinal);return{year,month,day,...timeObject(ordinalData)};}
function usesLocalWeekValues(obj,loc){const hasLocaleWeekData=!isUndefined(obj.localWeekday)||!isUndefined(obj.localWeekNumber)||!isUndefined(obj.localWeekYear);if(hasLocaleWeekData){const hasIsoWeekData=!isUndefined(obj.weekday)||!isUndefined(obj.weekNumber)||!isUndefined(obj.weekYear);if(hasIsoWeekData){throw new ConflictingSpecificationError("Cannot mix locale-based week fields with ISO-based week fields");}
if(!isUndefined(obj.localWeekday))obj.weekday=obj.localWeekday;if(!isUndefined(obj.localWeekNumber))obj.weekNumber=obj.localWeekNumber;if(!isUndefined(obj.localWeekYear))obj.weekYear=obj.localWeekYear;delete obj.localWeekday;delete obj.localWeekNumber;delete obj.localWeekYear;return{minDaysInFirstWeek:loc.getMinDaysInFirstWeek(),startOfWeek:loc.getStartOfWeek(),};}else{return{minDaysInFirstWeek:4,startOfWeek:1};}}
function hasInvalidWeekData(obj,minDaysInFirstWeek=4,startOfWeek=1){const validYear=isInteger(obj.weekYear),validWeek=integerBetween(obj.weekNumber,1,weeksInWeekYear(obj.weekYear,minDaysInFirstWeek,startOfWeek)),validWeekday=integerBetween(obj.weekday,1,7);if(!validYear){return unitOutOfRange("weekYear",obj.weekYear);}else if(!validWeek){return unitOutOfRange("week",obj.weekNumber);}else if(!validWeekday){return unitOutOfRange("weekday",obj.weekday);}else return false;}
function hasInvalidOrdinalData(obj){const validYear=isInteger(obj.year),validOrdinal=integerBetween(obj.ordinal,1,daysInYear(obj.year));if(!validYear){return unitOutOfRange("year",obj.year);}else if(!validOrdinal){return unitOutOfRange("ordinal",obj.ordinal);}else return false;}
function hasInvalidGregorianData(obj){const validYear=isInteger(obj.year),validMonth=integerBetween(obj.month,1,12),validDay=integerBetween(obj.day,1,daysInMonth(obj.year,obj.month));if(!validYear){return unitOutOfRange("year",obj.year);}else if(!validMonth){return unitOutOfRange("month",obj.month);}else if(!validDay){return unitOutOfRange("day",obj.day);}else return false;}
function hasInvalidTimeData(obj){const{hour,minute,second,millisecond}=obj;const validHour=integerBetween(hour,0,23)||(hour===24&&minute===0&&second===0&&millisecond===0),validMinute=integerBetween(minute,0,59),validSecond=integerBetween(second,0,59),validMillisecond=integerBetween(millisecond,0,999);if(!validHour){return unitOutOfRange("hour",hour);}else if(!validMinute){return unitOutOfRange("minute",minute);}else if(!validSecond){return unitOutOfRange("second",second);}else if(!validMillisecond){return unitOutOfRange("millisecond",millisecond);}else return false;}
function isUndefined(o){return typeof o==="undefined";}
function isNumber(o){return typeof o==="number";}
function isInteger(o){return typeof o==="number"&&o%1===0;}
function isString(o){return typeof o==="string";}
function isDate(o){return Object.prototype.toString.call(o)==="[object Date]";}
function hasRelative(){try{return typeof Intl!=="undefined"&&!!Intl.RelativeTimeFormat;}catch(e){return false;}}
function hasLocaleWeekInfo(){try{return(typeof Intl!=="undefined"&&!!Intl.Locale&&("weekInfo"in Intl.Locale.prototype||"getWeekInfo"in Intl.Locale.prototype));}catch(e){return false;}}
function maybeArray(thing){return Array.isArray(thing)?thing:[thing];}
function bestBy(arr,by,compare){if(arr.length===0){return undefined;}
return arr.reduce((best,next)=>{const pair=[by(next),next];if(!best){return pair;}else if(compare(best[0],pair[0])===best[0]){return best;}else{return pair;}},null)[1];}
function pick(obj,keys){return keys.reduce((a,k)=>{a[k]=obj[k];return a;},{});}
function hasOwnProperty(obj,prop){return Object.prototype.hasOwnProperty.call(obj,prop);}
function validateWeekSettings(settings){if(settings==null){return null;}else if(typeof settings!=="object"){throw new InvalidArgumentError("Week settings must be an object");}else{if(!integerBetween(settings.firstDay,1,7)||!integerBetween(settings.minimalDays,1,7)||!Array.isArray(settings.weekend)||settings.weekend.some((v)=>!integerBetween(v,1,7))){throw new InvalidArgumentError("Invalid week settings");}
return{firstDay:settings.firstDay,minimalDays:settings.minimalDays,weekend:Array.from(settings.weekend),};}}
function integerBetween(thing,bottom,top){return isInteger(thing)&&thing>=bottom&&thing<=top;}
function floorMod(x,n){return x-n*Math.floor(x/n);}
function padStart(input,n=2){const isNeg=input<0;let padded;if(isNeg){padded="-"+(""+-input).padStart(n,"0");}else{padded=(""+input).padStart(n,"0");}
return padded;}
function parseInteger(string){if(isUndefined(string)||string===null||string===""){return undefined;}else{return parseInt(string,10);}}
function parseFloating(string){if(isUndefined(string)||string===null||string===""){return undefined;}else{return parseFloat(string);}}
function parseMillis(fraction){if(isUndefined(fraction)||fraction===null||fraction===""){return undefined;}else{const f=parseFloat("0."+fraction)*1000;return Math.floor(f);}}
function roundTo(number,digits,towardZero=false){const factor=10**digits,rounder=towardZero?Math.trunc:Math.round;return rounder(number*factor)/factor;}
function isLeapYear(year){return year%4===0&&(year%100!==0||year%400===0);}
function daysInYear(year){return isLeapYear(year)?366:365;}
function daysInMonth(year,month){const modMonth=floorMod(month-1,12)+1,modYear=year+(month-modMonth)/12;if(modMonth===2){return isLeapYear(modYear)?29:28;}else{return[31,null,31,30,31,30,31,31,30,31,30,31][modMonth-1];}}
function objToLocalTS(obj){let d=Date.UTC(obj.year,obj.month-1,obj.day,obj.hour,obj.minute,obj.second,obj.millisecond);if(obj.year<100&&obj.year>=0){d=new Date(d);d.setUTCFullYear(obj.year,obj.month-1,obj.day);}
return+d;}
function firstWeekOffset(year,minDaysInFirstWeek,startOfWeek){const fwdlw=isoWeekdayToLocal(dayOfWeek(year,1,minDaysInFirstWeek),startOfWeek);return-fwdlw+minDaysInFirstWeek-1;}
function weeksInWeekYear(weekYear,minDaysInFirstWeek=4,startOfWeek=1){const weekOffset=firstWeekOffset(weekYear,minDaysInFirstWeek,startOfWeek);const weekOffsetNext=firstWeekOffset(weekYear+1,minDaysInFirstWeek,startOfWeek);return(daysInYear(weekYear)-weekOffset+weekOffsetNext)/7;}
function untruncateYear(year){if(year>99){return year;}else return year>Settings.twoDigitCutoffYear?1900+year:2000+year;}
function parseZoneInfo(ts,offsetFormat,locale,timeZone=null){const date=new Date(ts),intlOpts={hourCycle:"h23",year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",};if(timeZone){intlOpts.timeZone=timeZone;}
const modified={timeZoneName:offsetFormat,...intlOpts};const parsed=new Intl.DateTimeFormat(locale,modified).formatToParts(date).find((m)=>m.type.toLowerCase()==="timezonename");return parsed?parsed.value:null;}
function signedOffset(offHourStr,offMinuteStr){let offHour=parseInt(offHourStr,10);if(Number.isNaN(offHour)){offHour=0;}
const offMin=parseInt(offMinuteStr,10)||0,offMinSigned=offHour<0||Object.is(offHour,-0)?-offMin:offMin;return offHour*60+offMinSigned;}
function asNumber(value){const numericValue=Number(value);if(typeof value==="boolean"||value===""||Number.isNaN(numericValue))
throw new InvalidArgumentError(`Invalid unit value ${value}`);return numericValue;}
function normalizeObject(obj,normalizer){const normalized={};for(const u in obj){if(hasOwnProperty(obj,u)){const v=obj[u];if(v===undefined||v===null)continue;normalized[normalizer(u)]=asNumber(v);}}
return normalized;}
function formatOffset(offset,format){const hours=Math.trunc(Math.abs(offset/60)),minutes=Math.trunc(Math.abs(offset%60)),sign=offset>=0?"+":"-";switch(format){case"short":return`${sign}${padStart(hours, 2)}:${padStart(minutes, 2)}`;case"narrow":return`${sign}${hours}${minutes > 0 ? `:${minutes}` : ""}`;case"techie":return`${sign}${padStart(hours, 2)}${padStart(minutes, 2)}`;default:throw new RangeError(`Value format ${format} is out of range for property format`);}}
function timeObject(obj){return pick(obj,["hour","minute","second","millisecond"]);}
const monthsLong=["January","February","March","April","May","June","July","August","September","October","November","December",];const monthsShort=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec",];const monthsNarrow=["J","F","M","A","M","J","J","A","S","O","N","D"];function months(length){switch(length){case"narrow":return[...monthsNarrow];case"short":return[...monthsShort];case"long":return[...monthsLong];case"numeric":return["1","2","3","4","5","6","7","8","9","10","11","12"];case"2-digit":return["01","02","03","04","05","06","07","08","09","10","11","12"];default:return null;}}
const weekdaysLong=["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday",];const weekdaysShort=["Mon","Tue","Wed","Thu","Fri","Sat","Sun"];const weekdaysNarrow=["M","T","W","T","F","S","S"];function weekdays(length){switch(length){case"narrow":return[...weekdaysNarrow];case"short":return[...weekdaysShort];case"long":return[...weekdaysLong];case"numeric":return["1","2","3","4","5","6","7"];default:return null;}}
const meridiems=["AM","PM"];const erasLong=["Before Christ","Anno Domini"];const erasShort=["BC","AD"];const erasNarrow=["B","A"];function eras(length){switch(length){case"narrow":return[...erasNarrow];case"short":return[...erasShort];case"long":return[...erasLong];default:return null;}}
function meridiemForDateTime(dt){return meridiems[dt.hour<12?0:1];}
function weekdayForDateTime(dt,length){return weekdays(length)[dt.weekday-1];}
function monthForDateTime(dt,length){return months(length)[dt.month-1];}
function eraForDateTime(dt,length){return eras(length)[dt.year<0?0:1];}
function formatRelativeTime(unit,count,numeric="always",narrow=false){const units={years:["year","yr."],quarters:["quarter","qtr."],months:["month","mo."],weeks:["week","wk."],days:["day","day","days"],hours:["hour","hr."],minutes:["minute","min."],seconds:["second","sec."],};const lastable=["hours","minutes","seconds"].indexOf(unit)===-1;if(numeric==="auto"&&lastable){const isDay=unit==="days";switch(count){case 1:return isDay?"tomorrow":`next ${units[unit][0]}`;case-1:return isDay?"yesterday":`last ${units[unit][0]}`;case 0:return isDay?"today":`this ${units[unit][0]}`;}}
const isInPast=Object.is(count,-0)||count<0,fmtValue=Math.abs(count),singular=fmtValue===1,lilUnits=units[unit],fmtUnit=narrow?singular?lilUnits[1]:lilUnits[2]||lilUnits[1]:singular?units[unit][0]:unit;return isInPast?`${fmtValue} ${fmtUnit} ago`:`in ${fmtValue} ${fmtUnit}`;}
function stringifyTokens(splits,tokenToString){let s="";for(const token of splits){if(token.literal){s+=token.val;}else{s+=tokenToString(token.val);}}
return s;}
const macroTokenToFormatOpts={D:DATE_SHORT,DD:DATE_MED,DDD:DATE_FULL,DDDD:DATE_HUGE,t:TIME_SIMPLE,tt:TIME_WITH_SECONDS,ttt:TIME_WITH_SHORT_OFFSET,tttt:TIME_WITH_LONG_OFFSET,T:TIME_24_SIMPLE,TT:TIME_24_WITH_SECONDS,TTT:TIME_24_WITH_SHORT_OFFSET,TTTT:TIME_24_WITH_LONG_OFFSET,f:DATETIME_SHORT,ff:DATETIME_MED,fff:DATETIME_FULL,ffff:DATETIME_HUGE,F:DATETIME_SHORT_WITH_SECONDS,FF:DATETIME_MED_WITH_SECONDS,FFF:DATETIME_FULL_WITH_SECONDS,FFFF:DATETIME_HUGE_WITH_SECONDS,};class Formatter{static create(locale,opts={}){return new Formatter(locale,opts);}
static parseFormat(fmt){let current=null,currentFull="",bracketed=false;const splits=[];for(let i=0;i<fmt.length;i++){const c=fmt.charAt(i);if(c==="'"){if(currentFull.length>0){splits.push({literal:bracketed||/^\s+$/.test(currentFull),val:currentFull});}
current=null;currentFull="";bracketed=!bracketed;}else if(bracketed){currentFull+=c;}else if(c===current){currentFull+=c;}else{if(currentFull.length>0){splits.push({literal:/^\s+$/.test(currentFull),val:currentFull});}
currentFull=c;current=c;}}
if(currentFull.length>0){splits.push({literal:bracketed||/^\s+$/.test(currentFull),val:currentFull});}
return splits;}
static macroTokenToFormatOpts(token){return macroTokenToFormatOpts[token];}
constructor(locale,formatOpts){this.opts=formatOpts;this.loc=locale;this.systemLoc=null;}
formatWithSystemDefault(dt,opts){if(this.systemLoc===null){this.systemLoc=this.loc.redefaultToSystem();}
const df=this.systemLoc.dtFormatter(dt,{...this.opts,...opts});return df.format();}
dtFormatter(dt,opts={}){return this.loc.dtFormatter(dt,{...this.opts,...opts});}
formatDateTime(dt,opts){return this.dtFormatter(dt,opts).format();}
formatDateTimeParts(dt,opts){return this.dtFormatter(dt,opts).formatToParts();}
formatInterval(interval,opts){const df=this.dtFormatter(interval.start,opts);return df.dtf.formatRange(interval.start.toJSDate(),interval.end.toJSDate());}
resolvedOptions(dt,opts){return this.dtFormatter(dt,opts).resolvedOptions();}
num(n,p=0){if(this.opts.forceSimple){return padStart(n,p);}
const opts={...this.opts};if(p>0){opts.padTo=p;}
return this.loc.numberFormatter(opts).format(n);}
formatDateTimeFromString(dt,fmt){const knownEnglish=this.loc.listingMode()==="en",useDateTimeFormatter=this.loc.outputCalendar&&this.loc.outputCalendar!=="gregory",string=(opts,extract)=>this.loc.extract(dt,opts,extract),formatOffset=(opts)=>{if(dt.isOffsetFixed&&dt.offset===0&&opts.allowZ){return"Z";}
return dt.isValid?dt.zone.formatOffset(dt.ts,opts.format):"";},meridiem=()=>knownEnglish?meridiemForDateTime(dt):string({hour:"numeric",hourCycle:"h12"},"dayperiod"),month=(length,standalone)=>knownEnglish?monthForDateTime(dt,length):string(standalone?{month:length}:{month:length,day:"numeric"},"month"),weekday=(length,standalone)=>knownEnglish?weekdayForDateTime(dt,length):string(standalone?{weekday:length}:{weekday:length,month:"long",day:"numeric"},"weekday"),maybeMacro=(token)=>{const formatOpts=Formatter.macroTokenToFormatOpts(token);if(formatOpts){return this.formatWithSystemDefault(dt,formatOpts);}else{return token;}},era=(length)=>knownEnglish?eraForDateTime(dt,length):string({era:length},"era"),tokenToString=(token)=>{switch(token){case"S":return this.num(dt.millisecond);case"u":case"SSS":return this.num(dt.millisecond,3);case"s":return this.num(dt.second);case"ss":return this.num(dt.second,2);case"uu":return this.num(Math.floor(dt.millisecond/10),2);case"uuu":return this.num(Math.floor(dt.millisecond/100));case"m":return this.num(dt.minute);case"mm":return this.num(dt.minute,2);case"h":return this.num(dt.hour%12===0?12:dt.hour%12);case"hh":return this.num(dt.hour%12===0?12:dt.hour%12,2);case"H":return this.num(dt.hour);case"HH":return this.num(dt.hour,2);case"Z":return formatOffset({format:"narrow",allowZ:this.opts.allowZ});case"ZZ":return formatOffset({format:"short",allowZ:this.opts.allowZ});case"ZZZ":return formatOffset({format:"techie",allowZ:this.opts.allowZ});case"ZZZZ":return dt.zone.offsetName(dt.ts,{format:"short",locale:this.loc.locale});case"ZZZZZ":return dt.zone.offsetName(dt.ts,{format:"long",locale:this.loc.locale});case"z":return dt.zoneName;case"a":return meridiem();case"d":return useDateTimeFormatter?string({day:"numeric"},"day"):this.num(dt.day);case"dd":return useDateTimeFormatter?string({day:"2-digit"},"day"):this.num(dt.day,2);case"c":return this.num(dt.weekday);case"ccc":return weekday("short",true);case"cccc":return weekday("long",true);case"ccccc":return weekday("narrow",true);case"E":return this.num(dt.weekday);case"EEE":return weekday("short",false);case"EEEE":return weekday("long",false);case"EEEEE":return weekday("narrow",false);case"L":return useDateTimeFormatter?string({month:"numeric",day:"numeric"},"month"):this.num(dt.month);case"LL":return useDateTimeFormatter?string({month:"2-digit",day:"numeric"},"month"):this.num(dt.month,2);case"LLL":return month("short",true);case"LLLL":return month("long",true);case"LLLLL":return month("narrow",true);case"M":return useDateTimeFormatter?string({month:"numeric"},"month"):this.num(dt.month);case"MM":return useDateTimeFormatter?string({month:"2-digit"},"month"):this.num(dt.month,2);case"MMM":return month("short",false);case"MMMM":return month("long",false);case"MMMMM":return month("narrow",false);case"y":return useDateTimeFormatter?string({year:"numeric"},"year"):this.num(dt.year);case"yy":return useDateTimeFormatter?string({year:"2-digit"},"year"):this.num(dt.year.toString().slice(-2),2);case"yyyy":return useDateTimeFormatter?string({year:"numeric"},"year"):this.num(dt.year,4);case"yyyyyy":return useDateTimeFormatter?string({year:"numeric"},"year"):this.num(dt.year,6);case"G":return era("short");case"GG":return era("long");case"GGGGG":return era("narrow");case"kk":return this.num(dt.weekYear.toString().slice(-2),2);case"kkkk":return this.num(dt.weekYear,4);case"W":return this.num(dt.weekNumber);case"WW":return this.num(dt.weekNumber,2);case"n":return this.num(dt.localWeekNumber);case"nn":return this.num(dt.localWeekNumber,2);case"ii":return this.num(dt.localWeekYear.toString().slice(-2),2);case"iiii":return this.num(dt.localWeekYear,4);case"o":return this.num(dt.ordinal);case"ooo":return this.num(dt.ordinal,3);case"q":return this.num(dt.quarter);case"qq":return this.num(dt.quarter,2);case"X":return this.num(Math.floor(dt.ts/1000));case"x":return this.num(dt.ts);default:return maybeMacro(token);}};return stringifyTokens(Formatter.parseFormat(fmt),tokenToString);}
formatDurationFromString(dur,fmt){const tokenToField=(token)=>{switch(token[0]){case"S":return"millisecond";case"s":return"second";case"m":return"minute";case"h":return"hour";case"d":return"day";case"w":return"week";case"M":return"month";case"y":return"year";default:return null;}},tokenToString=(lildur)=>(token)=>{const mapped=tokenToField(token);if(mapped){return this.num(lildur.get(mapped),token.length);}else{return token;}},tokens=Formatter.parseFormat(fmt),realTokens=tokens.reduce((found,{literal,val})=>(literal?found:found.concat(val)),[]),collapsed=dur.shiftTo(...realTokens.map(tokenToField).filter((t)=>t));return stringifyTokens(tokens,tokenToString(collapsed));}}
const ianaRegex=/[A-Za-z_+-]{1,256}(?::?\/[A-Za-z0-9_+-]{1,256}(?:\/[A-Za-z0-9_+-]{1,256})?)?/;function combineRegexes(...regexes){const full=regexes.reduce((f,r)=>f+r.source,"");return RegExp(`^${full}$`);}
function combineExtractors(...extractors){return(m)=>extractors.reduce(([mergedVals,mergedZone,cursor],ex)=>{const[val,zone,next]=ex(m,cursor);return[{...mergedVals,...val},zone||mergedZone,next];},[{},null,1]).slice(0,2);}
function parse(s,...patterns){if(s==null){return[null,null];}
for(const[regex,extractor]of patterns){const m=regex.exec(s);if(m){return extractor(m);}}
return[null,null];}
function simpleParse(...keys){return(match,cursor)=>{const ret={};let i;for(i=0;i<keys.length;i++){ret[keys[i]]=parseInteger(match[cursor+i]);}
return[ret,null,cursor+i];};}
const offsetRegex=/(?:(Z)|([+-]\d\d)(?::?(\d\d))?)/;const isoExtendedZone=`(?:${offsetRegex.source}?(?:\\[(${ianaRegex.source})\\])?)?`;const isoTimeBaseRegex=/(\d\d)(?::?(\d\d)(?::?(\d\d)(?:[.,](\d{1,30}))?)?)?/;const isoTimeRegex=RegExp(`${isoTimeBaseRegex.source}${isoExtendedZone}`);const isoTimeExtensionRegex=RegExp(`(?:T${isoTimeRegex.source})?`);const isoYmdRegex=/([+-]\d{6}|\d{4})(?:-?(\d\d)(?:-?(\d\d))?)?/;const isoWeekRegex=/(\d{4})-?W(\d\d)(?:-?(\d))?/;const isoOrdinalRegex=/(\d{4})-?(\d{3})/;const extractISOWeekData=simpleParse("weekYear","weekNumber","weekDay");const extractISOOrdinalData=simpleParse("year","ordinal");const sqlYmdRegex=/(\d{4})-(\d\d)-(\d\d)/;const sqlTimeRegex=RegExp(`${isoTimeBaseRegex.source} ?(?:${offsetRegex.source}|(${ianaRegex.source}))?`);const sqlTimeExtensionRegex=RegExp(`(?: ${sqlTimeRegex.source})?`);function int(match,pos,fallback){const m=match[pos];return isUndefined(m)?fallback:parseInteger(m);}
function extractISOYmd(match,cursor){const item={year:int(match,cursor),month:int(match,cursor+1,1),day:int(match,cursor+2,1),};return[item,null,cursor+3];}
function extractISOTime(match,cursor){const item={hours:int(match,cursor,0),minutes:int(match,cursor+1,0),seconds:int(match,cursor+2,0),milliseconds:parseMillis(match[cursor+3]),};return[item,null,cursor+4];}
function extractISOOffset(match,cursor){const local=!match[cursor]&&!match[cursor+1],fullOffset=signedOffset(match[cursor+1],match[cursor+2]),zone=local?null:FixedOffsetZone.instance(fullOffset);return[{},zone,cursor+3];}
function extractIANAZone(match,cursor){const zone=match[cursor]?IANAZone.create(match[cursor]):null;return[{},zone,cursor+1];}
const isoTimeOnly=RegExp(`^T?${isoTimeBaseRegex.source}$`);const isoDuration=/^-?P(?:(?:(-?\d{1,20}(?:\.\d{1,20})?)Y)?(?:(-?\d{1,20}(?:\.\d{1,20})?)M)?(?:(-?\d{1,20}(?:\.\d{1,20})?)W)?(?:(-?\d{1,20}(?:\.\d{1,20})?)D)?(?:T(?:(-?\d{1,20}(?:\.\d{1,20})?)H)?(?:(-?\d{1,20}(?:\.\d{1,20})?)M)?(?:(-?\d{1,20})(?:[.,](-?\d{1,20}))?S)?)?)$/;function extractISODuration(match){const[s,yearStr,monthStr,weekStr,dayStr,hourStr,minuteStr,secondStr,millisecondsStr]=match;const hasNegativePrefix=s[0]==="-";const negativeSeconds=secondStr&&secondStr[0]==="-";const maybeNegate=(num,force=false)=>num!==undefined&&(force||(num&&hasNegativePrefix))?-num:num;return[{years:maybeNegate(parseFloating(yearStr)),months:maybeNegate(parseFloating(monthStr)),weeks:maybeNegate(parseFloating(weekStr)),days:maybeNegate(parseFloating(dayStr)),hours:maybeNegate(parseFloating(hourStr)),minutes:maybeNegate(parseFloating(minuteStr)),seconds:maybeNegate(parseFloating(secondStr),secondStr==="-0"),milliseconds:maybeNegate(parseMillis(millisecondsStr),negativeSeconds),},];}
const obsOffsets={GMT:0,EDT:-4*60,EST:-5*60,CDT:-5*60,CST:-6*60,MDT:-6*60,MST:-7*60,PDT:-7*60,PST:-8*60,};function fromStrings(weekdayStr,yearStr,monthStr,dayStr,hourStr,minuteStr,secondStr){const result={year:yearStr.length===2?untruncateYear(parseInteger(yearStr)):parseInteger(yearStr),month:monthsShort.indexOf(monthStr)+1,day:parseInteger(dayStr),hour:parseInteger(hourStr),minute:parseInteger(minuteStr),};if(secondStr)result.second=parseInteger(secondStr);if(weekdayStr){result.weekday=weekdayStr.length>3?weekdaysLong.indexOf(weekdayStr)+1:weekdaysShort.indexOf(weekdayStr)+1;}
return result;}
const rfc2822=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|(?:([+-]\d\d)(\d\d)))$/;function extractRFC2822(match){const[,weekdayStr,dayStr,monthStr,yearStr,hourStr,minuteStr,secondStr,obsOffset,milOffset,offHourStr,offMinuteStr,]=match,result=fromStrings(weekdayStr,yearStr,monthStr,dayStr,hourStr,minuteStr,secondStr);let offset;if(obsOffset){offset=obsOffsets[obsOffset];}else if(milOffset){offset=0;}else{offset=signedOffset(offHourStr,offMinuteStr);}
return[result,new FixedOffsetZone(offset)];}
function preprocessRFC2822(s){return s.replace(/\([^()]*\)|[\n\t]/g," ").replace(/(\s\s+)/g," ").trim();}
const rfc1123=/^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\d\d) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\d{4}) (\d\d):(\d\d):(\d\d) GMT$/,rfc850=/^(Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (\d\d)-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\d\d) (\d\d):(\d\d):(\d\d) GMT$/,ascii=/^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( \d|\d\d) (\d\d):(\d\d):(\d\d) (\d{4})$/;function extractRFC1123Or850(match){const[,weekdayStr,dayStr,monthStr,yearStr,hourStr,minuteStr,secondStr]=match,result=fromStrings(weekdayStr,yearStr,monthStr,dayStr,hourStr,minuteStr,secondStr);return[result,FixedOffsetZone.utcInstance];}
function extractASCII(match){const[,weekdayStr,monthStr,dayStr,hourStr,minuteStr,secondStr,yearStr]=match,result=fromStrings(weekdayStr,yearStr,monthStr,dayStr,hourStr,minuteStr,secondStr);return[result,FixedOffsetZone.utcInstance];}
const isoYmdWithTimeExtensionRegex=combineRegexes(isoYmdRegex,isoTimeExtensionRegex);const isoWeekWithTimeExtensionRegex=combineRegexes(isoWeekRegex,isoTimeExtensionRegex);const isoOrdinalWithTimeExtensionRegex=combineRegexes(isoOrdinalRegex,isoTimeExtensionRegex);const isoTimeCombinedRegex=combineRegexes(isoTimeRegex);const extractISOYmdTimeAndOffset=combineExtractors(extractISOYmd,extractISOTime,extractISOOffset,extractIANAZone);const extractISOWeekTimeAndOffset=combineExtractors(extractISOWeekData,extractISOTime,extractISOOffset,extractIANAZone);const extractISOOrdinalDateAndTime=combineExtractors(extractISOOrdinalData,extractISOTime,extractISOOffset,extractIANAZone);const extractISOTimeAndOffset=combineExtractors(extractISOTime,extractISOOffset,extractIANAZone);function parseISODate(s){return parse(s,[isoYmdWithTimeExtensionRegex,extractISOYmdTimeAndOffset],[isoWeekWithTimeExtensionRegex,extractISOWeekTimeAndOffset],[isoOrdinalWithTimeExtensionRegex,extractISOOrdinalDateAndTime],[isoTimeCombinedRegex,extractISOTimeAndOffset]);}
function parseRFC2822Date(s){return parse(preprocessRFC2822(s),[rfc2822,extractRFC2822]);}
function parseHTTPDate(s){return parse(s,[rfc1123,extractRFC1123Or850],[rfc850,extractRFC1123Or850],[ascii,extractASCII]);}
function parseISODuration(s){return parse(s,[isoDuration,extractISODuration]);}
const extractISOTimeOnly=combineExtractors(extractISOTime);function parseISOTimeOnly(s){return parse(s,[isoTimeOnly,extractISOTimeOnly]);}
const sqlYmdWithTimeExtensionRegex=combineRegexes(sqlYmdRegex,sqlTimeExtensionRegex);const sqlTimeCombinedRegex=combineRegexes(sqlTimeRegex);const extractISOTimeOffsetAndIANAZone=combineExtractors(extractISOTime,extractISOOffset,extractIANAZone);function parseSQL(s){return parse(s,[sqlYmdWithTimeExtensionRegex,extractISOYmdTimeAndOffset],[sqlTimeCombinedRegex,extractISOTimeOffsetAndIANAZone]);}
const INVALID$2="Invalid Duration";const lowOrderMatrix={weeks:{days:7,hours:7*24,minutes:7*24*60,seconds:7*24*60*60,milliseconds:7*24*60*60*1000,},days:{hours:24,minutes:24*60,seconds:24*60*60,milliseconds:24*60*60*1000,},hours:{minutes:60,seconds:60*60,milliseconds:60*60*1000},minutes:{seconds:60,milliseconds:60*1000},seconds:{milliseconds:1000},},casualMatrix={years:{quarters:4,months:12,weeks:52,days:365,hours:365*24,minutes:365*24*60,seconds:365*24*60*60,milliseconds:365*24*60*60*1000,},quarters:{months:3,weeks:13,days:91,hours:91*24,minutes:91*24*60,seconds:91*24*60*60,milliseconds:91*24*60*60*1000,},months:{weeks:4,days:30,hours:30*24,minutes:30*24*60,seconds:30*24*60*60,milliseconds:30*24*60*60*1000,},...lowOrderMatrix,},daysInYearAccurate=146097.0/400,daysInMonthAccurate=146097.0/4800,accurateMatrix={years:{quarters:4,months:12,weeks:daysInYearAccurate/7,days:daysInYearAccurate,hours:daysInYearAccurate*24,minutes:daysInYearAccurate*24*60,seconds:daysInYearAccurate*24*60*60,milliseconds:daysInYearAccurate*24*60*60*1000,},quarters:{months:3,weeks:daysInYearAccurate/28,days:daysInYearAccurate/4,hours:(daysInYearAccurate*24)/4,minutes:(daysInYearAccurate*24*60)/4,seconds:(daysInYearAccurate*24*60*60)/4,milliseconds:(daysInYearAccurate*24*60*60*1000)/4,},months:{weeks:daysInMonthAccurate/7,days:daysInMonthAccurate,hours:daysInMonthAccurate*24,minutes:daysInMonthAccurate*24*60,seconds:daysInMonthAccurate*24*60*60,milliseconds:daysInMonthAccurate*24*60*60*1000,},...lowOrderMatrix,};const orderedUnits$1=["years","quarters","months","weeks","days","hours","minutes","seconds","milliseconds",];const reverseUnits=orderedUnits$1.slice(0).reverse();function clone$1(dur,alts,clear=false){const conf={values:clear?alts.values:{...dur.values,...(alts.values||{})},loc:dur.loc.clone(alts.loc),conversionAccuracy:alts.conversionAccuracy||dur.conversionAccuracy,matrix:alts.matrix||dur.matrix,};return new Duration(conf);}
function durationToMillis(matrix,vals){let sum=vals.milliseconds??0;for(const unit of reverseUnits.slice(1)){if(vals[unit]){sum+=vals[unit]*matrix[unit]["milliseconds"];}}
return sum;}
function normalizeValues(matrix,vals){const factor=durationToMillis(matrix,vals)<0?-1:1;orderedUnits$1.reduceRight((previous,current)=>{if(!isUndefined(vals[current])){if(previous){const previousVal=vals[previous]*factor;const conv=matrix[current][previous];const rollUp=Math.floor(previousVal/conv);vals[current]+=rollUp*factor;vals[previous]-=rollUp*conv*factor;}
return current;}else{return previous;}},null);orderedUnits$1.reduce((previous,current)=>{if(!isUndefined(vals[current])){if(previous){const fraction=vals[previous]%1;vals[previous]-=fraction;vals[current]+=fraction*matrix[previous][current];}
return current;}else{return previous;}},null);}
function removeZeroes(vals){const newVals={};for(const[key,value]of Object.entries(vals)){if(value!==0){newVals[key]=value;}}
return newVals;}
class Duration{constructor(config){const accurate=config.conversionAccuracy==="longterm"||false;let matrix=accurate?accurateMatrix:casualMatrix;if(config.matrix){matrix=config.matrix;}
this.values=config.values;this.loc=config.loc||Locale.create();this.conversionAccuracy=accurate?"longterm":"casual";this.invalid=config.invalid||null;this.matrix=matrix;this.isLuxonDuration=true;}
static fromMillis(count,opts){return Duration.fromObject({milliseconds:count},opts);}
static fromObject(obj,opts={}){if(obj==null||typeof obj!=="object"){throw new InvalidArgumentError(`Duration.fromObject: argument expected to be an object, got ${
          obj === null ? "null" : typeof obj
        }`);}
return new Duration({values:normalizeObject(obj,Duration.normalizeUnit),loc:Locale.fromObject(opts),conversionAccuracy:opts.conversionAccuracy,matrix:opts.matrix,});}
static fromDurationLike(durationLike){if(isNumber(durationLike)){return Duration.fromMillis(durationLike);}else if(Duration.isDuration(durationLike)){return durationLike;}else if(typeof durationLike==="object"){return Duration.fromObject(durationLike);}else{throw new InvalidArgumentError(`Unknown duration argument ${durationLike} of type ${typeof durationLike}`);}}
static fromISO(text,opts){const[parsed]=parseISODuration(text);if(parsed){return Duration.fromObject(parsed,opts);}else{return Duration.invalid("unparsable",`the input "${text}" can't be parsed as ISO 8601`);}}
static fromISOTime(text,opts){const[parsed]=parseISOTimeOnly(text);if(parsed){return Duration.fromObject(parsed,opts);}else{return Duration.invalid("unparsable",`the input "${text}" can't be parsed as ISO 8601`);}}
static invalid(reason,explanation=null){if(!reason){throw new InvalidArgumentError("need to specify a reason the Duration is invalid");}
const invalid=reason instanceof Invalid?reason:new Invalid(reason,explanation);if(Settings.throwOnInvalid){throw new InvalidDurationError(invalid);}else{return new Duration({invalid});}}
static normalizeUnit(unit){const normalized={year:"years",years:"years",quarter:"quarters",quarters:"quarters",month:"months",months:"months",week:"weeks",weeks:"weeks",day:"days",days:"days",hour:"hours",hours:"hours",minute:"minutes",minutes:"minutes",second:"seconds",seconds:"seconds",millisecond:"milliseconds",milliseconds:"milliseconds",}[unit?unit.toLowerCase():unit];if(!normalized)throw new InvalidUnitError(unit);return normalized;}
static isDuration(o){return(o&&o.isLuxonDuration)||false;}
get locale(){return this.isValid?this.loc.locale:null;}
get numberingSystem(){return this.isValid?this.loc.numberingSystem:null;}
toFormat(fmt,opts={}){const fmtOpts={...opts,floor:opts.round!==false&&opts.floor!==false,};return this.isValid?Formatter.create(this.loc,fmtOpts).formatDurationFromString(this,fmt):INVALID$2;}
toHuman(opts={}){if(!this.isValid)return INVALID$2;const l=orderedUnits$1.map((unit)=>{const val=this.values[unit];if(isUndefined(val)){return null;}
return this.loc.numberFormatter({style:"unit",unitDisplay:"long",...opts,unit:unit.slice(0,-1)}).format(val);}).filter((n)=>n);return this.loc.listFormatter({type:"conjunction",style:opts.listStyle||"narrow",...opts}).format(l);}
toObject(){if(!this.isValid)return{};return{...this.values};}
toISO(){if(!this.isValid)return null;let s="P";if(this.years!==0)s+=this.years+"Y";if(this.months!==0||this.quarters!==0)s+=this.months+this.quarters*3+"M";if(this.weeks!==0)s+=this.weeks+"W";if(this.days!==0)s+=this.days+"D";if(this.hours!==0||this.minutes!==0||this.seconds!==0||this.milliseconds!==0)
s+="T";if(this.hours!==0)s+=this.hours+"H";if(this.minutes!==0)s+=this.minutes+"M";if(this.seconds!==0||this.milliseconds!==0)
s+=roundTo(this.seconds+this.milliseconds/1000,3)+"S";if(s==="P")s+="T0S";return s;}
toISOTime(opts={}){if(!this.isValid)return null;const millis=this.toMillis();if(millis<0||millis>=86400000)return null;opts={suppressMilliseconds:false,suppressSeconds:false,includePrefix:false,format:"extended",...opts,includeOffset:false,};const dateTime=DateTime.fromMillis(millis,{zone:"UTC"});return dateTime.toISOTime(opts);}
toJSON(){return this.toISO();}
toString(){return this.toISO();}
[Symbol.for("nodejs.util.inspect.custom")](){if(this.isValid){return`Duration { values: ${JSON.stringify(this.values)} }`;}else{return`Duration { Invalid, reason: ${this.invalidReason} }`;}}
toMillis(){if(!this.isValid)return NaN;return durationToMillis(this.matrix,this.values);}
valueOf(){return this.toMillis();}
plus(duration){if(!this.isValid)return this;const dur=Duration.fromDurationLike(duration),result={};for(const k of orderedUnits$1){if(hasOwnProperty(dur.values,k)||hasOwnProperty(this.values,k)){result[k]=dur.get(k)+this.get(k);}}
return clone$1(this,{values:result},true);}
minus(duration){if(!this.isValid)return this;const dur=Duration.fromDurationLike(duration);return this.plus(dur.negate());}
mapUnits(fn){if(!this.isValid)return this;const result={};for(const k of Object.keys(this.values)){result[k]=asNumber(fn(this.values[k],k));}
return clone$1(this,{values:result},true);}
get(unit){return this[Duration.normalizeUnit(unit)];}
set(values){if(!this.isValid)return this;const mixed={...this.values,...normalizeObject(values,Duration.normalizeUnit)};return clone$1(this,{values:mixed});}
reconfigure({locale,numberingSystem,conversionAccuracy,matrix}={}){const loc=this.loc.clone({locale,numberingSystem});const opts={loc,matrix,conversionAccuracy};return clone$1(this,opts);}
as(unit){return this.isValid?this.shiftTo(unit).get(unit):NaN;}
normalize(){if(!this.isValid)return this;const vals=this.toObject();normalizeValues(this.matrix,vals);return clone$1(this,{values:vals},true);}
rescale(){if(!this.isValid)return this;const vals=removeZeroes(this.normalize().shiftToAll().toObject());return clone$1(this,{values:vals},true);}
shiftTo(...units){if(!this.isValid)return this;if(units.length===0){return this;}
units=units.map((u)=>Duration.normalizeUnit(u));const built={},accumulated={},vals=this.toObject();let lastUnit;for(const k of orderedUnits$1){if(units.indexOf(k)>=0){lastUnit=k;let own=0;for(const ak in accumulated){own+=this.matrix[ak][k]*accumulated[ak];accumulated[ak]=0;}
if(isNumber(vals[k])){own+=vals[k];}
const i=Math.trunc(own);built[k]=i;accumulated[k]=(own*1000-i*1000)/1000;}else if(isNumber(vals[k])){accumulated[k]=vals[k];}}
for(const key in accumulated){if(accumulated[key]!==0){built[lastUnit]+=key===lastUnit?accumulated[key]:accumulated[key]/this.matrix[lastUnit][key];}}
normalizeValues(this.matrix,built);return clone$1(this,{values:built},true);}
shiftToAll(){if(!this.isValid)return this;return this.shiftTo("years","months","weeks","days","hours","minutes","seconds","milliseconds");}
negate(){if(!this.isValid)return this;const negated={};for(const k of Object.keys(this.values)){negated[k]=this.values[k]===0?0:-this.values[k];}
return clone$1(this,{values:negated},true);}
get years(){return this.isValid?this.values.years||0:NaN;}
get quarters(){return this.isValid?this.values.quarters||0:NaN;}
get months(){return this.isValid?this.values.months||0:NaN;}
get weeks(){return this.isValid?this.values.weeks||0:NaN;}
get days(){return this.isValid?this.values.days||0:NaN;}
get hours(){return this.isValid?this.values.hours||0:NaN;}
get minutes(){return this.isValid?this.values.minutes||0:NaN;}
get seconds(){return this.isValid?this.values.seconds||0:NaN;}
get milliseconds(){return this.isValid?this.values.milliseconds||0:NaN;}
get isValid(){return this.invalid===null;}
get invalidReason(){return this.invalid?this.invalid.reason:null;}
get invalidExplanation(){return this.invalid?this.invalid.explanation:null;}
equals(other){if(!this.isValid||!other.isValid){return false;}
if(!this.loc.equals(other.loc)){return false;}
function eq(v1,v2){if(v1===undefined||v1===0)return v2===undefined||v2===0;return v1===v2;}
for(const u of orderedUnits$1){if(!eq(this.values[u],other.values[u])){return false;}}
return true;}}
const INVALID$1="Invalid Interval";function validateStartEnd(start,end){if(!start||!start.isValid){return Interval.invalid("missing or invalid start");}else if(!end||!end.isValid){return Interval.invalid("missing or invalid end");}else if(end<start){return Interval.invalid("end before start",`The end of an interval must be after its start, but you had start=${start.toISO()} and end=${end.toISO()}`);}else{return null;}}
class Interval{constructor(config){this.s=config.start;this.e=config.end;this.invalid=config.invalid||null;this.isLuxonInterval=true;}
static invalid(reason,explanation=null){if(!reason){throw new InvalidArgumentError("need to specify a reason the Interval is invalid");}
const invalid=reason instanceof Invalid?reason:new Invalid(reason,explanation);if(Settings.throwOnInvalid){throw new InvalidIntervalError(invalid);}else{return new Interval({invalid});}}
static fromDateTimes(start,end){const builtStart=friendlyDateTime(start),builtEnd=friendlyDateTime(end);const validateError=validateStartEnd(builtStart,builtEnd);if(validateError==null){return new Interval({start:builtStart,end:builtEnd,});}else{return validateError;}}
static after(start,duration){const dur=Duration.fromDurationLike(duration),dt=friendlyDateTime(start);return Interval.fromDateTimes(dt,dt.plus(dur));}
static before(end,duration){const dur=Duration.fromDurationLike(duration),dt=friendlyDateTime(end);return Interval.fromDateTimes(dt.minus(dur),dt);}
static fromISO(text,opts){const[s,e]=(text||"").split("/",2);if(s&&e){let start,startIsValid;try{start=DateTime.fromISO(s,opts);startIsValid=start.isValid;}catch(e){startIsValid=false;}
let end,endIsValid;try{end=DateTime.fromISO(e,opts);endIsValid=end.isValid;}catch(e){endIsValid=false;}
if(startIsValid&&endIsValid){return Interval.fromDateTimes(start,end);}
if(startIsValid){const dur=Duration.fromISO(e,opts);if(dur.isValid){return Interval.after(start,dur);}}else if(endIsValid){const dur=Duration.fromISO(s,opts);if(dur.isValid){return Interval.before(end,dur);}}}
return Interval.invalid("unparsable",`the input "${text}" can't be parsed as ISO 8601`);}
static isInterval(o){return(o&&o.isLuxonInterval)||false;}
get start(){return this.isValid?this.s:null;}
get end(){return this.isValid?this.e:null;}
get isValid(){return this.invalidReason===null;}
get invalidReason(){return this.invalid?this.invalid.reason:null;}
get invalidExplanation(){return this.invalid?this.invalid.explanation:null;}
length(unit="milliseconds"){return this.isValid?this.toDuration(...[unit]).get(unit):NaN;}
count(unit="milliseconds",opts){if(!this.isValid)return NaN;const start=this.start.startOf(unit,opts);let end;if(opts?.useLocaleWeeks){end=this.end.reconfigure({locale:start.locale});}else{end=this.end;}
end=end.startOf(unit,opts);return Math.floor(end.diff(start,unit).get(unit))+(end.valueOf()!==this.end.valueOf());}
hasSame(unit){return this.isValid?this.isEmpty()||this.e.minus(1).hasSame(this.s,unit):false;}
isEmpty(){return this.s.valueOf()===this.e.valueOf();}
isAfter(dateTime){if(!this.isValid)return false;return this.s>dateTime;}
isBefore(dateTime){if(!this.isValid)return false;return this.e<=dateTime;}
contains(dateTime){if(!this.isValid)return false;return this.s<=dateTime&&this.e>dateTime;}
set({start,end}={}){if(!this.isValid)return this;return Interval.fromDateTimes(start||this.s,end||this.e);}
splitAt(...dateTimes){if(!this.isValid)return[];const sorted=dateTimes.map(friendlyDateTime).filter((d)=>this.contains(d)).sort((a,b)=>a.toMillis()-b.toMillis()),results=[];let{s}=this,i=0;while(s<this.e){const added=sorted[i]||this.e,next=+added>+this.e?this.e:added;results.push(Interval.fromDateTimes(s,next));s=next;i+=1;}
return results;}
splitBy(duration){const dur=Duration.fromDurationLike(duration);if(!this.isValid||!dur.isValid||dur.as("milliseconds")===0){return[];}
let{s}=this,idx=1,next;const results=[];while(s<this.e){const added=this.start.plus(dur.mapUnits((x)=>x*idx));next=+added>+this.e?this.e:added;results.push(Interval.fromDateTimes(s,next));s=next;idx+=1;}
return results;}
divideEqually(numberOfParts){if(!this.isValid)return[];return this.splitBy(this.length()/numberOfParts).slice(0,numberOfParts);}
overlaps(other){return this.e>other.s&&this.s<other.e;}
abutsStart(other){if(!this.isValid)return false;return+this.e===+other.s;}
abutsEnd(other){if(!this.isValid)return false;return+other.e===+this.s;}
engulfs(other){if(!this.isValid)return false;return this.s<=other.s&&this.e>=other.e;}
equals(other){if(!this.isValid||!other.isValid){return false;}
return this.s.equals(other.s)&&this.e.equals(other.e);}
intersection(other){if(!this.isValid)return this;const s=this.s>other.s?this.s:other.s,e=this.e<other.e?this.e:other.e;if(s>=e){return null;}else{return Interval.fromDateTimes(s,e);}}
union(other){if(!this.isValid)return this;const s=this.s<other.s?this.s:other.s,e=this.e>other.e?this.e:other.e;return Interval.fromDateTimes(s,e);}
static merge(intervals){const[found,final]=intervals.sort((a,b)=>a.s-b.s).reduce(([sofar,current],item)=>{if(!current){return[sofar,item];}else if(current.overlaps(item)||current.abutsStart(item)){return[sofar,current.union(item)];}else{return[sofar.concat([current]),item];}},[[],null]);if(final){found.push(final);}
return found;}
static xor(intervals){let start=null,currentCount=0;const results=[],ends=intervals.map((i)=>[{time:i.s,type:"s"},{time:i.e,type:"e"},]),flattened=Array.prototype.concat(...ends),arr=flattened.sort((a,b)=>a.time-b.time);for(const i of arr){currentCount+=i.type==="s"?1:-1;if(currentCount===1){start=i.time;}else{if(start&&+start!==+i.time){results.push(Interval.fromDateTimes(start,i.time));}
start=null;}}
return Interval.merge(results);}
difference(...intervals){return Interval.xor([this].concat(intervals)).map((i)=>this.intersection(i)).filter((i)=>i&&!i.isEmpty());}
toString(){if(!this.isValid)return INVALID$1;return`[${this.s.toISO()} – ${this.e.toISO()})`;}
[Symbol.for("nodejs.util.inspect.custom")](){if(this.isValid){return`Interval { start: ${this.s.toISO()}, end: ${this.e.toISO()} }`;}else{return`Interval { Invalid, reason: ${this.invalidReason} }`;}}
toLocaleString(formatOpts=DATE_SHORT,opts={}){return this.isValid?Formatter.create(this.s.loc.clone(opts),formatOpts).formatInterval(this):INVALID$1;}
toISO(opts){if(!this.isValid)return INVALID$1;return`${this.s.toISO(opts)}/${this.e.toISO(opts)}`;}
toISODate(){if(!this.isValid)return INVALID$1;return`${this.s.toISODate()}/${this.e.toISODate()}`;}
toISOTime(opts){if(!this.isValid)return INVALID$1;return`${this.s.toISOTime(opts)}/${this.e.toISOTime(opts)}`;}
toFormat(dateFormat,{separator=" – "}={}){if(!this.isValid)return INVALID$1;return`${this.s.toFormat(dateFormat)}${separator}${this.e.toFormat(dateFormat)}`;}
toDuration(unit,opts){if(!this.isValid){return Duration.invalid(this.invalidReason);}
return this.e.diff(this.s,unit,opts);}
mapEndpoints(mapFn){return Interval.fromDateTimes(mapFn(this.s),mapFn(this.e));}}
class Info{static hasDST(zone=Settings.defaultZone){const proto=DateTime.now().setZone(zone).set({month:12});return!zone.isUniversal&&proto.offset!==proto.set({month:6}).offset;}
static isValidIANAZone(zone){return IANAZone.isValidZone(zone);}
static normalizeZone(input){return normalizeZone(input,Settings.defaultZone);}
static getStartOfWeek({locale=null,locObj=null}={}){return(locObj||Locale.create(locale)).getStartOfWeek();}
static getMinimumDaysInFirstWeek({locale=null,locObj=null}={}){return(locObj||Locale.create(locale)).getMinDaysInFirstWeek();}
static getWeekendWeekdays({locale=null,locObj=null}={}){return(locObj||Locale.create(locale)).getWeekendDays().slice();}
static months(length="long",{locale=null,numberingSystem=null,locObj=null,outputCalendar="gregory"}={}){return(locObj||Locale.create(locale,numberingSystem,outputCalendar)).months(length);}
static monthsFormat(length="long",{locale=null,numberingSystem=null,locObj=null,outputCalendar="gregory"}={}){return(locObj||Locale.create(locale,numberingSystem,outputCalendar)).months(length,true);}
static weekdays(length="long",{locale=null,numberingSystem=null,locObj=null}={}){return(locObj||Locale.create(locale,numberingSystem,null)).weekdays(length);}
static weekdaysFormat(length="long",{locale=null,numberingSystem=null,locObj=null}={}){return(locObj||Locale.create(locale,numberingSystem,null)).weekdays(length,true);}
static meridiems({locale=null}={}){return Locale.create(locale).meridiems();}
static eras(length="short",{locale=null}={}){return Locale.create(locale,null,"gregory").eras(length);}
static features(){return{relative:hasRelative(),localeWeek:hasLocaleWeekInfo()};}}
function dayDiff(earlier,later){const utcDayStart=(dt)=>dt.toUTC(0,{keepLocalTime:true}).startOf("day").valueOf(),ms=utcDayStart(later)-utcDayStart(earlier);return Math.floor(Duration.fromMillis(ms).as("days"));}
function highOrderDiffs(cursor,later,units){const differs=[["years",(a,b)=>b.year-a.year],["quarters",(a,b)=>b.quarter-a.quarter+(b.year-a.year)*4],["months",(a,b)=>b.month-a.month+(b.year-a.year)*12],["weeks",(a,b)=>{const days=dayDiff(a,b);return(days-(days%7))/7;},],["days",dayDiff],];const results={};const earlier=cursor;let lowestOrder,highWater;for(const[unit,differ]of differs){if(units.indexOf(unit)>=0){lowestOrder=unit;results[unit]=differ(cursor,later);highWater=earlier.plus(results);if(highWater>later){results[unit]--;cursor=earlier.plus(results);if(cursor>later){highWater=cursor;results[unit]--;cursor=earlier.plus(results);}}else{cursor=highWater;}}}
return[cursor,results,highWater,lowestOrder];}
function diff(earlier,later,units,opts){let[cursor,results,highWater,lowestOrder]=highOrderDiffs(earlier,later,units);const remainingMillis=later-cursor;const lowerOrderUnits=units.filter((u)=>["hours","minutes","seconds","milliseconds"].indexOf(u)>=0);if(lowerOrderUnits.length===0){if(highWater<later){highWater=cursor.plus({[lowestOrder]:1});}
if(highWater!==cursor){results[lowestOrder]=(results[lowestOrder]||0)+remainingMillis/(highWater-cursor);}}
const duration=Duration.fromObject(results,opts);if(lowerOrderUnits.length>0){return Duration.fromMillis(remainingMillis,opts).shiftTo(...lowerOrderUnits).plus(duration);}else{return duration;}}
const numberingSystems={arab:"[\u0660-\u0669]",arabext:"[\u06F0-\u06F9]",bali:"[\u1B50-\u1B59]",beng:"[\u09E6-\u09EF]",deva:"[\u0966-\u096F]",fullwide:"[\uFF10-\uFF19]",gujr:"[\u0AE6-\u0AEF]",hanidec:"[〇|一|二|三|四|五|六|七|八|九]",khmr:"[\u17E0-\u17E9]",knda:"[\u0CE6-\u0CEF]",laoo:"[\u0ED0-\u0ED9]",limb:"[\u1946-\u194F]",mlym:"[\u0D66-\u0D6F]",mong:"[\u1810-\u1819]",mymr:"[\u1040-\u1049]",orya:"[\u0B66-\u0B6F]",tamldec:"[\u0BE6-\u0BEF]",telu:"[\u0C66-\u0C6F]",thai:"[\u0E50-\u0E59]",tibt:"[\u0F20-\u0F29]",latn:"\\d",};const numberingSystemsUTF16={arab:[1632,1641],arabext:[1776,1785],bali:[6992,7001],beng:[2534,2543],deva:[2406,2415],fullwide:[65296,65303],gujr:[2790,2799],khmr:[6112,6121],knda:[3302,3311],laoo:[3792,3801],limb:[6470,6479],mlym:[3430,3439],mong:[6160,6169],mymr:[4160,4169],orya:[2918,2927],tamldec:[3046,3055],telu:[3174,3183],thai:[3664,3673],tibt:[3872,3881],};const hanidecChars=numberingSystems.hanidec.replace(/[\[|\]]/g,"").split("");function parseDigits(str){let value=parseInt(str,10);if(isNaN(value)){value="";for(let i=0;i<str.length;i++){const code=str.charCodeAt(i);if(str[i].search(numberingSystems.hanidec)!==-1){value+=hanidecChars.indexOf(str[i]);}else{for(const key in numberingSystemsUTF16){const[min,max]=numberingSystemsUTF16[key];if(code>=min&&code<=max){value+=code-min;}}}}
return parseInt(value,10);}else{return value;}}
function digitRegex({numberingSystem},append=""){return new RegExp(`${numberingSystems[numberingSystem || "latn"]}${append}`);}
const MISSING_FTP="missing Intl.DateTimeFormat.formatToParts support";function intUnit(regex,post=(i)=>i){return{regex,deser:([s])=>post(parseDigits(s))};}
const NBSP=String.fromCharCode(160);const spaceOrNBSP=`[ ${NBSP}]`;const spaceOrNBSPRegExp=new RegExp(spaceOrNBSP,"g");function fixListRegex(s){return s.replace(/\./g,"\\.?").replace(spaceOrNBSPRegExp,spaceOrNBSP);}
function stripInsensitivities(s){return s.replace(/\./g,"").replace(spaceOrNBSPRegExp," ").toLowerCase();}
function oneOf(strings,startIndex){if(strings===null){return null;}else{return{regex:RegExp(strings.map(fixListRegex).join("|")),deser:([s])=>strings.findIndex((i)=>stripInsensitivities(s)===stripInsensitivities(i))+startIndex,};}}
function offset(regex,groups){return{regex,deser:([,h,m])=>signedOffset(h,m),groups};}
function simple(regex){return{regex,deser:([s])=>s};}
function escapeToken(value){return value.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&");}
function unitForToken(token,loc){const one=digitRegex(loc),two=digitRegex(loc,"{2}"),three=digitRegex(loc,"{3}"),four=digitRegex(loc,"{4}"),six=digitRegex(loc,"{6}"),oneOrTwo=digitRegex(loc,"{1,2}"),oneToThree=digitRegex(loc,"{1,3}"),oneToSix=digitRegex(loc,"{1,6}"),oneToNine=digitRegex(loc,"{1,9}"),twoToFour=digitRegex(loc,"{2,4}"),fourToSix=digitRegex(loc,"{4,6}"),literal=(t)=>({regex:RegExp(escapeToken(t.val)),deser:([s])=>s,literal:true}),unitate=(t)=>{if(token.literal){return literal(t);}
switch(t.val){case"G":return oneOf(loc.eras("short"),0);case"GG":return oneOf(loc.eras("long"),0);case"y":return intUnit(oneToSix);case"yy":return intUnit(twoToFour,untruncateYear);case"yyyy":return intUnit(four);case"yyyyy":return intUnit(fourToSix);case"yyyyyy":return intUnit(six);case"M":return intUnit(oneOrTwo);case"MM":return intUnit(two);case"MMM":return oneOf(loc.months("short",true),1);case"MMMM":return oneOf(loc.months("long",true),1);case"L":return intUnit(oneOrTwo);case"LL":return intUnit(two);case"LLL":return oneOf(loc.months("short",false),1);case"LLLL":return oneOf(loc.months("long",false),1);case"d":return intUnit(oneOrTwo);case"dd":return intUnit(two);case"o":return intUnit(oneToThree);case"ooo":return intUnit(three);case"HH":return intUnit(two);case"H":return intUnit(oneOrTwo);case"hh":return intUnit(two);case"h":return intUnit(oneOrTwo);case"mm":return intUnit(two);case"m":return intUnit(oneOrTwo);case"q":return intUnit(oneOrTwo);case"qq":return intUnit(two);case"s":return intUnit(oneOrTwo);case"ss":return intUnit(two);case"S":return intUnit(oneToThree);case"SSS":return intUnit(three);case"u":return simple(oneToNine);case"uu":return simple(oneOrTwo);case"uuu":return intUnit(one);case"a":return oneOf(loc.meridiems(),0);case"kkkk":return intUnit(four);case"kk":return intUnit(twoToFour,untruncateYear);case"W":return intUnit(oneOrTwo);case"WW":return intUnit(two);case"E":case"c":return intUnit(one);case"EEE":return oneOf(loc.weekdays("short",false),1);case"EEEE":return oneOf(loc.weekdays("long",false),1);case"ccc":return oneOf(loc.weekdays("short",true),1);case"cccc":return oneOf(loc.weekdays("long",true),1);case"Z":case"ZZ":return offset(new RegExp(`([+-]${oneOrTwo.source})(?::(${two.source}))?`),2);case"ZZZ":return offset(new RegExp(`([+-]${oneOrTwo.source})(${two.source})?`),2);case"z":return simple(/[a-z_+-/]{1,256}?/i);case" ":return simple(/[^\S\n\r]/);default:return literal(t);}};const unit=unitate(token)||{invalidReason:MISSING_FTP,};unit.token=token;return unit;}
const partTypeStyleToTokenVal={year:{"2-digit":"yy",numeric:"yyyyy",},month:{numeric:"M","2-digit":"MM",short:"MMM",long:"MMMM",},day:{numeric:"d","2-digit":"dd",},weekday:{short:"EEE",long:"EEEE",},dayperiod:"a",dayPeriod:"a",hour12:{numeric:"h","2-digit":"hh",},hour24:{numeric:"H","2-digit":"HH",},minute:{numeric:"m","2-digit":"mm",},second:{numeric:"s","2-digit":"ss",},timeZoneName:{long:"ZZZZZ",short:"ZZZ",},};function tokenForPart(part,formatOpts,resolvedOpts){const{type,value}=part;if(type==="literal"){const isSpace=/^\s+$/.test(value);return{literal:!isSpace,val:isSpace?" ":value,};}
const style=formatOpts[type];let actualType=type;if(type==="hour"){if(formatOpts.hour12!=null){actualType=formatOpts.hour12?"hour12":"hour24";}else if(formatOpts.hourCycle!=null){if(formatOpts.hourCycle==="h11"||formatOpts.hourCycle==="h12"){actualType="hour12";}else{actualType="hour24";}}else{actualType=resolvedOpts.hour12?"hour12":"hour24";}}
let val=partTypeStyleToTokenVal[actualType];if(typeof val==="object"){val=val[style];}
if(val){return{literal:false,val,};}
return undefined;}
function buildRegex(units){const re=units.map((u)=>u.regex).reduce((f,r)=>`${f}(${r.source})`,"");return[`^${re}$`,units];}
function match(input,regex,handlers){const matches=input.match(regex);if(matches){const all={};let matchIndex=1;for(const i in handlers){if(hasOwnProperty(handlers,i)){const h=handlers[i],groups=h.groups?h.groups+1:1;if(!h.literal&&h.token){all[h.token.val[0]]=h.deser(matches.slice(matchIndex,matchIndex+groups));}
matchIndex+=groups;}}
return[matches,all];}else{return[matches,{}];}}
function dateTimeFromMatches(matches){const toField=(token)=>{switch(token){case"S":return"millisecond";case"s":return"second";case"m":return"minute";case"h":case"H":return"hour";case"d":return"day";case"o":return"ordinal";case"L":case"M":return"month";case"y":return"year";case"E":case"c":return"weekday";case"W":return"weekNumber";case"k":return"weekYear";case"q":return"quarter";default:return null;}};let zone=null;let specificOffset;if(!isUndefined(matches.z)){zone=IANAZone.create(matches.z);}
if(!isUndefined(matches.Z)){if(!zone){zone=new FixedOffsetZone(matches.Z);}
specificOffset=matches.Z;}
if(!isUndefined(matches.q)){matches.M=(matches.q-1)*3+1;}
if(!isUndefined(matches.h)){if(matches.h<12&&matches.a===1){matches.h+=12;}else if(matches.h===12&&matches.a===0){matches.h=0;}}
if(matches.G===0&&matches.y){matches.y=-matches.y;}
if(!isUndefined(matches.u)){matches.S=parseMillis(matches.u);}
const vals=Object.keys(matches).reduce((r,k)=>{const f=toField(k);if(f){r[f]=matches[k];}
return r;},{});return[vals,zone,specificOffset];}
let dummyDateTimeCache=null;function getDummyDateTime(){if(!dummyDateTimeCache){dummyDateTimeCache=DateTime.fromMillis(1555555555555);}
return dummyDateTimeCache;}
function maybeExpandMacroToken(token,locale){if(token.literal){return token;}
const formatOpts=Formatter.macroTokenToFormatOpts(token.val);const tokens=formatOptsToTokens(formatOpts,locale);if(tokens==null||tokens.includes(undefined)){return token;}
return tokens;}
function expandMacroTokens(tokens,locale){return Array.prototype.concat(...tokens.map((t)=>maybeExpandMacroToken(t,locale)));}
function explainFromTokens(locale,input,format){const tokens=expandMacroTokens(Formatter.parseFormat(format),locale),units=tokens.map((t)=>unitForToken(t,locale)),disqualifyingUnit=units.find((t)=>t.invalidReason);if(disqualifyingUnit){return{input,tokens,invalidReason:disqualifyingUnit.invalidReason};}else{const[regexString,handlers]=buildRegex(units),regex=RegExp(regexString,"i"),[rawMatches,matches]=match(input,regex,handlers),[result,zone,specificOffset]=matches?dateTimeFromMatches(matches):[null,null,undefined];if(hasOwnProperty(matches,"a")&&hasOwnProperty(matches,"H")){throw new ConflictingSpecificationError("Can't include meridiem when specifying 24-hour format");}
return{input,tokens,regex,rawMatches,matches,result,zone,specificOffset};}}
function parseFromTokens(locale,input,format){const{result,zone,specificOffset,invalidReason}=explainFromTokens(locale,input,format);return[result,zone,specificOffset,invalidReason];}
function formatOptsToTokens(formatOpts,locale){if(!formatOpts){return null;}
const formatter=Formatter.create(locale,formatOpts);const df=formatter.dtFormatter(getDummyDateTime());const parts=df.formatToParts();const resolvedOpts=df.resolvedOptions();return parts.map((p)=>tokenForPart(p,formatOpts,resolvedOpts));}
const INVALID="Invalid DateTime";const MAX_DATE=8.64e15;function unsupportedZone(zone){return new Invalid("unsupported zone",`the zone "${zone.name}" is not supported`);}
function possiblyCachedWeekData(dt){if(dt.weekData===null){dt.weekData=gregorianToWeek(dt.c);}
return dt.weekData;}
function possiblyCachedLocalWeekData(dt){if(dt.localWeekData===null){dt.localWeekData=gregorianToWeek(dt.c,dt.loc.getMinDaysInFirstWeek(),dt.loc.getStartOfWeek());}
return dt.localWeekData;}
function clone(inst,alts){const current={ts:inst.ts,zone:inst.zone,c:inst.c,o:inst.o,loc:inst.loc,invalid:inst.invalid,};return new DateTime({...current,...alts,old:current});}
function fixOffset(localTS,o,tz){let utcGuess=localTS-o*60*1000;const o2=tz.offset(utcGuess);if(o===o2){return[utcGuess,o];}
utcGuess-=(o2-o)*60*1000;const o3=tz.offset(utcGuess);if(o2===o3){return[utcGuess,o2];}
return[localTS-Math.min(o2,o3)*60*1000,Math.max(o2,o3)];}
function tsToObj(ts,offset){ts+=offset*60*1000;const d=new Date(ts);return{year:d.getUTCFullYear(),month:d.getUTCMonth()+1,day:d.getUTCDate(),hour:d.getUTCHours(),minute:d.getUTCMinutes(),second:d.getUTCSeconds(),millisecond:d.getUTCMilliseconds(),};}
function objToTS(obj,offset,zone){return fixOffset(objToLocalTS(obj),offset,zone);}
function adjustTime(inst,dur){const oPre=inst.o,year=inst.c.year+Math.trunc(dur.years),month=inst.c.month+Math.trunc(dur.months)+Math.trunc(dur.quarters)*3,c={...inst.c,year,month,day:Math.min(inst.c.day,daysInMonth(year,month))+
Math.trunc(dur.days)+
Math.trunc(dur.weeks)*7,},millisToAdd=Duration.fromObject({years:dur.years-Math.trunc(dur.years),quarters:dur.quarters-Math.trunc(dur.quarters),months:dur.months-Math.trunc(dur.months),weeks:dur.weeks-Math.trunc(dur.weeks),days:dur.days-Math.trunc(dur.days),hours:dur.hours,minutes:dur.minutes,seconds:dur.seconds,milliseconds:dur.milliseconds,}).as("milliseconds"),localTS=objToLocalTS(c);let[ts,o]=fixOffset(localTS,oPre,inst.zone);if(millisToAdd!==0){ts+=millisToAdd;o=inst.zone.offset(ts);}
return{ts,o};}
function parseDataToDateTime(parsed,parsedZone,opts,format,text,specificOffset){const{setZone,zone}=opts;if((parsed&&Object.keys(parsed).length!==0)||parsedZone){const interpretationZone=parsedZone||zone,inst=DateTime.fromObject(parsed,{...opts,zone:interpretationZone,specificOffset,});return setZone?inst:inst.setZone(zone);}else{return DateTime.invalid(new Invalid("unparsable",`the input "${text}" can't be parsed as ${format}`));}}
function toTechFormat(dt,format,allowZ=true){return dt.isValid?Formatter.create(Locale.create("en-US"),{allowZ,forceSimple:true,}).formatDateTimeFromString(dt,format):null;}
function toISODate(o,extended){const longFormat=o.c.year>9999||o.c.year<0;let c="";if(longFormat&&o.c.year>=0)c+="+";c+=padStart(o.c.year,longFormat?6:4);if(extended){c+="-";c+=padStart(o.c.month);c+="-";c+=padStart(o.c.day);}else{c+=padStart(o.c.month);c+=padStart(o.c.day);}
return c;}
function toISOTime(o,extended,suppressSeconds,suppressMilliseconds,includeOffset,extendedZone){let c=padStart(o.c.hour);if(extended){c+=":";c+=padStart(o.c.minute);if(o.c.millisecond!==0||o.c.second!==0||!suppressSeconds){c+=":";}}else{c+=padStart(o.c.minute);}
if(o.c.millisecond!==0||o.c.second!==0||!suppressSeconds){c+=padStart(o.c.second);if(o.c.millisecond!==0||!suppressMilliseconds){c+=".";c+=padStart(o.c.millisecond,3);}}
if(includeOffset){if(o.isOffsetFixed&&o.offset===0&&!extendedZone){c+="Z";}else if(o.o<0){c+="-";c+=padStart(Math.trunc(-o.o/60));c+=":";c+=padStart(Math.trunc(-o.o%60));}else{c+="+";c+=padStart(Math.trunc(o.o/60));c+=":";c+=padStart(Math.trunc(o.o%60));}}
if(extendedZone){c+="["+o.zone.ianaName+"]";}
return c;}
const defaultUnitValues={month:1,day:1,hour:0,minute:0,second:0,millisecond:0,},defaultWeekUnitValues={weekNumber:1,weekday:1,hour:0,minute:0,second:0,millisecond:0,},defaultOrdinalUnitValues={ordinal:1,hour:0,minute:0,second:0,millisecond:0,};const orderedUnits=["year","month","day","hour","minute","second","millisecond"],orderedWeekUnits=["weekYear","weekNumber","weekday","hour","minute","second","millisecond",],orderedOrdinalUnits=["year","ordinal","hour","minute","second","millisecond"];function normalizeUnit(unit){const normalized={year:"year",years:"year",month:"month",months:"month",day:"day",days:"day",hour:"hour",hours:"hour",minute:"minute",minutes:"minute",quarter:"quarter",quarters:"quarter",second:"second",seconds:"second",millisecond:"millisecond",milliseconds:"millisecond",weekday:"weekday",weekdays:"weekday",weeknumber:"weekNumber",weeksnumber:"weekNumber",weeknumbers:"weekNumber",weekyear:"weekYear",weekyears:"weekYear",ordinal:"ordinal",}[unit.toLowerCase()];if(!normalized)throw new InvalidUnitError(unit);return normalized;}
function normalizeUnitWithLocalWeeks(unit){switch(unit.toLowerCase()){case"localweekday":case"localweekdays":return"localWeekday";case"localweeknumber":case"localweeknumbers":return"localWeekNumber";case"localweekyear":case"localweekyears":return"localWeekYear";default:return normalizeUnit(unit);}}
function quickDT(obj,opts){const zone=normalizeZone(opts.zone,Settings.defaultZone),loc=Locale.fromObject(opts),tsNow=Settings.now();let ts,o;if(!isUndefined(obj.year)){for(const u of orderedUnits){if(isUndefined(obj[u])){obj[u]=defaultUnitValues[u];}}
const invalid=hasInvalidGregorianData(obj)||hasInvalidTimeData(obj);if(invalid){return DateTime.invalid(invalid);}
const offsetProvis=zone.offset(tsNow);[ts,o]=objToTS(obj,offsetProvis,zone);}else{ts=tsNow;}
return new DateTime({ts,zone,loc,o});}
function diffRelative(start,end,opts){const round=isUndefined(opts.round)?true:opts.round,format=(c,unit)=>{c=roundTo(c,round||opts.calendary?0:2,true);const formatter=end.loc.clone(opts).relFormatter(opts);return formatter.format(c,unit);},differ=(unit)=>{if(opts.calendary){if(!end.hasSame(start,unit)){return end.startOf(unit).diff(start.startOf(unit),unit).get(unit);}else return 0;}else{return end.diff(start,unit).get(unit);}};if(opts.unit){return format(differ(opts.unit),opts.unit);}
for(const unit of opts.units){const count=differ(unit);if(Math.abs(count)>=1){return format(count,unit);}}
return format(start>end?-0:0,opts.units[opts.units.length-1]);}
function lastOpts(argList){let opts={},args;if(argList.length>0&&typeof argList[argList.length-1]==="object"){opts=argList[argList.length-1];args=Array.from(argList).slice(0,argList.length-1);}else{args=Array.from(argList);}
return[opts,args];}
class DateTime{constructor(config){const zone=config.zone||Settings.defaultZone;let invalid=config.invalid||(Number.isNaN(config.ts)?new Invalid("invalid input"):null)||(!zone.isValid?unsupportedZone(zone):null);this.ts=isUndefined(config.ts)?Settings.now():config.ts;let c=null,o=null;if(!invalid){const unchanged=config.old&&config.old.ts===this.ts&&config.old.zone.equals(zone);if(unchanged){[c,o]=[config.old.c,config.old.o];}else{const ot=zone.offset(this.ts);c=tsToObj(this.ts,ot);invalid=Number.isNaN(c.year)?new Invalid("invalid input"):null;c=invalid?null:c;o=invalid?null:ot;}}
this._zone=zone;this.loc=config.loc||Locale.create();this.invalid=invalid;this.weekData=null;this.localWeekData=null;this.c=c;this.o=o;this.isLuxonDateTime=true;}
static now(){return new DateTime({});}
static local(){const[opts,args]=lastOpts(arguments),[year,month,day,hour,minute,second,millisecond]=args;return quickDT({year,month,day,hour,minute,second,millisecond},opts);}
static utc(){const[opts,args]=lastOpts(arguments),[year,month,day,hour,minute,second,millisecond]=args;opts.zone=FixedOffsetZone.utcInstance;return quickDT({year,month,day,hour,minute,second,millisecond},opts);}
static fromJSDate(date,options={}){const ts=isDate(date)?date.valueOf():NaN;if(Number.isNaN(ts)){return DateTime.invalid("invalid input");}
const zoneToUse=normalizeZone(options.zone,Settings.defaultZone);if(!zoneToUse.isValid){return DateTime.invalid(unsupportedZone(zoneToUse));}
return new DateTime({ts:ts,zone:zoneToUse,loc:Locale.fromObject(options),});}
static fromMillis(milliseconds,options={}){if(!isNumber(milliseconds)){throw new InvalidArgumentError(`fromMillis requires a numerical input, but received a ${typeof milliseconds} with value ${milliseconds}`);}else if(milliseconds<-MAX_DATE||milliseconds>MAX_DATE){return DateTime.invalid("Timestamp out of range");}else{return new DateTime({ts:milliseconds,zone:normalizeZone(options.zone,Settings.defaultZone),loc:Locale.fromObject(options),});}}
static fromSeconds(seconds,options={}){if(!isNumber(seconds)){throw new InvalidArgumentError("fromSeconds requires a numerical input");}else{return new DateTime({ts:seconds*1000,zone:normalizeZone(options.zone,Settings.defaultZone),loc:Locale.fromObject(options),});}}
static fromObject(obj,opts={}){obj=obj||{};const zoneToUse=normalizeZone(opts.zone,Settings.defaultZone);if(!zoneToUse.isValid){return DateTime.invalid(unsupportedZone(zoneToUse));}
const loc=Locale.fromObject(opts);const normalized=normalizeObject(obj,normalizeUnitWithLocalWeeks);const{minDaysInFirstWeek,startOfWeek}=usesLocalWeekValues(normalized,loc);const tsNow=Settings.now(),offsetProvis=!isUndefined(opts.specificOffset)?opts.specificOffset:zoneToUse.offset(tsNow),containsOrdinal=!isUndefined(normalized.ordinal),containsGregorYear=!isUndefined(normalized.year),containsGregorMD=!isUndefined(normalized.month)||!isUndefined(normalized.day),containsGregor=containsGregorYear||containsGregorMD,definiteWeekDef=normalized.weekYear||normalized.weekNumber;if((containsGregor||containsOrdinal)&&definiteWeekDef){throw new ConflictingSpecificationError("Can't mix weekYear/weekNumber units with year/month/day or ordinals");}
if(containsGregorMD&&containsOrdinal){throw new ConflictingSpecificationError("Can't mix ordinal dates with month/day");}
const useWeekData=definiteWeekDef||(normalized.weekday&&!containsGregor);let units,defaultValues,objNow=tsToObj(tsNow,offsetProvis);if(useWeekData){units=orderedWeekUnits;defaultValues=defaultWeekUnitValues;objNow=gregorianToWeek(objNow,minDaysInFirstWeek,startOfWeek);}else if(containsOrdinal){units=orderedOrdinalUnits;defaultValues=defaultOrdinalUnitValues;objNow=gregorianToOrdinal(objNow);}else{units=orderedUnits;defaultValues=defaultUnitValues;}
let foundFirst=false;for(const u of units){const v=normalized[u];if(!isUndefined(v)){foundFirst=true;}else if(foundFirst){normalized[u]=defaultValues[u];}else{normalized[u]=objNow[u];}}
const higherOrderInvalid=useWeekData?hasInvalidWeekData(normalized,minDaysInFirstWeek,startOfWeek):containsOrdinal?hasInvalidOrdinalData(normalized):hasInvalidGregorianData(normalized),invalid=higherOrderInvalid||hasInvalidTimeData(normalized);if(invalid){return DateTime.invalid(invalid);}
const gregorian=useWeekData?weekToGregorian(normalized,minDaysInFirstWeek,startOfWeek):containsOrdinal?ordinalToGregorian(normalized):normalized,[tsFinal,offsetFinal]=objToTS(gregorian,offsetProvis,zoneToUse),inst=new DateTime({ts:tsFinal,zone:zoneToUse,o:offsetFinal,loc,});if(normalized.weekday&&containsGregor&&obj.weekday!==inst.weekday){return DateTime.invalid("mismatched weekday",`you can't specify both a weekday of ${normalized.weekday} and a date of ${inst.toISO()}`);}
if(!inst.isValid){return DateTime.invalid(inst.invalid);}
return inst;}
static fromISO(text,opts={}){const[vals,parsedZone]=parseISODate(text);return parseDataToDateTime(vals,parsedZone,opts,"ISO 8601",text);}
static fromRFC2822(text,opts={}){const[vals,parsedZone]=parseRFC2822Date(text);return parseDataToDateTime(vals,parsedZone,opts,"RFC 2822",text);}
static fromHTTP(text,opts={}){const[vals,parsedZone]=parseHTTPDate(text);return parseDataToDateTime(vals,parsedZone,opts,"HTTP",opts);}
static fromFormat(text,fmt,opts={}){if(isUndefined(text)||isUndefined(fmt)){throw new InvalidArgumentError("fromFormat requires an input string and a format");}
const{locale=null,numberingSystem=null}=opts,localeToUse=Locale.fromOpts({locale,numberingSystem,defaultToEN:true,}),[vals,parsedZone,specificOffset,invalid]=parseFromTokens(localeToUse,text,fmt);if(invalid){return DateTime.invalid(invalid);}else{return parseDataToDateTime(vals,parsedZone,opts,`format ${fmt}`,text,specificOffset);}}
static fromString(text,fmt,opts={}){return DateTime.fromFormat(text,fmt,opts);}
static fromSQL(text,opts={}){const[vals,parsedZone]=parseSQL(text);return parseDataToDateTime(vals,parsedZone,opts,"SQL",text);}
static invalid(reason,explanation=null){if(!reason){throw new InvalidArgumentError("need to specify a reason the DateTime is invalid");}
const invalid=reason instanceof Invalid?reason:new Invalid(reason,explanation);if(Settings.throwOnInvalid){throw new InvalidDateTimeError(invalid);}else{return new DateTime({invalid});}}
static isDateTime(o){return(o&&o.isLuxonDateTime)||false;}
static parseFormatForOpts(formatOpts,localeOpts={}){const tokenList=formatOptsToTokens(formatOpts,Locale.fromObject(localeOpts));return!tokenList?null:tokenList.map((t)=>(t?t.val:null)).join("");}
static expandFormat(fmt,localeOpts={}){const expanded=expandMacroTokens(Formatter.parseFormat(fmt),Locale.fromObject(localeOpts));return expanded.map((t)=>t.val).join("");}
get(unit){return this[unit];}
get isValid(){return this.invalid===null;}
get invalidReason(){return this.invalid?this.invalid.reason:null;}
get invalidExplanation(){return this.invalid?this.invalid.explanation:null;}
get locale(){return this.isValid?this.loc.locale:null;}
get numberingSystem(){return this.isValid?this.loc.numberingSystem:null;}
get outputCalendar(){return this.isValid?this.loc.outputCalendar:null;}
get zone(){return this._zone;}
get zoneName(){return this.isValid?this.zone.name:null;}
get year(){return this.isValid?this.c.year:NaN;}
get quarter(){return this.isValid?Math.ceil(this.c.month/3):NaN;}
get month(){return this.isValid?this.c.month:NaN;}
get day(){return this.isValid?this.c.day:NaN;}
get hour(){return this.isValid?this.c.hour:NaN;}
get minute(){return this.isValid?this.c.minute:NaN;}
get second(){return this.isValid?this.c.second:NaN;}
get millisecond(){return this.isValid?this.c.millisecond:NaN;}
get weekYear(){return this.isValid?possiblyCachedWeekData(this).weekYear:NaN;}
get weekNumber(){return this.isValid?possiblyCachedWeekData(this).weekNumber:NaN;}
get weekday(){return this.isValid?possiblyCachedWeekData(this).weekday:NaN;}
get isWeekend(){return this.isValid&&this.loc.getWeekendDays().includes(this.weekday);}
get localWeekday(){return this.isValid?possiblyCachedLocalWeekData(this).weekday:NaN;}
get localWeekNumber(){return this.isValid?possiblyCachedLocalWeekData(this).weekNumber:NaN;}
get localWeekYear(){return this.isValid?possiblyCachedLocalWeekData(this).weekYear:NaN;}
get ordinal(){return this.isValid?gregorianToOrdinal(this.c).ordinal:NaN;}
get monthShort(){return this.isValid?Info.months("short",{locObj:this.loc})[this.month-1]:null;}
get monthLong(){return this.isValid?Info.months("long",{locObj:this.loc})[this.month-1]:null;}
get weekdayShort(){return this.isValid?Info.weekdays("short",{locObj:this.loc})[this.weekday-1]:null;}
get weekdayLong(){return this.isValid?Info.weekdays("long",{locObj:this.loc})[this.weekday-1]:null;}
get offset(){return this.isValid?+this.o:NaN;}
get offsetNameShort(){if(this.isValid){return this.zone.offsetName(this.ts,{format:"short",locale:this.locale,});}else{return null;}}
get offsetNameLong(){if(this.isValid){return this.zone.offsetName(this.ts,{format:"long",locale:this.locale,});}else{return null;}}
get isOffsetFixed(){return this.isValid?this.zone.isUniversal:null;}
get isInDST(){if(this.isOffsetFixed){return false;}else{return(this.offset>this.set({month:1,day:1}).offset||this.offset>this.set({month:5}).offset);}}
getPossibleOffsets(){if(!this.isValid||this.isOffsetFixed){return[this];}
const dayMs=86400000;const minuteMs=60000;const localTS=objToLocalTS(this.c);const oEarlier=this.zone.offset(localTS-dayMs);const oLater=this.zone.offset(localTS+dayMs);const o1=this.zone.offset(localTS-oEarlier*minuteMs);const o2=this.zone.offset(localTS-oLater*minuteMs);if(o1===o2){return[this];}
const ts1=localTS-o1*minuteMs;const ts2=localTS-o2*minuteMs;const c1=tsToObj(ts1,o1);const c2=tsToObj(ts2,o2);if(c1.hour===c2.hour&&c1.minute===c2.minute&&c1.second===c2.second&&c1.millisecond===c2.millisecond){return[clone(this,{ts:ts1}),clone(this,{ts:ts2})];}
return[this];}
get isInLeapYear(){return isLeapYear(this.year);}
get daysInMonth(){return daysInMonth(this.year,this.month);}
get daysInYear(){return this.isValid?daysInYear(this.year):NaN;}
get weeksInWeekYear(){return this.isValid?weeksInWeekYear(this.weekYear):NaN;}
get weeksInLocalWeekYear(){return this.isValid?weeksInWeekYear(this.localWeekYear,this.loc.getMinDaysInFirstWeek(),this.loc.getStartOfWeek()):NaN;}
resolvedLocaleOptions(opts={}){const{locale,numberingSystem,calendar}=Formatter.create(this.loc.clone(opts),opts).resolvedOptions(this);return{locale,numberingSystem,outputCalendar:calendar};}
toUTC(offset=0,opts={}){return this.setZone(FixedOffsetZone.instance(offset),opts);}
toLocal(){return this.setZone(Settings.defaultZone);}
setZone(zone,{keepLocalTime=false,keepCalendarTime=false}={}){zone=normalizeZone(zone,Settings.defaultZone);if(zone.equals(this.zone)){return this;}else if(!zone.isValid){return DateTime.invalid(unsupportedZone(zone));}else{let newTS=this.ts;if(keepLocalTime||keepCalendarTime){const offsetGuess=zone.offset(this.ts);const asObj=this.toObject();[newTS]=objToTS(asObj,offsetGuess,zone);}
return clone(this,{ts:newTS,zone});}}
reconfigure({locale,numberingSystem,outputCalendar}={}){const loc=this.loc.clone({locale,numberingSystem,outputCalendar});return clone(this,{loc});}
setLocale(locale){return this.reconfigure({locale});}
set(values){if(!this.isValid)return this;const normalized=normalizeObject(values,normalizeUnitWithLocalWeeks);const{minDaysInFirstWeek,startOfWeek}=usesLocalWeekValues(normalized,this.loc);const settingWeekStuff=!isUndefined(normalized.weekYear)||!isUndefined(normalized.weekNumber)||!isUndefined(normalized.weekday),containsOrdinal=!isUndefined(normalized.ordinal),containsGregorYear=!isUndefined(normalized.year),containsGregorMD=!isUndefined(normalized.month)||!isUndefined(normalized.day),containsGregor=containsGregorYear||containsGregorMD,definiteWeekDef=normalized.weekYear||normalized.weekNumber;if((containsGregor||containsOrdinal)&&definiteWeekDef){throw new ConflictingSpecificationError("Can't mix weekYear/weekNumber units with year/month/day or ordinals");}
if(containsGregorMD&&containsOrdinal){throw new ConflictingSpecificationError("Can't mix ordinal dates with month/day");}
let mixed;if(settingWeekStuff){mixed=weekToGregorian({...gregorianToWeek(this.c,minDaysInFirstWeek,startOfWeek),...normalized},minDaysInFirstWeek,startOfWeek);}else if(!isUndefined(normalized.ordinal)){mixed=ordinalToGregorian({...gregorianToOrdinal(this.c),...normalized});}else{mixed={...this.toObject(),...normalized};if(isUndefined(normalized.day)){mixed.day=Math.min(daysInMonth(mixed.year,mixed.month),mixed.day);}}
const[ts,o]=objToTS(mixed,this.o,this.zone);return clone(this,{ts,o});}
plus(duration){if(!this.isValid)return this;const dur=Duration.fromDurationLike(duration);return clone(this,adjustTime(this,dur));}
minus(duration){if(!this.isValid)return this;const dur=Duration.fromDurationLike(duration).negate();return clone(this,adjustTime(this,dur));}
startOf(unit,{useLocaleWeeks=false}={}){if(!this.isValid)return this;const o={},normalizedUnit=Duration.normalizeUnit(unit);switch(normalizedUnit){case"years":o.month=1;case"quarters":case"months":o.day=1;case"weeks":case"days":o.hour=0;case"hours":o.minute=0;case"minutes":o.second=0;case"seconds":o.millisecond=0;break;}
if(normalizedUnit==="weeks"){if(useLocaleWeeks){const startOfWeek=this.loc.getStartOfWeek();const{weekday}=this;if(weekday<startOfWeek){o.weekNumber=this.weekNumber-1;}
o.weekday=startOfWeek;}else{o.weekday=1;}}
if(normalizedUnit==="quarters"){const q=Math.ceil(this.month/3);o.month=(q-1)*3+1;}
return this.set(o);}
endOf(unit,opts){return this.isValid?this.plus({[unit]:1}).startOf(unit,opts).minus(1):this;}
toFormat(fmt,opts={}){return this.isValid?Formatter.create(this.loc.redefaultToEN(opts)).formatDateTimeFromString(this,fmt):INVALID;}
toLocaleString(formatOpts=DATE_SHORT,opts={}){return this.isValid?Formatter.create(this.loc.clone(opts),formatOpts).formatDateTime(this):INVALID;}
toLocaleParts(opts={}){return this.isValid?Formatter.create(this.loc.clone(opts),opts).formatDateTimeParts(this):[];}
toISO({format="extended",suppressSeconds=false,suppressMilliseconds=false,includeOffset=true,extendedZone=false,}={}){if(!this.isValid){return null;}
const ext=format==="extended";let c=toISODate(this,ext);c+="T";c+=toISOTime(this,ext,suppressSeconds,suppressMilliseconds,includeOffset,extendedZone);return c;}
toISODate({format="extended"}={}){if(!this.isValid){return null;}
return toISODate(this,format==="extended");}
toISOWeekDate(){return toTechFormat(this,"kkkk-'W'WW-c");}
toISOTime({suppressMilliseconds=false,suppressSeconds=false,includeOffset=true,includePrefix=false,extendedZone=false,format="extended",}={}){if(!this.isValid){return null;}
let c=includePrefix?"T":"";return(c+
toISOTime(this,format==="extended",suppressSeconds,suppressMilliseconds,includeOffset,extendedZone));}
toRFC2822(){return toTechFormat(this,"EEE, dd LLL yyyy HH:mm:ss ZZZ",false);}
toHTTP(){return toTechFormat(this.toUTC(),"EEE, dd LLL yyyy HH:mm:ss 'GMT'");}
toSQLDate(){if(!this.isValid){return null;}
return toISODate(this,true);}
toSQLTime({includeOffset=true,includeZone=false,includeOffsetSpace=true}={}){let fmt="HH:mm:ss.SSS";if(includeZone||includeOffset){if(includeOffsetSpace){fmt+=" ";}
if(includeZone){fmt+="z";}else if(includeOffset){fmt+="ZZ";}}
return toTechFormat(this,fmt,true);}
toSQL(opts={}){if(!this.isValid){return null;}
return`${this.toSQLDate()} ${this.toSQLTime(opts)}`;}
toString(){return this.isValid?this.toISO():INVALID;}
[Symbol.for("nodejs.util.inspect.custom")](){if(this.isValid){return`DateTime { ts: ${this.toISO()}, zone: ${this.zone.name}, locale: ${this.locale} }`;}else{return`DateTime { Invalid, reason: ${this.invalidReason} }`;}}
valueOf(){return this.toMillis();}
toMillis(){return this.isValid?this.ts:NaN;}
toSeconds(){return this.isValid?this.ts/1000:NaN;}
toUnixInteger(){return this.isValid?Math.floor(this.ts/1000):NaN;}
toJSON(){return this.toISO();}
toBSON(){return this.toJSDate();}
toObject(opts={}){if(!this.isValid)return{};const base={...this.c};if(opts.includeConfig){base.outputCalendar=this.outputCalendar;base.numberingSystem=this.loc.numberingSystem;base.locale=this.loc.locale;}
return base;}
toJSDate(){return new Date(this.isValid?this.ts:NaN);}
diff(otherDateTime,unit="milliseconds",opts={}){if(!this.isValid||!otherDateTime.isValid){return Duration.invalid("created by diffing an invalid DateTime");}
const durOpts={locale:this.locale,numberingSystem:this.numberingSystem,...opts};const units=maybeArray(unit).map(Duration.normalizeUnit),otherIsLater=otherDateTime.valueOf()>this.valueOf(),earlier=otherIsLater?this:otherDateTime,later=otherIsLater?otherDateTime:this,diffed=diff(earlier,later,units,durOpts);return otherIsLater?diffed.negate():diffed;}
diffNow(unit="milliseconds",opts={}){return this.diff(DateTime.now(),unit,opts);}
until(otherDateTime){return this.isValid?Interval.fromDateTimes(this,otherDateTime):this;}
hasSame(otherDateTime,unit,opts){if(!this.isValid)return false;const inputMs=otherDateTime.valueOf();const adjustedToZone=this.setZone(otherDateTime.zone,{keepLocalTime:true});return(adjustedToZone.startOf(unit,opts)<=inputMs&&inputMs<=adjustedToZone.endOf(unit,opts));}
equals(other){return(this.isValid&&other.isValid&&this.valueOf()===other.valueOf()&&this.zone.equals(other.zone)&&this.loc.equals(other.loc));}
toRelative(options={}){if(!this.isValid)return null;const base=options.base||DateTime.fromObject({},{zone:this.zone}),padding=options.padding?(this<base?-options.padding:options.padding):0;let units=["years","months","days","hours","minutes","seconds"];let unit=options.unit;if(Array.isArray(options.unit)){units=options.unit;unit=undefined;}
return diffRelative(base,this.plus(padding),{...options,numeric:"always",units,unit,});}
toRelativeCalendar(options={}){if(!this.isValid)return null;return diffRelative(options.base||DateTime.fromObject({},{zone:this.zone}),this,{...options,numeric:"auto",units:["years","months","days"],calendary:true,});}
static min(...dateTimes){if(!dateTimes.every(DateTime.isDateTime)){throw new InvalidArgumentError("min requires all arguments be DateTimes");}
return bestBy(dateTimes,(i)=>i.valueOf(),Math.min);}
static max(...dateTimes){if(!dateTimes.every(DateTime.isDateTime)){throw new InvalidArgumentError("max requires all arguments be DateTimes");}
return bestBy(dateTimes,(i)=>i.valueOf(),Math.max);}
static fromFormatExplain(text,fmt,options={}){const{locale=null,numberingSystem=null}=options,localeToUse=Locale.fromOpts({locale,numberingSystem,defaultToEN:true,});return explainFromTokens(localeToUse,text,fmt);}
static fromStringExplain(text,fmt,options={}){return DateTime.fromFormatExplain(text,fmt,options);}
static get DATE_SHORT(){return DATE_SHORT;}
static get DATE_MED(){return DATE_MED;}
static get DATE_MED_WITH_WEEKDAY(){return DATE_MED_WITH_WEEKDAY;}
static get DATE_FULL(){return DATE_FULL;}
static get DATE_HUGE(){return DATE_HUGE;}
static get TIME_SIMPLE(){return TIME_SIMPLE;}
static get TIME_WITH_SECONDS(){return TIME_WITH_SECONDS;}
static get TIME_WITH_SHORT_OFFSET(){return TIME_WITH_SHORT_OFFSET;}
static get TIME_WITH_LONG_OFFSET(){return TIME_WITH_LONG_OFFSET;}
static get TIME_24_SIMPLE(){return TIME_24_SIMPLE;}
static get TIME_24_WITH_SECONDS(){return TIME_24_WITH_SECONDS;}
static get TIME_24_WITH_SHORT_OFFSET(){return TIME_24_WITH_SHORT_OFFSET;}
static get TIME_24_WITH_LONG_OFFSET(){return TIME_24_WITH_LONG_OFFSET;}
static get DATETIME_SHORT(){return DATETIME_SHORT;}
static get DATETIME_SHORT_WITH_SECONDS(){return DATETIME_SHORT_WITH_SECONDS;}
static get DATETIME_MED(){return DATETIME_MED;}
static get DATETIME_MED_WITH_SECONDS(){return DATETIME_MED_WITH_SECONDS;}
static get DATETIME_MED_WITH_WEEKDAY(){return DATETIME_MED_WITH_WEEKDAY;}
static get DATETIME_FULL(){return DATETIME_FULL;}
static get DATETIME_FULL_WITH_SECONDS(){return DATETIME_FULL_WITH_SECONDS;}
static get DATETIME_HUGE(){return DATETIME_HUGE;}
static get DATETIME_HUGE_WITH_SECONDS(){return DATETIME_HUGE_WITH_SECONDS;}}
function friendlyDateTime(dateTimeish){if(DateTime.isDateTime(dateTimeish)){return dateTimeish;}else if(dateTimeish&&dateTimeish.valueOf&&isNumber(dateTimeish.valueOf())){return DateTime.fromJSDate(dateTimeish);}else if(dateTimeish&&typeof dateTimeish==="object"){return DateTime.fromObject(dateTimeish);}else{throw new InvalidArgumentError(`Unknown datetime argument: ${dateTimeish}, of type ${typeof dateTimeish}`);}}
const VERSION="3.4.4";exports.DateTime=DateTime;exports.Duration=Duration;exports.FixedOffsetZone=FixedOffsetZone;exports.IANAZone=IANAZone;exports.Info=Info;exports.Interval=Interval;exports.InvalidZone=InvalidZone;exports.Settings=Settings;exports.SystemZone=SystemZone;exports.VERSION=VERSION;exports.Zone=Zone;Object.defineProperty(exports,'__esModule',{value:true});return exports;})({});luxon.DateTime.prototype[Symbol.toStringTag]="LuxonDateTime";luxon.Duration.prototype[Symbol.toStringTag]="LuxonDuration";luxon.Interval.prototype[Symbol.toStringTag]="LuxonInterval";luxon.Settings.prototype[Symbol.toStringTag]="LuxonSettings";luxon.Info.prototype[Symbol.toStringTag]="LuxonInfo";luxon.Zone.prototype[Symbol.toStringTag]="LuxonZone";;

/* /web/static/lib/owl/owl.js */
(function(exports){'use strict';function filterOutModifiersFromData(dataList){dataList=dataList.slice();const modifiers=[];let elm;while((elm=dataList[0])&&typeof elm==="string"){modifiers.push(dataList.shift());}
return{modifiers,data:dataList};}
const config={shouldNormalizeDom:true,mainEventHandler:(data,ev,currentTarget)=>{if(typeof data==="function"){data(ev);}
else if(Array.isArray(data)){data=filterOutModifiersFromData(data).data;data[0](data[1],ev);}
return false;},};class VToggler{constructor(key,child){this.key=key;this.child=child;}
mount(parent,afterNode){this.parentEl=parent;this.child.mount(parent,afterNode);}
moveBeforeDOMNode(node,parent){this.child.moveBeforeDOMNode(node,parent);}
moveBeforeVNode(other,afterNode){this.moveBeforeDOMNode((other&&other.firstNode())||afterNode);}
patch(other,withBeforeRemove){if(this===other){return;}
let child1=this.child;let child2=other.child;if(this.key===other.key){child1.patch(child2,withBeforeRemove);}
else{child2.mount(this.parentEl,child1.firstNode());if(withBeforeRemove){child1.beforeRemove();}
child1.remove();this.child=child2;this.key=other.key;}}
beforeRemove(){this.child.beforeRemove();}
remove(){this.child.remove();}
firstNode(){return this.child.firstNode();}
toString(){return this.child.toString();}}
function toggler(key,child){return new VToggler(key,child);}
class OwlError extends Error{}
const{setAttribute:elemSetAttribute,removeAttribute}=Element.prototype;const tokenList=DOMTokenList.prototype;const tokenListAdd=tokenList.add;const tokenListRemove=tokenList.remove;const isArray=Array.isArray;const{split,trim}=String.prototype;const wordRegexp=/\s+/;function setAttribute(key,value){switch(value){case false:case undefined:removeAttribute.call(this,key);break;case true:elemSetAttribute.call(this,key,"");break;default:elemSetAttribute.call(this,key,value);}}
function createAttrUpdater(attr){return function(value){setAttribute.call(this,attr,value);};}
function attrsSetter(attrs){if(isArray(attrs)){if(attrs[0]==="class"){setClass.call(this,attrs[1]);}
else{setAttribute.call(this,attrs[0],attrs[1]);}}
else{for(let k in attrs){if(k==="class"){setClass.call(this,attrs[k]);}
else{setAttribute.call(this,k,attrs[k]);}}}}
function attrsUpdater(attrs,oldAttrs){if(isArray(attrs)){const name=attrs[0];const val=attrs[1];if(name===oldAttrs[0]){if(val===oldAttrs[1]){return;}
if(name==="class"){updateClass.call(this,val,oldAttrs[1]);}
else{setAttribute.call(this,name,val);}}
else{removeAttribute.call(this,oldAttrs[0]);setAttribute.call(this,name,val);}}
else{for(let k in oldAttrs){if(!(k in attrs)){if(k==="class"){updateClass.call(this,"",oldAttrs[k]);}
else{removeAttribute.call(this,k);}}}
for(let k in attrs){const val=attrs[k];if(val!==oldAttrs[k]){if(k==="class"){updateClass.call(this,val,oldAttrs[k]);}
else{setAttribute.call(this,k,val);}}}}}
function toClassObj(expr){const result={};switch(typeof expr){case"string":const str=trim.call(expr);if(!str){return{};}
let words=split.call(str,wordRegexp);for(let i=0,l=words.length;i<l;i++){result[words[i]]=true;}
return result;case"object":for(let key in expr){const value=expr[key];if(value){key=trim.call(key);if(!key){continue;}
const words=split.call(key,wordRegexp);for(let word of words){result[word]=value;}}}
return result;case"undefined":return{};case"number":return{[expr]:true};default:return{[expr]:true};}}
function setClass(val){val=val===""?{}:toClassObj(val);const cl=this.classList;for(let c in val){tokenListAdd.call(cl,c);}}
function updateClass(val,oldVal){oldVal=oldVal===""?{}:toClassObj(oldVal);val=val===""?{}:toClassObj(val);const cl=this.classList;for(let c in oldVal){if(!(c in val)){tokenListRemove.call(cl,c);}}
for(let c in val){if(!(c in oldVal)){tokenListAdd.call(cl,c);}}}
function batched(callback){let scheduled=false;return async(...args)=>{if(!scheduled){scheduled=true;await Promise.resolve();scheduled=false;callback(...args);}};}
function inOwnerDocument(el){if(!el){return false;}
if(el.ownerDocument.contains(el)){return true;}
const rootNode=el.getRootNode();return rootNode instanceof ShadowRoot&&el.ownerDocument.contains(rootNode.host);}
function validateTarget(target){const document=target&&target.ownerDocument;if(document){const HTMLElement=document.defaultView.HTMLElement;if(target instanceof HTMLElement||target instanceof ShadowRoot){if(!document.body.contains(target instanceof HTMLElement?target:target.host)){throw new OwlError("Cannot mount a component on a detached dom node");}
return;}}
throw new OwlError("Cannot mount component: the target is not a valid DOM element");}
class EventBus extends EventTarget{trigger(name,payload){this.dispatchEvent(new CustomEvent(name,{detail:payload}));}}
function whenReady(fn){return new Promise(function(resolve){if(document.readyState!=="loading"){resolve(true);}
else{document.addEventListener("DOMContentLoaded",resolve,false);}}).then(fn||function(){});}
async function loadFile(url){const result=await fetch(url);if(!result.ok){throw new OwlError("Error while fetching xml templates");}
return await result.text();}
class Markup extends String{}
function markup(value){return new Markup(value);}
function createEventHandler(rawEvent){const eventName=rawEvent.split(".")[0];const capture=rawEvent.includes(".capture");if(rawEvent.includes(".synthetic")){return createSyntheticHandler(eventName,capture);}
else{return createElementHandler(eventName,capture);}}
let nextNativeEventId=1;function createElementHandler(evName,capture=false){let eventKey=`__event__${evName}_${nextNativeEventId++}`;if(capture){eventKey=`${eventKey}_capture`;}
function listener(ev){const currentTarget=ev.currentTarget;if(!currentTarget||!inOwnerDocument(currentTarget))
return;const data=currentTarget[eventKey];if(!data)
return;config.mainEventHandler(data,ev,currentTarget);}
function setup(data){this[eventKey]=data;this.addEventListener(evName,listener,{capture});}
function remove(){delete this[eventKey];this.removeEventListener(evName,listener,{capture});}
function update(data){this[eventKey]=data;}
return{setup,update,remove};}
let nextSyntheticEventId=1;function createSyntheticHandler(evName,capture=false){let eventKey=`__event__synthetic_${evName}`;if(capture){eventKey=`${eventKey}_capture`;}
setupSyntheticEvent(evName,eventKey,capture);const currentId=nextSyntheticEventId++;function setup(data){const _data=this[eventKey]||{};_data[currentId]=data;this[eventKey]=_data;}
function remove(){delete this[eventKey];}
return{setup,update:setup,remove};}
function nativeToSyntheticEvent(eventKey,event){let dom=event.target;while(dom!==null){const _data=dom[eventKey];if(_data){for(const data of Object.values(_data)){const stopped=config.mainEventHandler(data,event,dom);if(stopped)
return;}}
dom=dom.parentNode;}}
const CONFIGURED_SYNTHETIC_EVENTS={};function setupSyntheticEvent(evName,eventKey,capture=false){if(CONFIGURED_SYNTHETIC_EVENTS[eventKey]){return;}
document.addEventListener(evName,(event)=>nativeToSyntheticEvent(eventKey,event),{capture,});CONFIGURED_SYNTHETIC_EVENTS[eventKey]=true;}
const getDescriptor$3=(o,p)=>Object.getOwnPropertyDescriptor(o,p);const nodeProto$4=Node.prototype;const nodeInsertBefore$3=nodeProto$4.insertBefore;const nodeSetTextContent$1=getDescriptor$3(nodeProto$4,"textContent").set;const nodeRemoveChild$3=nodeProto$4.removeChild;class VMulti{constructor(children){this.children=children;}
mount(parent,afterNode){const children=this.children;const l=children.length;const anchors=new Array(l);for(let i=0;i<l;i++){let child=children[i];if(child){child.mount(parent,afterNode);}
else{const childAnchor=document.createTextNode("");anchors[i]=childAnchor;nodeInsertBefore$3.call(parent,childAnchor,afterNode);}}
this.anchors=anchors;this.parentEl=parent;}
moveBeforeDOMNode(node,parent=this.parentEl){this.parentEl=parent;const children=this.children;const anchors=this.anchors;for(let i=0,l=children.length;i<l;i++){let child=children[i];if(child){child.moveBeforeDOMNode(node,parent);}
else{const anchor=anchors[i];nodeInsertBefore$3.call(parent,anchor,node);}}}
moveBeforeVNode(other,afterNode){if(other){const next=other.children[0];afterNode=(next?next.firstNode():other.anchors[0])||null;}
const children=this.children;const parent=this.parentEl;const anchors=this.anchors;for(let i=0,l=children.length;i<l;i++){let child=children[i];if(child){child.moveBeforeVNode(null,afterNode);}
else{const anchor=anchors[i];nodeInsertBefore$3.call(parent,anchor,afterNode);}}}
patch(other,withBeforeRemove){if(this===other){return;}
const children1=this.children;const children2=other.children;const anchors=this.anchors;const parentEl=this.parentEl;for(let i=0,l=children1.length;i<l;i++){const vn1=children1[i];const vn2=children2[i];if(vn1){if(vn2){vn1.patch(vn2,withBeforeRemove);}
else{const afterNode=vn1.firstNode();const anchor=document.createTextNode("");anchors[i]=anchor;nodeInsertBefore$3.call(parentEl,anchor,afterNode);if(withBeforeRemove){vn1.beforeRemove();}
vn1.remove();children1[i]=undefined;}}
else if(vn2){children1[i]=vn2;const anchor=anchors[i];vn2.mount(parentEl,anchor);nodeRemoveChild$3.call(parentEl,anchor);}}}
beforeRemove(){const children=this.children;for(let i=0,l=children.length;i<l;i++){const child=children[i];if(child){child.beforeRemove();}}}
remove(){const parentEl=this.parentEl;if(this.isOnlyChild){nodeSetTextContent$1.call(parentEl,"");}
else{const children=this.children;const anchors=this.anchors;for(let i=0,l=children.length;i<l;i++){const child=children[i];if(child){child.remove();}
else{nodeRemoveChild$3.call(parentEl,anchors[i]);}}}}
firstNode(){const child=this.children[0];return child?child.firstNode():this.anchors[0];}
toString(){return this.children.map((c)=>(c?c.toString():"")).join("");}}
function multi(children){return new VMulti(children);}
const getDescriptor$2=(o,p)=>Object.getOwnPropertyDescriptor(o,p);const nodeProto$3=Node.prototype;const characterDataProto$1=CharacterData.prototype;const nodeInsertBefore$2=nodeProto$3.insertBefore;const characterDataSetData$1=getDescriptor$2(characterDataProto$1,"data").set;const nodeRemoveChild$2=nodeProto$3.removeChild;class VSimpleNode{constructor(text){this.text=text;}
mountNode(node,parent,afterNode){this.parentEl=parent;nodeInsertBefore$2.call(parent,node,afterNode);this.el=node;}
moveBeforeDOMNode(node,parent=this.parentEl){this.parentEl=parent;nodeInsertBefore$2.call(parent,this.el,node);}
moveBeforeVNode(other,afterNode){nodeInsertBefore$2.call(this.parentEl,this.el,other?other.el:afterNode);}
beforeRemove(){}
remove(){nodeRemoveChild$2.call(this.parentEl,this.el);}
firstNode(){return this.el;}
toString(){return this.text;}}
class VText$1 extends VSimpleNode{mount(parent,afterNode){this.mountNode(document.createTextNode(toText(this.text)),parent,afterNode);}
patch(other){const text2=other.text;if(this.text!==text2){characterDataSetData$1.call(this.el,toText(text2));this.text=text2;}}}
class VComment extends VSimpleNode{mount(parent,afterNode){this.mountNode(document.createComment(toText(this.text)),parent,afterNode);}
patch(){}}
function text(str){return new VText$1(str);}
function comment(str){return new VComment(str);}
function toText(value){switch(typeof value){case"string":return value;case"number":return String(value);case"boolean":return value?"true":"false";default:return value||"";}}
const getDescriptor$1=(o,p)=>Object.getOwnPropertyDescriptor(o,p);const nodeProto$2=Node.prototype;const elementProto=Element.prototype;const characterDataProto=CharacterData.prototype;const characterDataSetData=getDescriptor$1(characterDataProto,"data").set;const nodeGetFirstChild=getDescriptor$1(nodeProto$2,"firstChild").get;const nodeGetNextSibling=getDescriptor$1(nodeProto$2,"nextSibling").get;const NO_OP=()=>{};function makePropSetter(name){return function setProp(value){this[name]=value===0?0:value?value.valueOf():"";};}
const cache$1={};function createBlock(str){if(str in cache$1){return cache$1[str];}
const doc=new DOMParser().parseFromString(`<t>${str}</t>`,"text/xml");const node=doc.firstChild.firstChild;if(config.shouldNormalizeDom){normalizeNode(node);}
const tree=buildTree(node);const context=buildContext(tree);const template=tree.el;const Block=buildBlock(template,context);cache$1[str]=Block;return Block;}
function normalizeNode(node){if(node.nodeType===Node.TEXT_NODE){if(!/\S/.test(node.textContent)){node.remove();return;}}
if(node.nodeType===Node.ELEMENT_NODE){if(node.tagName==="pre"){return;}}
for(let i=node.childNodes.length-1;i>=0;--i){normalizeNode(node.childNodes.item(i));}}
function buildTree(node,parent=null,domParentTree=null){switch(node.nodeType){case Node.ELEMENT_NODE:{let currentNS=domParentTree&&domParentTree.currentNS;const tagName=node.tagName;let el=undefined;const info=[];if(tagName.startsWith("block-text-")){const index=parseInt(tagName.slice(11),10);info.push({type:"text",idx:index});el=document.createTextNode("");}
if(tagName.startsWith("block-child-")){if(!domParentTree.isRef){addRef(domParentTree);}
const index=parseInt(tagName.slice(12),10);info.push({type:"child",idx:index});el=document.createTextNode("");}
currentNS||(currentNS=node.namespaceURI);if(!el){el=currentNS?document.createElementNS(currentNS,tagName):document.createElement(tagName);}
if(el instanceof Element){if(!domParentTree){const fragment=document.createElement("template").content;fragment.appendChild(el);}
const attrs=node.attributes;for(let i=0;i<attrs.length;i++){const attrName=attrs[i].name;const attrValue=attrs[i].value;if(attrName.startsWith("block-handler-")){const idx=parseInt(attrName.slice(14),10);info.push({type:"handler",idx,event:attrValue,});}
else if(attrName.startsWith("block-attribute-")){const idx=parseInt(attrName.slice(16),10);info.push({type:"attribute",idx,name:attrValue,tag:tagName,});}
else if(attrName.startsWith("block-property-")){const idx=parseInt(attrName.slice(15),10);info.push({type:"property",idx,name:attrValue,tag:tagName,});}
else if(attrName==="block-attributes"){info.push({type:"attributes",idx:parseInt(attrValue,10),});}
else if(attrName==="block-ref"){info.push({type:"ref",idx:parseInt(attrValue,10),});}
else{el.setAttribute(attrs[i].name,attrValue);}}}
const tree={parent,firstChild:null,nextSibling:null,el,info,refN:0,currentNS,};if(node.firstChild){const childNode=node.childNodes[0];if(node.childNodes.length===1&&childNode.nodeType===Node.ELEMENT_NODE&&childNode.tagName.startsWith("block-child-")){const tagName=childNode.tagName;const index=parseInt(tagName.slice(12),10);info.push({idx:index,type:"child",isOnlyChild:true});}
else{tree.firstChild=buildTree(node.firstChild,tree,tree);el.appendChild(tree.firstChild.el);let curNode=node.firstChild;let curTree=tree.firstChild;while((curNode=curNode.nextSibling)){curTree.nextSibling=buildTree(curNode,curTree,tree);el.appendChild(curTree.nextSibling.el);curTree=curTree.nextSibling;}}}
if(tree.info.length){addRef(tree);}
return tree;}
case Node.TEXT_NODE:case Node.COMMENT_NODE:{const el=node.nodeType===Node.TEXT_NODE?document.createTextNode(node.textContent):document.createComment(node.textContent);return{parent:parent,firstChild:null,nextSibling:null,el,info:[],refN:0,currentNS:null,};}}
throw new OwlError("boom");}
function addRef(tree){tree.isRef=true;do{tree.refN++;}while((tree=tree.parent));}
function parentTree(tree){let parent=tree.parent;while(parent&&parent.nextSibling===tree){tree=parent;parent=parent.parent;}
return parent;}
function buildContext(tree,ctx,fromIdx){if(!ctx){const children=new Array(tree.info.filter((v)=>v.type==="child").length);ctx={collectors:[],locations:[],children,cbRefs:[],refN:tree.refN,refList:[]};fromIdx=0;}
if(tree.refN){const initialIdx=fromIdx;const isRef=tree.isRef;const firstChild=tree.firstChild?tree.firstChild.refN:0;const nextSibling=tree.nextSibling?tree.nextSibling.refN:0;if(isRef){for(let info of tree.info){info.refIdx=initialIdx;}
tree.refIdx=initialIdx;updateCtx(ctx,tree);fromIdx++;}
if(nextSibling){const idx=fromIdx+firstChild;ctx.collectors.push({idx,prevIdx:initialIdx,getVal:nodeGetNextSibling});buildContext(tree.nextSibling,ctx,idx);}
if(firstChild){ctx.collectors.push({idx:fromIdx,prevIdx:initialIdx,getVal:nodeGetFirstChild});buildContext(tree.firstChild,ctx,fromIdx);}}
return ctx;}
function updateCtx(ctx,tree){for(let info of tree.info){switch(info.type){case"text":ctx.locations.push({idx:info.idx,refIdx:info.refIdx,setData:setText,updateData:setText,});break;case"child":if(info.isOnlyChild){ctx.children[info.idx]={parentRefIdx:info.refIdx,isOnlyChild:true,};}
else{ctx.children[info.idx]={parentRefIdx:parentTree(tree).refIdx,afterRefIdx:info.refIdx,};}
break;case"property":{const refIdx=info.refIdx;const setProp=makePropSetter(info.name);ctx.locations.push({idx:info.idx,refIdx,setData:setProp,updateData:setProp,});break;}
case"attribute":{const refIdx=info.refIdx;let updater;let setter;if(info.name==="class"){setter=setClass;updater=updateClass;}
else{setter=createAttrUpdater(info.name);updater=setter;}
ctx.locations.push({idx:info.idx,refIdx,setData:setter,updateData:updater,});break;}
case"attributes":ctx.locations.push({idx:info.idx,refIdx:info.refIdx,setData:attrsSetter,updateData:attrsUpdater,});break;case"handler":{const{setup,update}=createEventHandler(info.event);ctx.locations.push({idx:info.idx,refIdx:info.refIdx,setData:setup,updateData:update,});break;}
case"ref":const index=ctx.cbRefs.push(info.idx)-1;ctx.locations.push({idx:info.idx,refIdx:info.refIdx,setData:makeRefSetter(index,ctx.refList),updateData:NO_OP,});}}}
function buildBlock(template,ctx){let B=createBlockClass(template,ctx);if(ctx.cbRefs.length){const cbRefs=ctx.cbRefs;const refList=ctx.refList;let cbRefsNumber=cbRefs.length;B=class extends B{mount(parent,afterNode){refList.push(new Array(cbRefsNumber));super.mount(parent,afterNode);for(let cbRef of refList.pop()){cbRef();}}
remove(){super.remove();for(let cbRef of cbRefs){let fn=this.data[cbRef];fn(null);}}};}
if(ctx.children.length){B=class extends B{constructor(data,children){super(data);this.children=children;}};B.prototype.beforeRemove=VMulti.prototype.beforeRemove;return(data,children=[])=>new B(data,children);}
return(data)=>new B(data);}
function createBlockClass(template,ctx){const{refN,collectors,children}=ctx;const colN=collectors.length;ctx.locations.sort((a,b)=>a.idx-b.idx);const locations=ctx.locations.map((loc)=>({refIdx:loc.refIdx,setData:loc.setData,updateData:loc.updateData,}));const locN=locations.length;const childN=children.length;const childrenLocs=children;const isDynamic=refN>0;const nodeCloneNode=nodeProto$2.cloneNode;const nodeInsertBefore=nodeProto$2.insertBefore;const elementRemove=elementProto.remove;class Block{constructor(data){this.data=data;}
beforeRemove(){}
remove(){elementRemove.call(this.el);}
firstNode(){return this.el;}
moveBeforeDOMNode(node,parent=this.parentEl){this.parentEl=parent;nodeInsertBefore.call(parent,this.el,node);}
moveBeforeVNode(other,afterNode){nodeInsertBefore.call(this.parentEl,this.el,other?other.el:afterNode);}
toString(){const div=document.createElement("div");this.mount(div,null);return div.innerHTML;}
mount(parent,afterNode){const el=nodeCloneNode.call(template,true);nodeInsertBefore.call(parent,el,afterNode);this.el=el;this.parentEl=parent;}
patch(other,withBeforeRemove){}}
if(isDynamic){Block.prototype.mount=function mount(parent,afterNode){const el=nodeCloneNode.call(template,true);const refs=new Array(refN);this.refs=refs;refs[0]=el;for(let i=0;i<colN;i++){const w=collectors[i];refs[w.idx]=w.getVal.call(refs[w.prevIdx]);}
if(locN){const data=this.data;for(let i=0;i<locN;i++){const loc=locations[i];loc.setData.call(refs[loc.refIdx],data[i]);}}
nodeInsertBefore.call(parent,el,afterNode);if(childN){const children=this.children;for(let i=0;i<childN;i++){const child=children[i];if(child){const loc=childrenLocs[i];const afterNode=loc.afterRefIdx?refs[loc.afterRefIdx]:null;child.isOnlyChild=loc.isOnlyChild;child.mount(refs[loc.parentRefIdx],afterNode);}}}
this.el=el;this.parentEl=parent;};Block.prototype.patch=function patch(other,withBeforeRemove){if(this===other){return;}
const refs=this.refs;if(locN){const data1=this.data;const data2=other.data;for(let i=0;i<locN;i++){const val1=data1[i];const val2=data2[i];if(val1!==val2){const loc=locations[i];loc.updateData.call(refs[loc.refIdx],val2,val1);}}
this.data=data2;}
if(childN){let children1=this.children;const children2=other.children;for(let i=0;i<childN;i++){const child1=children1[i];const child2=children2[i];if(child1){if(child2){child1.patch(child2,withBeforeRemove);}
else{if(withBeforeRemove){child1.beforeRemove();}
child1.remove();children1[i]=undefined;}}
else if(child2){const loc=childrenLocs[i];const afterNode=loc.afterRefIdx?refs[loc.afterRefIdx]:null;child2.mount(refs[loc.parentRefIdx],afterNode);children1[i]=child2;}}}};}
return Block;}
function setText(value){characterDataSetData.call(this,toText(value));}
function makeRefSetter(index,refs){return function setRef(fn){refs[refs.length-1][index]=()=>fn(this);};}
const getDescriptor=(o,p)=>Object.getOwnPropertyDescriptor(o,p);const nodeProto$1=Node.prototype;const nodeInsertBefore$1=nodeProto$1.insertBefore;const nodeAppendChild=nodeProto$1.appendChild;const nodeRemoveChild$1=nodeProto$1.removeChild;const nodeSetTextContent=getDescriptor(nodeProto$1,"textContent").set;class VList{constructor(children){this.children=children;}
mount(parent,afterNode){const children=this.children;const _anchor=document.createTextNode("");this.anchor=_anchor;nodeInsertBefore$1.call(parent,_anchor,afterNode);const l=children.length;if(l){const mount=children[0].mount;for(let i=0;i<l;i++){mount.call(children[i],parent,_anchor);}}
this.parentEl=parent;}
moveBeforeDOMNode(node,parent=this.parentEl){this.parentEl=parent;const children=this.children;for(let i=0,l=children.length;i<l;i++){children[i].moveBeforeDOMNode(node,parent);}
parent.insertBefore(this.anchor,node);}
moveBeforeVNode(other,afterNode){if(other){const next=other.children[0];afterNode=(next?next.firstNode():other.anchor)||null;}
const children=this.children;for(let i=0,l=children.length;i<l;i++){children[i].moveBeforeVNode(null,afterNode);}
this.parentEl.insertBefore(this.anchor,afterNode);}
patch(other,withBeforeRemove){if(this===other){return;}
const ch1=this.children;const ch2=other.children;if(ch2.length===0&&ch1.length===0){return;}
this.children=ch2;const proto=ch2[0]||ch1[0];const{mount:cMount,patch:cPatch,remove:cRemove,beforeRemove,moveBeforeVNode:cMoveBefore,firstNode:cFirstNode,}=proto;const _anchor=this.anchor;const isOnlyChild=this.isOnlyChild;const parent=this.parentEl;if(ch2.length===0&&isOnlyChild){if(withBeforeRemove){for(let i=0,l=ch1.length;i<l;i++){beforeRemove.call(ch1[i]);}}
nodeSetTextContent.call(parent,"");nodeAppendChild.call(parent,_anchor);return;}
let startIdx1=0;let startIdx2=0;let startVn1=ch1[0];let startVn2=ch2[0];let endIdx1=ch1.length-1;let endIdx2=ch2.length-1;let endVn1=ch1[endIdx1];let endVn2=ch2[endIdx2];let mapping=undefined;while(startIdx1<=endIdx1&&startIdx2<=endIdx2){if(startVn1===null){startVn1=ch1[++startIdx1];continue;}
if(endVn1===null){endVn1=ch1[--endIdx1];continue;}
let startKey1=startVn1.key;let startKey2=startVn2.key;if(startKey1===startKey2){cPatch.call(startVn1,startVn2,withBeforeRemove);ch2[startIdx2]=startVn1;startVn1=ch1[++startIdx1];startVn2=ch2[++startIdx2];continue;}
let endKey1=endVn1.key;let endKey2=endVn2.key;if(endKey1===endKey2){cPatch.call(endVn1,endVn2,withBeforeRemove);ch2[endIdx2]=endVn1;endVn1=ch1[--endIdx1];endVn2=ch2[--endIdx2];continue;}
if(startKey1===endKey2){cPatch.call(startVn1,endVn2,withBeforeRemove);ch2[endIdx2]=startVn1;const nextChild=ch2[endIdx2+1];cMoveBefore.call(startVn1,nextChild,_anchor);startVn1=ch1[++startIdx1];endVn2=ch2[--endIdx2];continue;}
if(endKey1===startKey2){cPatch.call(endVn1,startVn2,withBeforeRemove);ch2[startIdx2]=endVn1;const nextChild=ch1[startIdx1];cMoveBefore.call(endVn1,nextChild,_anchor);endVn1=ch1[--endIdx1];startVn2=ch2[++startIdx2];continue;}
mapping=mapping||createMapping(ch1,startIdx1,endIdx1);let idxInOld=mapping[startKey2];if(idxInOld===undefined){cMount.call(startVn2,parent,cFirstNode.call(startVn1)||null);}
else{const elmToMove=ch1[idxInOld];cMoveBefore.call(elmToMove,startVn1,null);cPatch.call(elmToMove,startVn2,withBeforeRemove);ch2[startIdx2]=elmToMove;ch1[idxInOld]=null;}
startVn2=ch2[++startIdx2];}
if(startIdx1<=endIdx1||startIdx2<=endIdx2){if(startIdx1>endIdx1){const nextChild=ch2[endIdx2+1];const anchor=nextChild?cFirstNode.call(nextChild)||null:_anchor;for(let i=startIdx2;i<=endIdx2;i++){cMount.call(ch2[i],parent,anchor);}}
else{for(let i=startIdx1;i<=endIdx1;i++){let ch=ch1[i];if(ch){if(withBeforeRemove){beforeRemove.call(ch);}
cRemove.call(ch);}}}}}
beforeRemove(){const children=this.children;const l=children.length;if(l){const beforeRemove=children[0].beforeRemove;for(let i=0;i<l;i++){beforeRemove.call(children[i]);}}}
remove(){const{parentEl,anchor}=this;if(this.isOnlyChild){nodeSetTextContent.call(parentEl,"");}
else{const children=this.children;const l=children.length;if(l){const remove=children[0].remove;for(let i=0;i<l;i++){remove.call(children[i]);}}
nodeRemoveChild$1.call(parentEl,anchor);}}
firstNode(){const child=this.children[0];return child?child.firstNode():undefined;}
toString(){return this.children.map((c)=>c.toString()).join("");}}
function list(children){return new VList(children);}
function createMapping(ch1,startIdx1,endIdx2){let mapping={};for(let i=startIdx1;i<=endIdx2;i++){mapping[ch1[i].key]=i;}
return mapping;}
const nodeProto=Node.prototype;const nodeInsertBefore=nodeProto.insertBefore;const nodeRemoveChild=nodeProto.removeChild;class VHtml{constructor(html){this.content=[];this.html=html;}
mount(parent,afterNode){this.parentEl=parent;const template=document.createElement("template");template.innerHTML=this.html;this.content=[...template.content.childNodes];for(let elem of this.content){nodeInsertBefore.call(parent,elem,afterNode);}
if(!this.content.length){const textNode=document.createTextNode("");this.content.push(textNode);nodeInsertBefore.call(parent,textNode,afterNode);}}
moveBeforeDOMNode(node,parent=this.parentEl){this.parentEl=parent;for(let elem of this.content){nodeInsertBefore.call(parent,elem,node);}}
moveBeforeVNode(other,afterNode){const target=other?other.content[0]:afterNode;this.moveBeforeDOMNode(target);}
patch(other){if(this===other){return;}
const html2=other.html;if(this.html!==html2){const parent=this.parentEl;const afterNode=this.content[0];const template=document.createElement("template");template.innerHTML=html2;const content=[...template.content.childNodes];for(let elem of content){nodeInsertBefore.call(parent,elem,afterNode);}
if(!content.length){const textNode=document.createTextNode("");content.push(textNode);nodeInsertBefore.call(parent,textNode,afterNode);}
this.remove();this.content=content;this.html=other.html;}}
beforeRemove(){}
remove(){const parent=this.parentEl;for(let elem of this.content){nodeRemoveChild.call(parent,elem);}}
firstNode(){return this.content[0];}
toString(){return this.html;}}
function html(str){return new VHtml(str);}
function createCatcher(eventsSpec){const n=Object.keys(eventsSpec).length;class VCatcher{constructor(child,handlers){this.handlerFns=[];this.afterNode=null;this.child=child;this.handlerData=handlers;}
mount(parent,afterNode){this.parentEl=parent;this.child.mount(parent,afterNode);this.afterNode=document.createTextNode("");parent.insertBefore(this.afterNode,afterNode);this.wrapHandlerData();for(let name in eventsSpec){const index=eventsSpec[name];const handler=createEventHandler(name);this.handlerFns[index]=handler;handler.setup.call(parent,this.handlerData[index]);}}
wrapHandlerData(){for(let i=0;i<n;i++){let handler=this.handlerData[i];let idx=handler.length-2;let origFn=handler[idx];const self=this;handler[idx]=function(ev){const target=ev.target;let currentNode=self.child.firstNode();const afterNode=self.afterNode;while(currentNode&&currentNode!==afterNode){if(currentNode.contains(target)){return origFn.call(this,ev);}
currentNode=currentNode.nextSibling;}};}}
moveBeforeDOMNode(node,parent=this.parentEl){this.parentEl=parent;this.child.moveBeforeDOMNode(node,parent);parent.insertBefore(this.afterNode,node);}
moveBeforeVNode(other,afterNode){if(other){afterNode=other.firstNode()||afterNode;}
this.child.moveBeforeVNode(other?other.child:null,afterNode);this.parentEl.insertBefore(this.afterNode,afterNode);}
patch(other,withBeforeRemove){if(this===other){return;}
this.handlerData=other.handlerData;this.wrapHandlerData();for(let i=0;i<n;i++){this.handlerFns[i].update.call(this.parentEl,this.handlerData[i]);}
this.child.patch(other.child,withBeforeRemove);}
beforeRemove(){this.child.beforeRemove();}
remove(){for(let i=0;i<n;i++){this.handlerFns[i].remove.call(this.parentEl);}
this.child.remove();this.afterNode.remove();}
firstNode(){return this.child.firstNode();}
toString(){return this.child.toString();}}
return function(child,handlers){return new VCatcher(child,handlers);};}
function mount$1(vnode,fixture,afterNode=null){vnode.mount(fixture,afterNode);}
function patch(vnode1,vnode2,withBeforeRemove=false){vnode1.patch(vnode2,withBeforeRemove);}
function remove(vnode,withBeforeRemove=false){if(withBeforeRemove){vnode.beforeRemove();}
vnode.remove();}
const fibersInError=new WeakMap();const nodeErrorHandlers=new WeakMap();function _handleError(node,error){if(!node){return false;}
const fiber=node.fiber;if(fiber){fibersInError.set(fiber,error);}
const errorHandlers=nodeErrorHandlers.get(node);if(errorHandlers){let handled=false;for(let i=errorHandlers.length-1;i>=0;i--){try{errorHandlers[i](error);handled=true;break;}
catch(e){error=e;}}
if(handled){return true;}}
return _handleError(node.parent,error);}
function handleError(params){let{error}=params;if(!(error instanceof OwlError)){error=Object.assign(new OwlError(`An error occured in the owl lifecycle (see this Error's "cause" property)`),{cause:error});}
const node="node"in params?params.node:params.fiber.node;const fiber="fiber"in params?params.fiber:node.fiber;if(fiber){let current=fiber;do{current.node.fiber=current;current=current.parent;}while(current);fibersInError.set(fiber.root,error);}
const handled=_handleError(node,error);if(!handled){console.warn(`[Owl] Unhandled error. Destroying the root component`);try{node.app.destroy();}
catch(e){console.error(e);}
throw error;}}
function makeChildFiber(node,parent){let current=node.fiber;if(current){cancelFibers(current.children);current.root=null;}
return new Fiber(node,parent);}
function makeRootFiber(node){let current=node.fiber;if(current){let root=current.root;root.locked=true;root.setCounter(root.counter+1-cancelFibers(current.children));root.locked=false;current.children=[];current.childrenMap={};current.bdom=null;if(fibersInError.has(current)){fibersInError.delete(current);fibersInError.delete(root);current.appliedToDom=false;if(current instanceof RootFiber){current.mounted=current instanceof MountFiber?[current]:[];}}
return current;}
const fiber=new RootFiber(node,null);if(node.willPatch.length){fiber.willPatch.push(fiber);}
if(node.patched.length){fiber.patched.push(fiber);}
return fiber;}
function throwOnRender(){throw new OwlError("Attempted to render cancelled fiber");}
function cancelFibers(fibers){let result=0;for(let fiber of fibers){let node=fiber.node;fiber.render=throwOnRender;if(node.status===0){node.cancel();}
node.fiber=null;if(fiber.bdom){node.forceNextRender=true;}
else{result++;}
result+=cancelFibers(fiber.children);}
return result;}
class Fiber{constructor(node,parent){this.bdom=null;this.children=[];this.appliedToDom=false;this.deep=false;this.childrenMap={};this.node=node;this.parent=parent;if(parent){this.deep=parent.deep;const root=parent.root;root.setCounter(root.counter+1);this.root=root;parent.children.push(this);}
else{this.root=this;}}
render(){let prev=this.root.node;let scheduler=prev.app.scheduler;let current=prev.parent;while(current){if(current.fiber){let root=current.fiber.root;if(root.counter===0&&prev.parentKey in current.fiber.childrenMap){current=root.node;}
else{scheduler.delayedRenders.push(this);return;}}
prev=current;current=current.parent;}
this._render();}
_render(){const node=this.node;const root=this.root;if(root){try{this.bdom=true;this.bdom=node.renderFn();}
catch(e){node.app.handleError({node,error:e});}
root.setCounter(root.counter-1);}}}
class RootFiber extends Fiber{constructor(){super(...arguments);this.counter=1;this.willPatch=[];this.patched=[];this.mounted=[];this.locked=false;}
complete(){const node=this.node;this.locked=true;let current=undefined;let mountedFibers=this.mounted;try{for(current of this.willPatch){let node=current.node;if(node.fiber===current){const component=node.component;for(let cb of node.willPatch){cb.call(component);}}}
current=undefined;node._patch();this.locked=false;while((current=mountedFibers.pop())){current=current;if(current.appliedToDom){for(let cb of current.node.mounted){cb();}}}
let patchedFibers=this.patched;while((current=patchedFibers.pop())){current=current;if(current.appliedToDom){for(let cb of current.node.patched){cb();}}}}
catch(e){for(let fiber of mountedFibers){fiber.node.willUnmount=[];}
this.locked=false;node.app.handleError({fiber:current||this,error:e});}}
setCounter(newValue){this.counter=newValue;if(newValue===0){this.node.app.scheduler.flush();}}}
class MountFiber extends RootFiber{constructor(node,target,options={}){super(node,null);this.target=target;this.position=options.position||"last-child";}
complete(){let current=this;try{const node=this.node;node.children=this.childrenMap;node.app.constructor.validateTarget(this.target);if(node.bdom){node.updateDom();}
else{node.bdom=this.bdom;if(this.position==="last-child"||this.target.childNodes.length===0){mount$1(node.bdom,this.target);}
else{const firstChild=this.target.childNodes[0];mount$1(node.bdom,this.target,firstChild);}}
node.fiber=null;node.status=1;this.appliedToDom=true;let mountedFibers=this.mounted;while((current=mountedFibers.pop())){if(current.appliedToDom){for(let cb of current.node.mounted){cb();}}}}
catch(e){this.node.app.handleError({fiber:current,error:e});}}}
const KEYCHANGES=Symbol("Key changes");const NO_CALLBACK=()=>{throw new Error("Called NO_CALLBACK. Owl is broken, please report this to the maintainers.");};const objectToString=Object.prototype.toString;const objectHasOwnProperty=Object.prototype.hasOwnProperty;const SUPPORTED_RAW_TYPES=["Object","Array","Set","Map","WeakMap"];const COLLECTION_RAW_TYPES=["Set","Map","WeakMap"];function rawType(obj){return objectToString.call(toRaw(obj)).slice(8,-1);}
function canBeMadeReactive(value){if(typeof value!=="object"){return false;}
return SUPPORTED_RAW_TYPES.includes(rawType(value));}
function possiblyReactive(val,cb){return canBeMadeReactive(val)?reactive(val,cb):val;}
const skipped=new WeakSet();function markRaw(value){skipped.add(value);return value;}
function toRaw(value){return targets.has(value)?targets.get(value):value;}
const targetToKeysToCallbacks=new WeakMap();function observeTargetKey(target,key,callback){if(callback===NO_CALLBACK){return;}
if(!targetToKeysToCallbacks.get(target)){targetToKeysToCallbacks.set(target,new Map());}
const keyToCallbacks=targetToKeysToCallbacks.get(target);if(!keyToCallbacks.get(key)){keyToCallbacks.set(key,new Set());}
keyToCallbacks.get(key).add(callback);if(!callbacksToTargets.has(callback)){callbacksToTargets.set(callback,new Set());}
callbacksToTargets.get(callback).add(target);}
function notifyReactives(target,key){const keyToCallbacks=targetToKeysToCallbacks.get(target);if(!keyToCallbacks){return;}
const callbacks=keyToCallbacks.get(key);if(!callbacks){return;}
for(const callback of[...callbacks]){clearReactivesForCallback(callback);callback();}}
const callbacksToTargets=new WeakMap();function clearReactivesForCallback(callback){const targetsToClear=callbacksToTargets.get(callback);if(!targetsToClear){return;}
for(const target of targetsToClear){const observedKeys=targetToKeysToCallbacks.get(target);if(!observedKeys){continue;}
for(const[key,callbacks]of observedKeys.entries()){callbacks.delete(callback);if(!callbacks.size){observedKeys.delete(key);}}}
targetsToClear.clear();}
function getSubscriptions(callback){const targets=callbacksToTargets.get(callback)||[];return[...targets].map((target)=>{const keysToCallbacks=targetToKeysToCallbacks.get(target);let keys=[];if(keysToCallbacks){for(const[key,cbs]of keysToCallbacks){if(cbs.has(callback)){keys.push(key);}}}
return{target,keys};});}
const targets=new WeakMap();const reactiveCache=new WeakMap();function reactive(target,callback=NO_CALLBACK){if(!canBeMadeReactive(target)){throw new OwlError(`Cannot make the given value reactive`);}
if(skipped.has(target)){return target;}
if(targets.has(target)){return reactive(targets.get(target),callback);}
if(!reactiveCache.has(target)){reactiveCache.set(target,new WeakMap());}
const reactivesForTarget=reactiveCache.get(target);if(!reactivesForTarget.has(callback)){const targetRawType=rawType(target);const handler=COLLECTION_RAW_TYPES.includes(targetRawType)?collectionsProxyHandler(target,callback,targetRawType):basicProxyHandler(callback);const proxy=new Proxy(target,handler);reactivesForTarget.set(callback,proxy);targets.set(proxy,target);}
return reactivesForTarget.get(callback);}
function basicProxyHandler(callback){return{get(target,key,receiver){const desc=Object.getOwnPropertyDescriptor(target,key);if(desc&&!desc.writable&&!desc.configurable){return Reflect.get(target,key,receiver);}
observeTargetKey(target,key,callback);return possiblyReactive(Reflect.get(target,key,receiver),callback);},set(target,key,value,receiver){const hadKey=objectHasOwnProperty.call(target,key);const originalValue=Reflect.get(target,key,receiver);const ret=Reflect.set(target,key,toRaw(value),receiver);if(!hadKey&&objectHasOwnProperty.call(target,key)){notifyReactives(target,KEYCHANGES);}
if(originalValue!==Reflect.get(target,key,receiver)||(key==="length"&&Array.isArray(target))){notifyReactives(target,key);}
return ret;},deleteProperty(target,key){const ret=Reflect.deleteProperty(target,key);notifyReactives(target,KEYCHANGES);notifyReactives(target,key);return ret;},ownKeys(target){observeTargetKey(target,KEYCHANGES,callback);return Reflect.ownKeys(target);},has(target,key){observeTargetKey(target,KEYCHANGES,callback);return Reflect.has(target,key);},};}
function makeKeyObserver(methodName,target,callback){return(key)=>{key=toRaw(key);observeTargetKey(target,key,callback);return possiblyReactive(target[methodName](key),callback);};}
function makeIteratorObserver(methodName,target,callback){return function*(){observeTargetKey(target,KEYCHANGES,callback);const keys=target.keys();for(const item of target[methodName]()){const key=keys.next().value;observeTargetKey(target,key,callback);yield possiblyReactive(item,callback);}};}
function makeForEachObserver(target,callback){return function forEach(forEachCb,thisArg){observeTargetKey(target,KEYCHANGES,callback);target.forEach(function(val,key,targetObj){observeTargetKey(target,key,callback);forEachCb.call(thisArg,possiblyReactive(val,callback),possiblyReactive(key,callback),possiblyReactive(targetObj,callback));},thisArg);};}
function delegateAndNotify(setterName,getterName,target){return(key,value)=>{key=toRaw(key);const hadKey=target.has(key);const originalValue=target[getterName](key);const ret=target[setterName](key,value);const hasKey=target.has(key);if(hadKey!==hasKey){notifyReactives(target,KEYCHANGES);}
if(originalValue!==target[getterName](key)){notifyReactives(target,key);}
return ret;};}
function makeClearNotifier(target){return()=>{const allKeys=[...target.keys()];target.clear();notifyReactives(target,KEYCHANGES);for(const key of allKeys){notifyReactives(target,key);}};}
const rawTypeToFuncHandlers={Set:(target,callback)=>({has:makeKeyObserver("has",target,callback),add:delegateAndNotify("add","has",target),delete:delegateAndNotify("delete","has",target),keys:makeIteratorObserver("keys",target,callback),values:makeIteratorObserver("values",target,callback),entries:makeIteratorObserver("entries",target,callback),[Symbol.iterator]:makeIteratorObserver(Symbol.iterator,target,callback),forEach:makeForEachObserver(target,callback),clear:makeClearNotifier(target),get size(){observeTargetKey(target,KEYCHANGES,callback);return target.size;},}),Map:(target,callback)=>({has:makeKeyObserver("has",target,callback),get:makeKeyObserver("get",target,callback),set:delegateAndNotify("set","get",target),delete:delegateAndNotify("delete","has",target),keys:makeIteratorObserver("keys",target,callback),values:makeIteratorObserver("values",target,callback),entries:makeIteratorObserver("entries",target,callback),[Symbol.iterator]:makeIteratorObserver(Symbol.iterator,target,callback),forEach:makeForEachObserver(target,callback),clear:makeClearNotifier(target),get size(){observeTargetKey(target,KEYCHANGES,callback);return target.size;},}),WeakMap:(target,callback)=>({has:makeKeyObserver("has",target,callback),get:makeKeyObserver("get",target,callback),set:delegateAndNotify("set","get",target),delete:delegateAndNotify("delete","has",target),}),};function collectionsProxyHandler(target,callback,targetRawType){const specialHandlers=rawTypeToFuncHandlers[targetRawType](target,callback);return Object.assign(basicProxyHandler(callback),{get(target,key){if(objectHasOwnProperty.call(specialHandlers,key)){return specialHandlers[key];}
observeTargetKey(target,key,callback);return possiblyReactive(target[key],callback);},});}
let currentNode=null;function saveCurrent(){let n=currentNode;return()=>{currentNode=n;};}
function getCurrent(){if(!currentNode){throw new OwlError("No active component (a hook function should only be called in 'setup')");}
return currentNode;}
function useComponent(){return currentNode.component;}
function applyDefaultProps(props,defaultProps){for(let propName in defaultProps){if(props[propName]===undefined){props[propName]=defaultProps[propName];}}}
const batchedRenderFunctions=new WeakMap();function useState(state){const node=getCurrent();let render=batchedRenderFunctions.get(node);if(!render){render=batched(node.render.bind(node,false));batchedRenderFunctions.set(node,render);node.willDestroy.push(clearReactivesForCallback.bind(null,render));}
return reactive(state,render);}
class ComponentNode{constructor(C,props,app,parent,parentKey){this.fiber=null;this.bdom=null;this.status=0;this.forceNextRender=false;this.nextProps=null;this.children=Object.create(null);this.refs={};this.willStart=[];this.willUpdateProps=[];this.willUnmount=[];this.mounted=[];this.willPatch=[];this.patched=[];this.willDestroy=[];currentNode=this;this.app=app;this.parent=parent;this.props=props;this.parentKey=parentKey;const defaultProps=C.defaultProps;props=Object.assign({},props);if(defaultProps){applyDefaultProps(props,defaultProps);}
const env=(parent&&parent.childEnv)||app.env;this.childEnv=env;for(const key in props){const prop=props[key];if(prop&&typeof prop==="object"&&targets.has(prop)){props[key]=useState(prop);}}
this.component=new C(props,env,this);const ctx=Object.assign(Object.create(this.component),{this:this.component});this.renderFn=app.getTemplate(C.template).bind(this.component,ctx,this);this.component.setup();currentNode=null;}
mountComponent(target,options){const fiber=new MountFiber(this,target,options);this.app.scheduler.addFiber(fiber);this.initiateRender(fiber);}
async initiateRender(fiber){this.fiber=fiber;if(this.mounted.length){fiber.root.mounted.push(fiber);}
const component=this.component;try{await Promise.all(this.willStart.map((f)=>f.call(component)));}
catch(e){this.app.handleError({node:this,error:e});return;}
if(this.status===0&&this.fiber===fiber){fiber.render();}}
async render(deep){if(this.status>=2){return;}
let current=this.fiber;if(current&&(current.root.locked||current.bdom===true)){await Promise.resolve();current=this.fiber;}
if(current){if(!current.bdom&&!fibersInError.has(current)){if(deep){current.deep=deep;}
return;}
deep=deep||current.deep;}
else if(!this.bdom){return;}
const fiber=makeRootFiber(this);fiber.deep=deep;this.fiber=fiber;this.app.scheduler.addFiber(fiber);await Promise.resolve();if(this.status>=2){return;}
if(this.fiber===fiber&&(current||!fiber.parent)){fiber.render();}}
cancel(){this._cancel();delete this.parent.children[this.parentKey];this.app.scheduler.scheduleDestroy(this);}
_cancel(){this.status=2;const children=this.children;for(let childKey in children){children[childKey]._cancel();}}
destroy(){let shouldRemove=this.status===1;this._destroy();if(shouldRemove){this.bdom.remove();}}
_destroy(){const component=this.component;if(this.status===1){for(let cb of this.willUnmount){cb.call(component);}}
for(let child of Object.values(this.children)){child._destroy();}
if(this.willDestroy.length){try{for(let cb of this.willDestroy){cb.call(component);}}
catch(e){this.app.handleError({error:e,node:this});}}
this.status=3;}
async updateAndRender(props,parentFiber){this.nextProps=props;props=Object.assign({},props);const fiber=makeChildFiber(this,parentFiber);this.fiber=fiber;const component=this.component;const defaultProps=component.constructor.defaultProps;if(defaultProps){applyDefaultProps(props,defaultProps);}
currentNode=this;for(const key in props){const prop=props[key];if(prop&&typeof prop==="object"&&targets.has(prop)){props[key]=useState(prop);}}
currentNode=null;const prom=Promise.all(this.willUpdateProps.map((f)=>f.call(component,props)));await prom;if(fiber!==this.fiber){return;}
component.props=props;fiber.render();const parentRoot=parentFiber.root;if(this.willPatch.length){parentRoot.willPatch.push(fiber);}
if(this.patched.length){parentRoot.patched.push(fiber);}}
updateDom(){if(!this.fiber){return;}
if(this.bdom===this.fiber.bdom){for(let k in this.children){const child=this.children[k];child.updateDom();}}
else{this.bdom.patch(this.fiber.bdom,false);this.fiber.appliedToDom=true;this.fiber=null;}}
setRef(name,el){if(el){this.refs[name]=el;}}
firstNode(){const bdom=this.bdom;return bdom?bdom.firstNode():undefined;}
mount(parent,anchor){const bdom=this.fiber.bdom;this.bdom=bdom;bdom.mount(parent,anchor);this.status=1;this.fiber.appliedToDom=true;this.children=this.fiber.childrenMap;this.fiber=null;}
moveBeforeDOMNode(node,parent){this.bdom.moveBeforeDOMNode(node,parent);}
moveBeforeVNode(other,afterNode){this.bdom.moveBeforeVNode(other?other.bdom:null,afterNode);}
patch(){if(this.fiber&&this.fiber.parent){this._patch();this.props=this.nextProps;}}
_patch(){let hasChildren=false;for(let _k in this.children){hasChildren=true;break;}
const fiber=this.fiber;this.children=fiber.childrenMap;this.bdom.patch(fiber.bdom,hasChildren);fiber.appliedToDom=true;this.fiber=null;}
beforeRemove(){this._destroy();}
remove(){this.bdom.remove();}
get name(){return this.component.constructor.name;}
get subscriptions(){const render=batchedRenderFunctions.get(this);return render?getSubscriptions(render):[];}}
const TIMEOUT=Symbol("timeout");const HOOK_TIMEOUT={onWillStart:3000,onWillUpdateProps:3000,};function wrapError(fn,hookName){const error=new OwlError();const timeoutError=new OwlError();const node=getCurrent();return(...args)=>{const onError=(cause)=>{error.cause=cause;error.message=cause instanceof Error?`The following error occurred in ${hookName}: "${cause.message}"`:`Something that is not an Error was thrown in ${hookName} (see this Error's "cause" property)`;throw error;};let result;try{result=fn(...args);}
catch(cause){onError(cause);}
if(!(result instanceof Promise)){return result;}
const timeout=HOOK_TIMEOUT[hookName];if(timeout){const fiber=node.fiber;Promise.race([result.catch(()=>{}),new Promise((resolve)=>setTimeout(()=>resolve(TIMEOUT),timeout)),]).then((res)=>{if(res===TIMEOUT&&node.fiber===fiber&&node.status<=2){timeoutError.message=`${hookName}'s promise hasn't resolved after ${timeout / 1000} seconds`;console.log(timeoutError);}});}
return result.catch(onError);};}
function onWillStart(fn){const node=getCurrent();const decorate=node.app.dev?wrapError:(fn)=>fn;node.willStart.push(decorate(fn.bind(node.component),"onWillStart"));}
function onWillUpdateProps(fn){const node=getCurrent();const decorate=node.app.dev?wrapError:(fn)=>fn;node.willUpdateProps.push(decorate(fn.bind(node.component),"onWillUpdateProps"));}
function onMounted(fn){const node=getCurrent();const decorate=node.app.dev?wrapError:(fn)=>fn;node.mounted.push(decorate(fn.bind(node.component),"onMounted"));}
function onWillPatch(fn){const node=getCurrent();const decorate=node.app.dev?wrapError:(fn)=>fn;node.willPatch.unshift(decorate(fn.bind(node.component),"onWillPatch"));}
function onPatched(fn){const node=getCurrent();const decorate=node.app.dev?wrapError:(fn)=>fn;node.patched.push(decorate(fn.bind(node.component),"onPatched"));}
function onWillUnmount(fn){const node=getCurrent();const decorate=node.app.dev?wrapError:(fn)=>fn;node.willUnmount.unshift(decorate(fn.bind(node.component),"onWillUnmount"));}
function onWillDestroy(fn){const node=getCurrent();const decorate=node.app.dev?wrapError:(fn)=>fn;node.willDestroy.push(decorate(fn.bind(node.component),"onWillDestroy"));}
function onWillRender(fn){const node=getCurrent();const renderFn=node.renderFn;const decorate=node.app.dev?wrapError:(fn)=>fn;fn=decorate(fn.bind(node.component),"onWillRender");node.renderFn=()=>{fn();return renderFn();};}
function onRendered(fn){const node=getCurrent();const renderFn=node.renderFn;const decorate=node.app.dev?wrapError:(fn)=>fn;fn=decorate(fn.bind(node.component),"onRendered");node.renderFn=()=>{const result=renderFn();fn();return result;};}
function onError(callback){const node=getCurrent();let handlers=nodeErrorHandlers.get(node);if(!handlers){handlers=[];nodeErrorHandlers.set(node,handlers);}
handlers.push(callback.bind(node.component));}
class Component{constructor(props,env,node){this.props=props;this.env=env;this.__owl__=node;}
setup(){}
render(deep=false){this.__owl__.render(deep===true);}}
Component.template="";const VText=text("").constructor;class VPortal extends VText{constructor(selector,content){super("");this.target=null;this.selector=selector;this.content=content;}
mount(parent,anchor){super.mount(parent,anchor);this.target=document.querySelector(this.selector);if(this.target){this.content.mount(this.target,null);}
else{this.content.mount(parent,anchor);}}
beforeRemove(){this.content.beforeRemove();}
remove(){if(this.content){super.remove();this.content.remove();this.content=null;}}
patch(other){super.patch(other);if(this.content){this.content.patch(other.content,true);}
else{this.content=other.content;this.content.mount(this.target,null);}}}
function portalTemplate(app,bdom,helpers){let{callSlot}=helpers;return function template(ctx,node,key=""){return new VPortal(ctx.props.target,callSlot(ctx,node,key,"default",false,null));};}
class Portal extends Component{setup(){const node=this.__owl__;onMounted(()=>{const portal=node.bdom;if(!portal.target){const target=document.querySelector(this.props.target);if(target){portal.content.moveBeforeDOMNode(target.firstChild,target);}
else{throw new OwlError("invalid portal target");}}});onWillUnmount(()=>{const portal=node.bdom;portal.remove();});}}
Portal.template="__portal__";Portal.props={target:{type:String,},slots:true,};const isUnionType=(t)=>Array.isArray(t);const isBaseType=(t)=>typeof t!=="object";const isValueType=(t)=>typeof t==="object"&&t&&"value"in t;function isOptional(t){return typeof t==="object"&&"optional"in t?t.optional||false:false;}
function describeType(type){return type==="*"||type===true?"value":type.name.toLowerCase();}
function describe(info){if(isBaseType(info)){return describeType(info);}
else if(isUnionType(info)){return info.map(describe).join(" or ");}
else if(isValueType(info)){return String(info.value);}
if("element"in info){return`list of ${describe({ type: info.element, optional: false })}s`;}
if("shape"in info){return`object`;}
return describe(info.type||"*");}
function toSchema(spec){return Object.fromEntries(spec.map((e)=>e.endsWith("?")?[e.slice(0,-1),{optional:true}]:[e,{type:"*",optional:false}]));}
function validate(obj,spec){let errors=validateSchema(obj,spec);if(errors.length){throw new OwlError("Invalid object: "+errors.join(", "));}}
function validateSchema(obj,schema){if(Array.isArray(schema)){schema=toSchema(schema);}
obj=toRaw(obj);let errors=[];for(let key in obj){if(key in schema){let result=validateType(key,obj[key],schema[key]);if(result){errors.push(result);}}
else if(!("*"in schema)){errors.push(`unknown key '${key}'`);}}
for(let key in schema){const spec=schema[key];if(key!=="*"&&!isOptional(spec)&&!(key in obj)){const isObj=typeof spec==="object"&&!Array.isArray(spec);const isAny=spec==="*"||(isObj&&"type"in spec?spec.type==="*":isObj);let detail=isAny?"":` (should be a ${describe(spec)})`;errors.push(`'${key}' is missing${detail}`);}}
return errors;}
function validateBaseType(key,value,type){if(typeof type==="function"){if(typeof value==="object"){if(!(value instanceof type)){return`'${key}' is not a ${describeType(type)}`;}}
else if(typeof value!==type.name.toLowerCase()){return`'${key}' is not a ${describeType(type)}`;}}
return null;}
function validateArrayType(key,value,descr){if(!Array.isArray(value)){return`'${key}' is not a list of ${describe(descr)}s`;}
for(let i=0;i<value.length;i++){const error=validateType(`${key}[${i}]`,value[i],descr);if(error){return error;}}
return null;}
function validateType(key,value,descr){if(value===undefined){return isOptional(descr)?null:`'${key}' is undefined (should be a ${describe(descr)})`;}
else if(isBaseType(descr)){return validateBaseType(key,value,descr);}
else if(isValueType(descr)){return value===descr.value?null:`'${key}' is not equal to '${descr.value}'`;}
else if(isUnionType(descr)){let validDescr=descr.find((p)=>!validateType(key,value,p));return validDescr?null:`'${key}' is not a ${describe(descr)}`;}
let result=null;if("element"in descr){result=validateArrayType(key,value,descr.element);}
else if("shape"in descr){if(typeof value!=="object"||Array.isArray(value)){result=`'${key}' is not an object`;}
else{const errors=validateSchema(value,descr.shape);if(errors.length){result=`'${key}' doesn't have the correct shape (${errors.join(", ")})`;}}}
else if("values"in descr){if(typeof value!=="object"||Array.isArray(value)){result=`'${key}' is not an object`;}
else{const errors=Object.entries(value).map(([key,value])=>validateType(key,value,descr.values)).filter(Boolean);if(errors.length){result=`some of the values in '${key}' are invalid (${errors.join(", ")})`;}}}
if("type"in descr&&!result){result=validateType(key,value,descr.type);}
if("validate"in descr&&!result){result=!descr.validate(value)?`'${key}' is not valid`:null;}
return result;}
const ObjectCreate=Object.create;function withDefault(value,defaultValue){return value===undefined||value===null||value===false?defaultValue:value;}
function callSlot(ctx,parent,key,name,dynamic,extra,defaultContent){key=key+"__slot_"+name;const slots=ctx.props.slots||{};const{__render,__ctx,__scope}=slots[name]||{};const slotScope=ObjectCreate(__ctx||{});if(__scope){slotScope[__scope]=extra;}
const slotBDom=__render?__render(slotScope,parent,key):null;if(defaultContent){let child1=undefined;let child2=undefined;if(slotBDom){child1=dynamic?toggler(name,slotBDom):slotBDom;}
else{child2=defaultContent(ctx,parent,key);}
return multi([child1,child2]);}
return slotBDom||text("");}
function capture(ctx){const result=ObjectCreate(ctx);for(let k in ctx){result[k]=ctx[k];}
return result;}
function withKey(elem,k){elem.key=k;return elem;}
function prepareList(collection){let keys;let values;if(Array.isArray(collection)){keys=collection;values=collection;}
else if(collection instanceof Map){keys=[...collection.keys()];values=[...collection.values()];}
else if(Symbol.iterator in Object(collection)){keys=[...collection];values=keys;}
else if(collection&&typeof collection==="object"){values=Object.values(collection);keys=Object.keys(collection);}
else{throw new OwlError(`Invalid loop expression: "${collection}" is not iterable`);}
const n=values.length;return[keys,values,n,new Array(n)];}
const isBoundary=Symbol("isBoundary");function setContextValue(ctx,key,value){const ctx0=ctx;while(!ctx.hasOwnProperty(key)&&!ctx.hasOwnProperty(isBoundary)){const newCtx=ctx.__proto__;if(!newCtx){ctx=ctx0;break;}
ctx=newCtx;}
ctx[key]=value;}
function toNumber(val){const n=parseFloat(val);return isNaN(n)?val:n;}
function shallowEqual(l1,l2){for(let i=0,l=l1.length;i<l;i++){if(l1[i]!==l2[i]){return false;}}
return true;}
class LazyValue{constructor(fn,ctx,component,node,key){this.fn=fn;this.ctx=capture(ctx);this.component=component;this.node=node;this.key=key;}
evaluate(){return this.fn.call(this.component,this.ctx,this.node,this.key);}
toString(){return this.evaluate().toString();}}
function safeOutput(value,defaultValue){if(value===undefined||value===null){return defaultValue?toggler("default",defaultValue):toggler("undefined",text(""));}
let safeKey;let block;switch(typeof value){case"object":if(value instanceof Markup){safeKey=`string_safe`;block=html(value);}
else if(value instanceof LazyValue){safeKey=`lazy_value`;block=value.evaluate();}
else if(value instanceof String){safeKey="string_unsafe";block=text(value);}
else{safeKey="block_safe";block=value;}
break;case"string":safeKey="string_unsafe";block=text(value);break;default:safeKey="string_unsafe";block=text(String(value));}
return toggler(safeKey,block);}
function validateProps(name,props,comp){const ComponentClass=typeof name!=="string"?name:comp.constructor.components[name];if(!ComponentClass){return;}
const schema=ComponentClass.props;if(!schema){if(comp.__owl__.app.warnIfNoStaticProps){console.warn(`Component '${ComponentClass.name}' does not have a static props description`);}
return;}
const defaultProps=ComponentClass.defaultProps;if(defaultProps){let isMandatory=(name)=>Array.isArray(schema)?schema.includes(name):name in schema&&!("*"in schema)&&!isOptional(schema[name]);for(let p in defaultProps){if(isMandatory(p)){throw new OwlError(`A default value cannot be defined for a mandatory prop (name: '${p}', component: ${ComponentClass.name})`);}}}
const errors=validateSchema(props,schema);if(errors.length){throw new OwlError(`Invalid props for component '${ComponentClass.name}': `+errors.join(", "));}}
function makeRefWrapper(node){let refNames=new Set();return(name,fn)=>{if(refNames.has(name)){throw new OwlError(`Cannot set the same ref more than once in the same component, ref "${name}" was set multiple times in ${node.name}`);}
refNames.add(name);return fn;};}
const helpers={withDefault,zero:Symbol("zero"),isBoundary,callSlot,capture,withKey,prepareList,setContextValue,shallowEqual,toNumber,validateProps,LazyValue,safeOutput,createCatcher,markRaw,OwlError,makeRefWrapper,};function parseXML(xml){const parser=new DOMParser();const doc=parser.parseFromString(xml,"text/xml");if(doc.getElementsByTagName("parsererror").length){let msg="Invalid XML in template.";const parsererrorText=doc.getElementsByTagName("parsererror")[0].textContent;if(parsererrorText){msg+="\nThe parser has produced the following error message:\n"+parsererrorText;const re=/\d+/g;const firstMatch=re.exec(parsererrorText);if(firstMatch){const lineNumber=Number(firstMatch[0]);const line=xml.split("\n")[lineNumber-1];const secondMatch=re.exec(parsererrorText);if(line&&secondMatch){const columnIndex=Number(secondMatch[0])-1;if(line[columnIndex]){msg+=`\nThe error might be located at xml line ${lineNumber} column ${columnIndex}\n`+`${line}\n${"-".repeat(columnIndex - 1)}^`;}}}}
throw new OwlError(msg);}
return doc;}
const bdom={text,createBlock,list,multi,html,toggler,comment};class TemplateSet{constructor(config={}){this.rawTemplates=Object.create(globalTemplates);this.templates={};this.Portal=Portal;this.dev=config.dev||false;this.translateFn=config.translateFn;this.translatableAttributes=config.translatableAttributes;if(config.templates){if(config.templates instanceof Document||typeof config.templates==="string"){this.addTemplates(config.templates);}
else{for(const name in config.templates){this.addTemplate(name,config.templates[name]);}}}
this.getRawTemplate=config.getTemplate;this.customDirectives=config.customDirectives||{};this.runtimeUtils={...helpers,__globals__:config.globalValues||{}};this.hasGlobalValues=Boolean(config.globalValues&&Object.keys(config.globalValues).length);}
static registerTemplate(name,fn){globalTemplates[name]=fn;}
addTemplate(name,template){if(name in this.rawTemplates){if(!this.dev){return;}
const rawTemplate=this.rawTemplates[name];const currentAsString=typeof rawTemplate==="string"?rawTemplate:rawTemplate instanceof Element?rawTemplate.outerHTML:rawTemplate.toString();const newAsString=typeof template==="string"?template:template.outerHTML;if(currentAsString===newAsString){return;}
throw new OwlError(`Template ${name} already defined with different content`);}
this.rawTemplates[name]=template;}
addTemplates(xml){if(!xml){return;}
xml=xml instanceof Document?xml:parseXML(xml);for(const template of xml.querySelectorAll("[t-name]")){const name=template.getAttribute("t-name");this.addTemplate(name,template);}}
getTemplate(name){var _a;if(!(name in this.templates)){const rawTemplate=((_a=this.getRawTemplate)===null||_a===void 0?void 0:_a.call(this,name))||this.rawTemplates[name];if(rawTemplate===undefined){let extraInfo="";try{const componentName=getCurrent().component.constructor.name;extraInfo=` (for component "${componentName}")`;}
catch{}
throw new OwlError(`Missing template: "${name}"${extraInfo}`);}
const isFn=typeof rawTemplate==="function"&&!(rawTemplate instanceof Element);const templateFn=isFn?rawTemplate:this._compileTemplate(name,rawTemplate);const templates=this.templates;this.templates[name]=function(context,parent){return templates[name].call(this,context,parent);};const template=templateFn(this,bdom,this.runtimeUtils);this.templates[name]=template;}
return this.templates[name];}
_compileTemplate(name,template){throw new OwlError(`Unable to compile a template. Please use owl full build instead`);}
callTemplate(owner,subTemplate,ctx,parent,key){const template=this.getTemplate(subTemplate);return toggler(subTemplate,template.call(owner,ctx,parent,key+subTemplate));}}
const globalTemplates={};function xml(...args){const name=`__template__${xml.nextId++}`;const value=String.raw(...args);globalTemplates[name]=value;return name;}
xml.nextId=1;TemplateSet.registerTemplate("__portal__",portalTemplate);const RESERVED_WORDS="true,false,NaN,null,undefined,debugger,console,window,in,instanceof,new,function,return,eval,void,Math,RegExp,Array,Object,Date,__globals__".split(",");const WORD_REPLACEMENT=Object.assign(Object.create(null),{and:"&&",or:"||",gt:">",gte:">=",lt:"<",lte:"<=",});const STATIC_TOKEN_MAP=Object.assign(Object.create(null),{"{":"LEFT_BRACE","}":"RIGHT_BRACE","[":"LEFT_BRACKET","]":"RIGHT_BRACKET",":":"COLON",",":"COMMA","(":"LEFT_PAREN",")":"RIGHT_PAREN",});const OPERATORS="...,.,===,==,+,!==,!=,!,||,&&,>=,>,<=,<,?,-,*,/,%,typeof ,=>,=,;,in ,new ,|,&,^,~".split(",");let tokenizeString=function(expr){let s=expr[0];let start=s;if(s!=="'"&&s!=='"'&&s!=="`"){return false;}
let i=1;let cur;while(expr[i]&&expr[i]!==start){cur=expr[i];s+=cur;if(cur==="\\"){i++;cur=expr[i];if(!cur){throw new OwlError("Invalid expression");}
s+=cur;}
i++;}
if(expr[i]!==start){throw new OwlError("Invalid expression");}
s+=start;if(start==="`"){return{type:"TEMPLATE_STRING",value:s,replace(replacer){return s.replace(/\$\{(.*?)\}/g,(match,group)=>{return"${"+replacer(group)+"}";});},};}
return{type:"VALUE",value:s};};let tokenizeNumber=function(expr){let s=expr[0];if(s&&s.match(/[0-9]/)){let i=1;while(expr[i]&&expr[i].match(/[0-9]|\./)){s+=expr[i];i++;}
return{type:"VALUE",value:s};}
else{return false;}};let tokenizeSymbol=function(expr){let s=expr[0];if(s&&s.match(/[a-zA-Z_\$]/)){let i=1;while(expr[i]&&expr[i].match(/\w/)){s+=expr[i];i++;}
if(s in WORD_REPLACEMENT){return{type:"OPERATOR",value:WORD_REPLACEMENT[s],size:s.length};}
return{type:"SYMBOL",value:s};}
else{return false;}};const tokenizeStatic=function(expr){const char=expr[0];if(char&&char in STATIC_TOKEN_MAP){return{type:STATIC_TOKEN_MAP[char],value:char};}
return false;};const tokenizeOperator=function(expr){for(let op of OPERATORS){if(expr.startsWith(op)){return{type:"OPERATOR",value:op};}}
return false;};const TOKENIZERS=[tokenizeString,tokenizeNumber,tokenizeOperator,tokenizeSymbol,tokenizeStatic,];function tokenize(expr){const result=[];let token=true;let error;let current=expr;try{while(token){current=current.trim();if(current){for(let tokenizer of TOKENIZERS){token=tokenizer(current);if(token){result.push(token);current=current.slice(token.size||token.value.length);break;}}}
else{token=false;}}}
catch(e){error=e;}
if(current.length||error){throw new OwlError(`Tokenizer error: could not tokenize \`${expr}\``);}
return result;}
const isLeftSeparator=(token)=>token&&(token.type==="LEFT_BRACE"||token.type==="COMMA");const isRightSeparator=(token)=>token&&(token.type==="RIGHT_BRACE"||token.type==="COMMA");function compileExprToArray(expr){const localVars=new Set();const tokens=tokenize(expr);let i=0;let stack=[];while(i<tokens.length){let token=tokens[i];let prevToken=tokens[i-1];let nextToken=tokens[i+1];let groupType=stack[stack.length-1];switch(token.type){case"LEFT_BRACE":case"LEFT_BRACKET":case"LEFT_PAREN":stack.push(token.type);break;case"RIGHT_BRACE":case"RIGHT_BRACKET":case"RIGHT_PAREN":stack.pop();}
let isVar=token.type==="SYMBOL"&&!RESERVED_WORDS.includes(token.value);if(token.type==="SYMBOL"&&!RESERVED_WORDS.includes(token.value)){if(prevToken){if(groupType==="LEFT_BRACE"&&isLeftSeparator(prevToken)&&isRightSeparator(nextToken)){tokens.splice(i+1,0,{type:"COLON",value:":"},{...token});nextToken=tokens[i+1];}
if(prevToken.type==="OPERATOR"&&prevToken.value==="."){isVar=false;}
else if(prevToken.type==="LEFT_BRACE"||prevToken.type==="COMMA"){if(nextToken&&nextToken.type==="COLON"){isVar=false;}}}}
if(token.type==="TEMPLATE_STRING"){token.value=token.replace((expr)=>compileExpr(expr));}
if(nextToken&&nextToken.type==="OPERATOR"&&nextToken.value==="=>"){if(token.type==="RIGHT_PAREN"){let j=i-1;while(j>0&&tokens[j].type!=="LEFT_PAREN"){if(tokens[j].type==="SYMBOL"&&tokens[j].originalValue){tokens[j].value=tokens[j].originalValue;localVars.add(tokens[j].value);}
j--;}}
else{localVars.add(token.value);}}
if(isVar){token.varName=token.value;if(!localVars.has(token.value)){token.originalValue=token.value;token.value=`ctx['${token.value}']`;}}
i++;}
for(const token of tokens){if(token.type==="SYMBOL"&&token.varName&&localVars.has(token.value)){token.originalValue=token.value;token.value=`_${token.value}`;token.isLocal=true;}}
return tokens;}
const paddedValues=new Map([["in "," in "]]);function compileExpr(expr){return compileExprToArray(expr).map((t)=>paddedValues.get(t.value)||t.value).join("");}
const INTERP_REGEXP=/\{\{.*?\}\}|\#\{.*?\}/g;function replaceDynamicParts(s,replacer){let matches=s.match(INTERP_REGEXP);if(matches&&matches[0].length===s.length){return`(${replacer(s.slice(2, matches[0][0] === "{" ? -2 : -1))})`;}
let r=s.replace(INTERP_REGEXP,(s)=>"${"+replacer(s.slice(2,s[0]==="{"?-2:-1))+"}");return"`"+r+"`";}
function interpolate(s){return replaceDynamicParts(s,compileExpr);}
const whitespaceRE=/\s+/g;const xmlDoc=document.implementation.createDocument(null,null,null);const MODS=new Set(["stop","capture","prevent","self","synthetic"]);let nextDataIds={};function generateId(prefix=""){nextDataIds[prefix]=(nextDataIds[prefix]||0)+1;return prefix+nextDataIds[prefix];}
function isProp(tag,key){switch(tag){case"input":return(key==="checked"||key==="indeterminate"||key==="value"||key==="readonly"||key==="readOnly"||key==="disabled");case"option":return key==="selected"||key==="disabled";case"textarea":return key==="value"||key==="readonly"||key==="readOnly"||key==="disabled";case"select":return key==="value"||key==="disabled";case"button":case"optgroup":return key==="disabled";}
return false;}
function toStringExpression(str){return`\`${str.replace(/\\/g, "\\\\").replace(/`/g,"\\`").replace(/\$\{/,"\\${")}\``;}
class BlockDescription{constructor(target,type){this.dynamicTagName=null;this.isRoot=false;this.hasDynamicChildren=false;this.children=[];this.data=[];this.childNumber=0;this.parentVar="";this.id=BlockDescription.nextBlockId++;this.varName="b"+this.id;this.blockName="block"+this.id;this.target=target;this.type=type;}
insertData(str,prefix="d"){const id=generateId(prefix);this.target.addLine(`let ${id} = ${str};`);return this.data.push(id)-1;}
insert(dom){if(this.currentDom){this.currentDom.appendChild(dom);}
else{this.dom=dom;}}
generateExpr(expr){if(this.type==="block"){const hasChildren=this.children.length;let params=this.data.length?`[${this.data.join(", ")}]`:hasChildren?"[]":"";if(hasChildren){params+=", ["+this.children.map((c)=>c.varName).join(", ")+"]";}
if(this.dynamicTagName){return`toggler(${this.dynamicTagName}, ${this.blockName}(${this.dynamicTagName})(${params}))`;}
return`${this.blockName}(${params})`;}
else if(this.type==="list"){return`list(c_block${this.id})`;}
return expr;}
asXmlString(){const t=xmlDoc.createElement("t");t.appendChild(this.dom);return t.innerHTML;}}
BlockDescription.nextBlockId=1;function createContext(parentCtx,params){return Object.assign({block:null,index:0,forceNewBlock:true,translate:parentCtx.translate,translationCtx:parentCtx.translationCtx,tKeyExpr:null,nameSpace:parentCtx.nameSpace,tModelSelectedExpr:parentCtx.tModelSelectedExpr,},params);}
class CodeTarget{constructor(name,on){this.indentLevel=0;this.loopLevel=0;this.code=[];this.hasRoot=false;this.hasCache=false;this.shouldProtectScope=false;this.hasRefWrapper=false;this.name=name;this.on=on||null;}
addLine(line,idx){const prefix=new Array(this.indentLevel+2).join("  ");if(idx===undefined){this.code.push(prefix+line);}
else{this.code.splice(idx,0,prefix+line);}}
generateCode(){let result=[];result.push(`function ${this.name}(ctx, node, key = "") {`);if(this.shouldProtectScope){result.push(`  ctx = Object.create(ctx);`);result.push(`  ctx[isBoundary] = 1`);}
if(this.hasRefWrapper){result.push(`  let refWrapper = makeRefWrapper(this.__owl__);`);}
if(this.hasCache){result.push(`  let cache = ctx.cache || {};`);result.push(`  let nextCache = ctx.cache = {};`);}
for(let line of this.code){result.push(line);}
if(!this.hasRoot){result.push(`return text('');`);}
result.push(`}`);return result.join("\n  ");}
currentKey(ctx){let key=this.loopLevel?`key${this.loopLevel}`:"key";if(ctx.tKeyExpr){key=`${ctx.tKeyExpr} + ${key}`;}
return key;}}
const TRANSLATABLE_ATTRS=["label","title","placeholder","alt"];const translationRE=/^(\s*)([\s\S]+?)(\s*)$/;class CodeGenerator{constructor(ast,options){this.blocks=[];this.nextBlockId=1;this.isDebug=false;this.targets=[];this.target=new CodeTarget("template");this.translatableAttributes=TRANSLATABLE_ATTRS;this.staticDefs=[];this.slotNames=new Set();this.helpers=new Set();this.translateFn=options.translateFn||((s)=>s);if(options.translatableAttributes){const attrs=new Set(TRANSLATABLE_ATTRS);for(let attr of options.translatableAttributes){if(attr.startsWith("-")){attrs.delete(attr.slice(1));}
else{attrs.add(attr);}}
this.translatableAttributes=[...attrs];}
this.hasSafeContext=options.hasSafeContext||false;this.dev=options.dev||false;this.ast=ast;this.templateName=options.name;if(options.hasGlobalValues){this.helpers.add("__globals__");}}
generateCode(){const ast=this.ast;this.isDebug=ast.type===12;BlockDescription.nextBlockId=1;nextDataIds={};this.compileAST(ast,{block:null,index:0,forceNewBlock:false,isLast:true,translate:true,translationCtx:"",tKeyExpr:null,});let mainCode=[`  let { text, createBlock, list, multi, html, toggler, comment } = bdom;`];if(this.helpers.size){mainCode.push(`let { ${[...this.helpers].join(", ")} } = helpers;`);}
if(this.templateName){mainCode.push(`// Template name: "${this.templateName}"`);}
for(let{id,expr}of this.staticDefs){mainCode.push(`const ${id} = ${expr};`);}
if(this.blocks.length){mainCode.push(``);for(let block of this.blocks){if(block.dom){let xmlString=toStringExpression(block.asXmlString());if(block.dynamicTagName){xmlString=xmlString.replace(/^`<\w+/,`\`<\${tag || '${block.dom.nodeName}'}`);xmlString=xmlString.replace(/\w+>`$/,`\${tag || '${block.dom.nodeName}'}>\``);mainCode.push(`let ${block.blockName} = tag => createBlock(${xmlString});`);}
else{mainCode.push(`let ${block.blockName} = createBlock(${xmlString});`);}}}}
if(this.targets.length){for(let fn of this.targets){mainCode.push("");mainCode=mainCode.concat(fn.generateCode());}}
mainCode.push("");mainCode=mainCode.concat("return "+this.target.generateCode());const code=mainCode.join("\n  ");if(this.isDebug){const msg=`[Owl Debug]\n${code}`;console.log(msg);}
return code;}
compileInNewTarget(prefix,ast,ctx,on){const name=generateId(prefix);const initialTarget=this.target;const target=new CodeTarget(name,on);this.targets.push(target);this.target=target;this.compileAST(ast,createContext(ctx));this.target=initialTarget;return name;}
addLine(line,idx){this.target.addLine(line,idx);}
define(varName,expr){this.addLine(`const ${varName} = ${expr};`);}
insertAnchor(block,index=block.children.length){const tag=`block-child-${index}`;const anchor=xmlDoc.createElement(tag);block.insert(anchor);}
createBlock(parentBlock,type,ctx){const hasRoot=this.target.hasRoot;const block=new BlockDescription(this.target,type);if(!hasRoot){this.target.hasRoot=true;block.isRoot=true;}
if(parentBlock){parentBlock.children.push(block);if(parentBlock.type==="list"){block.parentVar=`c_block${parentBlock.id}`;}}
return block;}
insertBlock(expression,block,ctx){let blockExpr=block.generateExpr(expression);if(block.parentVar){let key=this.target.currentKey(ctx);this.helpers.add("withKey");this.addLine(`${block.parentVar}[${ctx.index}] = withKey(${blockExpr}, ${key});`);return;}
if(ctx.tKeyExpr){blockExpr=`toggler(${ctx.tKeyExpr}, ${blockExpr})`;}
if(block.isRoot){if(this.target.on){blockExpr=this.wrapWithEventCatcher(blockExpr,this.target.on);}
this.addLine(`return ${blockExpr};`);}
else{this.define(block.varName,blockExpr);}}
captureExpression(expr,forceCapture=false){if(!forceCapture&&!expr.includes("=>")){return compileExpr(expr);}
const tokens=compileExprToArray(expr);const mapping=new Map();return tokens.map((tok)=>{if(tok.varName&&!tok.isLocal){if(!mapping.has(tok.varName)){const varId=generateId("v");mapping.set(tok.varName,varId);this.define(varId,tok.value);}
tok.value=mapping.get(tok.varName);}
return tok.value;}).join("");}
translate(str,translationCtx){const match=translationRE.exec(str);return match[1]+this.translateFn(match[2],translationCtx)+match[3];}
compileAST(ast,ctx){switch(ast.type){case 1:return this.compileComment(ast,ctx);case 0:return this.compileText(ast,ctx);case 2:return this.compileTDomNode(ast,ctx);case 4:return this.compileTEsc(ast,ctx);case 8:return this.compileTOut(ast,ctx);case 5:return this.compileTIf(ast,ctx);case 9:return this.compileTForeach(ast,ctx);case 10:return this.compileTKey(ast,ctx);case 3:return this.compileMulti(ast,ctx);case 7:return this.compileTCall(ast,ctx);case 15:return this.compileTCallBlock(ast,ctx);case 6:return this.compileTSet(ast,ctx);case 11:return this.compileComponent(ast,ctx);case 12:return this.compileDebug(ast,ctx);case 13:return this.compileLog(ast,ctx);case 14:return this.compileTSlot(ast,ctx);case 16:return this.compileTTranslation(ast,ctx);case 17:return this.compileTTranslationContext(ast,ctx);case 18:return this.compileTPortal(ast,ctx);}}
compileDebug(ast,ctx){this.addLine(`debugger;`);if(ast.content){return this.compileAST(ast.content,ctx);}
return null;}
compileLog(ast,ctx){this.addLine(`console.log(${compileExpr(ast.expr)});`);if(ast.content){return this.compileAST(ast.content,ctx);}
return null;}
compileComment(ast,ctx){let{block,forceNewBlock}=ctx;const isNewBlock=!block||forceNewBlock;if(isNewBlock){block=this.createBlock(block,"comment",ctx);this.insertBlock(`comment(${toStringExpression(ast.value)})`,block,{...ctx,forceNewBlock:forceNewBlock&&!block,});}
else{const text=xmlDoc.createComment(ast.value);block.insert(text);}
return block.varName;}
compileText(ast,ctx){let{block,forceNewBlock}=ctx;let value=ast.value;if(value&&ctx.translate!==false){value=this.translate(value,ctx.translationCtx);}
if(!ctx.inPreTag){value=value.replace(whitespaceRE," ");}
if(!block||forceNewBlock){block=this.createBlock(block,"text",ctx);this.insertBlock(`text(${toStringExpression(value)})`,block,{...ctx,forceNewBlock:forceNewBlock&&!block,});}
else{const createFn=ast.type===0?xmlDoc.createTextNode:xmlDoc.createComment;block.insert(createFn.call(xmlDoc,value));}
return block.varName;}
generateHandlerCode(rawEvent,handler){const modifiers=rawEvent.split(".").slice(1).map((m)=>{if(!MODS.has(m)){throw new OwlError(`Unknown event modifier: '${m}'`);}
return`"${m}"`;});let modifiersCode="";if(modifiers.length){modifiersCode=`${modifiers.join(",")}, `;}
return`[${modifiersCode}${this.captureExpression(handler)}, ctx]`;}
compileTDomNode(ast,ctx){var _a;let{block,forceNewBlock}=ctx;const isNewBlock=!block||forceNewBlock||ast.dynamicTag!==null||ast.ns;let codeIdx=this.target.code.length;if(isNewBlock){if((ast.dynamicTag||ctx.tKeyExpr||ast.ns)&&ctx.block){this.insertAnchor(ctx.block);}
block=this.createBlock(block,"block",ctx);this.blocks.push(block);if(ast.dynamicTag){const tagExpr=generateId("tag");this.define(tagExpr,compileExpr(ast.dynamicTag));block.dynamicTagName=tagExpr;}}
const attrs={};for(let key in ast.attrs){let expr,attrName;if(key.startsWith("t-attf")){expr=interpolate(ast.attrs[key]);const idx=block.insertData(expr,"attr");attrName=key.slice(7);attrs["block-attribute-"+idx]=attrName;}
else if(key.startsWith("t-att")){attrName=key==="t-att"?null:key.slice(6);expr=compileExpr(ast.attrs[key]);if(attrName&&isProp(ast.tag,attrName)){if(attrName==="readonly"){attrName="readOnly";}
if(attrName==="value"){expr=`new String((${expr}) === 0 ? 0 : ((${expr}) || ""))`;}
else{expr=`new Boolean(${expr})`;}
const idx=block.insertData(expr,"prop");attrs[`block-property-${idx}`]=attrName;}
else{const idx=block.insertData(expr,"attr");if(key==="t-att"){attrs[`block-attributes`]=String(idx);}
else{attrs[`block-attribute-${idx}`]=attrName;}}}
else if(this.translatableAttributes.includes(key)){const attrTranslationCtx=((_a=ast.attrsTranslationCtx)===null||_a===void 0?void 0:_a[key])||ctx.translationCtx;attrs[key]=this.translateFn(ast.attrs[key],attrTranslationCtx);}
else{expr=`"${ast.attrs[key]}"`;attrName=key;attrs[key]=ast.attrs[key];}
if(attrName==="value"&&ctx.tModelSelectedExpr){let selectedId=block.insertData(`${ctx.tModelSelectedExpr} === ${expr}`,"attr");attrs[`block-attribute-${selectedId}`]="selected";}}
let tModelSelectedExpr;if(ast.model){const{hasDynamicChildren,baseExpr,expr,eventType,shouldNumberize,shouldTrim,targetAttr,specialInitTargetAttr,}=ast.model;const baseExpression=compileExpr(baseExpr);const bExprId=generateId("bExpr");this.define(bExprId,baseExpression);const expression=compileExpr(expr);const exprId=generateId("expr");this.define(exprId,expression);const fullExpression=`${bExprId}[${exprId}]`;let idx;if(specialInitTargetAttr){let targetExpr=targetAttr in attrs&&`'${attrs[targetAttr]}'`;if(!targetExpr&&ast.attrs){const dynamicTgExpr=ast.attrs[`t-att-${targetAttr}`];if(dynamicTgExpr){targetExpr=compileExpr(dynamicTgExpr);}}
idx=block.insertData(`${fullExpression} === ${targetExpr}`,"prop");attrs[`block-property-${idx}`]=specialInitTargetAttr;}
else if(hasDynamicChildren){const bValueId=generateId("bValue");tModelSelectedExpr=`${bValueId}`;this.define(tModelSelectedExpr,fullExpression);}
else{idx=block.insertData(`${fullExpression}`,"prop");attrs[`block-property-${idx}`]=targetAttr;}
this.helpers.add("toNumber");let valueCode=`ev.target.${targetAttr}`;valueCode=shouldTrim?`${valueCode}.trim()`:valueCode;valueCode=shouldNumberize?`toNumber(${valueCode})`:valueCode;const handler=`[(ev) => { ${fullExpression} = ${valueCode}; }]`;idx=block.insertData(handler,"hdlr");attrs[`block-handler-${idx}`]=eventType;}
for(let ev in ast.on){const name=this.generateHandlerCode(ev,ast.on[ev]);const idx=block.insertData(name,"hdlr");attrs[`block-handler-${idx}`]=ev;}
if(ast.ref){if(this.dev){this.helpers.add("makeRefWrapper");this.target.hasRefWrapper=true;}
const isDynamic=INTERP_REGEXP.test(ast.ref);let name=`\`${ast.ref}\``;if(isDynamic){name=replaceDynamicParts(ast.ref,(expr)=>this.captureExpression(expr,true));}
let setRefStr=`(el) => this.__owl__.setRef((${name}), el)`;if(this.dev){setRefStr=`refWrapper(${name}, ${setRefStr})`;}
const idx=block.insertData(setRefStr,"ref");attrs["block-ref"]=String(idx);}
const nameSpace=ast.ns||ctx.nameSpace;const dom=nameSpace?xmlDoc.createElementNS(nameSpace,ast.tag):xmlDoc.createElement(ast.tag);for(const[attr,val]of Object.entries(attrs)){if(!(attr==="class"&&val==="")){dom.setAttribute(attr,val);}}
block.insert(dom);if(ast.content.length){const initialDom=block.currentDom;block.currentDom=dom;const children=ast.content;for(let i=0;i<children.length;i++){const child=ast.content[i];const subCtx=createContext(ctx,{block,index:block.childNumber,forceNewBlock:false,isLast:ctx.isLast&&i===children.length-1,tKeyExpr:ctx.tKeyExpr,nameSpace,tModelSelectedExpr,inPreTag:ctx.inPreTag||ast.tag==="pre",});this.compileAST(child,subCtx);}
block.currentDom=initialDom;}
if(isNewBlock){this.insertBlock(`${block.blockName}(ddd)`,block,ctx);if(block.children.length&&block.hasDynamicChildren){const code=this.target.code;const children=block.children.slice();let current=children.shift();for(let i=codeIdx;i<code.length;i++){if(code[i].trimStart().startsWith(`const ${current.varName} `)){code[i]=code[i].replace(`const ${current.varName}`,current.varName);current=children.shift();if(!current)
break;}}
this.addLine(`let ${block.children.map((c) => c.varName).join(", ")};`,codeIdx);}}
return block.varName;}
compileTEsc(ast,ctx){let{block,forceNewBlock}=ctx;let expr;if(ast.expr==="0"){this.helpers.add("zero");expr=`ctx[zero]`;}
else{expr=compileExpr(ast.expr);if(ast.defaultValue){this.helpers.add("withDefault");expr=`withDefault(${expr}, ${toStringExpression(ast.defaultValue)})`;}}
if(!block||forceNewBlock){block=this.createBlock(block,"text",ctx);this.insertBlock(`text(${expr})`,block,{...ctx,forceNewBlock:forceNewBlock&&!block});}
else{const idx=block.insertData(expr,"txt");const text=xmlDoc.createElement(`block-text-${idx}`);block.insert(text);}
return block.varName;}
compileTOut(ast,ctx){let{block}=ctx;if(block){this.insertAnchor(block);}
block=this.createBlock(block,"html",ctx);let blockStr;if(ast.expr==="0"){this.helpers.add("zero");blockStr=`ctx[zero]`;}
else if(ast.body){let bodyValue=null;bodyValue=BlockDescription.nextBlockId;const subCtx=createContext(ctx);this.compileAST({type:3,content:ast.body},subCtx);this.helpers.add("safeOutput");blockStr=`safeOutput(${compileExpr(ast.expr)}, b${bodyValue})`;}
else{this.helpers.add("safeOutput");blockStr=`safeOutput(${compileExpr(ast.expr)})`;}
this.insertBlock(blockStr,block,ctx);return block.varName;}
compileTIfBranch(content,block,ctx){this.target.indentLevel++;let childN=block.children.length;this.compileAST(content,createContext(ctx,{block,index:ctx.index}));if(block.children.length>childN){this.insertAnchor(block,childN);}
this.target.indentLevel--;}
compileTIf(ast,ctx,nextNode){let{block,forceNewBlock}=ctx;const codeIdx=this.target.code.length;const isNewBlock=!block||(block.type!=="multi"&&forceNewBlock);if(block){block.hasDynamicChildren=true;}
if(!block||(block.type!=="multi"&&forceNewBlock)){block=this.createBlock(block,"multi",ctx);}
this.addLine(`if (${compileExpr(ast.condition)}) {`);this.compileTIfBranch(ast.content,block,ctx);if(ast.tElif){for(let clause of ast.tElif){this.addLine(`} else if (${compileExpr(clause.condition)}) {`);this.compileTIfBranch(clause.content,block,ctx);}}
if(ast.tElse){this.addLine(`} else {`);this.compileTIfBranch(ast.tElse,block,ctx);}
this.addLine("}");if(isNewBlock){if(block.children.length){const code=this.target.code;const children=block.children.slice();let current=children.shift();for(let i=codeIdx;i<code.length;i++){if(code[i].trimStart().startsWith(`const ${current.varName} `)){code[i]=code[i].replace(`const ${current.varName}`,current.varName);current=children.shift();if(!current)
break;}}
this.addLine(`let ${block.children.map((c) => c.varName).join(", ")};`,codeIdx);}
const args=block.children.map((c)=>c.varName).join(", ");this.insertBlock(`multi([${args}])`,block,ctx);}
return block.varName;}
compileTForeach(ast,ctx){let{block}=ctx;if(block){this.insertAnchor(block);}
block=this.createBlock(block,"list",ctx);this.target.loopLevel++;const loopVar=`i${this.target.loopLevel}`;this.addLine(`ctx = Object.create(ctx);`);const vals=`v_block${block.id}`;const keys=`k_block${block.id}`;const l=`l_block${block.id}`;const c=`c_block${block.id}`;this.helpers.add("prepareList");this.define(`[${keys}, ${vals}, ${l}, ${c}]`,`prepareList(${compileExpr(ast.collection)});`);if(this.dev){this.define(`keys${block.id}`,`new Set()`);}
this.addLine(`for (let ${loopVar} = 0; ${loopVar} < ${l}; ${loopVar}++) {`);this.target.indentLevel++;this.addLine(`ctx[\`${ast.elem}\`] = ${keys}[${loopVar}];`);if(!ast.hasNoFirst){this.addLine(`ctx[\`${ast.elem}_first\`] = ${loopVar} === 0;`);}
if(!ast.hasNoLast){this.addLine(`ctx[\`${ast.elem}_last\`] = ${loopVar} === ${keys}.length - 1;`);}
if(!ast.hasNoIndex){this.addLine(`ctx[\`${ast.elem}_index\`] = ${loopVar};`);}
if(!ast.hasNoValue){this.addLine(`ctx[\`${ast.elem}_value\`] = ${vals}[${loopVar}];`);}
this.define(`key${this.target.loopLevel}`,ast.key?compileExpr(ast.key):loopVar);if(this.dev){this.helpers.add("OwlError");this.addLine(`if (keys${block.id}.has(String(key${this.target.loopLevel}))) { throw new OwlError(\`Got duplicate key in t-foreach: \${key${this.target.loopLevel}}\`)}`);this.addLine(`keys${block.id}.add(String(key${this.target.loopLevel}));`);}
let id;if(ast.memo){this.target.hasCache=true;id=generateId();this.define(`memo${id}`,compileExpr(ast.memo));this.define(`vnode${id}`,`cache[key${this.target.loopLevel}];`);this.addLine(`if (vnode${id}) {`);this.target.indentLevel++;this.addLine(`if (shallowEqual(vnode${id}.memo, memo${id})) {`);this.target.indentLevel++;this.addLine(`${c}[${loopVar}] = vnode${id};`);this.addLine(`nextCache[key${this.target.loopLevel}] = vnode${id};`);this.addLine(`continue;`);this.target.indentLevel--;this.addLine("}");this.target.indentLevel--;this.addLine("}");}
const subCtx=createContext(ctx,{block,index:loopVar});this.compileAST(ast.body,subCtx);if(ast.memo){this.addLine(`nextCache[key${this.target.loopLevel}] = Object.assign(${c}[${loopVar}], {memo: memo${id}});`);}
this.target.indentLevel--;this.target.loopLevel--;this.addLine(`}`);if(!ctx.isLast){this.addLine(`ctx = ctx.__proto__;`);}
this.insertBlock("l",block,ctx);return block.varName;}
compileTKey(ast,ctx){const tKeyExpr=generateId("tKey_");this.define(tKeyExpr,compileExpr(ast.expr));ctx=createContext(ctx,{tKeyExpr,block:ctx.block,index:ctx.index,});return this.compileAST(ast.content,ctx);}
compileMulti(ast,ctx){let{block,forceNewBlock}=ctx;const isNewBlock=!block||forceNewBlock;let codeIdx=this.target.code.length;if(isNewBlock){const n=ast.content.filter((c)=>c.type!==6).length;let result=null;if(n<=1){for(let child of ast.content){const blockName=this.compileAST(child,ctx);result=result||blockName;}
return result;}
block=this.createBlock(block,"multi",ctx);}
let index=0;for(let i=0,l=ast.content.length;i<l;i++){const child=ast.content[i];const isTSet=child.type===6;const subCtx=createContext(ctx,{block,index,forceNewBlock:!isTSet,isLast:ctx.isLast&&i===l-1,});this.compileAST(child,subCtx);if(!isTSet){index++;}}
if(isNewBlock){if(block.hasDynamicChildren&&block.children.length){const code=this.target.code;const children=block.children.slice();let current=children.shift();for(let i=codeIdx;i<code.length;i++){if(code[i].trimStart().startsWith(`const ${current.varName} `)){code[i]=code[i].replace(`const ${current.varName}`,current.varName);current=children.shift();if(!current)
break;}}
this.addLine(`let ${block.children.map((c) => c.varName).join(", ")};`,codeIdx);}
const args=block.children.map((c)=>c.varName).join(", ");this.insertBlock(`multi([${args}])`,block,ctx);}
return block.varName;}
compileTCall(ast,ctx){let{block,forceNewBlock}=ctx;let ctxVar=ctx.ctxVar||"ctx";if(ast.context){ctxVar=generateId("ctx");this.addLine(`let ${ctxVar} = ${compileExpr(ast.context)};`);}
const isDynamic=INTERP_REGEXP.test(ast.name);const subTemplate=isDynamic?interpolate(ast.name):"`"+ast.name+"`";if(block&&!forceNewBlock){this.insertAnchor(block);}
block=this.createBlock(block,"multi",ctx);if(ast.body){this.addLine(`${ctxVar} = Object.create(${ctxVar});`);this.addLine(`${ctxVar}[isBoundary] = 1;`);this.helpers.add("isBoundary");const subCtx=createContext(ctx,{ctxVar});const bl=this.compileMulti({type:3,content:ast.body},subCtx);if(bl){this.helpers.add("zero");this.addLine(`${ctxVar}[zero] = ${bl};`);}}
const key=this.generateComponentKey();if(isDynamic){const templateVar=generateId("template");if(!this.staticDefs.find((d)=>d.id==="call")){this.staticDefs.push({id:"call",expr:`app.callTemplate.bind(app)`});}
this.define(templateVar,subTemplate);this.insertBlock(`call(this, ${templateVar}, ${ctxVar}, node, ${key})`,block,{...ctx,forceNewBlock:!block,});}
else{const id=generateId(`callTemplate_`);this.staticDefs.push({id,expr:`app.getTemplate(${subTemplate})`});this.insertBlock(`${id}.call(this, ${ctxVar}, node, ${key})`,block,{...ctx,forceNewBlock:!block,});}
if(ast.body&&!ctx.isLast){this.addLine(`${ctxVar} = ${ctxVar}.__proto__;`);}
return block.varName;}
compileTCallBlock(ast,ctx){let{block,forceNewBlock}=ctx;if(block){if(!forceNewBlock){this.insertAnchor(block);}}
block=this.createBlock(block,"multi",ctx);this.insertBlock(compileExpr(ast.name),block,{...ctx,forceNewBlock:!block});return block.varName;}
compileTSet(ast,ctx){this.target.shouldProtectScope=true;this.helpers.add("isBoundary").add("withDefault");const expr=ast.value?compileExpr(ast.value||""):"null";if(ast.body){this.helpers.add("LazyValue");const bodyAst={type:3,content:ast.body};const name=this.compileInNewTarget("value",bodyAst,ctx);let key=this.target.currentKey(ctx);let value=`new LazyValue(${name}, ctx, this, node, ${key})`;value=ast.value?(value?`withDefault(${expr}, ${value})`:expr):value;this.addLine(`ctx[\`${ast.name}\`] = ${value};`);}
else{let value;if(ast.defaultValue){const defaultValue=toStringExpression(ctx.translate?this.translate(ast.defaultValue,ctx.translationCtx):ast.defaultValue);if(ast.value){value=`withDefault(${expr}, ${defaultValue})`;}
else{value=defaultValue;}}
else{value=expr;}
this.helpers.add("setContextValue");this.addLine(`setContextValue(${ctx.ctxVar || "ctx"}, "${ast.name}", ${value});`);}
return null;}
generateComponentKey(currentKey="key"){const parts=[generateId("__")];for(let i=0;i<this.target.loopLevel;i++){parts.push(`\${key${i + 1}}`);}
return`${currentKey} + \`${parts.join("__")}\``;}
formatProp(name,value,attrsTranslationCtx,translationCtx){if(name.endsWith(".translate")){const attrTranslationCtx=(attrsTranslationCtx===null||attrsTranslationCtx===void 0?void 0:attrsTranslationCtx[name])||translationCtx;value=toStringExpression(this.translateFn(value,attrTranslationCtx));}
else{value=this.captureExpression(value);}
if(name.includes(".")){let[_name,suffix]=name.split(".");name=_name;switch(suffix){case"bind":value=`(${value}).bind(this)`;break;case"alike":case"translate":break;default:throw new OwlError(`Invalid prop suffix: ${suffix}`);}}
name=/^[a-z_]+$/i.test(name)?name:`'${name}'`;return`${name}: ${value || undefined}`;}
formatPropObject(obj,attrsTranslationCtx,translationCtx){return Object.entries(obj).map(([k,v])=>this.formatProp(k,v,attrsTranslationCtx,translationCtx));}
getPropString(props,dynProps){let propString=`{${props.join(",")}}`;if(dynProps){propString=`Object.assign({}, ${compileExpr(dynProps)}${props.length ? ", " + propString : ""})`;}
return propString;}
compileComponent(ast,ctx){let{block}=ctx;const hasSlotsProp="slots"in(ast.props||{});const props=ast.props?this.formatPropObject(ast.props,ast.propsTranslationCtx,ctx.translationCtx):[];let slotDef="";if(ast.slots){let ctxStr="ctx";if(this.target.loopLevel||!this.hasSafeContext){ctxStr=generateId("ctx");this.helpers.add("capture");this.define(ctxStr,`capture(ctx)`);}
let slotStr=[];for(let slotName in ast.slots){const slotAst=ast.slots[slotName];const params=[];if(slotAst.content){const name=this.compileInNewTarget("slot",slotAst.content,ctx,slotAst.on);params.push(`__render: ${name}.bind(this), __ctx: ${ctxStr}`);}
const scope=ast.slots[slotName].scope;if(scope){params.push(`__scope: "${scope}"`);}
if(ast.slots[slotName].attrs){params.push(...this.formatPropObject(ast.slots[slotName].attrs,ast.slots[slotName].attrsTranslationCtx,ctx.translationCtx));}
const slotInfo=`{${params.join(", ")}}`;slotStr.push(`'${slotName}': ${slotInfo}`);}
slotDef=`{${slotStr.join(", ")}}`;}
if(slotDef&&!(ast.dynamicProps||hasSlotsProp)){this.helpers.add("markRaw");props.push(`slots: markRaw(${slotDef})`);}
let propString=this.getPropString(props,ast.dynamicProps);let propVar;if((slotDef&&(ast.dynamicProps||hasSlotsProp))||this.dev){propVar=generateId("props");this.define(propVar,propString);propString=propVar;}
if(slotDef&&(ast.dynamicProps||hasSlotsProp)){this.helpers.add("markRaw");this.addLine(`${propVar}.slots = markRaw(Object.assign(${slotDef}, ${propVar}.slots))`);}
let expr;if(ast.isDynamic){expr=generateId("Comp");this.define(expr,compileExpr(ast.name));}
else{expr=`\`${ast.name}\``;}
if(this.dev){this.addLine(`helpers.validateProps(${expr}, ${propVar}, this);`);}
if(block&&(ctx.forceNewBlock===false||ctx.tKeyExpr)){this.insertAnchor(block);}
let keyArg=this.generateComponentKey();if(ctx.tKeyExpr){keyArg=`${ctx.tKeyExpr} + ${keyArg}`;}
let id=generateId("comp");const propList=[];for(let p in ast.props||{}){let[name,suffix]=p.split(".");if(!suffix){propList.push(`"${name}"`);}}
this.staticDefs.push({id,expr:`app.createComponent(${ast.isDynamic ? null : expr}, ${!ast.isDynamic}, ${!!ast.slots}, ${!!ast.dynamicProps}, [${propList}])`,});if(ast.isDynamic){keyArg=`(${expr}).name + ${keyArg}`;}
let blockExpr=`${id}(${propString}, ${keyArg}, node, this, ${ast.isDynamic ? expr : null})`;if(ast.isDynamic){blockExpr=`toggler(${expr}, ${blockExpr})`;}
if(ast.on){blockExpr=this.wrapWithEventCatcher(blockExpr,ast.on);}
block=this.createBlock(block,"multi",ctx);this.insertBlock(blockExpr,block,ctx);return block.varName;}
wrapWithEventCatcher(expr,on){this.helpers.add("createCatcher");let name=generateId("catcher");let spec={};let handlers=[];for(let ev in on){let handlerId=generateId("hdlr");let idx=handlers.push(handlerId)-1;spec[ev]=idx;const handler=this.generateHandlerCode(ev,on[ev]);this.define(handlerId,handler);}
this.staticDefs.push({id:name,expr:`createCatcher(${JSON.stringify(spec)})`});return`${name}(${expr}, [${handlers.join(",")}])`;}
compileTSlot(ast,ctx){this.helpers.add("callSlot");let{block}=ctx;let blockString;let slotName;let dynamic=false;let isMultiple=false;if(ast.name.match(INTERP_REGEXP)){dynamic=true;isMultiple=true;slotName=interpolate(ast.name);}
else{slotName="'"+ast.name+"'";isMultiple=isMultiple||this.slotNames.has(ast.name);this.slotNames.add(ast.name);}
const dynProps=ast.attrs?ast.attrs["t-props"]:null;if(ast.attrs){delete ast.attrs["t-props"];}
let key=this.target.loopLevel?`key${this.target.loopLevel}`:"key";if(isMultiple){key=this.generateComponentKey(key);}
const props=ast.attrs?this.formatPropObject(ast.attrs,ast.attrsTranslationCtx,ctx.translationCtx):[];const scope=this.getPropString(props,dynProps);if(ast.defaultContent){const name=this.compileInNewTarget("defaultContent",ast.defaultContent,ctx);blockString=`callSlot(ctx, node, ${key}, ${slotName}, ${dynamic}, ${scope}, ${name}.bind(this))`;}
else{if(dynamic){let name=generateId("slot");this.define(name,slotName);blockString=`toggler(${name}, callSlot(ctx, node, ${key}, ${name}, ${dynamic}, ${scope}))`;}
else{blockString=`callSlot(ctx, node, ${key}, ${slotName}, ${dynamic}, ${scope})`;}}
if(ast.on){blockString=this.wrapWithEventCatcher(blockString,ast.on);}
if(block){this.insertAnchor(block);}
block=this.createBlock(block,"multi",ctx);this.insertBlock(blockString,block,{...ctx,forceNewBlock:false});return block.varName;}
compileTTranslation(ast,ctx){if(ast.content){return this.compileAST(ast.content,Object.assign({},ctx,{translate:false}));}
return null;}
compileTTranslationContext(ast,ctx){if(ast.content){return this.compileAST(ast.content,Object.assign({},ctx,{translationCtx:ast.translationCtx}));}
return null;}
compileTPortal(ast,ctx){if(!this.staticDefs.find((d)=>d.id==="Portal")){this.staticDefs.push({id:"Portal",expr:`app.Portal`});}
let{block}=ctx;const name=this.compileInNewTarget("slot",ast.content,ctx);let ctxStr="ctx";if(this.target.loopLevel||!this.hasSafeContext){ctxStr=generateId("ctx");this.helpers.add("capture");this.define(ctxStr,`capture(ctx)`);}
let id=generateId("comp");this.staticDefs.push({id,expr:`app.createComponent(null, false, true, false, false)`,});const target=compileExpr(ast.target);const key=this.generateComponentKey();const blockString=`${id}({target: ${target},slots: {'default': {__render: ${name}.bind(this), __ctx: ${ctxStr}}}}, ${key}, node, ctx, Portal)`;if(block){this.insertAnchor(block);}
block=this.createBlock(block,"multi",ctx);this.insertBlock(blockString,block,{...ctx,forceNewBlock:false});return block.varName;}}
const cache=new WeakMap();function parse(xml,customDir){const ctx={inPreTag:false,customDirectives:customDir,};if(typeof xml==="string"){const elem=parseXML(`<t>${xml}</t>`).firstChild;return _parse(elem,ctx);}
let ast=cache.get(xml);if(!ast){ast=_parse(xml.cloneNode(true),ctx);cache.set(xml,ast);}
return ast;}
function _parse(xml,ctx){normalizeXML(xml);return parseNode(xml,ctx)||{type:0,value:""};}
function parseNode(node,ctx){if(!(node instanceof Element)){return parseTextCommentNode(node,ctx);}
return(parseTCustom(node,ctx)||parseTDebugLog(node,ctx)||parseTForEach(node,ctx)||parseTIf(node,ctx)||parseTPortal(node,ctx)||parseTCall(node,ctx)||parseTCallBlock(node)||parseTEscNode(node,ctx)||parseTOutNode(node,ctx)||parseTKey(node,ctx)||parseTTranslation(node,ctx)||parseTTranslationContext(node,ctx)||parseTSlot(node,ctx)||parseComponent(node,ctx)||parseDOMNode(node,ctx)||parseTSetNode(node,ctx)||parseTNode(node,ctx));}
function parseTNode(node,ctx){if(node.tagName!=="t"){return null;}
return parseChildNodes(node,ctx);}
const lineBreakRE=/[\r\n]/;function parseTextCommentNode(node,ctx){if(node.nodeType===Node.TEXT_NODE){let value=node.textContent||"";if(!ctx.inPreTag&&lineBreakRE.test(value)&&!value.trim()){return null;}
return{type:0,value};}
else if(node.nodeType===Node.COMMENT_NODE){return{type:1,value:node.textContent||""};}
return null;}
function parseTCustom(node,ctx){if(!ctx.customDirectives){return null;}
const nodeAttrsNames=node.getAttributeNames();for(let attr of nodeAttrsNames){if(attr==="t-custom"||attr==="t-custom-"){throw new OwlError("Missing custom directive name with t-custom directive");}
if(attr.startsWith("t-custom-")){const directiveName=attr.split(".")[0].slice(9);const customDirective=ctx.customDirectives[directiveName];if(!customDirective){throw new OwlError(`Custom directive "${directiveName}" is not defined`);}
const value=node.getAttribute(attr);const modifiers=attr.split(".").slice(1);node.removeAttribute(attr);try{customDirective(node,value,modifiers);}
catch(error){throw new OwlError(`Custom directive "${directiveName}" throw the following error: ${error}`);}
return parseNode(node,ctx);}}
return null;}
function parseTDebugLog(node,ctx){if(node.hasAttribute("t-debug")){node.removeAttribute("t-debug");return{type:12,content:parseNode(node,ctx),};}
if(node.hasAttribute("t-log")){const expr=node.getAttribute("t-log");node.removeAttribute("t-log");return{type:13,expr,content:parseNode(node,ctx),};}
return null;}
const hasDotAtTheEnd=/\.[\w_]+\s*$/;const hasBracketsAtTheEnd=/\[[^\[]+\]\s*$/;const ROOT_SVG_TAGS=new Set(["svg","g","path"]);function parseDOMNode(node,ctx){const{tagName}=node;const dynamicTag=node.getAttribute("t-tag");node.removeAttribute("t-tag");if(tagName==="t"&&!dynamicTag){return null;}
if(tagName.startsWith("block-")){throw new OwlError(`Invalid tag name: '${tagName}'`);}
ctx=Object.assign({},ctx);if(tagName==="pre"){ctx.inPreTag=true;}
let ns=!ctx.nameSpace&&ROOT_SVG_TAGS.has(tagName)?"http://www.w3.org/2000/svg":null;const ref=node.getAttribute("t-ref");node.removeAttribute("t-ref");const nodeAttrsNames=node.getAttributeNames();let attrs=null;let attrsTranslationCtx=null;let on=null;let model=null;for(let attr of nodeAttrsNames){const value=node.getAttribute(attr);if(attr==="t-on"||attr==="t-on-"){throw new OwlError("Missing event name with t-on directive");}
if(attr.startsWith("t-on-")){on=on||{};on[attr.slice(5)]=value;}
else if(attr.startsWith("t-model")){if(!["input","select","textarea"].includes(tagName)){throw new OwlError("The t-model directive only works with <input>, <textarea> and <select>");}
let baseExpr,expr;if(hasDotAtTheEnd.test(value)){const index=value.lastIndexOf(".");baseExpr=value.slice(0,index);expr=`'${value.slice(index + 1)}'`;}
else if(hasBracketsAtTheEnd.test(value)){const index=value.lastIndexOf("[");baseExpr=value.slice(0,index);expr=value.slice(index+1,-1);}
else{throw new OwlError(`Invalid t-model expression: "${value}" (it should be assignable)`);}
const typeAttr=node.getAttribute("type");const isInput=tagName==="input";const isSelect=tagName==="select";const isCheckboxInput=isInput&&typeAttr==="checkbox";const isRadioInput=isInput&&typeAttr==="radio";const hasTrimMod=attr.includes(".trim");const hasLazyMod=hasTrimMod||attr.includes(".lazy");const hasNumberMod=attr.includes(".number");const eventType=isRadioInput?"click":isSelect||hasLazyMod?"change":"input";model={baseExpr,expr,targetAttr:isCheckboxInput?"checked":"value",specialInitTargetAttr:isRadioInput?"checked":null,eventType,hasDynamicChildren:false,shouldTrim:hasTrimMod,shouldNumberize:hasNumberMod,};if(isSelect){ctx=Object.assign({},ctx);ctx.tModelInfo=model;}}
else if(attr.startsWith("block-")){throw new OwlError(`Invalid attribute: '${attr}'`);}
else if(attr==="xmlns"){ns=value;}
else if(attr.startsWith("t-translation-context-")){const attrName=attr.slice(22);attrsTranslationCtx=attrsTranslationCtx||{};attrsTranslationCtx[attrName]=value;}
else if(attr!=="t-name"){if(attr.startsWith("t-")&&!attr.startsWith("t-att")){throw new OwlError(`Unknown QWeb directive: '${attr}'`);}
const tModel=ctx.tModelInfo;if(tModel&&["t-att-value","t-attf-value"].includes(attr)){tModel.hasDynamicChildren=true;}
attrs=attrs||{};attrs[attr]=value;}}
if(ns){ctx.nameSpace=ns;}
const children=parseChildren(node,ctx);return{type:2,tag:tagName,dynamicTag,attrs,attrsTranslationCtx,on,ref,content:children,model,ns,};}
function parseTEscNode(node,ctx){if(!node.hasAttribute("t-esc")){return null;}
const escValue=node.getAttribute("t-esc");node.removeAttribute("t-esc");const tesc={type:4,expr:escValue,defaultValue:node.textContent||"",};let ref=node.getAttribute("t-ref");node.removeAttribute("t-ref");const ast=parseNode(node,ctx);if(!ast){return tesc;}
if(ast.type===2){return{...ast,ref,content:[tesc],};}
return tesc;}
function parseTOutNode(node,ctx){if(!node.hasAttribute("t-out")&&!node.hasAttribute("t-raw")){return null;}
if(node.hasAttribute("t-raw")){console.warn(`t-raw has been deprecated in favor of t-out. If the value to render is not wrapped by the "markup" function, it will be escaped`);}
const expr=(node.getAttribute("t-out")||node.getAttribute("t-raw"));node.removeAttribute("t-out");node.removeAttribute("t-raw");const tOut={type:8,expr,body:null};const ref=node.getAttribute("t-ref");node.removeAttribute("t-ref");const ast=parseNode(node,ctx);if(!ast){return tOut;}
if(ast.type===2){tOut.body=ast.content.length?ast.content:null;return{...ast,ref,content:[tOut],};}
return tOut;}
function parseTForEach(node,ctx){if(!node.hasAttribute("t-foreach")){return null;}
const html=node.outerHTML;const collection=node.getAttribute("t-foreach");node.removeAttribute("t-foreach");const elem=node.getAttribute("t-as")||"";node.removeAttribute("t-as");const key=node.getAttribute("t-key");if(!key){throw new OwlError(`"Directive t-foreach should always be used with a t-key!" (expression: t-foreach="${collection}" t-as="${elem}")`);}
node.removeAttribute("t-key");const memo=node.getAttribute("t-memo")||"";node.removeAttribute("t-memo");const body=parseNode(node,ctx);if(!body){return null;}
const hasNoTCall=!html.includes("t-call");const hasNoFirst=hasNoTCall&&!html.includes(`${elem}_first`);const hasNoLast=hasNoTCall&&!html.includes(`${elem}_last`);const hasNoIndex=hasNoTCall&&!html.includes(`${elem}_index`);const hasNoValue=hasNoTCall&&!html.includes(`${elem}_value`);return{type:9,collection,elem,body,memo,key,hasNoFirst,hasNoLast,hasNoIndex,hasNoValue,};}
function parseTKey(node,ctx){if(!node.hasAttribute("t-key")){return null;}
const key=node.getAttribute("t-key");node.removeAttribute("t-key");const body=parseNode(node,ctx);if(!body){return null;}
return{type:10,expr:key,content:body};}
function parseTCall(node,ctx){if(!node.hasAttribute("t-call")){return null;}
const subTemplate=node.getAttribute("t-call");const context=node.getAttribute("t-call-context");node.removeAttribute("t-call");node.removeAttribute("t-call-context");if(node.tagName!=="t"){const ast=parseNode(node,ctx);const tcall={type:7,name:subTemplate,body:null,context};if(ast&&ast.type===2){ast.content=[tcall];return ast;}
if(ast&&ast.type===11){return{...ast,slots:{default:{content:tcall,scope:null,on:null,attrs:null,attrsTranslationCtx:null,},},};}}
const body=parseChildren(node,ctx);return{type:7,name:subTemplate,body:body.length?body:null,context,};}
function parseTCallBlock(node,ctx){if(!node.hasAttribute("t-call-block")){return null;}
const name=node.getAttribute("t-call-block");return{type:15,name,};}
function parseTIf(node,ctx){if(!node.hasAttribute("t-if")){return null;}
const condition=node.getAttribute("t-if");node.removeAttribute("t-if");const content=parseNode(node,ctx)||{type:0,value:""};let nextElement=node.nextElementSibling;const tElifs=[];while(nextElement&&nextElement.hasAttribute("t-elif")){const condition=nextElement.getAttribute("t-elif");nextElement.removeAttribute("t-elif");const tElif=parseNode(nextElement,ctx);const next=nextElement.nextElementSibling;nextElement.remove();nextElement=next;if(tElif){tElifs.push({condition,content:tElif});}}
let tElse=null;if(nextElement&&nextElement.hasAttribute("t-else")){nextElement.removeAttribute("t-else");tElse=parseNode(nextElement,ctx);nextElement.remove();}
return{type:5,condition,content,tElif:tElifs.length?tElifs:null,tElse,};}
function parseTSetNode(node,ctx){if(!node.hasAttribute("t-set")){return null;}
const name=node.getAttribute("t-set");const value=node.getAttribute("t-value")||null;const defaultValue=node.innerHTML===node.textContent?node.textContent||null:null;let body=null;if(node.textContent!==node.innerHTML){body=parseChildren(node,ctx);}
return{type:6,name,value,defaultValue,body};}
const directiveErrorMap=new Map([["t-ref","t-ref is no longer supported on components. Consider exposing only the public part of the component's API through a callback prop.",],["t-att","t-att makes no sense on component: props are already treated as expressions"],["t-attf","t-attf is not supported on components: use template strings for string interpolation in props",],]);function parseComponent(node,ctx){let name=node.tagName;const firstLetter=name[0];let isDynamic=node.hasAttribute("t-component");if(isDynamic&&name!=="t"){throw new OwlError(`Directive 't-component' can only be used on <t> nodes (used on a <${name}>)`);}
if(!(firstLetter===firstLetter.toUpperCase()||isDynamic)){return null;}
if(isDynamic){name=node.getAttribute("t-component");node.removeAttribute("t-component");}
const dynamicProps=node.getAttribute("t-props");node.removeAttribute("t-props");const defaultSlotScope=node.getAttribute("t-slot-scope");node.removeAttribute("t-slot-scope");let on=null;let props=null;let propsTranslationCtx=null;for(let name of node.getAttributeNames()){const value=node.getAttribute(name);if(name.startsWith("t-translation-context-")){const attrName=name.slice(22);propsTranslationCtx=propsTranslationCtx||{};propsTranslationCtx[attrName]=value;}
else if(name.startsWith("t-")){if(name.startsWith("t-on-")){on=on||{};on[name.slice(5)]=value;}
else{const message=directiveErrorMap.get(name.split("-").slice(0,2).join("-"));throw new OwlError(message||`unsupported directive on Component: ${name}`);}}
else{props=props||{};props[name]=value;}}
let slots=null;if(node.hasChildNodes()){const clone=node.cloneNode(true);const slotNodes=Array.from(clone.querySelectorAll("[t-set-slot]"));for(let slotNode of slotNodes){if(slotNode.tagName!=="t"){throw new OwlError(`Directive 't-set-slot' can only be used on <t> nodes (used on a <${slotNode.tagName}>)`);}
const name=slotNode.getAttribute("t-set-slot");let el=slotNode.parentElement;let isInSubComponent=false;while(el&&el!==clone){if(el.hasAttribute("t-component")||el.tagName[0]===el.tagName[0].toUpperCase()){isInSubComponent=true;break;}
el=el.parentElement;}
if(isInSubComponent||!el){continue;}
slotNode.removeAttribute("t-set-slot");slotNode.remove();const slotAst=parseNode(slotNode,ctx);let on=null;let attrs=null;let attrsTranslationCtx=null;let scope=null;for(let attributeName of slotNode.getAttributeNames()){const value=slotNode.getAttribute(attributeName);if(attributeName==="t-slot-scope"){scope=value;continue;}
else if(attributeName.startsWith("t-translation-context-")){const attrName=attributeName.slice(22);attrsTranslationCtx=attrsTranslationCtx||{};attrsTranslationCtx[attrName]=value;}
else if(attributeName.startsWith("t-on-")){on=on||{};on[attributeName.slice(5)]=value;}
else{attrs=attrs||{};attrs[attributeName]=value;}}
slots=slots||{};slots[name]={content:slotAst,on,attrs,attrsTranslationCtx,scope};}
const defaultContent=parseChildNodes(clone,ctx);slots=slots||{};if(defaultContent&&!slots.default){slots.default={content:defaultContent,on,attrs:null,attrsTranslationCtx:null,scope:defaultSlotScope,};}}
return{type:11,name,isDynamic,dynamicProps,props,propsTranslationCtx,slots,on,};}
function parseTSlot(node,ctx){if(!node.hasAttribute("t-slot")){return null;}
const name=node.getAttribute("t-slot");node.removeAttribute("t-slot");let attrs=null;let attrsTranslationCtx=null;let on=null;for(let attributeName of node.getAttributeNames()){const value=node.getAttribute(attributeName);if(attributeName.startsWith("t-on-")){on=on||{};on[attributeName.slice(5)]=value;}
else if(attributeName.startsWith("t-translation-context-")){const attrName=attributeName.slice(22);attrsTranslationCtx=attrsTranslationCtx||{};attrsTranslationCtx[attrName]=value;}
else{attrs=attrs||{};attrs[attributeName]=value;}}
return{type:14,name,attrs,attrsTranslationCtx,on,defaultContent:parseChildNodes(node,ctx),};}
function parseTTranslation(node,ctx){if(node.getAttribute("t-translation")!=="off"){return null;}
node.removeAttribute("t-translation");return{type:16,content:parseNode(node,ctx),};}
function parseTTranslationContext(node,ctx){const translationCtx=node.getAttribute("t-translation-context");if(!translationCtx){return null;}
node.removeAttribute("t-translation-context");return{type:17,content:parseNode(node,ctx),translationCtx,};}
function parseTPortal(node,ctx){if(!node.hasAttribute("t-portal")){return null;}
const target=node.getAttribute("t-portal");node.removeAttribute("t-portal");const content=parseNode(node,ctx);if(!content){return{type:0,value:"",};}
return{type:18,target,content,};}
function parseChildren(node,ctx){const children=[];for(let child of node.childNodes){const childAst=parseNode(child,ctx);if(childAst){if(childAst.type===3){children.push(...childAst.content);}
else{children.push(childAst);}}}
return children;}
function parseChildNodes(node,ctx){const children=parseChildren(node,ctx);switch(children.length){case 0:return null;case 1:return children[0];default:return{type:3,content:children};}}
function normalizeTIf(el){let tbranch=el.querySelectorAll("[t-elif], [t-else]");for(let i=0,ilen=tbranch.length;i<ilen;i++){let node=tbranch[i];let prevElem=node.previousElementSibling;let pattr=(name)=>prevElem.getAttribute(name);let nattr=(name)=>+!!node.getAttribute(name);if(prevElem&&(pattr("t-if")||pattr("t-elif"))){if(pattr("t-foreach")){throw new OwlError("t-if cannot stay at the same level as t-foreach when using t-elif or t-else");}
if(["t-if","t-elif","t-else"].map(nattr).reduce(function(a,b){return a+b;})>1){throw new OwlError("Only one conditional branching directive is allowed per node");}
let textNode;while((textNode=node.previousSibling)!==prevElem){if(textNode.nodeValue.trim().length&&textNode.nodeType!==8){throw new OwlError("text is not allowed between branching directives");}
textNode.remove();}}
else{throw new OwlError("t-elif and t-else directives must be preceded by a t-if or t-elif directive");}}}
function normalizeTEscTOut(el){for(const d of["t-esc","t-out"]){const elements=[...el.querySelectorAll(`[${d}]`)].filter((el)=>el.tagName[0]===el.tagName[0].toUpperCase()||el.hasAttribute("t-component"));for(const el of elements){if(el.childNodes.length){throw new OwlError(`Cannot have ${d} on a component that already has content`);}
const value=el.getAttribute(d);el.removeAttribute(d);const t=el.ownerDocument.createElement("t");if(value!=null){t.setAttribute(d,value);}
el.appendChild(t);}}}
function normalizeXML(el){normalizeTIf(el);normalizeTEscTOut(el);}
function compile(template,options={hasGlobalValues:false,}){const ast=parse(template,options.customDirectives);const hasSafeContext=template instanceof Node?!(template instanceof Element)||template.querySelector("[t-set], [t-call]")===null:!template.includes("t-set")&&!template.includes("t-call");const codeGenerator=new CodeGenerator(ast,{...options,hasSafeContext});const code=codeGenerator.generateCode();try{return new Function("app, bdom, helpers",code);}
catch(originalError){const{name}=options;const nameStr=name?`template "${name}"`:"anonymous template";const err=new OwlError(`Failed to compile ${nameStr}: ${originalError.message}\n\ngenerated code:\nfunction(app, bdom, helpers) {\n${code}\n}`);err.cause=originalError;throw err;}}
const version="2.6.0";class Scheduler{constructor(){this.tasks=new Set();this.frame=0;this.delayedRenders=[];this.cancelledNodes=new Set();this.processing=false;this.requestAnimationFrame=Scheduler.requestAnimationFrame;}
addFiber(fiber){this.tasks.add(fiber.root);}
scheduleDestroy(node){this.cancelledNodes.add(node);if(this.frame===0){this.frame=this.requestAnimationFrame(()=>this.processTasks());}}
flush(){if(this.delayedRenders.length){let renders=this.delayedRenders;this.delayedRenders=[];for(let f of renders){if(f.root&&f.node.status!==3&&f.node.fiber===f){f.render();}}}
if(this.frame===0){this.frame=this.requestAnimationFrame(()=>this.processTasks());}}
processTasks(){if(this.processing){return;}
this.processing=true;this.frame=0;for(let node of this.cancelledNodes){node._destroy();}
this.cancelledNodes.clear();for(let task of this.tasks){this.processFiber(task);}
for(let task of this.tasks){if(task.node.status===3){this.tasks.delete(task);}}
this.processing=false;}
processFiber(fiber){if(fiber.root!==fiber){this.tasks.delete(fiber);return;}
const hasError=fibersInError.has(fiber);if(hasError&&fiber.counter!==0){this.tasks.delete(fiber);return;}
if(fiber.node.status===3){this.tasks.delete(fiber);return;}
if(fiber.counter===0){if(!hasError){fiber.complete();}
if(fiber.appliedToDom){this.tasks.delete(fiber);}}}}
Scheduler.requestAnimationFrame=window.requestAnimationFrame.bind(window);let hasBeenLogged=false;const DEV_MSG=()=>{const hash=window.owl?window.owl.__info__.hash:"master";return`Owl is running in 'dev' mode.

This is not suitable for production use.
See https://github.com/odoo/owl/blob/${hash}/doc/reference/app.md#configuration for more information.`;};const apps=new Set();window.__OWL_DEVTOOLS__||(window.__OWL_DEVTOOLS__={apps,Fiber,RootFiber,toRaw,reactive});class App extends TemplateSet{constructor(Root,config={}){super(config);this.scheduler=new Scheduler();this.subRoots=new Set();this.root=null;this.name=config.name||"";this.Root=Root;apps.add(this);if(config.test){this.dev=true;}
this.warnIfNoStaticProps=config.warnIfNoStaticProps||false;if(this.dev&&!config.test&&!hasBeenLogged){console.info(DEV_MSG());hasBeenLogged=true;}
const env=config.env||{};const descrs=Object.getOwnPropertyDescriptors(env);this.env=Object.freeze(Object.create(Object.getPrototypeOf(env),descrs));this.props=config.props||{};}
mount(target,options){const root=this.createRoot(this.Root,{props:this.props});this.root=root.node;this.subRoots.delete(root.node);return root.mount(target,options);}
createRoot(Root,config={}){const props=config.props||{};const env=this.env;if(config.env){this.env=config.env;}
const restore=saveCurrent();const node=this.makeNode(Root,props);restore();if(config.env){this.env=env;}
this.subRoots.add(node);return{node,mount:(target,options)=>{App.validateTarget(target);if(this.dev){validateProps(Root,props,{__owl__:{app:this}});}
const prom=this.mountNode(node,target,options);return prom;},destroy:()=>{this.subRoots.delete(node);node.destroy();this.scheduler.processTasks();},};}
makeNode(Component,props){return new ComponentNode(Component,props,this,null,null);}
mountNode(node,target,options){const promise=new Promise((resolve,reject)=>{let isResolved=false;node.mounted.push(()=>{resolve(node.component);isResolved=true;});let handlers=nodeErrorHandlers.get(node);if(!handlers){handlers=[];nodeErrorHandlers.set(node,handlers);}
handlers.unshift((e)=>{if(!isResolved){reject(e);}
throw e;});});node.mountComponent(target,options);return promise;}
destroy(){if(this.root){for(let subroot of this.subRoots){subroot.destroy();}
this.root.destroy();this.scheduler.processTasks();}
apps.delete(this);}
createComponent(name,isStatic,hasSlotsProp,hasDynamicPropList,propList){const isDynamic=!isStatic;let arePropsDifferent;const hasNoProp=propList.length===0;if(hasSlotsProp){arePropsDifferent=(_1,_2)=>true;}
else if(hasDynamicPropList){arePropsDifferent=function(props1,props2){for(let k in props1){if(props1[k]!==props2[k]){return true;}}
return Object.keys(props1).length!==Object.keys(props2).length;};}
else if(hasNoProp){arePropsDifferent=(_1,_2)=>false;}
else{arePropsDifferent=function(props1,props2){for(let p of propList){if(props1[p]!==props2[p]){return true;}}
return false;};}
const updateAndRender=ComponentNode.prototype.updateAndRender;const initiateRender=ComponentNode.prototype.initiateRender;return(props,key,ctx,parent,C)=>{let children=ctx.children;let node=children[key];if(isDynamic&&node&&node.component.constructor!==C){node=undefined;}
const parentFiber=ctx.fiber;if(node){if(arePropsDifferent(node.props,props)||parentFiber.deep||node.forceNextRender){node.forceNextRender=false;updateAndRender.call(node,props,parentFiber);}}
else{if(isStatic){const components=parent.constructor.components;if(!components){throw new OwlError(`Cannot find the definition of component "${name}", missing static components key in parent`);}
C=components[name];if(!C){throw new OwlError(`Cannot find the definition of component "${name}"`);}
else if(!(C.prototype instanceof Component)){throw new OwlError(`"${name}" is not a Component. It must inherit from the Component class`);}}
node=new ComponentNode(C,props,this,ctx,key);children[key]=node;initiateRender.call(node,new Fiber(node,parentFiber));}
parentFiber.childrenMap[key]=node;return node;};}
handleError(...args){return handleError(...args);}}
App.validateTarget=validateTarget;App.apps=apps;App.version=version;async function mount(C,target,config={}){return new App(C,config).mount(target,config);}
const mainEventHandler=(data,ev,currentTarget)=>{const{data:_data,modifiers}=filterOutModifiersFromData(data);data=_data;let stopped=false;if(modifiers.length){let selfMode=false;const isSelf=ev.target===currentTarget;for(const mod of modifiers){switch(mod){case"self":selfMode=true;if(isSelf){continue;}
else{return stopped;}
case"prevent":if((selfMode&&isSelf)||!selfMode)
ev.preventDefault();continue;case"stop":if((selfMode&&isSelf)||!selfMode)
ev.stopPropagation();stopped=true;continue;}}}
if(Object.hasOwnProperty.call(data,0)){const handler=data[0];if(typeof handler!=="function"){throw new OwlError(`Invalid handler (expected a function, received: '${handler}')`);}
let node=data[1]?data[1].__owl__:null;if(node?node.status===1:true){handler.call(node?node.component:null,ev);}}
return stopped;};function status(component){switch(component.__owl__.status){case 0:return"new";case 2:return"cancelled";case 1:return"mounted";case 3:return"destroyed";}}
function useRef(name){const node=getCurrent();const refs=node.refs;return{get el(){const el=refs[name];return inOwnerDocument(el)?el:null;},};}
function useEnv(){return getCurrent().component.env;}
function extendEnv(currentEnv,extension){const env=Object.create(currentEnv);const descrs=Object.getOwnPropertyDescriptors(extension);return Object.freeze(Object.defineProperties(env,descrs));}
function useSubEnv(envExtension){const node=getCurrent();node.component.env=extendEnv(node.component.env,envExtension);useChildSubEnv(envExtension);}
function useChildSubEnv(envExtension){const node=getCurrent();node.childEnv=extendEnv(node.childEnv,envExtension);}
function useEffect(effect,computeDependencies=()=>[NaN]){let cleanup;let dependencies;onMounted(()=>{dependencies=computeDependencies();cleanup=effect(...dependencies);});onPatched(()=>{const newDeps=computeDependencies();const shouldReapply=newDeps.some((val,i)=>val!==dependencies[i]);if(shouldReapply){dependencies=newDeps;if(cleanup){cleanup();}
cleanup=effect(...dependencies);}});onWillUnmount(()=>cleanup&&cleanup());}
function useExternalListener(target,eventName,handler,eventParams){const node=getCurrent();const boundHandler=handler.bind(node.component);onMounted(()=>target.addEventListener(eventName,boundHandler,eventParams));onWillUnmount(()=>target.removeEventListener(eventName,boundHandler,eventParams));}
config.shouldNormalizeDom=false;config.mainEventHandler=mainEventHandler;const blockDom={config,mount:mount$1,patch,remove,list,multi,text,toggler,createBlock,html,comment,};const __info__={version:App.version,};TemplateSet.prototype._compileTemplate=function _compileTemplate(name,template){return compile(template,{name,dev:this.dev,translateFn:this.translateFn,translatableAttributes:this.translatableAttributes,customDirectives:this.customDirectives,hasGlobalValues:this.hasGlobalValues,});};exports.App=App;exports.Component=Component;exports.EventBus=EventBus;exports.OwlError=OwlError;exports.__info__=__info__;exports.batched=batched;exports.blockDom=blockDom;exports.loadFile=loadFile;exports.markRaw=markRaw;exports.markup=markup;exports.mount=mount;exports.onError=onError;exports.onMounted=onMounted;exports.onPatched=onPatched;exports.onRendered=onRendered;exports.onWillDestroy=onWillDestroy;exports.onWillPatch=onWillPatch;exports.onWillRender=onWillRender;exports.onWillStart=onWillStart;exports.onWillUnmount=onWillUnmount;exports.onWillUpdateProps=onWillUpdateProps;exports.reactive=reactive;exports.status=status;exports.toRaw=toRaw;exports.useChildSubEnv=useChildSubEnv;exports.useComponent=useComponent;exports.useEffect=useEffect;exports.useEnv=useEnv;exports.useExternalListener=useExternalListener;exports.useRef=useRef;exports.useState=useState;exports.useSubEnv=useSubEnv;exports.validate=validate;exports.validateType=validateType;exports.whenReady=whenReady;exports.xml=xml;Object.defineProperty(exports,'__esModule',{value:true});__info__.date='2025-01-15T10:40:24.184Z';__info__.hash='a9be149';__info__.url='https://github.com/odoo/owl';})(this.owl=this.owl||{});;

/* /web/static/lib/owl/odoo_module.js */
odoo.define("@odoo/owl",[],function(){"use strict";return owl;});;

/* /web/static/lib/zxing-library/zxing-library.js */
(function(global,factory){typeof exports==='object'&&typeof module!=='undefined'?factory(exports):typeof define==='function'&&define.amd?define(['exports'],factory):(global=typeof globalThis!=='undefined'?globalThis:global||self,factory(global.ZXing={}));}(this,(function(exports){'use strict';function fixProto(target,prototype){var setPrototypeOf=Object.setPrototypeOf;setPrototypeOf?setPrototypeOf(target,prototype):target.__proto__=prototype;}
function fixStack(target,fn){if(fn===void 0){fn=target.constructor;}
var captureStackTrace=Error.captureStackTrace;captureStackTrace&&captureStackTrace(target,fn);}
var __extends=function(){var _extendStatics=function extendStatics(d,b){_extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p];}};return _extendStatics(d,b);};return function(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");_extendStatics(d,b);function __(){this.constructor=d;}
d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();var CustomError=function(_super){__extends(CustomError,_super);function CustomError(message,options){var _newTarget=this.constructor;var _this=_super.call(this,message,options)||this;Object.defineProperty(_this,'name',{value:_newTarget.name,enumerable:false,configurable:true});fixProto(_this,_newTarget.prototype);fixStack(_this);return _this;}
return CustomError;}(Error);class Exception extends CustomError{constructor(message=undefined){super(message);this.message=message;}
getKind(){const ex=this.constructor;return ex.kind;}}
Exception.kind='Exception';class ArgumentException extends Exception{}
ArgumentException.kind='ArgumentException';class IllegalArgumentException extends Exception{}
IllegalArgumentException.kind='IllegalArgumentException';class BinaryBitmap{constructor(binarizer){this.binarizer=binarizer;if(binarizer===null){throw new IllegalArgumentException('Binarizer must be non-null.');}}
getWidth(){return this.binarizer.getWidth();}
getHeight(){return this.binarizer.getHeight();}
getBlackRow(y,row){return this.binarizer.getBlackRow(y,row);}
getBlackMatrix(){if(this.matrix===null||this.matrix===undefined){this.matrix=this.binarizer.getBlackMatrix();}
return this.matrix;}
isCropSupported(){return this.binarizer.getLuminanceSource().isCropSupported();}
crop(left,top,width,height){const newSource=this.binarizer.getLuminanceSource().crop(left,top,width,height);return new BinaryBitmap(this.binarizer.createBinarizer(newSource));}
isRotateSupported(){return this.binarizer.getLuminanceSource().isRotateSupported();}
rotateCounterClockwise(){const newSource=this.binarizer.getLuminanceSource().rotateCounterClockwise();return new BinaryBitmap(this.binarizer.createBinarizer(newSource));}
rotateCounterClockwise45(){const newSource=this.binarizer.getLuminanceSource().rotateCounterClockwise45();return new BinaryBitmap(this.binarizer.createBinarizer(newSource));}
toString(){try{return this.getBlackMatrix().toString();}
catch(e){return'';}}}
class ChecksumException extends Exception{static getChecksumInstance(){return new ChecksumException();}}
ChecksumException.kind='ChecksumException';class Binarizer{constructor(source){this.source=source;}
getLuminanceSource(){return this.source;}
getWidth(){return this.source.getWidth();}
getHeight(){return this.source.getHeight();}}
class System{static arraycopy(src,srcPos,dest,destPos,length){while(length--){dest[destPos++]=src[srcPos++];}}
static currentTimeMillis(){return Date.now();}}
class IndexOutOfBoundsException extends Exception{}
IndexOutOfBoundsException.kind='IndexOutOfBoundsException';class ArrayIndexOutOfBoundsException extends IndexOutOfBoundsException{constructor(index=undefined,message=undefined){super(message);this.index=index;this.message=message;}}
ArrayIndexOutOfBoundsException.kind='ArrayIndexOutOfBoundsException';class Arrays{static fill(a,val){for(let i=0,len=a.length;i<len;i++)
a[i]=val;}
static fillWithin(a,fromIndex,toIndex,val){Arrays.rangeCheck(a.length,fromIndex,toIndex);for(let i=fromIndex;i<toIndex;i++)
a[i]=val;}
static rangeCheck(arrayLength,fromIndex,toIndex){if(fromIndex>toIndex){throw new IllegalArgumentException('fromIndex('+fromIndex+') > toIndex('+toIndex+')');}
if(fromIndex<0){throw new ArrayIndexOutOfBoundsException(fromIndex);}
if(toIndex>arrayLength){throw new ArrayIndexOutOfBoundsException(toIndex);}}
static asList(...args){return args;}
static create(rows,cols,value){let arr=Array.from({length:rows});return arr.map(x=>Array.from({length:cols}).fill(value));}
static createInt32Array(rows,cols,value){let arr=Array.from({length:rows});return arr.map(x=>Int32Array.from({length:cols}).fill(value));}
static equals(first,second){if(!first){return false;}
if(!second){return false;}
if(!first.length){return false;}
if(!second.length){return false;}
if(first.length!==second.length){return false;}
for(let i=0,length=first.length;i<length;i++){if(first[i]!==second[i]){return false;}}
return true;}
static hashCode(a){if(a===null){return 0;}
let result=1;for(const element of a){result=31*result+element;}
return result;}
static fillUint8Array(a,value){for(let i=0;i!==a.length;i++){a[i]=value;}}
static copyOf(original,newLength){return original.slice(0,newLength);}
static copyOfUint8Array(original,newLength){if(original.length<=newLength){const newArray=new Uint8Array(newLength);newArray.set(original);return newArray;}
return original.slice(0,newLength);}
static copyOfRange(original,from,to){const newLength=to-from;const copy=new Int32Array(newLength);System.arraycopy(original,from,copy,0,newLength);return copy;}
static binarySearch(ar,el,comparator){if(undefined===comparator){comparator=Arrays.numberComparator;}
let m=0;let n=ar.length-1;while(m<=n){const k=(n+m)>>1;const cmp=comparator(el,ar[k]);if(cmp>0){m=k+1;}
else if(cmp<0){n=k-1;}
else{return k;}}
return-m-1;}
static numberComparator(a,b){return a-b;}}
class Integer{static numberOfTrailingZeros(i){let y;if(i===0)
return 32;let n=31;y=i<<16;if(y!==0){n-=16;i=y;}
y=i<<8;if(y!==0){n-=8;i=y;}
y=i<<4;if(y!==0){n-=4;i=y;}
y=i<<2;if(y!==0){n-=2;i=y;}
return n-((i<<1)>>>31);}
static numberOfLeadingZeros(i){if(i===0){return 32;}
let n=1;if(i>>>16===0){n+=16;i<<=16;}
if(i>>>24===0){n+=8;i<<=8;}
if(i>>>28===0){n+=4;i<<=4;}
if(i>>>30===0){n+=2;i<<=2;}
n-=i>>>31;return n;}
static toHexString(i){return i.toString(16);}
static toBinaryString(intNumber){return String(parseInt(String(intNumber),2));}
static bitCount(i){i=i-((i>>>1)&0x55555555);i=(i&0x33333333)+((i>>>2)&0x33333333);i=(i+(i>>>4))&0x0f0f0f0f;i=i+(i>>>8);i=i+(i>>>16);return i&0x3f;}
static truncDivision(dividend,divisor){return Math.trunc(dividend/divisor);}
static parseInt(num,radix=undefined){return parseInt(num,radix);}}
Integer.MIN_VALUE_32_BITS=-2147483648;Integer.MAX_VALUE=Number.MAX_SAFE_INTEGER;class BitArray{constructor(size,bits){if(undefined===size){this.size=0;this.bits=new Int32Array(1);}
else{this.size=size;if(undefined===bits||null===bits){this.bits=BitArray.makeArray(size);}
else{this.bits=bits;}}}
getSize(){return this.size;}
getSizeInBytes(){return Math.floor((this.size+7)/8);}
ensureCapacity(size){if(size>this.bits.length*32){const newBits=BitArray.makeArray(size);System.arraycopy(this.bits,0,newBits,0,this.bits.length);this.bits=newBits;}}
get(i){return(this.bits[Math.floor(i/32)]&(1<<(i&0x1F)))!==0;}
set(i){this.bits[Math.floor(i/32)]|=1<<(i&0x1F);}
flip(i){this.bits[Math.floor(i/32)]^=1<<(i&0x1F);}
getNextSet(from){const size=this.size;if(from>=size){return size;}
const bits=this.bits;let bitsOffset=Math.floor(from/32);let currentBits=bits[bitsOffset];currentBits&=~((1<<(from&0x1F))-1);const length=bits.length;while(currentBits===0){if(++bitsOffset===length){return size;}
currentBits=bits[bitsOffset];}
const result=(bitsOffset*32)+Integer.numberOfTrailingZeros(currentBits);return result>size?size:result;}
getNextUnset(from){const size=this.size;if(from>=size){return size;}
const bits=this.bits;let bitsOffset=Math.floor(from/32);let currentBits=~bits[bitsOffset];currentBits&=~((1<<(from&0x1F))-1);const length=bits.length;while(currentBits===0){if(++bitsOffset===length){return size;}
currentBits=~bits[bitsOffset];}
const result=(bitsOffset*32)+Integer.numberOfTrailingZeros(currentBits);return result>size?size:result;}
setBulk(i,newBits){this.bits[Math.floor(i/32)]=newBits;}
setRange(start,end){if(end<start||start<0||end>this.size){throw new IllegalArgumentException();}
if(end===start){return;}
end--;const firstInt=Math.floor(start/32);const lastInt=Math.floor(end/32);const bits=this.bits;for(let i=firstInt;i<=lastInt;i++){const firstBit=i>firstInt?0:start&0x1F;const lastBit=i<lastInt?31:end&0x1F;const mask=(2<<lastBit)-(1<<firstBit);bits[i]|=mask;}}
clear(){const max=this.bits.length;const bits=this.bits;for(let i=0;i<max;i++){bits[i]=0;}}
isRange(start,end,value){if(end<start||start<0||end>this.size){throw new IllegalArgumentException();}
if(end===start){return true;}
end--;const firstInt=Math.floor(start/32);const lastInt=Math.floor(end/32);const bits=this.bits;for(let i=firstInt;i<=lastInt;i++){const firstBit=i>firstInt?0:start&0x1F;const lastBit=i<lastInt?31:end&0x1F;const mask=(2<<lastBit)-(1<<firstBit)&0xFFFFFFFF;if((bits[i]&mask)!==(value?mask:0)){return false;}}
return true;}
appendBit(bit){this.ensureCapacity(this.size+1);if(bit){this.bits[Math.floor(this.size/32)]|=1<<(this.size&0x1F);}
this.size++;}
appendBits(value,numBits){if(numBits<0||numBits>32){throw new IllegalArgumentException('Num bits must be between 0 and 32');}
this.ensureCapacity(this.size+numBits);for(let numBitsLeft=numBits;numBitsLeft>0;numBitsLeft--){this.appendBit(((value>>(numBitsLeft-1))&0x01)===1);}}
appendBitArray(other){const otherSize=other.size;this.ensureCapacity(this.size+otherSize);for(let i=0;i<otherSize;i++){this.appendBit(other.get(i));}}
xor(other){if(this.size!==other.size){throw new IllegalArgumentException('Sizes don\'t match');}
const bits=this.bits;for(let i=0,length=bits.length;i<length;i++){bits[i]^=other.bits[i];}}
toBytes(bitOffset,array,offset,numBytes){for(let i=0;i<numBytes;i++){let theByte=0;for(let j=0;j<8;j++){if(this.get(bitOffset)){theByte|=1<<(7-j);}
bitOffset++;}
array[offset+i]=theByte;}}
getBitArray(){return this.bits;}
reverse(){const newBits=new Int32Array(this.bits.length);const len=Math.floor((this.size-1)/32);const oldBitsLen=len+1;const bits=this.bits;for(let i=0;i<oldBitsLen;i++){let x=bits[i];x=((x>>1)&0x55555555)|((x&0x55555555)<<1);x=((x>>2)&0x33333333)|((x&0x33333333)<<2);x=((x>>4)&0x0f0f0f0f)|((x&0x0f0f0f0f)<<4);x=((x>>8)&0x00ff00ff)|((x&0x00ff00ff)<<8);x=((x>>16)&0x0000ffff)|((x&0x0000ffff)<<16);newBits[len-i]=x;}
if(this.size!==oldBitsLen*32){const leftOffset=oldBitsLen*32-this.size;let currentInt=newBits[0]>>>leftOffset;for(let i=1;i<oldBitsLen;i++){const nextInt=newBits[i];currentInt|=nextInt<<(32-leftOffset);newBits[i-1]=currentInt;currentInt=nextInt>>>leftOffset;}
newBits[oldBitsLen-1]=currentInt;}
this.bits=newBits;}
static makeArray(size){return new Int32Array(Math.floor((size+31)/32));}
equals(o){if(!(o instanceof BitArray)){return false;}
const other=o;return this.size===other.size&&Arrays.equals(this.bits,other.bits);}
hashCode(){return 31*this.size+Arrays.hashCode(this.bits);}
toString(){let result='';for(let i=0,size=this.size;i<size;i++){if((i&0x07)===0){result+=' ';}
result+=this.get(i)?'X':'.';}
return result;}
clone(){return new BitArray(this.size,this.bits.slice());}
toArray(){let result=[];for(let i=0,size=this.size;i<size;i++){result.push(this.get(i));}
return result;}}
var DecodeHintType;(function(DecodeHintType){DecodeHintType[DecodeHintType["OTHER"]=0]="OTHER";DecodeHintType[DecodeHintType["PURE_BARCODE"]=1]="PURE_BARCODE";DecodeHintType[DecodeHintType["POSSIBLE_FORMATS"]=2]="POSSIBLE_FORMATS";DecodeHintType[DecodeHintType["TRY_HARDER"]=3]="TRY_HARDER";DecodeHintType[DecodeHintType["CHARACTER_SET"]=4]="CHARACTER_SET";DecodeHintType[DecodeHintType["ALLOWED_LENGTHS"]=5]="ALLOWED_LENGTHS";DecodeHintType[DecodeHintType["ASSUME_CODE_39_CHECK_DIGIT"]=6]="ASSUME_CODE_39_CHECK_DIGIT";DecodeHintType[DecodeHintType["ASSUME_GS1"]=7]="ASSUME_GS1";DecodeHintType[DecodeHintType["RETURN_CODABAR_START_END"]=8]="RETURN_CODABAR_START_END";DecodeHintType[DecodeHintType["NEED_RESULT_POINT_CALLBACK"]=9]="NEED_RESULT_POINT_CALLBACK";DecodeHintType[DecodeHintType["ALLOWED_EAN_EXTENSIONS"]=10]="ALLOWED_EAN_EXTENSIONS";})(DecodeHintType||(DecodeHintType={}));var DecodeHintType$1=DecodeHintType;class FormatException extends Exception{static getFormatInstance(){return new FormatException();}}
FormatException.kind='FormatException';var CharacterSetValueIdentifiers;(function(CharacterSetValueIdentifiers){CharacterSetValueIdentifiers[CharacterSetValueIdentifiers["Cp437"]=0]="Cp437";CharacterSetValueIdentifiers[CharacterSetValueIdentifiers["ISO8859_1"]=1]="ISO8859_1";CharacterSetValueIdentifiers[CharacterSetValueIdentifiers["ISO8859_2"]=2]="ISO8859_2";CharacterSetValueIdentifiers[CharacterSetValueIdentifiers["ISO8859_3"]=3]="ISO8859_3";CharacterSetValueIdentifiers[CharacterSetValueIdentifiers["ISO8859_4"]=4]="ISO8859_4";CharacterSetValueIdentifiers[CharacterSetValueIdentifiers["ISO8859_5"]=5]="ISO8859_5";CharacterSetValueIdentifiers[CharacterSetValueIdentifiers["ISO8859_6"]=6]="ISO8859_6";CharacterSetValueIdentifiers[CharacterSetValueIdentifiers["ISO8859_7"]=7]="ISO8859_7";CharacterSetValueIdentifiers[CharacterSetValueIdentifiers["ISO8859_8"]=8]="ISO8859_8";CharacterSetValueIdentifiers[CharacterSetValueIdentifiers["ISO8859_9"]=9]="ISO8859_9";CharacterSetValueIdentifiers[CharacterSetValueIdentifiers["ISO8859_10"]=10]="ISO8859_10";CharacterSetValueIdentifiers[CharacterSetValueIdentifiers["ISO8859_11"]=11]="ISO8859_11";CharacterSetValueIdentifiers[CharacterSetValueIdentifiers["ISO8859_13"]=12]="ISO8859_13";CharacterSetValueIdentifiers[CharacterSetValueIdentifiers["ISO8859_14"]=13]="ISO8859_14";CharacterSetValueIdentifiers[CharacterSetValueIdentifiers["ISO8859_15"]=14]="ISO8859_15";CharacterSetValueIdentifiers[CharacterSetValueIdentifiers["ISO8859_16"]=15]="ISO8859_16";CharacterSetValueIdentifiers[CharacterSetValueIdentifiers["SJIS"]=16]="SJIS";CharacterSetValueIdentifiers[CharacterSetValueIdentifiers["Cp1250"]=17]="Cp1250";CharacterSetValueIdentifiers[CharacterSetValueIdentifiers["Cp1251"]=18]="Cp1251";CharacterSetValueIdentifiers[CharacterSetValueIdentifiers["Cp1252"]=19]="Cp1252";CharacterSetValueIdentifiers[CharacterSetValueIdentifiers["Cp1256"]=20]="Cp1256";CharacterSetValueIdentifiers[CharacterSetValueIdentifiers["UnicodeBigUnmarked"]=21]="UnicodeBigUnmarked";CharacterSetValueIdentifiers[CharacterSetValueIdentifiers["UTF8"]=22]="UTF8";CharacterSetValueIdentifiers[CharacterSetValueIdentifiers["ASCII"]=23]="ASCII";CharacterSetValueIdentifiers[CharacterSetValueIdentifiers["Big5"]=24]="Big5";CharacterSetValueIdentifiers[CharacterSetValueIdentifiers["GB18030"]=25]="GB18030";CharacterSetValueIdentifiers[CharacterSetValueIdentifiers["EUC_KR"]=26]="EUC_KR";})(CharacterSetValueIdentifiers||(CharacterSetValueIdentifiers={}));class CharacterSetECI{constructor(valueIdentifier,valuesParam,name,...otherEncodingNames){this.valueIdentifier=valueIdentifier;this.name=name;if(typeof valuesParam==='number'){this.values=Int32Array.from([valuesParam]);}
else{this.values=valuesParam;}
this.otherEncodingNames=otherEncodingNames;CharacterSetECI.VALUE_IDENTIFIER_TO_ECI.set(valueIdentifier,this);CharacterSetECI.NAME_TO_ECI.set(name,this);const values=this.values;for(let i=0,length=values.length;i!==length;i++){const v=values[i];CharacterSetECI.VALUES_TO_ECI.set(v,this);}
for(const otherName of otherEncodingNames){CharacterSetECI.NAME_TO_ECI.set(otherName,this);}}
getValueIdentifier(){return this.valueIdentifier;}
getName(){return this.name;}
getValue(){return this.values[0];}
static getCharacterSetECIByValue(value){if(value<0||value>=900){throw new FormatException('incorect value');}
const characterSet=CharacterSetECI.VALUES_TO_ECI.get(value);if(undefined===characterSet){throw new FormatException('incorect value');}
return characterSet;}
static getCharacterSetECIByName(name){const characterSet=CharacterSetECI.NAME_TO_ECI.get(name);if(undefined===characterSet){throw new FormatException('incorect value');}
return characterSet;}
equals(o){if(!(o instanceof CharacterSetECI)){return false;}
const other=o;return this.getName()===other.getName();}}
CharacterSetECI.VALUE_IDENTIFIER_TO_ECI=new Map();CharacterSetECI.VALUES_TO_ECI=new Map();CharacterSetECI.NAME_TO_ECI=new Map();CharacterSetECI.Cp437=new CharacterSetECI(CharacterSetValueIdentifiers.Cp437,Int32Array.from([0,2]),'Cp437');CharacterSetECI.ISO8859_1=new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_1,Int32Array.from([1,3]),'ISO-8859-1','ISO88591','ISO8859_1');CharacterSetECI.ISO8859_2=new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_2,4,'ISO-8859-2','ISO88592','ISO8859_2');CharacterSetECI.ISO8859_3=new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_3,5,'ISO-8859-3','ISO88593','ISO8859_3');CharacterSetECI.ISO8859_4=new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_4,6,'ISO-8859-4','ISO88594','ISO8859_4');CharacterSetECI.ISO8859_5=new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_5,7,'ISO-8859-5','ISO88595','ISO8859_5');CharacterSetECI.ISO8859_6=new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_6,8,'ISO-8859-6','ISO88596','ISO8859_6');CharacterSetECI.ISO8859_7=new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_7,9,'ISO-8859-7','ISO88597','ISO8859_7');CharacterSetECI.ISO8859_8=new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_8,10,'ISO-8859-8','ISO88598','ISO8859_8');CharacterSetECI.ISO8859_9=new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_9,11,'ISO-8859-9','ISO88599','ISO8859_9');CharacterSetECI.ISO8859_10=new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_10,12,'ISO-8859-10','ISO885910','ISO8859_10');CharacterSetECI.ISO8859_11=new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_11,13,'ISO-8859-11','ISO885911','ISO8859_11');CharacterSetECI.ISO8859_13=new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_13,15,'ISO-8859-13','ISO885913','ISO8859_13');CharacterSetECI.ISO8859_14=new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_14,16,'ISO-8859-14','ISO885914','ISO8859_14');CharacterSetECI.ISO8859_15=new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_15,17,'ISO-8859-15','ISO885915','ISO8859_15');CharacterSetECI.ISO8859_16=new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_16,18,'ISO-8859-16','ISO885916','ISO8859_16');CharacterSetECI.SJIS=new CharacterSetECI(CharacterSetValueIdentifiers.SJIS,20,'SJIS','Shift_JIS');CharacterSetECI.Cp1250=new CharacterSetECI(CharacterSetValueIdentifiers.Cp1250,21,'Cp1250','windows-1250');CharacterSetECI.Cp1251=new CharacterSetECI(CharacterSetValueIdentifiers.Cp1251,22,'Cp1251','windows-1251');CharacterSetECI.Cp1252=new CharacterSetECI(CharacterSetValueIdentifiers.Cp1252,23,'Cp1252','windows-1252');CharacterSetECI.Cp1256=new CharacterSetECI(CharacterSetValueIdentifiers.Cp1256,24,'Cp1256','windows-1256');CharacterSetECI.UnicodeBigUnmarked=new CharacterSetECI(CharacterSetValueIdentifiers.UnicodeBigUnmarked,25,'UnicodeBigUnmarked','UTF-16BE','UnicodeBig');CharacterSetECI.UTF8=new CharacterSetECI(CharacterSetValueIdentifiers.UTF8,26,'UTF8','UTF-8');CharacterSetECI.ASCII=new CharacterSetECI(CharacterSetValueIdentifiers.ASCII,Int32Array.from([27,170]),'ASCII','US-ASCII');CharacterSetECI.Big5=new CharacterSetECI(CharacterSetValueIdentifiers.Big5,28,'Big5');CharacterSetECI.GB18030=new CharacterSetECI(CharacterSetValueIdentifiers.GB18030,29,'GB18030','GB2312','EUC_CN','GBK');CharacterSetECI.EUC_KR=new CharacterSetECI(CharacterSetValueIdentifiers.EUC_KR,30,'EUC_KR','EUC-KR');class UnsupportedOperationException extends Exception{}
UnsupportedOperationException.kind='UnsupportedOperationException';class StringEncoding{static decode(bytes,encoding){const encodingName=this.encodingName(encoding);if(this.customDecoder){return this.customDecoder(bytes,encodingName);}
if(typeof TextDecoder==='undefined'||this.shouldDecodeOnFallback(encodingName)){return this.decodeFallback(bytes,encodingName);}
return new TextDecoder(encodingName).decode(bytes);}
static shouldDecodeOnFallback(encodingName){return!StringEncoding.isBrowser()&&encodingName==='ISO-8859-1';}
static encode(s,encoding){const encodingName=this.encodingName(encoding);if(this.customEncoder){return this.customEncoder(s,encodingName);}
if(typeof TextEncoder==='undefined'){return this.encodeFallback(s);}
return new TextEncoder().encode(s);}
static isBrowser(){return(typeof window!=='undefined'&&{}.toString.call(window)==='[object Window]');}
static encodingName(encoding){return typeof encoding==='string'?encoding:encoding.getName();}
static encodingCharacterSet(encoding){if(encoding instanceof CharacterSetECI){return encoding;}
return CharacterSetECI.getCharacterSetECIByName(encoding);}
static decodeFallback(bytes,encoding){const characterSet=this.encodingCharacterSet(encoding);if(StringEncoding.isDecodeFallbackSupported(characterSet)){let s='';for(let i=0,length=bytes.length;i<length;i++){let h=bytes[i].toString(16);if(h.length<2){h='0'+h;}
s+='%'+h;}
return decodeURIComponent(s);}
if(characterSet.equals(CharacterSetECI.UnicodeBigUnmarked)){return String.fromCharCode.apply(null,new Uint16Array(bytes.buffer));}
throw new UnsupportedOperationException(`Encoding ${this.encodingName(encoding)} not supported by fallback.`);}
static isDecodeFallbackSupported(characterSet){return characterSet.equals(CharacterSetECI.UTF8)||characterSet.equals(CharacterSetECI.ISO8859_1)||characterSet.equals(CharacterSetECI.ASCII);}
static encodeFallback(s){const encodedURIstring=btoa(unescape(encodeURIComponent(s)));const charList=encodedURIstring.split('');const uintArray=[];for(let i=0;i<charList.length;i++){uintArray.push(charList[i].charCodeAt(0));}
return new Uint8Array(uintArray);}}
class StringUtils{static castAsNonUtf8Char(code,encoding=null){const e=encoding?encoding.getName():this.ISO88591;return StringEncoding.decode(new Uint8Array([code]),e);}
static guessEncoding(bytes,hints){if(hints!==null&&hints!==undefined&&undefined!==hints.get(DecodeHintType$1.CHARACTER_SET)){return hints.get(DecodeHintType$1.CHARACTER_SET).toString();}
const length=bytes.length;let canBeISO88591=true;let canBeShiftJIS=true;let canBeUTF8=true;let utf8BytesLeft=0;let utf2BytesChars=0;let utf3BytesChars=0;let utf4BytesChars=0;let sjisBytesLeft=0;let sjisKatakanaChars=0;let sjisCurKatakanaWordLength=0;let sjisCurDoubleBytesWordLength=0;let sjisMaxKatakanaWordLength=0;let sjisMaxDoubleBytesWordLength=0;let isoHighOther=0;const utf8bom=bytes.length>3&&bytes[0]===0xEF&&bytes[1]===0xBB&&bytes[2]===0xBF;for(let i=0;i<length&&(canBeISO88591||canBeShiftJIS||canBeUTF8);i++){const value=bytes[i]&0xFF;if(canBeUTF8){if(utf8BytesLeft>0){if((value&0x80)===0){canBeUTF8=false;}
else{utf8BytesLeft--;}}
else if((value&0x80)!==0){if((value&0x40)===0){canBeUTF8=false;}
else{utf8BytesLeft++;if((value&0x20)===0){utf2BytesChars++;}
else{utf8BytesLeft++;if((value&0x10)===0){utf3BytesChars++;}
else{utf8BytesLeft++;if((value&0x08)===0){utf4BytesChars++;}
else{canBeUTF8=false;}}}}}}
if(canBeISO88591){if(value>0x7F&&value<0xA0){canBeISO88591=false;}
else if(value>0x9F){if(value<0xC0||value===0xD7||value===0xF7){isoHighOther++;}}}
if(canBeShiftJIS){if(sjisBytesLeft>0){if(value<0x40||value===0x7F||value>0xFC){canBeShiftJIS=false;}
else{sjisBytesLeft--;}}
else if(value===0x80||value===0xA0||value>0xEF){canBeShiftJIS=false;}
else if(value>0xA0&&value<0xE0){sjisKatakanaChars++;sjisCurDoubleBytesWordLength=0;sjisCurKatakanaWordLength++;if(sjisCurKatakanaWordLength>sjisMaxKatakanaWordLength){sjisMaxKatakanaWordLength=sjisCurKatakanaWordLength;}}
else if(value>0x7F){sjisBytesLeft++;sjisCurKatakanaWordLength=0;sjisCurDoubleBytesWordLength++;if(sjisCurDoubleBytesWordLength>sjisMaxDoubleBytesWordLength){sjisMaxDoubleBytesWordLength=sjisCurDoubleBytesWordLength;}}
else{sjisCurKatakanaWordLength=0;sjisCurDoubleBytesWordLength=0;}}}
if(canBeUTF8&&utf8BytesLeft>0){canBeUTF8=false;}
if(canBeShiftJIS&&sjisBytesLeft>0){canBeShiftJIS=false;}
if(canBeUTF8&&(utf8bom||utf2BytesChars+utf3BytesChars+utf4BytesChars>0)){return StringUtils.UTF8;}
if(canBeShiftJIS&&(StringUtils.ASSUME_SHIFT_JIS||sjisMaxKatakanaWordLength>=3||sjisMaxDoubleBytesWordLength>=3)){return StringUtils.SHIFT_JIS;}
if(canBeISO88591&&canBeShiftJIS){return(sjisMaxKatakanaWordLength===2&&sjisKatakanaChars===2)||isoHighOther*10>=length?StringUtils.SHIFT_JIS:StringUtils.ISO88591;}
if(canBeISO88591){return StringUtils.ISO88591;}
if(canBeShiftJIS){return StringUtils.SHIFT_JIS;}
if(canBeUTF8){return StringUtils.UTF8;}
return StringUtils.PLATFORM_DEFAULT_ENCODING;}
static format(append,...args){let i=-1;function callback(exp,p0,p1,p2,p3,p4){if(exp==='%%')
return'%';if(args[++i]===undefined)
return undefined;exp=p2?parseInt(p2.substr(1)):undefined;let base=p3?parseInt(p3.substr(1)):undefined;let val;switch(p4){case's':val=args[i];break;case'c':val=args[i][0];break;case'f':val=parseFloat(args[i]).toFixed(exp);break;case'p':val=parseFloat(args[i]).toPrecision(exp);break;case'e':val=parseFloat(args[i]).toExponential(exp);break;case'x':val=parseInt(args[i]).toString(base?base:16);break;case'd':val=parseFloat(parseInt(args[i],base?base:10).toPrecision(exp)).toFixed(0);break;}
val=typeof val==='object'?JSON.stringify(val):(+val).toString(base);let size=parseInt(p1);let ch=p1&&(p1[0]+'')==='0'?'0':' ';while(val.length<size)
val=p0!==undefined?val+ch:ch+val;return val;}
let regex=/%(-)?(0?[0-9]+)?([.][0-9]+)?([#][0-9]+)?([scfpexd%])/g;return append.replace(regex,callback);}
static getBytes(str,encoding){return StringEncoding.encode(str,encoding);}
static getCharCode(str,index=0){return str.charCodeAt(index);}
static getCharAt(charCode){return String.fromCharCode(charCode);}}
StringUtils.SHIFT_JIS=CharacterSetECI.SJIS.getName();StringUtils.GB2312='GB2312';StringUtils.ISO88591=CharacterSetECI.ISO8859_1.getName();StringUtils.EUC_JP='EUC_JP';StringUtils.UTF8=CharacterSetECI.UTF8.getName();StringUtils.PLATFORM_DEFAULT_ENCODING=StringUtils.UTF8;StringUtils.ASSUME_SHIFT_JIS=false;class StringBuilder{constructor(value=''){this.value=value;}
enableDecoding(encoding){this.encoding=encoding;return this;}
append(s){if(typeof s==='string'){this.value+=s.toString();}
else if(this.encoding){this.value+=StringUtils.castAsNonUtf8Char(s,this.encoding);}
else{this.value+=String.fromCharCode(s);}
return this;}
appendChars(str,offset,len){for(let i=offset;offset<offset+len;i++){this.append(str[i]);}
return this;}
length(){return this.value.length;}
charAt(n){return this.value.charAt(n);}
deleteCharAt(n){this.value=this.value.substr(0,n)+this.value.substring(n+1);}
setCharAt(n,c){this.value=this.value.substr(0,n)+c+this.value.substr(n+1);}
substring(start,end){return this.value.substring(start,end);}
setLengthToZero(){this.value='';}
toString(){return this.value;}
insert(n,c){this.value=this.value.substring(0,n)+c+this.value.substring(n);}}
class BitMatrix{constructor(width,height,rowSize,bits){this.width=width;this.height=height;this.rowSize=rowSize;this.bits=bits;if(undefined===height||null===height){height=width;}
this.height=height;if(width<1||height<1){throw new IllegalArgumentException('Both dimensions must be greater than 0');}
if(undefined===rowSize||null===rowSize){rowSize=Math.floor((width+31)/32);}
this.rowSize=rowSize;if(undefined===bits||null===bits){this.bits=new Int32Array(this.rowSize*this.height);}}
static parseFromBooleanArray(image){const height=image.length;const width=image[0].length;const bits=new BitMatrix(width,height);for(let i=0;i<height;i++){const imageI=image[i];for(let j=0;j<width;j++){if(imageI[j]){bits.set(j,i);}}}
return bits;}
static parseFromString(stringRepresentation,setString,unsetString){if(stringRepresentation===null){throw new IllegalArgumentException('stringRepresentation cannot be null');}
const bits=new Array(stringRepresentation.length);let bitsPos=0;let rowStartPos=0;let rowLength=-1;let nRows=0;let pos=0;while(pos<stringRepresentation.length){if(stringRepresentation.charAt(pos)==='\n'||stringRepresentation.charAt(pos)==='\r'){if(bitsPos>rowStartPos){if(rowLength===-1){rowLength=bitsPos-rowStartPos;}
else if(bitsPos-rowStartPos!==rowLength){throw new IllegalArgumentException('row lengths do not match');}
rowStartPos=bitsPos;nRows++;}
pos++;}
else if(stringRepresentation.substring(pos,pos+setString.length)===setString){pos+=setString.length;bits[bitsPos]=true;bitsPos++;}
else if(stringRepresentation.substring(pos,pos+unsetString.length)===unsetString){pos+=unsetString.length;bits[bitsPos]=false;bitsPos++;}
else{throw new IllegalArgumentException('illegal character encountered: '+stringRepresentation.substring(pos));}}
if(bitsPos>rowStartPos){if(rowLength===-1){rowLength=bitsPos-rowStartPos;}
else if(bitsPos-rowStartPos!==rowLength){throw new IllegalArgumentException('row lengths do not match');}
nRows++;}
const matrix=new BitMatrix(rowLength,nRows);for(let i=0;i<bitsPos;i++){if(bits[i]){matrix.set(Math.floor(i%rowLength),Math.floor(i/rowLength));}}
return matrix;}
get(x,y){const offset=y*this.rowSize+Math.floor(x/32);return((this.bits[offset]>>>(x&0x1f))&1)!==0;}
set(x,y){const offset=y*this.rowSize+Math.floor(x/32);this.bits[offset]|=(1<<(x&0x1f))&0xFFFFFFFF;}
unset(x,y){const offset=y*this.rowSize+Math.floor(x/32);this.bits[offset]&=~((1<<(x&0x1f))&0xFFFFFFFF);}
flip(x,y){const offset=y*this.rowSize+Math.floor(x/32);this.bits[offset]^=((1<<(x&0x1f))&0xFFFFFFFF);}
xor(mask){if(this.width!==mask.getWidth()||this.height!==mask.getHeight()||this.rowSize!==mask.getRowSize()){throw new IllegalArgumentException('input matrix dimensions do not match');}
const rowArray=new BitArray(Math.floor(this.width/32)+1);const rowSize=this.rowSize;const bits=this.bits;for(let y=0,height=this.height;y<height;y++){const offset=y*rowSize;const row=mask.getRow(y,rowArray).getBitArray();for(let x=0;x<rowSize;x++){bits[offset+x]^=row[x];}}}
clear(){const bits=this.bits;const max=bits.length;for(let i=0;i<max;i++){bits[i]=0;}}
setRegion(left,top,width,height){if(top<0||left<0){throw new IllegalArgumentException('Left and top must be nonnegative');}
if(height<1||width<1){throw new IllegalArgumentException('Height and width must be at least 1');}
const right=left+width;const bottom=top+height;if(bottom>this.height||right>this.width){throw new IllegalArgumentException('The region must fit inside the matrix');}
const rowSize=this.rowSize;const bits=this.bits;for(let y=top;y<bottom;y++){const offset=y*rowSize;for(let x=left;x<right;x++){bits[offset+Math.floor(x/32)]|=((1<<(x&0x1f))&0xFFFFFFFF);}}}
getRow(y,row){if(row===null||row===undefined||row.getSize()<this.width){row=new BitArray(this.width);}
else{row.clear();}
const rowSize=this.rowSize;const bits=this.bits;const offset=y*rowSize;for(let x=0;x<rowSize;x++){row.setBulk(x*32,bits[offset+x]);}
return row;}
setRow(y,row){System.arraycopy(row.getBitArray(),0,this.bits,y*this.rowSize,this.rowSize);}
rotate180(){const width=this.getWidth();const height=this.getHeight();let topRow=new BitArray(width);let bottomRow=new BitArray(width);for(let i=0,length=Math.floor((height+1)/2);i<length;i++){topRow=this.getRow(i,topRow);bottomRow=this.getRow(height-1-i,bottomRow);topRow.reverse();bottomRow.reverse();this.setRow(i,bottomRow);this.setRow(height-1-i,topRow);}}
getEnclosingRectangle(){const width=this.width;const height=this.height;const rowSize=this.rowSize;const bits=this.bits;let left=width;let top=height;let right=-1;let bottom=-1;for(let y=0;y<height;y++){for(let x32=0;x32<rowSize;x32++){const theBits=bits[y*rowSize+x32];if(theBits!==0){if(y<top){top=y;}
if(y>bottom){bottom=y;}
if(x32*32<left){let bit=0;while(((theBits<<(31-bit))&0xFFFFFFFF)===0){bit++;}
if((x32*32+bit)<left){left=x32*32+bit;}}
if(x32*32+31>right){let bit=31;while((theBits>>>bit)===0){bit--;}
if((x32*32+bit)>right){right=x32*32+bit;}}}}}
if(right<left||bottom<top){return null;}
return Int32Array.from([left,top,right-left+1,bottom-top+1]);}
getTopLeftOnBit(){const rowSize=this.rowSize;const bits=this.bits;let bitsOffset=0;while(bitsOffset<bits.length&&bits[bitsOffset]===0){bitsOffset++;}
if(bitsOffset===bits.length){return null;}
const y=bitsOffset/rowSize;let x=(bitsOffset%rowSize)*32;const theBits=bits[bitsOffset];let bit=0;while(((theBits<<(31-bit))&0xFFFFFFFF)===0){bit++;}
x+=bit;return Int32Array.from([x,y]);}
getBottomRightOnBit(){const rowSize=this.rowSize;const bits=this.bits;let bitsOffset=bits.length-1;while(bitsOffset>=0&&bits[bitsOffset]===0){bitsOffset--;}
if(bitsOffset<0){return null;}
const y=Math.floor(bitsOffset/rowSize);let x=Math.floor(bitsOffset%rowSize)*32;const theBits=bits[bitsOffset];let bit=31;while((theBits>>>bit)===0){bit--;}
x+=bit;return Int32Array.from([x,y]);}
getWidth(){return this.width;}
getHeight(){return this.height;}
getRowSize(){return this.rowSize;}
equals(o){if(!(o instanceof BitMatrix)){return false;}
const other=o;return this.width===other.width&&this.height===other.height&&this.rowSize===other.rowSize&&Arrays.equals(this.bits,other.bits);}
hashCode(){let hash=this.width;hash=31*hash+this.width;hash=31*hash+this.height;hash=31*hash+this.rowSize;hash=31*hash+Arrays.hashCode(this.bits);return hash;}
toString(setString='X ',unsetString='  ',lineSeparator='\n'){return this.buildToString(setString,unsetString,lineSeparator);}
buildToString(setString,unsetString,lineSeparator){let result=new StringBuilder();for(let y=0,height=this.height;y<height;y++){for(let x=0,width=this.width;x<width;x++){result.append(this.get(x,y)?setString:unsetString);}
result.append(lineSeparator);}
return result.toString();}
clone(){return new BitMatrix(this.width,this.height,this.rowSize,this.bits.slice());}}
class NotFoundException extends Exception{static getNotFoundInstance(){return new NotFoundException();}}
NotFoundException.kind='NotFoundException';class GlobalHistogramBinarizer extends Binarizer{constructor(source){super(source);this.luminances=GlobalHistogramBinarizer.EMPTY;this.buckets=new Int32Array(GlobalHistogramBinarizer.LUMINANCE_BUCKETS);}
getBlackRow(y,row){const source=this.getLuminanceSource();const width=source.getWidth();if(row===undefined||row===null||row.getSize()<width){row=new BitArray(width);}
else{row.clear();}
this.initArrays(width);const localLuminances=source.getRow(y,this.luminances);const localBuckets=this.buckets;for(let x=0;x<width;x++){localBuckets[(localLuminances[x]&0xff)>>GlobalHistogramBinarizer.LUMINANCE_SHIFT]++;}
const blackPoint=GlobalHistogramBinarizer.estimateBlackPoint(localBuckets);if(width<3){for(let x=0;x<width;x++){if((localLuminances[x]&0xff)<blackPoint){row.set(x);}}}
else{let left=localLuminances[0]&0xff;let center=localLuminances[1]&0xff;for(let x=1;x<width-1;x++){const right=localLuminances[x+1]&0xff;if(((center*4)-left-right)/2<blackPoint){row.set(x);}
left=center;center=right;}}
return row;}
getBlackMatrix(){const source=this.getLuminanceSource();const width=source.getWidth();const height=source.getHeight();const matrix=new BitMatrix(width,height);this.initArrays(width);const localBuckets=this.buckets;for(let y=1;y<5;y++){const row=Math.floor((height*y)/5);const localLuminances=source.getRow(row,this.luminances);const right=Math.floor((width*4)/5);for(let x=Math.floor(width/5);x<right;x++){const pixel=localLuminances[x]&0xff;localBuckets[pixel>>GlobalHistogramBinarizer.LUMINANCE_SHIFT]++;}}
const blackPoint=GlobalHistogramBinarizer.estimateBlackPoint(localBuckets);const localLuminances=source.getMatrix();for(let y=0;y<height;y++){const offset=y*width;for(let x=0;x<width;x++){const pixel=localLuminances[offset+x]&0xff;if(pixel<blackPoint){matrix.set(x,y);}}}
return matrix;}
createBinarizer(source){return new GlobalHistogramBinarizer(source);}
initArrays(luminanceSize){if(this.luminances.length<luminanceSize){this.luminances=new Uint8ClampedArray(luminanceSize);}
const buckets=this.buckets;for(let x=0;x<GlobalHistogramBinarizer.LUMINANCE_BUCKETS;x++){buckets[x]=0;}}
static estimateBlackPoint(buckets){const numBuckets=buckets.length;let maxBucketCount=0;let firstPeak=0;let firstPeakSize=0;for(let x=0;x<numBuckets;x++){if(buckets[x]>firstPeakSize){firstPeak=x;firstPeakSize=buckets[x];}
if(buckets[x]>maxBucketCount){maxBucketCount=buckets[x];}}
let secondPeak=0;let secondPeakScore=0;for(let x=0;x<numBuckets;x++){const distanceToBiggest=x-firstPeak;const score=buckets[x]*distanceToBiggest*distanceToBiggest;if(score>secondPeakScore){secondPeak=x;secondPeakScore=score;}}
if(firstPeak>secondPeak){const temp=firstPeak;firstPeak=secondPeak;secondPeak=temp;}
if(secondPeak-firstPeak<=numBuckets/16){throw new NotFoundException();}
let bestValley=secondPeak-1;let bestValleyScore=-1;for(let x=secondPeak-1;x>firstPeak;x--){const fromFirst=x-firstPeak;const score=fromFirst*fromFirst*(secondPeak-x)*(maxBucketCount-buckets[x]);if(score>bestValleyScore){bestValley=x;bestValleyScore=score;}}
return bestValley<<GlobalHistogramBinarizer.LUMINANCE_SHIFT;}}
GlobalHistogramBinarizer.LUMINANCE_BITS=5;GlobalHistogramBinarizer.LUMINANCE_SHIFT=8-GlobalHistogramBinarizer.LUMINANCE_BITS;GlobalHistogramBinarizer.LUMINANCE_BUCKETS=1<<GlobalHistogramBinarizer.LUMINANCE_BITS;GlobalHistogramBinarizer.EMPTY=Uint8ClampedArray.from([0]);class HybridBinarizer extends GlobalHistogramBinarizer{constructor(source){super(source);this.matrix=null;}
getBlackMatrix(){if(this.matrix!==null){return this.matrix;}
const source=this.getLuminanceSource();const width=source.getWidth();const height=source.getHeight();if(width>=HybridBinarizer.MINIMUM_DIMENSION&&height>=HybridBinarizer.MINIMUM_DIMENSION){const luminances=source.getMatrix();let subWidth=width>>HybridBinarizer.BLOCK_SIZE_POWER;if((width&HybridBinarizer.BLOCK_SIZE_MASK)!==0){subWidth++;}
let subHeight=height>>HybridBinarizer.BLOCK_SIZE_POWER;if((height&HybridBinarizer.BLOCK_SIZE_MASK)!==0){subHeight++;}
const blackPoints=HybridBinarizer.calculateBlackPoints(luminances,subWidth,subHeight,width,height);const newMatrix=new BitMatrix(width,height);HybridBinarizer.calculateThresholdForBlock(luminances,subWidth,subHeight,width,height,blackPoints,newMatrix);this.matrix=newMatrix;}
else{this.matrix=super.getBlackMatrix();}
return this.matrix;}
createBinarizer(source){return new HybridBinarizer(source);}
static calculateThresholdForBlock(luminances,subWidth,subHeight,width,height,blackPoints,matrix){const maxYOffset=height-HybridBinarizer.BLOCK_SIZE;const maxXOffset=width-HybridBinarizer.BLOCK_SIZE;for(let y=0;y<subHeight;y++){let yoffset=y<<HybridBinarizer.BLOCK_SIZE_POWER;if(yoffset>maxYOffset){yoffset=maxYOffset;}
const top=HybridBinarizer.cap(y,2,subHeight-3);for(let x=0;x<subWidth;x++){let xoffset=x<<HybridBinarizer.BLOCK_SIZE_POWER;if(xoffset>maxXOffset){xoffset=maxXOffset;}
const left=HybridBinarizer.cap(x,2,subWidth-3);let sum=0;for(let z=-2;z<=2;z++){const blackRow=blackPoints[top+z];sum+=blackRow[left-2]+blackRow[left-1]+blackRow[left]+blackRow[left+1]+blackRow[left+2];}
const average=sum/25;HybridBinarizer.thresholdBlock(luminances,xoffset,yoffset,average,width,matrix);}}}
static cap(value,min,max){return value<min?min:value>max?max:value;}
static thresholdBlock(luminances,xoffset,yoffset,threshold,stride,matrix){for(let y=0,offset=yoffset*stride+xoffset;y<HybridBinarizer.BLOCK_SIZE;y++,offset+=stride){for(let x=0;x<HybridBinarizer.BLOCK_SIZE;x++){if((luminances[offset+x]&0xFF)<=threshold){matrix.set(xoffset+x,yoffset+y);}}}}
static calculateBlackPoints(luminances,subWidth,subHeight,width,height){const maxYOffset=height-HybridBinarizer.BLOCK_SIZE;const maxXOffset=width-HybridBinarizer.BLOCK_SIZE;const blackPoints=new Array(subHeight);for(let y=0;y<subHeight;y++){blackPoints[y]=new Int32Array(subWidth);let yoffset=y<<HybridBinarizer.BLOCK_SIZE_POWER;if(yoffset>maxYOffset){yoffset=maxYOffset;}
for(let x=0;x<subWidth;x++){let xoffset=x<<HybridBinarizer.BLOCK_SIZE_POWER;if(xoffset>maxXOffset){xoffset=maxXOffset;}
let sum=0;let min=0xFF;let max=0;for(let yy=0,offset=yoffset*width+xoffset;yy<HybridBinarizer.BLOCK_SIZE;yy++,offset+=width){for(let xx=0;xx<HybridBinarizer.BLOCK_SIZE;xx++){const pixel=luminances[offset+xx]&0xFF;sum+=pixel;if(pixel<min){min=pixel;}
if(pixel>max){max=pixel;}}
if(max-min>HybridBinarizer.MIN_DYNAMIC_RANGE){for(yy++,offset+=width;yy<HybridBinarizer.BLOCK_SIZE;yy++,offset+=width){for(let xx=0;xx<HybridBinarizer.BLOCK_SIZE;xx++){sum+=luminances[offset+xx]&0xFF;}}}}
let average=sum>>(HybridBinarizer.BLOCK_SIZE_POWER*2);if(max-min<=HybridBinarizer.MIN_DYNAMIC_RANGE){average=min/2;if(y>0&&x>0){const averageNeighborBlackPoint=(blackPoints[y-1][x]+(2*blackPoints[y][x-1])+blackPoints[y-1][x-1])/4;if(min<averageNeighborBlackPoint){average=averageNeighborBlackPoint;}}}
blackPoints[y][x]=average;}}
return blackPoints;}}
HybridBinarizer.BLOCK_SIZE_POWER=3;HybridBinarizer.BLOCK_SIZE=1<<HybridBinarizer.BLOCK_SIZE_POWER;HybridBinarizer.BLOCK_SIZE_MASK=HybridBinarizer.BLOCK_SIZE-1;HybridBinarizer.MINIMUM_DIMENSION=HybridBinarizer.BLOCK_SIZE*5;HybridBinarizer.MIN_DYNAMIC_RANGE=24;class LuminanceSource{constructor(width,height){this.width=width;this.height=height;}
getWidth(){return this.width;}
getHeight(){return this.height;}
isCropSupported(){return false;}
crop(left,top,width,height){throw new UnsupportedOperationException('This luminance source does not support cropping.');}
isRotateSupported(){return false;}
rotateCounterClockwise(){throw new UnsupportedOperationException('This luminance source does not support rotation by 90 degrees.');}
rotateCounterClockwise45(){throw new UnsupportedOperationException('This luminance source does not support rotation by 45 degrees.');}
toString(){const row=new Uint8ClampedArray(this.width);let result=new StringBuilder();for(let y=0;y<this.height;y++){const sourceRow=this.getRow(y,row);for(let x=0;x<this.width;x++){const luminance=sourceRow[x]&0xFF;let c;if(luminance<0x40){c='#';}
else if(luminance<0x80){c='+';}
else if(luminance<0xC0){c='.';}
else{c=' ';}
result.append(c);}
result.append('\n');}
return result.toString();}}
class InvertedLuminanceSource extends LuminanceSource{constructor(delegate){super(delegate.getWidth(),delegate.getHeight());this.delegate=delegate;}
getRow(y,row){const sourceRow=this.delegate.getRow(y,row);const width=this.getWidth();for(let i=0;i<width;i++){sourceRow[i]=(255-(sourceRow[i]&0xFF));}
return sourceRow;}
getMatrix(){const matrix=this.delegate.getMatrix();const length=this.getWidth()*this.getHeight();const invertedMatrix=new Uint8ClampedArray(length);for(let i=0;i<length;i++){invertedMatrix[i]=(255-(matrix[i]&0xFF));}
return invertedMatrix;}
isCropSupported(){return this.delegate.isCropSupported();}
crop(left,top,width,height){return new InvertedLuminanceSource(this.delegate.crop(left,top,width,height));}
isRotateSupported(){return this.delegate.isRotateSupported();}
invert(){return this.delegate;}
rotateCounterClockwise(){return new InvertedLuminanceSource(this.delegate.rotateCounterClockwise());}
rotateCounterClockwise45(){return new InvertedLuminanceSource(this.delegate.rotateCounterClockwise45());}}
class HTMLCanvasElementLuminanceSource extends LuminanceSource{constructor(canvas){super(canvas.width,canvas.height);this.canvas=canvas;this.tempCanvasElement=null;this.buffer=HTMLCanvasElementLuminanceSource.makeBufferFromCanvasImageData(canvas);}
static makeBufferFromCanvasImageData(canvas){const imageData=canvas.getContext('2d').getImageData(0,0,canvas.width,canvas.height);return HTMLCanvasElementLuminanceSource.toGrayscaleBuffer(imageData.data,canvas.width,canvas.height);}
static toGrayscaleBuffer(imageBuffer,width,height){const grayscaleBuffer=new Uint8ClampedArray(width*height);HTMLCanvasElementLuminanceSource.FRAME_INDEX=!HTMLCanvasElementLuminanceSource.FRAME_INDEX;if(HTMLCanvasElementLuminanceSource.FRAME_INDEX){for(let i=0,j=0,length=imageBuffer.length;i<length;i+=4,j++){let gray;const alpha=imageBuffer[i+3];if(alpha===0){gray=0xFF;}
else{const pixelR=imageBuffer[i];const pixelG=imageBuffer[i+1];const pixelB=imageBuffer[i+2];gray=(306*pixelR+
601*pixelG+
117*pixelB+
0x200)>>10;}
grayscaleBuffer[j]=gray;}}
else{for(let i=0,j=0,length=imageBuffer.length;i<length;i+=4,j++){let gray;const alpha=imageBuffer[i+3];if(alpha===0){gray=0xFF;}
else{const pixelR=imageBuffer[i];const pixelG=imageBuffer[i+1];const pixelB=imageBuffer[i+2];gray=(306*pixelR+
601*pixelG+
117*pixelB+
0x200)>>10;}
grayscaleBuffer[j]=0xFF-gray;}}
return grayscaleBuffer;}
getRow(y,row){if(y<0||y>=this.getHeight()){throw new IllegalArgumentException('Requested row is outside the image: '+y);}
const width=this.getWidth();const start=y*width;if(row===null){row=this.buffer.slice(start,start+width);}
else{if(row.length<width){row=new Uint8ClampedArray(width);}
row.set(this.buffer.slice(start,start+width));}
return row;}
getMatrix(){return this.buffer;}
isCropSupported(){return true;}
crop(left,top,width,height){super.crop(left,top,width,height);return this;}
isRotateSupported(){return true;}
rotateCounterClockwise(){this.rotate(-90);return this;}
rotateCounterClockwise45(){this.rotate(-45);return this;}
getTempCanvasElement(){if(null===this.tempCanvasElement){const tempCanvasElement=this.canvas.ownerDocument.createElement('canvas');tempCanvasElement.width=this.canvas.width;tempCanvasElement.height=this.canvas.height;this.tempCanvasElement=tempCanvasElement;}
return this.tempCanvasElement;}
rotate(angle){const tempCanvasElement=this.getTempCanvasElement();const tempContext=tempCanvasElement.getContext('2d');const angleRadians=angle*HTMLCanvasElementLuminanceSource.DEGREE_TO_RADIANS;const width=this.canvas.width;const height=this.canvas.height;const newWidth=Math.ceil(Math.abs(Math.cos(angleRadians))*width+Math.abs(Math.sin(angleRadians))*height);const newHeight=Math.ceil(Math.abs(Math.sin(angleRadians))*width+Math.abs(Math.cos(angleRadians))*height);tempCanvasElement.width=newWidth;tempCanvasElement.height=newHeight;tempContext.translate(newWidth/2,newHeight/2);tempContext.rotate(angleRadians);tempContext.drawImage(this.canvas,width/-2,height/-2);this.buffer=HTMLCanvasElementLuminanceSource.makeBufferFromCanvasImageData(tempCanvasElement);return this;}
invert(){return new InvertedLuminanceSource(this);}}
HTMLCanvasElementLuminanceSource.DEGREE_TO_RADIANS=Math.PI/180;HTMLCanvasElementLuminanceSource.FRAME_INDEX=true;class VideoInputDevice{constructor(deviceId,label,groupId){this.deviceId=deviceId;this.label=label;this.kind='videoinput';this.groupId=groupId||undefined;}
toJSON(){return{kind:this.kind,groupId:this.groupId,deviceId:this.deviceId,label:this.label,};}}
var __awaiter=((globalThis||global||self||window||undefined)&&(globalThis||global||self||window||undefined).__awaiter)||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value);});}
return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value));}catch(e){reject(e);}}
function rejected(value){try{step(generator["throw"](value));}catch(e){reject(e);}}
function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected);}
step((generator=generator.apply(thisArg,_arguments||[])).next());});};class BrowserCodeReader{constructor(reader,timeBetweenScansMillis=500,_hints){this.reader=reader;this.timeBetweenScansMillis=timeBetweenScansMillis;this._hints=_hints;this._stopContinuousDecode=false;this._stopAsyncDecode=false;this._timeBetweenDecodingAttempts=0;}
get hasNavigator(){return typeof navigator!=='undefined';}
get isMediaDevicesSuported(){return this.hasNavigator&&!!navigator.mediaDevices;}
get canEnumerateDevices(){return!!(this.isMediaDevicesSuported&&navigator.mediaDevices.enumerateDevices);}
get timeBetweenDecodingAttempts(){return this._timeBetweenDecodingAttempts;}
set timeBetweenDecodingAttempts(millis){this._timeBetweenDecodingAttempts=millis<0?0:millis;}
set hints(hints){this._hints=hints||null;}
get hints(){return this._hints;}
listVideoInputDevices(){return __awaiter(this,void 0,void 0,function*(){if(!this.hasNavigator){throw new Error("Can't enumerate devices, navigator is not present.");}
if(!this.canEnumerateDevices){throw new Error("Can't enumerate devices, method not supported.");}
const devices=yield navigator.mediaDevices.enumerateDevices();const videoDevices=[];for(const device of devices){const kind=device.kind==='video'?'videoinput':device.kind;if(kind!=='videoinput'){continue;}
const deviceId=device.deviceId||device.id;const label=device.label||`Video device ${videoDevices.length + 1}`;const groupId=device.groupId;const videoDevice={deviceId,label,kind,groupId};videoDevices.push(videoDevice);}
return videoDevices;});}
getVideoInputDevices(){return __awaiter(this,void 0,void 0,function*(){const devices=yield this.listVideoInputDevices();return devices.map(d=>new VideoInputDevice(d.deviceId,d.label));});}
findDeviceById(deviceId){return __awaiter(this,void 0,void 0,function*(){const devices=yield this.listVideoInputDevices();if(!devices){return null;}
return devices.find(x=>x.deviceId===deviceId);});}
decodeFromInputVideoDevice(deviceId,videoSource){return __awaiter(this,void 0,void 0,function*(){return yield this.decodeOnceFromVideoDevice(deviceId,videoSource);});}
decodeOnceFromVideoDevice(deviceId,videoSource){return __awaiter(this,void 0,void 0,function*(){this.reset();let videoConstraints;if(!deviceId){videoConstraints={facingMode:'environment'};}
else{videoConstraints={deviceId:{exact:deviceId}};}
const constraints={video:videoConstraints};return yield this.decodeOnceFromConstraints(constraints,videoSource);});}
decodeOnceFromConstraints(constraints,videoSource){return __awaiter(this,void 0,void 0,function*(){const stream=yield navigator.mediaDevices.getUserMedia(constraints);return yield this.decodeOnceFromStream(stream,videoSource);});}
decodeOnceFromStream(stream,videoSource){return __awaiter(this,void 0,void 0,function*(){this.reset();const video=yield this.attachStreamToVideo(stream,videoSource);const result=yield this.decodeOnce(video);return result;});}
decodeFromInputVideoDeviceContinuously(deviceId,videoSource,callbackFn){return __awaiter(this,void 0,void 0,function*(){return yield this.decodeFromVideoDevice(deviceId,videoSource,callbackFn);});}
decodeFromVideoDevice(deviceId,videoSource,callbackFn){return __awaiter(this,void 0,void 0,function*(){let videoConstraints;if(!deviceId){videoConstraints={facingMode:'environment'};}
else{videoConstraints={deviceId:{exact:deviceId}};}
const constraints={video:videoConstraints};return yield this.decodeFromConstraints(constraints,videoSource,callbackFn);});}
decodeFromConstraints(constraints,videoSource,callbackFn){return __awaiter(this,void 0,void 0,function*(){const stream=yield navigator.mediaDevices.getUserMedia(constraints);return yield this.decodeFromStream(stream,videoSource,callbackFn);});}
decodeFromStream(stream,videoSource,callbackFn){return __awaiter(this,void 0,void 0,function*(){this.reset();const video=yield this.attachStreamToVideo(stream,videoSource);return yield this.decodeContinuously(video,callbackFn);});}
stopAsyncDecode(){this._stopAsyncDecode=true;}
stopContinuousDecode(){this._stopContinuousDecode=true;}
attachStreamToVideo(stream,videoSource){return __awaiter(this,void 0,void 0,function*(){const videoElement=this.prepareVideoElement(videoSource);this.addVideoSource(videoElement,stream);this.videoElement=videoElement;this.stream=stream;yield this.playVideoOnLoadAsync(videoElement);return videoElement;});}
playVideoOnLoadAsync(videoElement){return new Promise((resolve,reject)=>this.playVideoOnLoad(videoElement,()=>resolve()));}
playVideoOnLoad(element,callbackFn){this.videoEndedListener=()=>this.stopStreams();this.videoCanPlayListener=()=>this.tryPlayVideo(element);element.addEventListener('ended',this.videoEndedListener);element.addEventListener('canplay',this.videoCanPlayListener);element.addEventListener('playing',callbackFn);this.tryPlayVideo(element);}
isVideoPlaying(video){return(video.currentTime>0&&!video.paused&&!video.ended&&video.readyState>2);}
tryPlayVideo(videoElement){return __awaiter(this,void 0,void 0,function*(){if(this.isVideoPlaying(videoElement)){console.warn('Trying to play video that is already playing.');return;}
try{yield videoElement.play();}
catch(_a){console.warn('It was not possible to play the video.');}});}
getMediaElement(mediaElementId,type){const mediaElement=document.getElementById(mediaElementId);if(!mediaElement){throw new ArgumentException(`element with id '${mediaElementId}' not found`);}
if(mediaElement.nodeName.toLowerCase()!==type.toLowerCase()){throw new ArgumentException(`element with id '${mediaElementId}' must be an ${type} element`);}
return mediaElement;}
decodeFromImage(source,url){if(!source&&!url){throw new ArgumentException('either imageElement with a src set or an url must be provided');}
if(url&&!source){return this.decodeFromImageUrl(url);}
return this.decodeFromImageElement(source);}
decodeFromVideo(source,url){if(!source&&!url){throw new ArgumentException('Either an element with a src set or an URL must be provided');}
if(url&&!source){return this.decodeFromVideoUrl(url);}
return this.decodeFromVideoElement(source);}
decodeFromVideoContinuously(source,url,callbackFn){if(undefined===source&&undefined===url){throw new ArgumentException('Either an element with a src set or an URL must be provided');}
if(url&&!source){return this.decodeFromVideoUrlContinuously(url,callbackFn);}
return this.decodeFromVideoElementContinuously(source,callbackFn);}
decodeFromImageElement(source){if(!source){throw new ArgumentException('An image element must be provided.');}
this.reset();const element=this.prepareImageElement(source);this.imageElement=element;let task;if(this.isImageLoaded(element)){task=this.decodeOnce(element,false,true);}
else{task=this._decodeOnLoadImage(element);}
return task;}
decodeFromVideoElement(source){const element=this._decodeFromVideoElementSetup(source);return this._decodeOnLoadVideo(element);}
decodeFromVideoElementContinuously(source,callbackFn){const element=this._decodeFromVideoElementSetup(source);return this._decodeOnLoadVideoContinuously(element,callbackFn);}
_decodeFromVideoElementSetup(source){if(!source){throw new ArgumentException('A video element must be provided.');}
this.reset();const element=this.prepareVideoElement(source);this.videoElement=element;return element;}
decodeFromImageUrl(url){if(!url){throw new ArgumentException('An URL must be provided.');}
this.reset();const element=this.prepareImageElement();this.imageElement=element;const decodeTask=this._decodeOnLoadImage(element);element.src=url;return decodeTask;}
decodeFromVideoUrl(url){if(!url){throw new ArgumentException('An URL must be provided.');}
this.reset();const element=this.prepareVideoElement();const decodeTask=this.decodeFromVideoElement(element);element.src=url;return decodeTask;}
decodeFromVideoUrlContinuously(url,callbackFn){if(!url){throw new ArgumentException('An URL must be provided.');}
this.reset();const element=this.prepareVideoElement();const decodeTask=this.decodeFromVideoElementContinuously(element,callbackFn);element.src=url;return decodeTask;}
_decodeOnLoadImage(element){return new Promise((resolve,reject)=>{this.imageLoadedListener=()=>this.decodeOnce(element,false,true).then(resolve,reject);element.addEventListener('load',this.imageLoadedListener);});}
_decodeOnLoadVideo(videoElement){return __awaiter(this,void 0,void 0,function*(){yield this.playVideoOnLoadAsync(videoElement);return yield this.decodeOnce(videoElement);});}
_decodeOnLoadVideoContinuously(videoElement,callbackFn){return __awaiter(this,void 0,void 0,function*(){yield this.playVideoOnLoadAsync(videoElement);this.decodeContinuously(videoElement,callbackFn);});}
isImageLoaded(img){if(!img.complete){return false;}
if(img.naturalWidth===0){return false;}
return true;}
prepareImageElement(imageSource){let imageElement;if(typeof imageSource==='undefined'){imageElement=document.createElement('img');imageElement.width=200;imageElement.height=200;}
if(typeof imageSource==='string'){imageElement=this.getMediaElement(imageSource,'img');}
if(imageSource instanceof HTMLImageElement){imageElement=imageSource;}
return imageElement;}
prepareVideoElement(videoSource){let videoElement;if(!videoSource&&typeof document!=='undefined'){videoElement=document.createElement('video');videoElement.width=200;videoElement.height=200;}
if(typeof videoSource==='string'){videoElement=(this.getMediaElement(videoSource,'video'));}
if(videoSource instanceof HTMLVideoElement){videoElement=videoSource;}
videoElement.setAttribute('autoplay','true');videoElement.setAttribute('muted','true');videoElement.setAttribute('playsinline','true');return videoElement;}
decodeOnce(element,retryIfNotFound=true,retryIfChecksumOrFormatError=true){this._stopAsyncDecode=false;const loop=(resolve,reject)=>{if(this._stopAsyncDecode){reject(new NotFoundException('Video stream has ended before any code could be detected.'));this._stopAsyncDecode=undefined;return;}
try{const result=this.decode(element);resolve(result);}
catch(e){const ifNotFound=retryIfNotFound&&e instanceof NotFoundException;const isChecksumOrFormatError=e instanceof ChecksumException||e instanceof FormatException;const ifChecksumOrFormat=isChecksumOrFormatError&&retryIfChecksumOrFormatError;if(ifNotFound||ifChecksumOrFormat){return setTimeout(loop,this._timeBetweenDecodingAttempts,resolve,reject);}
reject(e);}};return new Promise((resolve,reject)=>loop(resolve,reject));}
decodeContinuously(element,callbackFn){this._stopContinuousDecode=false;const loop=()=>{if(this._stopContinuousDecode){this._stopContinuousDecode=undefined;return;}
try{const result=this.decode(element);callbackFn(result,null);setTimeout(loop,this.timeBetweenScansMillis);}
catch(e){callbackFn(null,e);const isChecksumOrFormatError=e instanceof ChecksumException||e instanceof FormatException;const isNotFound=e instanceof NotFoundException;if(isChecksumOrFormatError||isNotFound){setTimeout(loop,this._timeBetweenDecodingAttempts);}}};loop();}
decode(element){const binaryBitmap=this.createBinaryBitmap(element);return this.decodeBitmap(binaryBitmap);}
createBinaryBitmap(mediaElement){const ctx=this.getCaptureCanvasContext(mediaElement);if(mediaElement instanceof HTMLVideoElement){this.drawFrameOnCanvas(mediaElement);}
else{this.drawImageOnCanvas(mediaElement);}
const canvas=this.getCaptureCanvas(mediaElement);const luminanceSource=new HTMLCanvasElementLuminanceSource(canvas);const hybridBinarizer=new HybridBinarizer(luminanceSource);return new BinaryBitmap(hybridBinarizer);}
getCaptureCanvasContext(mediaElement){if(!this.captureCanvasContext){const elem=this.getCaptureCanvas(mediaElement);let ctx;try{ctx=elem.getContext('2d',{willReadFrequently:true});}
catch(e){ctx=elem.getContext('2d');}
this.captureCanvasContext=ctx;}
return this.captureCanvasContext;}
getCaptureCanvas(mediaElement){if(!this.captureCanvas){const elem=this.createCaptureCanvas(mediaElement);this.captureCanvas=elem;}
return this.captureCanvas;}
drawFrameOnCanvas(srcElement,dimensions={sx:0,sy:0,sWidth:srcElement.videoWidth,sHeight:srcElement.videoHeight,dx:0,dy:0,dWidth:srcElement.videoWidth,dHeight:srcElement.videoHeight,},canvasElementContext=this.captureCanvasContext){canvasElementContext.drawImage(srcElement,dimensions.sx,dimensions.sy,dimensions.sWidth,dimensions.sHeight,dimensions.dx,dimensions.dy,dimensions.dWidth,dimensions.dHeight);}
drawImageOnCanvas(srcElement,dimensions={sx:0,sy:0,sWidth:srcElement.naturalWidth,sHeight:srcElement.naturalHeight,dx:0,dy:0,dWidth:srcElement.naturalWidth,dHeight:srcElement.naturalHeight,},canvasElementContext=this.captureCanvasContext){canvasElementContext.drawImage(srcElement,dimensions.sx,dimensions.sy,dimensions.sWidth,dimensions.sHeight,dimensions.dx,dimensions.dy,dimensions.dWidth,dimensions.dHeight);}
decodeBitmap(binaryBitmap){return this.reader.decode(binaryBitmap,this._hints);}
createCaptureCanvas(mediaElement){if(typeof document==='undefined'){this._destroyCaptureCanvas();return null;}
const canvasElement=document.createElement('canvas');let width;let height;if(typeof mediaElement!=='undefined'){if(mediaElement instanceof HTMLVideoElement){width=mediaElement.videoWidth;height=mediaElement.videoHeight;}
else if(mediaElement instanceof HTMLImageElement){width=mediaElement.naturalWidth||mediaElement.width;height=mediaElement.naturalHeight||mediaElement.height;}}
canvasElement.style.width=width+'px';canvasElement.style.height=height+'px';canvasElement.width=width;canvasElement.height=height;return canvasElement;}
stopStreams(){if(this.stream){this.stream.getVideoTracks().forEach(t=>t.stop());this.stream=undefined;}
if(this._stopAsyncDecode===false){this.stopAsyncDecode();}
if(this._stopContinuousDecode===false){this.stopContinuousDecode();}}
reset(){this.stopStreams();this._destroyVideoElement();this._destroyImageElement();this._destroyCaptureCanvas();}
_destroyVideoElement(){if(!this.videoElement){return;}
if(typeof this.videoEndedListener!=='undefined'){this.videoElement.removeEventListener('ended',this.videoEndedListener);}
if(typeof this.videoPlayingEventListener!=='undefined'){this.videoElement.removeEventListener('playing',this.videoPlayingEventListener);}
if(typeof this.videoCanPlayListener!=='undefined'){this.videoElement.removeEventListener('loadedmetadata',this.videoCanPlayListener);}
this.cleanVideoSource(this.videoElement);this.videoElement=undefined;}
_destroyImageElement(){if(!this.imageElement){return;}
if(undefined!==this.imageLoadedListener){this.imageElement.removeEventListener('load',this.imageLoadedListener);}
this.imageElement.src=undefined;this.imageElement.removeAttribute('src');this.imageElement=undefined;}
_destroyCaptureCanvas(){this.captureCanvasContext=undefined;this.captureCanvas=undefined;}
addVideoSource(videoElement,stream){try{videoElement.srcObject=stream;}
catch(err){videoElement.src=URL.createObjectURL(stream);}}
cleanVideoSource(videoElement){try{videoElement.srcObject=null;}
catch(err){videoElement.src='';}
this.videoElement.removeAttribute('src');}}
class Result{constructor(text,rawBytes,numBits=rawBytes==null?0:8*rawBytes.length,resultPoints,format,timestamp=System.currentTimeMillis()){this.text=text;this.rawBytes=rawBytes;this.numBits=numBits;this.resultPoints=resultPoints;this.format=format;this.timestamp=timestamp;this.text=text;this.rawBytes=rawBytes;if(undefined===numBits||null===numBits){this.numBits=(rawBytes===null||rawBytes===undefined)?0:8*rawBytes.length;}
else{this.numBits=numBits;}
this.resultPoints=resultPoints;this.format=format;this.resultMetadata=null;if(undefined===timestamp||null===timestamp){this.timestamp=System.currentTimeMillis();}
else{this.timestamp=timestamp;}}
getText(){return this.text;}
getRawBytes(){return this.rawBytes;}
getNumBits(){return this.numBits;}
getResultPoints(){return this.resultPoints;}
getBarcodeFormat(){return this.format;}
getResultMetadata(){return this.resultMetadata;}
putMetadata(type,value){if(this.resultMetadata===null){this.resultMetadata=new Map();}
this.resultMetadata.set(type,value);}
putAllMetadata(metadata){if(metadata!==null){if(this.resultMetadata===null){this.resultMetadata=metadata;}
else{this.resultMetadata=new Map(metadata);}}}
addResultPoints(newPoints){const oldPoints=this.resultPoints;if(oldPoints===null){this.resultPoints=newPoints;}
else if(newPoints!==null&&newPoints.length>0){const allPoints=new Array(oldPoints.length+newPoints.length);System.arraycopy(oldPoints,0,allPoints,0,oldPoints.length);System.arraycopy(newPoints,0,allPoints,oldPoints.length,newPoints.length);this.resultPoints=allPoints;}}
getTimestamp(){return this.timestamp;}
toString(){return this.text;}}
var BarcodeFormat;(function(BarcodeFormat){BarcodeFormat[BarcodeFormat["AZTEC"]=0]="AZTEC";BarcodeFormat[BarcodeFormat["CODABAR"]=1]="CODABAR";BarcodeFormat[BarcodeFormat["CODE_39"]=2]="CODE_39";BarcodeFormat[BarcodeFormat["CODE_93"]=3]="CODE_93";BarcodeFormat[BarcodeFormat["CODE_128"]=4]="CODE_128";BarcodeFormat[BarcodeFormat["DATA_MATRIX"]=5]="DATA_MATRIX";BarcodeFormat[BarcodeFormat["EAN_8"]=6]="EAN_8";BarcodeFormat[BarcodeFormat["EAN_13"]=7]="EAN_13";BarcodeFormat[BarcodeFormat["ITF"]=8]="ITF";BarcodeFormat[BarcodeFormat["MAXICODE"]=9]="MAXICODE";BarcodeFormat[BarcodeFormat["PDF_417"]=10]="PDF_417";BarcodeFormat[BarcodeFormat["QR_CODE"]=11]="QR_CODE";BarcodeFormat[BarcodeFormat["RSS_14"]=12]="RSS_14";BarcodeFormat[BarcodeFormat["RSS_EXPANDED"]=13]="RSS_EXPANDED";BarcodeFormat[BarcodeFormat["UPC_A"]=14]="UPC_A";BarcodeFormat[BarcodeFormat["UPC_E"]=15]="UPC_E";BarcodeFormat[BarcodeFormat["UPC_EAN_EXTENSION"]=16]="UPC_EAN_EXTENSION";})(BarcodeFormat||(BarcodeFormat={}));var BarcodeFormat$1=BarcodeFormat;var ResultMetadataType;(function(ResultMetadataType){ResultMetadataType[ResultMetadataType["OTHER"]=0]="OTHER";ResultMetadataType[ResultMetadataType["ORIENTATION"]=1]="ORIENTATION";ResultMetadataType[ResultMetadataType["BYTE_SEGMENTS"]=2]="BYTE_SEGMENTS";ResultMetadataType[ResultMetadataType["ERROR_CORRECTION_LEVEL"]=3]="ERROR_CORRECTION_LEVEL";ResultMetadataType[ResultMetadataType["ISSUE_NUMBER"]=4]="ISSUE_NUMBER";ResultMetadataType[ResultMetadataType["SUGGESTED_PRICE"]=5]="SUGGESTED_PRICE";ResultMetadataType[ResultMetadataType["POSSIBLE_COUNTRY"]=6]="POSSIBLE_COUNTRY";ResultMetadataType[ResultMetadataType["UPC_EAN_EXTENSION"]=7]="UPC_EAN_EXTENSION";ResultMetadataType[ResultMetadataType["PDF417_EXTRA_METADATA"]=8]="PDF417_EXTRA_METADATA";ResultMetadataType[ResultMetadataType["STRUCTURED_APPEND_SEQUENCE"]=9]="STRUCTURED_APPEND_SEQUENCE";ResultMetadataType[ResultMetadataType["STRUCTURED_APPEND_PARITY"]=10]="STRUCTURED_APPEND_PARITY";})(ResultMetadataType||(ResultMetadataType={}));var ResultMetadataType$1=ResultMetadataType;class DecoderResult{constructor(rawBytes,text,byteSegments,ecLevel,structuredAppendSequenceNumber=-1,structuredAppendParity=-1){this.rawBytes=rawBytes;this.text=text;this.byteSegments=byteSegments;this.ecLevel=ecLevel;this.structuredAppendSequenceNumber=structuredAppendSequenceNumber;this.structuredAppendParity=structuredAppendParity;this.numBits=(rawBytes===undefined||rawBytes===null)?0:8*rawBytes.length;}
getRawBytes(){return this.rawBytes;}
getNumBits(){return this.numBits;}
setNumBits(numBits){this.numBits=numBits;}
getText(){return this.text;}
getByteSegments(){return this.byteSegments;}
getECLevel(){return this.ecLevel;}
getErrorsCorrected(){return this.errorsCorrected;}
setErrorsCorrected(errorsCorrected){this.errorsCorrected=errorsCorrected;}
getErasures(){return this.erasures;}
setErasures(erasures){this.erasures=erasures;}
getOther(){return this.other;}
setOther(other){this.other=other;}
hasStructuredAppend(){return this.structuredAppendParity>=0&&this.structuredAppendSequenceNumber>=0;}
getStructuredAppendParity(){return this.structuredAppendParity;}
getStructuredAppendSequenceNumber(){return this.structuredAppendSequenceNumber;}}
class AbstractGenericGF{exp(a){return this.expTable[a];}
log(a){if(a===0){throw new IllegalArgumentException();}
return this.logTable[a];}
static addOrSubtract(a,b){return a^b;}}
class GenericGFPoly{constructor(field,coefficients){if(coefficients.length===0){throw new IllegalArgumentException();}
this.field=field;const coefficientsLength=coefficients.length;if(coefficientsLength>1&&coefficients[0]===0){let firstNonZero=1;while(firstNonZero<coefficientsLength&&coefficients[firstNonZero]===0){firstNonZero++;}
if(firstNonZero===coefficientsLength){this.coefficients=Int32Array.from([0]);}
else{this.coefficients=new Int32Array(coefficientsLength-firstNonZero);System.arraycopy(coefficients,firstNonZero,this.coefficients,0,this.coefficients.length);}}
else{this.coefficients=coefficients;}}
getCoefficients(){return this.coefficients;}
getDegree(){return this.coefficients.length-1;}
isZero(){return this.coefficients[0]===0;}
getCoefficient(degree){return this.coefficients[this.coefficients.length-1-degree];}
evaluateAt(a){if(a===0){return this.getCoefficient(0);}
const coefficients=this.coefficients;let result;if(a===1){result=0;for(let i=0,length=coefficients.length;i!==length;i++){const coefficient=coefficients[i];result=AbstractGenericGF.addOrSubtract(result,coefficient);}
return result;}
result=coefficients[0];const size=coefficients.length;const field=this.field;for(let i=1;i<size;i++){result=AbstractGenericGF.addOrSubtract(field.multiply(a,result),coefficients[i]);}
return result;}
addOrSubtract(other){if(!this.field.equals(other.field)){throw new IllegalArgumentException('GenericGFPolys do not have same GenericGF field');}
if(this.isZero()){return other;}
if(other.isZero()){return this;}
let smallerCoefficients=this.coefficients;let largerCoefficients=other.coefficients;if(smallerCoefficients.length>largerCoefficients.length){const temp=smallerCoefficients;smallerCoefficients=largerCoefficients;largerCoefficients=temp;}
let sumDiff=new Int32Array(largerCoefficients.length);const lengthDiff=largerCoefficients.length-smallerCoefficients.length;System.arraycopy(largerCoefficients,0,sumDiff,0,lengthDiff);for(let i=lengthDiff;i<largerCoefficients.length;i++){sumDiff[i]=AbstractGenericGF.addOrSubtract(smallerCoefficients[i-lengthDiff],largerCoefficients[i]);}
return new GenericGFPoly(this.field,sumDiff);}
multiply(other){if(!this.field.equals(other.field)){throw new IllegalArgumentException('GenericGFPolys do not have same GenericGF field');}
if(this.isZero()||other.isZero()){return this.field.getZero();}
const aCoefficients=this.coefficients;const aLength=aCoefficients.length;const bCoefficients=other.coefficients;const bLength=bCoefficients.length;const product=new Int32Array(aLength+bLength-1);const field=this.field;for(let i=0;i<aLength;i++){const aCoeff=aCoefficients[i];for(let j=0;j<bLength;j++){product[i+j]=AbstractGenericGF.addOrSubtract(product[i+j],field.multiply(aCoeff,bCoefficients[j]));}}
return new GenericGFPoly(field,product);}
multiplyScalar(scalar){if(scalar===0){return this.field.getZero();}
if(scalar===1){return this;}
const size=this.coefficients.length;const field=this.field;const product=new Int32Array(size);const coefficients=this.coefficients;for(let i=0;i<size;i++){product[i]=field.multiply(coefficients[i],scalar);}
return new GenericGFPoly(field,product);}
multiplyByMonomial(degree,coefficient){if(degree<0){throw new IllegalArgumentException();}
if(coefficient===0){return this.field.getZero();}
const coefficients=this.coefficients;const size=coefficients.length;const product=new Int32Array(size+degree);const field=this.field;for(let i=0;i<size;i++){product[i]=field.multiply(coefficients[i],coefficient);}
return new GenericGFPoly(field,product);}
divide(other){if(!this.field.equals(other.field)){throw new IllegalArgumentException('GenericGFPolys do not have same GenericGF field');}
if(other.isZero()){throw new IllegalArgumentException('Divide by 0');}
const field=this.field;let quotient=field.getZero();let remainder=this;const denominatorLeadingTerm=other.getCoefficient(other.getDegree());const inverseDenominatorLeadingTerm=field.inverse(denominatorLeadingTerm);while(remainder.getDegree()>=other.getDegree()&&!remainder.isZero()){const degreeDifference=remainder.getDegree()-other.getDegree();const scale=field.multiply(remainder.getCoefficient(remainder.getDegree()),inverseDenominatorLeadingTerm);const term=other.multiplyByMonomial(degreeDifference,scale);const iterationQuotient=field.buildMonomial(degreeDifference,scale);quotient=quotient.addOrSubtract(iterationQuotient);remainder=remainder.addOrSubtract(term);}
return[quotient,remainder];}
toString(){let result='';for(let degree=this.getDegree();degree>=0;degree--){let coefficient=this.getCoefficient(degree);if(coefficient!==0){if(coefficient<0){result+=' - ';coefficient=-coefficient;}
else{if(result.length>0){result+=' + ';}}
if(degree===0||coefficient!==1){const alphaPower=this.field.log(coefficient);if(alphaPower===0){result+='1';}
else if(alphaPower===1){result+='a';}
else{result+='a^';result+=alphaPower;}}
if(degree!==0){if(degree===1){result+='x';}
else{result+='x^';result+=degree;}}}}
return result;}}
class ArithmeticException extends Exception{}
ArithmeticException.kind='ArithmeticException';class GenericGF extends AbstractGenericGF{constructor(primitive,size,generatorBase){super();this.primitive=primitive;this.size=size;this.generatorBase=generatorBase;const expTable=new Int32Array(size);let x=1;for(let i=0;i<size;i++){expTable[i]=x;x*=2;if(x>=size){x^=primitive;x&=size-1;}}
this.expTable=expTable;const logTable=new Int32Array(size);for(let i=0;i<size-1;i++){logTable[expTable[i]]=i;}
this.logTable=logTable;this.zero=new GenericGFPoly(this,Int32Array.from([0]));this.one=new GenericGFPoly(this,Int32Array.from([1]));}
getZero(){return this.zero;}
getOne(){return this.one;}
buildMonomial(degree,coefficient){if(degree<0){throw new IllegalArgumentException();}
if(coefficient===0){return this.zero;}
const coefficients=new Int32Array(degree+1);coefficients[0]=coefficient;return new GenericGFPoly(this,coefficients);}
inverse(a){if(a===0){throw new ArithmeticException();}
return this.expTable[this.size-this.logTable[a]-1];}
multiply(a,b){if(a===0||b===0){return 0;}
return this.expTable[(this.logTable[a]+this.logTable[b])%(this.size-1)];}
getSize(){return this.size;}
getGeneratorBase(){return this.generatorBase;}
toString(){return('GF(0x'+Integer.toHexString(this.primitive)+','+this.size+')');}
equals(o){return o===this;}}
GenericGF.AZTEC_DATA_12=new GenericGF(0x1069,4096,1);GenericGF.AZTEC_DATA_10=new GenericGF(0x409,1024,1);GenericGF.AZTEC_DATA_6=new GenericGF(0x43,64,1);GenericGF.AZTEC_PARAM=new GenericGF(0x13,16,1);GenericGF.QR_CODE_FIELD_256=new GenericGF(0x011d,256,0);GenericGF.DATA_MATRIX_FIELD_256=new GenericGF(0x012d,256,1);GenericGF.AZTEC_DATA_8=GenericGF.DATA_MATRIX_FIELD_256;GenericGF.MAXICODE_FIELD_64=GenericGF.AZTEC_DATA_6;class ReedSolomonException extends Exception{}
ReedSolomonException.kind='ReedSolomonException';class IllegalStateException extends Exception{}
IllegalStateException.kind='IllegalStateException';class ReedSolomonDecoder{constructor(field){this.field=field;}
decode(received,twoS){const field=this.field;const poly=new GenericGFPoly(field,received);const syndromeCoefficients=new Int32Array(twoS);let noError=true;for(let i=0;i<twoS;i++){const evalResult=poly.evaluateAt(field.exp(i+field.getGeneratorBase()));syndromeCoefficients[syndromeCoefficients.length-1-i]=evalResult;if(evalResult!==0){noError=false;}}
if(noError){return;}
const syndrome=new GenericGFPoly(field,syndromeCoefficients);const sigmaOmega=this.runEuclideanAlgorithm(field.buildMonomial(twoS,1),syndrome,twoS);const sigma=sigmaOmega[0];const omega=sigmaOmega[1];const errorLocations=this.findErrorLocations(sigma);const errorMagnitudes=this.findErrorMagnitudes(omega,errorLocations);for(let i=0;i<errorLocations.length;i++){const position=received.length-1-field.log(errorLocations[i]);if(position<0){throw new ReedSolomonException('Bad error location');}
received[position]=GenericGF.addOrSubtract(received[position],errorMagnitudes[i]);}}
runEuclideanAlgorithm(a,b,R){if(a.getDegree()<b.getDegree()){const temp=a;a=b;b=temp;}
const field=this.field;let rLast=a;let r=b;let tLast=field.getZero();let t=field.getOne();while(r.getDegree()>=(R/2|0)){let rLastLast=rLast;let tLastLast=tLast;rLast=r;tLast=t;if(rLast.isZero()){throw new ReedSolomonException('r_{i-1} was zero');}
r=rLastLast;let q=field.getZero();const denominatorLeadingTerm=rLast.getCoefficient(rLast.getDegree());const dltInverse=field.inverse(denominatorLeadingTerm);while(r.getDegree()>=rLast.getDegree()&&!r.isZero()){const degreeDiff=r.getDegree()-rLast.getDegree();const scale=field.multiply(r.getCoefficient(r.getDegree()),dltInverse);q=q.addOrSubtract(field.buildMonomial(degreeDiff,scale));r=r.addOrSubtract(rLast.multiplyByMonomial(degreeDiff,scale));}
t=q.multiply(tLast).addOrSubtract(tLastLast);if(r.getDegree()>=rLast.getDegree()){throw new IllegalStateException('Division algorithm failed to reduce polynomial?');}}
const sigmaTildeAtZero=t.getCoefficient(0);if(sigmaTildeAtZero===0){throw new ReedSolomonException('sigmaTilde(0) was zero');}
const inverse=field.inverse(sigmaTildeAtZero);const sigma=t.multiplyScalar(inverse);const omega=r.multiplyScalar(inverse);return[sigma,omega];}
findErrorLocations(errorLocator){const numErrors=errorLocator.getDegree();if(numErrors===1){return Int32Array.from([errorLocator.getCoefficient(1)]);}
const result=new Int32Array(numErrors);let e=0;const field=this.field;for(let i=1;i<field.getSize()&&e<numErrors;i++){if(errorLocator.evaluateAt(i)===0){result[e]=field.inverse(i);e++;}}
if(e!==numErrors){throw new ReedSolomonException('Error locator degree does not match number of roots');}
return result;}
findErrorMagnitudes(errorEvaluator,errorLocations){const s=errorLocations.length;const result=new Int32Array(s);const field=this.field;for(let i=0;i<s;i++){const xiInverse=field.inverse(errorLocations[i]);let denominator=1;for(let j=0;j<s;j++){if(i!==j){const term=field.multiply(errorLocations[j],xiInverse);const termPlus1=(term&0x1)===0?term|1:term&~1;denominator=field.multiply(denominator,termPlus1);}}
result[i]=field.multiply(errorEvaluator.evaluateAt(xiInverse),field.inverse(denominator));if(field.getGeneratorBase()!==0){result[i]=field.multiply(result[i],xiInverse);}}
return result;}}
var Table;(function(Table){Table[Table["UPPER"]=0]="UPPER";Table[Table["LOWER"]=1]="LOWER";Table[Table["MIXED"]=2]="MIXED";Table[Table["DIGIT"]=3]="DIGIT";Table[Table["PUNCT"]=4]="PUNCT";Table[Table["BINARY"]=5]="BINARY";})(Table||(Table={}));class Decoder{decode(detectorResult){this.ddata=detectorResult;let matrix=detectorResult.getBits();let rawbits=this.extractBits(matrix);let correctedBits=this.correctBits(rawbits);let rawBytes=Decoder.convertBoolArrayToByteArray(correctedBits);let result=Decoder.getEncodedData(correctedBits);let decoderResult=new DecoderResult(rawBytes,result,null,null);decoderResult.setNumBits(correctedBits.length);return decoderResult;}
static highLevelDecode(correctedBits){return this.getEncodedData(correctedBits);}
static getEncodedData(correctedBits){let endIndex=correctedBits.length;let latchTable=Table.UPPER;let shiftTable=Table.UPPER;let result='';let index=0;while(index<endIndex){if(shiftTable===Table.BINARY){if(endIndex-index<5){break;}
let length=Decoder.readCode(correctedBits,index,5);index+=5;if(length===0){if(endIndex-index<11){break;}
length=Decoder.readCode(correctedBits,index,11)+31;index+=11;}
for(let charCount=0;charCount<length;charCount++){if(endIndex-index<8){index=endIndex;break;}
const code=Decoder.readCode(correctedBits,index,8);result+=StringUtils.castAsNonUtf8Char(code);index+=8;}
shiftTable=latchTable;}
else{let size=shiftTable===Table.DIGIT?4:5;if(endIndex-index<size){break;}
let code=Decoder.readCode(correctedBits,index,size);index+=size;let str=Decoder.getCharacter(shiftTable,code);if(str.startsWith('CTRL_')){latchTable=shiftTable;shiftTable=Decoder.getTable(str.charAt(5));if(str.charAt(6)==='L'){latchTable=shiftTable;}}
else{result+=str;shiftTable=latchTable;}}}
return result;}
static getTable(t){switch(t){case'L':return Table.LOWER;case'P':return Table.PUNCT;case'M':return Table.MIXED;case'D':return Table.DIGIT;case'B':return Table.BINARY;case'U':default:return Table.UPPER;}}
static getCharacter(table,code){switch(table){case Table.UPPER:return Decoder.UPPER_TABLE[code];case Table.LOWER:return Decoder.LOWER_TABLE[code];case Table.MIXED:return Decoder.MIXED_TABLE[code];case Table.PUNCT:return Decoder.PUNCT_TABLE[code];case Table.DIGIT:return Decoder.DIGIT_TABLE[code];default:throw new IllegalStateException('Bad table');}}
correctBits(rawbits){let gf;let codewordSize;if(this.ddata.getNbLayers()<=2){codewordSize=6;gf=GenericGF.AZTEC_DATA_6;}
else if(this.ddata.getNbLayers()<=8){codewordSize=8;gf=GenericGF.AZTEC_DATA_8;}
else if(this.ddata.getNbLayers()<=22){codewordSize=10;gf=GenericGF.AZTEC_DATA_10;}
else{codewordSize=12;gf=GenericGF.AZTEC_DATA_12;}
let numDataCodewords=this.ddata.getNbDatablocks();let numCodewords=rawbits.length/codewordSize;if(numCodewords<numDataCodewords){throw new FormatException();}
let offset=rawbits.length%codewordSize;let dataWords=new Int32Array(numCodewords);for(let i=0;i<numCodewords;i++,offset+=codewordSize){dataWords[i]=Decoder.readCode(rawbits,offset,codewordSize);}
try{let rsDecoder=new ReedSolomonDecoder(gf);rsDecoder.decode(dataWords,numCodewords-numDataCodewords);}
catch(ex){throw new FormatException(ex);}
let mask=(1<<codewordSize)-1;let stuffedBits=0;for(let i=0;i<numDataCodewords;i++){let dataWord=dataWords[i];if(dataWord===0||dataWord===mask){throw new FormatException();}
else if(dataWord===1||dataWord===mask-1){stuffedBits++;}}
let correctedBits=new Array(numDataCodewords*codewordSize-stuffedBits);let index=0;for(let i=0;i<numDataCodewords;i++){let dataWord=dataWords[i];if(dataWord===1||dataWord===mask-1){correctedBits.fill(dataWord>1,index,index+codewordSize-1);index+=codewordSize-1;}
else{for(let bit=codewordSize-1;bit>=0;--bit){correctedBits[index++]=(dataWord&(1<<bit))!==0;}}}
return correctedBits;}
extractBits(matrix){let compact=this.ddata.isCompact();let layers=this.ddata.getNbLayers();let baseMatrixSize=(compact?11:14)+layers*4;let alignmentMap=new Int32Array(baseMatrixSize);let rawbits=new Array(this.totalBitsInLayer(layers,compact));if(compact){for(let i=0;i<alignmentMap.length;i++){alignmentMap[i]=i;}}
else{let matrixSize=baseMatrixSize+1+2*Integer.truncDivision((Integer.truncDivision(baseMatrixSize,2)-1),15);let origCenter=baseMatrixSize/2;let center=Integer.truncDivision(matrixSize,2);for(let i=0;i<origCenter;i++){let newOffset=i+Integer.truncDivision(i,15);alignmentMap[origCenter-i-1]=center-newOffset-1;alignmentMap[origCenter+i]=center+newOffset+1;}}
for(let i=0,rowOffset=0;i<layers;i++){let rowSize=(layers-i)*4+(compact?9:12);let low=i*2;let high=baseMatrixSize-1-low;for(let j=0;j<rowSize;j++){let columnOffset=j*2;for(let k=0;k<2;k++){rawbits[rowOffset+columnOffset+k]=matrix.get(alignmentMap[low+k],alignmentMap[low+j]);rawbits[rowOffset+2*rowSize+columnOffset+k]=matrix.get(alignmentMap[low+j],alignmentMap[high-k]);rawbits[rowOffset+4*rowSize+columnOffset+k]=matrix.get(alignmentMap[high-k],alignmentMap[high-j]);rawbits[rowOffset+6*rowSize+columnOffset+k]=matrix.get(alignmentMap[high-j],alignmentMap[low+k]);}}
rowOffset+=rowSize*8;}
return rawbits;}
static readCode(rawbits,startIndex,length){let res=0;for(let i=startIndex;i<startIndex+length;i++){res<<=1;if(rawbits[i]){res|=0x01;}}
return res;}
static readByte(rawbits,startIndex){let n=rawbits.length-startIndex;if(n>=8){return Decoder.readCode(rawbits,startIndex,8);}
return Decoder.readCode(rawbits,startIndex,n)<<(8-n);}
static convertBoolArrayToByteArray(boolArr){let byteArr=new Uint8Array((boolArr.length+7)/8);for(let i=0;i<byteArr.length;i++){byteArr[i]=Decoder.readByte(boolArr,8*i);}
return byteArr;}
totalBitsInLayer(layers,compact){return((compact?88:112)+16*layers)*layers;}}
Decoder.UPPER_TABLE=['CTRL_PS',' ','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z','CTRL_LL','CTRL_ML','CTRL_DL','CTRL_BS'];Decoder.LOWER_TABLE=['CTRL_PS',' ','a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','CTRL_US','CTRL_ML','CTRL_DL','CTRL_BS'];Decoder.MIXED_TABLE=['CTRL_PS',' ','\\1','\\2','\\3','\\4','\\5','\\6','\\7','\b','\t','\n','\\13','\f','\r','\\33','\\34','\\35','\\36','\\37','@','\\','^','_','`','|','~','\\177','CTRL_LL','CTRL_UL','CTRL_PL','CTRL_BS'];Decoder.PUNCT_TABLE=['','\r','\r\n','. ',', ',': ','!','"','#','$','%','&','\'','(',')','*','+',',','-','.','/',':',';','<','=','>','?','[',']','{','}','CTRL_UL'];Decoder.DIGIT_TABLE=['CTRL_PS',' ','0','1','2','3','4','5','6','7','8','9',',','.','CTRL_UL','CTRL_US'];class MathUtils{constructor(){}
static round(d){if(isNaN(d))
return 0;if(d<=Number.MIN_SAFE_INTEGER)
return Number.MIN_SAFE_INTEGER;if(d>=Number.MAX_SAFE_INTEGER)
return Number.MAX_SAFE_INTEGER;return(d+(d<0.0?-0.5:0.5))|0;}
static distance(aX,aY,bX,bY){const xDiff=aX-bX;const yDiff=aY-bY;return Math.sqrt(xDiff*xDiff+yDiff*yDiff);}
static sum(array){let count=0;for(let i=0,length=array.length;i!==length;i++){const a=array[i];count+=a;}
return count;}}
class Float{static floatToIntBits(f){return f;}}
Float.MAX_VALUE=Number.MAX_SAFE_INTEGER;class ResultPoint{constructor(x,y){this.x=x;this.y=y;}
getX(){return this.x;}
getY(){return this.y;}
equals(other){if(other instanceof ResultPoint){const otherPoint=other;return this.x===otherPoint.x&&this.y===otherPoint.y;}
return false;}
hashCode(){return 31*Float.floatToIntBits(this.x)+Float.floatToIntBits(this.y);}
toString(){return'('+this.x+','+this.y+')';}
static orderBestPatterns(patterns){const zeroOneDistance=this.distance(patterns[0],patterns[1]);const oneTwoDistance=this.distance(patterns[1],patterns[2]);const zeroTwoDistance=this.distance(patterns[0],patterns[2]);let pointA;let pointB;let pointC;if(oneTwoDistance>=zeroOneDistance&&oneTwoDistance>=zeroTwoDistance){pointB=patterns[0];pointA=patterns[1];pointC=patterns[2];}
else if(zeroTwoDistance>=oneTwoDistance&&zeroTwoDistance>=zeroOneDistance){pointB=patterns[1];pointA=patterns[0];pointC=patterns[2];}
else{pointB=patterns[2];pointA=patterns[0];pointC=patterns[1];}
if(this.crossProductZ(pointA,pointB,pointC)<0.0){const temp=pointA;pointA=pointC;pointC=temp;}
patterns[0]=pointA;patterns[1]=pointB;patterns[2]=pointC;}
static distance(pattern1,pattern2){return MathUtils.distance(pattern1.x,pattern1.y,pattern2.x,pattern2.y);}
static crossProductZ(pointA,pointB,pointC){const bX=pointB.x;const bY=pointB.y;return((pointC.x-bX)*(pointA.y-bY))-((pointC.y-bY)*(pointA.x-bX));}}
class DetectorResult{constructor(bits,points){this.bits=bits;this.points=points;}
getBits(){return this.bits;}
getPoints(){return this.points;}}
class AztecDetectorResult extends DetectorResult{constructor(bits,points,compact,nbDatablocks,nbLayers){super(bits,points);this.compact=compact;this.nbDatablocks=nbDatablocks;this.nbLayers=nbLayers;}
getNbLayers(){return this.nbLayers;}
getNbDatablocks(){return this.nbDatablocks;}
isCompact(){return this.compact;}}
class WhiteRectangleDetector{constructor(image,initSize,x,y){this.image=image;this.height=image.getHeight();this.width=image.getWidth();if(undefined===initSize||null===initSize){initSize=WhiteRectangleDetector.INIT_SIZE;}
if(undefined===x||null===x){x=image.getWidth()/2|0;}
if(undefined===y||null===y){y=image.getHeight()/2|0;}
const halfsize=initSize/2|0;this.leftInit=x-halfsize;this.rightInit=x+halfsize;this.upInit=y-halfsize;this.downInit=y+halfsize;if(this.upInit<0||this.leftInit<0||this.downInit>=this.height||this.rightInit>=this.width){throw new NotFoundException();}}
detect(){let left=this.leftInit;let right=this.rightInit;let up=this.upInit;let down=this.downInit;let sizeExceeded=false;let aBlackPointFoundOnBorder=true;let atLeastOneBlackPointFoundOnBorder=false;let atLeastOneBlackPointFoundOnRight=false;let atLeastOneBlackPointFoundOnBottom=false;let atLeastOneBlackPointFoundOnLeft=false;let atLeastOneBlackPointFoundOnTop=false;const width=this.width;const height=this.height;while(aBlackPointFoundOnBorder){aBlackPointFoundOnBorder=false;let rightBorderNotWhite=true;while((rightBorderNotWhite||!atLeastOneBlackPointFoundOnRight)&&right<width){rightBorderNotWhite=this.containsBlackPoint(up,down,right,false);if(rightBorderNotWhite){right++;aBlackPointFoundOnBorder=true;atLeastOneBlackPointFoundOnRight=true;}
else if(!atLeastOneBlackPointFoundOnRight){right++;}}
if(right>=width){sizeExceeded=true;break;}
let bottomBorderNotWhite=true;while((bottomBorderNotWhite||!atLeastOneBlackPointFoundOnBottom)&&down<height){bottomBorderNotWhite=this.containsBlackPoint(left,right,down,true);if(bottomBorderNotWhite){down++;aBlackPointFoundOnBorder=true;atLeastOneBlackPointFoundOnBottom=true;}
else if(!atLeastOneBlackPointFoundOnBottom){down++;}}
if(down>=height){sizeExceeded=true;break;}
let leftBorderNotWhite=true;while((leftBorderNotWhite||!atLeastOneBlackPointFoundOnLeft)&&left>=0){leftBorderNotWhite=this.containsBlackPoint(up,down,left,false);if(leftBorderNotWhite){left--;aBlackPointFoundOnBorder=true;atLeastOneBlackPointFoundOnLeft=true;}
else if(!atLeastOneBlackPointFoundOnLeft){left--;}}
if(left<0){sizeExceeded=true;break;}
let topBorderNotWhite=true;while((topBorderNotWhite||!atLeastOneBlackPointFoundOnTop)&&up>=0){topBorderNotWhite=this.containsBlackPoint(left,right,up,true);if(topBorderNotWhite){up--;aBlackPointFoundOnBorder=true;atLeastOneBlackPointFoundOnTop=true;}
else if(!atLeastOneBlackPointFoundOnTop){up--;}}
if(up<0){sizeExceeded=true;break;}
if(aBlackPointFoundOnBorder){atLeastOneBlackPointFoundOnBorder=true;}}
if(!sizeExceeded&&atLeastOneBlackPointFoundOnBorder){const maxSize=right-left;let z=null;for(let i=1;z===null&&i<maxSize;i++){z=this.getBlackPointOnSegment(left,down-i,left+i,down);}
if(z==null){throw new NotFoundException();}
let t=null;for(let i=1;t===null&&i<maxSize;i++){t=this.getBlackPointOnSegment(left,up+i,left+i,up);}
if(t==null){throw new NotFoundException();}
let x=null;for(let i=1;x===null&&i<maxSize;i++){x=this.getBlackPointOnSegment(right,up+i,right-i,up);}
if(x==null){throw new NotFoundException();}
let y=null;for(let i=1;y===null&&i<maxSize;i++){y=this.getBlackPointOnSegment(right,down-i,right-i,down);}
if(y==null){throw new NotFoundException();}
return this.centerEdges(y,z,x,t);}
else{throw new NotFoundException();}}
getBlackPointOnSegment(aX,aY,bX,bY){const dist=MathUtils.round(MathUtils.distance(aX,aY,bX,bY));const xStep=(bX-aX)/dist;const yStep=(bY-aY)/dist;const image=this.image;for(let i=0;i<dist;i++){const x=MathUtils.round(aX+i*xStep);const y=MathUtils.round(aY+i*yStep);if(image.get(x,y)){return new ResultPoint(x,y);}}
return null;}
centerEdges(y,z,x,t){const yi=y.getX();const yj=y.getY();const zi=z.getX();const zj=z.getY();const xi=x.getX();const xj=x.getY();const ti=t.getX();const tj=t.getY();const CORR=WhiteRectangleDetector.CORR;if(yi<this.width/2.0){return[new ResultPoint(ti-CORR,tj+CORR),new ResultPoint(zi+CORR,zj+CORR),new ResultPoint(xi-CORR,xj-CORR),new ResultPoint(yi+CORR,yj-CORR)];}
else{return[new ResultPoint(ti+CORR,tj+CORR),new ResultPoint(zi+CORR,zj-CORR),new ResultPoint(xi-CORR,xj+CORR),new ResultPoint(yi-CORR,yj-CORR)];}}
containsBlackPoint(a,b,fixed,horizontal){const image=this.image;if(horizontal){for(let x=a;x<=b;x++){if(image.get(x,fixed)){return true;}}}
else{for(let y=a;y<=b;y++){if(image.get(fixed,y)){return true;}}}
return false;}}
WhiteRectangleDetector.INIT_SIZE=10;WhiteRectangleDetector.CORR=1;class GridSampler{static checkAndNudgePoints(image,points){const width=image.getWidth();const height=image.getHeight();let nudged=true;for(let offset=0;offset<points.length&&nudged;offset+=2){const x=Math.floor(points[offset]);const y=Math.floor(points[offset+1]);if(x<-1||x>width||y<-1||y>height){throw new NotFoundException();}
nudged=false;if(x===-1){points[offset]=0.0;nudged=true;}
else if(x===width){points[offset]=width-1;nudged=true;}
if(y===-1){points[offset+1]=0.0;nudged=true;}
else if(y===height){points[offset+1]=height-1;nudged=true;}}
nudged=true;for(let offset=points.length-2;offset>=0&&nudged;offset-=2){const x=Math.floor(points[offset]);const y=Math.floor(points[offset+1]);if(x<-1||x>width||y<-1||y>height){throw new NotFoundException();}
nudged=false;if(x===-1){points[offset]=0.0;nudged=true;}
else if(x===width){points[offset]=width-1;nudged=true;}
if(y===-1){points[offset+1]=0.0;nudged=true;}
else if(y===height){points[offset+1]=height-1;nudged=true;}}}}
class PerspectiveTransform{constructor(a11,a21,a31,a12,a22,a32,a13,a23,a33){this.a11=a11;this.a21=a21;this.a31=a31;this.a12=a12;this.a22=a22;this.a32=a32;this.a13=a13;this.a23=a23;this.a33=a33;}
static quadrilateralToQuadrilateral(x0,y0,x1,y1,x2,y2,x3,y3,x0p,y0p,x1p,y1p,x2p,y2p,x3p,y3p){const qToS=PerspectiveTransform.quadrilateralToSquare(x0,y0,x1,y1,x2,y2,x3,y3);const sToQ=PerspectiveTransform.squareToQuadrilateral(x0p,y0p,x1p,y1p,x2p,y2p,x3p,y3p);return sToQ.times(qToS);}
transformPoints(points){const max=points.length;const a11=this.a11;const a12=this.a12;const a13=this.a13;const a21=this.a21;const a22=this.a22;const a23=this.a23;const a31=this.a31;const a32=this.a32;const a33=this.a33;for(let i=0;i<max;i+=2){const x=points[i];const y=points[i+1];const denominator=a13*x+a23*y+a33;points[i]=(a11*x+a21*y+a31)/denominator;points[i+1]=(a12*x+a22*y+a32)/denominator;}}
transformPointsWithValues(xValues,yValues){const a11=this.a11;const a12=this.a12;const a13=this.a13;const a21=this.a21;const a22=this.a22;const a23=this.a23;const a31=this.a31;const a32=this.a32;const a33=this.a33;const n=xValues.length;for(let i=0;i<n;i++){const x=xValues[i];const y=yValues[i];const denominator=a13*x+a23*y+a33;xValues[i]=(a11*x+a21*y+a31)/denominator;yValues[i]=(a12*x+a22*y+a32)/denominator;}}
static squareToQuadrilateral(x0,y0,x1,y1,x2,y2,x3,y3){const dx3=x0-x1+x2-x3;const dy3=y0-y1+y2-y3;if(dx3===0.0&&dy3===0.0){return new PerspectiveTransform(x1-x0,x2-x1,x0,y1-y0,y2-y1,y0,0.0,0.0,1.0);}
else{const dx1=x1-x2;const dx2=x3-x2;const dy1=y1-y2;const dy2=y3-y2;const denominator=dx1*dy2-dx2*dy1;const a13=(dx3*dy2-dx2*dy3)/denominator;const a23=(dx1*dy3-dx3*dy1)/denominator;return new PerspectiveTransform(x1-x0+a13*x1,x3-x0+a23*x3,x0,y1-y0+a13*y1,y3-y0+a23*y3,y0,a13,a23,1.0);}}
static quadrilateralToSquare(x0,y0,x1,y1,x2,y2,x3,y3){return PerspectiveTransform.squareToQuadrilateral(x0,y0,x1,y1,x2,y2,x3,y3).buildAdjoint();}
buildAdjoint(){return new PerspectiveTransform(this.a22*this.a33-this.a23*this.a32,this.a23*this.a31-this.a21*this.a33,this.a21*this.a32-this.a22*this.a31,this.a13*this.a32-this.a12*this.a33,this.a11*this.a33-this.a13*this.a31,this.a12*this.a31-this.a11*this.a32,this.a12*this.a23-this.a13*this.a22,this.a13*this.a21-this.a11*this.a23,this.a11*this.a22-this.a12*this.a21);}
times(other){return new PerspectiveTransform(this.a11*other.a11+this.a21*other.a12+this.a31*other.a13,this.a11*other.a21+this.a21*other.a22+this.a31*other.a23,this.a11*other.a31+this.a21*other.a32+this.a31*other.a33,this.a12*other.a11+this.a22*other.a12+this.a32*other.a13,this.a12*other.a21+this.a22*other.a22+this.a32*other.a23,this.a12*other.a31+this.a22*other.a32+this.a32*other.a33,this.a13*other.a11+this.a23*other.a12+this.a33*other.a13,this.a13*other.a21+this.a23*other.a22+this.a33*other.a23,this.a13*other.a31+this.a23*other.a32+this.a33*other.a33);}}
class DefaultGridSampler extends GridSampler{sampleGrid(image,dimensionX,dimensionY,p1ToX,p1ToY,p2ToX,p2ToY,p3ToX,p3ToY,p4ToX,p4ToY,p1FromX,p1FromY,p2FromX,p2FromY,p3FromX,p3FromY,p4FromX,p4FromY){const transform=PerspectiveTransform.quadrilateralToQuadrilateral(p1ToX,p1ToY,p2ToX,p2ToY,p3ToX,p3ToY,p4ToX,p4ToY,p1FromX,p1FromY,p2FromX,p2FromY,p3FromX,p3FromY,p4FromX,p4FromY);return this.sampleGridWithTransform(image,dimensionX,dimensionY,transform);}
sampleGridWithTransform(image,dimensionX,dimensionY,transform){if(dimensionX<=0||dimensionY<=0){throw new NotFoundException();}
const bits=new BitMatrix(dimensionX,dimensionY);const points=new Float32Array(2*dimensionX);for(let y=0;y<dimensionY;y++){const max=points.length;const iValue=y+0.5;for(let x=0;x<max;x+=2){points[x]=(x/2)+0.5;points[x+1]=iValue;}
transform.transformPoints(points);GridSampler.checkAndNudgePoints(image,points);try{for(let x=0;x<max;x+=2){if(image.get(Math.floor(points[x]),Math.floor(points[x+1]))){bits.set(x/2,y);}}}
catch(aioobe){throw new NotFoundException();}}
return bits;}}
class GridSamplerInstance{static setGridSampler(newGridSampler){GridSamplerInstance.gridSampler=newGridSampler;}
static getInstance(){return GridSamplerInstance.gridSampler;}}
GridSamplerInstance.gridSampler=new DefaultGridSampler();class Point{constructor(x,y){this.x=x;this.y=y;}
toResultPoint(){return new ResultPoint(this.getX(),this.getY());}
getX(){return this.x;}
getY(){return this.y;}}
class Detector{constructor(image){this.EXPECTED_CORNER_BITS=new Int32Array([0xee0,0x1dc,0x83b,0x707,]);this.image=image;}
detect(){return this.detectMirror(false);}
detectMirror(isMirror){let pCenter=this.getMatrixCenter();let bullsEyeCorners=this.getBullsEyeCorners(pCenter);if(isMirror){let temp=bullsEyeCorners[0];bullsEyeCorners[0]=bullsEyeCorners[2];bullsEyeCorners[2]=temp;}
this.extractParameters(bullsEyeCorners);let bits=this.sampleGrid(this.image,bullsEyeCorners[this.shift%4],bullsEyeCorners[(this.shift+1)%4],bullsEyeCorners[(this.shift+2)%4],bullsEyeCorners[(this.shift+3)%4]);let corners=this.getMatrixCornerPoints(bullsEyeCorners);return new AztecDetectorResult(bits,corners,this.compact,this.nbDataBlocks,this.nbLayers);}
extractParameters(bullsEyeCorners){if(!this.isValidPoint(bullsEyeCorners[0])||!this.isValidPoint(bullsEyeCorners[1])||!this.isValidPoint(bullsEyeCorners[2])||!this.isValidPoint(bullsEyeCorners[3])){throw new NotFoundException();}
let length=2*this.nbCenterLayers;let sides=new Int32Array([this.sampleLine(bullsEyeCorners[0],bullsEyeCorners[1],length),this.sampleLine(bullsEyeCorners[1],bullsEyeCorners[2],length),this.sampleLine(bullsEyeCorners[2],bullsEyeCorners[3],length),this.sampleLine(bullsEyeCorners[3],bullsEyeCorners[0],length)]);this.shift=this.getRotation(sides,length);let parameterData=0;for(let i=0;i<4;i++){let side=sides[(this.shift+i)%4];if(this.compact){parameterData<<=7;parameterData+=(side>>1)&0x7F;}
else{parameterData<<=10;parameterData+=((side>>2)&(0x1f<<5))+((side>>1)&0x1F);}}
let correctedData=this.getCorrectedParameterData(parameterData,this.compact);if(this.compact){this.nbLayers=(correctedData>>6)+1;this.nbDataBlocks=(correctedData&0x3F)+1;}
else{this.nbLayers=(correctedData>>11)+1;this.nbDataBlocks=(correctedData&0x7FF)+1;}}
getRotation(sides,length){let cornerBits=0;sides.forEach((side,idx,arr)=>{let t=((side>>(length-2))<<1)+(side&1);cornerBits=(cornerBits<<3)+t;});cornerBits=((cornerBits&1)<<11)+(cornerBits>>1);for(let shift=0;shift<4;shift++){if(Integer.bitCount(cornerBits^this.EXPECTED_CORNER_BITS[shift])<=2){return shift;}}
throw new NotFoundException();}
getCorrectedParameterData(parameterData,compact){let numCodewords;let numDataCodewords;if(compact){numCodewords=7;numDataCodewords=2;}
else{numCodewords=10;numDataCodewords=4;}
let numECCodewords=numCodewords-numDataCodewords;let parameterWords=new Int32Array(numCodewords);for(let i=numCodewords-1;i>=0;--i){parameterWords[i]=parameterData&0xF;parameterData>>=4;}
try{let rsDecoder=new ReedSolomonDecoder(GenericGF.AZTEC_PARAM);rsDecoder.decode(parameterWords,numECCodewords);}
catch(ignored){throw new NotFoundException();}
let result=0;for(let i=0;i<numDataCodewords;i++){result=(result<<4)+parameterWords[i];}
return result;}
getBullsEyeCorners(pCenter){let pina=pCenter;let pinb=pCenter;let pinc=pCenter;let pind=pCenter;let color=true;for(this.nbCenterLayers=1;this.nbCenterLayers<9;this.nbCenterLayers++){let pouta=this.getFirstDifferent(pina,color,1,-1);let poutb=this.getFirstDifferent(pinb,color,1,1);let poutc=this.getFirstDifferent(pinc,color,-1,1);let poutd=this.getFirstDifferent(pind,color,-1,-1);if(this.nbCenterLayers>2){let q=(this.distancePoint(poutd,pouta)*this.nbCenterLayers)/(this.distancePoint(pind,pina)*(this.nbCenterLayers+2));if(q<0.75||q>1.25||!this.isWhiteOrBlackRectangle(pouta,poutb,poutc,poutd)){break;}}
pina=pouta;pinb=poutb;pinc=poutc;pind=poutd;color=!color;}
if(this.nbCenterLayers!==5&&this.nbCenterLayers!==7){throw new NotFoundException();}
this.compact=this.nbCenterLayers===5;let pinax=new ResultPoint(pina.getX()+0.5,pina.getY()-0.5);let pinbx=new ResultPoint(pinb.getX()+0.5,pinb.getY()+0.5);let pincx=new ResultPoint(pinc.getX()-0.5,pinc.getY()+0.5);let pindx=new ResultPoint(pind.getX()-0.5,pind.getY()-0.5);return this.expandSquare([pinax,pinbx,pincx,pindx],2*this.nbCenterLayers-3,2*this.nbCenterLayers);}
getMatrixCenter(){let pointA;let pointB;let pointC;let pointD;try{let cornerPoints=new WhiteRectangleDetector(this.image).detect();pointA=cornerPoints[0];pointB=cornerPoints[1];pointC=cornerPoints[2];pointD=cornerPoints[3];}
catch(e){let cx=this.image.getWidth()/2;let cy=this.image.getHeight()/2;pointA=this.getFirstDifferent(new Point(cx+7,cy-7),false,1,-1).toResultPoint();pointB=this.getFirstDifferent(new Point(cx+7,cy+7),false,1,1).toResultPoint();pointC=this.getFirstDifferent(new Point(cx-7,cy+7),false,-1,1).toResultPoint();pointD=this.getFirstDifferent(new Point(cx-7,cy-7),false,-1,-1).toResultPoint();}
let cx=MathUtils.round((pointA.getX()+pointD.getX()+pointB.getX()+pointC.getX())/4.0);let cy=MathUtils.round((pointA.getY()+pointD.getY()+pointB.getY()+pointC.getY())/4.0);try{let cornerPoints=new WhiteRectangleDetector(this.image,15,cx,cy).detect();pointA=cornerPoints[0];pointB=cornerPoints[1];pointC=cornerPoints[2];pointD=cornerPoints[3];}
catch(e){pointA=this.getFirstDifferent(new Point(cx+7,cy-7),false,1,-1).toResultPoint();pointB=this.getFirstDifferent(new Point(cx+7,cy+7),false,1,1).toResultPoint();pointC=this.getFirstDifferent(new Point(cx-7,cy+7),false,-1,1).toResultPoint();pointD=this.getFirstDifferent(new Point(cx-7,cy-7),false,-1,-1).toResultPoint();}
cx=MathUtils.round((pointA.getX()+pointD.getX()+pointB.getX()+pointC.getX())/4.0);cy=MathUtils.round((pointA.getY()+pointD.getY()+pointB.getY()+pointC.getY())/4.0);return new Point(cx,cy);}
getMatrixCornerPoints(bullsEyeCorners){return this.expandSquare(bullsEyeCorners,2*this.nbCenterLayers,this.getDimension());}
sampleGrid(image,topLeft,topRight,bottomRight,bottomLeft){let sampler=GridSamplerInstance.getInstance();let dimension=this.getDimension();let low=dimension/2-this.nbCenterLayers;let high=dimension/2+this.nbCenterLayers;return sampler.sampleGrid(image,dimension,dimension,low,low,high,low,high,high,low,high,topLeft.getX(),topLeft.getY(),topRight.getX(),topRight.getY(),bottomRight.getX(),bottomRight.getY(),bottomLeft.getX(),bottomLeft.getY());}
sampleLine(p1,p2,size){let result=0;let d=this.distanceResultPoint(p1,p2);let moduleSize=d/size;let px=p1.getX();let py=p1.getY();let dx=moduleSize*(p2.getX()-p1.getX())/d;let dy=moduleSize*(p2.getY()-p1.getY())/d;for(let i=0;i<size;i++){if(this.image.get(MathUtils.round(px+i*dx),MathUtils.round(py+i*dy))){result|=1<<(size-i-1);}}
return result;}
isWhiteOrBlackRectangle(p1,p2,p3,p4){let corr=3;p1=new Point(p1.getX()-corr,p1.getY()+corr);p2=new Point(p2.getX()-corr,p2.getY()-corr);p3=new Point(p3.getX()+corr,p3.getY()-corr);p4=new Point(p4.getX()+corr,p4.getY()+corr);let cInit=this.getColor(p4,p1);if(cInit===0){return false;}
let c=this.getColor(p1,p2);if(c!==cInit){return false;}
c=this.getColor(p2,p3);if(c!==cInit){return false;}
c=this.getColor(p3,p4);return c===cInit;}
getColor(p1,p2){let d=this.distancePoint(p1,p2);let dx=(p2.getX()-p1.getX())/d;let dy=(p2.getY()-p1.getY())/d;let error=0;let px=p1.getX();let py=p1.getY();let colorModel=this.image.get(p1.getX(),p1.getY());let iMax=Math.ceil(d);for(let i=0;i<iMax;i++){px+=dx;py+=dy;if(this.image.get(MathUtils.round(px),MathUtils.round(py))!==colorModel){error++;}}
let errRatio=error/d;if(errRatio>0.1&&errRatio<0.9){return 0;}
return(errRatio<=0.1)===colorModel?1:-1;}
getFirstDifferent(init,color,dx,dy){let x=init.getX()+dx;let y=init.getY()+dy;while(this.isValid(x,y)&&this.image.get(x,y)===color){x+=dx;y+=dy;}
x-=dx;y-=dy;while(this.isValid(x,y)&&this.image.get(x,y)===color){x+=dx;}
x-=dx;while(this.isValid(x,y)&&this.image.get(x,y)===color){y+=dy;}
y-=dy;return new Point(x,y);}
expandSquare(cornerPoints,oldSide,newSide){let ratio=newSide/(2.0*oldSide);let dx=cornerPoints[0].getX()-cornerPoints[2].getX();let dy=cornerPoints[0].getY()-cornerPoints[2].getY();let centerx=(cornerPoints[0].getX()+cornerPoints[2].getX())/2.0;let centery=(cornerPoints[0].getY()+cornerPoints[2].getY())/2.0;let result0=new ResultPoint(centerx+ratio*dx,centery+ratio*dy);let result2=new ResultPoint(centerx-ratio*dx,centery-ratio*dy);dx=cornerPoints[1].getX()-cornerPoints[3].getX();dy=cornerPoints[1].getY()-cornerPoints[3].getY();centerx=(cornerPoints[1].getX()+cornerPoints[3].getX())/2.0;centery=(cornerPoints[1].getY()+cornerPoints[3].getY())/2.0;let result1=new ResultPoint(centerx+ratio*dx,centery+ratio*dy);let result3=new ResultPoint(centerx-ratio*dx,centery-ratio*dy);let results=[result0,result1,result2,result3];return results;}
isValid(x,y){return x>=0&&x<this.image.getWidth()&&y>0&&y<this.image.getHeight();}
isValidPoint(point){let x=MathUtils.round(point.getX());let y=MathUtils.round(point.getY());return this.isValid(x,y);}
distancePoint(a,b){return MathUtils.distance(a.getX(),a.getY(),b.getX(),b.getY());}
distanceResultPoint(a,b){return MathUtils.distance(a.getX(),a.getY(),b.getX(),b.getY());}
getDimension(){if(this.compact){return 4*this.nbLayers+11;}
if(this.nbLayers<=4){return 4*this.nbLayers+15;}
return 4*this.nbLayers+2*(Integer.truncDivision((this.nbLayers-4),8)+1)+15;}}
class AztecReader{decode(image,hints=null){let exception=null;let detector=new Detector(image.getBlackMatrix());let points=null;let decoderResult=null;try{let detectorResult=detector.detectMirror(false);points=detectorResult.getPoints();this.reportFoundResultPoints(hints,points);decoderResult=new Decoder().decode(detectorResult);}
catch(e){exception=e;}
if(decoderResult==null){try{let detectorResult=detector.detectMirror(true);points=detectorResult.getPoints();this.reportFoundResultPoints(hints,points);decoderResult=new Decoder().decode(detectorResult);}
catch(e){if(exception!=null){throw exception;}
throw e;}}
let result=new Result(decoderResult.getText(),decoderResult.getRawBytes(),decoderResult.getNumBits(),points,BarcodeFormat$1.AZTEC,System.currentTimeMillis());let byteSegments=decoderResult.getByteSegments();if(byteSegments!=null){result.putMetadata(ResultMetadataType$1.BYTE_SEGMENTS,byteSegments);}
let ecLevel=decoderResult.getECLevel();if(ecLevel!=null){result.putMetadata(ResultMetadataType$1.ERROR_CORRECTION_LEVEL,ecLevel);}
return result;}
reportFoundResultPoints(hints,points){if(hints!=null){let rpcb=hints.get(DecodeHintType$1.NEED_RESULT_POINT_CALLBACK);if(rpcb!=null){points.forEach((point,idx,arr)=>{rpcb.foundPossibleResultPoint(point);});}}}
reset(){}}
class BrowserAztecCodeReader extends BrowserCodeReader{constructor(timeBetweenScansMillis=500){super(new AztecReader(),timeBetweenScansMillis);}}
class OneDReader{decode(image,hints){try{return this.doDecode(image,hints);}
catch(nfe){const tryHarder=hints&&(hints.get(DecodeHintType$1.TRY_HARDER)===true);if(tryHarder&&image.isRotateSupported()){const rotatedImage=image.rotateCounterClockwise();const result=this.doDecode(rotatedImage,hints);const metadata=result.getResultMetadata();let orientation=270;if(metadata!==null&&(metadata.get(ResultMetadataType$1.ORIENTATION)===true)){orientation=(orientation+metadata.get(ResultMetadataType$1.ORIENTATION)%360);}
result.putMetadata(ResultMetadataType$1.ORIENTATION,orientation);const points=result.getResultPoints();if(points!==null){const height=rotatedImage.getHeight();for(let i=0;i<points.length;i++){points[i]=new ResultPoint(height-points[i].getY()-1,points[i].getX());}}
return result;}
else{throw new NotFoundException();}}}
reset(){}
doDecode(image,hints){const width=image.getWidth();const height=image.getHeight();let row=new BitArray(width);const tryHarder=hints&&(hints.get(DecodeHintType$1.TRY_HARDER)===true);const rowStep=Math.max(1,height>>(tryHarder?8:5));let maxLines;if(tryHarder){maxLines=height;}
else{maxLines=15;}
const middle=Math.trunc(height/2);for(let x=0;x<maxLines;x++){const rowStepsAboveOrBelow=Math.trunc((x+1)/2);const isAbove=(x&0x01)===0;const rowNumber=middle+rowStep*(isAbove?rowStepsAboveOrBelow:-rowStepsAboveOrBelow);if(rowNumber<0||rowNumber>=height){break;}
try{row=image.getBlackRow(rowNumber,row);}
catch(ignored){continue;}
for(let attempt=0;attempt<2;attempt++){if(attempt===1){row.reverse();if(hints&&(hints.get(DecodeHintType$1.NEED_RESULT_POINT_CALLBACK)===true)){const newHints=new Map();hints.forEach((hint,key)=>newHints.set(key,hint));newHints.delete(DecodeHintType$1.NEED_RESULT_POINT_CALLBACK);hints=newHints;}}
try{const result=this.decodeRow(rowNumber,row,hints);if(attempt===1){result.putMetadata(ResultMetadataType$1.ORIENTATION,180);const points=result.getResultPoints();if(points!==null){points[0]=new ResultPoint(width-points[0].getX()-1,points[0].getY());points[1]=new ResultPoint(width-points[1].getX()-1,points[1].getY());}}
return result;}
catch(re){}}}
throw new NotFoundException();}
static recordPattern(row,start,counters){const numCounters=counters.length;for(let index=0;index<numCounters;index++)
counters[index]=0;const end=row.getSize();if(start>=end){throw new NotFoundException();}
let isWhite=!row.get(start);let counterPosition=0;let i=start;while(i<end){if(row.get(i)!==isWhite){counters[counterPosition]++;}
else{if(++counterPosition===numCounters){break;}
else{counters[counterPosition]=1;isWhite=!isWhite;}}
i++;}
if(!(counterPosition===numCounters||(counterPosition===numCounters-1&&i===end))){throw new NotFoundException();}}
static recordPatternInReverse(row,start,counters){let numTransitionsLeft=counters.length;let last=row.get(start);while(start>0&&numTransitionsLeft>=0){if(row.get(--start)!==last){numTransitionsLeft--;last=!last;}}
if(numTransitionsLeft>=0){throw new NotFoundException();}
OneDReader.recordPattern(row,start+1,counters);}
static patternMatchVariance(counters,pattern,maxIndividualVariance){const numCounters=counters.length;let total=0;let patternLength=0;for(let i=0;i<numCounters;i++){total+=counters[i];patternLength+=pattern[i];}
if(total<patternLength){return Number.POSITIVE_INFINITY;}
const unitBarWidth=total/patternLength;maxIndividualVariance*=unitBarWidth;let totalVariance=0.0;for(let x=0;x<numCounters;x++){const counter=counters[x];const scaledPattern=pattern[x]*unitBarWidth;const variance=counter>scaledPattern?counter-scaledPattern:scaledPattern-counter;if(variance>maxIndividualVariance){return Number.POSITIVE_INFINITY;}
totalVariance+=variance;}
return totalVariance/total;}}
class Code128Reader extends OneDReader{static findStartPattern(row){const width=row.getSize();const rowOffset=row.getNextSet(0);let counterPosition=0;let counters=Int32Array.from([0,0,0,0,0,0]);let patternStart=rowOffset;let isWhite=false;const patternLength=6;for(let i=rowOffset;i<width;i++){if(row.get(i)!==isWhite){counters[counterPosition]++;}
else{if(counterPosition===(patternLength-1)){let bestVariance=Code128Reader.MAX_AVG_VARIANCE;let bestMatch=-1;for(let startCode=Code128Reader.CODE_START_A;startCode<=Code128Reader.CODE_START_C;startCode++){const variance=OneDReader.patternMatchVariance(counters,Code128Reader.CODE_PATTERNS[startCode],Code128Reader.MAX_INDIVIDUAL_VARIANCE);if(variance<bestVariance){bestVariance=variance;bestMatch=startCode;}}
if(bestMatch>=0&&row.isRange(Math.max(0,patternStart-(i-patternStart)/2),patternStart,false)){return Int32Array.from([patternStart,i,bestMatch]);}
patternStart+=counters[0]+counters[1];counters=counters.slice(2,counters.length-1);counters[counterPosition-1]=0;counters[counterPosition]=0;counterPosition--;}
else{counterPosition++;}
counters[counterPosition]=1;isWhite=!isWhite;}}
throw new NotFoundException();}
static decodeCode(row,counters,rowOffset){OneDReader.recordPattern(row,rowOffset,counters);let bestVariance=Code128Reader.MAX_AVG_VARIANCE;let bestMatch=-1;for(let d=0;d<Code128Reader.CODE_PATTERNS.length;d++){const pattern=Code128Reader.CODE_PATTERNS[d];const variance=this.patternMatchVariance(counters,pattern,Code128Reader.MAX_INDIVIDUAL_VARIANCE);if(variance<bestVariance){bestVariance=variance;bestMatch=d;}}
if(bestMatch>=0){return bestMatch;}
else{throw new NotFoundException();}}
decodeRow(rowNumber,row,hints){const convertFNC1=hints&&(hints.get(DecodeHintType$1.ASSUME_GS1)===true);const startPatternInfo=Code128Reader.findStartPattern(row);const startCode=startPatternInfo[2];let currentRawCodesIndex=0;const rawCodes=new Uint8Array(20);rawCodes[currentRawCodesIndex++]=startCode;let codeSet;switch(startCode){case Code128Reader.CODE_START_A:codeSet=Code128Reader.CODE_CODE_A;break;case Code128Reader.CODE_START_B:codeSet=Code128Reader.CODE_CODE_B;break;case Code128Reader.CODE_START_C:codeSet=Code128Reader.CODE_CODE_C;break;default:throw new FormatException();}
let done=false;let isNextShifted=false;let result='';let lastStart=startPatternInfo[0];let nextStart=startPatternInfo[1];const counters=Int32Array.from([0,0,0,0,0,0]);let lastCode=0;let code=0;let checksumTotal=startCode;let multiplier=0;let lastCharacterWasPrintable=true;let upperMode=false;let shiftUpperMode=false;while(!done){const unshift=isNextShifted;isNextShifted=false;lastCode=code;code=Code128Reader.decodeCode(row,counters,nextStart);rawCodes[currentRawCodesIndex++]=code;if(code!==Code128Reader.CODE_STOP){lastCharacterWasPrintable=true;}
if(code!==Code128Reader.CODE_STOP){multiplier++;checksumTotal+=multiplier*code;}
lastStart=nextStart;nextStart+=counters.reduce((previous,current)=>previous+current,0);switch(code){case Code128Reader.CODE_START_A:case Code128Reader.CODE_START_B:case Code128Reader.CODE_START_C:throw new FormatException();}
switch(codeSet){case Code128Reader.CODE_CODE_A:if(code<64){if(shiftUpperMode===upperMode){result+=String.fromCharCode((' '.charCodeAt(0)+code));}
else{result+=String.fromCharCode((' '.charCodeAt(0)+code+128));}
shiftUpperMode=false;}
else if(code<96){if(shiftUpperMode===upperMode){result+=String.fromCharCode((code-64));}
else{result+=String.fromCharCode((code+64));}
shiftUpperMode=false;}
else{if(code!==Code128Reader.CODE_STOP){lastCharacterWasPrintable=false;}
switch(code){case Code128Reader.CODE_FNC_1:if(convertFNC1){if(result.length===0){result+=']C1';}
else{result+=String.fromCharCode(29);}}
break;case Code128Reader.CODE_FNC_2:case Code128Reader.CODE_FNC_3:break;case Code128Reader.CODE_FNC_4_A:if(!upperMode&&shiftUpperMode){upperMode=true;shiftUpperMode=false;}
else if(upperMode&&shiftUpperMode){upperMode=false;shiftUpperMode=false;}
else{shiftUpperMode=true;}
break;case Code128Reader.CODE_SHIFT:isNextShifted=true;codeSet=Code128Reader.CODE_CODE_B;break;case Code128Reader.CODE_CODE_B:codeSet=Code128Reader.CODE_CODE_B;break;case Code128Reader.CODE_CODE_C:codeSet=Code128Reader.CODE_CODE_C;break;case Code128Reader.CODE_STOP:done=true;break;}}
break;case Code128Reader.CODE_CODE_B:if(code<96){if(shiftUpperMode===upperMode){result+=String.fromCharCode((' '.charCodeAt(0)+code));}
else{result+=String.fromCharCode((' '.charCodeAt(0)+code+128));}
shiftUpperMode=false;}
else{if(code!==Code128Reader.CODE_STOP){lastCharacterWasPrintable=false;}
switch(code){case Code128Reader.CODE_FNC_1:if(convertFNC1){if(result.length===0){result+=']C1';}
else{result+=String.fromCharCode(29);}}
break;case Code128Reader.CODE_FNC_2:case Code128Reader.CODE_FNC_3:break;case Code128Reader.CODE_FNC_4_B:if(!upperMode&&shiftUpperMode){upperMode=true;shiftUpperMode=false;}
else if(upperMode&&shiftUpperMode){upperMode=false;shiftUpperMode=false;}
else{shiftUpperMode=true;}
break;case Code128Reader.CODE_SHIFT:isNextShifted=true;codeSet=Code128Reader.CODE_CODE_A;break;case Code128Reader.CODE_CODE_A:codeSet=Code128Reader.CODE_CODE_A;break;case Code128Reader.CODE_CODE_C:codeSet=Code128Reader.CODE_CODE_C;break;case Code128Reader.CODE_STOP:done=true;break;}}
break;case Code128Reader.CODE_CODE_C:if(code<100){if(code<10){result+='0';}
result+=code;}
else{if(code!==Code128Reader.CODE_STOP){lastCharacterWasPrintable=false;}
switch(code){case Code128Reader.CODE_FNC_1:if(convertFNC1){if(result.length===0){result+=']C1';}
else{result+=String.fromCharCode(29);}}
break;case Code128Reader.CODE_CODE_A:codeSet=Code128Reader.CODE_CODE_A;break;case Code128Reader.CODE_CODE_B:codeSet=Code128Reader.CODE_CODE_B;break;case Code128Reader.CODE_STOP:done=true;break;}}
break;}
if(unshift){codeSet=codeSet===Code128Reader.CODE_CODE_A?Code128Reader.CODE_CODE_B:Code128Reader.CODE_CODE_A;}}
const lastPatternSize=nextStart-lastStart;nextStart=row.getNextUnset(nextStart);if(!row.isRange(nextStart,Math.min(row.getSize(),nextStart+(nextStart-lastStart)/2),false)){throw new NotFoundException();}
checksumTotal-=multiplier*lastCode;if(checksumTotal%103!==lastCode){throw new ChecksumException();}
const resultLength=result.length;if(resultLength===0){throw new NotFoundException();}
if(resultLength>0&&lastCharacterWasPrintable){if(codeSet===Code128Reader.CODE_CODE_C){result=result.substring(0,resultLength-2);}
else{result=result.substring(0,resultLength-1);}}
const left=(startPatternInfo[1]+startPatternInfo[0])/2.0;const right=lastStart+lastPatternSize/2.0;const rawCodesSize=rawCodes.length;const rawBytes=new Uint8Array(rawCodesSize);for(let i=0;i<rawCodesSize;i++){rawBytes[i]=rawCodes[i];}
const points=[new ResultPoint(left,rowNumber),new ResultPoint(right,rowNumber)];return new Result(result,rawBytes,0,points,BarcodeFormat$1.CODE_128,new Date().getTime());}}
Code128Reader.CODE_PATTERNS=[Int32Array.from([2,1,2,2,2,2]),Int32Array.from([2,2,2,1,2,2]),Int32Array.from([2,2,2,2,2,1]),Int32Array.from([1,2,1,2,2,3]),Int32Array.from([1,2,1,3,2,2]),Int32Array.from([1,3,1,2,2,2]),Int32Array.from([1,2,2,2,1,3]),Int32Array.from([1,2,2,3,1,2]),Int32Array.from([1,3,2,2,1,2]),Int32Array.from([2,2,1,2,1,3]),Int32Array.from([2,2,1,3,1,2]),Int32Array.from([2,3,1,2,1,2]),Int32Array.from([1,1,2,2,3,2]),Int32Array.from([1,2,2,1,3,2]),Int32Array.from([1,2,2,2,3,1]),Int32Array.from([1,1,3,2,2,2]),Int32Array.from([1,2,3,1,2,2]),Int32Array.from([1,2,3,2,2,1]),Int32Array.from([2,2,3,2,1,1]),Int32Array.from([2,2,1,1,3,2]),Int32Array.from([2,2,1,2,3,1]),Int32Array.from([2,1,3,2,1,2]),Int32Array.from([2,2,3,1,1,2]),Int32Array.from([3,1,2,1,3,1]),Int32Array.from([3,1,1,2,2,2]),Int32Array.from([3,2,1,1,2,2]),Int32Array.from([3,2,1,2,2,1]),Int32Array.from([3,1,2,2,1,2]),Int32Array.from([3,2,2,1,1,2]),Int32Array.from([3,2,2,2,1,1]),Int32Array.from([2,1,2,1,2,3]),Int32Array.from([2,1,2,3,2,1]),Int32Array.from([2,3,2,1,2,1]),Int32Array.from([1,1,1,3,2,3]),Int32Array.from([1,3,1,1,2,3]),Int32Array.from([1,3,1,3,2,1]),Int32Array.from([1,1,2,3,1,3]),Int32Array.from([1,3,2,1,1,3]),Int32Array.from([1,3,2,3,1,1]),Int32Array.from([2,1,1,3,1,3]),Int32Array.from([2,3,1,1,1,3]),Int32Array.from([2,3,1,3,1,1]),Int32Array.from([1,1,2,1,3,3]),Int32Array.from([1,1,2,3,3,1]),Int32Array.from([1,3,2,1,3,1]),Int32Array.from([1,1,3,1,2,3]),Int32Array.from([1,1,3,3,2,1]),Int32Array.from([1,3,3,1,2,1]),Int32Array.from([3,1,3,1,2,1]),Int32Array.from([2,1,1,3,3,1]),Int32Array.from([2,3,1,1,3,1]),Int32Array.from([2,1,3,1,1,3]),Int32Array.from([2,1,3,3,1,1]),Int32Array.from([2,1,3,1,3,1]),Int32Array.from([3,1,1,1,2,3]),Int32Array.from([3,1,1,3,2,1]),Int32Array.from([3,3,1,1,2,1]),Int32Array.from([3,1,2,1,1,3]),Int32Array.from([3,1,2,3,1,1]),Int32Array.from([3,3,2,1,1,1]),Int32Array.from([3,1,4,1,1,1]),Int32Array.from([2,2,1,4,1,1]),Int32Array.from([4,3,1,1,1,1]),Int32Array.from([1,1,1,2,2,4]),Int32Array.from([1,1,1,4,2,2]),Int32Array.from([1,2,1,1,2,4]),Int32Array.from([1,2,1,4,2,1]),Int32Array.from([1,4,1,1,2,2]),Int32Array.from([1,4,1,2,2,1]),Int32Array.from([1,1,2,2,1,4]),Int32Array.from([1,1,2,4,1,2]),Int32Array.from([1,2,2,1,1,4]),Int32Array.from([1,2,2,4,1,1]),Int32Array.from([1,4,2,1,1,2]),Int32Array.from([1,4,2,2,1,1]),Int32Array.from([2,4,1,2,1,1]),Int32Array.from([2,2,1,1,1,4]),Int32Array.from([4,1,3,1,1,1]),Int32Array.from([2,4,1,1,1,2]),Int32Array.from([1,3,4,1,1,1]),Int32Array.from([1,1,1,2,4,2]),Int32Array.from([1,2,1,1,4,2]),Int32Array.from([1,2,1,2,4,1]),Int32Array.from([1,1,4,2,1,2]),Int32Array.from([1,2,4,1,1,2]),Int32Array.from([1,2,4,2,1,1]),Int32Array.from([4,1,1,2,1,2]),Int32Array.from([4,2,1,1,1,2]),Int32Array.from([4,2,1,2,1,1]),Int32Array.from([2,1,2,1,4,1]),Int32Array.from([2,1,4,1,2,1]),Int32Array.from([4,1,2,1,2,1]),Int32Array.from([1,1,1,1,4,3]),Int32Array.from([1,1,1,3,4,1]),Int32Array.from([1,3,1,1,4,1]),Int32Array.from([1,1,4,1,1,3]),Int32Array.from([1,1,4,3,1,1]),Int32Array.from([4,1,1,1,1,3]),Int32Array.from([4,1,1,3,1,1]),Int32Array.from([1,1,3,1,4,1]),Int32Array.from([1,1,4,1,3,1]),Int32Array.from([3,1,1,1,4,1]),Int32Array.from([4,1,1,1,3,1]),Int32Array.from([2,1,1,4,1,2]),Int32Array.from([2,1,1,2,1,4]),Int32Array.from([2,1,1,2,3,2]),Int32Array.from([2,3,3,1,1,1,2]),];Code128Reader.MAX_AVG_VARIANCE=0.25;Code128Reader.MAX_INDIVIDUAL_VARIANCE=0.7;Code128Reader.CODE_SHIFT=98;Code128Reader.CODE_CODE_C=99;Code128Reader.CODE_CODE_B=100;Code128Reader.CODE_CODE_A=101;Code128Reader.CODE_FNC_1=102;Code128Reader.CODE_FNC_2=97;Code128Reader.CODE_FNC_3=96;Code128Reader.CODE_FNC_4_A=101;Code128Reader.CODE_FNC_4_B=100;Code128Reader.CODE_START_A=103;Code128Reader.CODE_START_B=104;Code128Reader.CODE_START_C=105;Code128Reader.CODE_STOP=106;class Code39Reader extends OneDReader{constructor(usingCheckDigit=false,extendedMode=false){super();this.usingCheckDigit=usingCheckDigit;this.extendedMode=extendedMode;this.decodeRowResult='';this.counters=new Int32Array(9);}
decodeRow(rowNumber,row,hints){let theCounters=this.counters;theCounters.fill(0);this.decodeRowResult='';let start=Code39Reader.findAsteriskPattern(row,theCounters);let nextStart=row.getNextSet(start[1]);let end=row.getSize();let decodedChar;let lastStart;do{Code39Reader.recordPattern(row,nextStart,theCounters);let pattern=Code39Reader.toNarrowWidePattern(theCounters);if(pattern<0){throw new NotFoundException();}
decodedChar=Code39Reader.patternToChar(pattern);this.decodeRowResult+=decodedChar;lastStart=nextStart;for(let counter of theCounters){nextStart+=counter;}
nextStart=row.getNextSet(nextStart);}while(decodedChar!=='*');this.decodeRowResult=this.decodeRowResult.substring(0,this.decodeRowResult.length-1);let lastPatternSize=0;for(let counter of theCounters){lastPatternSize+=counter;}
let whiteSpaceAfterEnd=nextStart-lastStart-lastPatternSize;if(nextStart!==end&&(whiteSpaceAfterEnd*2)<lastPatternSize){throw new NotFoundException();}
if(this.usingCheckDigit){let max=this.decodeRowResult.length-1;let total=0;for(let i=0;i<max;i++){total+=Code39Reader.ALPHABET_STRING.indexOf(this.decodeRowResult.charAt(i));}
if(this.decodeRowResult.charAt(max)!==Code39Reader.ALPHABET_STRING.charAt(total%43)){throw new ChecksumException();}
this.decodeRowResult=this.decodeRowResult.substring(0,max);}
if(this.decodeRowResult.length===0){throw new NotFoundException();}
let resultString;if(this.extendedMode){resultString=Code39Reader.decodeExtended(this.decodeRowResult);}
else{resultString=this.decodeRowResult;}
let left=(start[1]+start[0])/2.0;let right=lastStart+lastPatternSize/2.0;return new Result(resultString,null,0,[new ResultPoint(left,rowNumber),new ResultPoint(right,rowNumber)],BarcodeFormat$1.CODE_39,new Date().getTime());}
static findAsteriskPattern(row,counters){let width=row.getSize();let rowOffset=row.getNextSet(0);let counterPosition=0;let patternStart=rowOffset;let isWhite=false;let patternLength=counters.length;for(let i=rowOffset;i<width;i++){if(row.get(i)!==isWhite){counters[counterPosition]++;}
else{if(counterPosition===patternLength-1){if(this.toNarrowWidePattern(counters)===Code39Reader.ASTERISK_ENCODING&&row.isRange(Math.max(0,patternStart-Math.floor((i-patternStart)/2)),patternStart,false)){return[patternStart,i];}
patternStart+=counters[0]+counters[1];counters.copyWithin(0,2,2+counterPosition-1);counters[counterPosition-1]=0;counters[counterPosition]=0;counterPosition--;}
else{counterPosition++;}
counters[counterPosition]=1;isWhite=!isWhite;}}
throw new NotFoundException();}
static toNarrowWidePattern(counters){let numCounters=counters.length;let maxNarrowCounter=0;let wideCounters;do{let minCounter=0x7fffffff;for(let counter of counters){if(counter<minCounter&&counter>maxNarrowCounter){minCounter=counter;}}
maxNarrowCounter=minCounter;wideCounters=0;let totalWideCountersWidth=0;let pattern=0;for(let i=0;i<numCounters;i++){let counter=counters[i];if(counter>maxNarrowCounter){pattern|=1<<(numCounters-1-i);wideCounters++;totalWideCountersWidth+=counter;}}
if(wideCounters===3){for(let i=0;i<numCounters&&wideCounters>0;i++){let counter=counters[i];if(counter>maxNarrowCounter){wideCounters--;if((counter*2)>=totalWideCountersWidth){return-1;}}}
return pattern;}}while(wideCounters>3);return-1;}
static patternToChar(pattern){for(let i=0;i<Code39Reader.CHARACTER_ENCODINGS.length;i++){if(Code39Reader.CHARACTER_ENCODINGS[i]===pattern){return Code39Reader.ALPHABET_STRING.charAt(i);}}
if(pattern===Code39Reader.ASTERISK_ENCODING){return'*';}
throw new NotFoundException();}
static decodeExtended(encoded){let length=encoded.length;let decoded='';for(let i=0;i<length;i++){let c=encoded.charAt(i);if(c==='+'||c==='$'||c==='%'||c==='/'){let next=encoded.charAt(i+1);let decodedChar='\0';switch(c){case'+':if(next>='A'&&next<='Z'){decodedChar=String.fromCharCode(next.charCodeAt(0)+32);}
else{throw new FormatException();}
break;case'$':if(next>='A'&&next<='Z'){decodedChar=String.fromCharCode(next.charCodeAt(0)-64);}
else{throw new FormatException();}
break;case'%':if(next>='A'&&next<='E'){decodedChar=String.fromCharCode(next.charCodeAt(0)-38);}
else if(next>='F'&&next<='J'){decodedChar=String.fromCharCode(next.charCodeAt(0)-11);}
else if(next>='K'&&next<='O'){decodedChar=String.fromCharCode(next.charCodeAt(0)+16);}
else if(next>='P'&&next<='T'){decodedChar=String.fromCharCode(next.charCodeAt(0)+43);}
else if(next==='U'){decodedChar='\0';}
else if(next==='V'){decodedChar='@';}
else if(next==='W'){decodedChar='`';}
else if(next==='X'||next==='Y'||next==='Z'){decodedChar='\x7f';}
else{throw new FormatException();}
break;case'/':if(next>='A'&&next<='O'){decodedChar=String.fromCharCode(next.charCodeAt(0)-32);}
else if(next==='Z'){decodedChar=':';}
else{throw new FormatException();}
break;}
decoded+=decodedChar;i++;}
else{decoded+=c;}}
return decoded;}}
Code39Reader.ALPHABET_STRING='0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%';Code39Reader.CHARACTER_ENCODINGS=[0x034,0x121,0x061,0x160,0x031,0x130,0x070,0x025,0x124,0x064,0x109,0x049,0x148,0x019,0x118,0x058,0x00D,0x10C,0x04C,0x01C,0x103,0x043,0x142,0x013,0x112,0x052,0x007,0x106,0x046,0x016,0x181,0x0C1,0x1C0,0x091,0x190,0x0D0,0x085,0x184,0x0C4,0x0A8,0x0A2,0x08A,0x02A];Code39Reader.ASTERISK_ENCODING=0x094;class Code93Reader extends OneDReader{constructor(){super();this.decodeRowResult='';this.counters=new Int32Array(6);}
decodeRow(rowNumber,row,hints){let start=this.findAsteriskPattern(row);let nextStart=row.getNextSet(start[1]);let end=row.getSize();let theCounters=this.counters;theCounters.fill(0);this.decodeRowResult='';let decodedChar;let lastStart;do{Code93Reader.recordPattern(row,nextStart,theCounters);let pattern=this.toPattern(theCounters);if(pattern<0){throw new NotFoundException();}
decodedChar=this.patternToChar(pattern);this.decodeRowResult+=decodedChar;lastStart=nextStart;for(let counter of theCounters){nextStart+=counter;}
nextStart=row.getNextSet(nextStart);}while(decodedChar!=='*');this.decodeRowResult=this.decodeRowResult.substring(0,this.decodeRowResult.length-1);let lastPatternSize=0;for(let counter of theCounters){lastPatternSize+=counter;}
if(nextStart===end||!row.get(nextStart)){throw new NotFoundException();}
if(this.decodeRowResult.length<2){throw new NotFoundException();}
this.checkChecksums(this.decodeRowResult);this.decodeRowResult=this.decodeRowResult.substring(0,this.decodeRowResult.length-2);let resultString=this.decodeExtended(this.decodeRowResult);let left=(start[1]+start[0])/2.0;let right=lastStart+lastPatternSize/2.0;return new Result(resultString,null,0,[new ResultPoint(left,rowNumber),new ResultPoint(right,rowNumber)],BarcodeFormat$1.CODE_93,new Date().getTime());}
findAsteriskPattern(row){let width=row.getSize();let rowOffset=row.getNextSet(0);this.counters.fill(0);let theCounters=this.counters;let patternStart=rowOffset;let isWhite=false;let patternLength=theCounters.length;let counterPosition=0;for(let i=rowOffset;i<width;i++){if(row.get(i)!==isWhite){theCounters[counterPosition]++;}
else{if(counterPosition===patternLength-1){if(this.toPattern(theCounters)===Code93Reader.ASTERISK_ENCODING){return new Int32Array([patternStart,i]);}
patternStart+=theCounters[0]+theCounters[1];theCounters.copyWithin(0,2,2+counterPosition-1);theCounters[counterPosition-1]=0;theCounters[counterPosition]=0;counterPosition--;}
else{counterPosition++;}
theCounters[counterPosition]=1;isWhite=!isWhite;}}
throw new NotFoundException;}
toPattern(counters){let sum=0;for(const counter of counters){sum+=counter;}
let pattern=0;let max=counters.length;for(let i=0;i<max;i++){let scaled=Math.round(counters[i]*9.0/sum);if(scaled<1||scaled>4){return-1;}
if((i&0x01)===0){for(let j=0;j<scaled;j++){pattern=(pattern<<1)|0x01;}}
else{pattern<<=scaled;}}
return pattern;}
patternToChar(pattern){for(let i=0;i<Code93Reader.CHARACTER_ENCODINGS.length;i++){if(Code93Reader.CHARACTER_ENCODINGS[i]===pattern){return Code93Reader.ALPHABET_STRING.charAt(i);}}
throw new NotFoundException();}
decodeExtended(encoded){let length=encoded.length;let decoded='';for(let i=0;i<length;i++){let c=encoded.charAt(i);if(c>='a'&&c<='d'){if(i>=length-1){throw new FormatException();}
let next=encoded.charAt(i+1);let decodedChar='\0';switch(c){case'd':if(next>='A'&&next<='Z'){decodedChar=String.fromCharCode(next.charCodeAt(0)+32);}
else{throw new FormatException();}
break;case'a':if(next>='A'&&next<='Z'){decodedChar=String.fromCharCode(next.charCodeAt(0)-64);}
else{throw new FormatException();}
break;case'b':if(next>='A'&&next<='E'){decodedChar=String.fromCharCode(next.charCodeAt(0)-38);}
else if(next>='F'&&next<='J'){decodedChar=String.fromCharCode(next.charCodeAt(0)-11);}
else if(next>='K'&&next<='O'){decodedChar=String.fromCharCode(next.charCodeAt(0)+16);}
else if(next>='P'&&next<='T'){decodedChar=String.fromCharCode(next.charCodeAt(0)+43);}
else if(next==='U'){decodedChar='\0';}
else if(next==='V'){decodedChar='@';}
else if(next==='W'){decodedChar='`';}
else if(next>='X'&&next<='Z'){decodedChar=String.fromCharCode(127);}
else{throw new FormatException();}
break;case'c':if(next>='A'&&next<='O'){decodedChar=String.fromCharCode(next.charCodeAt(0)-32);}
else if(next==='Z'){decodedChar=':';}
else{throw new FormatException();}
break;}
decoded+=decodedChar;i++;}
else{decoded+=c;}}
return decoded;}
checkChecksums(result){let length=result.length;this.checkOneChecksum(result,length-2,20);this.checkOneChecksum(result,length-1,15);}
checkOneChecksum(result,checkPosition,weightMax){let weight=1;let total=0;for(let i=checkPosition-1;i>=0;i--){total+=weight*Code93Reader.ALPHABET_STRING.indexOf(result.charAt(i));if(++weight>weightMax){weight=1;}}
if(result.charAt(checkPosition)!==Code93Reader.ALPHABET_STRING[total%47]){throw new ChecksumException;}}}
Code93Reader.ALPHABET_STRING="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%abcd*";Code93Reader.CHARACTER_ENCODINGS=[0x114,0x148,0x144,0x142,0x128,0x124,0x122,0x150,0x112,0x10A,0x1A8,0x1A4,0x1A2,0x194,0x192,0x18A,0x168,0x164,0x162,0x134,0x11A,0x158,0x14C,0x146,0x12C,0x116,0x1B4,0x1B2,0x1AC,0x1A6,0x196,0x19A,0x16C,0x166,0x136,0x13A,0x12E,0x1D4,0x1D2,0x1CA,0x16E,0x176,0x1AE,0x126,0x1DA,0x1D6,0x132,0x15E,];Code93Reader.ASTERISK_ENCODING=Code93Reader.CHARACTER_ENCODINGS[47];class ITFReader extends OneDReader{constructor(){super(...arguments);this.narrowLineWidth=-1;}
decodeRow(rowNumber,row,hints){let startRange=this.decodeStart(row);let endRange=this.decodeEnd(row);let result=new StringBuilder();ITFReader.decodeMiddle(row,startRange[1],endRange[0],result);let resultString=result.toString();let allowedLengths=null;if(hints!=null){allowedLengths=hints.get(DecodeHintType$1.ALLOWED_LENGTHS);}
if(allowedLengths==null){allowedLengths=ITFReader.DEFAULT_ALLOWED_LENGTHS;}
let length=resultString.length;let lengthOK=false;let maxAllowedLength=0;for(let value of allowedLengths){if(length===value){lengthOK=true;break;}
if(value>maxAllowedLength){maxAllowedLength=value;}}
if(!lengthOK&&length>maxAllowedLength){lengthOK=true;}
if(!lengthOK){throw new FormatException();}
const points=[new ResultPoint(startRange[1],rowNumber),new ResultPoint(endRange[0],rowNumber)];let resultReturn=new Result(resultString,null,0,points,BarcodeFormat$1.ITF,new Date().getTime());return resultReturn;}
static decodeMiddle(row,payloadStart,payloadEnd,resultString){let counterDigitPair=new Int32Array(10);let counterBlack=new Int32Array(5);let counterWhite=new Int32Array(5);counterDigitPair.fill(0);counterBlack.fill(0);counterWhite.fill(0);while(payloadStart<payloadEnd){OneDReader.recordPattern(row,payloadStart,counterDigitPair);for(let k=0;k<5;k++){let twoK=2*k;counterBlack[k]=counterDigitPair[twoK];counterWhite[k]=counterDigitPair[twoK+1];}
let bestMatch=ITFReader.decodeDigit(counterBlack);resultString.append(bestMatch.toString());bestMatch=this.decodeDigit(counterWhite);resultString.append(bestMatch.toString());counterDigitPair.forEach(function(counterDigit){payloadStart+=counterDigit;});}}
decodeStart(row){let endStart=ITFReader.skipWhiteSpace(row);let startPattern=ITFReader.findGuardPattern(row,endStart,ITFReader.START_PATTERN);this.narrowLineWidth=(startPattern[1]-startPattern[0])/4;this.validateQuietZone(row,startPattern[0]);return startPattern;}
validateQuietZone(row,startPattern){let quietCount=this.narrowLineWidth*10;quietCount=quietCount<startPattern?quietCount:startPattern;for(let i=startPattern-1;quietCount>0&&i>=0;i--){if(row.get(i)){break;}
quietCount--;}
if(quietCount!==0){throw new NotFoundException();}}
static skipWhiteSpace(row){const width=row.getSize();const endStart=row.getNextSet(0);if(endStart===width){throw new NotFoundException();}
return endStart;}
decodeEnd(row){row.reverse();try{let endStart=ITFReader.skipWhiteSpace(row);let endPattern;try{endPattern=ITFReader.findGuardPattern(row,endStart,ITFReader.END_PATTERN_REVERSED[0]);}
catch(error){if(error instanceof NotFoundException){endPattern=ITFReader.findGuardPattern(row,endStart,ITFReader.END_PATTERN_REVERSED[1]);}}
this.validateQuietZone(row,endPattern[0]);let temp=endPattern[0];endPattern[0]=row.getSize()-endPattern[1];endPattern[1]=row.getSize()-temp;return endPattern;}
finally{row.reverse();}}
static findGuardPattern(row,rowOffset,pattern){let patternLength=pattern.length;let counters=new Int32Array(patternLength);let width=row.getSize();let isWhite=false;let counterPosition=0;let patternStart=rowOffset;counters.fill(0);for(let x=rowOffset;x<width;x++){if(row.get(x)!==isWhite){counters[counterPosition]++;}
else{if(counterPosition===patternLength-1){if(OneDReader.patternMatchVariance(counters,pattern,ITFReader.MAX_INDIVIDUAL_VARIANCE)<ITFReader.MAX_AVG_VARIANCE){return[patternStart,x];}
patternStart+=counters[0]+counters[1];System.arraycopy(counters,2,counters,0,counterPosition-1);counters[counterPosition-1]=0;counters[counterPosition]=0;counterPosition--;}
else{counterPosition++;}
counters[counterPosition]=1;isWhite=!isWhite;}}
throw new NotFoundException();}
static decodeDigit(counters){let bestVariance=ITFReader.MAX_AVG_VARIANCE;let bestMatch=-1;let max=ITFReader.PATTERNS.length;for(let i=0;i<max;i++){let pattern=ITFReader.PATTERNS[i];let variance=OneDReader.patternMatchVariance(counters,pattern,ITFReader.MAX_INDIVIDUAL_VARIANCE);if(variance<bestVariance){bestVariance=variance;bestMatch=i;}
else if(variance===bestVariance){bestMatch=-1;}}
if(bestMatch>=0){return bestMatch%10;}
else{throw new NotFoundException();}}}
ITFReader.PATTERNS=[Int32Array.from([1,1,2,2,1]),Int32Array.from([2,1,1,1,2]),Int32Array.from([1,2,1,1,2]),Int32Array.from([2,2,1,1,1]),Int32Array.from([1,1,2,1,2]),Int32Array.from([2,1,2,1,1]),Int32Array.from([1,2,2,1,1]),Int32Array.from([1,1,1,2,2]),Int32Array.from([2,1,1,2,1]),Int32Array.from([1,2,1,2,1]),Int32Array.from([1,1,3,3,1]),Int32Array.from([3,1,1,1,3]),Int32Array.from([1,3,1,1,3]),Int32Array.from([3,3,1,1,1]),Int32Array.from([1,1,3,1,3]),Int32Array.from([3,1,3,1,1]),Int32Array.from([1,3,3,1,1]),Int32Array.from([1,1,1,3,3]),Int32Array.from([3,1,1,3,1]),Int32Array.from([1,3,1,3,1])];ITFReader.MAX_AVG_VARIANCE=0.38;ITFReader.MAX_INDIVIDUAL_VARIANCE=0.5;ITFReader.DEFAULT_ALLOWED_LENGTHS=[6,8,10,12,14];ITFReader.START_PATTERN=Int32Array.from([1,1,1,1]);ITFReader.END_PATTERN_REVERSED=[Int32Array.from([1,1,2]),Int32Array.from([1,1,3])];class AbstractUPCEANReader extends OneDReader{constructor(){super(...arguments);this.decodeRowStringBuffer='';}
static findStartGuardPattern(row){let foundStart=false;let startRange;let nextStart=0;let counters=Int32Array.from([0,0,0]);while(!foundStart){counters=Int32Array.from([0,0,0]);startRange=AbstractUPCEANReader.findGuardPattern(row,nextStart,false,this.START_END_PATTERN,counters);let start=startRange[0];nextStart=startRange[1];let quietStart=start-(nextStart-start);if(quietStart>=0){foundStart=row.isRange(quietStart,start,false);}}
return startRange;}
static checkChecksum(s){return AbstractUPCEANReader.checkStandardUPCEANChecksum(s);}
static checkStandardUPCEANChecksum(s){let length=s.length;if(length===0)
return false;let check=parseInt(s.charAt(length-1),10);return AbstractUPCEANReader.getStandardUPCEANChecksum(s.substring(0,length-1))===check;}
static getStandardUPCEANChecksum(s){let length=s.length;let sum=0;for(let i=length-1;i>=0;i-=2){let digit=s.charAt(i).charCodeAt(0)-'0'.charCodeAt(0);if(digit<0||digit>9){throw new FormatException();}
sum+=digit;}
sum*=3;for(let i=length-2;i>=0;i-=2){let digit=s.charAt(i).charCodeAt(0)-'0'.charCodeAt(0);if(digit<0||digit>9){throw new FormatException();}
sum+=digit;}
return(1000-sum)%10;}
static decodeEnd(row,endStart){return AbstractUPCEANReader.findGuardPattern(row,endStart,false,AbstractUPCEANReader.START_END_PATTERN,new Int32Array(AbstractUPCEANReader.START_END_PATTERN.length).fill(0));}
static findGuardPatternWithoutCounters(row,rowOffset,whiteFirst,pattern){return this.findGuardPattern(row,rowOffset,whiteFirst,pattern,new Int32Array(pattern.length));}
static findGuardPattern(row,rowOffset,whiteFirst,pattern,counters){let width=row.getSize();rowOffset=whiteFirst?row.getNextUnset(rowOffset):row.getNextSet(rowOffset);let counterPosition=0;let patternStart=rowOffset;let patternLength=pattern.length;let isWhite=whiteFirst;for(let x=rowOffset;x<width;x++){if(row.get(x)!==isWhite){counters[counterPosition]++;}
else{if(counterPosition===patternLength-1){if(OneDReader.patternMatchVariance(counters,pattern,AbstractUPCEANReader.MAX_INDIVIDUAL_VARIANCE)<AbstractUPCEANReader.MAX_AVG_VARIANCE){return Int32Array.from([patternStart,x]);}
patternStart+=counters[0]+counters[1];let slice=counters.slice(2,counters.length);for(let i=0;i<counterPosition-1;i++){counters[i]=slice[i];}
counters[counterPosition-1]=0;counters[counterPosition]=0;counterPosition--;}
else{counterPosition++;}
counters[counterPosition]=1;isWhite=!isWhite;}}
throw new NotFoundException();}
static decodeDigit(row,counters,rowOffset,patterns){this.recordPattern(row,rowOffset,counters);let bestVariance=this.MAX_AVG_VARIANCE;let bestMatch=-1;let max=patterns.length;for(let i=0;i<max;i++){let pattern=patterns[i];let variance=OneDReader.patternMatchVariance(counters,pattern,AbstractUPCEANReader.MAX_INDIVIDUAL_VARIANCE);if(variance<bestVariance){bestVariance=variance;bestMatch=i;}}
if(bestMatch>=0){return bestMatch;}
else{throw new NotFoundException();}}}
AbstractUPCEANReader.MAX_AVG_VARIANCE=0.48;AbstractUPCEANReader.MAX_INDIVIDUAL_VARIANCE=0.7;AbstractUPCEANReader.START_END_PATTERN=Int32Array.from([1,1,1]);AbstractUPCEANReader.MIDDLE_PATTERN=Int32Array.from([1,1,1,1,1]);AbstractUPCEANReader.END_PATTERN=Int32Array.from([1,1,1,1,1,1]);AbstractUPCEANReader.L_PATTERNS=[Int32Array.from([3,2,1,1]),Int32Array.from([2,2,2,1]),Int32Array.from([2,1,2,2]),Int32Array.from([1,4,1,1]),Int32Array.from([1,1,3,2]),Int32Array.from([1,2,3,1]),Int32Array.from([1,1,1,4]),Int32Array.from([1,3,1,2]),Int32Array.from([1,2,1,3]),Int32Array.from([3,1,1,2]),];class UPCEANExtension5Support{constructor(){this.CHECK_DIGIT_ENCODINGS=[0x18,0x14,0x12,0x11,0x0C,0x06,0x03,0x0A,0x09,0x05];this.decodeMiddleCounters=Int32Array.from([0,0,0,0]);this.decodeRowStringBuffer='';}
decodeRow(rowNumber,row,extensionStartRange){let result=this.decodeRowStringBuffer;let end=this.decodeMiddle(row,extensionStartRange,result);let resultString=result.toString();let extensionData=UPCEANExtension5Support.parseExtensionString(resultString);let resultPoints=[new ResultPoint((extensionStartRange[0]+extensionStartRange[1])/2.0,rowNumber),new ResultPoint(end,rowNumber)];let extensionResult=new Result(resultString,null,0,resultPoints,BarcodeFormat$1.UPC_EAN_EXTENSION,new Date().getTime());if(extensionData!=null){extensionResult.putAllMetadata(extensionData);}
return extensionResult;}
decodeMiddle(row,startRange,resultString){let counters=this.decodeMiddleCounters;counters[0]=0;counters[1]=0;counters[2]=0;counters[3]=0;let end=row.getSize();let rowOffset=startRange[1];let lgPatternFound=0;for(let x=0;x<5&&rowOffset<end;x++){let bestMatch=AbstractUPCEANReader.decodeDigit(row,counters,rowOffset,AbstractUPCEANReader.L_AND_G_PATTERNS);resultString+=String.fromCharCode(('0'.charCodeAt(0)+bestMatch%10));for(let counter of counters){rowOffset+=counter;}
if(bestMatch>=10){lgPatternFound|=1<<(4-x);}
if(x!==4){rowOffset=row.getNextSet(rowOffset);rowOffset=row.getNextUnset(rowOffset);}}
if(resultString.length!==5){throw new NotFoundException();}
let checkDigit=this.determineCheckDigit(lgPatternFound);if(UPCEANExtension5Support.extensionChecksum(resultString.toString())!==checkDigit){throw new NotFoundException();}
return rowOffset;}
static extensionChecksum(s){let length=s.length;let sum=0;for(let i=length-2;i>=0;i-=2){sum+=s.charAt(i).charCodeAt(0)-'0'.charCodeAt(0);}
sum*=3;for(let i=length-1;i>=0;i-=2){sum+=s.charAt(i).charCodeAt(0)-'0'.charCodeAt(0);}
sum*=3;return sum%10;}
determineCheckDigit(lgPatternFound){for(let d=0;d<10;d++){if(lgPatternFound===this.CHECK_DIGIT_ENCODINGS[d]){return d;}}
throw new NotFoundException();}
static parseExtensionString(raw){if(raw.length!==5){return null;}
let value=UPCEANExtension5Support.parseExtension5String(raw);if(value==null){return null;}
return new Map([[ResultMetadataType$1.SUGGESTED_PRICE,value]]);}
static parseExtension5String(raw){let currency;switch(raw.charAt(0)){case'0':currency='£';break;case'5':currency='$';break;case'9':switch(raw){case'90000':return null;case'99991':return'0.00';case'99990':return'Used';}
currency='';break;default:currency='';break;}
let rawAmount=parseInt(raw.substring(1));let unitsString=(rawAmount/100).toString();let hundredths=rawAmount%100;let hundredthsString=hundredths<10?'0'+hundredths:hundredths.toString();return currency+unitsString+'.'+hundredthsString;}}
class UPCEANExtension2Support{constructor(){this.decodeMiddleCounters=Int32Array.from([0,0,0,0]);this.decodeRowStringBuffer='';}
decodeRow(rowNumber,row,extensionStartRange){let result=this.decodeRowStringBuffer;let end=this.decodeMiddle(row,extensionStartRange,result);let resultString=result.toString();let extensionData=UPCEANExtension2Support.parseExtensionString(resultString);let resultPoints=[new ResultPoint((extensionStartRange[0]+extensionStartRange[1])/2.0,rowNumber),new ResultPoint(end,rowNumber)];let extensionResult=new Result(resultString,null,0,resultPoints,BarcodeFormat$1.UPC_EAN_EXTENSION,new Date().getTime());if(extensionData!=null){extensionResult.putAllMetadata(extensionData);}
return extensionResult;}
decodeMiddle(row,startRange,resultString){let counters=this.decodeMiddleCounters;counters[0]=0;counters[1]=0;counters[2]=0;counters[3]=0;let end=row.getSize();let rowOffset=startRange[1];let checkParity=0;for(let x=0;x<2&&rowOffset<end;x++){let bestMatch=AbstractUPCEANReader.decodeDigit(row,counters,rowOffset,AbstractUPCEANReader.L_AND_G_PATTERNS);resultString+=String.fromCharCode(('0'.charCodeAt(0)+bestMatch%10));for(let counter of counters){rowOffset+=counter;}
if(bestMatch>=10){checkParity|=1<<(1-x);}
if(x!==1){rowOffset=row.getNextSet(rowOffset);rowOffset=row.getNextUnset(rowOffset);}}
if(resultString.length!==2){throw new NotFoundException();}
if(parseInt(resultString.toString())%4!==checkParity){throw new NotFoundException();}
return rowOffset;}
static parseExtensionString(raw){if(raw.length!==2){return null;}
return new Map([[ResultMetadataType$1.ISSUE_NUMBER,parseInt(raw)]]);}}
class UPCEANExtensionSupport{static decodeRow(rowNumber,row,rowOffset){let extensionStartRange=AbstractUPCEANReader.findGuardPattern(row,rowOffset,false,this.EXTENSION_START_PATTERN,new Int32Array(this.EXTENSION_START_PATTERN.length).fill(0));try{let fiveSupport=new UPCEANExtension5Support();return fiveSupport.decodeRow(rowNumber,row,extensionStartRange);}
catch(err){let twoSupport=new UPCEANExtension2Support();return twoSupport.decodeRow(rowNumber,row,extensionStartRange);}}}
UPCEANExtensionSupport.EXTENSION_START_PATTERN=Int32Array.from([1,1,2]);class UPCEANReader extends AbstractUPCEANReader{constructor(){super();this.decodeRowStringBuffer='';UPCEANReader.L_AND_G_PATTERNS=UPCEANReader.L_PATTERNS.map(arr=>Int32Array.from(arr));for(let i=10;i<20;i++){let widths=UPCEANReader.L_PATTERNS[i-10];let reversedWidths=new Int32Array(widths.length);for(let j=0;j<widths.length;j++){reversedWidths[j]=widths[widths.length-j-1];}
UPCEANReader.L_AND_G_PATTERNS[i]=reversedWidths;}}
decodeRow(rowNumber,row,hints){let startGuardRange=UPCEANReader.findStartGuardPattern(row);let resultPointCallback=hints==null?null:hints.get(DecodeHintType$1.NEED_RESULT_POINT_CALLBACK);if(resultPointCallback!=null){const resultPoint=new ResultPoint((startGuardRange[0]+startGuardRange[1])/2.0,rowNumber);resultPointCallback.foundPossibleResultPoint(resultPoint);}
let budello=this.decodeMiddle(row,startGuardRange,this.decodeRowStringBuffer);let endStart=budello.rowOffset;let result=budello.resultString;if(resultPointCallback!=null){const resultPoint=new ResultPoint(endStart,rowNumber);resultPointCallback.foundPossibleResultPoint(resultPoint);}
let endRange=UPCEANReader.decodeEnd(row,endStart);if(resultPointCallback!=null){const resultPoint=new ResultPoint((endRange[0]+endRange[1])/2.0,rowNumber);resultPointCallback.foundPossibleResultPoint(resultPoint);}
let end=endRange[1];let quietEnd=end+(end-endRange[0]);if(quietEnd>=row.getSize()||!row.isRange(end,quietEnd,false)){throw new NotFoundException();}
let resultString=result.toString();if(resultString.length<8){throw new FormatException();}
if(!UPCEANReader.checkChecksum(resultString)){throw new ChecksumException();}
let left=(startGuardRange[1]+startGuardRange[0])/2.0;let right=(endRange[1]+endRange[0])/2.0;let format=this.getBarcodeFormat();let resultPoint=[new ResultPoint(left,rowNumber),new ResultPoint(right,rowNumber)];let decodeResult=new Result(resultString,null,0,resultPoint,format,new Date().getTime());let extensionLength=0;try{let extensionResult=UPCEANExtensionSupport.decodeRow(rowNumber,row,endRange[1]);decodeResult.putMetadata(ResultMetadataType$1.UPC_EAN_EXTENSION,extensionResult.getText());decodeResult.putAllMetadata(extensionResult.getResultMetadata());decodeResult.addResultPoints(extensionResult.getResultPoints());extensionLength=extensionResult.getText().length;}
catch(err){}
let allowedExtensions=hints==null?null:hints.get(DecodeHintType$1.ALLOWED_EAN_EXTENSIONS);if(allowedExtensions!=null){let valid=false;for(let length in allowedExtensions){if(extensionLength.toString()===length){valid=true;break;}}
if(!valid){throw new NotFoundException();}}
if(format===BarcodeFormat$1.EAN_13||format===BarcodeFormat$1.UPC_A);return decodeResult;}
static checkChecksum(s){return UPCEANReader.checkStandardUPCEANChecksum(s);}
static checkStandardUPCEANChecksum(s){let length=s.length;if(length===0)
return false;let check=parseInt(s.charAt(length-1),10);return UPCEANReader.getStandardUPCEANChecksum(s.substring(0,length-1))===check;}
static getStandardUPCEANChecksum(s){let length=s.length;let sum=0;for(let i=length-1;i>=0;i-=2){let digit=s.charAt(i).charCodeAt(0)-'0'.charCodeAt(0);if(digit<0||digit>9){throw new FormatException();}
sum+=digit;}
sum*=3;for(let i=length-2;i>=0;i-=2){let digit=s.charAt(i).charCodeAt(0)-'0'.charCodeAt(0);if(digit<0||digit>9){throw new FormatException();}
sum+=digit;}
return(1000-sum)%10;}
static decodeEnd(row,endStart){return UPCEANReader.findGuardPattern(row,endStart,false,UPCEANReader.START_END_PATTERN,new Int32Array(UPCEANReader.START_END_PATTERN.length).fill(0));}}
class EAN13Reader extends UPCEANReader{constructor(){super();this.decodeMiddleCounters=Int32Array.from([0,0,0,0]);}
decodeMiddle(row,startRange,resultString){let counters=this.decodeMiddleCounters;counters[0]=0;counters[1]=0;counters[2]=0;counters[3]=0;let end=row.getSize();let rowOffset=startRange[1];let lgPatternFound=0;for(let x=0;x<6&&rowOffset<end;x++){let bestMatch=UPCEANReader.decodeDigit(row,counters,rowOffset,UPCEANReader.L_AND_G_PATTERNS);resultString+=String.fromCharCode(('0'.charCodeAt(0)+bestMatch%10));for(let counter of counters){rowOffset+=counter;}
if(bestMatch>=10){lgPatternFound|=1<<(5-x);}}
resultString=EAN13Reader.determineFirstDigit(resultString,lgPatternFound);let middleRange=UPCEANReader.findGuardPattern(row,rowOffset,true,UPCEANReader.MIDDLE_PATTERN,new Int32Array(UPCEANReader.MIDDLE_PATTERN.length).fill(0));rowOffset=middleRange[1];for(let x=0;x<6&&rowOffset<end;x++){let bestMatch=UPCEANReader.decodeDigit(row,counters,rowOffset,UPCEANReader.L_PATTERNS);resultString+=String.fromCharCode(('0'.charCodeAt(0)+bestMatch));for(let counter of counters){rowOffset+=counter;}}
return{rowOffset,resultString};}
getBarcodeFormat(){return BarcodeFormat$1.EAN_13;}
static determineFirstDigit(resultString,lgPatternFound){for(let d=0;d<10;d++){if(lgPatternFound===this.FIRST_DIGIT_ENCODINGS[d]){resultString=String.fromCharCode(('0'.charCodeAt(0)+d))+resultString;return resultString;}}
throw new NotFoundException();}}
EAN13Reader.FIRST_DIGIT_ENCODINGS=[0x00,0x0B,0x0D,0xE,0x13,0x19,0x1C,0x15,0x16,0x1A];class EAN8Reader extends UPCEANReader{constructor(){super();this.decodeMiddleCounters=Int32Array.from([0,0,0,0]);}
decodeMiddle(row,startRange,resultString){const counters=this.decodeMiddleCounters;counters[0]=0;counters[1]=0;counters[2]=0;counters[3]=0;let end=row.getSize();let rowOffset=startRange[1];for(let x=0;x<4&&rowOffset<end;x++){let bestMatch=UPCEANReader.decodeDigit(row,counters,rowOffset,UPCEANReader.L_PATTERNS);resultString+=String.fromCharCode(('0'.charCodeAt(0)+bestMatch));for(let counter of counters){rowOffset+=counter;}}
let middleRange=UPCEANReader.findGuardPattern(row,rowOffset,true,UPCEANReader.MIDDLE_PATTERN,new Int32Array(UPCEANReader.MIDDLE_PATTERN.length).fill(0));rowOffset=middleRange[1];for(let x=0;x<4&&rowOffset<end;x++){let bestMatch=UPCEANReader.decodeDigit(row,counters,rowOffset,UPCEANReader.L_PATTERNS);resultString+=String.fromCharCode(('0'.charCodeAt(0)+bestMatch));for(let counter of counters){rowOffset+=counter;}}
return{rowOffset,resultString};}
getBarcodeFormat(){return BarcodeFormat$1.EAN_8;}}
class UPCAReader extends UPCEANReader{constructor(){super(...arguments);this.ean13Reader=new EAN13Reader();}
getBarcodeFormat(){return BarcodeFormat$1.UPC_A;}
decode(image,hints){return this.maybeReturnResult(this.ean13Reader.decode(image));}
decodeRow(rowNumber,row,hints){return this.maybeReturnResult(this.ean13Reader.decodeRow(rowNumber,row,hints));}
decodeMiddle(row,startRange,resultString){return this.ean13Reader.decodeMiddle(row,startRange,resultString);}
maybeReturnResult(result){let text=result.getText();if(text.charAt(0)==='0'){let upcaResult=new Result(text.substring(1),null,null,result.getResultPoints(),BarcodeFormat$1.UPC_A);if(result.getResultMetadata()!=null){upcaResult.putAllMetadata(result.getResultMetadata());}
return upcaResult;}
else{throw new NotFoundException();}}
reset(){this.ean13Reader.reset();}}
class UPCEReader extends UPCEANReader{constructor(){super();this.decodeMiddleCounters=new Int32Array(4);}
decodeMiddle(row,startRange,result){const counters=this.decodeMiddleCounters.map(x=>x);counters[0]=0;counters[1]=0;counters[2]=0;counters[3]=0;const end=row.getSize();let rowOffset=startRange[1];let lgPatternFound=0;for(let x=0;x<6&&rowOffset<end;x++){const bestMatch=UPCEReader.decodeDigit(row,counters,rowOffset,UPCEReader.L_AND_G_PATTERNS);result+=String.fromCharCode(('0'.charCodeAt(0)+bestMatch%10));for(let counter of counters){rowOffset+=counter;}
if(bestMatch>=10){lgPatternFound|=1<<(5-x);}}
UPCEReader.determineNumSysAndCheckDigit(new StringBuilder(result),lgPatternFound);return rowOffset;}
decodeEnd(row,endStart){return UPCEReader.findGuardPatternWithoutCounters(row,endStart,true,UPCEReader.MIDDLE_END_PATTERN);}
checkChecksum(s){return UPCEANReader.checkChecksum(UPCEReader.convertUPCEtoUPCA(s));}
static determineNumSysAndCheckDigit(resultString,lgPatternFound){for(let numSys=0;numSys<=1;numSys++){for(let d=0;d<10;d++){if(lgPatternFound===this.NUMSYS_AND_CHECK_DIGIT_PATTERNS[numSys][d]){resultString.insert(0,('0'+numSys));resultString.append(('0'+d));return;}}}
throw NotFoundException.getNotFoundInstance();}
getBarcodeFormat(){return BarcodeFormat$1.UPC_E;}
static convertUPCEtoUPCA(upce){const upceChars=upce.slice(1,7).split('').map(x=>x.charCodeAt(0));const result=new StringBuilder();result.append(upce.charAt(0));let lastChar=upceChars[5];switch(lastChar){case 0:case 1:case 2:result.appendChars(upceChars,0,2);result.append(lastChar);result.append('0000');result.appendChars(upceChars,2,3);break;case 3:result.appendChars(upceChars,0,3);result.append('00000');result.appendChars(upceChars,3,2);break;case 4:result.appendChars(upceChars,0,4);result.append('00000');result.append(upceChars[4]);break;default:result.appendChars(upceChars,0,5);result.append('0000');result.append(lastChar);break;}
if(upce.length>=8){result.append(upce.charAt(7));}
return result.toString();}}
UPCEReader.MIDDLE_END_PATTERN=Int32Array.from([1,1,1,1,1,1]);UPCEReader.NUMSYS_AND_CHECK_DIGIT_PATTERNS=[Int32Array.from([0x38,0x34,0x32,0x31,0x2C,0x26,0x23,0x2A,0x29,0x25]),Int32Array.from([0x07,0x0B,0x0D,0x0E,0x13,0x19,0x1C,0x15,0x16,0x1]),];class MultiFormatUPCEANReader extends OneDReader{constructor(hints){super();let possibleFormats=hints==null?null:hints.get(DecodeHintType$1.POSSIBLE_FORMATS);let readers=[];if(possibleFormats!=null){if(possibleFormats.indexOf(BarcodeFormat$1.EAN_13)>-1){readers.push(new EAN13Reader());}
if(possibleFormats.indexOf(BarcodeFormat$1.UPC_A)>-1){readers.push(new UPCAReader());}
if(possibleFormats.indexOf(BarcodeFormat$1.EAN_8)>-1){readers.push(new EAN8Reader());}
if(possibleFormats.indexOf(BarcodeFormat$1.UPC_E)>-1){readers.push(new UPCEReader());}}
if(readers.length===0){readers.push(new EAN13Reader());readers.push(new UPCAReader());readers.push(new EAN8Reader());readers.push(new UPCEReader());}
this.readers=readers;}
decodeRow(rowNumber,row,hints){for(let reader of this.readers){try{const result=reader.decodeRow(rowNumber,row,hints);const ean13MayBeUPCA=result.getBarcodeFormat()===BarcodeFormat$1.EAN_13&&result.getText().charAt(0)==='0';const possibleFormats=hints==null?null:hints.get(DecodeHintType$1.POSSIBLE_FORMATS);const canReturnUPCA=possibleFormats==null||possibleFormats.includes(BarcodeFormat$1.UPC_A);if(ean13MayBeUPCA&&canReturnUPCA){const rawBytes=result.getRawBytes();const resultUPCA=new Result(result.getText().substring(1),rawBytes,(rawBytes?rawBytes.length:null),result.getResultPoints(),BarcodeFormat$1.UPC_A);resultUPCA.putAllMetadata(result.getResultMetadata());return resultUPCA;}
return result;}
catch(err){}}
throw new NotFoundException();}
reset(){for(let reader of this.readers){reader.reset();}}}
class CodaBarReader extends OneDReader{constructor(){super(...arguments);this.CODA_BAR_CHAR_SET={nnnnnww:'0',nnnnwwn:'1',nnnwnnw:'2',wwnnnnn:'3',nnwnnwn:'4',wnnnnwn:'5',nwnnnnw:'6',nwnnwnn:'7',nwwnnnn:'8',wnnwnnn:'9',nnnwwnn:'-',nnwwnnn:'$',wnnnwnw:':',wnwnnnw:'/',wnwnwnn:'.',nnwwwww:'+',nnwwnwn:'A',nwnwnnw:'B',nnnwnww:'C',nnnwwwn:'D'};}
decodeRow(rowNumber,row,hints){let validRowData=this.getValidRowData(row);if(!validRowData)
throw new NotFoundException();let retStr=this.codaBarDecodeRow(validRowData.row);if(!retStr)
throw new NotFoundException();return new Result(retStr,null,0,[new ResultPoint(validRowData.left,rowNumber),new ResultPoint(validRowData.right,rowNumber)],BarcodeFormat$1.CODABAR,new Date().getTime());}
getValidRowData(row){let booleanArr=row.toArray();let startIndex=booleanArr.indexOf(true);if(startIndex===-1)
return null;let lastIndex=booleanArr.lastIndexOf(true);if(lastIndex<=startIndex)
return null;booleanArr=booleanArr.slice(startIndex,lastIndex+1);let result=[];let lastBit=booleanArr[0];let bitLength=1;for(let i=1;i<booleanArr.length;i++){if(booleanArr[i]===lastBit){bitLength++;}
else{lastBit=booleanArr[i];result.push(bitLength);bitLength=1;}}
result.push(bitLength);if(result.length<23&&(result.length+1)%8!==0)
return null;return{row:result,left:startIndex,right:lastIndex};}
codaBarDecodeRow(row){const code=[];const barThreshold=Math.ceil(row.reduce((pre,item)=>(pre+item)/2,0));while(row.length>0){const seg=row.splice(0,8).splice(0,7);const key=seg.map(len=>(len<barThreshold?'n':'w')).join('');if(this.CODA_BAR_CHAR_SET[key]===undefined)
return null;code.push(this.CODA_BAR_CHAR_SET[key]);}
let strCode=code.join('');if(this.validCodaBarString(strCode))
return strCode;return null;}
validCodaBarString(src){let reg=/^[A-D].{1,}[A-D]$/;return reg.test(src);}}
class AbstractRSSReader extends OneDReader{constructor(){super();this.decodeFinderCounters=new Int32Array(4);this.dataCharacterCounters=new Int32Array(8);this.oddRoundingErrors=new Array(4);this.evenRoundingErrors=new Array(4);this.oddCounts=new Array(this.dataCharacterCounters.length/2);this.evenCounts=new Array(this.dataCharacterCounters.length/2);}
getDecodeFinderCounters(){return this.decodeFinderCounters;}
getDataCharacterCounters(){return this.dataCharacterCounters;}
getOddRoundingErrors(){return this.oddRoundingErrors;}
getEvenRoundingErrors(){return this.evenRoundingErrors;}
getOddCounts(){return this.oddCounts;}
getEvenCounts(){return this.evenCounts;}
parseFinderValue(counters,finderPatterns){for(let value=0;value<finderPatterns.length;value++){if(OneDReader.patternMatchVariance(counters,finderPatterns[value],AbstractRSSReader.MAX_INDIVIDUAL_VARIANCE)<AbstractRSSReader.MAX_AVG_VARIANCE){return value;}}
throw new NotFoundException();}
static count(array){return MathUtils.sum(new Int32Array(array));}
static increment(array,errors){let index=0;let biggestError=errors[0];for(let i=1;i<array.length;i++){if(errors[i]>biggestError){biggestError=errors[i];index=i;}}
array[index]++;}
static decrement(array,errors){let index=0;let biggestError=errors[0];for(let i=1;i<array.length;i++){if(errors[i]<biggestError){biggestError=errors[i];index=i;}}
array[index]--;}
static isFinderPattern(counters){let firstTwoSum=counters[0]+counters[1];let sum=firstTwoSum+counters[2]+counters[3];let ratio=firstTwoSum/sum;if(ratio>=AbstractRSSReader.MIN_FINDER_PATTERN_RATIO&&ratio<=AbstractRSSReader.MAX_FINDER_PATTERN_RATIO){let minCounter=Number.MAX_SAFE_INTEGER;let maxCounter=Number.MIN_SAFE_INTEGER;for(let counter of counters){if(counter>maxCounter){maxCounter=counter;}
if(counter<minCounter){minCounter=counter;}}
return maxCounter<10*minCounter;}
return false;}}
AbstractRSSReader.MAX_AVG_VARIANCE=0.2;AbstractRSSReader.MAX_INDIVIDUAL_VARIANCE=0.45;AbstractRSSReader.MIN_FINDER_PATTERN_RATIO=9.5/12.0;AbstractRSSReader.MAX_FINDER_PATTERN_RATIO=12.5/14.0;class DataCharacter{constructor(value,checksumPortion){this.value=value;this.checksumPortion=checksumPortion;}
getValue(){return this.value;}
getChecksumPortion(){return this.checksumPortion;}
toString(){return this.value+'('+this.checksumPortion+')';}
equals(o){if(!(o instanceof DataCharacter)){return false;}
const that=o;return this.value===that.value&&this.checksumPortion===that.checksumPortion;}
hashCode(){return this.value^this.checksumPortion;}}
class FinderPattern{constructor(value,startEnd,start,end,rowNumber){this.value=value;this.startEnd=startEnd;this.value=value;this.startEnd=startEnd;this.resultPoints=new Array();this.resultPoints.push(new ResultPoint(start,rowNumber));this.resultPoints.push(new ResultPoint(end,rowNumber));}
getValue(){return this.value;}
getStartEnd(){return this.startEnd;}
getResultPoints(){return this.resultPoints;}
equals(o){if(!(o instanceof FinderPattern)){return false;}
const that=o;return this.value===that.value;}
hashCode(){return this.value;}}
class RSSUtils{constructor(){}
static getRSSvalue(widths,maxWidth,noNarrow){let n=0;for(let width of widths){n+=width;}
let val=0;let narrowMask=0;let elements=widths.length;for(let bar=0;bar<elements-1;bar++){let elmWidth;for(elmWidth=1,narrowMask|=1<<bar;elmWidth<widths[bar];elmWidth++,narrowMask&=~(1<<bar)){let subVal=RSSUtils.combins(n-elmWidth-1,elements-bar-2);if(noNarrow&&(narrowMask===0)&&(n-elmWidth-(elements-bar-1)>=elements-bar-1)){subVal-=RSSUtils.combins(n-elmWidth-(elements-bar),elements-bar-2);}
if(elements-bar-1>1){let lessVal=0;for(let mxwElement=n-elmWidth-(elements-bar-2);mxwElement>maxWidth;mxwElement--){lessVal+=RSSUtils.combins(n-elmWidth-mxwElement-1,elements-bar-3);}
subVal-=lessVal*(elements-1-bar);}
else if(n-elmWidth>maxWidth){subVal--;}
val+=subVal;}
n-=elmWidth;}
return val;}
static combins(n,r){let maxDenom;let minDenom;if(n-r>r){minDenom=r;maxDenom=n-r;}
else{minDenom=n-r;maxDenom=r;}
let val=1;let j=1;for(let i=n;i>maxDenom;i--){val*=i;if(j<=minDenom){val/=j;j++;}}
while((j<=minDenom)){val/=j;j++;}
return val;}}
class BitArrayBuilder{static buildBitArray(pairs){let charNumber=pairs.length*2-1;if(pairs[pairs.length-1].getRightChar()==null){charNumber-=1;}
let size=12*charNumber;let binary=new BitArray(size);let accPos=0;let firstPair=pairs[0];let firstValue=firstPair.getRightChar().getValue();for(let i=11;i>=0;--i){if((firstValue&(1<<i))!==0){binary.set(accPos);}
accPos++;}
for(let i=1;i<pairs.length;++i){let currentPair=pairs[i];let leftValue=currentPair.getLeftChar().getValue();for(let j=11;j>=0;--j){if((leftValue&(1<<j))!==0){binary.set(accPos);}
accPos++;}
if(currentPair.getRightChar()!==null){let rightValue=currentPair.getRightChar().getValue();for(let j=11;j>=0;--j){if((rightValue&(1<<j))!==0){binary.set(accPos);}
accPos++;}}}
return binary;}}
class BlockParsedResult{constructor(finished,decodedInformation){if(decodedInformation){this.decodedInformation=null;}
else{this.finished=finished;this.decodedInformation=decodedInformation;}}
getDecodedInformation(){return this.decodedInformation;}
isFinished(){return this.finished;}}
class DecodedObject{constructor(newPosition){this.newPosition=newPosition;}
getNewPosition(){return this.newPosition;}}
class DecodedChar extends DecodedObject{constructor(newPosition,value){super(newPosition);this.value=value;}
getValue(){return this.value;}
isFNC1(){return this.value===DecodedChar.FNC1;}}
DecodedChar.FNC1='$';class DecodedInformation extends DecodedObject{constructor(newPosition,newString,remainingValue){super(newPosition);if(remainingValue){this.remaining=true;this.remainingValue=this.remainingValue;}
else{this.remaining=false;this.remainingValue=0;}
this.newString=newString;}
getNewString(){return this.newString;}
isRemaining(){return this.remaining;}
getRemainingValue(){return this.remainingValue;}}
class DecodedNumeric extends DecodedObject{constructor(newPosition,firstDigit,secondDigit){super(newPosition);if(firstDigit<0||firstDigit>10||secondDigit<0||secondDigit>10){throw new FormatException();}
this.firstDigit=firstDigit;this.secondDigit=secondDigit;}
getFirstDigit(){return this.firstDigit;}
getSecondDigit(){return this.secondDigit;}
getValue(){return this.firstDigit*10+this.secondDigit;}
isFirstDigitFNC1(){return this.firstDigit===DecodedNumeric.FNC1;}
isSecondDigitFNC1(){return this.secondDigit===DecodedNumeric.FNC1;}
isAnyFNC1(){return this.firstDigit===DecodedNumeric.FNC1||this.secondDigit===DecodedNumeric.FNC1;}}
DecodedNumeric.FNC1=10;class FieldParser{constructor(){}
static parseFieldsInGeneralPurpose(rawInformation){if(!rawInformation){return null;}
if(rawInformation.length<2){throw new NotFoundException();}
let firstTwoDigits=rawInformation.substring(0,2);for(let dataLength of FieldParser.TWO_DIGIT_DATA_LENGTH){if(dataLength[0]===firstTwoDigits){if(dataLength[1]===FieldParser.VARIABLE_LENGTH){return FieldParser.processVariableAI(2,dataLength[2],rawInformation);}
return FieldParser.processFixedAI(2,dataLength[1],rawInformation);}}
if(rawInformation.length<3){throw new NotFoundException();}
let firstThreeDigits=rawInformation.substring(0,3);for(let dataLength of FieldParser.THREE_DIGIT_DATA_LENGTH){if(dataLength[0]===firstThreeDigits){if(dataLength[1]===FieldParser.VARIABLE_LENGTH){return FieldParser.processVariableAI(3,dataLength[2],rawInformation);}
return FieldParser.processFixedAI(3,dataLength[1],rawInformation);}}
for(let dataLength of FieldParser.THREE_DIGIT_PLUS_DIGIT_DATA_LENGTH){if(dataLength[0]===firstThreeDigits){if(dataLength[1]===FieldParser.VARIABLE_LENGTH){return FieldParser.processVariableAI(4,dataLength[2],rawInformation);}
return FieldParser.processFixedAI(4,dataLength[1],rawInformation);}}
if(rawInformation.length<4){throw new NotFoundException();}
let firstFourDigits=rawInformation.substring(0,4);for(let dataLength of FieldParser.FOUR_DIGIT_DATA_LENGTH){if(dataLength[0]===firstFourDigits){if(dataLength[1]===FieldParser.VARIABLE_LENGTH){return FieldParser.processVariableAI(4,dataLength[2],rawInformation);}
return FieldParser.processFixedAI(4,dataLength[1],rawInformation);}}
throw new NotFoundException();}
static processFixedAI(aiSize,fieldSize,rawInformation){if(rawInformation.length<aiSize){throw new NotFoundException();}
let ai=rawInformation.substring(0,aiSize);if(rawInformation.length<aiSize+fieldSize){throw new NotFoundException();}
let field=rawInformation.substring(aiSize,aiSize+fieldSize);let remaining=rawInformation.substring(aiSize+fieldSize);let result='('+ai+')'+field;let parsedAI=FieldParser.parseFieldsInGeneralPurpose(remaining);return parsedAI==null?result:result+parsedAI;}
static processVariableAI(aiSize,variableFieldSize,rawInformation){let ai=rawInformation.substring(0,aiSize);let maxSize;if(rawInformation.length<aiSize+variableFieldSize){maxSize=rawInformation.length;}
else{maxSize=aiSize+variableFieldSize;}
let field=rawInformation.substring(aiSize,maxSize);let remaining=rawInformation.substring(maxSize);let result='('+ai+')'+field;let parsedAI=FieldParser.parseFieldsInGeneralPurpose(remaining);return parsedAI==null?result:result+parsedAI;}}
FieldParser.VARIABLE_LENGTH=[];FieldParser.TWO_DIGIT_DATA_LENGTH=[['00',18],['01',14],['02',14],['10',FieldParser.VARIABLE_LENGTH,20],['11',6],['12',6],['13',6],['15',6],['17',6],['20',2],['21',FieldParser.VARIABLE_LENGTH,20],['22',FieldParser.VARIABLE_LENGTH,29],['30',FieldParser.VARIABLE_LENGTH,8],['37',FieldParser.VARIABLE_LENGTH,8],['90',FieldParser.VARIABLE_LENGTH,30],['91',FieldParser.VARIABLE_LENGTH,30],['92',FieldParser.VARIABLE_LENGTH,30],['93',FieldParser.VARIABLE_LENGTH,30],['94',FieldParser.VARIABLE_LENGTH,30],['95',FieldParser.VARIABLE_LENGTH,30],['96',FieldParser.VARIABLE_LENGTH,30],['97',FieldParser.VARIABLE_LENGTH,3],['98',FieldParser.VARIABLE_LENGTH,30],['99',FieldParser.VARIABLE_LENGTH,30],];FieldParser.THREE_DIGIT_DATA_LENGTH=[['240',FieldParser.VARIABLE_LENGTH,30],['241',FieldParser.VARIABLE_LENGTH,30],['242',FieldParser.VARIABLE_LENGTH,6],['250',FieldParser.VARIABLE_LENGTH,30],['251',FieldParser.VARIABLE_LENGTH,30],['253',FieldParser.VARIABLE_LENGTH,17],['254',FieldParser.VARIABLE_LENGTH,20],['400',FieldParser.VARIABLE_LENGTH,30],['401',FieldParser.VARIABLE_LENGTH,30],['402',17],['403',FieldParser.VARIABLE_LENGTH,30],['410',13],['411',13],['412',13],['413',13],['414',13],['420',FieldParser.VARIABLE_LENGTH,20],['421',FieldParser.VARIABLE_LENGTH,15],['422',3],['423',FieldParser.VARIABLE_LENGTH,15],['424',3],['425',3],['426',3],];FieldParser.THREE_DIGIT_PLUS_DIGIT_DATA_LENGTH=[['310',6],['311',6],['312',6],['313',6],['314',6],['315',6],['316',6],['320',6],['321',6],['322',6],['323',6],['324',6],['325',6],['326',6],['327',6],['328',6],['329',6],['330',6],['331',6],['332',6],['333',6],['334',6],['335',6],['336',6],['340',6],['341',6],['342',6],['343',6],['344',6],['345',6],['346',6],['347',6],['348',6],['349',6],['350',6],['351',6],['352',6],['353',6],['354',6],['355',6],['356',6],['357',6],['360',6],['361',6],['362',6],['363',6],['364',6],['365',6],['366',6],['367',6],['368',6],['369',6],['390',FieldParser.VARIABLE_LENGTH,15],['391',FieldParser.VARIABLE_LENGTH,18],['392',FieldParser.VARIABLE_LENGTH,15],['393',FieldParser.VARIABLE_LENGTH,18],['703',FieldParser.VARIABLE_LENGTH,30],];FieldParser.FOUR_DIGIT_DATA_LENGTH=[['7001',13],['7002',FieldParser.VARIABLE_LENGTH,30],['7003',10],['8001',14],['8002',FieldParser.VARIABLE_LENGTH,20],['8003',FieldParser.VARIABLE_LENGTH,30],['8004',FieldParser.VARIABLE_LENGTH,30],['8005',6],['8006',18],['8007',FieldParser.VARIABLE_LENGTH,30],['8008',FieldParser.VARIABLE_LENGTH,12],['8018',18],['8020',FieldParser.VARIABLE_LENGTH,25],['8100',6],['8101',10],['8102',2],['8110',FieldParser.VARIABLE_LENGTH,70],['8200',FieldParser.VARIABLE_LENGTH,70],];class GeneralAppIdDecoder{constructor(information){this.buffer=new StringBuilder();this.information=information;}
decodeAllCodes(buff,initialPosition){let currentPosition=initialPosition;let remaining=null;do{let info=this.decodeGeneralPurposeField(currentPosition,remaining);let parsedFields=FieldParser.parseFieldsInGeneralPurpose(info.getNewString());if(parsedFields!=null){buff.append(parsedFields);}
if(info.isRemaining()){remaining=''+info.getRemainingValue();}
else{remaining=null;}
if(currentPosition===info.getNewPosition()){break;}
currentPosition=info.getNewPosition();}while(true);return buff.toString();}
isStillNumeric(pos){if(pos+7>this.information.getSize()){return pos+4<=this.information.getSize();}
for(let i=pos;i<pos+3;++i){if(this.information.get(i)){return true;}}
return this.information.get(pos+3);}
decodeNumeric(pos){if(pos+7>this.information.getSize()){let numeric=this.extractNumericValueFromBitArray(pos,4);if(numeric===0){return new DecodedNumeric(this.information.getSize(),DecodedNumeric.FNC1,DecodedNumeric.FNC1);}
return new DecodedNumeric(this.information.getSize(),numeric-1,DecodedNumeric.FNC1);}
let numeric=this.extractNumericValueFromBitArray(pos,7);let digit1=(numeric-8)/11;let digit2=(numeric-8)%11;return new DecodedNumeric(pos+7,digit1,digit2);}
extractNumericValueFromBitArray(pos,bits){return GeneralAppIdDecoder.extractNumericValueFromBitArray(this.information,pos,bits);}
static extractNumericValueFromBitArray(information,pos,bits){let value=0;for(let i=0;i<bits;++i){if(information.get(pos+i)){value|=1<<(bits-i-1);}}
return value;}
decodeGeneralPurposeField(pos,remaining){this.buffer.setLengthToZero();if(remaining!=null){this.buffer.append(remaining);}
this.current.setPosition(pos);let lastDecoded=this.parseBlocks();if(lastDecoded!=null&&lastDecoded.isRemaining()){return new DecodedInformation(this.current.getPosition(),this.buffer.toString(),lastDecoded.getRemainingValue());}
return new DecodedInformation(this.current.getPosition(),this.buffer.toString());}
parseBlocks(){let isFinished;let result;do{let initialPosition=this.current.getPosition();if(this.current.isAlpha()){result=this.parseAlphaBlock();isFinished=result.isFinished();}
else if(this.current.isIsoIec646()){result=this.parseIsoIec646Block();isFinished=result.isFinished();}
else{result=this.parseNumericBlock();isFinished=result.isFinished();}
let positionChanged=initialPosition!==this.current.getPosition();if(!positionChanged&&!isFinished){break;}}while(!isFinished);return result.getDecodedInformation();}
parseNumericBlock(){while(this.isStillNumeric(this.current.getPosition())){let numeric=this.decodeNumeric(this.current.getPosition());this.current.setPosition(numeric.getNewPosition());if(numeric.isFirstDigitFNC1()){let information;if(numeric.isSecondDigitFNC1()){information=new DecodedInformation(this.current.getPosition(),this.buffer.toString());}
else{information=new DecodedInformation(this.current.getPosition(),this.buffer.toString(),numeric.getSecondDigit());}
return new BlockParsedResult(true,information);}
this.buffer.append(numeric.getFirstDigit());if(numeric.isSecondDigitFNC1()){let information=new DecodedInformation(this.current.getPosition(),this.buffer.toString());return new BlockParsedResult(true,information);}
this.buffer.append(numeric.getSecondDigit());}
if(this.isNumericToAlphaNumericLatch(this.current.getPosition())){this.current.setAlpha();this.current.incrementPosition(4);}
return new BlockParsedResult(false);}
parseIsoIec646Block(){while(this.isStillIsoIec646(this.current.getPosition())){let iso=this.decodeIsoIec646(this.current.getPosition());this.current.setPosition(iso.getNewPosition());if(iso.isFNC1()){let information=new DecodedInformation(this.current.getPosition(),this.buffer.toString());return new BlockParsedResult(true,information);}
this.buffer.append(iso.getValue());}
if(this.isAlphaOr646ToNumericLatch(this.current.getPosition())){this.current.incrementPosition(3);this.current.setNumeric();}
else if(this.isAlphaTo646ToAlphaLatch(this.current.getPosition())){if(this.current.getPosition()+5<this.information.getSize()){this.current.incrementPosition(5);}
else{this.current.setPosition(this.information.getSize());}
this.current.setAlpha();}
return new BlockParsedResult(false);}
parseAlphaBlock(){while(this.isStillAlpha(this.current.getPosition())){let alpha=this.decodeAlphanumeric(this.current.getPosition());this.current.setPosition(alpha.getNewPosition());if(alpha.isFNC1()){let information=new DecodedInformation(this.current.getPosition(),this.buffer.toString());return new BlockParsedResult(true,information);}
this.buffer.append(alpha.getValue());}
if(this.isAlphaOr646ToNumericLatch(this.current.getPosition())){this.current.incrementPosition(3);this.current.setNumeric();}
else if(this.isAlphaTo646ToAlphaLatch(this.current.getPosition())){if(this.current.getPosition()+5<this.information.getSize()){this.current.incrementPosition(5);}
else{this.current.setPosition(this.information.getSize());}
this.current.setIsoIec646();}
return new BlockParsedResult(false);}
isStillIsoIec646(pos){if(pos+5>this.information.getSize()){return false;}
let fiveBitValue=this.extractNumericValueFromBitArray(pos,5);if(fiveBitValue>=5&&fiveBitValue<16){return true;}
if(pos+7>this.information.getSize()){return false;}
let sevenBitValue=this.extractNumericValueFromBitArray(pos,7);if(sevenBitValue>=64&&sevenBitValue<116){return true;}
if(pos+8>this.information.getSize()){return false;}
let eightBitValue=this.extractNumericValueFromBitArray(pos,8);return eightBitValue>=232&&eightBitValue<253;}
decodeIsoIec646(pos){let fiveBitValue=this.extractNumericValueFromBitArray(pos,5);if(fiveBitValue===15){return new DecodedChar(pos+5,DecodedChar.FNC1);}
if(fiveBitValue>=5&&fiveBitValue<15){return new DecodedChar(pos+5,('0'+(fiveBitValue-5)));}
let sevenBitValue=this.extractNumericValueFromBitArray(pos,7);if(sevenBitValue>=64&&sevenBitValue<90){return new DecodedChar(pos+7,(''+(sevenBitValue+1)));}
if(sevenBitValue>=90&&sevenBitValue<116){return new DecodedChar(pos+7,(''+(sevenBitValue+7)));}
let eightBitValue=this.extractNumericValueFromBitArray(pos,8);let c;switch(eightBitValue){case 232:c='!';break;case 233:c='"';break;case 234:c='%';break;case 235:c='&';break;case 236:c='\'';break;case 237:c='(';break;case 238:c=')';break;case 239:c='*';break;case 240:c='+';break;case 241:c=',';break;case 242:c='-';break;case 243:c='.';break;case 244:c='/';break;case 245:c=':';break;case 246:c=';';break;case 247:c='<';break;case 248:c='=';break;case 249:c='>';break;case 250:c='?';break;case 251:c='_';break;case 252:c=' ';break;default:throw new FormatException();}
return new DecodedChar(pos+8,c);}
isStillAlpha(pos){if(pos+5>this.information.getSize()){return false;}
let fiveBitValue=this.extractNumericValueFromBitArray(pos,5);if(fiveBitValue>=5&&fiveBitValue<16){return true;}
if(pos+6>this.information.getSize()){return false;}
let sixBitValue=this.extractNumericValueFromBitArray(pos,6);return sixBitValue>=16&&sixBitValue<63;}
decodeAlphanumeric(pos){let fiveBitValue=this.extractNumericValueFromBitArray(pos,5);if(fiveBitValue===15){return new DecodedChar(pos+5,DecodedChar.FNC1);}
if(fiveBitValue>=5&&fiveBitValue<15){return new DecodedChar(pos+5,('0'+(fiveBitValue-5)));}
let sixBitValue=this.extractNumericValueFromBitArray(pos,6);if(sixBitValue>=32&&sixBitValue<58){return new DecodedChar(pos+6,(''+(sixBitValue+33)));}
let c;switch(sixBitValue){case 58:c='*';break;case 59:c=',';break;case 60:c='-';break;case 61:c='.';break;case 62:c='/';break;default:throw new IllegalStateException('Decoding invalid alphanumeric value: '+sixBitValue);}
return new DecodedChar(pos+6,c);}
isAlphaTo646ToAlphaLatch(pos){if(pos+1>this.information.getSize()){return false;}
for(let i=0;i<5&&i+pos<this.information.getSize();++i){if(i===2){if(!this.information.get(pos+2)){return false;}}
else if(this.information.get(pos+i)){return false;}}
return true;}
isAlphaOr646ToNumericLatch(pos){if(pos+3>this.information.getSize()){return false;}
for(let i=pos;i<pos+3;++i){if(this.information.get(i)){return false;}}
return true;}
isNumericToAlphaNumericLatch(pos){if(pos+1>this.information.getSize()){return false;}
for(let i=0;i<4&&i+pos<this.information.getSize();++i){if(this.information.get(pos+i)){return false;}}
return true;}}
class AbstractExpandedDecoder{constructor(information){this.information=information;this.generalDecoder=new GeneralAppIdDecoder(information);}
getInformation(){return this.information;}
getGeneralDecoder(){return this.generalDecoder;}}
class AI01decoder extends AbstractExpandedDecoder{constructor(information){super(information);}
encodeCompressedGtin(buf,currentPos){buf.append('(01)');let initialPosition=buf.length();buf.append('9');this.encodeCompressedGtinWithoutAI(buf,currentPos,initialPosition);}
encodeCompressedGtinWithoutAI(buf,currentPos,initialBufferPosition){for(let i=0;i<4;++i){let currentBlock=this.getGeneralDecoder().extractNumericValueFromBitArray(currentPos+10*i,10);if(currentBlock/100===0){buf.append('0');}
if(currentBlock/10===0){buf.append('0');}
buf.append(currentBlock);}
AI01decoder.appendCheckDigit(buf,initialBufferPosition);}
static appendCheckDigit(buf,currentPos){let checkDigit=0;for(let i=0;i<13;i++){let digit=buf.charAt(i+currentPos).charCodeAt(0)-'0'.charCodeAt(0);checkDigit+=(i&0x01)===0?3*digit:digit;}
checkDigit=10-(checkDigit%10);if(checkDigit===10){checkDigit=0;}
buf.append(checkDigit);}}
AI01decoder.GTIN_SIZE=40;class AI01AndOtherAIs extends AI01decoder{constructor(information){super(information);}
parseInformation(){let buff=new StringBuilder();buff.append('(01)');let initialGtinPosition=buff.length();let firstGtinDigit=this.getGeneralDecoder().extractNumericValueFromBitArray(AI01AndOtherAIs.HEADER_SIZE,4);buff.append(firstGtinDigit);this.encodeCompressedGtinWithoutAI(buff,AI01AndOtherAIs.HEADER_SIZE+4,initialGtinPosition);return this.getGeneralDecoder().decodeAllCodes(buff,AI01AndOtherAIs.HEADER_SIZE+44);}}
AI01AndOtherAIs.HEADER_SIZE=1+1+2;class AnyAIDecoder extends AbstractExpandedDecoder{constructor(information){super(information);}
parseInformation(){let buf=new StringBuilder();return this.getGeneralDecoder().decodeAllCodes(buf,AnyAIDecoder.HEADER_SIZE);}}
AnyAIDecoder.HEADER_SIZE=2+1+2;class AI01weightDecoder extends AI01decoder{constructor(information){super(information);}
encodeCompressedWeight(buf,currentPos,weightSize){let originalWeightNumeric=this.getGeneralDecoder().extractNumericValueFromBitArray(currentPos,weightSize);this.addWeightCode(buf,originalWeightNumeric);let weightNumeric=this.checkWeight(originalWeightNumeric);let currentDivisor=100000;for(let i=0;i<5;++i){if(weightNumeric/currentDivisor===0){buf.append('0');}
currentDivisor/=10;}
buf.append(weightNumeric);}}
class AI013x0xDecoder extends AI01weightDecoder{constructor(information){super(information);}
parseInformation(){if(this.getInformation().getSize()!==AI013x0xDecoder.HEADER_SIZE+
AI01weightDecoder.GTIN_SIZE+
AI013x0xDecoder.WEIGHT_SIZE){throw new NotFoundException();}
let buf=new StringBuilder();this.encodeCompressedGtin(buf,AI013x0xDecoder.HEADER_SIZE);this.encodeCompressedWeight(buf,AI013x0xDecoder.HEADER_SIZE+AI01weightDecoder.GTIN_SIZE,AI013x0xDecoder.WEIGHT_SIZE);return buf.toString();}}
AI013x0xDecoder.HEADER_SIZE=4+1;AI013x0xDecoder.WEIGHT_SIZE=15;class AI013103decoder extends AI013x0xDecoder{constructor(information){super(information);}
addWeightCode(buf,weight){buf.append('(3103)');}
checkWeight(weight){return weight;}}
class AI01320xDecoder extends AI013x0xDecoder{constructor(information){super(information);}
addWeightCode(buf,weight){if(weight<10000){buf.append('(3202)');}
else{buf.append('(3203)');}}
checkWeight(weight){if(weight<10000){return weight;}
return weight-10000;}}
class AI01392xDecoder extends AI01decoder{constructor(information){super(information);}
parseInformation(){if(this.getInformation().getSize()<AI01392xDecoder.HEADER_SIZE+AI01decoder.GTIN_SIZE){throw new NotFoundException();}
let buf=new StringBuilder();this.encodeCompressedGtin(buf,AI01392xDecoder.HEADER_SIZE);let lastAIdigit=this.getGeneralDecoder().extractNumericValueFromBitArray(AI01392xDecoder.HEADER_SIZE+AI01decoder.GTIN_SIZE,AI01392xDecoder.LAST_DIGIT_SIZE);buf.append('(392');buf.append(lastAIdigit);buf.append(')');let decodedInformation=this.getGeneralDecoder().decodeGeneralPurposeField(AI01392xDecoder.HEADER_SIZE+AI01decoder.GTIN_SIZE+AI01392xDecoder.LAST_DIGIT_SIZE,null);buf.append(decodedInformation.getNewString());return buf.toString();}}
AI01392xDecoder.HEADER_SIZE=5+1+2;AI01392xDecoder.LAST_DIGIT_SIZE=2;class AI01393xDecoder extends AI01decoder{constructor(information){super(information);}
parseInformation(){if(this.getInformation().getSize()<AI01393xDecoder.HEADER_SIZE+AI01decoder.GTIN_SIZE){throw new NotFoundException();}
let buf=new StringBuilder();this.encodeCompressedGtin(buf,AI01393xDecoder.HEADER_SIZE);let lastAIdigit=this.getGeneralDecoder().extractNumericValueFromBitArray(AI01393xDecoder.HEADER_SIZE+AI01decoder.GTIN_SIZE,AI01393xDecoder.LAST_DIGIT_SIZE);buf.append('(393');buf.append(lastAIdigit);buf.append(')');let firstThreeDigits=this.getGeneralDecoder().extractNumericValueFromBitArray(AI01393xDecoder.HEADER_SIZE+
AI01decoder.GTIN_SIZE+
AI01393xDecoder.LAST_DIGIT_SIZE,AI01393xDecoder.FIRST_THREE_DIGITS_SIZE);if(firstThreeDigits/100===0){buf.append('0');}
if(firstThreeDigits/10===0){buf.append('0');}
buf.append(firstThreeDigits);let generalInformation=this.getGeneralDecoder().decodeGeneralPurposeField(AI01393xDecoder.HEADER_SIZE+
AI01decoder.GTIN_SIZE+
AI01393xDecoder.LAST_DIGIT_SIZE+
AI01393xDecoder.FIRST_THREE_DIGITS_SIZE,null);buf.append(generalInformation.getNewString());return buf.toString();}}
AI01393xDecoder.HEADER_SIZE=5+1+2;AI01393xDecoder.LAST_DIGIT_SIZE=2;AI01393xDecoder.FIRST_THREE_DIGITS_SIZE=10;class AI013x0x1xDecoder extends AI01weightDecoder{constructor(information,firstAIdigits,dateCode){super(information);this.dateCode=dateCode;this.firstAIdigits=firstAIdigits;}
parseInformation(){if(this.getInformation().getSize()!==AI013x0x1xDecoder.HEADER_SIZE+
AI013x0x1xDecoder.GTIN_SIZE+
AI013x0x1xDecoder.WEIGHT_SIZE+
AI013x0x1xDecoder.DATE_SIZE){throw new NotFoundException();}
let buf=new StringBuilder();this.encodeCompressedGtin(buf,AI013x0x1xDecoder.HEADER_SIZE);this.encodeCompressedWeight(buf,AI013x0x1xDecoder.HEADER_SIZE+AI013x0x1xDecoder.GTIN_SIZE,AI013x0x1xDecoder.WEIGHT_SIZE);this.encodeCompressedDate(buf,AI013x0x1xDecoder.HEADER_SIZE+
AI013x0x1xDecoder.GTIN_SIZE+
AI013x0x1xDecoder.WEIGHT_SIZE);return buf.toString();}
encodeCompressedDate(buf,currentPos){let numericDate=this.getGeneralDecoder().extractNumericValueFromBitArray(currentPos,AI013x0x1xDecoder.DATE_SIZE);if(numericDate===38400){return;}
buf.append('(');buf.append(this.dateCode);buf.append(')');let day=numericDate%32;numericDate/=32;let month=(numericDate%12)+1;numericDate/=12;let year=numericDate;if(year/10===0){buf.append('0');}
buf.append(year);if(month/10===0){buf.append('0');}
buf.append(month);if(day/10===0){buf.append('0');}
buf.append(day);}
addWeightCode(buf,weight){buf.append('(');buf.append(this.firstAIdigits);buf.append(weight/100000);buf.append(')');}
checkWeight(weight){return weight%100000;}}
AI013x0x1xDecoder.HEADER_SIZE=7+1;AI013x0x1xDecoder.WEIGHT_SIZE=20;AI013x0x1xDecoder.DATE_SIZE=16;function createDecoder(information){try{if(information.get(1)){return new AI01AndOtherAIs(information);}
if(!information.get(2)){return new AnyAIDecoder(information);}
let fourBitEncodationMethod=GeneralAppIdDecoder.extractNumericValueFromBitArray(information,1,4);switch(fourBitEncodationMethod){case 4:return new AI013103decoder(information);case 5:return new AI01320xDecoder(information);}
let fiveBitEncodationMethod=GeneralAppIdDecoder.extractNumericValueFromBitArray(information,1,5);switch(fiveBitEncodationMethod){case 12:return new AI01392xDecoder(information);case 13:return new AI01393xDecoder(information);}
let sevenBitEncodationMethod=GeneralAppIdDecoder.extractNumericValueFromBitArray(information,1,7);switch(sevenBitEncodationMethod){case 56:return new AI013x0x1xDecoder(information,'310','11');case 57:return new AI013x0x1xDecoder(information,'320','11');case 58:return new AI013x0x1xDecoder(information,'310','13');case 59:return new AI013x0x1xDecoder(information,'320','13');case 60:return new AI013x0x1xDecoder(information,'310','15');case 61:return new AI013x0x1xDecoder(information,'320','15');case 62:return new AI013x0x1xDecoder(information,'310','17');case 63:return new AI013x0x1xDecoder(information,'320','17');}}
catch(e){console.log(e);throw new IllegalStateException('unknown decoder: '+information);}}
class ExpandedPair{constructor(leftChar,rightChar,finderPatter,mayBeLast){this.leftchar=leftChar;this.rightchar=rightChar;this.finderpattern=finderPatter;this.maybeLast=mayBeLast;}
mayBeLast(){return this.maybeLast;}
getLeftChar(){return this.leftchar;}
getRightChar(){return this.rightchar;}
getFinderPattern(){return this.finderpattern;}
mustBeLast(){return this.rightchar==null;}
toString(){return'[ '+this.leftchar+', '+this.rightchar+' : '+(this.finderpattern==null?'null':this.finderpattern.getValue())+' ]';}
static equals(o1,o2){if(!(o1 instanceof ExpandedPair)){return false;}
return ExpandedPair.equalsOrNull(o1.leftchar,o2.leftchar)&&ExpandedPair.equalsOrNull(o1.rightchar,o2.rightchar)&&ExpandedPair.equalsOrNull(o1.finderpattern,o2.finderpattern);}
static equalsOrNull(o1,o2){return o1===null?o2===null:ExpandedPair.equals(o1,o2);}
hashCode(){let value=this.leftchar.getValue()^this.rightchar.getValue()^this.finderpattern.getValue();return value;}}
class ExpandedRow{constructor(pairs,rowNumber,wasReversed){this.pairs=pairs;this.rowNumber=rowNumber;this.wasReversed=wasReversed;}
getPairs(){return this.pairs;}
getRowNumber(){return this.rowNumber;}
isReversed(){return this.wasReversed;}
isEquivalent(otherPairs){return this.checkEqualitity(this,otherPairs);}
toString(){return'{ '+this.pairs+' }';}
equals(o1,o2){if(!(o1 instanceof ExpandedRow)){return false;}
return this.checkEqualitity(o1,o2)&&o1.wasReversed===o2.wasReversed;}
checkEqualitity(pair1,pair2){if(!pair1||!pair2)
return;let result;pair1.forEach((e1,i)=>{pair2.forEach(e2=>{if(e1.getLeftChar().getValue()===e2.getLeftChar().getValue()&&e1.getRightChar().getValue()===e2.getRightChar().getValue()&&e1.getFinderPatter().getValue()===e2.getFinderPatter().getValue()){result=true;}});});return result;}}
class RSSExpandedReader extends AbstractRSSReader{constructor(){super(...arguments);this.pairs=new Array(RSSExpandedReader.MAX_PAIRS);this.rows=new Array();this.startEnd=[2];}
decodeRow(rowNumber,row,hints){this.pairs.length=0;this.startFromEven=false;try{return RSSExpandedReader.constructResult(this.decodeRow2pairs(rowNumber,row));}
catch(e){}
this.pairs.length=0;this.startFromEven=true;return RSSExpandedReader.constructResult(this.decodeRow2pairs(rowNumber,row));}
reset(){this.pairs.length=0;this.rows.length=0;}
decodeRow2pairs(rowNumber,row){let done=false;while(!done){try{this.pairs.push(this.retrieveNextPair(row,this.pairs,rowNumber));}
catch(error){if(error instanceof NotFoundException){if(!this.pairs.length){throw new NotFoundException();}
done=true;}}}
if(this.checkChecksum()){return this.pairs;}
let tryStackedDecode;if(this.rows.length){tryStackedDecode=true;}
else{tryStackedDecode=false;}
this.storeRow(rowNumber,false);if(tryStackedDecode){let ps=this.checkRowsBoolean(false);if(ps!=null){return ps;}
ps=this.checkRowsBoolean(true);if(ps!=null){return ps;}}
throw new NotFoundException();}
checkRowsBoolean(reverse){if(this.rows.length>25){this.rows.length=0;return null;}
this.pairs.length=0;if(reverse){this.rows=this.rows.reverse();}
let ps=null;try{ps=this.checkRows(new Array(),0);}
catch(e){console.log(e);}
if(reverse){this.rows=this.rows.reverse();}
return ps;}
checkRows(collectedRows,currentRow){for(let i=currentRow;i<this.rows.length;i++){let row=this.rows[i];this.pairs.length=0;for(let collectedRow of collectedRows){this.pairs.push(collectedRow.getPairs());}
this.pairs.push(row.getPairs());if(!RSSExpandedReader.isValidSequence(this.pairs)){continue;}
if(this.checkChecksum()){return this.pairs;}
let rs=new Array(collectedRows);rs.push(row);try{return this.checkRows(rs,i+1);}
catch(e){console.log(e);}}
throw new NotFoundException();}
static isValidSequence(pairs){for(let sequence of RSSExpandedReader.FINDER_PATTERN_SEQUENCES){if(pairs.length>sequence.length){continue;}
let stop=true;for(let j=0;j<pairs.length;j++){if(pairs[j].getFinderPattern().getValue()!==sequence[j]){stop=false;break;}}
if(stop){return true;}}
return false;}
storeRow(rowNumber,wasReversed){let insertPos=0;let prevIsSame=false;let nextIsSame=false;while(insertPos<this.rows.length){let erow=this.rows[insertPos];if(erow.getRowNumber()>rowNumber){nextIsSame=erow.isEquivalent(this.pairs);break;}
prevIsSame=erow.isEquivalent(this.pairs);insertPos++;}
if(nextIsSame||prevIsSame){return;}
if(RSSExpandedReader.isPartialRow(this.pairs,this.rows)){return;}
this.rows.push(insertPos,new ExpandedRow(this.pairs,rowNumber,wasReversed));this.removePartialRows(this.pairs,this.rows);}
removePartialRows(pairs,rows){for(let row of rows){if(row.getPairs().length===pairs.length){continue;}
for(let p of row.getPairs()){for(let pp of pairs){if(ExpandedPair.equals(p,pp)){break;}}}}}
static isPartialRow(pairs,rows){for(let r of rows){let allFound=true;for(let p of pairs){let found=false;for(let pp of r.getPairs()){if(p.equals(pp)){found=true;break;}}
if(!found){allFound=false;break;}}
if(allFound){return true;}}
return false;}
getRows(){return this.rows;}
static constructResult(pairs){let binary=BitArrayBuilder.buildBitArray(pairs);let decoder=createDecoder(binary);let resultingString=decoder.parseInformation();let firstPoints=pairs[0].getFinderPattern().getResultPoints();let lastPoints=pairs[pairs.length-1].getFinderPattern().getResultPoints();let points=[firstPoints[0],firstPoints[1],lastPoints[0],lastPoints[1]];return new Result(resultingString,null,null,points,BarcodeFormat$1.RSS_EXPANDED,null);}
checkChecksum(){let firstPair=this.pairs.get(0);let checkCharacter=firstPair.getLeftChar();let firstCharacter=firstPair.getRightChar();if(firstCharacter===null){return false;}
let checksum=firstCharacter.getChecksumPortion();let s=2;for(let i=1;i<this.pairs.size();++i){let currentPair=this.pairs.get(i);checksum+=currentPair.getLeftChar().getChecksumPortion();s++;let currentRightChar=currentPair.getRightChar();if(currentRightChar!=null){checksum+=currentRightChar.getChecksumPortion();s++;}}
checksum%=211;let checkCharacterValue=211*(s-4)+checksum;return checkCharacterValue===checkCharacter.getValue();}
static getNextSecondBar(row,initialPos){let currentPos;if(row.get(initialPos)){currentPos=row.getNextUnset(initialPos);currentPos=row.getNextSet(currentPos);}
else{currentPos=row.getNextSet(initialPos);currentPos=row.getNextUnset(currentPos);}
return currentPos;}
retrieveNextPair(row,previousPairs,rowNumber){let isOddPattern=previousPairs.length%2===0;if(this.startFromEven){isOddPattern=!isOddPattern;}
let pattern;let keepFinding=true;let forcedOffset=-1;do{this.findNextPair(row,previousPairs,forcedOffset);pattern=this.parseFoundFinderPattern(row,rowNumber,isOddPattern);if(pattern===null){forcedOffset=RSSExpandedReader.getNextSecondBar(row,this.startEnd[0]);}
else{keepFinding=false;}}while(keepFinding);let leftChar=this.decodeDataCharacter(row,pattern,isOddPattern,true);if(!this.isEmptyPair(previousPairs)&&previousPairs[previousPairs.length-1].mustBeLast()){throw new NotFoundException();}
let rightChar;try{rightChar=this.decodeDataCharacter(row,pattern,isOddPattern,false);}
catch(e){rightChar=null;console.log(e);}
return new ExpandedPair(leftChar,rightChar,pattern,true);}
isEmptyPair(pairs){if(pairs.length===0){return true;}
return false;}
findNextPair(row,previousPairs,forcedOffset){let counters=this.getDecodeFinderCounters();counters[0]=0;counters[1]=0;counters[2]=0;counters[3]=0;let width=row.getSize();let rowOffset;if(forcedOffset>=0){rowOffset=forcedOffset;}
else if(this.isEmptyPair(previousPairs)){rowOffset=0;}
else{let lastPair=previousPairs[previousPairs.length-1];rowOffset=lastPair.getFinderPattern().getStartEnd()[1];}
let searchingEvenPair=previousPairs.length%2!==0;if(this.startFromEven){searchingEvenPair=!searchingEvenPair;}
let isWhite=false;while(rowOffset<width){isWhite=!row.get(rowOffset);if(!isWhite){break;}
rowOffset++;}
let counterPosition=0;let patternStart=rowOffset;for(let x=rowOffset;x<width;x++){if(row.get(x)!==isWhite){counters[counterPosition]++;}
else{if(counterPosition===3){if(searchingEvenPair){RSSExpandedReader.reverseCounters(counters);}
if(RSSExpandedReader.isFinderPattern(counters)){this.startEnd[0]=patternStart;this.startEnd[1]=x;return;}
if(searchingEvenPair){RSSExpandedReader.reverseCounters(counters);}
patternStart+=counters[0]+counters[1];counters[0]=counters[2];counters[1]=counters[3];counters[2]=0;counters[3]=0;counterPosition--;}
else{counterPosition++;}
counters[counterPosition]=1;isWhite=!isWhite;}}
throw new NotFoundException();}
static reverseCounters(counters){let length=counters.length;for(let i=0;i<length/2;++i){let tmp=counters[i];counters[i]=counters[length-i-1];counters[length-i-1]=tmp;}}
parseFoundFinderPattern(row,rowNumber,oddPattern){let firstCounter;let start;let end;if(oddPattern){let firstElementStart=this.startEnd[0]-1;while(firstElementStart>=0&&!row.get(firstElementStart)){firstElementStart--;}
firstElementStart++;firstCounter=this.startEnd[0]-firstElementStart;start=firstElementStart;end=this.startEnd[1];}
else{start=this.startEnd[0];end=row.getNextUnset(this.startEnd[1]+1);firstCounter=end-this.startEnd[1];}
let counters=this.getDecodeFinderCounters();System.arraycopy(counters,0,counters,1,counters.length-1);counters[0]=firstCounter;let value;try{value=this.parseFinderValue(counters,RSSExpandedReader.FINDER_PATTERNS);}
catch(e){return null;}
return new FinderPattern(value,[start,end],start,end,rowNumber);}
decodeDataCharacter(row,pattern,isOddPattern,leftChar){let counters=this.getDataCharacterCounters();for(let x=0;x<counters.length;x++){counters[x]=0;}
if(leftChar){RSSExpandedReader.recordPatternInReverse(row,pattern.getStartEnd()[0],counters);}
else{RSSExpandedReader.recordPattern(row,pattern.getStartEnd()[1],counters);for(let i=0,j=counters.length-1;i<j;i++,j--){let temp=counters[i];counters[i]=counters[j];counters[j]=temp;}}
let numModules=17;let elementWidth=MathUtils.sum(new Int32Array(counters))/numModules;let expectedElementWidth=(pattern.getStartEnd()[1]-pattern.getStartEnd()[0])/15.0;if(Math.abs(elementWidth-expectedElementWidth)/expectedElementWidth>0.3){throw new NotFoundException();}
let oddCounts=this.getOddCounts();let evenCounts=this.getEvenCounts();let oddRoundingErrors=this.getOddRoundingErrors();let evenRoundingErrors=this.getEvenRoundingErrors();for(let i=0;i<counters.length;i++){let value=(1.0*counters[i])/elementWidth;let count=value+0.5;if(count<1){if(value<0.3){throw new NotFoundException();}
count=1;}
else if(count>8){if(value>8.7){throw new NotFoundException();}
count=8;}
let offset=i/2;if((i&0x01)===0){oddCounts[offset]=count;oddRoundingErrors[offset]=value-count;}
else{evenCounts[offset]=count;evenRoundingErrors[offset]=value-count;}}
this.adjustOddEvenCounts(numModules);let weightRowNumber=4*pattern.getValue()+(isOddPattern?0:2)+(leftChar?0:1)-1;let oddSum=0;let oddChecksumPortion=0;for(let i=oddCounts.length-1;i>=0;i--){if(RSSExpandedReader.isNotA1left(pattern,isOddPattern,leftChar)){let weight=RSSExpandedReader.WEIGHTS[weightRowNumber][2*i];oddChecksumPortion+=oddCounts[i]*weight;}
oddSum+=oddCounts[i];}
let evenChecksumPortion=0;for(let i=evenCounts.length-1;i>=0;i--){if(RSSExpandedReader.isNotA1left(pattern,isOddPattern,leftChar)){let weight=RSSExpandedReader.WEIGHTS[weightRowNumber][2*i+1];evenChecksumPortion+=evenCounts[i]*weight;}}
let checksumPortion=oddChecksumPortion+evenChecksumPortion;if((oddSum&0x01)!==0||oddSum>13||oddSum<4){throw new NotFoundException();}
let group=(13-oddSum)/2;let oddWidest=RSSExpandedReader.SYMBOL_WIDEST[group];let evenWidest=9-oddWidest;let vOdd=RSSUtils.getRSSvalue(oddCounts,oddWidest,true);let vEven=RSSUtils.getRSSvalue(evenCounts,evenWidest,false);let tEven=RSSExpandedReader.EVEN_TOTAL_SUBSET[group];let gSum=RSSExpandedReader.GSUM[group];let value=vOdd*tEven+vEven+gSum;return new DataCharacter(value,checksumPortion);}
static isNotA1left(pattern,isOddPattern,leftChar){return!(pattern.getValue()===0&&isOddPattern&&leftChar);}
adjustOddEvenCounts(numModules){let oddSum=MathUtils.sum(new Int32Array(this.getOddCounts()));let evenSum=MathUtils.sum(new Int32Array(this.getEvenCounts()));let incrementOdd=false;let decrementOdd=false;if(oddSum>13){decrementOdd=true;}
else if(oddSum<4){incrementOdd=true;}
let incrementEven=false;let decrementEven=false;if(evenSum>13){decrementEven=true;}
else if(evenSum<4){incrementEven=true;}
let mismatch=oddSum+evenSum-numModules;let oddParityBad=(oddSum&0x01)===1;let evenParityBad=(evenSum&0x01)===0;if(mismatch===1){if(oddParityBad){if(evenParityBad){throw new NotFoundException();}
decrementOdd=true;}
else{if(!evenParityBad){throw new NotFoundException();}
decrementEven=true;}}
else if(mismatch===-1){if(oddParityBad){if(evenParityBad){throw new NotFoundException();}
incrementOdd=true;}
else{if(!evenParityBad){throw new NotFoundException();}
incrementEven=true;}}
else if(mismatch===0){if(oddParityBad){if(!evenParityBad){throw new NotFoundException();}
if(oddSum<evenSum){incrementOdd=true;decrementEven=true;}
else{decrementOdd=true;incrementEven=true;}}
else{if(evenParityBad){throw new NotFoundException();}}}
else{throw new NotFoundException();}
if(incrementOdd){if(decrementOdd){throw new NotFoundException();}
RSSExpandedReader.increment(this.getOddCounts(),this.getOddRoundingErrors());}
if(decrementOdd){RSSExpandedReader.decrement(this.getOddCounts(),this.getOddRoundingErrors());}
if(incrementEven){if(decrementEven){throw new NotFoundException();}
RSSExpandedReader.increment(this.getEvenCounts(),this.getOddRoundingErrors());}
if(decrementEven){RSSExpandedReader.decrement(this.getEvenCounts(),this.getEvenRoundingErrors());}}}
RSSExpandedReader.SYMBOL_WIDEST=[7,5,4,3,1];RSSExpandedReader.EVEN_TOTAL_SUBSET=[4,20,52,104,204];RSSExpandedReader.GSUM=[0,348,1388,2948,3988];RSSExpandedReader.FINDER_PATTERNS=[Int32Array.from([1,8,4,1]),Int32Array.from([3,6,4,1]),Int32Array.from([3,4,6,1]),Int32Array.from([3,2,8,1]),Int32Array.from([2,6,5,1]),Int32Array.from([2,2,9,1]),];RSSExpandedReader.WEIGHTS=[[1,3,9,27,81,32,96,77],[20,60,180,118,143,7,21,63],[189,145,13,39,117,140,209,205],[193,157,49,147,19,57,171,91],[62,186,136,197,169,85,44,132],[185,133,188,142,4,12,36,108],[113,128,173,97,80,29,87,50],[150,28,84,41,123,158,52,156],[46,138,203,187,139,206,196,166],[76,17,51,153,37,111,122,155],[43,129,176,106,107,110,119,146],[16,48,144,10,30,90,59,177],[109,116,137,200,178,112,125,164],[70,210,208,202,184,130,179,115],[134,191,151,31,93,68,204,190],[148,22,66,198,172,94,71,2],[6,18,54,162,64,192,154,40],[120,149,25,75,14,42,126,167],[79,26,78,23,69,207,199,175],[103,98,83,38,114,131,182,124],[161,61,183,127,170,88,53,159],[55,165,73,8,24,72,5,15],[45,135,194,160,58,174,100,89],];RSSExpandedReader.FINDER_PAT_A=0;RSSExpandedReader.FINDER_PAT_B=1;RSSExpandedReader.FINDER_PAT_C=2;RSSExpandedReader.FINDER_PAT_D=3;RSSExpandedReader.FINDER_PAT_E=4;RSSExpandedReader.FINDER_PAT_F=5;RSSExpandedReader.FINDER_PATTERN_SEQUENCES=[[RSSExpandedReader.FINDER_PAT_A,RSSExpandedReader.FINDER_PAT_A],[RSSExpandedReader.FINDER_PAT_A,RSSExpandedReader.FINDER_PAT_B,RSSExpandedReader.FINDER_PAT_B,],[RSSExpandedReader.FINDER_PAT_A,RSSExpandedReader.FINDER_PAT_C,RSSExpandedReader.FINDER_PAT_B,RSSExpandedReader.FINDER_PAT_D,],[RSSExpandedReader.FINDER_PAT_A,RSSExpandedReader.FINDER_PAT_E,RSSExpandedReader.FINDER_PAT_B,RSSExpandedReader.FINDER_PAT_D,RSSExpandedReader.FINDER_PAT_C,],[RSSExpandedReader.FINDER_PAT_A,RSSExpandedReader.FINDER_PAT_E,RSSExpandedReader.FINDER_PAT_B,RSSExpandedReader.FINDER_PAT_D,RSSExpandedReader.FINDER_PAT_D,RSSExpandedReader.FINDER_PAT_F,],[RSSExpandedReader.FINDER_PAT_A,RSSExpandedReader.FINDER_PAT_E,RSSExpandedReader.FINDER_PAT_B,RSSExpandedReader.FINDER_PAT_D,RSSExpandedReader.FINDER_PAT_E,RSSExpandedReader.FINDER_PAT_F,RSSExpandedReader.FINDER_PAT_F,],[RSSExpandedReader.FINDER_PAT_A,RSSExpandedReader.FINDER_PAT_A,RSSExpandedReader.FINDER_PAT_B,RSSExpandedReader.FINDER_PAT_B,RSSExpandedReader.FINDER_PAT_C,RSSExpandedReader.FINDER_PAT_C,RSSExpandedReader.FINDER_PAT_D,RSSExpandedReader.FINDER_PAT_D,],[RSSExpandedReader.FINDER_PAT_A,RSSExpandedReader.FINDER_PAT_A,RSSExpandedReader.FINDER_PAT_B,RSSExpandedReader.FINDER_PAT_B,RSSExpandedReader.FINDER_PAT_C,RSSExpandedReader.FINDER_PAT_C,RSSExpandedReader.FINDER_PAT_D,RSSExpandedReader.FINDER_PAT_E,RSSExpandedReader.FINDER_PAT_E,],[RSSExpandedReader.FINDER_PAT_A,RSSExpandedReader.FINDER_PAT_A,RSSExpandedReader.FINDER_PAT_B,RSSExpandedReader.FINDER_PAT_B,RSSExpandedReader.FINDER_PAT_C,RSSExpandedReader.FINDER_PAT_C,RSSExpandedReader.FINDER_PAT_D,RSSExpandedReader.FINDER_PAT_E,RSSExpandedReader.FINDER_PAT_F,RSSExpandedReader.FINDER_PAT_F,],[RSSExpandedReader.FINDER_PAT_A,RSSExpandedReader.FINDER_PAT_A,RSSExpandedReader.FINDER_PAT_B,RSSExpandedReader.FINDER_PAT_B,RSSExpandedReader.FINDER_PAT_C,RSSExpandedReader.FINDER_PAT_D,RSSExpandedReader.FINDER_PAT_D,RSSExpandedReader.FINDER_PAT_E,RSSExpandedReader.FINDER_PAT_E,RSSExpandedReader.FINDER_PAT_F,RSSExpandedReader.FINDER_PAT_F,],];RSSExpandedReader.MAX_PAIRS=11;class Pair extends DataCharacter{constructor(value,checksumPortion,finderPattern){super(value,checksumPortion);this.count=0;this.finderPattern=finderPattern;}
getFinderPattern(){return this.finderPattern;}
getCount(){return this.count;}
incrementCount(){this.count++;}}
class RSS14Reader extends AbstractRSSReader{constructor(){super(...arguments);this.possibleLeftPairs=[];this.possibleRightPairs=[];}
decodeRow(rowNumber,row,hints){const leftPair=this.decodePair(row,false,rowNumber,hints);RSS14Reader.addOrTally(this.possibleLeftPairs,leftPair);row.reverse();let rightPair=this.decodePair(row,true,rowNumber,hints);RSS14Reader.addOrTally(this.possibleRightPairs,rightPair);row.reverse();for(let left of this.possibleLeftPairs){if(left.getCount()>1){for(let right of this.possibleRightPairs){if(right.getCount()>1&&RSS14Reader.checkChecksum(left,right)){return RSS14Reader.constructResult(left,right);}}}}
throw new NotFoundException();}
static addOrTally(possiblePairs,pair){if(pair==null){return;}
let found=false;for(let other of possiblePairs){if(other.getValue()===pair.getValue()){other.incrementCount();found=true;break;}}
if(!found){possiblePairs.push(pair);}}
reset(){this.possibleLeftPairs.length=0;this.possibleRightPairs.length=0;}
static constructResult(leftPair,rightPair){let symbolValue=4537077*leftPair.getValue()+rightPair.getValue();let text=new String(symbolValue).toString();let buffer=new StringBuilder();for(let i=13-text.length;i>0;i--){buffer.append('0');}
buffer.append(text);let checkDigit=0;for(let i=0;i<13;i++){let digit=buffer.charAt(i).charCodeAt(0)-'0'.charCodeAt(0);checkDigit+=((i&0x01)===0)?3*digit:digit;}
checkDigit=10-(checkDigit%10);if(checkDigit===10){checkDigit=0;}
buffer.append(checkDigit.toString());let leftPoints=leftPair.getFinderPattern().getResultPoints();let rightPoints=rightPair.getFinderPattern().getResultPoints();return new Result(buffer.toString(),null,0,[leftPoints[0],leftPoints[1],rightPoints[0],rightPoints[1]],BarcodeFormat$1.RSS_14,new Date().getTime());}
static checkChecksum(leftPair,rightPair){let checkValue=(leftPair.getChecksumPortion()+16*rightPair.getChecksumPortion())%79;let targetCheckValue=9*leftPair.getFinderPattern().getValue()+rightPair.getFinderPattern().getValue();if(targetCheckValue>72){targetCheckValue--;}
if(targetCheckValue>8){targetCheckValue--;}
return checkValue===targetCheckValue;}
decodePair(row,right,rowNumber,hints){try{let startEnd=this.findFinderPattern(row,right);let pattern=this.parseFoundFinderPattern(row,rowNumber,right,startEnd);let resultPointCallback=hints==null?null:hints.get(DecodeHintType$1.NEED_RESULT_POINT_CALLBACK);if(resultPointCallback!=null){let center=(startEnd[0]+startEnd[1])/2.0;if(right){center=row.getSize()-1-center;}
resultPointCallback.foundPossibleResultPoint(new ResultPoint(center,rowNumber));}
let outside=this.decodeDataCharacter(row,pattern,true);let inside=this.decodeDataCharacter(row,pattern,false);return new Pair(1597*outside.getValue()+inside.getValue(),outside.getChecksumPortion()+4*inside.getChecksumPortion(),pattern);}
catch(err){return null;}}
decodeDataCharacter(row,pattern,outsideChar){let counters=this.getDataCharacterCounters();for(let x=0;x<counters.length;x++){counters[x]=0;}
if(outsideChar){OneDReader.recordPatternInReverse(row,pattern.getStartEnd()[0],counters);}
else{OneDReader.recordPattern(row,pattern.getStartEnd()[1]+1,counters);for(let i=0,j=counters.length-1;i<j;i++,j--){let temp=counters[i];counters[i]=counters[j];counters[j]=temp;}}
let numModules=outsideChar?16:15;let elementWidth=MathUtils.sum(new Int32Array(counters))/numModules;let oddCounts=this.getOddCounts();let evenCounts=this.getEvenCounts();let oddRoundingErrors=this.getOddRoundingErrors();let evenRoundingErrors=this.getEvenRoundingErrors();for(let i=0;i<counters.length;i++){let value=counters[i]/elementWidth;let count=Math.floor(value+0.5);if(count<1){count=1;}
else if(count>8){count=8;}
let offset=Math.floor(i/2);if((i&0x01)===0){oddCounts[offset]=count;oddRoundingErrors[offset]=value-count;}
else{evenCounts[offset]=count;evenRoundingErrors[offset]=value-count;}}
this.adjustOddEvenCounts(outsideChar,numModules);let oddSum=0;let oddChecksumPortion=0;for(let i=oddCounts.length-1;i>=0;i--){oddChecksumPortion*=9;oddChecksumPortion+=oddCounts[i];oddSum+=oddCounts[i];}
let evenChecksumPortion=0;let evenSum=0;for(let i=evenCounts.length-1;i>=0;i--){evenChecksumPortion*=9;evenChecksumPortion+=evenCounts[i];evenSum+=evenCounts[i];}
let checksumPortion=oddChecksumPortion+3*evenChecksumPortion;if(outsideChar){if((oddSum&0x01)!==0||oddSum>12||oddSum<4){throw new NotFoundException();}
let group=(12-oddSum)/2;let oddWidest=RSS14Reader.OUTSIDE_ODD_WIDEST[group];let evenWidest=9-oddWidest;let vOdd=RSSUtils.getRSSvalue(oddCounts,oddWidest,false);let vEven=RSSUtils.getRSSvalue(evenCounts,evenWidest,true);let tEven=RSS14Reader.OUTSIDE_EVEN_TOTAL_SUBSET[group];let gSum=RSS14Reader.OUTSIDE_GSUM[group];return new DataCharacter(vOdd*tEven+vEven+gSum,checksumPortion);}
else{if((evenSum&0x01)!==0||evenSum>10||evenSum<4){throw new NotFoundException();}
let group=(10-evenSum)/2;let oddWidest=RSS14Reader.INSIDE_ODD_WIDEST[group];let evenWidest=9-oddWidest;let vOdd=RSSUtils.getRSSvalue(oddCounts,oddWidest,true);let vEven=RSSUtils.getRSSvalue(evenCounts,evenWidest,false);let tOdd=RSS14Reader.INSIDE_ODD_TOTAL_SUBSET[group];let gSum=RSS14Reader.INSIDE_GSUM[group];return new DataCharacter(vEven*tOdd+vOdd+gSum,checksumPortion);}}
findFinderPattern(row,rightFinderPattern){let counters=this.getDecodeFinderCounters();counters[0]=0;counters[1]=0;counters[2]=0;counters[3]=0;let width=row.getSize();let isWhite=false;let rowOffset=0;while(rowOffset<width){isWhite=!row.get(rowOffset);if(rightFinderPattern===isWhite){break;}
rowOffset++;}
let counterPosition=0;let patternStart=rowOffset;for(let x=rowOffset;x<width;x++){if(row.get(x)!==isWhite){counters[counterPosition]++;}
else{if(counterPosition===3){if(AbstractRSSReader.isFinderPattern(counters)){return[patternStart,x];}
patternStart+=counters[0]+counters[1];counters[0]=counters[2];counters[1]=counters[3];counters[2]=0;counters[3]=0;counterPosition--;}
else{counterPosition++;}
counters[counterPosition]=1;isWhite=!isWhite;}}
throw new NotFoundException();}
parseFoundFinderPattern(row,rowNumber,right,startEnd){let firstIsBlack=row.get(startEnd[0]);let firstElementStart=startEnd[0]-1;while(firstElementStart>=0&&firstIsBlack!==row.get(firstElementStart)){firstElementStart--;}
firstElementStart++;const firstCounter=startEnd[0]-firstElementStart;const counters=this.getDecodeFinderCounters();const copy=new Int32Array(counters.length);System.arraycopy(counters,0,copy,1,counters.length-1);copy[0]=firstCounter;const value=this.parseFinderValue(copy,RSS14Reader.FINDER_PATTERNS);let start=firstElementStart;let end=startEnd[1];if(right){start=row.getSize()-1-start;end=row.getSize()-1-end;}
return new FinderPattern(value,[firstElementStart,startEnd[1]],start,end,rowNumber);}
adjustOddEvenCounts(outsideChar,numModules){let oddSum=MathUtils.sum(new Int32Array(this.getOddCounts()));let evenSum=MathUtils.sum(new Int32Array(this.getEvenCounts()));let incrementOdd=false;let decrementOdd=false;let incrementEven=false;let decrementEven=false;if(outsideChar){if(oddSum>12){decrementOdd=true;}
else if(oddSum<4){incrementOdd=true;}
if(evenSum>12){decrementEven=true;}
else if(evenSum<4){incrementEven=true;}}
else{if(oddSum>11){decrementOdd=true;}
else if(oddSum<5){incrementOdd=true;}
if(evenSum>10){decrementEven=true;}
else if(evenSum<4){incrementEven=true;}}
let mismatch=oddSum+evenSum-numModules;let oddParityBad=(oddSum&0x01)===(outsideChar?1:0);let evenParityBad=(evenSum&0x01)===1;if(mismatch===1){if(oddParityBad){if(evenParityBad){throw new NotFoundException();}
decrementOdd=true;}
else{if(!evenParityBad){throw new NotFoundException();}
decrementEven=true;}}
else if(mismatch===-1){if(oddParityBad){if(evenParityBad){throw new NotFoundException();}
incrementOdd=true;}
else{if(!evenParityBad){throw new NotFoundException();}
incrementEven=true;}}
else if(mismatch===0){if(oddParityBad){if(!evenParityBad){throw new NotFoundException();}
if(oddSum<evenSum){incrementOdd=true;decrementEven=true;}
else{decrementOdd=true;incrementEven=true;}}
else{if(evenParityBad){throw new NotFoundException();}}}
else{throw new NotFoundException();}
if(incrementOdd){if(decrementOdd){throw new NotFoundException();}
AbstractRSSReader.increment(this.getOddCounts(),this.getOddRoundingErrors());}
if(decrementOdd){AbstractRSSReader.decrement(this.getOddCounts(),this.getOddRoundingErrors());}
if(incrementEven){if(decrementEven){throw new NotFoundException();}
AbstractRSSReader.increment(this.getEvenCounts(),this.getOddRoundingErrors());}
if(decrementEven){AbstractRSSReader.decrement(this.getEvenCounts(),this.getEvenRoundingErrors());}}}
RSS14Reader.OUTSIDE_EVEN_TOTAL_SUBSET=[1,10,34,70,126];RSS14Reader.INSIDE_ODD_TOTAL_SUBSET=[4,20,48,81];RSS14Reader.OUTSIDE_GSUM=[0,161,961,2015,2715];RSS14Reader.INSIDE_GSUM=[0,336,1036,1516];RSS14Reader.OUTSIDE_ODD_WIDEST=[8,6,4,3,1];RSS14Reader.INSIDE_ODD_WIDEST=[2,4,6,8];RSS14Reader.FINDER_PATTERNS=[Int32Array.from([3,8,2,1]),Int32Array.from([3,5,5,1]),Int32Array.from([3,3,7,1]),Int32Array.from([3,1,9,1]),Int32Array.from([2,7,4,1]),Int32Array.from([2,5,6,1]),Int32Array.from([2,3,8,1]),Int32Array.from([1,5,7,1]),Int32Array.from([1,3,9,1]),];class MultiFormatOneDReader extends OneDReader{constructor(hints){super();this.readers=[];const possibleFormats=!hints?null:hints.get(DecodeHintType$1.POSSIBLE_FORMATS);const useCode39CheckDigit=hints&&hints.get(DecodeHintType$1.ASSUME_CODE_39_CHECK_DIGIT)!==undefined;if(possibleFormats){if(possibleFormats.includes(BarcodeFormat$1.EAN_13)||possibleFormats.includes(BarcodeFormat$1.UPC_A)||possibleFormats.includes(BarcodeFormat$1.EAN_8)||possibleFormats.includes(BarcodeFormat$1.UPC_E)){this.readers.push(new MultiFormatUPCEANReader(hints));}
if(possibleFormats.includes(BarcodeFormat$1.CODE_39)){this.readers.push(new Code39Reader(useCode39CheckDigit));}
if(possibleFormats.includes(BarcodeFormat$1.CODE_93)){this.readers.push(new Code93Reader());}
if(possibleFormats.includes(BarcodeFormat$1.CODE_128)){this.readers.push(new Code128Reader());}
if(possibleFormats.includes(BarcodeFormat$1.ITF)){this.readers.push(new ITFReader());}
if(possibleFormats.includes(BarcodeFormat$1.CODABAR)){this.readers.push(new CodaBarReader());}
if(possibleFormats.includes(BarcodeFormat$1.RSS_14)){this.readers.push(new RSS14Reader());}
if(possibleFormats.includes(BarcodeFormat$1.RSS_EXPANDED)){console.warn('RSS Expanded reader IS NOT ready for production yet! use at your own risk.');this.readers.push(new RSSExpandedReader());}}
if(this.readers.length===0){this.readers.push(new MultiFormatUPCEANReader(hints));this.readers.push(new Code39Reader());this.readers.push(new Code93Reader());this.readers.push(new MultiFormatUPCEANReader(hints));this.readers.push(new Code128Reader());this.readers.push(new ITFReader());this.readers.push(new RSS14Reader());}}
decodeRow(rowNumber,row,hints){for(let i=0;i<this.readers.length;i++){try{return this.readers[i].decodeRow(rowNumber,row,hints);}
catch(re){}}
throw new NotFoundException();}
reset(){this.readers.forEach(reader=>reader.reset());}}
class BrowserBarcodeReader extends BrowserCodeReader{constructor(timeBetweenScansMillis=500,hints){super(new MultiFormatOneDReader(hints),timeBetweenScansMillis,hints);}}
class ECBlocks{constructor(ecCodewords,ecBlocks1,ecBlocks2){this.ecCodewords=ecCodewords;this.ecBlocks=[ecBlocks1];ecBlocks2&&this.ecBlocks.push(ecBlocks2);}
getECCodewords(){return this.ecCodewords;}
getECBlocks(){return this.ecBlocks;}}
class ECB{constructor(count,dataCodewords){this.count=count;this.dataCodewords=dataCodewords;}
getCount(){return this.count;}
getDataCodewords(){return this.dataCodewords;}}
class Version{constructor(versionNumber,symbolSizeRows,symbolSizeColumns,dataRegionSizeRows,dataRegionSizeColumns,ecBlocks){this.versionNumber=versionNumber;this.symbolSizeRows=symbolSizeRows;this.symbolSizeColumns=symbolSizeColumns;this.dataRegionSizeRows=dataRegionSizeRows;this.dataRegionSizeColumns=dataRegionSizeColumns;this.ecBlocks=ecBlocks;let total=0;const ecCodewords=ecBlocks.getECCodewords();const ecbArray=ecBlocks.getECBlocks();for(let ecBlock of ecbArray){total+=ecBlock.getCount()*(ecBlock.getDataCodewords()+ecCodewords);}
this.totalCodewords=total;}
getVersionNumber(){return this.versionNumber;}
getSymbolSizeRows(){return this.symbolSizeRows;}
getSymbolSizeColumns(){return this.symbolSizeColumns;}
getDataRegionSizeRows(){return this.dataRegionSizeRows;}
getDataRegionSizeColumns(){return this.dataRegionSizeColumns;}
getTotalCodewords(){return this.totalCodewords;}
getECBlocks(){return this.ecBlocks;}
static getVersionForDimensions(numRows,numColumns){if((numRows&0x01)!==0||(numColumns&0x01)!==0){throw new FormatException();}
for(let version of Version.VERSIONS){if(version.symbolSizeRows===numRows&&version.symbolSizeColumns===numColumns){return version;}}
throw new FormatException();}
toString(){return''+this.versionNumber;}
static buildVersions(){return[new Version(1,10,10,8,8,new ECBlocks(5,new ECB(1,3))),new Version(2,12,12,10,10,new ECBlocks(7,new ECB(1,5))),new Version(3,14,14,12,12,new ECBlocks(10,new ECB(1,8))),new Version(4,16,16,14,14,new ECBlocks(12,new ECB(1,12))),new Version(5,18,18,16,16,new ECBlocks(14,new ECB(1,18))),new Version(6,20,20,18,18,new ECBlocks(18,new ECB(1,22))),new Version(7,22,22,20,20,new ECBlocks(20,new ECB(1,30))),new Version(8,24,24,22,22,new ECBlocks(24,new ECB(1,36))),new Version(9,26,26,24,24,new ECBlocks(28,new ECB(1,44))),new Version(10,32,32,14,14,new ECBlocks(36,new ECB(1,62))),new Version(11,36,36,16,16,new ECBlocks(42,new ECB(1,86))),new Version(12,40,40,18,18,new ECBlocks(48,new ECB(1,114))),new Version(13,44,44,20,20,new ECBlocks(56,new ECB(1,144))),new Version(14,48,48,22,22,new ECBlocks(68,new ECB(1,174))),new Version(15,52,52,24,24,new ECBlocks(42,new ECB(2,102))),new Version(16,64,64,14,14,new ECBlocks(56,new ECB(2,140))),new Version(17,72,72,16,16,new ECBlocks(36,new ECB(4,92))),new Version(18,80,80,18,18,new ECBlocks(48,new ECB(4,114))),new Version(19,88,88,20,20,new ECBlocks(56,new ECB(4,144))),new Version(20,96,96,22,22,new ECBlocks(68,new ECB(4,174))),new Version(21,104,104,24,24,new ECBlocks(56,new ECB(6,136))),new Version(22,120,120,18,18,new ECBlocks(68,new ECB(6,175))),new Version(23,132,132,20,20,new ECBlocks(62,new ECB(8,163))),new Version(24,144,144,22,22,new ECBlocks(62,new ECB(8,156),new ECB(2,155))),new Version(25,8,18,6,16,new ECBlocks(7,new ECB(1,5))),new Version(26,8,32,6,14,new ECBlocks(11,new ECB(1,10))),new Version(27,12,26,10,24,new ECBlocks(14,new ECB(1,16))),new Version(28,12,36,10,16,new ECBlocks(18,new ECB(1,22))),new Version(29,16,36,14,16,new ECBlocks(24,new ECB(1,32))),new Version(30,16,48,14,22,new ECBlocks(28,new ECB(1,49)))];}}
Version.VERSIONS=Version.buildVersions();class BitMatrixParser{constructor(bitMatrix){const dimension=bitMatrix.getHeight();if(dimension<8||dimension>144||(dimension&0x01)!==0){throw new FormatException();}
this.version=BitMatrixParser.readVersion(bitMatrix);this.mappingBitMatrix=this.extractDataRegion(bitMatrix);this.readMappingMatrix=new BitMatrix(this.mappingBitMatrix.getWidth(),this.mappingBitMatrix.getHeight());}
getVersion(){return this.version;}
static readVersion(bitMatrix){const numRows=bitMatrix.getHeight();const numColumns=bitMatrix.getWidth();return Version.getVersionForDimensions(numRows,numColumns);}
readCodewords(){const result=new Int8Array(this.version.getTotalCodewords());let resultOffset=0;let row=4;let column=0;const numRows=this.mappingBitMatrix.getHeight();const numColumns=this.mappingBitMatrix.getWidth();let corner1Read=false;let corner2Read=false;let corner3Read=false;let corner4Read=false;do{if((row===numRows)&&(column===0)&&!corner1Read){result[resultOffset++]=this.readCorner1(numRows,numColumns)&0xff;row-=2;column+=2;corner1Read=true;}
else if((row===numRows-2)&&(column===0)&&((numColumns&0x03)!==0)&&!corner2Read){result[resultOffset++]=this.readCorner2(numRows,numColumns)&0xff;row-=2;column+=2;corner2Read=true;}
else if((row===numRows+4)&&(column===2)&&((numColumns&0x07)===0)&&!corner3Read){result[resultOffset++]=this.readCorner3(numRows,numColumns)&0xff;row-=2;column+=2;corner3Read=true;}
else if((row===numRows-2)&&(column===0)&&((numColumns&0x07)===4)&&!corner4Read){result[resultOffset++]=this.readCorner4(numRows,numColumns)&0xff;row-=2;column+=2;corner4Read=true;}
else{do{if((row<numRows)&&(column>=0)&&!this.readMappingMatrix.get(column,row)){result[resultOffset++]=this.readUtah(row,column,numRows,numColumns)&0xff;}
row-=2;column+=2;}while((row>=0)&&(column<numColumns));row+=1;column+=3;do{if((row>=0)&&(column<numColumns)&&!this.readMappingMatrix.get(column,row)){result[resultOffset++]=this.readUtah(row,column,numRows,numColumns)&0xff;}
row+=2;column-=2;}while((row<numRows)&&(column>=0));row+=3;column+=1;}}while((row<numRows)||(column<numColumns));if(resultOffset!==this.version.getTotalCodewords()){throw new FormatException();}
return result;}
readModule(row,column,numRows,numColumns){if(row<0){row+=numRows;column+=4-((numRows+4)&0x07);}
if(column<0){column+=numColumns;row+=4-((numColumns+4)&0x07);}
this.readMappingMatrix.set(column,row);return this.mappingBitMatrix.get(column,row);}
readUtah(row,column,numRows,numColumns){let currentByte=0;if(this.readModule(row-2,column-2,numRows,numColumns)){currentByte|=1;}
currentByte<<=1;if(this.readModule(row-2,column-1,numRows,numColumns)){currentByte|=1;}
currentByte<<=1;if(this.readModule(row-1,column-2,numRows,numColumns)){currentByte|=1;}
currentByte<<=1;if(this.readModule(row-1,column-1,numRows,numColumns)){currentByte|=1;}
currentByte<<=1;if(this.readModule(row-1,column,numRows,numColumns)){currentByte|=1;}
currentByte<<=1;if(this.readModule(row,column-2,numRows,numColumns)){currentByte|=1;}
currentByte<<=1;if(this.readModule(row,column-1,numRows,numColumns)){currentByte|=1;}
currentByte<<=1;if(this.readModule(row,column,numRows,numColumns)){currentByte|=1;}
return currentByte;}
readCorner1(numRows,numColumns){let currentByte=0;if(this.readModule(numRows-1,0,numRows,numColumns)){currentByte|=1;}
currentByte<<=1;if(this.readModule(numRows-1,1,numRows,numColumns)){currentByte|=1;}
currentByte<<=1;if(this.readModule(numRows-1,2,numRows,numColumns)){currentByte|=1;}
currentByte<<=1;if(this.readModule(0,numColumns-2,numRows,numColumns)){currentByte|=1;}
currentByte<<=1;if(this.readModule(0,numColumns-1,numRows,numColumns)){currentByte|=1;}
currentByte<<=1;if(this.readModule(1,numColumns-1,numRows,numColumns)){currentByte|=1;}
currentByte<<=1;if(this.readModule(2,numColumns-1,numRows,numColumns)){currentByte|=1;}
currentByte<<=1;if(this.readModule(3,numColumns-1,numRows,numColumns)){currentByte|=1;}
return currentByte;}
readCorner2(numRows,numColumns){let currentByte=0;if(this.readModule(numRows-3,0,numRows,numColumns)){currentByte|=1;}
currentByte<<=1;if(this.readModule(numRows-2,0,numRows,numColumns)){currentByte|=1;}
currentByte<<=1;if(this.readModule(numRows-1,0,numRows,numColumns)){currentByte|=1;}
currentByte<<=1;if(this.readModule(0,numColumns-4,numRows,numColumns)){currentByte|=1;}
currentByte<<=1;if(this.readModule(0,numColumns-3,numRows,numColumns)){currentByte|=1;}
currentByte<<=1;if(this.readModule(0,numColumns-2,numRows,numColumns)){currentByte|=1;}
currentByte<<=1;if(this.readModule(0,numColumns-1,numRows,numColumns)){currentByte|=1;}
currentByte<<=1;if(this.readModule(1,numColumns-1,numRows,numColumns)){currentByte|=1;}
return currentByte;}
readCorner3(numRows,numColumns){let currentByte=0;if(this.readModule(numRows-1,0,numRows,numColumns)){currentByte|=1;}
currentByte<<=1;if(this.readModule(numRows-1,numColumns-1,numRows,numColumns)){currentByte|=1;}
currentByte<<=1;if(this.readModule(0,numColumns-3,numRows,numColumns)){currentByte|=1;}
currentByte<<=1;if(this.readModule(0,numColumns-2,numRows,numColumns)){currentByte|=1;}
currentByte<<=1;if(this.readModule(0,numColumns-1,numRows,numColumns)){currentByte|=1;}
currentByte<<=1;if(this.readModule(1,numColumns-3,numRows,numColumns)){currentByte|=1;}
currentByte<<=1;if(this.readModule(1,numColumns-2,numRows,numColumns)){currentByte|=1;}
currentByte<<=1;if(this.readModule(1,numColumns-1,numRows,numColumns)){currentByte|=1;}
return currentByte;}
readCorner4(numRows,numColumns){let currentByte=0;if(this.readModule(numRows-3,0,numRows,numColumns)){currentByte|=1;}
currentByte<<=1;if(this.readModule(numRows-2,0,numRows,numColumns)){currentByte|=1;}
currentByte<<=1;if(this.readModule(numRows-1,0,numRows,numColumns)){currentByte|=1;}
currentByte<<=1;if(this.readModule(0,numColumns-2,numRows,numColumns)){currentByte|=1;}
currentByte<<=1;if(this.readModule(0,numColumns-1,numRows,numColumns)){currentByte|=1;}
currentByte<<=1;if(this.readModule(1,numColumns-1,numRows,numColumns)){currentByte|=1;}
currentByte<<=1;if(this.readModule(2,numColumns-1,numRows,numColumns)){currentByte|=1;}
currentByte<<=1;if(this.readModule(3,numColumns-1,numRows,numColumns)){currentByte|=1;}
return currentByte;}
extractDataRegion(bitMatrix){const symbolSizeRows=this.version.getSymbolSizeRows();const symbolSizeColumns=this.version.getSymbolSizeColumns();if(bitMatrix.getHeight()!==symbolSizeRows){throw new IllegalArgumentException('Dimension of bitMatrix must match the version size');}
const dataRegionSizeRows=this.version.getDataRegionSizeRows();const dataRegionSizeColumns=this.version.getDataRegionSizeColumns();const numDataRegionsRow=symbolSizeRows/dataRegionSizeRows|0;const numDataRegionsColumn=symbolSizeColumns/dataRegionSizeColumns|0;const sizeDataRegionRow=numDataRegionsRow*dataRegionSizeRows;const sizeDataRegionColumn=numDataRegionsColumn*dataRegionSizeColumns;const bitMatrixWithoutAlignment=new BitMatrix(sizeDataRegionColumn,sizeDataRegionRow);for(let dataRegionRow=0;dataRegionRow<numDataRegionsRow;++dataRegionRow){const dataRegionRowOffset=dataRegionRow*dataRegionSizeRows;for(let dataRegionColumn=0;dataRegionColumn<numDataRegionsColumn;++dataRegionColumn){const dataRegionColumnOffset=dataRegionColumn*dataRegionSizeColumns;for(let i=0;i<dataRegionSizeRows;++i){const readRowOffset=dataRegionRow*(dataRegionSizeRows+2)+1+i;const writeRowOffset=dataRegionRowOffset+i;for(let j=0;j<dataRegionSizeColumns;++j){const readColumnOffset=dataRegionColumn*(dataRegionSizeColumns+2)+1+j;if(bitMatrix.get(readColumnOffset,readRowOffset)){const writeColumnOffset=dataRegionColumnOffset+j;bitMatrixWithoutAlignment.set(writeColumnOffset,writeRowOffset);}}}}}
return bitMatrixWithoutAlignment;}}
class DataBlock{constructor(numDataCodewords,codewords){this.numDataCodewords=numDataCodewords;this.codewords=codewords;}
static getDataBlocks(rawCodewords,version){const ecBlocks=version.getECBlocks();let totalBlocks=0;const ecBlockArray=ecBlocks.getECBlocks();for(let ecBlock of ecBlockArray){totalBlocks+=ecBlock.getCount();}
const result=new Array(totalBlocks);let numResultBlocks=0;for(let ecBlock of ecBlockArray){for(let i=0;i<ecBlock.getCount();i++){const numDataCodewords=ecBlock.getDataCodewords();const numBlockCodewords=ecBlocks.getECCodewords()+numDataCodewords;result[numResultBlocks++]=new DataBlock(numDataCodewords,new Uint8Array(numBlockCodewords));}}
const longerBlocksTotalCodewords=result[0].codewords.length;const longerBlocksNumDataCodewords=longerBlocksTotalCodewords-ecBlocks.getECCodewords();const shorterBlocksNumDataCodewords=longerBlocksNumDataCodewords-1;let rawCodewordsOffset=0;for(let i=0;i<shorterBlocksNumDataCodewords;i++){for(let j=0;j<numResultBlocks;j++){result[j].codewords[i]=rawCodewords[rawCodewordsOffset++];}}
const specialVersion=version.getVersionNumber()===24;const numLongerBlocks=specialVersion?8:numResultBlocks;for(let j=0;j<numLongerBlocks;j++){result[j].codewords[longerBlocksNumDataCodewords-1]=rawCodewords[rawCodewordsOffset++];}
const max=result[0].codewords.length;for(let i=longerBlocksNumDataCodewords;i<max;i++){for(let j=0;j<numResultBlocks;j++){const jOffset=specialVersion?(j+8)%numResultBlocks:j;const iOffset=specialVersion&&jOffset>7?i-1:i;result[jOffset].codewords[iOffset]=rawCodewords[rawCodewordsOffset++];}}
if(rawCodewordsOffset!==rawCodewords.length){throw new IllegalArgumentException();}
return result;}
getNumDataCodewords(){return this.numDataCodewords;}
getCodewords(){return this.codewords;}}
class BitSource{constructor(bytes){this.bytes=bytes;this.byteOffset=0;this.bitOffset=0;}
getBitOffset(){return this.bitOffset;}
getByteOffset(){return this.byteOffset;}
readBits(numBits){if(numBits<1||numBits>32||numBits>this.available()){throw new IllegalArgumentException(''+numBits);}
let result=0;let bitOffset=this.bitOffset;let byteOffset=this.byteOffset;const bytes=this.bytes;if(bitOffset>0){const bitsLeft=8-bitOffset;const toRead=numBits<bitsLeft?numBits:bitsLeft;const bitsToNotRead=bitsLeft-toRead;const mask=(0xFF>>(8-toRead))<<bitsToNotRead;result=(bytes[byteOffset]&mask)>>bitsToNotRead;numBits-=toRead;bitOffset+=toRead;if(bitOffset===8){bitOffset=0;byteOffset++;}}
if(numBits>0){while(numBits>=8){result=(result<<8)|(bytes[byteOffset]&0xFF);byteOffset++;numBits-=8;}
if(numBits>0){const bitsToNotRead=8-numBits;const mask=(0xFF>>bitsToNotRead)<<bitsToNotRead;result=(result<<numBits)|((bytes[byteOffset]&mask)>>bitsToNotRead);bitOffset+=numBits;}}
this.bitOffset=bitOffset;this.byteOffset=byteOffset;return result;}
available(){return 8*(this.bytes.length-this.byteOffset)-this.bitOffset;}}
var Mode;(function(Mode){Mode[Mode["PAD_ENCODE"]=0]="PAD_ENCODE";Mode[Mode["ASCII_ENCODE"]=1]="ASCII_ENCODE";Mode[Mode["C40_ENCODE"]=2]="C40_ENCODE";Mode[Mode["TEXT_ENCODE"]=3]="TEXT_ENCODE";Mode[Mode["ANSIX12_ENCODE"]=4]="ANSIX12_ENCODE";Mode[Mode["EDIFACT_ENCODE"]=5]="EDIFACT_ENCODE";Mode[Mode["BASE256_ENCODE"]=6]="BASE256_ENCODE";})(Mode||(Mode={}));class DecodedBitStreamParser{static decode(bytes){const bits=new BitSource(bytes);const result=new StringBuilder();const resultTrailer=new StringBuilder();const byteSegments=new Array();let mode=Mode.ASCII_ENCODE;do{if(mode===Mode.ASCII_ENCODE){mode=this.decodeAsciiSegment(bits,result,resultTrailer);}
else{switch(mode){case Mode.C40_ENCODE:this.decodeC40Segment(bits,result);break;case Mode.TEXT_ENCODE:this.decodeTextSegment(bits,result);break;case Mode.ANSIX12_ENCODE:this.decodeAnsiX12Segment(bits,result);break;case Mode.EDIFACT_ENCODE:this.decodeEdifactSegment(bits,result);break;case Mode.BASE256_ENCODE:this.decodeBase256Segment(bits,result,byteSegments);break;default:throw new FormatException();}
mode=Mode.ASCII_ENCODE;}}while(mode!==Mode.PAD_ENCODE&&bits.available()>0);if(resultTrailer.length()>0){result.append(resultTrailer.toString());}
return new DecoderResult(bytes,result.toString(),byteSegments.length===0?null:byteSegments,null);}
static decodeAsciiSegment(bits,result,resultTrailer){let upperShift=false;do{let oneByte=bits.readBits(8);if(oneByte===0){throw new FormatException();}
else if(oneByte<=128){if(upperShift){oneByte+=128;}
result.append(String.fromCharCode(oneByte-1));return Mode.ASCII_ENCODE;}
else if(oneByte===129){return Mode.PAD_ENCODE;}
else if(oneByte<=229){const value=oneByte-130;if(value<10){result.append('0');}
result.append(''+value);}
else{switch(oneByte){case 230:return Mode.C40_ENCODE;case 231:return Mode.BASE256_ENCODE;case 232:result.append(String.fromCharCode(29));break;case 233:case 234:break;case 235:upperShift=true;break;case 236:result.append('[)>\u001E05\u001D');resultTrailer.insert(0,'\u001E\u0004');break;case 237:result.append('[)>\u001E06\u001D');resultTrailer.insert(0,'\u001E\u0004');break;case 238:return Mode.ANSIX12_ENCODE;case 239:return Mode.TEXT_ENCODE;case 240:return Mode.EDIFACT_ENCODE;case 241:break;default:if(oneByte!==254||bits.available()!==0){throw new FormatException();}
break;}}}while(bits.available()>0);return Mode.ASCII_ENCODE;}
static decodeC40Segment(bits,result){let upperShift=false;const cValues=[];let shift=0;do{if(bits.available()===8){return;}
const firstByte=bits.readBits(8);if(firstByte===254){return;}
this.parseTwoBytes(firstByte,bits.readBits(8),cValues);for(let i=0;i<3;i++){const cValue=cValues[i];switch(shift){case 0:if(cValue<3){shift=cValue+1;}
else if(cValue<this.C40_BASIC_SET_CHARS.length){const c40char=this.C40_BASIC_SET_CHARS[cValue];if(upperShift){result.append(String.fromCharCode(c40char.charCodeAt(0)+128));upperShift=false;}
else{result.append(c40char);}}
else{throw new FormatException();}
break;case 1:if(upperShift){result.append(String.fromCharCode(cValue+128));upperShift=false;}
else{result.append(String.fromCharCode(cValue));}
shift=0;break;case 2:if(cValue<this.C40_SHIFT2_SET_CHARS.length){const c40char=this.C40_SHIFT2_SET_CHARS[cValue];if(upperShift){result.append(String.fromCharCode(c40char.charCodeAt(0)+128));upperShift=false;}
else{result.append(c40char);}}
else{switch(cValue){case 27:result.append(String.fromCharCode(29));break;case 30:upperShift=true;break;default:throw new FormatException();}}
shift=0;break;case 3:if(upperShift){result.append(String.fromCharCode(cValue+224));upperShift=false;}
else{result.append(String.fromCharCode(cValue+96));}
shift=0;break;default:throw new FormatException();}}}while(bits.available()>0);}
static decodeTextSegment(bits,result){let upperShift=false;let cValues=[];let shift=0;do{if(bits.available()===8){return;}
const firstByte=bits.readBits(8);if(firstByte===254){return;}
this.parseTwoBytes(firstByte,bits.readBits(8),cValues);for(let i=0;i<3;i++){const cValue=cValues[i];switch(shift){case 0:if(cValue<3){shift=cValue+1;}
else if(cValue<this.TEXT_BASIC_SET_CHARS.length){const textChar=this.TEXT_BASIC_SET_CHARS[cValue];if(upperShift){result.append(String.fromCharCode(textChar.charCodeAt(0)+128));upperShift=false;}
else{result.append(textChar);}}
else{throw new FormatException();}
break;case 1:if(upperShift){result.append(String.fromCharCode(cValue+128));upperShift=false;}
else{result.append(String.fromCharCode(cValue));}
shift=0;break;case 2:if(cValue<this.TEXT_SHIFT2_SET_CHARS.length){const textChar=this.TEXT_SHIFT2_SET_CHARS[cValue];if(upperShift){result.append(String.fromCharCode(textChar.charCodeAt(0)+128));upperShift=false;}
else{result.append(textChar);}}
else{switch(cValue){case 27:result.append(String.fromCharCode(29));break;case 30:upperShift=true;break;default:throw new FormatException();}}
shift=0;break;case 3:if(cValue<this.TEXT_SHIFT3_SET_CHARS.length){const textChar=this.TEXT_SHIFT3_SET_CHARS[cValue];if(upperShift){result.append(String.fromCharCode(textChar.charCodeAt(0)+128));upperShift=false;}
else{result.append(textChar);}
shift=0;}
else{throw new FormatException();}
break;default:throw new FormatException();}}}while(bits.available()>0);}
static decodeAnsiX12Segment(bits,result){const cValues=[];do{if(bits.available()===8){return;}
const firstByte=bits.readBits(8);if(firstByte===254){return;}
this.parseTwoBytes(firstByte,bits.readBits(8),cValues);for(let i=0;i<3;i++){const cValue=cValues[i];switch(cValue){case 0:result.append('\r');break;case 1:result.append('*');break;case 2:result.append('>');break;case 3:result.append(' ');break;default:if(cValue<14){result.append(String.fromCharCode(cValue+44));}
else if(cValue<40){result.append(String.fromCharCode(cValue+51));}
else{throw new FormatException();}
break;}}}while(bits.available()>0);}
static parseTwoBytes(firstByte,secondByte,result){let fullBitValue=(firstByte<<8)+secondByte-1;let temp=Math.floor(fullBitValue/1600);result[0]=temp;fullBitValue-=temp*1600;temp=Math.floor(fullBitValue/40);result[1]=temp;result[2]=fullBitValue-temp*40;}
static decodeEdifactSegment(bits,result){do{if(bits.available()<=16){return;}
for(let i=0;i<4;i++){let edifactValue=bits.readBits(6);if(edifactValue===0x1F){const bitsLeft=8-bits.getBitOffset();if(bitsLeft!==8){bits.readBits(bitsLeft);}
return;}
if((edifactValue&0x20)===0){edifactValue|=0x40;}
result.append(String.fromCharCode(edifactValue));}}while(bits.available()>0);}
static decodeBase256Segment(bits,result,byteSegments){let codewordPosition=1+bits.getByteOffset();const d1=this.unrandomize255State(bits.readBits(8),codewordPosition++);let count;if(d1===0){count=bits.available()/8|0;}
else if(d1<250){count=d1;}
else{count=250*(d1-249)+this.unrandomize255State(bits.readBits(8),codewordPosition++);}
if(count<0){throw new FormatException();}
const bytes=new Uint8Array(count);for(let i=0;i<count;i++){if(bits.available()<8){throw new FormatException();}
bytes[i]=this.unrandomize255State(bits.readBits(8),codewordPosition++);}
byteSegments.push(bytes);try{result.append(StringEncoding.decode(bytes,StringUtils.ISO88591));}
catch(uee){throw new IllegalStateException('Platform does not support required encoding: '+uee.message);}}
static unrandomize255State(randomizedBase256Codeword,base256CodewordPosition){const pseudoRandomNumber=((149*base256CodewordPosition)%255)+1;const tempVariable=randomizedBase256Codeword-pseudoRandomNumber;return tempVariable>=0?tempVariable:tempVariable+256;}}
DecodedBitStreamParser.C40_BASIC_SET_CHARS=['*','*','*',' ','0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'];DecodedBitStreamParser.C40_SHIFT2_SET_CHARS=['!','"','#','$','%','&','\'','(',')','*','+',',','-','.','/',':',';','<','=','>','?','@','[','\\',']','^','_'];DecodedBitStreamParser.TEXT_BASIC_SET_CHARS=['*','*','*',' ','0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'];DecodedBitStreamParser.TEXT_SHIFT2_SET_CHARS=DecodedBitStreamParser.C40_SHIFT2_SET_CHARS;DecodedBitStreamParser.TEXT_SHIFT3_SET_CHARS=['`','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z','{','|','}','~',String.fromCharCode(127)];class Decoder$1{constructor(){this.rsDecoder=new ReedSolomonDecoder(GenericGF.DATA_MATRIX_FIELD_256);}
decode(bits){const parser=new BitMatrixParser(bits);const version=parser.getVersion();const codewords=parser.readCodewords();const dataBlocks=DataBlock.getDataBlocks(codewords,version);let totalBytes=0;for(let db of dataBlocks){totalBytes+=db.getNumDataCodewords();}
const resultBytes=new Uint8Array(totalBytes);const dataBlocksCount=dataBlocks.length;for(let j=0;j<dataBlocksCount;j++){const dataBlock=dataBlocks[j];const codewordBytes=dataBlock.getCodewords();const numDataCodewords=dataBlock.getNumDataCodewords();this.correctErrors(codewordBytes,numDataCodewords);for(let i=0;i<numDataCodewords;i++){resultBytes[i*dataBlocksCount+j]=codewordBytes[i];}}
return DecodedBitStreamParser.decode(resultBytes);}
correctErrors(codewordBytes,numDataCodewords){const codewordsInts=new Int32Array(codewordBytes);try{this.rsDecoder.decode(codewordsInts,codewordBytes.length-numDataCodewords);}
catch(ignored){throw new ChecksumException();}
for(let i=0;i<numDataCodewords;i++){codewordBytes[i]=codewordsInts[i];}}}
class Detector$1{constructor(image){this.image=image;this.rectangleDetector=new WhiteRectangleDetector(this.image);}
detect(){const cornerPoints=this.rectangleDetector.detect();let points=this.detectSolid1(cornerPoints);points=this.detectSolid2(points);points[3]=this.correctTopRight(points);if(!points[3]){throw new NotFoundException();}
points=this.shiftToModuleCenter(points);const topLeft=points[0];const bottomLeft=points[1];const bottomRight=points[2];const topRight=points[3];let dimensionTop=this.transitionsBetween(topLeft,topRight)+1;let dimensionRight=this.transitionsBetween(bottomRight,topRight)+1;if((dimensionTop&0x01)===1){dimensionTop+=1;}
if((dimensionRight&0x01)===1){dimensionRight+=1;}
if(4*dimensionTop<7*dimensionRight&&4*dimensionRight<7*dimensionTop){dimensionTop=dimensionRight=Math.max(dimensionTop,dimensionRight);}
let bits=Detector$1.sampleGrid(this.image,topLeft,bottomLeft,bottomRight,topRight,dimensionTop,dimensionRight);return new DetectorResult(bits,[topLeft,bottomLeft,bottomRight,topRight]);}
static shiftPoint(point,to,div){let x=(to.getX()-point.getX())/(div+1);let y=(to.getY()-point.getY())/(div+1);return new ResultPoint(point.getX()+x,point.getY()+y);}
static moveAway(point,fromX,fromY){let x=point.getX();let y=point.getY();if(x<fromX){x-=1;}
else{x+=1;}
if(y<fromY){y-=1;}
else{y+=1;}
return new ResultPoint(x,y);}
detectSolid1(cornerPoints){let pointA=cornerPoints[0];let pointB=cornerPoints[1];let pointC=cornerPoints[3];let pointD=cornerPoints[2];let trAB=this.transitionsBetween(pointA,pointB);let trBC=this.transitionsBetween(pointB,pointC);let trCD=this.transitionsBetween(pointC,pointD);let trDA=this.transitionsBetween(pointD,pointA);let min=trAB;let points=[pointD,pointA,pointB,pointC];if(min>trBC){min=trBC;points[0]=pointA;points[1]=pointB;points[2]=pointC;points[3]=pointD;}
if(min>trCD){min=trCD;points[0]=pointB;points[1]=pointC;points[2]=pointD;points[3]=pointA;}
if(min>trDA){points[0]=pointC;points[1]=pointD;points[2]=pointA;points[3]=pointB;}
return points;}
detectSolid2(points){let pointA=points[0];let pointB=points[1];let pointC=points[2];let pointD=points[3];let tr=this.transitionsBetween(pointA,pointD);let pointBs=Detector$1.shiftPoint(pointB,pointC,(tr+1)*4);let pointCs=Detector$1.shiftPoint(pointC,pointB,(tr+1)*4);let trBA=this.transitionsBetween(pointBs,pointA);let trCD=this.transitionsBetween(pointCs,pointD);if(trBA<trCD){points[0]=pointA;points[1]=pointB;points[2]=pointC;points[3]=pointD;}
else{points[0]=pointB;points[1]=pointC;points[2]=pointD;points[3]=pointA;}
return points;}
correctTopRight(points){let pointA=points[0];let pointB=points[1];let pointC=points[2];let pointD=points[3];let trTop=this.transitionsBetween(pointA,pointD);let trRight=this.transitionsBetween(pointB,pointD);let pointAs=Detector$1.shiftPoint(pointA,pointB,(trRight+1)*4);let pointCs=Detector$1.shiftPoint(pointC,pointB,(trTop+1)*4);trTop=this.transitionsBetween(pointAs,pointD);trRight=this.transitionsBetween(pointCs,pointD);let candidate1=new ResultPoint(pointD.getX()+(pointC.getX()-pointB.getX())/(trTop+1),pointD.getY()+(pointC.getY()-pointB.getY())/(trTop+1));let candidate2=new ResultPoint(pointD.getX()+(pointA.getX()-pointB.getX())/(trRight+1),pointD.getY()+(pointA.getY()-pointB.getY())/(trRight+1));if(!this.isValid(candidate1)){if(this.isValid(candidate2)){return candidate2;}
return null;}
if(!this.isValid(candidate2)){return candidate1;}
let sumc1=this.transitionsBetween(pointAs,candidate1)+this.transitionsBetween(pointCs,candidate1);let sumc2=this.transitionsBetween(pointAs,candidate2)+this.transitionsBetween(pointCs,candidate2);if(sumc1>sumc2){return candidate1;}
else{return candidate2;}}
shiftToModuleCenter(points){let pointA=points[0];let pointB=points[1];let pointC=points[2];let pointD=points[3];let dimH=this.transitionsBetween(pointA,pointD)+1;let dimV=this.transitionsBetween(pointC,pointD)+1;let pointAs=Detector$1.shiftPoint(pointA,pointB,dimV*4);let pointCs=Detector$1.shiftPoint(pointC,pointB,dimH*4);dimH=this.transitionsBetween(pointAs,pointD)+1;dimV=this.transitionsBetween(pointCs,pointD)+1;if((dimH&0x01)===1){dimH+=1;}
if((dimV&0x01)===1){dimV+=1;}
let centerX=(pointA.getX()+pointB.getX()+pointC.getX()+pointD.getX())/4;let centerY=(pointA.getY()+pointB.getY()+pointC.getY()+pointD.getY())/4;pointA=Detector$1.moveAway(pointA,centerX,centerY);pointB=Detector$1.moveAway(pointB,centerX,centerY);pointC=Detector$1.moveAway(pointC,centerX,centerY);pointD=Detector$1.moveAway(pointD,centerX,centerY);let pointBs;let pointDs;pointAs=Detector$1.shiftPoint(pointA,pointB,dimV*4);pointAs=Detector$1.shiftPoint(pointAs,pointD,dimH*4);pointBs=Detector$1.shiftPoint(pointB,pointA,dimV*4);pointBs=Detector$1.shiftPoint(pointBs,pointC,dimH*4);pointCs=Detector$1.shiftPoint(pointC,pointD,dimV*4);pointCs=Detector$1.shiftPoint(pointCs,pointB,dimH*4);pointDs=Detector$1.shiftPoint(pointD,pointC,dimV*4);pointDs=Detector$1.shiftPoint(pointDs,pointA,dimH*4);return[pointAs,pointBs,pointCs,pointDs];}
isValid(p){return p.getX()>=0&&p.getX()<this.image.getWidth()&&p.getY()>0&&p.getY()<this.image.getHeight();}
static sampleGrid(image,topLeft,bottomLeft,bottomRight,topRight,dimensionX,dimensionY){const sampler=GridSamplerInstance.getInstance();return sampler.sampleGrid(image,dimensionX,dimensionY,0.5,0.5,dimensionX-0.5,0.5,dimensionX-0.5,dimensionY-0.5,0.5,dimensionY-0.5,topLeft.getX(),topLeft.getY(),topRight.getX(),topRight.getY(),bottomRight.getX(),bottomRight.getY(),bottomLeft.getX(),bottomLeft.getY());}
transitionsBetween(from,to){let fromX=Math.trunc(from.getX());let fromY=Math.trunc(from.getY());let toX=Math.trunc(to.getX());let toY=Math.trunc(to.getY());let steep=Math.abs(toY-fromY)>Math.abs(toX-fromX);if(steep){let temp=fromX;fromX=fromY;fromY=temp;temp=toX;toX=toY;toY=temp;}
let dx=Math.abs(toX-fromX);let dy=Math.abs(toY-fromY);let error=-dx/2;let ystep=fromY<toY?1:-1;let xstep=fromX<toX?1:-1;let transitions=0;let inBlack=this.image.get(steep?fromY:fromX,steep?fromX:fromY);for(let x=fromX,y=fromY;x!==toX;x+=xstep){let isBlack=this.image.get(steep?y:x,steep?x:y);if(isBlack!==inBlack){transitions++;inBlack=isBlack;}
error+=dy;if(error>0){if(y===toY){break;}
y+=ystep;error-=dx;}}
return transitions;}}
class DataMatrixReader{constructor(){this.decoder=new Decoder$1();}
decode(image,hints=null){let decoderResult;let points;if(hints!=null&&hints.has(DecodeHintType$1.PURE_BARCODE)){const bits=DataMatrixReader.extractPureBits(image.getBlackMatrix());decoderResult=this.decoder.decode(bits);points=DataMatrixReader.NO_POINTS;}
else{const detectorResult=new Detector$1(image.getBlackMatrix()).detect();decoderResult=this.decoder.decode(detectorResult.getBits());points=detectorResult.getPoints();}
const rawBytes=decoderResult.getRawBytes();const result=new Result(decoderResult.getText(),rawBytes,8*rawBytes.length,points,BarcodeFormat$1.DATA_MATRIX,System.currentTimeMillis());const byteSegments=decoderResult.getByteSegments();if(byteSegments!=null){result.putMetadata(ResultMetadataType$1.BYTE_SEGMENTS,byteSegments);}
const ecLevel=decoderResult.getECLevel();if(ecLevel!=null){result.putMetadata(ResultMetadataType$1.ERROR_CORRECTION_LEVEL,ecLevel);}
return result;}
reset(){}
static extractPureBits(image){const leftTopBlack=image.getTopLeftOnBit();const rightBottomBlack=image.getBottomRightOnBit();if(leftTopBlack==null||rightBottomBlack==null){throw new NotFoundException();}
const moduleSize=this.moduleSize(leftTopBlack,image);let top=leftTopBlack[1];const bottom=rightBottomBlack[1];let left=leftTopBlack[0];const right=rightBottomBlack[0];const matrixWidth=(right-left+1)/moduleSize;const matrixHeight=(bottom-top+1)/moduleSize;if(matrixWidth<=0||matrixHeight<=0){throw new NotFoundException();}
const nudge=moduleSize/2;top+=nudge;left+=nudge;const bits=new BitMatrix(matrixWidth,matrixHeight);for(let y=0;y<matrixHeight;y++){const iOffset=top+y*moduleSize;for(let x=0;x<matrixWidth;x++){if(image.get(left+x*moduleSize,iOffset)){bits.set(x,y);}}}
return bits;}
static moduleSize(leftTopBlack,image){const width=image.getWidth();let x=leftTopBlack[0];const y=leftTopBlack[1];while(x<width&&image.get(x,y)){x++;}
if(x===width){throw new NotFoundException();}
const moduleSize=x-leftTopBlack[0];if(moduleSize===0){throw new NotFoundException();}
return moduleSize;}}
DataMatrixReader.NO_POINTS=[];class BrowserDatamatrixCodeReader extends BrowserCodeReader{constructor(timeBetweenScansMillis=500){super(new DataMatrixReader(),timeBetweenScansMillis);}}
var ErrorCorrectionLevelValues;(function(ErrorCorrectionLevelValues){ErrorCorrectionLevelValues[ErrorCorrectionLevelValues["L"]=0]="L";ErrorCorrectionLevelValues[ErrorCorrectionLevelValues["M"]=1]="M";ErrorCorrectionLevelValues[ErrorCorrectionLevelValues["Q"]=2]="Q";ErrorCorrectionLevelValues[ErrorCorrectionLevelValues["H"]=3]="H";})(ErrorCorrectionLevelValues||(ErrorCorrectionLevelValues={}));class ErrorCorrectionLevel{constructor(value,stringValue,bits){this.value=value;this.stringValue=stringValue;this.bits=bits;ErrorCorrectionLevel.FOR_BITS.set(bits,this);ErrorCorrectionLevel.FOR_VALUE.set(value,this);}
getValue(){return this.value;}
getBits(){return this.bits;}
static fromString(s){switch(s){case'L':return ErrorCorrectionLevel.L;case'M':return ErrorCorrectionLevel.M;case'Q':return ErrorCorrectionLevel.Q;case'H':return ErrorCorrectionLevel.H;default:throw new ArgumentException(s+'not available');}}
toString(){return this.stringValue;}
equals(o){if(!(o instanceof ErrorCorrectionLevel)){return false;}
const other=o;return this.value===other.value;}
static forBits(bits){if(bits<0||bits>=ErrorCorrectionLevel.FOR_BITS.size){throw new IllegalArgumentException();}
return ErrorCorrectionLevel.FOR_BITS.get(bits);}}
ErrorCorrectionLevel.FOR_BITS=new Map();ErrorCorrectionLevel.FOR_VALUE=new Map();ErrorCorrectionLevel.L=new ErrorCorrectionLevel(ErrorCorrectionLevelValues.L,'L',0x01);ErrorCorrectionLevel.M=new ErrorCorrectionLevel(ErrorCorrectionLevelValues.M,'M',0x00);ErrorCorrectionLevel.Q=new ErrorCorrectionLevel(ErrorCorrectionLevelValues.Q,'Q',0x03);ErrorCorrectionLevel.H=new ErrorCorrectionLevel(ErrorCorrectionLevelValues.H,'H',0x02);class FormatInformation{constructor(formatInfo){this.errorCorrectionLevel=ErrorCorrectionLevel.forBits((formatInfo>>3)&0x03);this.dataMask=(formatInfo&0x07);}
static numBitsDiffering(a,b){return Integer.bitCount(a^b);}
static decodeFormatInformation(maskedFormatInfo1,maskedFormatInfo2){const formatInfo=FormatInformation.doDecodeFormatInformation(maskedFormatInfo1,maskedFormatInfo2);if(formatInfo!==null){return formatInfo;}
return FormatInformation.doDecodeFormatInformation(maskedFormatInfo1^FormatInformation.FORMAT_INFO_MASK_QR,maskedFormatInfo2^FormatInformation.FORMAT_INFO_MASK_QR);}
static doDecodeFormatInformation(maskedFormatInfo1,maskedFormatInfo2){let bestDifference=Number.MAX_SAFE_INTEGER;let bestFormatInfo=0;for(const decodeInfo of FormatInformation.FORMAT_INFO_DECODE_LOOKUP){const targetInfo=decodeInfo[0];if(targetInfo===maskedFormatInfo1||targetInfo===maskedFormatInfo2){return new FormatInformation(decodeInfo[1]);}
let bitsDifference=FormatInformation.numBitsDiffering(maskedFormatInfo1,targetInfo);if(bitsDifference<bestDifference){bestFormatInfo=decodeInfo[1];bestDifference=bitsDifference;}
if(maskedFormatInfo1!==maskedFormatInfo2){bitsDifference=FormatInformation.numBitsDiffering(maskedFormatInfo2,targetInfo);if(bitsDifference<bestDifference){bestFormatInfo=decodeInfo[1];bestDifference=bitsDifference;}}}
if(bestDifference<=3){return new FormatInformation(bestFormatInfo);}
return null;}
getErrorCorrectionLevel(){return this.errorCorrectionLevel;}
getDataMask(){return this.dataMask;}
hashCode(){return(this.errorCorrectionLevel.getBits()<<3)|this.dataMask;}
equals(o){if(!(o instanceof FormatInformation)){return false;}
const other=o;return this.errorCorrectionLevel===other.errorCorrectionLevel&&this.dataMask===other.dataMask;}}
FormatInformation.FORMAT_INFO_MASK_QR=0x5412;FormatInformation.FORMAT_INFO_DECODE_LOOKUP=[Int32Array.from([0x5412,0x00]),Int32Array.from([0x5125,0x01]),Int32Array.from([0x5E7C,0x02]),Int32Array.from([0x5B4B,0x03]),Int32Array.from([0x45F9,0x04]),Int32Array.from([0x40CE,0x05]),Int32Array.from([0x4F97,0x06]),Int32Array.from([0x4AA0,0x07]),Int32Array.from([0x77C4,0x08]),Int32Array.from([0x72F3,0x09]),Int32Array.from([0x7DAA,0x0A]),Int32Array.from([0x789D,0x0B]),Int32Array.from([0x662F,0x0C]),Int32Array.from([0x6318,0x0D]),Int32Array.from([0x6C41,0x0E]),Int32Array.from([0x6976,0x0F]),Int32Array.from([0x1689,0x10]),Int32Array.from([0x13BE,0x11]),Int32Array.from([0x1CE7,0x12]),Int32Array.from([0x19D0,0x13]),Int32Array.from([0x0762,0x14]),Int32Array.from([0x0255,0x15]),Int32Array.from([0x0D0C,0x16]),Int32Array.from([0x083B,0x17]),Int32Array.from([0x355F,0x18]),Int32Array.from([0x3068,0x19]),Int32Array.from([0x3F31,0x1A]),Int32Array.from([0x3A06,0x1B]),Int32Array.from([0x24B4,0x1C]),Int32Array.from([0x2183,0x1D]),Int32Array.from([0x2EDA,0x1E]),Int32Array.from([0x2BED,0x1F]),];class ECBlocks$1{constructor(ecCodewordsPerBlock,...ecBlocks){this.ecCodewordsPerBlock=ecCodewordsPerBlock;this.ecBlocks=ecBlocks;}
getECCodewordsPerBlock(){return this.ecCodewordsPerBlock;}
getNumBlocks(){let total=0;const ecBlocks=this.ecBlocks;for(const ecBlock of ecBlocks){total+=ecBlock.getCount();}
return total;}
getTotalECCodewords(){return this.ecCodewordsPerBlock*this.getNumBlocks();}
getECBlocks(){return this.ecBlocks;}}
class ECB$1{constructor(count,dataCodewords){this.count=count;this.dataCodewords=dataCodewords;}
getCount(){return this.count;}
getDataCodewords(){return this.dataCodewords;}}
class Version$1{constructor(versionNumber,alignmentPatternCenters,...ecBlocks){this.versionNumber=versionNumber;this.alignmentPatternCenters=alignmentPatternCenters;this.ecBlocks=ecBlocks;let total=0;const ecCodewords=ecBlocks[0].getECCodewordsPerBlock();const ecbArray=ecBlocks[0].getECBlocks();for(const ecBlock of ecbArray){total+=ecBlock.getCount()*(ecBlock.getDataCodewords()+ecCodewords);}
this.totalCodewords=total;}
getVersionNumber(){return this.versionNumber;}
getAlignmentPatternCenters(){return this.alignmentPatternCenters;}
getTotalCodewords(){return this.totalCodewords;}
getDimensionForVersion(){return 17+4*this.versionNumber;}
getECBlocksForLevel(ecLevel){return this.ecBlocks[ecLevel.getValue()];}
static getProvisionalVersionForDimension(dimension){if(dimension%4!==1){throw new FormatException();}
try{return this.getVersionForNumber((dimension-17)/4);}
catch(ignored){throw new FormatException();}}
static getVersionForNumber(versionNumber){if(versionNumber<1||versionNumber>40){throw new IllegalArgumentException();}
return Version$1.VERSIONS[versionNumber-1];}
static decodeVersionInformation(versionBits){let bestDifference=Number.MAX_SAFE_INTEGER;let bestVersion=0;for(let i=0;i<Version$1.VERSION_DECODE_INFO.length;i++){const targetVersion=Version$1.VERSION_DECODE_INFO[i];if(targetVersion===versionBits){return Version$1.getVersionForNumber(i+7);}
const bitsDifference=FormatInformation.numBitsDiffering(versionBits,targetVersion);if(bitsDifference<bestDifference){bestVersion=i+7;bestDifference=bitsDifference;}}
if(bestDifference<=3){return Version$1.getVersionForNumber(bestVersion);}
return null;}
buildFunctionPattern(){const dimension=this.getDimensionForVersion();const bitMatrix=new BitMatrix(dimension);bitMatrix.setRegion(0,0,9,9);bitMatrix.setRegion(dimension-8,0,8,9);bitMatrix.setRegion(0,dimension-8,9,8);const max=this.alignmentPatternCenters.length;for(let x=0;x<max;x++){const i=this.alignmentPatternCenters[x]-2;for(let y=0;y<max;y++){if((x===0&&(y===0||y===max-1))||(x===max-1&&y===0)){continue;}
bitMatrix.setRegion(this.alignmentPatternCenters[y]-2,i,5,5);}}
bitMatrix.setRegion(6,9,1,dimension-17);bitMatrix.setRegion(9,6,dimension-17,1);if(this.versionNumber>6){bitMatrix.setRegion(dimension-11,0,3,6);bitMatrix.setRegion(0,dimension-11,6,3);}
return bitMatrix;}
toString(){return''+this.versionNumber;}}
Version$1.VERSION_DECODE_INFO=Int32Array.from([0x07C94,0x085BC,0x09A99,0x0A4D3,0x0BBF6,0x0C762,0x0D847,0x0E60D,0x0F928,0x10B78,0x1145D,0x12A17,0x13532,0x149A6,0x15683,0x168C9,0x177EC,0x18EC4,0x191E1,0x1AFAB,0x1B08E,0x1CC1A,0x1D33F,0x1ED75,0x1F250,0x209D5,0x216F0,0x228BA,0x2379F,0x24B0B,0x2542E,0x26A64,0x27541,0x28C69]);Version$1.VERSIONS=[new Version$1(1,new Int32Array(0),new ECBlocks$1(7,new ECB$1(1,19)),new ECBlocks$1(10,new ECB$1(1,16)),new ECBlocks$1(13,new ECB$1(1,13)),new ECBlocks$1(17,new ECB$1(1,9))),new Version$1(2,Int32Array.from([6,18]),new ECBlocks$1(10,new ECB$1(1,34)),new ECBlocks$1(16,new ECB$1(1,28)),new ECBlocks$1(22,new ECB$1(1,22)),new ECBlocks$1(28,new ECB$1(1,16))),new Version$1(3,Int32Array.from([6,22]),new ECBlocks$1(15,new ECB$1(1,55)),new ECBlocks$1(26,new ECB$1(1,44)),new ECBlocks$1(18,new ECB$1(2,17)),new ECBlocks$1(22,new ECB$1(2,13))),new Version$1(4,Int32Array.from([6,26]),new ECBlocks$1(20,new ECB$1(1,80)),new ECBlocks$1(18,new ECB$1(2,32)),new ECBlocks$1(26,new ECB$1(2,24)),new ECBlocks$1(16,new ECB$1(4,9))),new Version$1(5,Int32Array.from([6,30]),new ECBlocks$1(26,new ECB$1(1,108)),new ECBlocks$1(24,new ECB$1(2,43)),new ECBlocks$1(18,new ECB$1(2,15),new ECB$1(2,16)),new ECBlocks$1(22,new ECB$1(2,11),new ECB$1(2,12))),new Version$1(6,Int32Array.from([6,34]),new ECBlocks$1(18,new ECB$1(2,68)),new ECBlocks$1(16,new ECB$1(4,27)),new ECBlocks$1(24,new ECB$1(4,19)),new ECBlocks$1(28,new ECB$1(4,15))),new Version$1(7,Int32Array.from([6,22,38]),new ECBlocks$1(20,new ECB$1(2,78)),new ECBlocks$1(18,new ECB$1(4,31)),new ECBlocks$1(18,new ECB$1(2,14),new ECB$1(4,15)),new ECBlocks$1(26,new ECB$1(4,13),new ECB$1(1,14))),new Version$1(8,Int32Array.from([6,24,42]),new ECBlocks$1(24,new ECB$1(2,97)),new ECBlocks$1(22,new ECB$1(2,38),new ECB$1(2,39)),new ECBlocks$1(22,new ECB$1(4,18),new ECB$1(2,19)),new ECBlocks$1(26,new ECB$1(4,14),new ECB$1(2,15))),new Version$1(9,Int32Array.from([6,26,46]),new ECBlocks$1(30,new ECB$1(2,116)),new ECBlocks$1(22,new ECB$1(3,36),new ECB$1(2,37)),new ECBlocks$1(20,new ECB$1(4,16),new ECB$1(4,17)),new ECBlocks$1(24,new ECB$1(4,12),new ECB$1(4,13))),new Version$1(10,Int32Array.from([6,28,50]),new ECBlocks$1(18,new ECB$1(2,68),new ECB$1(2,69)),new ECBlocks$1(26,new ECB$1(4,43),new ECB$1(1,44)),new ECBlocks$1(24,new ECB$1(6,19),new ECB$1(2,20)),new ECBlocks$1(28,new ECB$1(6,15),new ECB$1(2,16))),new Version$1(11,Int32Array.from([6,30,54]),new ECBlocks$1(20,new ECB$1(4,81)),new ECBlocks$1(30,new ECB$1(1,50),new ECB$1(4,51)),new ECBlocks$1(28,new ECB$1(4,22),new ECB$1(4,23)),new ECBlocks$1(24,new ECB$1(3,12),new ECB$1(8,13))),new Version$1(12,Int32Array.from([6,32,58]),new ECBlocks$1(24,new ECB$1(2,92),new ECB$1(2,93)),new ECBlocks$1(22,new ECB$1(6,36),new ECB$1(2,37)),new ECBlocks$1(26,new ECB$1(4,20),new ECB$1(6,21)),new ECBlocks$1(28,new ECB$1(7,14),new ECB$1(4,15))),new Version$1(13,Int32Array.from([6,34,62]),new ECBlocks$1(26,new ECB$1(4,107)),new ECBlocks$1(22,new ECB$1(8,37),new ECB$1(1,38)),new ECBlocks$1(24,new ECB$1(8,20),new ECB$1(4,21)),new ECBlocks$1(22,new ECB$1(12,11),new ECB$1(4,12))),new Version$1(14,Int32Array.from([6,26,46,66]),new ECBlocks$1(30,new ECB$1(3,115),new ECB$1(1,116)),new ECBlocks$1(24,new ECB$1(4,40),new ECB$1(5,41)),new ECBlocks$1(20,new ECB$1(11,16),new ECB$1(5,17)),new ECBlocks$1(24,new ECB$1(11,12),new ECB$1(5,13))),new Version$1(15,Int32Array.from([6,26,48,70]),new ECBlocks$1(22,new ECB$1(5,87),new ECB$1(1,88)),new ECBlocks$1(24,new ECB$1(5,41),new ECB$1(5,42)),new ECBlocks$1(30,new ECB$1(5,24),new ECB$1(7,25)),new ECBlocks$1(24,new ECB$1(11,12),new ECB$1(7,13))),new Version$1(16,Int32Array.from([6,26,50,74]),new ECBlocks$1(24,new ECB$1(5,98),new ECB$1(1,99)),new ECBlocks$1(28,new ECB$1(7,45),new ECB$1(3,46)),new ECBlocks$1(24,new ECB$1(15,19),new ECB$1(2,20)),new ECBlocks$1(30,new ECB$1(3,15),new ECB$1(13,16))),new Version$1(17,Int32Array.from([6,30,54,78]),new ECBlocks$1(28,new ECB$1(1,107),new ECB$1(5,108)),new ECBlocks$1(28,new ECB$1(10,46),new ECB$1(1,47)),new ECBlocks$1(28,new ECB$1(1,22),new ECB$1(15,23)),new ECBlocks$1(28,new ECB$1(2,14),new ECB$1(17,15))),new Version$1(18,Int32Array.from([6,30,56,82]),new ECBlocks$1(30,new ECB$1(5,120),new ECB$1(1,121)),new ECBlocks$1(26,new ECB$1(9,43),new ECB$1(4,44)),new ECBlocks$1(28,new ECB$1(17,22),new ECB$1(1,23)),new ECBlocks$1(28,new ECB$1(2,14),new ECB$1(19,15))),new Version$1(19,Int32Array.from([6,30,58,86]),new ECBlocks$1(28,new ECB$1(3,113),new ECB$1(4,114)),new ECBlocks$1(26,new ECB$1(3,44),new ECB$1(11,45)),new ECBlocks$1(26,new ECB$1(17,21),new ECB$1(4,22)),new ECBlocks$1(26,new ECB$1(9,13),new ECB$1(16,14))),new Version$1(20,Int32Array.from([6,34,62,90]),new ECBlocks$1(28,new ECB$1(3,107),new ECB$1(5,108)),new ECBlocks$1(26,new ECB$1(3,41),new ECB$1(13,42)),new ECBlocks$1(30,new ECB$1(15,24),new ECB$1(5,25)),new ECBlocks$1(28,new ECB$1(15,15),new ECB$1(10,16))),new Version$1(21,Int32Array.from([6,28,50,72,94]),new ECBlocks$1(28,new ECB$1(4,116),new ECB$1(4,117)),new ECBlocks$1(26,new ECB$1(17,42)),new ECBlocks$1(28,new ECB$1(17,22),new ECB$1(6,23)),new ECBlocks$1(30,new ECB$1(19,16),new ECB$1(6,17))),new Version$1(22,Int32Array.from([6,26,50,74,98]),new ECBlocks$1(28,new ECB$1(2,111),new ECB$1(7,112)),new ECBlocks$1(28,new ECB$1(17,46)),new ECBlocks$1(30,new ECB$1(7,24),new ECB$1(16,25)),new ECBlocks$1(24,new ECB$1(34,13))),new Version$1(23,Int32Array.from([6,30,54,78,102]),new ECBlocks$1(30,new ECB$1(4,121),new ECB$1(5,122)),new ECBlocks$1(28,new ECB$1(4,47),new ECB$1(14,48)),new ECBlocks$1(30,new ECB$1(11,24),new ECB$1(14,25)),new ECBlocks$1(30,new ECB$1(16,15),new ECB$1(14,16))),new Version$1(24,Int32Array.from([6,28,54,80,106]),new ECBlocks$1(30,new ECB$1(6,117),new ECB$1(4,118)),new ECBlocks$1(28,new ECB$1(6,45),new ECB$1(14,46)),new ECBlocks$1(30,new ECB$1(11,24),new ECB$1(16,25)),new ECBlocks$1(30,new ECB$1(30,16),new ECB$1(2,17))),new Version$1(25,Int32Array.from([6,32,58,84,110]),new ECBlocks$1(26,new ECB$1(8,106),new ECB$1(4,107)),new ECBlocks$1(28,new ECB$1(8,47),new ECB$1(13,48)),new ECBlocks$1(30,new ECB$1(7,24),new ECB$1(22,25)),new ECBlocks$1(30,new ECB$1(22,15),new ECB$1(13,16))),new Version$1(26,Int32Array.from([6,30,58,86,114]),new ECBlocks$1(28,new ECB$1(10,114),new ECB$1(2,115)),new ECBlocks$1(28,new ECB$1(19,46),new ECB$1(4,47)),new ECBlocks$1(28,new ECB$1(28,22),new ECB$1(6,23)),new ECBlocks$1(30,new ECB$1(33,16),new ECB$1(4,17))),new Version$1(27,Int32Array.from([6,34,62,90,118]),new ECBlocks$1(30,new ECB$1(8,122),new ECB$1(4,123)),new ECBlocks$1(28,new ECB$1(22,45),new ECB$1(3,46)),new ECBlocks$1(30,new ECB$1(8,23),new ECB$1(26,24)),new ECBlocks$1(30,new ECB$1(12,15),new ECB$1(28,16))),new Version$1(28,Int32Array.from([6,26,50,74,98,122]),new ECBlocks$1(30,new ECB$1(3,117),new ECB$1(10,118)),new ECBlocks$1(28,new ECB$1(3,45),new ECB$1(23,46)),new ECBlocks$1(30,new ECB$1(4,24),new ECB$1(31,25)),new ECBlocks$1(30,new ECB$1(11,15),new ECB$1(31,16))),new Version$1(29,Int32Array.from([6,30,54,78,102,126]),new ECBlocks$1(30,new ECB$1(7,116),new ECB$1(7,117)),new ECBlocks$1(28,new ECB$1(21,45),new ECB$1(7,46)),new ECBlocks$1(30,new ECB$1(1,23),new ECB$1(37,24)),new ECBlocks$1(30,new ECB$1(19,15),new ECB$1(26,16))),new Version$1(30,Int32Array.from([6,26,52,78,104,130]),new ECBlocks$1(30,new ECB$1(5,115),new ECB$1(10,116)),new ECBlocks$1(28,new ECB$1(19,47),new ECB$1(10,48)),new ECBlocks$1(30,new ECB$1(15,24),new ECB$1(25,25)),new ECBlocks$1(30,new ECB$1(23,15),new ECB$1(25,16))),new Version$1(31,Int32Array.from([6,30,56,82,108,134]),new ECBlocks$1(30,new ECB$1(13,115),new ECB$1(3,116)),new ECBlocks$1(28,new ECB$1(2,46),new ECB$1(29,47)),new ECBlocks$1(30,new ECB$1(42,24),new ECB$1(1,25)),new ECBlocks$1(30,new ECB$1(23,15),new ECB$1(28,16))),new Version$1(32,Int32Array.from([6,34,60,86,112,138]),new ECBlocks$1(30,new ECB$1(17,115)),new ECBlocks$1(28,new ECB$1(10,46),new ECB$1(23,47)),new ECBlocks$1(30,new ECB$1(10,24),new ECB$1(35,25)),new ECBlocks$1(30,new ECB$1(19,15),new ECB$1(35,16))),new Version$1(33,Int32Array.from([6,30,58,86,114,142]),new ECBlocks$1(30,new ECB$1(17,115),new ECB$1(1,116)),new ECBlocks$1(28,new ECB$1(14,46),new ECB$1(21,47)),new ECBlocks$1(30,new ECB$1(29,24),new ECB$1(19,25)),new ECBlocks$1(30,new ECB$1(11,15),new ECB$1(46,16))),new Version$1(34,Int32Array.from([6,34,62,90,118,146]),new ECBlocks$1(30,new ECB$1(13,115),new ECB$1(6,116)),new ECBlocks$1(28,new ECB$1(14,46),new ECB$1(23,47)),new ECBlocks$1(30,new ECB$1(44,24),new ECB$1(7,25)),new ECBlocks$1(30,new ECB$1(59,16),new ECB$1(1,17))),new Version$1(35,Int32Array.from([6,30,54,78,102,126,150]),new ECBlocks$1(30,new ECB$1(12,121),new ECB$1(7,122)),new ECBlocks$1(28,new ECB$1(12,47),new ECB$1(26,48)),new ECBlocks$1(30,new ECB$1(39,24),new ECB$1(14,25)),new ECBlocks$1(30,new ECB$1(22,15),new ECB$1(41,16))),new Version$1(36,Int32Array.from([6,24,50,76,102,128,154]),new ECBlocks$1(30,new ECB$1(6,121),new ECB$1(14,122)),new ECBlocks$1(28,new ECB$1(6,47),new ECB$1(34,48)),new ECBlocks$1(30,new ECB$1(46,24),new ECB$1(10,25)),new ECBlocks$1(30,new ECB$1(2,15),new ECB$1(64,16))),new Version$1(37,Int32Array.from([6,28,54,80,106,132,158]),new ECBlocks$1(30,new ECB$1(17,122),new ECB$1(4,123)),new ECBlocks$1(28,new ECB$1(29,46),new ECB$1(14,47)),new ECBlocks$1(30,new ECB$1(49,24),new ECB$1(10,25)),new ECBlocks$1(30,new ECB$1(24,15),new ECB$1(46,16))),new Version$1(38,Int32Array.from([6,32,58,84,110,136,162]),new ECBlocks$1(30,new ECB$1(4,122),new ECB$1(18,123)),new ECBlocks$1(28,new ECB$1(13,46),new ECB$1(32,47)),new ECBlocks$1(30,new ECB$1(48,24),new ECB$1(14,25)),new ECBlocks$1(30,new ECB$1(42,15),new ECB$1(32,16))),new Version$1(39,Int32Array.from([6,26,54,82,110,138,166]),new ECBlocks$1(30,new ECB$1(20,117),new ECB$1(4,118)),new ECBlocks$1(28,new ECB$1(40,47),new ECB$1(7,48)),new ECBlocks$1(30,new ECB$1(43,24),new ECB$1(22,25)),new ECBlocks$1(30,new ECB$1(10,15),new ECB$1(67,16))),new Version$1(40,Int32Array.from([6,30,58,86,114,142,170]),new ECBlocks$1(30,new ECB$1(19,118),new ECB$1(6,119)),new ECBlocks$1(28,new ECB$1(18,47),new ECB$1(31,48)),new ECBlocks$1(30,new ECB$1(34,24),new ECB$1(34,25)),new ECBlocks$1(30,new ECB$1(20,15),new ECB$1(61,16)))];var DataMaskValues;(function(DataMaskValues){DataMaskValues[DataMaskValues["DATA_MASK_000"]=0]="DATA_MASK_000";DataMaskValues[DataMaskValues["DATA_MASK_001"]=1]="DATA_MASK_001";DataMaskValues[DataMaskValues["DATA_MASK_010"]=2]="DATA_MASK_010";DataMaskValues[DataMaskValues["DATA_MASK_011"]=3]="DATA_MASK_011";DataMaskValues[DataMaskValues["DATA_MASK_100"]=4]="DATA_MASK_100";DataMaskValues[DataMaskValues["DATA_MASK_101"]=5]="DATA_MASK_101";DataMaskValues[DataMaskValues["DATA_MASK_110"]=6]="DATA_MASK_110";DataMaskValues[DataMaskValues["DATA_MASK_111"]=7]="DATA_MASK_111";})(DataMaskValues||(DataMaskValues={}));class DataMask{constructor(value,isMasked){this.value=value;this.isMasked=isMasked;}
unmaskBitMatrix(bits,dimension){for(let i=0;i<dimension;i++){for(let j=0;j<dimension;j++){if(this.isMasked(i,j)){bits.flip(j,i);}}}}}
DataMask.values=new Map([[DataMaskValues.DATA_MASK_000,new DataMask(DataMaskValues.DATA_MASK_000,(i,j)=>{return((i+j)&0x01)===0;})],[DataMaskValues.DATA_MASK_001,new DataMask(DataMaskValues.DATA_MASK_001,(i,j)=>{return(i&0x01)===0;})],[DataMaskValues.DATA_MASK_010,new DataMask(DataMaskValues.DATA_MASK_010,(i,j)=>{return j%3===0;})],[DataMaskValues.DATA_MASK_011,new DataMask(DataMaskValues.DATA_MASK_011,(i,j)=>{return(i+j)%3===0;})],[DataMaskValues.DATA_MASK_100,new DataMask(DataMaskValues.DATA_MASK_100,(i,j)=>{return((Math.floor(i/2)+Math.floor(j/3))&0x01)===0;})],[DataMaskValues.DATA_MASK_101,new DataMask(DataMaskValues.DATA_MASK_101,(i,j)=>{return(i*j)%6===0;})],[DataMaskValues.DATA_MASK_110,new DataMask(DataMaskValues.DATA_MASK_110,(i,j)=>{return((i*j)%6)<3;})],[DataMaskValues.DATA_MASK_111,new DataMask(DataMaskValues.DATA_MASK_111,(i,j)=>{return((i+j+((i*j)%3))&0x01)===0;})],]);class BitMatrixParser$1{constructor(bitMatrix){const dimension=bitMatrix.getHeight();if(dimension<21||(dimension&0x03)!==1){throw new FormatException();}
this.bitMatrix=bitMatrix;}
readFormatInformation(){if(this.parsedFormatInfo!==null&&this.parsedFormatInfo!==undefined){return this.parsedFormatInfo;}
let formatInfoBits1=0;for(let i=0;i<6;i++){formatInfoBits1=this.copyBit(i,8,formatInfoBits1);}
formatInfoBits1=this.copyBit(7,8,formatInfoBits1);formatInfoBits1=this.copyBit(8,8,formatInfoBits1);formatInfoBits1=this.copyBit(8,7,formatInfoBits1);for(let j=5;j>=0;j--){formatInfoBits1=this.copyBit(8,j,formatInfoBits1);}
const dimension=this.bitMatrix.getHeight();let formatInfoBits2=0;const jMin=dimension-7;for(let j=dimension-1;j>=jMin;j--){formatInfoBits2=this.copyBit(8,j,formatInfoBits2);}
for(let i=dimension-8;i<dimension;i++){formatInfoBits2=this.copyBit(i,8,formatInfoBits2);}
this.parsedFormatInfo=FormatInformation.decodeFormatInformation(formatInfoBits1,formatInfoBits2);if(this.parsedFormatInfo!==null){return this.parsedFormatInfo;}
throw new FormatException();}
readVersion(){if(this.parsedVersion!==null&&this.parsedVersion!==undefined){return this.parsedVersion;}
const dimension=this.bitMatrix.getHeight();const provisionalVersion=Math.floor((dimension-17)/4);if(provisionalVersion<=6){return Version$1.getVersionForNumber(provisionalVersion);}
let versionBits=0;const ijMin=dimension-11;for(let j=5;j>=0;j--){for(let i=dimension-9;i>=ijMin;i--){versionBits=this.copyBit(i,j,versionBits);}}
let theParsedVersion=Version$1.decodeVersionInformation(versionBits);if(theParsedVersion!==null&&theParsedVersion.getDimensionForVersion()===dimension){this.parsedVersion=theParsedVersion;return theParsedVersion;}
versionBits=0;for(let i=5;i>=0;i--){for(let j=dimension-9;j>=ijMin;j--){versionBits=this.copyBit(i,j,versionBits);}}
theParsedVersion=Version$1.decodeVersionInformation(versionBits);if(theParsedVersion!==null&&theParsedVersion.getDimensionForVersion()===dimension){this.parsedVersion=theParsedVersion;return theParsedVersion;}
throw new FormatException();}
copyBit(i,j,versionBits){const bit=this.isMirror?this.bitMatrix.get(j,i):this.bitMatrix.get(i,j);return bit?(versionBits<<1)|0x1:versionBits<<1;}
readCodewords(){const formatInfo=this.readFormatInformation();const version=this.readVersion();const dataMask=DataMask.values.get(formatInfo.getDataMask());const dimension=this.bitMatrix.getHeight();dataMask.unmaskBitMatrix(this.bitMatrix,dimension);const functionPattern=version.buildFunctionPattern();let readingUp=true;const result=new Uint8Array(version.getTotalCodewords());let resultOffset=0;let currentByte=0;let bitsRead=0;for(let j=dimension-1;j>0;j-=2){if(j===6){j--;}
for(let count=0;count<dimension;count++){const i=readingUp?dimension-1-count:count;for(let col=0;col<2;col++){if(!functionPattern.get(j-col,i)){bitsRead++;currentByte<<=1;if(this.bitMatrix.get(j-col,i)){currentByte|=1;}
if(bitsRead===8){result[resultOffset++]=currentByte;bitsRead=0;currentByte=0;}}}}
readingUp=!readingUp;}
if(resultOffset!==version.getTotalCodewords()){throw new FormatException();}
return result;}
remask(){if(this.parsedFormatInfo===null){return;}
const dataMask=DataMask.values[this.parsedFormatInfo.getDataMask()];const dimension=this.bitMatrix.getHeight();dataMask.unmaskBitMatrix(this.bitMatrix,dimension);}
setMirror(isMirror){this.parsedVersion=null;this.parsedFormatInfo=null;this.isMirror=isMirror;}
mirror(){const bitMatrix=this.bitMatrix;for(let x=0,width=bitMatrix.getWidth();x<width;x++){for(let y=x+1,height=bitMatrix.getHeight();y<height;y++){if(bitMatrix.get(x,y)!==bitMatrix.get(y,x)){bitMatrix.flip(y,x);bitMatrix.flip(x,y);}}}}}
class DataBlock$1{constructor(numDataCodewords,codewords){this.numDataCodewords=numDataCodewords;this.codewords=codewords;}
static getDataBlocks(rawCodewords,version,ecLevel){if(rawCodewords.length!==version.getTotalCodewords()){throw new IllegalArgumentException();}
const ecBlocks=version.getECBlocksForLevel(ecLevel);let totalBlocks=0;const ecBlockArray=ecBlocks.getECBlocks();for(const ecBlock of ecBlockArray){totalBlocks+=ecBlock.getCount();}
const result=new Array(totalBlocks);let numResultBlocks=0;for(const ecBlock of ecBlockArray){for(let i=0;i<ecBlock.getCount();i++){const numDataCodewords=ecBlock.getDataCodewords();const numBlockCodewords=ecBlocks.getECCodewordsPerBlock()+numDataCodewords;result[numResultBlocks++]=new DataBlock$1(numDataCodewords,new Uint8Array(numBlockCodewords));}}
const shorterBlocksTotalCodewords=result[0].codewords.length;let longerBlocksStartAt=result.length-1;while(longerBlocksStartAt>=0){const numCodewords=result[longerBlocksStartAt].codewords.length;if(numCodewords===shorterBlocksTotalCodewords){break;}
longerBlocksStartAt--;}
longerBlocksStartAt++;const shorterBlocksNumDataCodewords=shorterBlocksTotalCodewords-ecBlocks.getECCodewordsPerBlock();let rawCodewordsOffset=0;for(let i=0;i<shorterBlocksNumDataCodewords;i++){for(let j=0;j<numResultBlocks;j++){result[j].codewords[i]=rawCodewords[rawCodewordsOffset++];}}
for(let j=longerBlocksStartAt;j<numResultBlocks;j++){result[j].codewords[shorterBlocksNumDataCodewords]=rawCodewords[rawCodewordsOffset++];}
const max=result[0].codewords.length;for(let i=shorterBlocksNumDataCodewords;i<max;i++){for(let j=0;j<numResultBlocks;j++){const iOffset=j<longerBlocksStartAt?i:i+1;result[j].codewords[iOffset]=rawCodewords[rawCodewordsOffset++];}}
return result;}
getNumDataCodewords(){return this.numDataCodewords;}
getCodewords(){return this.codewords;}}
var ModeValues;(function(ModeValues){ModeValues[ModeValues["TERMINATOR"]=0]="TERMINATOR";ModeValues[ModeValues["NUMERIC"]=1]="NUMERIC";ModeValues[ModeValues["ALPHANUMERIC"]=2]="ALPHANUMERIC";ModeValues[ModeValues["STRUCTURED_APPEND"]=3]="STRUCTURED_APPEND";ModeValues[ModeValues["BYTE"]=4]="BYTE";ModeValues[ModeValues["ECI"]=5]="ECI";ModeValues[ModeValues["KANJI"]=6]="KANJI";ModeValues[ModeValues["FNC1_FIRST_POSITION"]=7]="FNC1_FIRST_POSITION";ModeValues[ModeValues["FNC1_SECOND_POSITION"]=8]="FNC1_SECOND_POSITION";ModeValues[ModeValues["HANZI"]=9]="HANZI";})(ModeValues||(ModeValues={}));class Mode$1{constructor(value,stringValue,characterCountBitsForVersions,bits){this.value=value;this.stringValue=stringValue;this.characterCountBitsForVersions=characterCountBitsForVersions;this.bits=bits;Mode$1.FOR_BITS.set(bits,this);Mode$1.FOR_VALUE.set(value,this);}
static forBits(bits){const mode=Mode$1.FOR_BITS.get(bits);if(undefined===mode){throw new IllegalArgumentException();}
return mode;}
getCharacterCountBits(version){const versionNumber=version.getVersionNumber();let offset;if(versionNumber<=9){offset=0;}
else if(versionNumber<=26){offset=1;}
else{offset=2;}
return this.characterCountBitsForVersions[offset];}
getValue(){return this.value;}
getBits(){return this.bits;}
equals(o){if(!(o instanceof Mode$1)){return false;}
const other=o;return this.value===other.value;}
toString(){return this.stringValue;}}
Mode$1.FOR_BITS=new Map();Mode$1.FOR_VALUE=new Map();Mode$1.TERMINATOR=new Mode$1(ModeValues.TERMINATOR,'TERMINATOR',Int32Array.from([0,0,0]),0x00);Mode$1.NUMERIC=new Mode$1(ModeValues.NUMERIC,'NUMERIC',Int32Array.from([10,12,14]),0x01);Mode$1.ALPHANUMERIC=new Mode$1(ModeValues.ALPHANUMERIC,'ALPHANUMERIC',Int32Array.from([9,11,13]),0x02);Mode$1.STRUCTURED_APPEND=new Mode$1(ModeValues.STRUCTURED_APPEND,'STRUCTURED_APPEND',Int32Array.from([0,0,0]),0x03);Mode$1.BYTE=new Mode$1(ModeValues.BYTE,'BYTE',Int32Array.from([8,16,16]),0x04);Mode$1.ECI=new Mode$1(ModeValues.ECI,'ECI',Int32Array.from([0,0,0]),0x07);Mode$1.KANJI=new Mode$1(ModeValues.KANJI,'KANJI',Int32Array.from([8,10,12]),0x08);Mode$1.FNC1_FIRST_POSITION=new Mode$1(ModeValues.FNC1_FIRST_POSITION,'FNC1_FIRST_POSITION',Int32Array.from([0,0,0]),0x05);Mode$1.FNC1_SECOND_POSITION=new Mode$1(ModeValues.FNC1_SECOND_POSITION,'FNC1_SECOND_POSITION',Int32Array.from([0,0,0]),0x09);Mode$1.HANZI=new Mode$1(ModeValues.HANZI,'HANZI',Int32Array.from([8,10,12]),0x0D);class DecodedBitStreamParser$1{static decode(bytes,version,ecLevel,hints){const bits=new BitSource(bytes);let result=new StringBuilder();const byteSegments=new Array();let symbolSequence=-1;let parityData=-1;try{let currentCharacterSetECI=null;let fc1InEffect=false;let mode;do{if(bits.available()<4){mode=Mode$1.TERMINATOR;}
else{const modeBits=bits.readBits(4);mode=Mode$1.forBits(modeBits);}
switch(mode){case Mode$1.TERMINATOR:break;case Mode$1.FNC1_FIRST_POSITION:case Mode$1.FNC1_SECOND_POSITION:fc1InEffect=true;break;case Mode$1.STRUCTURED_APPEND:if(bits.available()<16){throw new FormatException();}
symbolSequence=bits.readBits(8);parityData=bits.readBits(8);break;case Mode$1.ECI:const value=DecodedBitStreamParser$1.parseECIValue(bits);currentCharacterSetECI=CharacterSetECI.getCharacterSetECIByValue(value);if(currentCharacterSetECI===null){throw new FormatException();}
break;case Mode$1.HANZI:const subset=bits.readBits(4);const countHanzi=bits.readBits(mode.getCharacterCountBits(version));if(subset===DecodedBitStreamParser$1.GB2312_SUBSET){DecodedBitStreamParser$1.decodeHanziSegment(bits,result,countHanzi);}
break;default:const count=bits.readBits(mode.getCharacterCountBits(version));switch(mode){case Mode$1.NUMERIC:DecodedBitStreamParser$1.decodeNumericSegment(bits,result,count);break;case Mode$1.ALPHANUMERIC:DecodedBitStreamParser$1.decodeAlphanumericSegment(bits,result,count,fc1InEffect);break;case Mode$1.BYTE:DecodedBitStreamParser$1.decodeByteSegment(bits,result,count,currentCharacterSetECI,byteSegments,hints);break;case Mode$1.KANJI:DecodedBitStreamParser$1.decodeKanjiSegment(bits,result,count);break;default:throw new FormatException();}
break;}}while(mode!==Mode$1.TERMINATOR);}
catch(iae){throw new FormatException();}
return new DecoderResult(bytes,result.toString(),byteSegments.length===0?null:byteSegments,ecLevel===null?null:ecLevel.toString(),symbolSequence,parityData);}
static decodeHanziSegment(bits,result,count){if(count*13>bits.available()){throw new FormatException();}
const buffer=new Uint8Array(2*count);let offset=0;while(count>0){const twoBytes=bits.readBits(13);let assembledTwoBytes=(((twoBytes/0x060)<<8)&0xFFFFFFFF)|(twoBytes%0x060);if(assembledTwoBytes<0x003BF){assembledTwoBytes+=0x0A1A1;}
else{assembledTwoBytes+=0x0A6A1;}
buffer[offset]=((assembledTwoBytes>>8)&0xFF);buffer[offset+1]=(assembledTwoBytes&0xFF);offset+=2;count--;}
try{result.append(StringEncoding.decode(buffer,StringUtils.GB2312));}
catch(ignored){throw new FormatException(ignored);}}
static decodeKanjiSegment(bits,result,count){if(count*13>bits.available()){throw new FormatException();}
const buffer=new Uint8Array(2*count);let offset=0;while(count>0){const twoBytes=bits.readBits(13);let assembledTwoBytes=(((twoBytes/0x0C0)<<8)&0xFFFFFFFF)|(twoBytes%0x0C0);if(assembledTwoBytes<0x01F00){assembledTwoBytes+=0x08140;}
else{assembledTwoBytes+=0x0C140;}
buffer[offset]=(assembledTwoBytes>>8);buffer[offset+1]=assembledTwoBytes;offset+=2;count--;}
try{result.append(StringEncoding.decode(buffer,StringUtils.SHIFT_JIS));}
catch(ignored){throw new FormatException(ignored);}}
static decodeByteSegment(bits,result,count,currentCharacterSetECI,byteSegments,hints){if(8*count>bits.available()){throw new FormatException();}
const readBytes=new Uint8Array(count);for(let i=0;i<count;i++){readBytes[i]=bits.readBits(8);}
let encoding;if(currentCharacterSetECI===null){encoding=StringUtils.guessEncoding(readBytes,hints);}
else{encoding=currentCharacterSetECI.getName();}
try{result.append(StringEncoding.decode(readBytes,encoding));}
catch(ignored){throw new FormatException(ignored);}
byteSegments.push(readBytes);}
static toAlphaNumericChar(value){if(value>=DecodedBitStreamParser$1.ALPHANUMERIC_CHARS.length){throw new FormatException();}
return DecodedBitStreamParser$1.ALPHANUMERIC_CHARS[value];}
static decodeAlphanumericSegment(bits,result,count,fc1InEffect){const start=result.length();while(count>1){if(bits.available()<11){throw new FormatException();}
const nextTwoCharsBits=bits.readBits(11);result.append(DecodedBitStreamParser$1.toAlphaNumericChar(Math.floor(nextTwoCharsBits/45)));result.append(DecodedBitStreamParser$1.toAlphaNumericChar(nextTwoCharsBits%45));count-=2;}
if(count===1){if(bits.available()<6){throw new FormatException();}
result.append(DecodedBitStreamParser$1.toAlphaNumericChar(bits.readBits(6)));}
if(fc1InEffect){for(let i=start;i<result.length();i++){if(result.charAt(i)==='%'){if(i<result.length()-1&&result.charAt(i+1)==='%'){result.deleteCharAt(i+1);}
else{result.setCharAt(i,String.fromCharCode(0x1D));}}}}}
static decodeNumericSegment(bits,result,count){while(count>=3){if(bits.available()<10){throw new FormatException();}
const threeDigitsBits=bits.readBits(10);if(threeDigitsBits>=1000){throw new FormatException();}
result.append(DecodedBitStreamParser$1.toAlphaNumericChar(Math.floor(threeDigitsBits/100)));result.append(DecodedBitStreamParser$1.toAlphaNumericChar(Math.floor(threeDigitsBits/10)%10));result.append(DecodedBitStreamParser$1.toAlphaNumericChar(threeDigitsBits%10));count-=3;}
if(count===2){if(bits.available()<7){throw new FormatException();}
const twoDigitsBits=bits.readBits(7);if(twoDigitsBits>=100){throw new FormatException();}
result.append(DecodedBitStreamParser$1.toAlphaNumericChar(Math.floor(twoDigitsBits/10)));result.append(DecodedBitStreamParser$1.toAlphaNumericChar(twoDigitsBits%10));}
else if(count===1){if(bits.available()<4){throw new FormatException();}
const digitBits=bits.readBits(4);if(digitBits>=10){throw new FormatException();}
result.append(DecodedBitStreamParser$1.toAlphaNumericChar(digitBits));}}
static parseECIValue(bits){const firstByte=bits.readBits(8);if((firstByte&0x80)===0){return firstByte&0x7F;}
if((firstByte&0xC0)===0x80){const secondByte=bits.readBits(8);return(((firstByte&0x3F)<<8)&0xFFFFFFFF)|secondByte;}
if((firstByte&0xE0)===0xC0){const secondThirdBytes=bits.readBits(16);return(((firstByte&0x1F)<<16)&0xFFFFFFFF)|secondThirdBytes;}
throw new FormatException();}}
DecodedBitStreamParser$1.ALPHANUMERIC_CHARS='0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:';DecodedBitStreamParser$1.GB2312_SUBSET=1;class QRCodeDecoderMetaData{constructor(mirrored){this.mirrored=mirrored;}
isMirrored(){return this.mirrored;}
applyMirroredCorrection(points){if(!this.mirrored||points===null||points.length<3){return;}
const bottomLeft=points[0];points[0]=points[2];points[2]=bottomLeft;}}
class Decoder$2{constructor(){this.rsDecoder=new ReedSolomonDecoder(GenericGF.QR_CODE_FIELD_256);}
decodeBooleanArray(image,hints){return this.decodeBitMatrix(BitMatrix.parseFromBooleanArray(image),hints);}
decodeBitMatrix(bits,hints){const parser=new BitMatrixParser$1(bits);let ex=null;try{return this.decodeBitMatrixParser(parser,hints);}
catch(e){ex=e;}
try{parser.remask();parser.setMirror(true);parser.readVersion();parser.readFormatInformation();parser.mirror();const result=this.decodeBitMatrixParser(parser,hints);result.setOther(new QRCodeDecoderMetaData(true));return result;}
catch(e){if(ex!==null){throw ex;}
throw e;}}
decodeBitMatrixParser(parser,hints){const version=parser.readVersion();const ecLevel=parser.readFormatInformation().getErrorCorrectionLevel();const codewords=parser.readCodewords();const dataBlocks=DataBlock$1.getDataBlocks(codewords,version,ecLevel);let totalBytes=0;for(const dataBlock of dataBlocks){totalBytes+=dataBlock.getNumDataCodewords();}
const resultBytes=new Uint8Array(totalBytes);let resultOffset=0;for(const dataBlock of dataBlocks){const codewordBytes=dataBlock.getCodewords();const numDataCodewords=dataBlock.getNumDataCodewords();this.correctErrors(codewordBytes,numDataCodewords);for(let i=0;i<numDataCodewords;i++){resultBytes[resultOffset++]=codewordBytes[i];}}
return DecodedBitStreamParser$1.decode(resultBytes,version,ecLevel,hints);}
correctErrors(codewordBytes,numDataCodewords){const codewordsInts=new Int32Array(codewordBytes);try{this.rsDecoder.decode(codewordsInts,codewordBytes.length-numDataCodewords);}
catch(ignored){throw new ChecksumException();}
for(let i=0;i<numDataCodewords;i++){codewordBytes[i]=codewordsInts[i];}}}
class AlignmentPattern extends ResultPoint{constructor(posX,posY,estimatedModuleSize){super(posX,posY);this.estimatedModuleSize=estimatedModuleSize;}
aboutEquals(moduleSize,i,j){if(Math.abs(i-this.getY())<=moduleSize&&Math.abs(j-this.getX())<=moduleSize){const moduleSizeDiff=Math.abs(moduleSize-this.estimatedModuleSize);return moduleSizeDiff<=1.0||moduleSizeDiff<=this.estimatedModuleSize;}
return false;}
combineEstimate(i,j,newModuleSize){const combinedX=(this.getX()+j)/2.0;const combinedY=(this.getY()+i)/2.0;const combinedModuleSize=(this.estimatedModuleSize+newModuleSize)/2.0;return new AlignmentPattern(combinedX,combinedY,combinedModuleSize);}}
class AlignmentPatternFinder{constructor(image,startX,startY,width,height,moduleSize,resultPointCallback){this.image=image;this.startX=startX;this.startY=startY;this.width=width;this.height=height;this.moduleSize=moduleSize;this.resultPointCallback=resultPointCallback;this.possibleCenters=[];this.crossCheckStateCount=new Int32Array(3);}
find(){const startX=this.startX;const height=this.height;const width=this.width;const maxJ=startX+width;const middleI=this.startY+(height/2);const stateCount=new Int32Array(3);const image=this.image;for(let iGen=0;iGen<height;iGen++){const i=middleI+((iGen&0x01)===0?Math.floor((iGen+1)/2):-Math.floor((iGen+1)/2));stateCount[0]=0;stateCount[1]=0;stateCount[2]=0;let j=startX;while(j<maxJ&&!image.get(j,i)){j++;}
let currentState=0;while(j<maxJ){if(image.get(j,i)){if(currentState===1){stateCount[1]++;}
else{if(currentState===2){if(this.foundPatternCross(stateCount)){const confirmed=this.handlePossibleCenter(stateCount,i,j);if(confirmed!==null){return confirmed;}}
stateCount[0]=stateCount[2];stateCount[1]=1;stateCount[2]=0;currentState=1;}
else{stateCount[++currentState]++;}}}
else{if(currentState===1){currentState++;}
stateCount[currentState]++;}
j++;}
if(this.foundPatternCross(stateCount)){const confirmed=this.handlePossibleCenter(stateCount,i,maxJ);if(confirmed!==null){return confirmed;}}}
if(this.possibleCenters.length!==0){return this.possibleCenters[0];}
throw new NotFoundException();}
static centerFromEnd(stateCount,end){return(end-stateCount[2])-stateCount[1]/2.0;}
foundPatternCross(stateCount){const moduleSize=this.moduleSize;const maxVariance=moduleSize/2.0;for(let i=0;i<3;i++){if(Math.abs(moduleSize-stateCount[i])>=maxVariance){return false;}}
return true;}
crossCheckVertical(startI,centerJ,maxCount,originalStateCountTotal){const image=this.image;const maxI=image.getHeight();const stateCount=this.crossCheckStateCount;stateCount[0]=0;stateCount[1]=0;stateCount[2]=0;let i=startI;while(i>=0&&image.get(centerJ,i)&&stateCount[1]<=maxCount){stateCount[1]++;i--;}
if(i<0||stateCount[1]>maxCount){return NaN;}
while(i>=0&&!image.get(centerJ,i)&&stateCount[0]<=maxCount){stateCount[0]++;i--;}
if(stateCount[0]>maxCount){return NaN;}
i=startI+1;while(i<maxI&&image.get(centerJ,i)&&stateCount[1]<=maxCount){stateCount[1]++;i++;}
if(i===maxI||stateCount[1]>maxCount){return NaN;}
while(i<maxI&&!image.get(centerJ,i)&&stateCount[2]<=maxCount){stateCount[2]++;i++;}
if(stateCount[2]>maxCount){return NaN;}
const stateCountTotal=stateCount[0]+stateCount[1]+stateCount[2];if(5*Math.abs(stateCountTotal-originalStateCountTotal)>=2*originalStateCountTotal){return NaN;}
return this.foundPatternCross(stateCount)?AlignmentPatternFinder.centerFromEnd(stateCount,i):NaN;}
handlePossibleCenter(stateCount,i,j){const stateCountTotal=stateCount[0]+stateCount[1]+stateCount[2];const centerJ=AlignmentPatternFinder.centerFromEnd(stateCount,j);const centerI=this.crossCheckVertical(i,centerJ,2*stateCount[1],stateCountTotal);if(!isNaN(centerI)){const estimatedModuleSize=(stateCount[0]+stateCount[1]+stateCount[2])/3.0;for(const center of this.possibleCenters){if(center.aboutEquals(estimatedModuleSize,centerI,centerJ)){return center.combineEstimate(centerI,centerJ,estimatedModuleSize);}}
const point=new AlignmentPattern(centerJ,centerI,estimatedModuleSize);this.possibleCenters.push(point);if(this.resultPointCallback!==null&&this.resultPointCallback!==undefined){this.resultPointCallback.foundPossibleResultPoint(point);}}
return null;}}
class FinderPattern$1 extends ResultPoint{constructor(posX,posY,estimatedModuleSize,count){super(posX,posY);this.estimatedModuleSize=estimatedModuleSize;this.count=count;if(undefined===count){this.count=1;}}
getEstimatedModuleSize(){return this.estimatedModuleSize;}
getCount(){return this.count;}
aboutEquals(moduleSize,i,j){if(Math.abs(i-this.getY())<=moduleSize&&Math.abs(j-this.getX())<=moduleSize){const moduleSizeDiff=Math.abs(moduleSize-this.estimatedModuleSize);return moduleSizeDiff<=1.0||moduleSizeDiff<=this.estimatedModuleSize;}
return false;}
combineEstimate(i,j,newModuleSize){const combinedCount=this.count+1;const combinedX=(this.count*this.getX()+j)/combinedCount;const combinedY=(this.count*this.getY()+i)/combinedCount;const combinedModuleSize=(this.count*this.estimatedModuleSize+newModuleSize)/combinedCount;return new FinderPattern$1(combinedX,combinedY,combinedModuleSize,combinedCount);}}
class FinderPatternInfo{constructor(patternCenters){this.bottomLeft=patternCenters[0];this.topLeft=patternCenters[1];this.topRight=patternCenters[2];}
getBottomLeft(){return this.bottomLeft;}
getTopLeft(){return this.topLeft;}
getTopRight(){return this.topRight;}}
class FinderPatternFinder{constructor(image,resultPointCallback){this.image=image;this.resultPointCallback=resultPointCallback;this.possibleCenters=[];this.crossCheckStateCount=new Int32Array(5);this.resultPointCallback=resultPointCallback;}
getImage(){return this.image;}
getPossibleCenters(){return this.possibleCenters;}
find(hints){const tryHarder=(hints!==null&&hints!==undefined)&&undefined!==hints.get(DecodeHintType$1.TRY_HARDER);const pureBarcode=(hints!==null&&hints!==undefined)&&undefined!==hints.get(DecodeHintType$1.PURE_BARCODE);const image=this.image;const maxI=image.getHeight();const maxJ=image.getWidth();let iSkip=Math.floor((3*maxI)/(4*FinderPatternFinder.MAX_MODULES));if(iSkip<FinderPatternFinder.MIN_SKIP||tryHarder){iSkip=FinderPatternFinder.MIN_SKIP;}
let done=false;const stateCount=new Int32Array(5);for(let i=iSkip-1;i<maxI&&!done;i+=iSkip){stateCount[0]=0;stateCount[1]=0;stateCount[2]=0;stateCount[3]=0;stateCount[4]=0;let currentState=0;for(let j=0;j<maxJ;j++){if(image.get(j,i)){if((currentState&1)===1){currentState++;}
stateCount[currentState]++;}
else{if((currentState&1)===0){if(currentState===4){if(FinderPatternFinder.foundPatternCross(stateCount)){const confirmed=this.handlePossibleCenter(stateCount,i,j,pureBarcode);if(confirmed===true){iSkip=2;if(this.hasSkipped===true){done=this.haveMultiplyConfirmedCenters();}
else{const rowSkip=this.findRowSkip();if(rowSkip>stateCount[2]){i+=rowSkip-stateCount[2]-iSkip;j=maxJ-1;}}}
else{stateCount[0]=stateCount[2];stateCount[1]=stateCount[3];stateCount[2]=stateCount[4];stateCount[3]=1;stateCount[4]=0;currentState=3;continue;}
currentState=0;stateCount[0]=0;stateCount[1]=0;stateCount[2]=0;stateCount[3]=0;stateCount[4]=0;}
else{stateCount[0]=stateCount[2];stateCount[1]=stateCount[3];stateCount[2]=stateCount[4];stateCount[3]=1;stateCount[4]=0;currentState=3;}}
else{stateCount[++currentState]++;}}
else{stateCount[currentState]++;}}}
if(FinderPatternFinder.foundPatternCross(stateCount)){const confirmed=this.handlePossibleCenter(stateCount,i,maxJ,pureBarcode);if(confirmed===true){iSkip=stateCount[0];if(this.hasSkipped){done=this.haveMultiplyConfirmedCenters();}}}}
const patternInfo=this.selectBestPatterns();ResultPoint.orderBestPatterns(patternInfo);return new FinderPatternInfo(patternInfo);}
static centerFromEnd(stateCount,end){return(end-stateCount[4]-stateCount[3])-stateCount[2]/2.0;}
static foundPatternCross(stateCount){let totalModuleSize=0;for(let i=0;i<5;i++){const count=stateCount[i];if(count===0){return false;}
totalModuleSize+=count;}
if(totalModuleSize<7){return false;}
const moduleSize=totalModuleSize/7.0;const maxVariance=moduleSize/2.0;return Math.abs(moduleSize-stateCount[0])<maxVariance&&Math.abs(moduleSize-stateCount[1])<maxVariance&&Math.abs(3.0*moduleSize-stateCount[2])<3*maxVariance&&Math.abs(moduleSize-stateCount[3])<maxVariance&&Math.abs(moduleSize-stateCount[4])<maxVariance;}
getCrossCheckStateCount(){const crossCheckStateCount=this.crossCheckStateCount;crossCheckStateCount[0]=0;crossCheckStateCount[1]=0;crossCheckStateCount[2]=0;crossCheckStateCount[3]=0;crossCheckStateCount[4]=0;return crossCheckStateCount;}
crossCheckDiagonal(startI,centerJ,maxCount,originalStateCountTotal){const stateCount=this.getCrossCheckStateCount();let i=0;const image=this.image;while(startI>=i&&centerJ>=i&&image.get(centerJ-i,startI-i)){stateCount[2]++;i++;}
if(startI<i||centerJ<i){return false;}
while(startI>=i&&centerJ>=i&&!image.get(centerJ-i,startI-i)&&stateCount[1]<=maxCount){stateCount[1]++;i++;}
if(startI<i||centerJ<i||stateCount[1]>maxCount){return false;}
while(startI>=i&&centerJ>=i&&image.get(centerJ-i,startI-i)&&stateCount[0]<=maxCount){stateCount[0]++;i++;}
if(stateCount[0]>maxCount){return false;}
const maxI=image.getHeight();const maxJ=image.getWidth();i=1;while(startI+i<maxI&&centerJ+i<maxJ&&image.get(centerJ+i,startI+i)){stateCount[2]++;i++;}
if(startI+i>=maxI||centerJ+i>=maxJ){return false;}
while(startI+i<maxI&&centerJ+i<maxJ&&!image.get(centerJ+i,startI+i)&&stateCount[3]<maxCount){stateCount[3]++;i++;}
if(startI+i>=maxI||centerJ+i>=maxJ||stateCount[3]>=maxCount){return false;}
while(startI+i<maxI&&centerJ+i<maxJ&&image.get(centerJ+i,startI+i)&&stateCount[4]<maxCount){stateCount[4]++;i++;}
if(stateCount[4]>=maxCount){return false;}
const stateCountTotal=stateCount[0]+stateCount[1]+stateCount[2]+stateCount[3]+stateCount[4];return Math.abs(stateCountTotal-originalStateCountTotal)<2*originalStateCountTotal&&FinderPatternFinder.foundPatternCross(stateCount);}
crossCheckVertical(startI,centerJ,maxCount,originalStateCountTotal){const image=this.image;const maxI=image.getHeight();const stateCount=this.getCrossCheckStateCount();let i=startI;while(i>=0&&image.get(centerJ,i)){stateCount[2]++;i--;}
if(i<0){return NaN;}
while(i>=0&&!image.get(centerJ,i)&&stateCount[1]<=maxCount){stateCount[1]++;i--;}
if(i<0||stateCount[1]>maxCount){return NaN;}
while(i>=0&&image.get(centerJ,i)&&stateCount[0]<=maxCount){stateCount[0]++;i--;}
if(stateCount[0]>maxCount){return NaN;}
i=startI+1;while(i<maxI&&image.get(centerJ,i)){stateCount[2]++;i++;}
if(i===maxI){return NaN;}
while(i<maxI&&!image.get(centerJ,i)&&stateCount[3]<maxCount){stateCount[3]++;i++;}
if(i===maxI||stateCount[3]>=maxCount){return NaN;}
while(i<maxI&&image.get(centerJ,i)&&stateCount[4]<maxCount){stateCount[4]++;i++;}
if(stateCount[4]>=maxCount){return NaN;}
const stateCountTotal=stateCount[0]+stateCount[1]+stateCount[2]+stateCount[3]+
stateCount[4];if(5*Math.abs(stateCountTotal-originalStateCountTotal)>=2*originalStateCountTotal){return NaN;}
return FinderPatternFinder.foundPatternCross(stateCount)?FinderPatternFinder.centerFromEnd(stateCount,i):NaN;}
crossCheckHorizontal(startJ,centerI,maxCount,originalStateCountTotal){const image=this.image;const maxJ=image.getWidth();const stateCount=this.getCrossCheckStateCount();let j=startJ;while(j>=0&&image.get(j,centerI)){stateCount[2]++;j--;}
if(j<0){return NaN;}
while(j>=0&&!image.get(j,centerI)&&stateCount[1]<=maxCount){stateCount[1]++;j--;}
if(j<0||stateCount[1]>maxCount){return NaN;}
while(j>=0&&image.get(j,centerI)&&stateCount[0]<=maxCount){stateCount[0]++;j--;}
if(stateCount[0]>maxCount){return NaN;}
j=startJ+1;while(j<maxJ&&image.get(j,centerI)){stateCount[2]++;j++;}
if(j===maxJ){return NaN;}
while(j<maxJ&&!image.get(j,centerI)&&stateCount[3]<maxCount){stateCount[3]++;j++;}
if(j===maxJ||stateCount[3]>=maxCount){return NaN;}
while(j<maxJ&&image.get(j,centerI)&&stateCount[4]<maxCount){stateCount[4]++;j++;}
if(stateCount[4]>=maxCount){return NaN;}
const stateCountTotal=stateCount[0]+stateCount[1]+stateCount[2]+stateCount[3]+
stateCount[4];if(5*Math.abs(stateCountTotal-originalStateCountTotal)>=originalStateCountTotal){return NaN;}
return FinderPatternFinder.foundPatternCross(stateCount)?FinderPatternFinder.centerFromEnd(stateCount,j):NaN;}
handlePossibleCenter(stateCount,i,j,pureBarcode){const stateCountTotal=stateCount[0]+stateCount[1]+stateCount[2]+stateCount[3]+
stateCount[4];let centerJ=FinderPatternFinder.centerFromEnd(stateCount,j);let centerI=this.crossCheckVertical(i,Math.floor(centerJ),stateCount[2],stateCountTotal);if(!isNaN(centerI)){centerJ=this.crossCheckHorizontal(Math.floor(centerJ),Math.floor(centerI),stateCount[2],stateCountTotal);if(!isNaN(centerJ)&&(!pureBarcode||this.crossCheckDiagonal(Math.floor(centerI),Math.floor(centerJ),stateCount[2],stateCountTotal))){const estimatedModuleSize=stateCountTotal/7.0;let found=false;const possibleCenters=this.possibleCenters;for(let index=0,length=possibleCenters.length;index<length;index++){const center=possibleCenters[index];if(center.aboutEquals(estimatedModuleSize,centerI,centerJ)){possibleCenters[index]=center.combineEstimate(centerI,centerJ,estimatedModuleSize);found=true;break;}}
if(!found){const point=new FinderPattern$1(centerJ,centerI,estimatedModuleSize);possibleCenters.push(point);if(this.resultPointCallback!==null&&this.resultPointCallback!==undefined){this.resultPointCallback.foundPossibleResultPoint(point);}}
return true;}}
return false;}
findRowSkip(){const max=this.possibleCenters.length;if(max<=1){return 0;}
let firstConfirmedCenter=null;for(const center of this.possibleCenters){if(center.getCount()>=FinderPatternFinder.CENTER_QUORUM){if(firstConfirmedCenter==null){firstConfirmedCenter=center;}
else{this.hasSkipped=true;return Math.floor((Math.abs(firstConfirmedCenter.getX()-center.getX())-
Math.abs(firstConfirmedCenter.getY()-center.getY()))/2);}}}
return 0;}
haveMultiplyConfirmedCenters(){let confirmedCount=0;let totalModuleSize=0.0;const max=this.possibleCenters.length;for(const pattern of this.possibleCenters){if(pattern.getCount()>=FinderPatternFinder.CENTER_QUORUM){confirmedCount++;totalModuleSize+=pattern.getEstimatedModuleSize();}}
if(confirmedCount<3){return false;}
const average=totalModuleSize/max;let totalDeviation=0.0;for(const pattern of this.possibleCenters){totalDeviation+=Math.abs(pattern.getEstimatedModuleSize()-average);}
return totalDeviation<=0.05*totalModuleSize;}
selectBestPatterns(){const startSize=this.possibleCenters.length;if(startSize<3){throw new NotFoundException();}
const possibleCenters=this.possibleCenters;let average;if(startSize>3){let totalModuleSize=0.0;let square=0.0;for(const center of this.possibleCenters){const size=center.getEstimatedModuleSize();totalModuleSize+=size;square+=size*size;}
average=totalModuleSize/startSize;let stdDev=Math.sqrt(square/startSize-average*average);possibleCenters.sort((center1,center2)=>{const dA=Math.abs(center2.getEstimatedModuleSize()-average);const dB=Math.abs(center1.getEstimatedModuleSize()-average);return dA<dB?-1:dA>dB?1:0;});const limit=Math.max(0.2*average,stdDev);for(let i=0;i<possibleCenters.length&&possibleCenters.length>3;i++){const pattern=possibleCenters[i];if(Math.abs(pattern.getEstimatedModuleSize()-average)>limit){possibleCenters.splice(i,1);i--;}}}
if(possibleCenters.length>3){let totalModuleSize=0.0;for(const possibleCenter of possibleCenters){totalModuleSize+=possibleCenter.getEstimatedModuleSize();}
average=totalModuleSize/possibleCenters.length;possibleCenters.sort((center1,center2)=>{if(center2.getCount()===center1.getCount()){const dA=Math.abs(center2.getEstimatedModuleSize()-average);const dB=Math.abs(center1.getEstimatedModuleSize()-average);return dA<dB?1:dA>dB?-1:0;}
else{return center2.getCount()-center1.getCount();}});possibleCenters.splice(3);}
return[possibleCenters[0],possibleCenters[1],possibleCenters[2]];}}
FinderPatternFinder.CENTER_QUORUM=2;FinderPatternFinder.MIN_SKIP=3;FinderPatternFinder.MAX_MODULES=57;class Detector$2{constructor(image){this.image=image;}
getImage(){return this.image;}
getResultPointCallback(){return this.resultPointCallback;}
detect(hints){this.resultPointCallback=(hints===null||hints===undefined)?null:hints.get(DecodeHintType$1.NEED_RESULT_POINT_CALLBACK);const finder=new FinderPatternFinder(this.image,this.resultPointCallback);const info=finder.find(hints);return this.processFinderPatternInfo(info);}
processFinderPatternInfo(info){const topLeft=info.getTopLeft();const topRight=info.getTopRight();const bottomLeft=info.getBottomLeft();const moduleSize=this.calculateModuleSize(topLeft,topRight,bottomLeft);if(moduleSize<1.0){throw new NotFoundException('No pattern found in proccess finder.');}
const dimension=Detector$2.computeDimension(topLeft,topRight,bottomLeft,moduleSize);const provisionalVersion=Version$1.getProvisionalVersionForDimension(dimension);const modulesBetweenFPCenters=provisionalVersion.getDimensionForVersion()-7;let alignmentPattern=null;if(provisionalVersion.getAlignmentPatternCenters().length>0){const bottomRightX=topRight.getX()-topLeft.getX()+bottomLeft.getX();const bottomRightY=topRight.getY()-topLeft.getY()+bottomLeft.getY();const correctionToTopLeft=1.0-3.0/modulesBetweenFPCenters;const estAlignmentX=Math.floor(topLeft.getX()+correctionToTopLeft*(bottomRightX-topLeft.getX()));const estAlignmentY=Math.floor(topLeft.getY()+correctionToTopLeft*(bottomRightY-topLeft.getY()));for(let i=4;i<=16;i<<=1){try{alignmentPattern=this.findAlignmentInRegion(moduleSize,estAlignmentX,estAlignmentY,i);break;}
catch(re){if(!(re instanceof NotFoundException)){throw re;}}}}
const transform=Detector$2.createTransform(topLeft,topRight,bottomLeft,alignmentPattern,dimension);const bits=Detector$2.sampleGrid(this.image,transform,dimension);let points;if(alignmentPattern===null){points=[bottomLeft,topLeft,topRight];}
else{points=[bottomLeft,topLeft,topRight,alignmentPattern];}
return new DetectorResult(bits,points);}
static createTransform(topLeft,topRight,bottomLeft,alignmentPattern,dimension){const dimMinusThree=dimension-3.5;let bottomRightX;let bottomRightY;let sourceBottomRightX;let sourceBottomRightY;if(alignmentPattern!==null){bottomRightX=alignmentPattern.getX();bottomRightY=alignmentPattern.getY();sourceBottomRightX=dimMinusThree-3.0;sourceBottomRightY=sourceBottomRightX;}
else{bottomRightX=(topRight.getX()-topLeft.getX())+bottomLeft.getX();bottomRightY=(topRight.getY()-topLeft.getY())+bottomLeft.getY();sourceBottomRightX=dimMinusThree;sourceBottomRightY=dimMinusThree;}
return PerspectiveTransform.quadrilateralToQuadrilateral(3.5,3.5,dimMinusThree,3.5,sourceBottomRightX,sourceBottomRightY,3.5,dimMinusThree,topLeft.getX(),topLeft.getY(),topRight.getX(),topRight.getY(),bottomRightX,bottomRightY,bottomLeft.getX(),bottomLeft.getY());}
static sampleGrid(image,transform,dimension){const sampler=GridSamplerInstance.getInstance();return sampler.sampleGridWithTransform(image,dimension,dimension,transform);}
static computeDimension(topLeft,topRight,bottomLeft,moduleSize){const tltrCentersDimension=MathUtils.round(ResultPoint.distance(topLeft,topRight)/moduleSize);const tlblCentersDimension=MathUtils.round(ResultPoint.distance(topLeft,bottomLeft)/moduleSize);let dimension=Math.floor((tltrCentersDimension+tlblCentersDimension)/2)+7;switch(dimension&0x03){case 0:dimension++;break;case 2:dimension--;break;case 3:throw new NotFoundException('Dimensions could be not found.');}
return dimension;}
calculateModuleSize(topLeft,topRight,bottomLeft){return(this.calculateModuleSizeOneWay(topLeft,topRight)+
this.calculateModuleSizeOneWay(topLeft,bottomLeft))/2.0;}
calculateModuleSizeOneWay(pattern,otherPattern){const moduleSizeEst1=this.sizeOfBlackWhiteBlackRunBothWays(Math.floor(pattern.getX()),Math.floor(pattern.getY()),Math.floor(otherPattern.getX()),Math.floor(otherPattern.getY()));const moduleSizeEst2=this.sizeOfBlackWhiteBlackRunBothWays(Math.floor(otherPattern.getX()),Math.floor(otherPattern.getY()),Math.floor(pattern.getX()),Math.floor(pattern.getY()));if(isNaN(moduleSizeEst1)){return moduleSizeEst2/7.0;}
if(isNaN(moduleSizeEst2)){return moduleSizeEst1/7.0;}
return(moduleSizeEst1+moduleSizeEst2)/14.0;}
sizeOfBlackWhiteBlackRunBothWays(fromX,fromY,toX,toY){let result=this.sizeOfBlackWhiteBlackRun(fromX,fromY,toX,toY);let scale=1.0;let otherToX=fromX-(toX-fromX);if(otherToX<0){scale=fromX/(fromX-otherToX);otherToX=0;}
else if(otherToX>=this.image.getWidth()){scale=(this.image.getWidth()-1-fromX)/(otherToX-fromX);otherToX=this.image.getWidth()-1;}
let otherToY=Math.floor(fromY-(toY-fromY)*scale);scale=1.0;if(otherToY<0){scale=fromY/(fromY-otherToY);otherToY=0;}
else if(otherToY>=this.image.getHeight()){scale=(this.image.getHeight()-1-fromY)/(otherToY-fromY);otherToY=this.image.getHeight()-1;}
otherToX=Math.floor(fromX+(otherToX-fromX)*scale);result+=this.sizeOfBlackWhiteBlackRun(fromX,fromY,otherToX,otherToY);return result-1.0;}
sizeOfBlackWhiteBlackRun(fromX,fromY,toX,toY){const steep=Math.abs(toY-fromY)>Math.abs(toX-fromX);if(steep){let temp=fromX;fromX=fromY;fromY=temp;temp=toX;toX=toY;toY=temp;}
const dx=Math.abs(toX-fromX);const dy=Math.abs(toY-fromY);let error=-dx/2;const xstep=fromX<toX?1:-1;const ystep=fromY<toY?1:-1;let state=0;const xLimit=toX+xstep;for(let x=fromX,y=fromY;x!==xLimit;x+=xstep){const realX=steep?y:x;const realY=steep?x:y;if((state===1)===this.image.get(realX,realY)){if(state===2){return MathUtils.distance(x,y,fromX,fromY);}
state++;}
error+=dy;if(error>0){if(y===toY){break;}
y+=ystep;error-=dx;}}
if(state===2){return MathUtils.distance(toX+xstep,toY,fromX,fromY);}
return NaN;}
findAlignmentInRegion(overallEstModuleSize,estAlignmentX,estAlignmentY,allowanceFactor){const allowance=Math.floor(allowanceFactor*overallEstModuleSize);const alignmentAreaLeftX=Math.max(0,estAlignmentX-allowance);const alignmentAreaRightX=Math.min(this.image.getWidth()-1,estAlignmentX+allowance);if(alignmentAreaRightX-alignmentAreaLeftX<overallEstModuleSize*3){throw new NotFoundException('Alignment top exceeds estimated module size.');}
const alignmentAreaTopY=Math.max(0,estAlignmentY-allowance);const alignmentAreaBottomY=Math.min(this.image.getHeight()-1,estAlignmentY+allowance);if(alignmentAreaBottomY-alignmentAreaTopY<overallEstModuleSize*3){throw new NotFoundException('Alignment bottom exceeds estimated module size.');}
const alignmentFinder=new AlignmentPatternFinder(this.image,alignmentAreaLeftX,alignmentAreaTopY,alignmentAreaRightX-alignmentAreaLeftX,alignmentAreaBottomY-alignmentAreaTopY,overallEstModuleSize,this.resultPointCallback);return alignmentFinder.find();}}
class QRCodeReader{constructor(){this.decoder=new Decoder$2();}
getDecoder(){return this.decoder;}
decode(image,hints){let decoderResult;let points;if(hints!==undefined&&hints!==null&&undefined!==hints.get(DecodeHintType$1.PURE_BARCODE)){const bits=QRCodeReader.extractPureBits(image.getBlackMatrix());decoderResult=this.decoder.decodeBitMatrix(bits,hints);points=QRCodeReader.NO_POINTS;}
else{const detectorResult=new Detector$2(image.getBlackMatrix()).detect(hints);decoderResult=this.decoder.decodeBitMatrix(detectorResult.getBits(),hints);points=detectorResult.getPoints();}
if(decoderResult.getOther()instanceof QRCodeDecoderMetaData){decoderResult.getOther().applyMirroredCorrection(points);}
const result=new Result(decoderResult.getText(),decoderResult.getRawBytes(),undefined,points,BarcodeFormat$1.QR_CODE,undefined);const byteSegments=decoderResult.getByteSegments();if(byteSegments!==null){result.putMetadata(ResultMetadataType$1.BYTE_SEGMENTS,byteSegments);}
const ecLevel=decoderResult.getECLevel();if(ecLevel!==null){result.putMetadata(ResultMetadataType$1.ERROR_CORRECTION_LEVEL,ecLevel);}
if(decoderResult.hasStructuredAppend()){result.putMetadata(ResultMetadataType$1.STRUCTURED_APPEND_SEQUENCE,decoderResult.getStructuredAppendSequenceNumber());result.putMetadata(ResultMetadataType$1.STRUCTURED_APPEND_PARITY,decoderResult.getStructuredAppendParity());}
return result;}
reset(){}
static extractPureBits(image){const leftTopBlack=image.getTopLeftOnBit();const rightBottomBlack=image.getBottomRightOnBit();if(leftTopBlack===null||rightBottomBlack===null){throw new NotFoundException();}
const moduleSize=this.moduleSize(leftTopBlack,image);let top=leftTopBlack[1];let bottom=rightBottomBlack[1];let left=leftTopBlack[0];let right=rightBottomBlack[0];if(left>=right||top>=bottom){throw new NotFoundException();}
if(bottom-top!==right-left){right=left+(bottom-top);if(right>=image.getWidth()){throw new NotFoundException();}}
const matrixWidth=Math.round((right-left+1)/moduleSize);const matrixHeight=Math.round((bottom-top+1)/moduleSize);if(matrixWidth<=0||matrixHeight<=0){throw new NotFoundException();}
if(matrixHeight!==matrixWidth){throw new NotFoundException();}
const nudge=Math.floor(moduleSize/2.0);top+=nudge;left+=nudge;const nudgedTooFarRight=left+Math.floor((matrixWidth-1)*moduleSize)-right;if(nudgedTooFarRight>0){if(nudgedTooFarRight>nudge){throw new NotFoundException();}
left-=nudgedTooFarRight;}
const nudgedTooFarDown=top+Math.floor((matrixHeight-1)*moduleSize)-bottom;if(nudgedTooFarDown>0){if(nudgedTooFarDown>nudge){throw new NotFoundException();}
top-=nudgedTooFarDown;}
const bits=new BitMatrix(matrixWidth,matrixHeight);for(let y=0;y<matrixHeight;y++){const iOffset=top+Math.floor(y*moduleSize);for(let x=0;x<matrixWidth;x++){if(image.get(left+Math.floor(x*moduleSize),iOffset)){bits.set(x,y);}}}
return bits;}
static moduleSize(leftTopBlack,image){const height=image.getHeight();const width=image.getWidth();let x=leftTopBlack[0];let y=leftTopBlack[1];let inBlack=true;let transitions=0;while(x<width&&y<height){if(inBlack!==image.get(x,y)){if(++transitions===5){break;}
inBlack=!inBlack;}
x++;y++;}
if(x===width||y===height){throw new NotFoundException();}
return(x-leftTopBlack[0])/7.0;}}
QRCodeReader.NO_POINTS=new Array();class PDF417Common{PDF417Common(){}
static getBitCountSum(moduleBitCount){return MathUtils.sum(moduleBitCount);}
static toIntArray(list){if(list==null||!list.length){return PDF417Common.EMPTY_INT_ARRAY;}
const result=new Int32Array(list.length);let i=0;for(const integer of list){result[i++]=integer;}
return result;}
static getCodeword(symbol){const i=Arrays.binarySearch(PDF417Common.SYMBOL_TABLE,symbol&0x3FFFF);if(i<0){return-1;}
return(PDF417Common.CODEWORD_TABLE[i]-1)%PDF417Common.NUMBER_OF_CODEWORDS;}}
PDF417Common.NUMBER_OF_CODEWORDS=929;PDF417Common.MAX_CODEWORDS_IN_BARCODE=PDF417Common.NUMBER_OF_CODEWORDS-1;PDF417Common.MIN_ROWS_IN_BARCODE=3;PDF417Common.MAX_ROWS_IN_BARCODE=90;PDF417Common.MODULES_IN_CODEWORD=17;PDF417Common.MODULES_IN_STOP_PATTERN=18;PDF417Common.BARS_IN_MODULE=8;PDF417Common.EMPTY_INT_ARRAY=new Int32Array([]);PDF417Common.SYMBOL_TABLE=Int32Array.from([0x1025e,0x1027a,0x1029e,0x102bc,0x102f2,0x102f4,0x1032e,0x1034e,0x1035c,0x10396,0x103a6,0x103ac,0x10422,0x10428,0x10436,0x10442,0x10444,0x10448,0x10450,0x1045e,0x10466,0x1046c,0x1047a,0x10482,0x1049e,0x104a0,0x104bc,0x104c6,0x104d8,0x104ee,0x104f2,0x104f4,0x10504,0x10508,0x10510,0x1051e,0x10520,0x1053c,0x10540,0x10578,0x10586,0x1058c,0x10598,0x105b0,0x105be,0x105ce,0x105dc,0x105e2,0x105e4,0x105e8,0x105f6,0x1062e,0x1064e,0x1065c,0x1068e,0x1069c,0x106b8,0x106de,0x106fa,0x10716,0x10726,0x1072c,0x10746,0x1074c,0x10758,0x1076e,0x10792,0x10794,0x107a2,0x107a4,0x107a8,0x107b6,0x10822,0x10828,0x10842,0x10848,0x10850,0x1085e,0x10866,0x1086c,0x1087a,0x10882,0x10884,0x10890,0x1089e,0x108a0,0x108bc,0x108c6,0x108cc,0x108d8,0x108ee,0x108f2,0x108f4,0x10902,0x10908,0x1091e,0x10920,0x1093c,0x10940,0x10978,0x10986,0x10998,0x109b0,0x109be,0x109ce,0x109dc,0x109e2,0x109e4,0x109e8,0x109f6,0x10a08,0x10a10,0x10a1e,0x10a20,0x10a3c,0x10a40,0x10a78,0x10af0,0x10b06,0x10b0c,0x10b18,0x10b30,0x10b3e,0x10b60,0x10b7c,0x10b8e,0x10b9c,0x10bb8,0x10bc2,0x10bc4,0x10bc8,0x10bd0,0x10bde,0x10be6,0x10bec,0x10c2e,0x10c4e,0x10c5c,0x10c62,0x10c64,0x10c68,0x10c76,0x10c8e,0x10c9c,0x10cb8,0x10cc2,0x10cc4,0x10cc8,0x10cd0,0x10cde,0x10ce6,0x10cec,0x10cfa,0x10d0e,0x10d1c,0x10d38,0x10d70,0x10d7e,0x10d82,0x10d84,0x10d88,0x10d90,0x10d9e,0x10da0,0x10dbc,0x10dc6,0x10dcc,0x10dd8,0x10dee,0x10df2,0x10df4,0x10e16,0x10e26,0x10e2c,0x10e46,0x10e58,0x10e6e,0x10e86,0x10e8c,0x10e98,0x10eb0,0x10ebe,0x10ece,0x10edc,0x10f0a,0x10f12,0x10f14,0x10f22,0x10f28,0x10f36,0x10f42,0x10f44,0x10f48,0x10f50,0x10f5e,0x10f66,0x10f6c,0x10fb2,0x10fb4,0x11022,0x11028,0x11042,0x11048,0x11050,0x1105e,0x1107a,0x11082,0x11084,0x11090,0x1109e,0x110a0,0x110bc,0x110c6,0x110cc,0x110d8,0x110ee,0x110f2,0x110f4,0x11102,0x1111e,0x11120,0x1113c,0x11140,0x11178,0x11186,0x11198,0x111b0,0x111be,0x111ce,0x111dc,0x111e2,0x111e4,0x111e8,0x111f6,0x11208,0x1121e,0x11220,0x11278,0x112f0,0x1130c,0x11330,0x1133e,0x11360,0x1137c,0x1138e,0x1139c,0x113b8,0x113c2,0x113c8,0x113d0,0x113de,0x113e6,0x113ec,0x11408,0x11410,0x1141e,0x11420,0x1143c,0x11440,0x11478,0x114f0,0x115e0,0x1160c,0x11618,0x11630,0x1163e,0x11660,0x1167c,0x116c0,0x116f8,0x1171c,0x11738,0x11770,0x1177e,0x11782,0x11784,0x11788,0x11790,0x1179e,0x117a0,0x117bc,0x117c6,0x117cc,0x117d8,0x117ee,0x1182e,0x11834,0x1184e,0x1185c,0x11862,0x11864,0x11868,0x11876,0x1188e,0x1189c,0x118b8,0x118c2,0x118c8,0x118d0,0x118de,0x118e6,0x118ec,0x118fa,0x1190e,0x1191c,0x11938,0x11970,0x1197e,0x11982,0x11984,0x11990,0x1199e,0x119a0,0x119bc,0x119c6,0x119cc,0x119d8,0x119ee,0x119f2,0x119f4,0x11a0e,0x11a1c,0x11a38,0x11a70,0x11a7e,0x11ae0,0x11afc,0x11b08,0x11b10,0x11b1e,0x11b20,0x11b3c,0x11b40,0x11b78,0x11b8c,0x11b98,0x11bb0,0x11bbe,0x11bce,0x11bdc,0x11be2,0x11be4,0x11be8,0x11bf6,0x11c16,0x11c26,0x11c2c,0x11c46,0x11c4c,0x11c58,0x11c6e,0x11c86,0x11c98,0x11cb0,0x11cbe,0x11cce,0x11cdc,0x11ce2,0x11ce4,0x11ce8,0x11cf6,0x11d06,0x11d0c,0x11d18,0x11d30,0x11d3e,0x11d60,0x11d7c,0x11d8e,0x11d9c,0x11db8,0x11dc4,0x11dc8,0x11dd0,0x11dde,0x11de6,0x11dec,0x11dfa,0x11e0a,0x11e12,0x11e14,0x11e22,0x11e24,0x11e28,0x11e36,0x11e42,0x11e44,0x11e50,0x11e5e,0x11e66,0x11e6c,0x11e82,0x11e84,0x11e88,0x11e90,0x11e9e,0x11ea0,0x11ebc,0x11ec6,0x11ecc,0x11ed8,0x11eee,0x11f1a,0x11f2e,0x11f32,0x11f34,0x11f4e,0x11f5c,0x11f62,0x11f64,0x11f68,0x11f76,0x12048,0x1205e,0x12082,0x12084,0x12090,0x1209e,0x120a0,0x120bc,0x120d8,0x120f2,0x120f4,0x12108,0x1211e,0x12120,0x1213c,0x12140,0x12178,0x12186,0x12198,0x121b0,0x121be,0x121e2,0x121e4,0x121e8,0x121f6,0x12204,0x12210,0x1221e,0x12220,0x12278,0x122f0,0x12306,0x1230c,0x12330,0x1233e,0x12360,0x1237c,0x1238e,0x1239c,0x123b8,0x123c2,0x123c8,0x123d0,0x123e6,0x123ec,0x1241e,0x12420,0x1243c,0x124f0,0x125e0,0x12618,0x1263e,0x12660,0x1267c,0x126c0,0x126f8,0x12738,0x12770,0x1277e,0x12782,0x12784,0x12790,0x1279e,0x127a0,0x127bc,0x127c6,0x127cc,0x127d8,0x127ee,0x12820,0x1283c,0x12840,0x12878,0x128f0,0x129e0,0x12bc0,0x12c18,0x12c30,0x12c3e,0x12c60,0x12c7c,0x12cc0,0x12cf8,0x12df0,0x12e1c,0x12e38,0x12e70,0x12e7e,0x12ee0,0x12efc,0x12f04,0x12f08,0x12f10,0x12f20,0x12f3c,0x12f40,0x12f78,0x12f86,0x12f8c,0x12f98,0x12fb0,0x12fbe,0x12fce,0x12fdc,0x1302e,0x1304e,0x1305c,0x13062,0x13068,0x1308e,0x1309c,0x130b8,0x130c2,0x130c8,0x130d0,0x130de,0x130ec,0x130fa,0x1310e,0x13138,0x13170,0x1317e,0x13182,0x13184,0x13190,0x1319e,0x131a0,0x131bc,0x131c6,0x131cc,0x131d8,0x131f2,0x131f4,0x1320e,0x1321c,0x13270,0x1327e,0x132e0,0x132fc,0x13308,0x1331e,0x13320,0x1333c,0x13340,0x13378,0x13386,0x13398,0x133b0,0x133be,0x133ce,0x133dc,0x133e2,0x133e4,0x133e8,0x133f6,0x1340e,0x1341c,0x13438,0x13470,0x1347e,0x134e0,0x134fc,0x135c0,0x135f8,0x13608,0x13610,0x1361e,0x13620,0x1363c,0x13640,0x13678,0x136f0,0x1370c,0x13718,0x13730,0x1373e,0x13760,0x1377c,0x1379c,0x137b8,0x137c2,0x137c4,0x137c8,0x137d0,0x137de,0x137e6,0x137ec,0x13816,0x13826,0x1382c,0x13846,0x1384c,0x13858,0x1386e,0x13874,0x13886,0x13898,0x138b0,0x138be,0x138ce,0x138dc,0x138e2,0x138e4,0x138e8,0x13906,0x1390c,0x13930,0x1393e,0x13960,0x1397c,0x1398e,0x1399c,0x139b8,0x139c8,0x139d0,0x139de,0x139e6,0x139ec,0x139fa,0x13a06,0x13a0c,0x13a18,0x13a30,0x13a3e,0x13a60,0x13a7c,0x13ac0,0x13af8,0x13b0e,0x13b1c,0x13b38,0x13b70,0x13b7e,0x13b88,0x13b90,0x13b9e,0x13ba0,0x13bbc,0x13bcc,0x13bd8,0x13bee,0x13bf2,0x13bf4,0x13c12,0x13c14,0x13c22,0x13c24,0x13c28,0x13c36,0x13c42,0x13c48,0x13c50,0x13c5e,0x13c66,0x13c6c,0x13c82,0x13c84,0x13c90,0x13c9e,0x13ca0,0x13cbc,0x13cc6,0x13ccc,0x13cd8,0x13cee,0x13d02,0x13d04,0x13d08,0x13d10,0x13d1e,0x13d20,0x13d3c,0x13d40,0x13d78,0x13d86,0x13d8c,0x13d98,0x13db0,0x13dbe,0x13dce,0x13ddc,0x13de4,0x13de8,0x13df6,0x13e1a,0x13e2e,0x13e32,0x13e34,0x13e4e,0x13e5c,0x13e62,0x13e64,0x13e68,0x13e76,0x13e8e,0x13e9c,0x13eb8,0x13ec2,0x13ec4,0x13ec8,0x13ed0,0x13ede,0x13ee6,0x13eec,0x13f26,0x13f2c,0x13f3a,0x13f46,0x13f4c,0x13f58,0x13f6e,0x13f72,0x13f74,0x14082,0x1409e,0x140a0,0x140bc,0x14104,0x14108,0x14110,0x1411e,0x14120,0x1413c,0x14140,0x14178,0x1418c,0x14198,0x141b0,0x141be,0x141e2,0x141e4,0x141e8,0x14208,0x14210,0x1421e,0x14220,0x1423c,0x14240,0x14278,0x142f0,0x14306,0x1430c,0x14318,0x14330,0x1433e,0x14360,0x1437c,0x1438e,0x143c2,0x143c4,0x143c8,0x143d0,0x143e6,0x143ec,0x14408,0x14410,0x1441e,0x14420,0x1443c,0x14440,0x14478,0x144f0,0x145e0,0x1460c,0x14618,0x14630,0x1463e,0x14660,0x1467c,0x146c0,0x146f8,0x1471c,0x14738,0x14770,0x1477e,0x14782,0x14784,0x14788,0x14790,0x147a0,0x147bc,0x147c6,0x147cc,0x147d8,0x147ee,0x14810,0x14820,0x1483c,0x14840,0x14878,0x148f0,0x149e0,0x14bc0,0x14c30,0x14c3e,0x14c60,0x14c7c,0x14cc0,0x14cf8,0x14df0,0x14e38,0x14e70,0x14e7e,0x14ee0,0x14efc,0x14f04,0x14f08,0x14f10,0x14f1e,0x14f20,0x14f3c,0x14f40,0x14f78,0x14f86,0x14f8c,0x14f98,0x14fb0,0x14fce,0x14fdc,0x15020,0x15040,0x15078,0x150f0,0x151e0,0x153c0,0x15860,0x1587c,0x158c0,0x158f8,0x159f0,0x15be0,0x15c70,0x15c7e,0x15ce0,0x15cfc,0x15dc0,0x15df8,0x15e08,0x15e10,0x15e20,0x15e40,0x15e78,0x15ef0,0x15f0c,0x15f18,0x15f30,0x15f60,0x15f7c,0x15f8e,0x15f9c,0x15fb8,0x1604e,0x1605c,0x1608e,0x1609c,0x160b8,0x160c2,0x160c4,0x160c8,0x160de,0x1610e,0x1611c,0x16138,0x16170,0x1617e,0x16184,0x16188,0x16190,0x1619e,0x161a0,0x161bc,0x161c6,0x161cc,0x161d8,0x161f2,0x161f4,0x1620e,0x1621c,0x16238,0x16270,0x1627e,0x162e0,0x162fc,0x16304,0x16308,0x16310,0x1631e,0x16320,0x1633c,0x16340,0x16378,0x16386,0x1638c,0x16398,0x163b0,0x163be,0x163ce,0x163dc,0x163e2,0x163e4,0x163e8,0x163f6,0x1640e,0x1641c,0x16438,0x16470,0x1647e,0x164e0,0x164fc,0x165c0,0x165f8,0x16610,0x1661e,0x16620,0x1663c,0x16640,0x16678,0x166f0,0x16718,0x16730,0x1673e,0x16760,0x1677c,0x1678e,0x1679c,0x167b8,0x167c2,0x167c4,0x167c8,0x167d0,0x167de,0x167e6,0x167ec,0x1681c,0x16838,0x16870,0x168e0,0x168fc,0x169c0,0x169f8,0x16bf0,0x16c10,0x16c1e,0x16c20,0x16c3c,0x16c40,0x16c78,0x16cf0,0x16de0,0x16e18,0x16e30,0x16e3e,0x16e60,0x16e7c,0x16ec0,0x16ef8,0x16f1c,0x16f38,0x16f70,0x16f7e,0x16f84,0x16f88,0x16f90,0x16f9e,0x16fa0,0x16fbc,0x16fc6,0x16fcc,0x16fd8,0x17026,0x1702c,0x17046,0x1704c,0x17058,0x1706e,0x17086,0x1708c,0x17098,0x170b0,0x170be,0x170ce,0x170dc,0x170e8,0x17106,0x1710c,0x17118,0x17130,0x1713e,0x17160,0x1717c,0x1718e,0x1719c,0x171b8,0x171c2,0x171c4,0x171c8,0x171d0,0x171de,0x171e6,0x171ec,0x171fa,0x17206,0x1720c,0x17218,0x17230,0x1723e,0x17260,0x1727c,0x172c0,0x172f8,0x1730e,0x1731c,0x17338,0x17370,0x1737e,0x17388,0x17390,0x1739e,0x173a0,0x173bc,0x173cc,0x173d8,0x173ee,0x173f2,0x173f4,0x1740c,0x17418,0x17430,0x1743e,0x17460,0x1747c,0x174c0,0x174f8,0x175f0,0x1760e,0x1761c,0x17638,0x17670,0x1767e,0x176e0,0x176fc,0x17708,0x17710,0x1771e,0x17720,0x1773c,0x17740,0x17778,0x17798,0x177b0,0x177be,0x177dc,0x177e2,0x177e4,0x177e8,0x17822,0x17824,0x17828,0x17836,0x17842,0x17844,0x17848,0x17850,0x1785e,0x17866,0x1786c,0x17882,0x17884,0x17888,0x17890,0x1789e,0x178a0,0x178bc,0x178c6,0x178cc,0x178d8,0x178ee,0x178f2,0x178f4,0x17902,0x17904,0x17908,0x17910,0x1791e,0x17920,0x1793c,0x17940,0x17978,0x17986,0x1798c,0x17998,0x179b0,0x179be,0x179ce,0x179dc,0x179e2,0x179e4,0x179e8,0x179f6,0x17a04,0x17a08,0x17a10,0x17a1e,0x17a20,0x17a3c,0x17a40,0x17a78,0x17af0,0x17b06,0x17b0c,0x17b18,0x17b30,0x17b3e,0x17b60,0x17b7c,0x17b8e,0x17b9c,0x17bb8,0x17bc4,0x17bc8,0x17bd0,0x17bde,0x17be6,0x17bec,0x17c2e,0x17c32,0x17c34,0x17c4e,0x17c5c,0x17c62,0x17c64,0x17c68,0x17c76,0x17c8e,0x17c9c,0x17cb8,0x17cc2,0x17cc4,0x17cc8,0x17cd0,0x17cde,0x17ce6,0x17cec,0x17d0e,0x17d1c,0x17d38,0x17d70,0x17d82,0x17d84,0x17d88,0x17d90,0x17d9e,0x17da0,0x17dbc,0x17dc6,0x17dcc,0x17dd8,0x17dee,0x17e26,0x17e2c,0x17e3a,0x17e46,0x17e4c,0x17e58,0x17e6e,0x17e72,0x17e74,0x17e86,0x17e8c,0x17e98,0x17eb0,0x17ece,0x17edc,0x17ee2,0x17ee4,0x17ee8,0x17ef6,0x1813a,0x18172,0x18174,0x18216,0x18226,0x1823a,0x1824c,0x18258,0x1826e,0x18272,0x18274,0x18298,0x182be,0x182e2,0x182e4,0x182e8,0x182f6,0x1835e,0x1837a,0x183ae,0x183d6,0x18416,0x18426,0x1842c,0x1843a,0x18446,0x18458,0x1846e,0x18472,0x18474,0x18486,0x184b0,0x184be,0x184ce,0x184dc,0x184e2,0x184e4,0x184e8,0x184f6,0x18506,0x1850c,0x18518,0x18530,0x1853e,0x18560,0x1857c,0x1858e,0x1859c,0x185b8,0x185c2,0x185c4,0x185c8,0x185d0,0x185de,0x185e6,0x185ec,0x185fa,0x18612,0x18614,0x18622,0x18628,0x18636,0x18642,0x18650,0x1865e,0x1867a,0x18682,0x18684,0x18688,0x18690,0x1869e,0x186a0,0x186bc,0x186c6,0x186cc,0x186d8,0x186ee,0x186f2,0x186f4,0x1872e,0x1874e,0x1875c,0x18796,0x187a6,0x187ac,0x187d2,0x187d4,0x18826,0x1882c,0x1883a,0x18846,0x1884c,0x18858,0x1886e,0x18872,0x18874,0x18886,0x18898,0x188b0,0x188be,0x188ce,0x188dc,0x188e2,0x188e4,0x188e8,0x188f6,0x1890c,0x18930,0x1893e,0x18960,0x1897c,0x1898e,0x189b8,0x189c2,0x189c8,0x189d0,0x189de,0x189e6,0x189ec,0x189fa,0x18a18,0x18a30,0x18a3e,0x18a60,0x18a7c,0x18ac0,0x18af8,0x18b1c,0x18b38,0x18b70,0x18b7e,0x18b82,0x18b84,0x18b88,0x18b90,0x18b9e,0x18ba0,0x18bbc,0x18bc6,0x18bcc,0x18bd8,0x18bee,0x18bf2,0x18bf4,0x18c22,0x18c24,0x18c28,0x18c36,0x18c42,0x18c48,0x18c50,0x18c5e,0x18c66,0x18c7a,0x18c82,0x18c84,0x18c90,0x18c9e,0x18ca0,0x18cbc,0x18ccc,0x18cf2,0x18cf4,0x18d04,0x18d08,0x18d10,0x18d1e,0x18d20,0x18d3c,0x18d40,0x18d78,0x18d86,0x18d98,0x18dce,0x18de2,0x18de4,0x18de8,0x18e2e,0x18e32,0x18e34,0x18e4e,0x18e5c,0x18e62,0x18e64,0x18e68,0x18e8e,0x18e9c,0x18eb8,0x18ec2,0x18ec4,0x18ec8,0x18ed0,0x18efa,0x18f16,0x18f26,0x18f2c,0x18f46,0x18f4c,0x18f58,0x18f6e,0x18f8a,0x18f92,0x18f94,0x18fa2,0x18fa4,0x18fa8,0x18fb6,0x1902c,0x1903a,0x19046,0x1904c,0x19058,0x19072,0x19074,0x19086,0x19098,0x190b0,0x190be,0x190ce,0x190dc,0x190e2,0x190e8,0x190f6,0x19106,0x1910c,0x19130,0x1913e,0x19160,0x1917c,0x1918e,0x1919c,0x191b8,0x191c2,0x191c8,0x191d0,0x191de,0x191e6,0x191ec,0x191fa,0x19218,0x1923e,0x19260,0x1927c,0x192c0,0x192f8,0x19338,0x19370,0x1937e,0x19382,0x19384,0x19390,0x1939e,0x193a0,0x193bc,0x193c6,0x193cc,0x193d8,0x193ee,0x193f2,0x193f4,0x19430,0x1943e,0x19460,0x1947c,0x194c0,0x194f8,0x195f0,0x19638,0x19670,0x1967e,0x196e0,0x196fc,0x19702,0x19704,0x19708,0x19710,0x19720,0x1973c,0x19740,0x19778,0x19786,0x1978c,0x19798,0x197b0,0x197be,0x197ce,0x197dc,0x197e2,0x197e4,0x197e8,0x19822,0x19824,0x19842,0x19848,0x19850,0x1985e,0x19866,0x1987a,0x19882,0x19884,0x19890,0x1989e,0x198a0,0x198bc,0x198cc,0x198f2,0x198f4,0x19902,0x19908,0x1991e,0x19920,0x1993c,0x19940,0x19978,0x19986,0x19998,0x199ce,0x199e2,0x199e4,0x199e8,0x19a08,0x19a10,0x19a1e,0x19a20,0x19a3c,0x19a40,0x19a78,0x19af0,0x19b18,0x19b3e,0x19b60,0x19b9c,0x19bc2,0x19bc4,0x19bc8,0x19bd0,0x19be6,0x19c2e,0x19c34,0x19c4e,0x19c5c,0x19c62,0x19c64,0x19c68,0x19c8e,0x19c9c,0x19cb8,0x19cc2,0x19cc8,0x19cd0,0x19ce6,0x19cfa,0x19d0e,0x19d1c,0x19d38,0x19d70,0x19d7e,0x19d82,0x19d84,0x19d88,0x19d90,0x19da0,0x19dcc,0x19df2,0x19df4,0x19e16,0x19e26,0x19e2c,0x19e46,0x19e4c,0x19e58,0x19e74,0x19e86,0x19e8c,0x19e98,0x19eb0,0x19ebe,0x19ece,0x19ee2,0x19ee4,0x19ee8,0x19f0a,0x19f12,0x19f14,0x19f22,0x19f24,0x19f28,0x19f42,0x19f44,0x19f48,0x19f50,0x19f5e,0x19f6c,0x19f9a,0x19fae,0x19fb2,0x19fb4,0x1a046,0x1a04c,0x1a072,0x1a074,0x1a086,0x1a08c,0x1a098,0x1a0b0,0x1a0be,0x1a0e2,0x1a0e4,0x1a0e8,0x1a0f6,0x1a106,0x1a10c,0x1a118,0x1a130,0x1a13e,0x1a160,0x1a17c,0x1a18e,0x1a19c,0x1a1b8,0x1a1c2,0x1a1c4,0x1a1c8,0x1a1d0,0x1a1de,0x1a1e6,0x1a1ec,0x1a218,0x1a230,0x1a23e,0x1a260,0x1a27c,0x1a2c0,0x1a2f8,0x1a31c,0x1a338,0x1a370,0x1a37e,0x1a382,0x1a384,0x1a388,0x1a390,0x1a39e,0x1a3a0,0x1a3bc,0x1a3c6,0x1a3cc,0x1a3d8,0x1a3ee,0x1a3f2,0x1a3f4,0x1a418,0x1a430,0x1a43e,0x1a460,0x1a47c,0x1a4c0,0x1a4f8,0x1a5f0,0x1a61c,0x1a638,0x1a670,0x1a67e,0x1a6e0,0x1a6fc,0x1a702,0x1a704,0x1a708,0x1a710,0x1a71e,0x1a720,0x1a73c,0x1a740,0x1a778,0x1a786,0x1a78c,0x1a798,0x1a7b0,0x1a7be,0x1a7ce,0x1a7dc,0x1a7e2,0x1a7e4,0x1a7e8,0x1a830,0x1a860,0x1a87c,0x1a8c0,0x1a8f8,0x1a9f0,0x1abe0,0x1ac70,0x1ac7e,0x1ace0,0x1acfc,0x1adc0,0x1adf8,0x1ae04,0x1ae08,0x1ae10,0x1ae20,0x1ae3c,0x1ae40,0x1ae78,0x1aef0,0x1af06,0x1af0c,0x1af18,0x1af30,0x1af3e,0x1af60,0x1af7c,0x1af8e,0x1af9c,0x1afb8,0x1afc4,0x1afc8,0x1afd0,0x1afde,0x1b042,0x1b05e,0x1b07a,0x1b082,0x1b084,0x1b088,0x1b090,0x1b09e,0x1b0a0,0x1b0bc,0x1b0cc,0x1b0f2,0x1b0f4,0x1b102,0x1b104,0x1b108,0x1b110,0x1b11e,0x1b120,0x1b13c,0x1b140,0x1b178,0x1b186,0x1b198,0x1b1ce,0x1b1e2,0x1b1e4,0x1b1e8,0x1b204,0x1b208,0x1b210,0x1b21e,0x1b220,0x1b23c,0x1b240,0x1b278,0x1b2f0,0x1b30c,0x1b33e,0x1b360,0x1b39c,0x1b3c2,0x1b3c4,0x1b3c8,0x1b3d0,0x1b3e6,0x1b410,0x1b41e,0x1b420,0x1b43c,0x1b440,0x1b478,0x1b4f0,0x1b5e0,0x1b618,0x1b660,0x1b67c,0x1b6c0,0x1b738,0x1b782,0x1b784,0x1b788,0x1b790,0x1b79e,0x1b7a0,0x1b7cc,0x1b82e,0x1b84e,0x1b85c,0x1b88e,0x1b89c,0x1b8b8,0x1b8c2,0x1b8c4,0x1b8c8,0x1b8d0,0x1b8e6,0x1b8fa,0x1b90e,0x1b91c,0x1b938,0x1b970,0x1b97e,0x1b982,0x1b984,0x1b988,0x1b990,0x1b99e,0x1b9a0,0x1b9cc,0x1b9f2,0x1b9f4,0x1ba0e,0x1ba1c,0x1ba38,0x1ba70,0x1ba7e,0x1bae0,0x1bafc,0x1bb08,0x1bb10,0x1bb20,0x1bb3c,0x1bb40,0x1bb98,0x1bbce,0x1bbe2,0x1bbe4,0x1bbe8,0x1bc16,0x1bc26,0x1bc2c,0x1bc46,0x1bc4c,0x1bc58,0x1bc72,0x1bc74,0x1bc86,0x1bc8c,0x1bc98,0x1bcb0,0x1bcbe,0x1bcce,0x1bce2,0x1bce4,0x1bce8,0x1bd06,0x1bd0c,0x1bd18,0x1bd30,0x1bd3e,0x1bd60,0x1bd7c,0x1bd9c,0x1bdc2,0x1bdc4,0x1bdc8,0x1bdd0,0x1bde6,0x1bdfa,0x1be12,0x1be14,0x1be22,0x1be24,0x1be28,0x1be42,0x1be44,0x1be48,0x1be50,0x1be5e,0x1be66,0x1be82,0x1be84,0x1be88,0x1be90,0x1be9e,0x1bea0,0x1bebc,0x1becc,0x1bef4,0x1bf1a,0x1bf2e,0x1bf32,0x1bf34,0x1bf4e,0x1bf5c,0x1bf62,0x1bf64,0x1bf68,0x1c09a,0x1c0b2,0x1c0b4,0x1c11a,0x1c132,0x1c134,0x1c162,0x1c164,0x1c168,0x1c176,0x1c1ba,0x1c21a,0x1c232,0x1c234,0x1c24e,0x1c25c,0x1c262,0x1c264,0x1c268,0x1c276,0x1c28e,0x1c2c2,0x1c2c4,0x1c2c8,0x1c2d0,0x1c2de,0x1c2e6,0x1c2ec,0x1c2fa,0x1c316,0x1c326,0x1c33a,0x1c346,0x1c34c,0x1c372,0x1c374,0x1c41a,0x1c42e,0x1c432,0x1c434,0x1c44e,0x1c45c,0x1c462,0x1c464,0x1c468,0x1c476,0x1c48e,0x1c49c,0x1c4b8,0x1c4c2,0x1c4c8,0x1c4d0,0x1c4de,0x1c4e6,0x1c4ec,0x1c4fa,0x1c51c,0x1c538,0x1c570,0x1c57e,0x1c582,0x1c584,0x1c588,0x1c590,0x1c59e,0x1c5a0,0x1c5bc,0x1c5c6,0x1c5cc,0x1c5d8,0x1c5ee,0x1c5f2,0x1c5f4,0x1c616,0x1c626,0x1c62c,0x1c63a,0x1c646,0x1c64c,0x1c658,0x1c66e,0x1c672,0x1c674,0x1c686,0x1c68c,0x1c698,0x1c6b0,0x1c6be,0x1c6ce,0x1c6dc,0x1c6e2,0x1c6e4,0x1c6e8,0x1c712,0x1c714,0x1c722,0x1c728,0x1c736,0x1c742,0x1c744,0x1c748,0x1c750,0x1c75e,0x1c766,0x1c76c,0x1c77a,0x1c7ae,0x1c7d6,0x1c7ea,0x1c81a,0x1c82e,0x1c832,0x1c834,0x1c84e,0x1c85c,0x1c862,0x1c864,0x1c868,0x1c876,0x1c88e,0x1c89c,0x1c8b8,0x1c8c2,0x1c8c8,0x1c8d0,0x1c8de,0x1c8e6,0x1c8ec,0x1c8fa,0x1c90e,0x1c938,0x1c970,0x1c97e,0x1c982,0x1c984,0x1c990,0x1c99e,0x1c9a0,0x1c9bc,0x1c9c6,0x1c9cc,0x1c9d8,0x1c9ee,0x1c9f2,0x1c9f4,0x1ca38,0x1ca70,0x1ca7e,0x1cae0,0x1cafc,0x1cb02,0x1cb04,0x1cb08,0x1cb10,0x1cb20,0x1cb3c,0x1cb40,0x1cb78,0x1cb86,0x1cb8c,0x1cb98,0x1cbb0,0x1cbbe,0x1cbce,0x1cbdc,0x1cbe2,0x1cbe4,0x1cbe8,0x1cbf6,0x1cc16,0x1cc26,0x1cc2c,0x1cc3a,0x1cc46,0x1cc58,0x1cc72,0x1cc74,0x1cc86,0x1ccb0,0x1ccbe,0x1ccce,0x1cce2,0x1cce4,0x1cce8,0x1cd06,0x1cd0c,0x1cd18,0x1cd30,0x1cd3e,0x1cd60,0x1cd7c,0x1cd9c,0x1cdc2,0x1cdc4,0x1cdc8,0x1cdd0,0x1cdde,0x1cde6,0x1cdfa,0x1ce22,0x1ce28,0x1ce42,0x1ce50,0x1ce5e,0x1ce66,0x1ce7a,0x1ce82,0x1ce84,0x1ce88,0x1ce90,0x1ce9e,0x1cea0,0x1cebc,0x1cecc,0x1cef2,0x1cef4,0x1cf2e,0x1cf32,0x1cf34,0x1cf4e,0x1cf5c,0x1cf62,0x1cf64,0x1cf68,0x1cf96,0x1cfa6,0x1cfac,0x1cfca,0x1cfd2,0x1cfd4,0x1d02e,0x1d032,0x1d034,0x1d04e,0x1d05c,0x1d062,0x1d064,0x1d068,0x1d076,0x1d08e,0x1d09c,0x1d0b8,0x1d0c2,0x1d0c4,0x1d0c8,0x1d0d0,0x1d0de,0x1d0e6,0x1d0ec,0x1d0fa,0x1d11c,0x1d138,0x1d170,0x1d17e,0x1d182,0x1d184,0x1d188,0x1d190,0x1d19e,0x1d1a0,0x1d1bc,0x1d1c6,0x1d1cc,0x1d1d8,0x1d1ee,0x1d1f2,0x1d1f4,0x1d21c,0x1d238,0x1d270,0x1d27e,0x1d2e0,0x1d2fc,0x1d302,0x1d304,0x1d308,0x1d310,0x1d31e,0x1d320,0x1d33c,0x1d340,0x1d378,0x1d386,0x1d38c,0x1d398,0x1d3b0,0x1d3be,0x1d3ce,0x1d3dc,0x1d3e2,0x1d3e4,0x1d3e8,0x1d3f6,0x1d470,0x1d47e,0x1d4e0,0x1d4fc,0x1d5c0,0x1d5f8,0x1d604,0x1d608,0x1d610,0x1d620,0x1d640,0x1d678,0x1d6f0,0x1d706,0x1d70c,0x1d718,0x1d730,0x1d73e,0x1d760,0x1d77c,0x1d78e,0x1d79c,0x1d7b8,0x1d7c2,0x1d7c4,0x1d7c8,0x1d7d0,0x1d7de,0x1d7e6,0x1d7ec,0x1d826,0x1d82c,0x1d83a,0x1d846,0x1d84c,0x1d858,0x1d872,0x1d874,0x1d886,0x1d88c,0x1d898,0x1d8b0,0x1d8be,0x1d8ce,0x1d8e2,0x1d8e4,0x1d8e8,0x1d8f6,0x1d90c,0x1d918,0x1d930,0x1d93e,0x1d960,0x1d97c,0x1d99c,0x1d9c2,0x1d9c4,0x1d9c8,0x1d9d0,0x1d9e6,0x1d9fa,0x1da0c,0x1da18,0x1da30,0x1da3e,0x1da60,0x1da7c,0x1dac0,0x1daf8,0x1db38,0x1db82,0x1db84,0x1db88,0x1db90,0x1db9e,0x1dba0,0x1dbcc,0x1dbf2,0x1dbf4,0x1dc22,0x1dc42,0x1dc44,0x1dc48,0x1dc50,0x1dc5e,0x1dc66,0x1dc7a,0x1dc82,0x1dc84,0x1dc88,0x1dc90,0x1dc9e,0x1dca0,0x1dcbc,0x1dccc,0x1dcf2,0x1dcf4,0x1dd04,0x1dd08,0x1dd10,0x1dd1e,0x1dd20,0x1dd3c,0x1dd40,0x1dd78,0x1dd86,0x1dd98,0x1ddce,0x1dde2,0x1dde4,0x1dde8,0x1de2e,0x1de32,0x1de34,0x1de4e,0x1de5c,0x1de62,0x1de64,0x1de68,0x1de8e,0x1de9c,0x1deb8,0x1dec2,0x1dec4,0x1dec8,0x1ded0,0x1dee6,0x1defa,0x1df16,0x1df26,0x1df2c,0x1df46,0x1df4c,0x1df58,0x1df72,0x1df74,0x1df8a,0x1df92,0x1df94,0x1dfa2,0x1dfa4,0x1dfa8,0x1e08a,0x1e092,0x1e094,0x1e0a2,0x1e0a4,0x1e0a8,0x1e0b6,0x1e0da,0x1e10a,0x1e112,0x1e114,0x1e122,0x1e124,0x1e128,0x1e136,0x1e142,0x1e144,0x1e148,0x1e150,0x1e166,0x1e16c,0x1e17a,0x1e19a,0x1e1b2,0x1e1b4,0x1e20a,0x1e212,0x1e214,0x1e222,0x1e224,0x1e228,0x1e236,0x1e242,0x1e248,0x1e250,0x1e25e,0x1e266,0x1e26c,0x1e27a,0x1e282,0x1e284,0x1e288,0x1e290,0x1e2a0,0x1e2bc,0x1e2c6,0x1e2cc,0x1e2d8,0x1e2ee,0x1e2f2,0x1e2f4,0x1e31a,0x1e332,0x1e334,0x1e35c,0x1e362,0x1e364,0x1e368,0x1e3ba,0x1e40a,0x1e412,0x1e414,0x1e422,0x1e428,0x1e436,0x1e442,0x1e448,0x1e450,0x1e45e,0x1e466,0x1e46c,0x1e47a,0x1e482,0x1e484,0x1e490,0x1e49e,0x1e4a0,0x1e4bc,0x1e4c6,0x1e4cc,0x1e4d8,0x1e4ee,0x1e4f2,0x1e4f4,0x1e502,0x1e504,0x1e508,0x1e510,0x1e51e,0x1e520,0x1e53c,0x1e540,0x1e578,0x1e586,0x1e58c,0x1e598,0x1e5b0,0x1e5be,0x1e5ce,0x1e5dc,0x1e5e2,0x1e5e4,0x1e5e8,0x1e5f6,0x1e61a,0x1e62e,0x1e632,0x1e634,0x1e64e,0x1e65c,0x1e662,0x1e668,0x1e68e,0x1e69c,0x1e6b8,0x1e6c2,0x1e6c4,0x1e6c8,0x1e6d0,0x1e6e6,0x1e6fa,0x1e716,0x1e726,0x1e72c,0x1e73a,0x1e746,0x1e74c,0x1e758,0x1e772,0x1e774,0x1e792,0x1e794,0x1e7a2,0x1e7a4,0x1e7a8,0x1e7b6,0x1e812,0x1e814,0x1e822,0x1e824,0x1e828,0x1e836,0x1e842,0x1e844,0x1e848,0x1e850,0x1e85e,0x1e866,0x1e86c,0x1e87a,0x1e882,0x1e884,0x1e888,0x1e890,0x1e89e,0x1e8a0,0x1e8bc,0x1e8c6,0x1e8cc,0x1e8d8,0x1e8ee,0x1e8f2,0x1e8f4,0x1e902,0x1e904,0x1e908,0x1e910,0x1e920,0x1e93c,0x1e940,0x1e978,0x1e986,0x1e98c,0x1e998,0x1e9b0,0x1e9be,0x1e9ce,0x1e9dc,0x1e9e2,0x1e9e4,0x1e9e8,0x1e9f6,0x1ea04,0x1ea08,0x1ea10,0x1ea20,0x1ea40,0x1ea78,0x1eaf0,0x1eb06,0x1eb0c,0x1eb18,0x1eb30,0x1eb3e,0x1eb60,0x1eb7c,0x1eb8e,0x1eb9c,0x1ebb8,0x1ebc2,0x1ebc4,0x1ebc8,0x1ebd0,0x1ebde,0x1ebe6,0x1ebec,0x1ec1a,0x1ec2e,0x1ec32,0x1ec34,0x1ec4e,0x1ec5c,0x1ec62,0x1ec64,0x1ec68,0x1ec8e,0x1ec9c,0x1ecb8,0x1ecc2,0x1ecc4,0x1ecc8,0x1ecd0,0x1ece6,0x1ecfa,0x1ed0e,0x1ed1c,0x1ed38,0x1ed70,0x1ed7e,0x1ed82,0x1ed84,0x1ed88,0x1ed90,0x1ed9e,0x1eda0,0x1edcc,0x1edf2,0x1edf4,0x1ee16,0x1ee26,0x1ee2c,0x1ee3a,0x1ee46,0x1ee4c,0x1ee58,0x1ee6e,0x1ee72,0x1ee74,0x1ee86,0x1ee8c,0x1ee98,0x1eeb0,0x1eebe,0x1eece,0x1eedc,0x1eee2,0x1eee4,0x1eee8,0x1ef12,0x1ef22,0x1ef24,0x1ef28,0x1ef36,0x1ef42,0x1ef44,0x1ef48,0x1ef50,0x1ef5e,0x1ef66,0x1ef6c,0x1ef7a,0x1efae,0x1efb2,0x1efb4,0x1efd6,0x1f096,0x1f0a6,0x1f0ac,0x1f0ba,0x1f0ca,0x1f0d2,0x1f0d4,0x1f116,0x1f126,0x1f12c,0x1f13a,0x1f146,0x1f14c,0x1f158,0x1f16e,0x1f172,0x1f174,0x1f18a,0x1f192,0x1f194,0x1f1a2,0x1f1a4,0x1f1a8,0x1f1da,0x1f216,0x1f226,0x1f22c,0x1f23a,0x1f246,0x1f258,0x1f26e,0x1f272,0x1f274,0x1f286,0x1f28c,0x1f298,0x1f2b0,0x1f2be,0x1f2ce,0x1f2dc,0x1f2e2,0x1f2e4,0x1f2e8,0x1f2f6,0x1f30a,0x1f312,0x1f314,0x1f322,0x1f328,0x1f342,0x1f344,0x1f348,0x1f350,0x1f35e,0x1f366,0x1f37a,0x1f39a,0x1f3ae,0x1f3b2,0x1f3b4,0x1f416,0x1f426,0x1f42c,0x1f43a,0x1f446,0x1f44c,0x1f458,0x1f46e,0x1f472,0x1f474,0x1f486,0x1f48c,0x1f498,0x1f4b0,0x1f4be,0x1f4ce,0x1f4dc,0x1f4e2,0x1f4e4,0x1f4e8,0x1f4f6,0x1f506,0x1f50c,0x1f518,0x1f530,0x1f53e,0x1f560,0x1f57c,0x1f58e,0x1f59c,0x1f5b8,0x1f5c2,0x1f5c4,0x1f5c8,0x1f5d0,0x1f5de,0x1f5e6,0x1f5ec,0x1f5fa,0x1f60a,0x1f612,0x1f614,0x1f622,0x1f624,0x1f628,0x1f636,0x1f642,0x1f644,0x1f648,0x1f650,0x1f65e,0x1f666,0x1f67a,0x1f682,0x1f684,0x1f688,0x1f690,0x1f69e,0x1f6a0,0x1f6bc,0x1f6cc,0x1f6f2,0x1f6f4,0x1f71a,0x1f72e,0x1f732,0x1f734,0x1f74e,0x1f75c,0x1f762,0x1f764,0x1f768,0x1f776,0x1f796,0x1f7a6,0x1f7ac,0x1f7ba,0x1f7d2,0x1f7d4,0x1f89a,0x1f8ae,0x1f8b2,0x1f8b4,0x1f8d6,0x1f8ea,0x1f91a,0x1f92e,0x1f932,0x1f934,0x1f94e,0x1f95c,0x1f962,0x1f964,0x1f968,0x1f976,0x1f996,0x1f9a6,0x1f9ac,0x1f9ba,0x1f9ca,0x1f9d2,0x1f9d4,0x1fa1a,0x1fa2e,0x1fa32,0x1fa34,0x1fa4e,0x1fa5c,0x1fa62,0x1fa64,0x1fa68,0x1fa76,0x1fa8e,0x1fa9c,0x1fab8,0x1fac2,0x1fac4,0x1fac8,0x1fad0,0x1fade,0x1fae6,0x1faec,0x1fb16,0x1fb26,0x1fb2c,0x1fb3a,0x1fb46,0x1fb4c,0x1fb58,0x1fb6e,0x1fb72,0x1fb74,0x1fb8a,0x1fb92,0x1fb94,0x1fba2,0x1fba4,0x1fba8,0x1fbb6,0x1fbda]);PDF417Common.CODEWORD_TABLE=Int32Array.from([2627,1819,2622,2621,1813,1812,2729,2724,2723,2779,2774,2773,902,896,908,868,865,861,859,2511,873,871,1780,835,2493,825,2491,842,837,844,1764,1762,811,810,809,2483,807,2482,806,2480,815,814,813,812,2484,817,816,1745,1744,1742,1746,2655,2637,2635,2626,2625,2623,2628,1820,2752,2739,2737,2728,2727,2725,2730,2785,2783,2778,2777,2775,2780,787,781,747,739,736,2413,754,752,1719,692,689,681,2371,678,2369,700,697,694,703,1688,1686,642,638,2343,631,2341,627,2338,651,646,643,2345,654,652,1652,1650,1647,1654,601,599,2322,596,2321,594,2319,2317,611,610,608,606,2324,603,2323,615,614,612,1617,1616,1614,1612,616,1619,1618,2575,2538,2536,905,901,898,909,2509,2507,2504,870,867,864,860,2512,875,872,1781,2490,2489,2487,2485,1748,836,834,832,830,2494,827,2492,843,841,839,845,1765,1763,2701,2676,2674,2653,2648,2656,2634,2633,2631,2629,1821,2638,2636,2770,2763,2761,2750,2745,2753,2736,2735,2733,2731,1848,2740,2738,2786,2784,591,588,576,569,566,2296,1590,537,534,526,2276,522,2274,545,542,539,548,1572,1570,481,2245,466,2242,462,2239,492,485,482,2249,496,494,1534,1531,1528,1538,413,2196,406,2191,2188,425,419,2202,415,2199,432,430,427,1472,1467,1464,433,1476,1474,368,367,2160,365,2159,362,2157,2155,2152,378,377,375,2166,372,2165,369,2162,383,381,379,2168,1419,1418,1416,1414,385,1411,384,1423,1422,1420,1424,2461,802,2441,2439,790,786,783,794,2409,2406,2403,750,742,738,2414,756,753,1720,2367,2365,2362,2359,1663,693,691,684,2373,680,2370,702,699,696,704,1690,1687,2337,2336,2334,2332,1624,2329,1622,640,637,2344,634,2342,630,2340,650,648,645,2346,655,653,1653,1651,1649,1655,2612,2597,2595,2571,2568,2565,2576,2534,2529,2526,1787,2540,2537,907,904,900,910,2503,2502,2500,2498,1768,2495,1767,2510,2508,2506,869,866,863,2513,876,874,1782,2720,2713,2711,2697,2694,2691,2702,2672,2670,2664,1828,2678,2675,2647,2646,2644,2642,1823,2639,1822,2654,2652,2650,2657,2771,1855,2765,2762,1850,1849,2751,2749,2747,2754,353,2148,344,342,336,2142,332,2140,345,1375,1373,306,2130,299,2128,295,2125,319,314,311,2132,1354,1352,1349,1356,262,257,2101,253,2096,2093,274,273,267,2107,263,2104,280,278,275,1316,1311,1308,1320,1318,2052,202,2050,2044,2040,219,2063,212,2060,208,2055,224,221,2066,1260,1258,1252,231,1248,229,1266,1264,1261,1268,155,1998,153,1996,1994,1991,1988,165,164,2007,162,2006,159,2003,2000,172,171,169,2012,166,2010,1186,1184,1182,1179,175,1176,173,1192,1191,1189,1187,176,1194,1193,2313,2307,2305,592,589,2294,2292,2289,578,572,568,2297,580,1591,2272,2267,2264,1547,538,536,529,2278,525,2275,547,544,541,1574,1571,2237,2235,2229,1493,2225,1489,478,2247,470,2244,465,2241,493,488,484,2250,498,495,1536,1533,1530,1539,2187,2186,2184,2182,1432,2179,1430,2176,1427,414,412,2197,409,2195,405,2193,2190,426,424,421,2203,418,2201,431,429,1473,1471,1469,1466,434,1477,1475,2478,2472,2470,2459,2457,2454,2462,803,2437,2432,2429,1726,2443,2440,792,789,785,2401,2399,2393,1702,2389,1699,2411,2408,2405,745,741,2415,758,755,1721,2358,2357,2355,2353,1661,2350,1660,2347,1657,2368,2366,2364,2361,1666,690,687,2374,683,2372,701,698,705,1691,1689,2619,2617,2610,2608,2605,2613,2593,2588,2585,1803,2599,2596,2563,2561,2555,1797,2551,1795,2573,2570,2567,2577,2525,2524,2522,2520,1786,2517,1785,2514,1783,2535,2533,2531,2528,1788,2541,2539,906,903,911,2721,1844,2715,2712,1838,1836,2699,2696,2693,2703,1827,1826,1824,2673,2671,2669,2666,1829,2679,2677,1858,1857,2772,1854,1853,1851,1856,2766,2764,143,1987,139,1986,135,133,131,1984,128,1983,125,1981,138,137,136,1985,1133,1132,1130,112,110,1974,107,1973,104,1971,1969,122,121,119,117,1977,114,1976,124,1115,1114,1112,1110,1117,1116,84,83,1953,81,1952,78,1950,1948,1945,94,93,91,1959,88,1958,85,1955,99,97,95,1961,1086,1085,1083,1081,1078,100,1090,1089,1087,1091,49,47,1917,44,1915,1913,1910,1907,59,1926,56,1925,53,1922,1919,66,64,1931,61,1929,1042,1040,1038,71,1035,70,1032,68,1048,1047,1045,1043,1050,1049,12,10,1869,1867,1864,1861,21,1880,19,1877,1874,1871,28,1888,25,1886,22,1883,982,980,977,974,32,30,991,989,987,984,34,995,994,992,2151,2150,2147,2146,2144,356,355,354,2149,2139,2138,2136,2134,1359,343,341,338,2143,335,2141,348,347,346,1376,1374,2124,2123,2121,2119,1326,2116,1324,310,308,305,2131,302,2129,298,2127,320,318,316,313,2133,322,321,1355,1353,1351,1357,2092,2091,2089,2087,1276,2084,1274,2081,1271,259,2102,256,2100,252,2098,2095,272,269,2108,266,2106,281,279,277,1317,1315,1313,1310,282,1321,1319,2039,2037,2035,2032,1203,2029,1200,1197,207,2053,205,2051,201,2049,2046,2043,220,218,2064,215,2062,211,2059,228,226,223,2069,1259,1257,1254,232,1251,230,1267,1265,1263,2316,2315,2312,2311,2309,2314,2304,2303,2301,2299,1593,2308,2306,590,2288,2287,2285,2283,1578,2280,1577,2295,2293,2291,579,577,574,571,2298,582,581,1592,2263,2262,2260,2258,1545,2255,1544,2252,1541,2273,2271,2269,2266,1550,535,532,2279,528,2277,546,543,549,1575,1573,2224,2222,2220,1486,2217,1485,2214,1482,1479,2238,2236,2234,2231,1496,2228,1492,480,477,2248,473,2246,469,2243,490,487,2251,497,1537,1535,1532,2477,2476,2474,2479,2469,2468,2466,2464,1730,2473,2471,2453,2452,2450,2448,1729,2445,1728,2460,2458,2456,2463,805,804,2428,2427,2425,2423,1725,2420,1724,2417,1722,2438,2436,2434,2431,1727,2444,2442,793,791,788,795,2388,2386,2384,1697,2381,1696,2378,1694,1692,2402,2400,2398,2395,1703,2392,1701,2412,2410,2407,751,748,744,2416,759,757,1807,2620,2618,1806,1805,2611,2609,2607,2614,1802,1801,1799,2594,2592,2590,2587,1804,2600,2598,1794,1793,1791,1789,2564,2562,2560,2557,1798,2554,1796,2574,2572,2569,2578,1847,1846,2722,1843,1842,1840,1845,2716,2714,1835,1834,1832,1830,1839,1837,2700,2698,2695,2704,1817,1811,1810,897,862,1777,829,826,838,1760,1758,808,2481,1741,1740,1738,1743,2624,1818,2726,2776,782,740,737,1715,686,679,695,1682,1680,639,628,2339,647,644,1645,1643,1640,1648,602,600,597,595,2320,593,2318,609,607,604,1611,1610,1608,1606,613,1615,1613,2328,926,924,892,886,899,857,850,2505,1778,824,823,821,819,2488,818,2486,833,831,828,840,1761,1759,2649,2632,2630,2746,2734,2732,2782,2781,570,567,1587,531,527,523,540,1566,1564,476,467,463,2240,486,483,1524,1521,1518,1529,411,403,2192,399,2189,423,416,1462,1457,1454,428,1468,1465,2210,366,363,2158,360,2156,357,2153,376,373,370,2163,1410,1409,1407,1405,382,1402,380,1417,1415,1412,1421,2175,2174,777,774,771,784,732,725,722,2404,743,1716,676,674,668,2363,665,2360,685,1684,1681,626,624,622,2335,620,2333,617,2330,641,635,649,1646,1644,1642,2566,928,925,2530,2527,894,891,888,2501,2499,2496,858,856,854,851,1779,2692,2668,2665,2645,2643,2640,2651,2768,2759,2757,2744,2743,2741,2748,352,1382,340,337,333,1371,1369,307,300,296,2126,315,312,1347,1342,1350,261,258,250,2097,246,2094,271,268,264,1306,1301,1298,276,1312,1309,2115,203,2048,195,2045,191,2041,213,209,2056,1246,1244,1238,225,1234,222,1256,1253,1249,1262,2080,2079,154,1997,150,1995,147,1992,1989,163,160,2004,156,2001,1175,1174,1172,1170,1167,170,1164,167,1185,1183,1180,1177,174,1190,1188,2025,2024,2022,587,586,564,559,556,2290,573,1588,520,518,512,2268,508,2265,530,1568,1565,461,457,2233,450,2230,446,2226,479,471,489,1526,1523,1520,397,395,2185,392,2183,389,2180,2177,410,2194,402,422,1463,1461,1459,1456,1470,2455,799,2433,2430,779,776,773,2397,2394,2390,734,728,724,746,1717,2356,2354,2351,2348,1658,677,675,673,670,667,688,1685,1683,2606,2589,2586,2559,2556,2552,927,2523,2521,2518,2515,1784,2532,895,893,890,2718,2709,2707,2689,2687,2684,2663,2662,2660,2658,1825,2667,2769,1852,2760,2758,142,141,1139,1138,134,132,129,126,1982,1129,1128,1126,1131,113,111,108,105,1972,101,1970,120,118,115,1109,1108,1106,1104,123,1113,1111,82,79,1951,75,1949,72,1946,92,89,86,1956,1077,1076,1074,1072,98,1069,96,1084,1082,1079,1088,1968,1967,48,45,1916,42,1914,39,1911,1908,60,57,54,1923,50,1920,1031,1030,1028,1026,67,1023,65,1020,62,1041,1039,1036,1033,69,1046,1044,1944,1943,1941,11,9,1868,7,1865,1862,1859,20,1878,16,1875,13,1872,970,968,966,963,29,960,26,23,983,981,978,975,33,971,31,990,988,985,1906,1904,1902,993,351,2145,1383,331,330,328,326,2137,323,2135,339,1372,1370,294,293,291,289,2122,286,2120,283,2117,309,303,317,1348,1346,1344,245,244,242,2090,239,2088,236,2085,2082,260,2099,249,270,1307,1305,1303,1300,1314,189,2038,186,2036,183,2033,2030,2026,206,198,2047,194,216,1247,1245,1243,1240,227,1237,1255,2310,2302,2300,2286,2284,2281,565,563,561,558,575,1589,2261,2259,2256,2253,1542,521,519,517,514,2270,511,533,1569,1567,2223,2221,2218,2215,1483,2211,1480,459,456,453,2232,449,474,491,1527,1525,1522,2475,2467,2465,2451,2449,2446,801,800,2426,2424,2421,2418,1723,2435,780,778,775,2387,2385,2382,2379,1695,2375,1693,2396,735,733,730,727,749,1718,2616,2615,2604,2603,2601,2584,2583,2581,2579,1800,2591,2550,2549,2547,2545,1792,2542,1790,2558,929,2719,1841,2710,2708,1833,1831,2690,2688,2686,1815,1809,1808,1774,1756,1754,1737,1736,1734,1739,1816,1711,1676,1674,633,629,1638,1636,1633,1641,598,1605,1604,1602,1600,605,1609,1607,2327,887,853,1775,822,820,1757,1755,1584,524,1560,1558,468,464,1514,1511,1508,1519,408,404,400,1452,1447,1444,417,1458,1455,2208,364,361,358,2154,1401,1400,1398,1396,374,1393,371,1408,1406,1403,1413,2173,2172,772,726,723,1712,672,669,666,682,1678,1675,625,623,621,618,2331,636,632,1639,1637,1635,920,918,884,880,889,849,848,847,846,2497,855,852,1776,2641,2742,2787,1380,334,1367,1365,301,297,1340,1338,1335,1343,255,251,247,1296,1291,1288,265,1302,1299,2113,204,196,192,2042,1232,1230,1224,214,1220,210,1242,1239,1235,1250,2077,2075,151,148,1993,144,1990,1163,1162,1160,1158,1155,161,1152,157,1173,1171,1168,1165,168,1181,1178,2021,2020,2018,2023,585,560,557,1585,516,509,1562,1559,458,447,2227,472,1516,1513,1510,398,396,393,390,2181,386,2178,407,1453,1451,1449,1446,420,1460,2209,769,764,720,712,2391,729,1713,664,663,661,659,2352,656,2349,671,1679,1677,2553,922,919,2519,2516,885,883,881,2685,2661,2659,2767,2756,2755,140,1137,1136,130,127,1125,1124,1122,1127,109,106,102,1103,1102,1100,1098,116,1107,1105,1980,80,76,73,1947,1068,1067,1065,1063,90,1060,87,1075,1073,1070,1080,1966,1965,46,43,40,1912,36,1909,1019,1018,1016,1014,58,1011,55,1008,51,1029,1027,1024,1021,63,1037,1034,1940,1939,1937,1942,8,1866,4,1863,1,1860,956,954,952,949,946,17,14,969,967,964,961,27,957,24,979,976,972,1901,1900,1898,1896,986,1905,1903,350,349,1381,329,327,324,1368,1366,292,290,287,284,2118,304,1341,1339,1337,1345,243,240,237,2086,233,2083,254,1297,1295,1293,1290,1304,2114,190,187,184,2034,180,2031,177,2027,199,1233,1231,1229,1226,217,1223,1241,2078,2076,584,555,554,552,550,2282,562,1586,507,506,504,502,2257,499,2254,515,1563,1561,445,443,441,2219,438,2216,435,2212,460,454,475,1517,1515,1512,2447,798,797,2422,2419,770,768,766,2383,2380,2376,721,719,717,714,731,1714,2602,2582,2580,2548,2546,2543,923,921,2717,2706,2705,2683,2682,2680,1771,1752,1750,1733,1732,1731,1735,1814,1707,1670,1668,1631,1629,1626,1634,1599,1598,1596,1594,1603,1601,2326,1772,1753,1751,1581,1554,1552,1504,1501,1498,1509,1442,1437,1434,401,1448,1445,2206,1392,1391,1389,1387,1384,359,1399,1397,1394,1404,2171,2170,1708,1672,1669,619,1632,1630,1628,1773,1378,1363,1361,1333,1328,1336,1286,1281,1278,248,1292,1289,2111,1218,1216,1210,197,1206,193,1228,1225,1221,1236,2073,2071,1151,1150,1148,1146,152,1143,149,1140,145,1161,1159,1156,1153,158,1169,1166,2017,2016,2014,2019,1582,510,1556,1553,452,448,1506,1500,394,391,387,1443,1441,1439,1436,1450,2207,765,716,713,1709,662,660,657,1673,1671,916,914,879,878,877,882,1135,1134,1121,1120,1118,1123,1097,1096,1094,1092,103,1101,1099,1979,1059,1058,1056,1054,77,1051,74,1066,1064,1061,1071,1964,1963,1007,1006,1004,1002,999,41,996,37,1017,1015,1012,1009,52,1025,1022,1936,1935,1933,1938,942,940,938,935,932,5,2,955,953,950,947,18,943,15,965,962,958,1895,1894,1892,1890,973,1899,1897,1379,325,1364,1362,288,285,1334,1332,1330,241,238,234,1287,1285,1283,1280,1294,2112,188,185,181,178,2028,1219,1217,1215,1212,200,1209,1227,2074,2072,583,553,551,1583,505,503,500,513,1557,1555,444,442,439,436,2213,455,451,1507,1505,1502,796,763,762,760,767,711,710,708,706,2377,718,715,1710,2544,917,915,2681,1627,1597,1595,2325,1769,1749,1747,1499,1438,1435,2204,1390,1388,1385,1395,2169,2167,1704,1665,1662,1625,1623,1620,1770,1329,1282,1279,2109,1214,1207,1222,2068,2065,1149,1147,1144,1141,146,1157,1154,2013,2011,2008,2015,1579,1549,1546,1495,1487,1433,1431,1428,1425,388,1440,2205,1705,658,1667,1664,1119,1095,1093,1978,1057,1055,1052,1062,1962,1960,1005,1003,1000,997,38,1013,1010,1932,1930,1927,1934,941,939,936,933,6,930,3,951,948,944,1889,1887,1884,1881,959,1893,1891,35,1377,1360,1358,1327,1325,1322,1331,1277,1275,1272,1269,235,1284,2110,1205,1204,1201,1198,182,1195,179,1213,2070,2067,1580,501,1551,1548,440,437,1497,1494,1490,1503,761,709,707,1706,913,912,2198,1386,2164,2161,1621,1766,2103,1208,2058,2054,1145,1142,2005,2002,1999,2009,1488,1429,1426,2200,1698,1659,1656,1975,1053,1957,1954,1001,998,1924,1921,1918,1928,937,934,931,1879,1876,1873,1870,945,1885,1882,1323,1273,1270,2105,1202,1199,1196,1211,2061,2057,1576,1543,1540,1484,1481,1478,1491,1700]);class PDF417DetectorResult{constructor(bits,points){this.bits=bits;this.points=points;}
getBits(){return this.bits;}
getPoints(){return this.points;}}
class Detector$3{static detectMultiple(image,hints,multiple){let bitMatrix=image.getBlackMatrix();let barcodeCoordinates=Detector$3.detect(multiple,bitMatrix);if(!barcodeCoordinates.length){bitMatrix=bitMatrix.clone();bitMatrix.rotate180();barcodeCoordinates=Detector$3.detect(multiple,bitMatrix);}
return new PDF417DetectorResult(bitMatrix,barcodeCoordinates);}
static detect(multiple,bitMatrix){const barcodeCoordinates=new Array();let row=0;let column=0;let foundBarcodeInRow=false;while(row<bitMatrix.getHeight()){const vertices=Detector$3.findVertices(bitMatrix,row,column);if(vertices[0]==null&&vertices[3]==null){if(!foundBarcodeInRow){break;}
foundBarcodeInRow=false;column=0;for(const barcodeCoordinate of barcodeCoordinates){if(barcodeCoordinate[1]!=null){row=Math.trunc(Math.max(row,barcodeCoordinate[1].getY()));}
if(barcodeCoordinate[3]!=null){row=Math.max(row,Math.trunc(barcodeCoordinate[3].getY()));}}
row+=Detector$3.ROW_STEP;continue;}
foundBarcodeInRow=true;barcodeCoordinates.push(vertices);if(!multiple){break;}
if(vertices[2]!=null){column=Math.trunc(vertices[2].getX());row=Math.trunc(vertices[2].getY());}
else{column=Math.trunc(vertices[4].getX());row=Math.trunc(vertices[4].getY());}}
return barcodeCoordinates;}
static findVertices(matrix,startRow,startColumn){const height=matrix.getHeight();const width=matrix.getWidth();const result=new Array(8);Detector$3.copyToResult(result,Detector$3.findRowsWithPattern(matrix,height,width,startRow,startColumn,Detector$3.START_PATTERN),Detector$3.INDEXES_START_PATTERN);if(result[4]!=null){startColumn=Math.trunc(result[4].getX());startRow=Math.trunc(result[4].getY());}
Detector$3.copyToResult(result,Detector$3.findRowsWithPattern(matrix,height,width,startRow,startColumn,Detector$3.STOP_PATTERN),Detector$3.INDEXES_STOP_PATTERN);return result;}
static copyToResult(result,tmpResult,destinationIndexes){for(let i=0;i<destinationIndexes.length;i++){result[destinationIndexes[i]]=tmpResult[i];}}
static findRowsWithPattern(matrix,height,width,startRow,startColumn,pattern){const result=new Array(4);let found=false;const counters=new Int32Array(pattern.length);for(;startRow<height;startRow+=Detector$3.ROW_STEP){let loc=Detector$3.findGuardPattern(matrix,startColumn,startRow,width,false,pattern,counters);if(loc!=null){while(startRow>0){const previousRowLoc=Detector$3.findGuardPattern(matrix,startColumn,--startRow,width,false,pattern,counters);if(previousRowLoc!=null){loc=previousRowLoc;}
else{startRow++;break;}}
result[0]=new ResultPoint(loc[0],startRow);result[1]=new ResultPoint(loc[1],startRow);found=true;break;}}
let stopRow=startRow+1;if(found){let skippedRowCount=0;let previousRowLoc=Int32Array.from([Math.trunc(result[0].getX()),Math.trunc(result[1].getX())]);for(;stopRow<height;stopRow++){const loc=Detector$3.findGuardPattern(matrix,previousRowLoc[0],stopRow,width,false,pattern,counters);if(loc!=null&&Math.abs(previousRowLoc[0]-loc[0])<Detector$3.MAX_PATTERN_DRIFT&&Math.abs(previousRowLoc[1]-loc[1])<Detector$3.MAX_PATTERN_DRIFT){previousRowLoc=loc;skippedRowCount=0;}
else{if(skippedRowCount>Detector$3.SKIPPED_ROW_COUNT_MAX){break;}
else{skippedRowCount++;}}}
stopRow-=skippedRowCount+1;result[2]=new ResultPoint(previousRowLoc[0],stopRow);result[3]=new ResultPoint(previousRowLoc[1],stopRow);}
if(stopRow-startRow<Detector$3.BARCODE_MIN_HEIGHT){Arrays.fill(result,null);}
return result;}
static findGuardPattern(matrix,column,row,width,whiteFirst,pattern,counters){Arrays.fillWithin(counters,0,counters.length,0);let patternStart=column;let pixelDrift=0;while(matrix.get(patternStart,row)&&patternStart>0&&pixelDrift++<Detector$3.MAX_PIXEL_DRIFT){patternStart--;}
let x=patternStart;let counterPosition=0;let patternLength=pattern.length;for(let isWhite=whiteFirst;x<width;x++){let pixel=matrix.get(x,row);if(pixel!==isWhite){counters[counterPosition]++;}
else{if(counterPosition===patternLength-1){if(Detector$3.patternMatchVariance(counters,pattern,Detector$3.MAX_INDIVIDUAL_VARIANCE)<Detector$3.MAX_AVG_VARIANCE){return new Int32Array([patternStart,x]);}
patternStart+=counters[0]+counters[1];System.arraycopy(counters,2,counters,0,counterPosition-1);counters[counterPosition-1]=0;counters[counterPosition]=0;counterPosition--;}
else{counterPosition++;}
counters[counterPosition]=1;isWhite=!isWhite;}}
if(counterPosition===patternLength-1&&Detector$3.patternMatchVariance(counters,pattern,Detector$3.MAX_INDIVIDUAL_VARIANCE)<Detector$3.MAX_AVG_VARIANCE){return new Int32Array([patternStart,x-1]);}
return null;}
static patternMatchVariance(counters,pattern,maxIndividualVariance){let numCounters=counters.length;let total=0;let patternLength=0;for(let i=0;i<numCounters;i++){total+=counters[i];patternLength+=pattern[i];}
if(total<patternLength){return Infinity;}
let unitBarWidth=total/patternLength;maxIndividualVariance*=unitBarWidth;let totalVariance=0.0;for(let x=0;x<numCounters;x++){let counter=counters[x];let scaledPattern=pattern[x]*unitBarWidth;let variance=counter>scaledPattern?counter-scaledPattern:scaledPattern-counter;if(variance>maxIndividualVariance){return Infinity;}
totalVariance+=variance;}
return totalVariance/total;}}
Detector$3.INDEXES_START_PATTERN=Int32Array.from([0,4,1,5]);Detector$3.INDEXES_STOP_PATTERN=Int32Array.from([6,2,7,3]);Detector$3.MAX_AVG_VARIANCE=0.42;Detector$3.MAX_INDIVIDUAL_VARIANCE=0.8;Detector$3.START_PATTERN=Int32Array.from([8,1,1,1,1,1,1,3]);Detector$3.STOP_PATTERN=Int32Array.from([7,1,1,3,1,1,1,2,1]);Detector$3.MAX_PIXEL_DRIFT=3;Detector$3.MAX_PATTERN_DRIFT=5;Detector$3.SKIPPED_ROW_COUNT_MAX=25;Detector$3.ROW_STEP=5;Detector$3.BARCODE_MIN_HEIGHT=10;class ModulusPoly{constructor(field,coefficients){if(coefficients.length===0){throw new IllegalArgumentException();}
this.field=field;let coefficientsLength=coefficients.length;if(coefficientsLength>1&&coefficients[0]===0){let firstNonZero=1;while(firstNonZero<coefficientsLength&&coefficients[firstNonZero]===0){firstNonZero++;}
if(firstNonZero===coefficientsLength){this.coefficients=new Int32Array([0]);}
else{this.coefficients=new Int32Array(coefficientsLength-firstNonZero);System.arraycopy(coefficients,firstNonZero,this.coefficients,0,this.coefficients.length);}}
else{this.coefficients=coefficients;}}
getCoefficients(){return this.coefficients;}
getDegree(){return this.coefficients.length-1;}
isZero(){return this.coefficients[0]===0;}
getCoefficient(degree){return this.coefficients[this.coefficients.length-1-degree];}
evaluateAt(a){if(a===0){return this.getCoefficient(0);}
if(a===1){let sum=0;for(let coefficient of this.coefficients){sum=this.field.add(sum,coefficient);}
return sum;}
let result=this.coefficients[0];let size=this.coefficients.length;for(let i=1;i<size;i++){result=this.field.add(this.field.multiply(a,result),this.coefficients[i]);}
return result;}
add(other){if(!this.field.equals(other.field)){throw new IllegalArgumentException('ModulusPolys do not have same ModulusGF field');}
if(this.isZero()){return other;}
if(other.isZero()){return this;}
let smallerCoefficients=this.coefficients;let largerCoefficients=other.coefficients;if(smallerCoefficients.length>largerCoefficients.length){let temp=smallerCoefficients;smallerCoefficients=largerCoefficients;largerCoefficients=temp;}
let sumDiff=new Int32Array(largerCoefficients.length);let lengthDiff=largerCoefficients.length-smallerCoefficients.length;System.arraycopy(largerCoefficients,0,sumDiff,0,lengthDiff);for(let i=lengthDiff;i<largerCoefficients.length;i++){sumDiff[i]=this.field.add(smallerCoefficients[i-lengthDiff],largerCoefficients[i]);}
return new ModulusPoly(this.field,sumDiff);}
subtract(other){if(!this.field.equals(other.field)){throw new IllegalArgumentException('ModulusPolys do not have same ModulusGF field');}
if(other.isZero()){return this;}
return this.add(other.negative());}
multiply(other){if(other instanceof ModulusPoly){return this.multiplyOther(other);}
return this.multiplyScalar(other);}
multiplyOther(other){if(!this.field.equals(other.field)){throw new IllegalArgumentException('ModulusPolys do not have same ModulusGF field');}
if(this.isZero()||other.isZero()){return new ModulusPoly(this.field,new Int32Array([0]));}
let aCoefficients=this.coefficients;let aLength=aCoefficients.length;let bCoefficients=other.coefficients;let bLength=bCoefficients.length;let product=new Int32Array(aLength+bLength-1);for(let i=0;i<aLength;i++){let aCoeff=aCoefficients[i];for(let j=0;j<bLength;j++){product[i+j]=this.field.add(product[i+j],this.field.multiply(aCoeff,bCoefficients[j]));}}
return new ModulusPoly(this.field,product);}
negative(){let size=this.coefficients.length;let negativeCoefficients=new Int32Array(size);for(let i=0;i<size;i++){negativeCoefficients[i]=this.field.subtract(0,this.coefficients[i]);}
return new ModulusPoly(this.field,negativeCoefficients);}
multiplyScalar(scalar){if(scalar===0){return new ModulusPoly(this.field,new Int32Array([0]));}
if(scalar===1){return this;}
let size=this.coefficients.length;let product=new Int32Array(size);for(let i=0;i<size;i++){product[i]=this.field.multiply(this.coefficients[i],scalar);}
return new ModulusPoly(this.field,product);}
multiplyByMonomial(degree,coefficient){if(degree<0){throw new IllegalArgumentException();}
if(coefficient===0){return new ModulusPoly(this.field,new Int32Array([0]));}
let size=this.coefficients.length;let product=new Int32Array(size+degree);for(let i=0;i<size;i++){product[i]=this.field.multiply(this.coefficients[i],coefficient);}
return new ModulusPoly(this.field,product);}
toString(){let result=new StringBuilder();for(let degree=this.getDegree();degree>=0;degree--){let coefficient=this.getCoefficient(degree);if(coefficient!==0){if(coefficient<0){result.append(' - ');coefficient=-coefficient;}
else{if(result.length()>0){result.append(' + ');}}
if(degree===0||coefficient!==1){result.append(coefficient);}
if(degree!==0){if(degree===1){result.append('x');}
else{result.append('x^');result.append(degree);}}}}
return result.toString();}}
class ModulusBase{add(a,b){return(a+b)%this.modulus;}
subtract(a,b){return(this.modulus+a-b)%this.modulus;}
exp(a){return this.expTable[a];}
log(a){if(a===0){throw new IllegalArgumentException();}
return this.logTable[a];}
inverse(a){if(a===0){throw new ArithmeticException();}
return this.expTable[this.modulus-this.logTable[a]-1];}
multiply(a,b){if(a===0||b===0){return 0;}
return this.expTable[(this.logTable[a]+this.logTable[b])%(this.modulus-1)];}
getSize(){return this.modulus;}
equals(o){return o===this;}}
class ModulusGF extends ModulusBase{constructor(modulus,generator){super();this.modulus=modulus;this.expTable=new Int32Array(modulus);this.logTable=new Int32Array(modulus);let x=1;for(let i=0;i<modulus;i++){this.expTable[i]=x;x=(x*generator)%modulus;}
for(let i=0;i<modulus-1;i++){this.logTable[this.expTable[i]]=i;}
this.zero=new ModulusPoly(this,new Int32Array([0]));this.one=new ModulusPoly(this,new Int32Array([1]));}
getZero(){return this.zero;}
getOne(){return this.one;}
buildMonomial(degree,coefficient){if(degree<0){throw new IllegalArgumentException();}
if(coefficient===0){return this.zero;}
let coefficients=new Int32Array(degree+1);coefficients[0]=coefficient;return new ModulusPoly(this,coefficients);}}
ModulusGF.PDF417_GF=new ModulusGF(PDF417Common.NUMBER_OF_CODEWORDS,3);class ErrorCorrection{constructor(){this.field=ModulusGF.PDF417_GF;}
decode(received,numECCodewords,erasures){let poly=new ModulusPoly(this.field,received);let S=new Int32Array(numECCodewords);let error=false;for(let i=numECCodewords;i>0;i--){let evaluation=poly.evaluateAt(this.field.exp(i));S[numECCodewords-i]=evaluation;if(evaluation!==0){error=true;}}
if(!error){return 0;}
let knownErrors=this.field.getOne();if(erasures!=null){for(const erasure of erasures){let b=this.field.exp(received.length-1-erasure);let term=new ModulusPoly(this.field,new Int32Array([this.field.subtract(0,b),1]));knownErrors=knownErrors.multiply(term);}}
let syndrome=new ModulusPoly(this.field,S);let sigmaOmega=this.runEuclideanAlgorithm(this.field.buildMonomial(numECCodewords,1),syndrome,numECCodewords);let sigma=sigmaOmega[0];let omega=sigmaOmega[1];let errorLocations=this.findErrorLocations(sigma);let errorMagnitudes=this.findErrorMagnitudes(omega,sigma,errorLocations);for(let i=0;i<errorLocations.length;i++){let position=received.length-1-this.field.log(errorLocations[i]);if(position<0){throw ChecksumException.getChecksumInstance();}
received[position]=this.field.subtract(received[position],errorMagnitudes[i]);}
return errorLocations.length;}
runEuclideanAlgorithm(a,b,R){if(a.getDegree()<b.getDegree()){let temp=a;a=b;b=temp;}
let rLast=a;let r=b;let tLast=this.field.getZero();let t=this.field.getOne();while(r.getDegree()>=Math.round(R/2)){let rLastLast=rLast;let tLastLast=tLast;rLast=r;tLast=t;if(rLast.isZero()){throw ChecksumException.getChecksumInstance();}
r=rLastLast;let q=this.field.getZero();let denominatorLeadingTerm=rLast.getCoefficient(rLast.getDegree());let dltInverse=this.field.inverse(denominatorLeadingTerm);while(r.getDegree()>=rLast.getDegree()&&!r.isZero()){let degreeDiff=r.getDegree()-rLast.getDegree();let scale=this.field.multiply(r.getCoefficient(r.getDegree()),dltInverse);q=q.add(this.field.buildMonomial(degreeDiff,scale));r=r.subtract(rLast.multiplyByMonomial(degreeDiff,scale));}
t=q.multiply(tLast).subtract(tLastLast).negative();}
let sigmaTildeAtZero=t.getCoefficient(0);if(sigmaTildeAtZero===0){throw ChecksumException.getChecksumInstance();}
let inverse=this.field.inverse(sigmaTildeAtZero);let sigma=t.multiply(inverse);let omega=r.multiply(inverse);return[sigma,omega];}
findErrorLocations(errorLocator){let numErrors=errorLocator.getDegree();let result=new Int32Array(numErrors);let e=0;for(let i=1;i<this.field.getSize()&&e<numErrors;i++){if(errorLocator.evaluateAt(i)===0){result[e]=this.field.inverse(i);e++;}}
if(e!==numErrors){throw ChecksumException.getChecksumInstance();}
return result;}
findErrorMagnitudes(errorEvaluator,errorLocator,errorLocations){let errorLocatorDegree=errorLocator.getDegree();let formalDerivativeCoefficients=new Int32Array(errorLocatorDegree);for(let i=1;i<=errorLocatorDegree;i++){formalDerivativeCoefficients[errorLocatorDegree-i]=this.field.multiply(i,errorLocator.getCoefficient(i));}
let formalDerivative=new ModulusPoly(this.field,formalDerivativeCoefficients);let s=errorLocations.length;let result=new Int32Array(s);for(let i=0;i<s;i++){let xiInverse=this.field.inverse(errorLocations[i]);let numerator=this.field.subtract(0,errorEvaluator.evaluateAt(xiInverse));let denominator=this.field.inverse(formalDerivative.evaluateAt(xiInverse));result[i]=this.field.multiply(numerator,denominator);}
return result;}}
class BoundingBox{constructor(image,topLeft,bottomLeft,topRight,bottomRight){if(image instanceof BoundingBox){this.constructor_2(image);}
else{this.constructor_1(image,topLeft,bottomLeft,topRight,bottomRight);}}
constructor_1(image,topLeft,bottomLeft,topRight,bottomRight){const leftUnspecified=topLeft==null||bottomLeft==null;const rightUnspecified=topRight==null||bottomRight==null;if(leftUnspecified&&rightUnspecified){throw new NotFoundException();}
if(leftUnspecified){topLeft=new ResultPoint(0,topRight.getY());bottomLeft=new ResultPoint(0,bottomRight.getY());}
else if(rightUnspecified){topRight=new ResultPoint(image.getWidth()-1,topLeft.getY());bottomRight=new ResultPoint(image.getWidth()-1,bottomLeft.getY());}
this.image=image;this.topLeft=topLeft;this.bottomLeft=bottomLeft;this.topRight=topRight;this.bottomRight=bottomRight;this.minX=Math.trunc(Math.min(topLeft.getX(),bottomLeft.getX()));this.maxX=Math.trunc(Math.max(topRight.getX(),bottomRight.getX()));this.minY=Math.trunc(Math.min(topLeft.getY(),topRight.getY()));this.maxY=Math.trunc(Math.max(bottomLeft.getY(),bottomRight.getY()));}
constructor_2(boundingBox){this.image=boundingBox.image;this.topLeft=boundingBox.getTopLeft();this.bottomLeft=boundingBox.getBottomLeft();this.topRight=boundingBox.getTopRight();this.bottomRight=boundingBox.getBottomRight();this.minX=boundingBox.getMinX();this.maxX=boundingBox.getMaxX();this.minY=boundingBox.getMinY();this.maxY=boundingBox.getMaxY();}
static merge(leftBox,rightBox){if(leftBox==null){return rightBox;}
if(rightBox==null){return leftBox;}
return new BoundingBox(leftBox.image,leftBox.topLeft,leftBox.bottomLeft,rightBox.topRight,rightBox.bottomRight);}
addMissingRows(missingStartRows,missingEndRows,isLeft){let newTopLeft=this.topLeft;let newBottomLeft=this.bottomLeft;let newTopRight=this.topRight;let newBottomRight=this.bottomRight;if(missingStartRows>0){let top=isLeft?this.topLeft:this.topRight;let newMinY=Math.trunc(top.getY()-missingStartRows);if(newMinY<0){newMinY=0;}
let newTop=new ResultPoint(top.getX(),newMinY);if(isLeft){newTopLeft=newTop;}
else{newTopRight=newTop;}}
if(missingEndRows>0){let bottom=isLeft?this.bottomLeft:this.bottomRight;let newMaxY=Math.trunc(bottom.getY()+missingEndRows);if(newMaxY>=this.image.getHeight()){newMaxY=this.image.getHeight()-1;}
let newBottom=new ResultPoint(bottom.getX(),newMaxY);if(isLeft){newBottomLeft=newBottom;}
else{newBottomRight=newBottom;}}
return new BoundingBox(this.image,newTopLeft,newBottomLeft,newTopRight,newBottomRight);}
getMinX(){return this.minX;}
getMaxX(){return this.maxX;}
getMinY(){return this.minY;}
getMaxY(){return this.maxY;}
getTopLeft(){return this.topLeft;}
getTopRight(){return this.topRight;}
getBottomLeft(){return this.bottomLeft;}
getBottomRight(){return this.bottomRight;}}
class BarcodeMetadata{constructor(columnCount,rowCountUpperPart,rowCountLowerPart,errorCorrectionLevel){this.columnCount=columnCount;this.errorCorrectionLevel=errorCorrectionLevel;this.rowCountUpperPart=rowCountUpperPart;this.rowCountLowerPart=rowCountLowerPart;this.rowCount=rowCountUpperPart+rowCountLowerPart;}
getColumnCount(){return this.columnCount;}
getErrorCorrectionLevel(){return this.errorCorrectionLevel;}
getRowCount(){return this.rowCount;}
getRowCountUpperPart(){return this.rowCountUpperPart;}
getRowCountLowerPart(){return this.rowCountLowerPart;}}
class Formatter{constructor(){this.buffer='';}
static form(str,arr){let i=-1;function callback(exp,p0,p1,p2,p3,p4){if(exp==='%%')
return'%';if(arr[++i]===undefined)
return undefined;exp=p2?parseInt(p2.substr(1)):undefined;let base=p3?parseInt(p3.substr(1)):undefined;let val;switch(p4){case's':val=arr[i];break;case'c':val=arr[i][0];break;case'f':val=parseFloat(arr[i]).toFixed(exp);break;case'p':val=parseFloat(arr[i]).toPrecision(exp);break;case'e':val=parseFloat(arr[i]).toExponential(exp);break;case'x':val=parseInt(arr[i]).toString(base?base:16);break;case'd':val=parseFloat(parseInt(arr[i],base?base:10).toPrecision(exp)).toFixed(0);break;}
val=typeof val==='object'?JSON.stringify(val):(+val).toString(base);let size=parseInt(p1);let ch=p1&&(p1[0]+'')==='0'?'0':' ';while(val.length<size)
val=p0!==undefined?val+ch:ch+val;return val;}
let regex=/%(-)?(0?[0-9]+)?([.][0-9]+)?([#][0-9]+)?([scfpexd%])/g;return str.replace(regex,callback);}
format(append,...args){this.buffer+=Formatter.form(append,args);}
toString(){return this.buffer;}}
class DetectionResultColumn{constructor(boundingBox){this.boundingBox=new BoundingBox(boundingBox);this.codewords=new Array(boundingBox.getMaxY()-boundingBox.getMinY()+1);}
getCodewordNearby(imageRow){let codeword=this.getCodeword(imageRow);if(codeword!=null){return codeword;}
for(let i=1;i<DetectionResultColumn.MAX_NEARBY_DISTANCE;i++){let nearImageRow=this.imageRowToCodewordIndex(imageRow)-i;if(nearImageRow>=0){codeword=this.codewords[nearImageRow];if(codeword!=null){return codeword;}}
nearImageRow=this.imageRowToCodewordIndex(imageRow)+i;if(nearImageRow<this.codewords.length){codeword=this.codewords[nearImageRow];if(codeword!=null){return codeword;}}}
return null;}
imageRowToCodewordIndex(imageRow){return imageRow-this.boundingBox.getMinY();}
setCodeword(imageRow,codeword){this.codewords[this.imageRowToCodewordIndex(imageRow)]=codeword;}
getCodeword(imageRow){return this.codewords[this.imageRowToCodewordIndex(imageRow)];}
getBoundingBox(){return this.boundingBox;}
getCodewords(){return this.codewords;}
toString(){const formatter=new Formatter();let row=0;for(const codeword of this.codewords){if(codeword==null){formatter.format('%3d:    |   %n',row++);continue;}
formatter.format('%3d: %3d|%3d%n',row++,codeword.getRowNumber(),codeword.getValue());}
return formatter.toString();}}
DetectionResultColumn.MAX_NEARBY_DISTANCE=5;class BarcodeValue{constructor(){this.values=new Map();}
setValue(value){value=Math.trunc(value);let confidence=this.values.get(value);if(confidence==null){confidence=0;}
confidence++;this.values.set(value,confidence);}
getValue(){let maxConfidence=-1;let result=new Array();for(const[key,value]of this.values.entries()){const entry={getKey:()=>key,getValue:()=>value,};if(entry.getValue()>maxConfidence){maxConfidence=entry.getValue();result=[];result.push(entry.getKey());}
else if(entry.getValue()===maxConfidence){result.push(entry.getKey());}}
return PDF417Common.toIntArray(result);}
getConfidence(value){return this.values.get(value);}}
class DetectionResultRowIndicatorColumn extends DetectionResultColumn{constructor(boundingBox,isLeft){super(boundingBox);this._isLeft=isLeft;}
setRowNumbers(){for(let codeword of this.getCodewords()){if(codeword!=null){codeword.setRowNumberAsRowIndicatorColumn();}}}
adjustCompleteIndicatorColumnRowNumbers(barcodeMetadata){let codewords=this.getCodewords();this.setRowNumbers();this.removeIncorrectCodewords(codewords,barcodeMetadata);let boundingBox=this.getBoundingBox();let top=this._isLeft?boundingBox.getTopLeft():boundingBox.getTopRight();let bottom=this._isLeft?boundingBox.getBottomLeft():boundingBox.getBottomRight();let firstRow=this.imageRowToCodewordIndex(Math.trunc(top.getY()));let lastRow=this.imageRowToCodewordIndex(Math.trunc(bottom.getY()));let barcodeRow=-1;let maxRowHeight=1;let currentRowHeight=0;for(let codewordsRow=firstRow;codewordsRow<lastRow;codewordsRow++){if(codewords[codewordsRow]==null){continue;}
let codeword=codewords[codewordsRow];let rowDifference=codeword.getRowNumber()-barcodeRow;if(rowDifference===0){currentRowHeight++;}
else if(rowDifference===1){maxRowHeight=Math.max(maxRowHeight,currentRowHeight);currentRowHeight=1;barcodeRow=codeword.getRowNumber();}
else if(rowDifference<0||codeword.getRowNumber()>=barcodeMetadata.getRowCount()||rowDifference>codewordsRow){codewords[codewordsRow]=null;}
else{let checkedRows;if(maxRowHeight>2){checkedRows=(maxRowHeight-2)*rowDifference;}
else{checkedRows=rowDifference;}
let closePreviousCodewordFound=checkedRows>=codewordsRow;for(let i=1;i<=checkedRows&&!closePreviousCodewordFound;i++){closePreviousCodewordFound=codewords[codewordsRow-i]!=null;}
if(closePreviousCodewordFound){codewords[codewordsRow]=null;}
else{barcodeRow=codeword.getRowNumber();currentRowHeight=1;}}}}
getRowHeights(){let barcodeMetadata=this.getBarcodeMetadata();if(barcodeMetadata==null){return null;}
this.adjustIncompleteIndicatorColumnRowNumbers(barcodeMetadata);let result=new Int32Array(barcodeMetadata.getRowCount());for(let codeword of this.getCodewords()){if(codeword!=null){let rowNumber=codeword.getRowNumber();if(rowNumber>=result.length){continue;}
result[rowNumber]++;}}
return result;}
adjustIncompleteIndicatorColumnRowNumbers(barcodeMetadata){let boundingBox=this.getBoundingBox();let top=this._isLeft?boundingBox.getTopLeft():boundingBox.getTopRight();let bottom=this._isLeft?boundingBox.getBottomLeft():boundingBox.getBottomRight();let firstRow=this.imageRowToCodewordIndex(Math.trunc(top.getY()));let lastRow=this.imageRowToCodewordIndex(Math.trunc(bottom.getY()));let codewords=this.getCodewords();let barcodeRow=-1;for(let codewordsRow=firstRow;codewordsRow<lastRow;codewordsRow++){if(codewords[codewordsRow]==null){continue;}
let codeword=codewords[codewordsRow];codeword.setRowNumberAsRowIndicatorColumn();let rowDifference=codeword.getRowNumber()-barcodeRow;if(rowDifference===0);else if(rowDifference===1){barcodeRow=codeword.getRowNumber();}
else if(codeword.getRowNumber()>=barcodeMetadata.getRowCount()){codewords[codewordsRow]=null;}
else{barcodeRow=codeword.getRowNumber();}}}
getBarcodeMetadata(){let codewords=this.getCodewords();let barcodeColumnCount=new BarcodeValue();let barcodeRowCountUpperPart=new BarcodeValue();let barcodeRowCountLowerPart=new BarcodeValue();let barcodeECLevel=new BarcodeValue();for(let codeword of codewords){if(codeword==null){continue;}
codeword.setRowNumberAsRowIndicatorColumn();let rowIndicatorValue=codeword.getValue()%30;let codewordRowNumber=codeword.getRowNumber();if(!this._isLeft){codewordRowNumber+=2;}
switch(codewordRowNumber%3){case 0:barcodeRowCountUpperPart.setValue(rowIndicatorValue*3+1);break;case 1:barcodeECLevel.setValue(rowIndicatorValue/3);barcodeRowCountLowerPart.setValue(rowIndicatorValue%3);break;case 2:barcodeColumnCount.setValue(rowIndicatorValue+1);break;}}
if((barcodeColumnCount.getValue().length===0)||(barcodeRowCountUpperPart.getValue().length===0)||(barcodeRowCountLowerPart.getValue().length===0)||(barcodeECLevel.getValue().length===0)||barcodeColumnCount.getValue()[0]<1||barcodeRowCountUpperPart.getValue()[0]+barcodeRowCountLowerPart.getValue()[0]<PDF417Common.MIN_ROWS_IN_BARCODE||barcodeRowCountUpperPart.getValue()[0]+barcodeRowCountLowerPart.getValue()[0]>PDF417Common.MAX_ROWS_IN_BARCODE){return null;}
let barcodeMetadata=new BarcodeMetadata(barcodeColumnCount.getValue()[0],barcodeRowCountUpperPart.getValue()[0],barcodeRowCountLowerPart.getValue()[0],barcodeECLevel.getValue()[0]);this.removeIncorrectCodewords(codewords,barcodeMetadata);return barcodeMetadata;}
removeIncorrectCodewords(codewords,barcodeMetadata){for(let codewordRow=0;codewordRow<codewords.length;codewordRow++){let codeword=codewords[codewordRow];if(codewords[codewordRow]==null){continue;}
let rowIndicatorValue=codeword.getValue()%30;let codewordRowNumber=codeword.getRowNumber();if(codewordRowNumber>barcodeMetadata.getRowCount()){codewords[codewordRow]=null;continue;}
if(!this._isLeft){codewordRowNumber+=2;}
switch(codewordRowNumber%3){case 0:if(rowIndicatorValue*3+1!==barcodeMetadata.getRowCountUpperPart()){codewords[codewordRow]=null;}
break;case 1:if(Math.trunc(rowIndicatorValue/3)!==barcodeMetadata.getErrorCorrectionLevel()||rowIndicatorValue%3!==barcodeMetadata.getRowCountLowerPart()){codewords[codewordRow]=null;}
break;case 2:if(rowIndicatorValue+1!==barcodeMetadata.getColumnCount()){codewords[codewordRow]=null;}
break;}}}
isLeft(){return this._isLeft;}
toString(){return'IsLeft: '+this._isLeft+'\n'+super.toString();}}
class DetectionResult{constructor(barcodeMetadata,boundingBox){this.ADJUST_ROW_NUMBER_SKIP=2;this.barcodeMetadata=barcodeMetadata;this.barcodeColumnCount=barcodeMetadata.getColumnCount();this.boundingBox=boundingBox;this.detectionResultColumns=new Array(this.barcodeColumnCount+2);}
getDetectionResultColumns(){this.adjustIndicatorColumnRowNumbers(this.detectionResultColumns[0]);this.adjustIndicatorColumnRowNumbers(this.detectionResultColumns[this.barcodeColumnCount+1]);let unadjustedCodewordCount=PDF417Common.MAX_CODEWORDS_IN_BARCODE;let previousUnadjustedCount;do{previousUnadjustedCount=unadjustedCodewordCount;unadjustedCodewordCount=this.adjustRowNumbersAndGetCount();}while(unadjustedCodewordCount>0&&unadjustedCodewordCount<previousUnadjustedCount);return this.detectionResultColumns;}
adjustIndicatorColumnRowNumbers(detectionResultColumn){if(detectionResultColumn!=null){detectionResultColumn.adjustCompleteIndicatorColumnRowNumbers(this.barcodeMetadata);}}
adjustRowNumbersAndGetCount(){let unadjustedCount=this.adjustRowNumbersByRow();if(unadjustedCount===0){return 0;}
for(let barcodeColumn=1;barcodeColumn<this.barcodeColumnCount+1;barcodeColumn++){let codewords=this.detectionResultColumns[barcodeColumn].getCodewords();for(let codewordsRow=0;codewordsRow<codewords.length;codewordsRow++){if(codewords[codewordsRow]==null){continue;}
if(!codewords[codewordsRow].hasValidRowNumber()){this.adjustRowNumbers(barcodeColumn,codewordsRow,codewords);}}}
return unadjustedCount;}
adjustRowNumbersByRow(){this.adjustRowNumbersFromBothRI();let unadjustedCount=this.adjustRowNumbersFromLRI();return unadjustedCount+this.adjustRowNumbersFromRRI();}
adjustRowNumbersFromBothRI(){if(this.detectionResultColumns[0]==null||this.detectionResultColumns[this.barcodeColumnCount+1]==null){return;}
let LRIcodewords=this.detectionResultColumns[0].getCodewords();let RRIcodewords=this.detectionResultColumns[this.barcodeColumnCount+1].getCodewords();for(let codewordsRow=0;codewordsRow<LRIcodewords.length;codewordsRow++){if(LRIcodewords[codewordsRow]!=null&&RRIcodewords[codewordsRow]!=null&&LRIcodewords[codewordsRow].getRowNumber()===RRIcodewords[codewordsRow].getRowNumber()){for(let barcodeColumn=1;barcodeColumn<=this.barcodeColumnCount;barcodeColumn++){let codeword=this.detectionResultColumns[barcodeColumn].getCodewords()[codewordsRow];if(codeword==null){continue;}
codeword.setRowNumber(LRIcodewords[codewordsRow].getRowNumber());if(!codeword.hasValidRowNumber()){this.detectionResultColumns[barcodeColumn].getCodewords()[codewordsRow]=null;}}}}}
adjustRowNumbersFromRRI(){if(this.detectionResultColumns[this.barcodeColumnCount+1]==null){return 0;}
let unadjustedCount=0;let codewords=this.detectionResultColumns[this.barcodeColumnCount+1].getCodewords();for(let codewordsRow=0;codewordsRow<codewords.length;codewordsRow++){if(codewords[codewordsRow]==null){continue;}
let rowIndicatorRowNumber=codewords[codewordsRow].getRowNumber();let invalidRowCounts=0;for(let barcodeColumn=this.barcodeColumnCount+1;barcodeColumn>0&&invalidRowCounts<this.ADJUST_ROW_NUMBER_SKIP;barcodeColumn--){let codeword=this.detectionResultColumns[barcodeColumn].getCodewords()[codewordsRow];if(codeword!=null){invalidRowCounts=DetectionResult.adjustRowNumberIfValid(rowIndicatorRowNumber,invalidRowCounts,codeword);if(!codeword.hasValidRowNumber()){unadjustedCount++;}}}}
return unadjustedCount;}
adjustRowNumbersFromLRI(){if(this.detectionResultColumns[0]==null){return 0;}
let unadjustedCount=0;let codewords=this.detectionResultColumns[0].getCodewords();for(let codewordsRow=0;codewordsRow<codewords.length;codewordsRow++){if(codewords[codewordsRow]==null){continue;}
let rowIndicatorRowNumber=codewords[codewordsRow].getRowNumber();let invalidRowCounts=0;for(let barcodeColumn=1;barcodeColumn<this.barcodeColumnCount+1&&invalidRowCounts<this.ADJUST_ROW_NUMBER_SKIP;barcodeColumn++){let codeword=this.detectionResultColumns[barcodeColumn].getCodewords()[codewordsRow];if(codeword!=null){invalidRowCounts=DetectionResult.adjustRowNumberIfValid(rowIndicatorRowNumber,invalidRowCounts,codeword);if(!codeword.hasValidRowNumber()){unadjustedCount++;}}}}
return unadjustedCount;}
static adjustRowNumberIfValid(rowIndicatorRowNumber,invalidRowCounts,codeword){if(codeword==null){return invalidRowCounts;}
if(!codeword.hasValidRowNumber()){if(codeword.isValidRowNumber(rowIndicatorRowNumber)){codeword.setRowNumber(rowIndicatorRowNumber);invalidRowCounts=0;}
else{++invalidRowCounts;}}
return invalidRowCounts;}
adjustRowNumbers(barcodeColumn,codewordsRow,codewords){if(this.detectionResultColumns[barcodeColumn-1]==null){return;}
let codeword=codewords[codewordsRow];let previousColumnCodewords=this.detectionResultColumns[barcodeColumn-1].getCodewords();let nextColumnCodewords=previousColumnCodewords;if(this.detectionResultColumns[barcodeColumn+1]!=null){nextColumnCodewords=this.detectionResultColumns[barcodeColumn+1].getCodewords();}
let otherCodewords=new Array(14);otherCodewords[2]=previousColumnCodewords[codewordsRow];otherCodewords[3]=nextColumnCodewords[codewordsRow];if(codewordsRow>0){otherCodewords[0]=codewords[codewordsRow-1];otherCodewords[4]=previousColumnCodewords[codewordsRow-1];otherCodewords[5]=nextColumnCodewords[codewordsRow-1];}
if(codewordsRow>1){otherCodewords[8]=codewords[codewordsRow-2];otherCodewords[10]=previousColumnCodewords[codewordsRow-2];otherCodewords[11]=nextColumnCodewords[codewordsRow-2];}
if(codewordsRow<codewords.length-1){otherCodewords[1]=codewords[codewordsRow+1];otherCodewords[6]=previousColumnCodewords[codewordsRow+1];otherCodewords[7]=nextColumnCodewords[codewordsRow+1];}
if(codewordsRow<codewords.length-2){otherCodewords[9]=codewords[codewordsRow+2];otherCodewords[12]=previousColumnCodewords[codewordsRow+2];otherCodewords[13]=nextColumnCodewords[codewordsRow+2];}
for(let otherCodeword of otherCodewords){if(DetectionResult.adjustRowNumber(codeword,otherCodeword)){return;}}}
static adjustRowNumber(codeword,otherCodeword){if(otherCodeword==null){return false;}
if(otherCodeword.hasValidRowNumber()&&otherCodeword.getBucket()===codeword.getBucket()){codeword.setRowNumber(otherCodeword.getRowNumber());return true;}
return false;}
getBarcodeColumnCount(){return this.barcodeColumnCount;}
getBarcodeRowCount(){return this.barcodeMetadata.getRowCount();}
getBarcodeECLevel(){return this.barcodeMetadata.getErrorCorrectionLevel();}
setBoundingBox(boundingBox){this.boundingBox=boundingBox;}
getBoundingBox(){return this.boundingBox;}
setDetectionResultColumn(barcodeColumn,detectionResultColumn){this.detectionResultColumns[barcodeColumn]=detectionResultColumn;}
getDetectionResultColumn(barcodeColumn){return this.detectionResultColumns[barcodeColumn];}
toString(){let rowIndicatorColumn=this.detectionResultColumns[0];if(rowIndicatorColumn==null){rowIndicatorColumn=this.detectionResultColumns[this.barcodeColumnCount+1];}
let formatter=new Formatter();for(let codewordsRow=0;codewordsRow<rowIndicatorColumn.getCodewords().length;codewordsRow++){formatter.format('CW %3d:',codewordsRow);for(let barcodeColumn=0;barcodeColumn<this.barcodeColumnCount+2;barcodeColumn++){if(this.detectionResultColumns[barcodeColumn]==null){formatter.format('    |   ');continue;}
let codeword=this.detectionResultColumns[barcodeColumn].getCodewords()[codewordsRow];if(codeword==null){formatter.format('    |   ');continue;}
formatter.format(' %3d|%3d',codeword.getRowNumber(),codeword.getValue());}
formatter.format('%n');}
return formatter.toString();}}
class Codeword{constructor(startX,endX,bucket,value){this.rowNumber=Codeword.BARCODE_ROW_UNKNOWN;this.startX=Math.trunc(startX);this.endX=Math.trunc(endX);this.bucket=Math.trunc(bucket);this.value=Math.trunc(value);}
hasValidRowNumber(){return this.isValidRowNumber(this.rowNumber);}
isValidRowNumber(rowNumber){return rowNumber!==Codeword.BARCODE_ROW_UNKNOWN&&this.bucket===(rowNumber%3)*3;}
setRowNumberAsRowIndicatorColumn(){this.rowNumber=Math.trunc((Math.trunc(this.value/30))*3+Math.trunc(this.bucket/3));}
getWidth(){return this.endX-this.startX;}
getStartX(){return this.startX;}
getEndX(){return this.endX;}
getBucket(){return this.bucket;}
getValue(){return this.value;}
getRowNumber(){return this.rowNumber;}
setRowNumber(rowNumber){this.rowNumber=rowNumber;}
toString(){return this.rowNumber+'|'+this.value;}}
Codeword.BARCODE_ROW_UNKNOWN=-1;class PDF417CodewordDecoder{static initialize(){for(let i=0;i<PDF417Common.SYMBOL_TABLE.length;i++){let currentSymbol=PDF417Common.SYMBOL_TABLE[i];let currentBit=currentSymbol&0x1;for(let j=0;j<PDF417Common.BARS_IN_MODULE;j++){let size=0.0;while((currentSymbol&0x1)===currentBit){size+=1.0;currentSymbol>>=1;}
currentBit=currentSymbol&0x1;if(!PDF417CodewordDecoder.RATIOS_TABLE[i]){PDF417CodewordDecoder.RATIOS_TABLE[i]=new Array(PDF417Common.BARS_IN_MODULE);}
PDF417CodewordDecoder.RATIOS_TABLE[i][PDF417Common.BARS_IN_MODULE-j-1]=Math.fround(size/PDF417Common.MODULES_IN_CODEWORD);}}
this.bSymbolTableReady=true;}
static getDecodedValue(moduleBitCount){let decodedValue=PDF417CodewordDecoder.getDecodedCodewordValue(PDF417CodewordDecoder.sampleBitCounts(moduleBitCount));if(decodedValue!==-1){return decodedValue;}
return PDF417CodewordDecoder.getClosestDecodedValue(moduleBitCount);}
static sampleBitCounts(moduleBitCount){let bitCountSum=MathUtils.sum(moduleBitCount);let result=new Int32Array(PDF417Common.BARS_IN_MODULE);let bitCountIndex=0;let sumPreviousBits=0;for(let i=0;i<PDF417Common.MODULES_IN_CODEWORD;i++){let sampleIndex=bitCountSum/(2*PDF417Common.MODULES_IN_CODEWORD)+
(i*bitCountSum)/PDF417Common.MODULES_IN_CODEWORD;if(sumPreviousBits+moduleBitCount[bitCountIndex]<=sampleIndex){sumPreviousBits+=moduleBitCount[bitCountIndex];bitCountIndex++;}
result[bitCountIndex]++;}
return result;}
static getDecodedCodewordValue(moduleBitCount){let decodedValue=PDF417CodewordDecoder.getBitValue(moduleBitCount);return PDF417Common.getCodeword(decodedValue)===-1?-1:decodedValue;}
static getBitValue(moduleBitCount){let result=0;for(let i=0;i<moduleBitCount.length;i++){for(let bit=0;bit<moduleBitCount[i];bit++){result=(result<<1)|(i%2===0?1:0);}}
return Math.trunc(result);}
static getClosestDecodedValue(moduleBitCount){let bitCountSum=MathUtils.sum(moduleBitCount);let bitCountRatios=new Array(PDF417Common.BARS_IN_MODULE);if(bitCountSum>1){for(let i=0;i<bitCountRatios.length;i++){bitCountRatios[i]=Math.fround(moduleBitCount[i]/bitCountSum);}}
let bestMatchError=Float.MAX_VALUE;let bestMatch=-1;if(!this.bSymbolTableReady){PDF417CodewordDecoder.initialize();}
for(let j=0;j<PDF417CodewordDecoder.RATIOS_TABLE.length;j++){let error=0.0;let ratioTableRow=PDF417CodewordDecoder.RATIOS_TABLE[j];for(let k=0;k<PDF417Common.BARS_IN_MODULE;k++){let diff=Math.fround(ratioTableRow[k]-bitCountRatios[k]);error+=Math.fround(diff*diff);if(error>=bestMatchError){break;}}
if(error<bestMatchError){bestMatchError=error;bestMatch=PDF417Common.SYMBOL_TABLE[j];}}
return bestMatch;}}
PDF417CodewordDecoder.bSymbolTableReady=false;PDF417CodewordDecoder.RATIOS_TABLE=new Array(PDF417Common.SYMBOL_TABLE.length).map(x=>x=new Array(PDF417Common.BARS_IN_MODULE));class PDF417ResultMetadata{constructor(){this.segmentCount=-1;this.fileSize=-1;this.timestamp=-1;this.checksum=-1;}
getSegmentIndex(){return this.segmentIndex;}
setSegmentIndex(segmentIndex){this.segmentIndex=segmentIndex;}
getFileId(){return this.fileId;}
setFileId(fileId){this.fileId=fileId;}
getOptionalData(){return this.optionalData;}
setOptionalData(optionalData){this.optionalData=optionalData;}
isLastSegment(){return this.lastSegment;}
setLastSegment(lastSegment){this.lastSegment=lastSegment;}
getSegmentCount(){return this.segmentCount;}
setSegmentCount(segmentCount){this.segmentCount=segmentCount;}
getSender(){return this.sender||null;}
setSender(sender){this.sender=sender;}
getAddressee(){return this.addressee||null;}
setAddressee(addressee){this.addressee=addressee;}
getFileName(){return this.fileName;}
setFileName(fileName){this.fileName=fileName;}
getFileSize(){return this.fileSize;}
setFileSize(fileSize){this.fileSize=fileSize;}
getChecksum(){return this.checksum;}
setChecksum(checksum){this.checksum=checksum;}
getTimestamp(){return this.timestamp;}
setTimestamp(timestamp){this.timestamp=timestamp;}}
class Long{static parseLong(num,radix=undefined){return parseInt(num,radix);}}
class NullPointerException extends Exception{}
NullPointerException.kind='NullPointerException';class OutputStream{writeBytes(b){this.writeBytesOffset(b,0,b.length);}
writeBytesOffset(b,off,len){if(b==null){throw new NullPointerException();}
else if((off<0)||(off>b.length)||(len<0)||((off+len)>b.length)||((off+len)<0)){throw new IndexOutOfBoundsException();}
else if(len===0){return;}
for(let i=0;i<len;i++){this.write(b[off+i]);}}
flush(){}
close(){}}
class OutOfMemoryError extends Exception{}
class ByteArrayOutputStream extends OutputStream{constructor(size=32){super();this.count=0;if(size<0){throw new IllegalArgumentException('Negative initial size: '
+size);}
this.buf=new Uint8Array(size);}
ensureCapacity(minCapacity){if(minCapacity-this.buf.length>0)
this.grow(minCapacity);}
grow(minCapacity){let oldCapacity=this.buf.length;let newCapacity=oldCapacity<<1;if(newCapacity-minCapacity<0)
newCapacity=minCapacity;if(newCapacity<0){if(minCapacity<0)
throw new OutOfMemoryError();newCapacity=Integer.MAX_VALUE;}
this.buf=Arrays.copyOfUint8Array(this.buf,newCapacity);}
write(b){this.ensureCapacity(this.count+1);this.buf[this.count]=b;this.count+=1;}
writeBytesOffset(b,off,len){if((off<0)||(off>b.length)||(len<0)||((off+len)-b.length>0)){throw new IndexOutOfBoundsException();}
this.ensureCapacity(this.count+len);System.arraycopy(b,off,this.buf,this.count,len);this.count+=len;}
writeTo(out){out.writeBytesOffset(this.buf,0,this.count);}
reset(){this.count=0;}
toByteArray(){return Arrays.copyOfUint8Array(this.buf,this.count);}
size(){return this.count;}
toString(param){if(!param){return this.toString_void();}
if(typeof param==='string'){return this.toString_string(param);}
return this.toString_number(param);}
toString_void(){return new String(this.buf).toString();}
toString_string(charsetName){return new String(this.buf).toString();}
toString_number(hibyte){return new String(this.buf).toString();}
close(){}}
var Mode$2;(function(Mode){Mode[Mode["ALPHA"]=0]="ALPHA";Mode[Mode["LOWER"]=1]="LOWER";Mode[Mode["MIXED"]=2]="MIXED";Mode[Mode["PUNCT"]=3]="PUNCT";Mode[Mode["ALPHA_SHIFT"]=4]="ALPHA_SHIFT";Mode[Mode["PUNCT_SHIFT"]=5]="PUNCT_SHIFT";})(Mode$2||(Mode$2={}));function getBigIntConstructor(){if(typeof window!=='undefined'){return window['BigInt']||null;}
if(typeof global!=='undefined'){return global['BigInt']||null;}
if(typeof self!=='undefined'){return self['BigInt']||null;}
throw new Error('Can\'t search globals for BigInt!');}
let BigInteger;function createBigInt(num){if(typeof BigInteger==='undefined'){BigInteger=getBigIntConstructor();}
if(BigInteger===null){throw new Error('BigInt is not supported!');}
return BigInteger(num);}
function getEXP900(){let EXP900=[];EXP900[0]=createBigInt(1);let nineHundred=createBigInt(900);EXP900[1]=nineHundred;for(let i=2;i<16;i++){EXP900[i]=EXP900[i-1]*nineHundred;}
return EXP900;}
class DecodedBitStreamParser$2{static decode(codewords,ecLevel){let result=new StringBuilder('');let encoding=CharacterSetECI.ISO8859_1;result.enableDecoding(encoding);let codeIndex=1;let code=codewords[codeIndex++];let resultMetadata=new PDF417ResultMetadata();while(codeIndex<codewords[0]){switch(code){case DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH:codeIndex=DecodedBitStreamParser$2.textCompaction(codewords,codeIndex,result);break;case DecodedBitStreamParser$2.BYTE_COMPACTION_MODE_LATCH:case DecodedBitStreamParser$2.BYTE_COMPACTION_MODE_LATCH_6:codeIndex=DecodedBitStreamParser$2.byteCompaction(code,codewords,encoding,codeIndex,result);break;case DecodedBitStreamParser$2.MODE_SHIFT_TO_BYTE_COMPACTION_MODE:result.append(codewords[codeIndex++]);break;case DecodedBitStreamParser$2.NUMERIC_COMPACTION_MODE_LATCH:codeIndex=DecodedBitStreamParser$2.numericCompaction(codewords,codeIndex,result);break;case DecodedBitStreamParser$2.ECI_CHARSET:let charsetECI=CharacterSetECI.getCharacterSetECIByValue(codewords[codeIndex++]);break;case DecodedBitStreamParser$2.ECI_GENERAL_PURPOSE:codeIndex+=2;break;case DecodedBitStreamParser$2.ECI_USER_DEFINED:codeIndex++;break;case DecodedBitStreamParser$2.BEGIN_MACRO_PDF417_CONTROL_BLOCK:codeIndex=DecodedBitStreamParser$2.decodeMacroBlock(codewords,codeIndex,resultMetadata);break;case DecodedBitStreamParser$2.BEGIN_MACRO_PDF417_OPTIONAL_FIELD:case DecodedBitStreamParser$2.MACRO_PDF417_TERMINATOR:throw new FormatException();default:codeIndex--;codeIndex=DecodedBitStreamParser$2.textCompaction(codewords,codeIndex,result);break;}
if(codeIndex<codewords.length){code=codewords[codeIndex++];}
else{throw FormatException.getFormatInstance();}}
if(result.length()===0){throw FormatException.getFormatInstance();}
let decoderResult=new DecoderResult(null,result.toString(),null,ecLevel);decoderResult.setOther(resultMetadata);return decoderResult;}
static decodeMacroBlock(codewords,codeIndex,resultMetadata){if(codeIndex+DecodedBitStreamParser$2.NUMBER_OF_SEQUENCE_CODEWORDS>codewords[0]){throw FormatException.getFormatInstance();}
let segmentIndexArray=new Int32Array(DecodedBitStreamParser$2.NUMBER_OF_SEQUENCE_CODEWORDS);for(let i=0;i<DecodedBitStreamParser$2.NUMBER_OF_SEQUENCE_CODEWORDS;i++,codeIndex++){segmentIndexArray[i]=codewords[codeIndex];}
resultMetadata.setSegmentIndex(Integer.parseInt(DecodedBitStreamParser$2.decodeBase900toBase10(segmentIndexArray,DecodedBitStreamParser$2.NUMBER_OF_SEQUENCE_CODEWORDS)));let fileId=new StringBuilder();codeIndex=DecodedBitStreamParser$2.textCompaction(codewords,codeIndex,fileId);resultMetadata.setFileId(fileId.toString());let optionalFieldsStart=-1;if(codewords[codeIndex]===DecodedBitStreamParser$2.BEGIN_MACRO_PDF417_OPTIONAL_FIELD){optionalFieldsStart=codeIndex+1;}
while(codeIndex<codewords[0]){switch(codewords[codeIndex]){case DecodedBitStreamParser$2.BEGIN_MACRO_PDF417_OPTIONAL_FIELD:codeIndex++;switch(codewords[codeIndex]){case DecodedBitStreamParser$2.MACRO_PDF417_OPTIONAL_FIELD_FILE_NAME:let fileName=new StringBuilder();codeIndex=DecodedBitStreamParser$2.textCompaction(codewords,codeIndex+1,fileName);resultMetadata.setFileName(fileName.toString());break;case DecodedBitStreamParser$2.MACRO_PDF417_OPTIONAL_FIELD_SENDER:let sender=new StringBuilder();codeIndex=DecodedBitStreamParser$2.textCompaction(codewords,codeIndex+1,sender);resultMetadata.setSender(sender.toString());break;case DecodedBitStreamParser$2.MACRO_PDF417_OPTIONAL_FIELD_ADDRESSEE:let addressee=new StringBuilder();codeIndex=DecodedBitStreamParser$2.textCompaction(codewords,codeIndex+1,addressee);resultMetadata.setAddressee(addressee.toString());break;case DecodedBitStreamParser$2.MACRO_PDF417_OPTIONAL_FIELD_SEGMENT_COUNT:let segmentCount=new StringBuilder();codeIndex=DecodedBitStreamParser$2.numericCompaction(codewords,codeIndex+1,segmentCount);resultMetadata.setSegmentCount(Integer.parseInt(segmentCount.toString()));break;case DecodedBitStreamParser$2.MACRO_PDF417_OPTIONAL_FIELD_TIME_STAMP:let timestamp=new StringBuilder();codeIndex=DecodedBitStreamParser$2.numericCompaction(codewords,codeIndex+1,timestamp);resultMetadata.setTimestamp(Long.parseLong(timestamp.toString()));break;case DecodedBitStreamParser$2.MACRO_PDF417_OPTIONAL_FIELD_CHECKSUM:let checksum=new StringBuilder();codeIndex=DecodedBitStreamParser$2.numericCompaction(codewords,codeIndex+1,checksum);resultMetadata.setChecksum(Integer.parseInt(checksum.toString()));break;case DecodedBitStreamParser$2.MACRO_PDF417_OPTIONAL_FIELD_FILE_SIZE:let fileSize=new StringBuilder();codeIndex=DecodedBitStreamParser$2.numericCompaction(codewords,codeIndex+1,fileSize);resultMetadata.setFileSize(Long.parseLong(fileSize.toString()));break;default:throw FormatException.getFormatInstance();}
break;case DecodedBitStreamParser$2.MACRO_PDF417_TERMINATOR:codeIndex++;resultMetadata.setLastSegment(true);break;default:throw FormatException.getFormatInstance();}}
if(optionalFieldsStart!==-1){let optionalFieldsLength=codeIndex-optionalFieldsStart;if(resultMetadata.isLastSegment()){optionalFieldsLength--;}
resultMetadata.setOptionalData(Arrays.copyOfRange(codewords,optionalFieldsStart,optionalFieldsStart+optionalFieldsLength));}
return codeIndex;}
static textCompaction(codewords,codeIndex,result){let textCompactionData=new Int32Array((codewords[0]-codeIndex)*2);let byteCompactionData=new Int32Array((codewords[0]-codeIndex)*2);let index=0;let end=false;while((codeIndex<codewords[0])&&!end){let code=codewords[codeIndex++];if(code<DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH){textCompactionData[index]=code/30;textCompactionData[index+1]=code%30;index+=2;}
else{switch(code){case DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH:textCompactionData[index++]=DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH;break;case DecodedBitStreamParser$2.BYTE_COMPACTION_MODE_LATCH:case DecodedBitStreamParser$2.BYTE_COMPACTION_MODE_LATCH_6:case DecodedBitStreamParser$2.NUMERIC_COMPACTION_MODE_LATCH:case DecodedBitStreamParser$2.BEGIN_MACRO_PDF417_CONTROL_BLOCK:case DecodedBitStreamParser$2.BEGIN_MACRO_PDF417_OPTIONAL_FIELD:case DecodedBitStreamParser$2.MACRO_PDF417_TERMINATOR:codeIndex--;end=true;break;case DecodedBitStreamParser$2.MODE_SHIFT_TO_BYTE_COMPACTION_MODE:textCompactionData[index]=DecodedBitStreamParser$2.MODE_SHIFT_TO_BYTE_COMPACTION_MODE;code=codewords[codeIndex++];byteCompactionData[index]=code;index++;break;}}}
DecodedBitStreamParser$2.decodeTextCompaction(textCompactionData,byteCompactionData,index,result);return codeIndex;}
static decodeTextCompaction(textCompactionData,byteCompactionData,length,result){let subMode=Mode$2.ALPHA;let priorToShiftMode=Mode$2.ALPHA;let i=0;while(i<length){let subModeCh=textCompactionData[i];let ch='';switch(subMode){case Mode$2.ALPHA:if(subModeCh<26){ch=String.fromCharCode(65+subModeCh);}
else{switch(subModeCh){case 26:ch=' ';break;case DecodedBitStreamParser$2.LL:subMode=Mode$2.LOWER;break;case DecodedBitStreamParser$2.ML:subMode=Mode$2.MIXED;break;case DecodedBitStreamParser$2.PS:priorToShiftMode=subMode;subMode=Mode$2.PUNCT_SHIFT;break;case DecodedBitStreamParser$2.MODE_SHIFT_TO_BYTE_COMPACTION_MODE:result.append(byteCompactionData[i]);break;case DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH:subMode=Mode$2.ALPHA;break;}}
break;case Mode$2.LOWER:if(subModeCh<26){ch=String.fromCharCode(97+subModeCh);}
else{switch(subModeCh){case 26:ch=' ';break;case DecodedBitStreamParser$2.AS:priorToShiftMode=subMode;subMode=Mode$2.ALPHA_SHIFT;break;case DecodedBitStreamParser$2.ML:subMode=Mode$2.MIXED;break;case DecodedBitStreamParser$2.PS:priorToShiftMode=subMode;subMode=Mode$2.PUNCT_SHIFT;break;case DecodedBitStreamParser$2.MODE_SHIFT_TO_BYTE_COMPACTION_MODE:result.append(byteCompactionData[i]);break;case DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH:subMode=Mode$2.ALPHA;break;}}
break;case Mode$2.MIXED:if(subModeCh<DecodedBitStreamParser$2.PL){ch=DecodedBitStreamParser$2.MIXED_CHARS[subModeCh];}
else{switch(subModeCh){case DecodedBitStreamParser$2.PL:subMode=Mode$2.PUNCT;break;case 26:ch=' ';break;case DecodedBitStreamParser$2.LL:subMode=Mode$2.LOWER;break;case DecodedBitStreamParser$2.AL:subMode=Mode$2.ALPHA;break;case DecodedBitStreamParser$2.PS:priorToShiftMode=subMode;subMode=Mode$2.PUNCT_SHIFT;break;case DecodedBitStreamParser$2.MODE_SHIFT_TO_BYTE_COMPACTION_MODE:result.append(byteCompactionData[i]);break;case DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH:subMode=Mode$2.ALPHA;break;}}
break;case Mode$2.PUNCT:if(subModeCh<DecodedBitStreamParser$2.PAL){ch=DecodedBitStreamParser$2.PUNCT_CHARS[subModeCh];}
else{switch(subModeCh){case DecodedBitStreamParser$2.PAL:subMode=Mode$2.ALPHA;break;case DecodedBitStreamParser$2.MODE_SHIFT_TO_BYTE_COMPACTION_MODE:result.append(byteCompactionData[i]);break;case DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH:subMode=Mode$2.ALPHA;break;}}
break;case Mode$2.ALPHA_SHIFT:subMode=priorToShiftMode;if(subModeCh<26){ch=String.fromCharCode(65+subModeCh);}
else{switch(subModeCh){case 26:ch=' ';break;case DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH:subMode=Mode$2.ALPHA;break;}}
break;case Mode$2.PUNCT_SHIFT:subMode=priorToShiftMode;if(subModeCh<DecodedBitStreamParser$2.PAL){ch=DecodedBitStreamParser$2.PUNCT_CHARS[subModeCh];}
else{switch(subModeCh){case DecodedBitStreamParser$2.PAL:subMode=Mode$2.ALPHA;break;case DecodedBitStreamParser$2.MODE_SHIFT_TO_BYTE_COMPACTION_MODE:result.append(byteCompactionData[i]);break;case DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH:subMode=Mode$2.ALPHA;break;}}
break;}
if(ch!==''){result.append(ch);}
i++;}}
static byteCompaction(mode,codewords,encoding,codeIndex,result){let decodedBytes=new ByteArrayOutputStream();let count=0;let value=0;let end=false;switch(mode){case DecodedBitStreamParser$2.BYTE_COMPACTION_MODE_LATCH:let byteCompactedCodewords=new Int32Array(6);let nextCode=codewords[codeIndex++];while((codeIndex<codewords[0])&&!end){byteCompactedCodewords[count++]=nextCode;value=900*value+nextCode;nextCode=codewords[codeIndex++];switch(nextCode){case DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH:case DecodedBitStreamParser$2.BYTE_COMPACTION_MODE_LATCH:case DecodedBitStreamParser$2.NUMERIC_COMPACTION_MODE_LATCH:case DecodedBitStreamParser$2.BYTE_COMPACTION_MODE_LATCH_6:case DecodedBitStreamParser$2.BEGIN_MACRO_PDF417_CONTROL_BLOCK:case DecodedBitStreamParser$2.BEGIN_MACRO_PDF417_OPTIONAL_FIELD:case DecodedBitStreamParser$2.MACRO_PDF417_TERMINATOR:codeIndex--;end=true;break;default:if((count%5===0)&&(count>0)){for(let j=0;j<6;++j){decodedBytes.write(Number(createBigInt(value)>>createBigInt(8*(5-j))));}
value=0;count=0;}
break;}}
if(codeIndex===codewords[0]&&nextCode<DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH){byteCompactedCodewords[count++]=nextCode;}
for(let i=0;i<count;i++){decodedBytes.write(byteCompactedCodewords[i]);}
break;case DecodedBitStreamParser$2.BYTE_COMPACTION_MODE_LATCH_6:while(codeIndex<codewords[0]&&!end){let code=codewords[codeIndex++];if(code<DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH){count++;value=900*value+code;}
else{switch(code){case DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH:case DecodedBitStreamParser$2.BYTE_COMPACTION_MODE_LATCH:case DecodedBitStreamParser$2.NUMERIC_COMPACTION_MODE_LATCH:case DecodedBitStreamParser$2.BYTE_COMPACTION_MODE_LATCH_6:case DecodedBitStreamParser$2.BEGIN_MACRO_PDF417_CONTROL_BLOCK:case DecodedBitStreamParser$2.BEGIN_MACRO_PDF417_OPTIONAL_FIELD:case DecodedBitStreamParser$2.MACRO_PDF417_TERMINATOR:codeIndex--;end=true;break;}}
if((count%5===0)&&(count>0)){for(let j=0;j<6;++j){decodedBytes.write(Number(createBigInt(value)>>createBigInt(8*(5-j))));}
value=0;count=0;}}
break;}
result.append(StringEncoding.decode(decodedBytes.toByteArray(),encoding));return codeIndex;}
static numericCompaction(codewords,codeIndex,result){let count=0;let end=false;let numericCodewords=new Int32Array(DecodedBitStreamParser$2.MAX_NUMERIC_CODEWORDS);while(codeIndex<codewords[0]&&!end){let code=codewords[codeIndex++];if(codeIndex===codewords[0]){end=true;}
if(code<DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH){numericCodewords[count]=code;count++;}
else{switch(code){case DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH:case DecodedBitStreamParser$2.BYTE_COMPACTION_MODE_LATCH:case DecodedBitStreamParser$2.BYTE_COMPACTION_MODE_LATCH_6:case DecodedBitStreamParser$2.BEGIN_MACRO_PDF417_CONTROL_BLOCK:case DecodedBitStreamParser$2.BEGIN_MACRO_PDF417_OPTIONAL_FIELD:case DecodedBitStreamParser$2.MACRO_PDF417_TERMINATOR:codeIndex--;end=true;break;}}
if((count%DecodedBitStreamParser$2.MAX_NUMERIC_CODEWORDS===0||code===DecodedBitStreamParser$2.NUMERIC_COMPACTION_MODE_LATCH||end)&&count>0){result.append(DecodedBitStreamParser$2.decodeBase900toBase10(numericCodewords,count));count=0;}}
return codeIndex;}
static decodeBase900toBase10(codewords,count){let result=createBigInt(0);for(let i=0;i<count;i++){result+=DecodedBitStreamParser$2.EXP900[count-i-1]*createBigInt(codewords[i]);}
let resultString=result.toString();if(resultString.charAt(0)!=='1'){throw new FormatException();}
return resultString.substring(1);}}
DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH=900;DecodedBitStreamParser$2.BYTE_COMPACTION_MODE_LATCH=901;DecodedBitStreamParser$2.NUMERIC_COMPACTION_MODE_LATCH=902;DecodedBitStreamParser$2.BYTE_COMPACTION_MODE_LATCH_6=924;DecodedBitStreamParser$2.ECI_USER_DEFINED=925;DecodedBitStreamParser$2.ECI_GENERAL_PURPOSE=926;DecodedBitStreamParser$2.ECI_CHARSET=927;DecodedBitStreamParser$2.BEGIN_MACRO_PDF417_CONTROL_BLOCK=928;DecodedBitStreamParser$2.BEGIN_MACRO_PDF417_OPTIONAL_FIELD=923;DecodedBitStreamParser$2.MACRO_PDF417_TERMINATOR=922;DecodedBitStreamParser$2.MODE_SHIFT_TO_BYTE_COMPACTION_MODE=913;DecodedBitStreamParser$2.MAX_NUMERIC_CODEWORDS=15;DecodedBitStreamParser$2.MACRO_PDF417_OPTIONAL_FIELD_FILE_NAME=0;DecodedBitStreamParser$2.MACRO_PDF417_OPTIONAL_FIELD_SEGMENT_COUNT=1;DecodedBitStreamParser$2.MACRO_PDF417_OPTIONAL_FIELD_TIME_STAMP=2;DecodedBitStreamParser$2.MACRO_PDF417_OPTIONAL_FIELD_SENDER=3;DecodedBitStreamParser$2.MACRO_PDF417_OPTIONAL_FIELD_ADDRESSEE=4;DecodedBitStreamParser$2.MACRO_PDF417_OPTIONAL_FIELD_FILE_SIZE=5;DecodedBitStreamParser$2.MACRO_PDF417_OPTIONAL_FIELD_CHECKSUM=6;DecodedBitStreamParser$2.PL=25;DecodedBitStreamParser$2.LL=27;DecodedBitStreamParser$2.AS=27;DecodedBitStreamParser$2.ML=28;DecodedBitStreamParser$2.AL=28;DecodedBitStreamParser$2.PS=29;DecodedBitStreamParser$2.PAL=29;DecodedBitStreamParser$2.PUNCT_CHARS=';<>@[\\]_`~!\r\t,:\n-.$/"|*()?{}\'';DecodedBitStreamParser$2.MIXED_CHARS='0123456789&\r\t,:#-.$/+%*=^';DecodedBitStreamParser$2.EXP900=getBigIntConstructor()?getEXP900():[];DecodedBitStreamParser$2.NUMBER_OF_SEQUENCE_CODEWORDS=2;class PDF417ScanningDecoder{constructor(){}
static decode(image,imageTopLeft,imageBottomLeft,imageTopRight,imageBottomRight,minCodewordWidth,maxCodewordWidth){let boundingBox=new BoundingBox(image,imageTopLeft,imageBottomLeft,imageTopRight,imageBottomRight);let leftRowIndicatorColumn=null;let rightRowIndicatorColumn=null;let detectionResult;for(let firstPass=true;;firstPass=false){if(imageTopLeft!=null){leftRowIndicatorColumn=PDF417ScanningDecoder.getRowIndicatorColumn(image,boundingBox,imageTopLeft,true,minCodewordWidth,maxCodewordWidth);}
if(imageTopRight!=null){rightRowIndicatorColumn=PDF417ScanningDecoder.getRowIndicatorColumn(image,boundingBox,imageTopRight,false,minCodewordWidth,maxCodewordWidth);}
detectionResult=PDF417ScanningDecoder.merge(leftRowIndicatorColumn,rightRowIndicatorColumn);if(detectionResult==null){throw NotFoundException.getNotFoundInstance();}
let resultBox=detectionResult.getBoundingBox();if(firstPass&&resultBox!=null&&(resultBox.getMinY()<boundingBox.getMinY()||resultBox.getMaxY()>boundingBox.getMaxY())){boundingBox=resultBox;}
else{break;}}
detectionResult.setBoundingBox(boundingBox);let maxBarcodeColumn=detectionResult.getBarcodeColumnCount()+1;detectionResult.setDetectionResultColumn(0,leftRowIndicatorColumn);detectionResult.setDetectionResultColumn(maxBarcodeColumn,rightRowIndicatorColumn);let leftToRight=leftRowIndicatorColumn!=null;for(let barcodeColumnCount=1;barcodeColumnCount<=maxBarcodeColumn;barcodeColumnCount++){let barcodeColumn=leftToRight?barcodeColumnCount:maxBarcodeColumn-barcodeColumnCount;if(detectionResult.getDetectionResultColumn(barcodeColumn)!==undefined){continue;}
let detectionResultColumn;if(barcodeColumn===0||barcodeColumn===maxBarcodeColumn){detectionResultColumn=new DetectionResultRowIndicatorColumn(boundingBox,barcodeColumn===0);}
else{detectionResultColumn=new DetectionResultColumn(boundingBox);}
detectionResult.setDetectionResultColumn(barcodeColumn,detectionResultColumn);let startColumn=-1;let previousStartColumn=startColumn;for(let imageRow=boundingBox.getMinY();imageRow<=boundingBox.getMaxY();imageRow++){startColumn=PDF417ScanningDecoder.getStartColumn(detectionResult,barcodeColumn,imageRow,leftToRight);if(startColumn<0||startColumn>boundingBox.getMaxX()){if(previousStartColumn===-1){continue;}
startColumn=previousStartColumn;}
let codeword=PDF417ScanningDecoder.detectCodeword(image,boundingBox.getMinX(),boundingBox.getMaxX(),leftToRight,startColumn,imageRow,minCodewordWidth,maxCodewordWidth);if(codeword!=null){detectionResultColumn.setCodeword(imageRow,codeword);previousStartColumn=startColumn;minCodewordWidth=Math.min(minCodewordWidth,codeword.getWidth());maxCodewordWidth=Math.max(maxCodewordWidth,codeword.getWidth());}}}
return PDF417ScanningDecoder.createDecoderResult(detectionResult);}
static merge(leftRowIndicatorColumn,rightRowIndicatorColumn){if(leftRowIndicatorColumn==null&&rightRowIndicatorColumn==null){return null;}
let barcodeMetadata=PDF417ScanningDecoder.getBarcodeMetadata(leftRowIndicatorColumn,rightRowIndicatorColumn);if(barcodeMetadata==null){return null;}
let boundingBox=BoundingBox.merge(PDF417ScanningDecoder.adjustBoundingBox(leftRowIndicatorColumn),PDF417ScanningDecoder.adjustBoundingBox(rightRowIndicatorColumn));return new DetectionResult(barcodeMetadata,boundingBox);}
static adjustBoundingBox(rowIndicatorColumn){if(rowIndicatorColumn==null){return null;}
let rowHeights=rowIndicatorColumn.getRowHeights();if(rowHeights==null){return null;}
let maxRowHeight=PDF417ScanningDecoder.getMax(rowHeights);let missingStartRows=0;for(let rowHeight of rowHeights){missingStartRows+=maxRowHeight-rowHeight;if(rowHeight>0){break;}}
let codewords=rowIndicatorColumn.getCodewords();for(let row=0;missingStartRows>0&&codewords[row]==null;row++){missingStartRows--;}
let missingEndRows=0;for(let row=rowHeights.length-1;row>=0;row--){missingEndRows+=maxRowHeight-rowHeights[row];if(rowHeights[row]>0){break;}}
for(let row=codewords.length-1;missingEndRows>0&&codewords[row]==null;row--){missingEndRows--;}
return rowIndicatorColumn.getBoundingBox().addMissingRows(missingStartRows,missingEndRows,rowIndicatorColumn.isLeft());}
static getMax(values){let maxValue=-1;for(let value of values){maxValue=Math.max(maxValue,value);}
return maxValue;}
static getBarcodeMetadata(leftRowIndicatorColumn,rightRowIndicatorColumn){let leftBarcodeMetadata;if(leftRowIndicatorColumn==null||(leftBarcodeMetadata=leftRowIndicatorColumn.getBarcodeMetadata())==null){return rightRowIndicatorColumn==null?null:rightRowIndicatorColumn.getBarcodeMetadata();}
let rightBarcodeMetadata;if(rightRowIndicatorColumn==null||(rightBarcodeMetadata=rightRowIndicatorColumn.getBarcodeMetadata())==null){return leftBarcodeMetadata;}
if(leftBarcodeMetadata.getColumnCount()!==rightBarcodeMetadata.getColumnCount()&&leftBarcodeMetadata.getErrorCorrectionLevel()!==rightBarcodeMetadata.getErrorCorrectionLevel()&&leftBarcodeMetadata.getRowCount()!==rightBarcodeMetadata.getRowCount()){return null;}
return leftBarcodeMetadata;}
static getRowIndicatorColumn(image,boundingBox,startPoint,leftToRight,minCodewordWidth,maxCodewordWidth){let rowIndicatorColumn=new DetectionResultRowIndicatorColumn(boundingBox,leftToRight);for(let i=0;i<2;i++){let increment=i===0?1:-1;let startColumn=Math.trunc(Math.trunc(startPoint.getX()));for(let imageRow=Math.trunc(Math.trunc(startPoint.getY()));imageRow<=boundingBox.getMaxY()&&imageRow>=boundingBox.getMinY();imageRow+=increment){let codeword=PDF417ScanningDecoder.detectCodeword(image,0,image.getWidth(),leftToRight,startColumn,imageRow,minCodewordWidth,maxCodewordWidth);if(codeword!=null){rowIndicatorColumn.setCodeword(imageRow,codeword);if(leftToRight){startColumn=codeword.getStartX();}
else{startColumn=codeword.getEndX();}}}}
return rowIndicatorColumn;}
static adjustCodewordCount(detectionResult,barcodeMatrix){let barcodeMatrix01=barcodeMatrix[0][1];let numberOfCodewords=barcodeMatrix01.getValue();let calculatedNumberOfCodewords=detectionResult.getBarcodeColumnCount()*detectionResult.getBarcodeRowCount()-
PDF417ScanningDecoder.getNumberOfECCodeWords(detectionResult.getBarcodeECLevel());if(numberOfCodewords.length===0){if(calculatedNumberOfCodewords<1||calculatedNumberOfCodewords>PDF417Common.MAX_CODEWORDS_IN_BARCODE){throw NotFoundException.getNotFoundInstance();}
barcodeMatrix01.setValue(calculatedNumberOfCodewords);}
else if(numberOfCodewords[0]!==calculatedNumberOfCodewords){barcodeMatrix01.setValue(calculatedNumberOfCodewords);}}
static createDecoderResult(detectionResult){let barcodeMatrix=PDF417ScanningDecoder.createBarcodeMatrix(detectionResult);PDF417ScanningDecoder.adjustCodewordCount(detectionResult,barcodeMatrix);let erasures=new Array();let codewords=new Int32Array(detectionResult.getBarcodeRowCount()*detectionResult.getBarcodeColumnCount());let ambiguousIndexValuesList=[];let ambiguousIndexesList=new Array();for(let row=0;row<detectionResult.getBarcodeRowCount();row++){for(let column=0;column<detectionResult.getBarcodeColumnCount();column++){let values=barcodeMatrix[row][column+1].getValue();let codewordIndex=row*detectionResult.getBarcodeColumnCount()+column;if(values.length===0){erasures.push(codewordIndex);}
else if(values.length===1){codewords[codewordIndex]=values[0];}
else{ambiguousIndexesList.push(codewordIndex);ambiguousIndexValuesList.push(values);}}}
let ambiguousIndexValues=new Array(ambiguousIndexValuesList.length);for(let i=0;i<ambiguousIndexValues.length;i++){ambiguousIndexValues[i]=ambiguousIndexValuesList[i];}
return PDF417ScanningDecoder.createDecoderResultFromAmbiguousValues(detectionResult.getBarcodeECLevel(),codewords,PDF417Common.toIntArray(erasures),PDF417Common.toIntArray(ambiguousIndexesList),ambiguousIndexValues);}
static createDecoderResultFromAmbiguousValues(ecLevel,codewords,erasureArray,ambiguousIndexes,ambiguousIndexValues){let ambiguousIndexCount=new Int32Array(ambiguousIndexes.length);let tries=100;while(tries-->0){for(let i=0;i<ambiguousIndexCount.length;i++){codewords[ambiguousIndexes[i]]=ambiguousIndexValues[i][ambiguousIndexCount[i]];}
try{return PDF417ScanningDecoder.decodeCodewords(codewords,ecLevel,erasureArray);}
catch(err){let ignored=err instanceof ChecksumException;if(!ignored){throw err;}}
if(ambiguousIndexCount.length===0){throw ChecksumException.getChecksumInstance();}
for(let i=0;i<ambiguousIndexCount.length;i++){if(ambiguousIndexCount[i]<ambiguousIndexValues[i].length-1){ambiguousIndexCount[i]++;break;}
else{ambiguousIndexCount[i]=0;if(i===ambiguousIndexCount.length-1){throw ChecksumException.getChecksumInstance();}}}}
throw ChecksumException.getChecksumInstance();}
static createBarcodeMatrix(detectionResult){let barcodeMatrix=Array.from({length:detectionResult.getBarcodeRowCount()},()=>new Array(detectionResult.getBarcodeColumnCount()+2));for(let row=0;row<barcodeMatrix.length;row++){for(let column=0;column<barcodeMatrix[row].length;column++){barcodeMatrix[row][column]=new BarcodeValue();}}
let column=0;for(let detectionResultColumn of detectionResult.getDetectionResultColumns()){if(detectionResultColumn!=null){for(let codeword of detectionResultColumn.getCodewords()){if(codeword!=null){let rowNumber=codeword.getRowNumber();if(rowNumber>=0){if(rowNumber>=barcodeMatrix.length){continue;}
barcodeMatrix[rowNumber][column].setValue(codeword.getValue());}}}}
column++;}
return barcodeMatrix;}
static isValidBarcodeColumn(detectionResult,barcodeColumn){return barcodeColumn>=0&&barcodeColumn<=detectionResult.getBarcodeColumnCount()+1;}
static getStartColumn(detectionResult,barcodeColumn,imageRow,leftToRight){let offset=leftToRight?1:-1;let codeword=null;if(PDF417ScanningDecoder.isValidBarcodeColumn(detectionResult,barcodeColumn-offset)){codeword=detectionResult.getDetectionResultColumn(barcodeColumn-offset).getCodeword(imageRow);}
if(codeword!=null){return leftToRight?codeword.getEndX():codeword.getStartX();}
codeword=detectionResult.getDetectionResultColumn(barcodeColumn).getCodewordNearby(imageRow);if(codeword!=null){return leftToRight?codeword.getStartX():codeword.getEndX();}
if(PDF417ScanningDecoder.isValidBarcodeColumn(detectionResult,barcodeColumn-offset)){codeword=detectionResult.getDetectionResultColumn(barcodeColumn-offset).getCodewordNearby(imageRow);}
if(codeword!=null){return leftToRight?codeword.getEndX():codeword.getStartX();}
let skippedColumns=0;while(PDF417ScanningDecoder.isValidBarcodeColumn(detectionResult,barcodeColumn-offset)){barcodeColumn-=offset;for(let previousRowCodeword of detectionResult.getDetectionResultColumn(barcodeColumn).getCodewords()){if(previousRowCodeword!=null){return(leftToRight?previousRowCodeword.getEndX():previousRowCodeword.getStartX())+
offset*skippedColumns*(previousRowCodeword.getEndX()-previousRowCodeword.getStartX());}}
skippedColumns++;}
return leftToRight?detectionResult.getBoundingBox().getMinX():detectionResult.getBoundingBox().getMaxX();}
static detectCodeword(image,minColumn,maxColumn,leftToRight,startColumn,imageRow,minCodewordWidth,maxCodewordWidth){startColumn=PDF417ScanningDecoder.adjustCodewordStartColumn(image,minColumn,maxColumn,leftToRight,startColumn,imageRow);let moduleBitCount=PDF417ScanningDecoder.getModuleBitCount(image,minColumn,maxColumn,leftToRight,startColumn,imageRow);if(moduleBitCount==null){return null;}
let endColumn;let codewordBitCount=MathUtils.sum(moduleBitCount);if(leftToRight){endColumn=startColumn+codewordBitCount;}
else{for(let i=0;i<moduleBitCount.length/2;i++){let tmpCount=moduleBitCount[i];moduleBitCount[i]=moduleBitCount[moduleBitCount.length-1-i];moduleBitCount[moduleBitCount.length-1-i]=tmpCount;}
endColumn=startColumn;startColumn=endColumn-codewordBitCount;}
if(!PDF417ScanningDecoder.checkCodewordSkew(codewordBitCount,minCodewordWidth,maxCodewordWidth)){return null;}
let decodedValue=PDF417CodewordDecoder.getDecodedValue(moduleBitCount);let codeword=PDF417Common.getCodeword(decodedValue);if(codeword===-1){return null;}
return new Codeword(startColumn,endColumn,PDF417ScanningDecoder.getCodewordBucketNumber(decodedValue),codeword);}
static getModuleBitCount(image,minColumn,maxColumn,leftToRight,startColumn,imageRow){let imageColumn=startColumn;let moduleBitCount=new Int32Array(8);let moduleNumber=0;let increment=leftToRight?1:-1;let previousPixelValue=leftToRight;while((leftToRight?imageColumn<maxColumn:imageColumn>=minColumn)&&moduleNumber<moduleBitCount.length){if(image.get(imageColumn,imageRow)===previousPixelValue){moduleBitCount[moduleNumber]++;imageColumn+=increment;}
else{moduleNumber++;previousPixelValue=!previousPixelValue;}}
if(moduleNumber===moduleBitCount.length||((imageColumn===(leftToRight?maxColumn:minColumn))&&moduleNumber===moduleBitCount.length-1)){return moduleBitCount;}
return null;}
static getNumberOfECCodeWords(barcodeECLevel){return 2<<barcodeECLevel;}
static adjustCodewordStartColumn(image,minColumn,maxColumn,leftToRight,codewordStartColumn,imageRow){let correctedStartColumn=codewordStartColumn;let increment=leftToRight?-1:1;for(let i=0;i<2;i++){while((leftToRight?correctedStartColumn>=minColumn:correctedStartColumn<maxColumn)&&leftToRight===image.get(correctedStartColumn,imageRow)){if(Math.abs(codewordStartColumn-correctedStartColumn)>PDF417ScanningDecoder.CODEWORD_SKEW_SIZE){return codewordStartColumn;}
correctedStartColumn+=increment;}
increment=-increment;leftToRight=!leftToRight;}
return correctedStartColumn;}
static checkCodewordSkew(codewordSize,minCodewordWidth,maxCodewordWidth){return minCodewordWidth-PDF417ScanningDecoder.CODEWORD_SKEW_SIZE<=codewordSize&&codewordSize<=maxCodewordWidth+PDF417ScanningDecoder.CODEWORD_SKEW_SIZE;}
static decodeCodewords(codewords,ecLevel,erasures){if(codewords.length===0){throw FormatException.getFormatInstance();}
let numECCodewords=1<<(ecLevel+1);let correctedErrorsCount=PDF417ScanningDecoder.correctErrors(codewords,erasures,numECCodewords);PDF417ScanningDecoder.verifyCodewordCount(codewords,numECCodewords);let decoderResult=DecodedBitStreamParser$2.decode(codewords,''+ecLevel);decoderResult.setErrorsCorrected(correctedErrorsCount);decoderResult.setErasures(erasures.length);return decoderResult;}
static correctErrors(codewords,erasures,numECCodewords){if(erasures!=null&&erasures.length>numECCodewords/2+PDF417ScanningDecoder.MAX_ERRORS||numECCodewords<0||numECCodewords>PDF417ScanningDecoder.MAX_EC_CODEWORDS){throw ChecksumException.getChecksumInstance();}
return PDF417ScanningDecoder.errorCorrection.decode(codewords,numECCodewords,erasures);}
static verifyCodewordCount(codewords,numECCodewords){if(codewords.length<4){throw FormatException.getFormatInstance();}
let numberOfCodewords=codewords[0];if(numberOfCodewords>codewords.length){throw FormatException.getFormatInstance();}
if(numberOfCodewords===0){if(numECCodewords<codewords.length){codewords[0]=codewords.length-numECCodewords;}
else{throw FormatException.getFormatInstance();}}}
static getBitCountForCodeword(codeword){let result=new Int32Array(8);let previousValue=0;let i=result.length-1;while(true){if((codeword&0x1)!==previousValue){previousValue=codeword&0x1;i--;if(i<0){break;}}
result[i]++;codeword>>=1;}
return result;}
static getCodewordBucketNumber(codeword){if(codeword instanceof Int32Array){return this.getCodewordBucketNumber_Int32Array(codeword);}
return this.getCodewordBucketNumber_number(codeword);}
static getCodewordBucketNumber_number(codeword){return PDF417ScanningDecoder.getCodewordBucketNumber(PDF417ScanningDecoder.getBitCountForCodeword(codeword));}
static getCodewordBucketNumber_Int32Array(moduleBitCount){return(moduleBitCount[0]-moduleBitCount[2]+moduleBitCount[4]-moduleBitCount[6]+9)%9;}
static toString(barcodeMatrix){let formatter=new Formatter();for(let row=0;row<barcodeMatrix.length;row++){formatter.format('Row %2d: ',row);for(let column=0;column<barcodeMatrix[row].length;column++){let barcodeValue=barcodeMatrix[row][column];if(barcodeValue.getValue().length===0){formatter.format('        ',null);}
else{formatter.format('%4d(%2d)',barcodeValue.getValue()[0],barcodeValue.getConfidence(barcodeValue.getValue()[0]));}}
formatter.format('%n');}
return formatter.toString();}}
PDF417ScanningDecoder.CODEWORD_SKEW_SIZE=2;PDF417ScanningDecoder.MAX_ERRORS=3;PDF417ScanningDecoder.MAX_EC_CODEWORDS=512;PDF417ScanningDecoder.errorCorrection=new ErrorCorrection();class PDF417Reader{decode(image,hints=null){let result=PDF417Reader.decode(image,hints,false);if(result==null||result.length===0||result[0]==null){throw NotFoundException.getNotFoundInstance();}
return result[0];}
decodeMultiple(image,hints=null){try{return PDF417Reader.decode(image,hints,true);}
catch(ignored){if(ignored instanceof FormatException||ignored instanceof ChecksumException){throw NotFoundException.getNotFoundInstance();}
throw ignored;}}
static decode(image,hints,multiple){const results=new Array();const detectorResult=Detector$3.detectMultiple(image,hints,multiple);for(const points of detectorResult.getPoints()){const decoderResult=PDF417ScanningDecoder.decode(detectorResult.getBits(),points[4],points[5],points[6],points[7],PDF417Reader.getMinCodewordWidth(points),PDF417Reader.getMaxCodewordWidth(points));const result=new Result(decoderResult.getText(),decoderResult.getRawBytes(),undefined,points,BarcodeFormat$1.PDF_417);result.putMetadata(ResultMetadataType$1.ERROR_CORRECTION_LEVEL,decoderResult.getECLevel());const pdf417ResultMetadata=decoderResult.getOther();if(pdf417ResultMetadata!=null){result.putMetadata(ResultMetadataType$1.PDF417_EXTRA_METADATA,pdf417ResultMetadata);}
results.push(result);}
return results.map(x=>x);}
static getMaxWidth(p1,p2){if(p1==null||p2==null){return 0;}
return Math.trunc(Math.abs(p1.getX()-p2.getX()));}
static getMinWidth(p1,p2){if(p1==null||p2==null){return Integer.MAX_VALUE;}
return Math.trunc(Math.abs(p1.getX()-p2.getX()));}
static getMaxCodewordWidth(p){return Math.floor(Math.max(Math.max(PDF417Reader.getMaxWidth(p[0],p[4]),PDF417Reader.getMaxWidth(p[6],p[2])*PDF417Common.MODULES_IN_CODEWORD/PDF417Common.MODULES_IN_STOP_PATTERN),Math.max(PDF417Reader.getMaxWidth(p[1],p[5]),PDF417Reader.getMaxWidth(p[7],p[3])*PDF417Common.MODULES_IN_CODEWORD/PDF417Common.MODULES_IN_STOP_PATTERN)));}
static getMinCodewordWidth(p){return Math.floor(Math.min(Math.min(PDF417Reader.getMinWidth(p[0],p[4]),PDF417Reader.getMinWidth(p[6],p[2])*PDF417Common.MODULES_IN_CODEWORD/PDF417Common.MODULES_IN_STOP_PATTERN),Math.min(PDF417Reader.getMinWidth(p[1],p[5]),PDF417Reader.getMinWidth(p[7],p[3])*PDF417Common.MODULES_IN_CODEWORD/PDF417Common.MODULES_IN_STOP_PATTERN)));}
reset(){}}
class ReaderException extends Exception{}
ReaderException.kind='ReaderException';class MultiFormatReader{decode(image,hints){this.setHints(hints);return this.decodeInternal(image);}
decodeWithState(image){if(this.readers===null||this.readers===undefined){this.setHints(null);}
return this.decodeInternal(image);}
setHints(hints){this.hints=hints;const tryHarder=hints!==null&&hints!==undefined&&undefined!==hints.get(DecodeHintType$1.TRY_HARDER);const formats=hints===null||hints===undefined?null:hints.get(DecodeHintType$1.POSSIBLE_FORMATS);const readers=new Array();if(formats!==null&&formats!==undefined){const addOneDReader=formats.some(f=>f===BarcodeFormat$1.UPC_A||f===BarcodeFormat$1.UPC_E||f===BarcodeFormat$1.EAN_13||f===BarcodeFormat$1.EAN_8||f===BarcodeFormat$1.CODABAR||f===BarcodeFormat$1.CODE_39||f===BarcodeFormat$1.CODE_93||f===BarcodeFormat$1.CODE_128||f===BarcodeFormat$1.ITF||f===BarcodeFormat$1.RSS_14||f===BarcodeFormat$1.RSS_EXPANDED);if(addOneDReader&&!tryHarder){readers.push(new MultiFormatOneDReader(hints));}
if(formats.includes(BarcodeFormat$1.QR_CODE)){readers.push(new QRCodeReader());}
if(formats.includes(BarcodeFormat$1.DATA_MATRIX)){readers.push(new DataMatrixReader());}
if(formats.includes(BarcodeFormat$1.AZTEC)){readers.push(new AztecReader());}
if(formats.includes(BarcodeFormat$1.PDF_417)){readers.push(new PDF417Reader());}
if(addOneDReader&&tryHarder){readers.push(new MultiFormatOneDReader(hints));}}
if(readers.length===0){if(!tryHarder){readers.push(new MultiFormatOneDReader(hints));}
readers.push(new QRCodeReader());readers.push(new DataMatrixReader());readers.push(new AztecReader());readers.push(new PDF417Reader());if(tryHarder){readers.push(new MultiFormatOneDReader(hints));}}
this.readers=readers;}
reset(){if(this.readers!==null){for(const reader of this.readers){reader.reset();}}}
decodeInternal(image){if(this.readers===null){throw new ReaderException('No readers where selected, nothing can be read.');}
for(const reader of this.readers){try{return reader.decode(image,this.hints);}
catch(ex){if(ex instanceof ReaderException){continue;}}}
throw new NotFoundException('No MultiFormat Readers were able to detect the code.');}}
class BrowserMultiFormatReader extends BrowserCodeReader{constructor(hints=null,timeBetweenScansMillis=500){const reader=new MultiFormatReader();reader.setHints(hints);super(reader,timeBetweenScansMillis);}
decodeBitmap(binaryBitmap){return this.reader.decodeWithState(binaryBitmap);}}
class BrowserPDF417Reader extends BrowserCodeReader{constructor(timeBetweenScansMillis=500){super(new PDF417Reader(),timeBetweenScansMillis);}}
class BrowserQRCodeReader extends BrowserCodeReader{constructor(timeBetweenScansMillis=500){super(new QRCodeReader(),timeBetweenScansMillis);}}
var EncodeHintType;(function(EncodeHintType){EncodeHintType[EncodeHintType["ERROR_CORRECTION"]=0]="ERROR_CORRECTION";EncodeHintType[EncodeHintType["CHARACTER_SET"]=1]="CHARACTER_SET";EncodeHintType[EncodeHintType["DATA_MATRIX_SHAPE"]=2]="DATA_MATRIX_SHAPE";EncodeHintType[EncodeHintType["DATA_MATRIX_COMPACT"]=3]="DATA_MATRIX_COMPACT";EncodeHintType[EncodeHintType["MIN_SIZE"]=4]="MIN_SIZE";EncodeHintType[EncodeHintType["MAX_SIZE"]=5]="MAX_SIZE";EncodeHintType[EncodeHintType["MARGIN"]=6]="MARGIN";EncodeHintType[EncodeHintType["PDF417_COMPACT"]=7]="PDF417_COMPACT";EncodeHintType[EncodeHintType["PDF417_COMPACTION"]=8]="PDF417_COMPACTION";EncodeHintType[EncodeHintType["PDF417_DIMENSIONS"]=9]="PDF417_DIMENSIONS";EncodeHintType[EncodeHintType["AZTEC_LAYERS"]=10]="AZTEC_LAYERS";EncodeHintType[EncodeHintType["QR_VERSION"]=11]="QR_VERSION";EncodeHintType[EncodeHintType["GS1_FORMAT"]=12]="GS1_FORMAT";EncodeHintType[EncodeHintType["FORCE_C40"]=13]="FORCE_C40";})(EncodeHintType||(EncodeHintType={}));var EncodeHintType$1=EncodeHintType;class ReedSolomonEncoder{constructor(field){this.field=field;this.cachedGenerators=[];this.cachedGenerators.push(new GenericGFPoly(field,Int32Array.from([1])));}
buildGenerator(degree){const cachedGenerators=this.cachedGenerators;if(degree>=cachedGenerators.length){let lastGenerator=cachedGenerators[cachedGenerators.length-1];const field=this.field;for(let d=cachedGenerators.length;d<=degree;d++){const nextGenerator=lastGenerator.multiply(new GenericGFPoly(field,Int32Array.from([1,field.exp(d-1+field.getGeneratorBase())])));cachedGenerators.push(nextGenerator);lastGenerator=nextGenerator;}}
return cachedGenerators[degree];}
encode(toEncode,ecBytes){if(ecBytes===0){throw new IllegalArgumentException('No error correction bytes');}
const dataBytes=toEncode.length-ecBytes;if(dataBytes<=0){throw new IllegalArgumentException('No data bytes provided');}
const generator=this.buildGenerator(ecBytes);const infoCoefficients=new Int32Array(dataBytes);System.arraycopy(toEncode,0,infoCoefficients,0,dataBytes);let info=new GenericGFPoly(this.field,infoCoefficients);info=info.multiplyByMonomial(ecBytes,1);const remainder=info.divide(generator)[1];const coefficients=remainder.getCoefficients();const numZeroCoefficients=ecBytes-coefficients.length;for(let i=0;i<numZeroCoefficients;i++){toEncode[dataBytes+i]=0;}
System.arraycopy(coefficients,0,toEncode,dataBytes+numZeroCoefficients,coefficients.length);}}
class MaskUtil{constructor(){}
static applyMaskPenaltyRule1(matrix){return MaskUtil.applyMaskPenaltyRule1Internal(matrix,true)+MaskUtil.applyMaskPenaltyRule1Internal(matrix,false);}
static applyMaskPenaltyRule2(matrix){let penalty=0;const array=matrix.getArray();const width=matrix.getWidth();const height=matrix.getHeight();for(let y=0;y<height-1;y++){const arrayY=array[y];for(let x=0;x<width-1;x++){const value=arrayY[x];if(value===arrayY[x+1]&&value===array[y+1][x]&&value===array[y+1][x+1]){penalty++;}}}
return MaskUtil.N2*penalty;}
static applyMaskPenaltyRule3(matrix){let numPenalties=0;const array=matrix.getArray();const width=matrix.getWidth();const height=matrix.getHeight();for(let y=0;y<height;y++){for(let x=0;x<width;x++){const arrayY=array[y];if(x+6<width&&arrayY[x]===1&&arrayY[x+1]===0&&arrayY[x+2]===1&&arrayY[x+3]===1&&arrayY[x+4]===1&&arrayY[x+5]===0&&arrayY[x+6]===1&&(MaskUtil.isWhiteHorizontal(arrayY,x-4,x)||MaskUtil.isWhiteHorizontal(arrayY,x+7,x+11))){numPenalties++;}
if(y+6<height&&array[y][x]===1&&array[y+1][x]===0&&array[y+2][x]===1&&array[y+3][x]===1&&array[y+4][x]===1&&array[y+5][x]===0&&array[y+6][x]===1&&(MaskUtil.isWhiteVertical(array,x,y-4,y)||MaskUtil.isWhiteVertical(array,x,y+7,y+11))){numPenalties++;}}}
return numPenalties*MaskUtil.N3;}
static isWhiteHorizontal(rowArray,from,to){from=Math.max(from,0);to=Math.min(to,rowArray.length);for(let i=from;i<to;i++){if(rowArray[i]===1){return false;}}
return true;}
static isWhiteVertical(array,col,from,to){from=Math.max(from,0);to=Math.min(to,array.length);for(let i=from;i<to;i++){if(array[i][col]===1){return false;}}
return true;}
static applyMaskPenaltyRule4(matrix){let numDarkCells=0;const array=matrix.getArray();const width=matrix.getWidth();const height=matrix.getHeight();for(let y=0;y<height;y++){const arrayY=array[y];for(let x=0;x<width;x++){if(arrayY[x]===1){numDarkCells++;}}}
const numTotalCells=matrix.getHeight()*matrix.getWidth();const fivePercentVariances=Math.floor(Math.abs(numDarkCells*2-numTotalCells)*10/numTotalCells);return fivePercentVariances*MaskUtil.N4;}
static getDataMaskBit(maskPattern,x,y){let intermediate;let temp;switch(maskPattern){case 0:intermediate=(y+x)&0x1;break;case 1:intermediate=y&0x1;break;case 2:intermediate=x%3;break;case 3:intermediate=(y+x)%3;break;case 4:intermediate=(Math.floor(y/2)+Math.floor(x/3))&0x1;break;case 5:temp=y*x;intermediate=(temp&0x1)+(temp%3);break;case 6:temp=y*x;intermediate=((temp&0x1)+(temp%3))&0x1;break;case 7:temp=y*x;intermediate=((temp%3)+((y+x)&0x1))&0x1;break;default:throw new IllegalArgumentException('Invalid mask pattern: '+maskPattern);}
return intermediate===0;}
static applyMaskPenaltyRule1Internal(matrix,isHorizontal){let penalty=0;const iLimit=isHorizontal?matrix.getHeight():matrix.getWidth();const jLimit=isHorizontal?matrix.getWidth():matrix.getHeight();const array=matrix.getArray();for(let i=0;i<iLimit;i++){let numSameBitCells=0;let prevBit=-1;for(let j=0;j<jLimit;j++){const bit=isHorizontal?array[i][j]:array[j][i];if(bit===prevBit){numSameBitCells++;}
else{if(numSameBitCells>=5){penalty+=MaskUtil.N1+(numSameBitCells-5);}
numSameBitCells=1;prevBit=bit;}}
if(numSameBitCells>=5){penalty+=MaskUtil.N1+(numSameBitCells-5);}}
return penalty;}}
MaskUtil.N1=3;MaskUtil.N2=3;MaskUtil.N3=40;MaskUtil.N4=10;class ByteMatrix{constructor(width,height){this.width=width;this.height=height;const bytes=new Array(height);for(let i=0;i!==height;i++){bytes[i]=new Uint8Array(width);}
this.bytes=bytes;}
getHeight(){return this.height;}
getWidth(){return this.width;}
get(x,y){return this.bytes[y][x];}
getArray(){return this.bytes;}
setNumber(x,y,value){this.bytes[y][x]=value;}
setBoolean(x,y,value){this.bytes[y][x]=(value?1:0);}
clear(value){for(const aByte of this.bytes){Arrays.fill(aByte,value);}}
equals(o){if(!(o instanceof ByteMatrix)){return false;}
const other=o;if(this.width!==other.width){return false;}
if(this.height!==other.height){return false;}
for(let y=0,height=this.height;y<height;++y){const bytesY=this.bytes[y];const otherBytesY=other.bytes[y];for(let x=0,width=this.width;x<width;++x){if(bytesY[x]!==otherBytesY[x]){return false;}}}
return true;}
toString(){const result=new StringBuilder();for(let y=0,height=this.height;y<height;++y){const bytesY=this.bytes[y];for(let x=0,width=this.width;x<width;++x){switch(bytesY[x]){case 0:result.append(' 0');break;case 1:result.append(' 1');break;default:result.append('  ');break;}}
result.append('\n');}
return result.toString();}}
class QRCode{constructor(){this.maskPattern=-1;}
getMode(){return this.mode;}
getECLevel(){return this.ecLevel;}
getVersion(){return this.version;}
getMaskPattern(){return this.maskPattern;}
getMatrix(){return this.matrix;}
toString(){const result=new StringBuilder();result.append('<<\n');result.append(' mode: ');result.append(this.mode?this.mode.toString():'null');result.append('\n ecLevel: ');result.append(this.ecLevel?this.ecLevel.toString():'null');result.append('\n version: ');result.append(this.version?this.version.toString():'null');result.append('\n maskPattern: ');result.append(this.maskPattern.toString());if(this.matrix){result.append('\n matrix:\n');result.append(this.matrix.toString());}
else{result.append('\n matrix: null\n');}
result.append('>>\n');return result.toString();}
setMode(value){this.mode=value;}
setECLevel(value){this.ecLevel=value;}
setVersion(version){this.version=version;}
setMaskPattern(value){this.maskPattern=value;}
setMatrix(value){this.matrix=value;}
static isValidMaskPattern(maskPattern){return maskPattern>=0&&maskPattern<QRCode.NUM_MASK_PATTERNS;}}
QRCode.NUM_MASK_PATTERNS=8;class WriterException extends Exception{}
WriterException.kind='WriterException';class MatrixUtil{constructor(){}
static clearMatrix(matrix){matrix.clear(255);}
static buildMatrix(dataBits,ecLevel,version,maskPattern,matrix){MatrixUtil.clearMatrix(matrix);MatrixUtil.embedBasicPatterns(version,matrix);MatrixUtil.embedTypeInfo(ecLevel,maskPattern,matrix);MatrixUtil.maybeEmbedVersionInfo(version,matrix);MatrixUtil.embedDataBits(dataBits,maskPattern,matrix);}
static embedBasicPatterns(version,matrix){MatrixUtil.embedPositionDetectionPatternsAndSeparators(matrix);MatrixUtil.embedDarkDotAtLeftBottomCorner(matrix);MatrixUtil.maybeEmbedPositionAdjustmentPatterns(version,matrix);MatrixUtil.embedTimingPatterns(matrix);}
static embedTypeInfo(ecLevel,maskPattern,matrix){const typeInfoBits=new BitArray();MatrixUtil.makeTypeInfoBits(ecLevel,maskPattern,typeInfoBits);for(let i=0,size=typeInfoBits.getSize();i<size;++i){const bit=typeInfoBits.get(typeInfoBits.getSize()-1-i);const coordinates=MatrixUtil.TYPE_INFO_COORDINATES[i];const x1=coordinates[0];const y1=coordinates[1];matrix.setBoolean(x1,y1,bit);if(i<8){const x2=matrix.getWidth()-i-1;const y2=8;matrix.setBoolean(x2,y2,bit);}
else{const x2=8;const y2=matrix.getHeight()-7+(i-8);matrix.setBoolean(x2,y2,bit);}}}
static maybeEmbedVersionInfo(version,matrix){if(version.getVersionNumber()<7){return;}
const versionInfoBits=new BitArray();MatrixUtil.makeVersionInfoBits(version,versionInfoBits);let bitIndex=6*3-1;for(let i=0;i<6;++i){for(let j=0;j<3;++j){const bit=versionInfoBits.get(bitIndex);bitIndex--;matrix.setBoolean(i,matrix.getHeight()-11+j,bit);matrix.setBoolean(matrix.getHeight()-11+j,i,bit);}}}
static embedDataBits(dataBits,maskPattern,matrix){let bitIndex=0;let direction=-1;let x=matrix.getWidth()-1;let y=matrix.getHeight()-1;while(x>0){if(x===6){x-=1;}
while(y>=0&&y<matrix.getHeight()){for(let i=0;i<2;++i){const xx=x-i;if(!MatrixUtil.isEmpty(matrix.get(xx,y))){continue;}
let bit;if(bitIndex<dataBits.getSize()){bit=dataBits.get(bitIndex);++bitIndex;}
else{bit=false;}
if(maskPattern!==255&&MaskUtil.getDataMaskBit(maskPattern,xx,y)){bit=!bit;}
matrix.setBoolean(xx,y,bit);}
y+=direction;}
direction=-direction;y+=direction;x-=2;}
if(bitIndex!==dataBits.getSize()){throw new WriterException('Not all bits consumed: '+bitIndex+'/'+dataBits.getSize());}}
static findMSBSet(value){return 32-Integer.numberOfLeadingZeros(value);}
static calculateBCHCode(value,poly){if(poly===0){throw new IllegalArgumentException('0 polynomial');}
const msbSetInPoly=MatrixUtil.findMSBSet(poly);value<<=msbSetInPoly-1;while(MatrixUtil.findMSBSet(value)>=msbSetInPoly){value^=poly<<(MatrixUtil.findMSBSet(value)-msbSetInPoly);}
return value;}
static makeTypeInfoBits(ecLevel,maskPattern,bits){if(!QRCode.isValidMaskPattern(maskPattern)){throw new WriterException('Invalid mask pattern');}
const typeInfo=(ecLevel.getBits()<<3)|maskPattern;bits.appendBits(typeInfo,5);const bchCode=MatrixUtil.calculateBCHCode(typeInfo,MatrixUtil.TYPE_INFO_POLY);bits.appendBits(bchCode,10);const maskBits=new BitArray();maskBits.appendBits(MatrixUtil.TYPE_INFO_MASK_PATTERN,15);bits.xor(maskBits);if(bits.getSize()!==15){throw new WriterException('should not happen but we got: '+bits.getSize());}}
static makeVersionInfoBits(version,bits){bits.appendBits(version.getVersionNumber(),6);const bchCode=MatrixUtil.calculateBCHCode(version.getVersionNumber(),MatrixUtil.VERSION_INFO_POLY);bits.appendBits(bchCode,12);if(bits.getSize()!==18){throw new WriterException('should not happen but we got: '+bits.getSize());}}
static isEmpty(value){return value===255;}
static embedTimingPatterns(matrix){for(let i=8;i<matrix.getWidth()-8;++i){const bit=(i+1)%2;if(MatrixUtil.isEmpty(matrix.get(i,6))){matrix.setNumber(i,6,bit);}
if(MatrixUtil.isEmpty(matrix.get(6,i))){matrix.setNumber(6,i,bit);}}}
static embedDarkDotAtLeftBottomCorner(matrix){if(matrix.get(8,matrix.getHeight()-8)===0){throw new WriterException();}
matrix.setNumber(8,matrix.getHeight()-8,1);}
static embedHorizontalSeparationPattern(xStart,yStart,matrix){for(let x=0;x<8;++x){if(!MatrixUtil.isEmpty(matrix.get(xStart+x,yStart))){throw new WriterException();}
matrix.setNumber(xStart+x,yStart,0);}}
static embedVerticalSeparationPattern(xStart,yStart,matrix){for(let y=0;y<7;++y){if(!MatrixUtil.isEmpty(matrix.get(xStart,yStart+y))){throw new WriterException();}
matrix.setNumber(xStart,yStart+y,0);}}
static embedPositionAdjustmentPattern(xStart,yStart,matrix){for(let y=0;y<5;++y){const patternY=MatrixUtil.POSITION_ADJUSTMENT_PATTERN[y];for(let x=0;x<5;++x){matrix.setNumber(xStart+x,yStart+y,patternY[x]);}}}
static embedPositionDetectionPattern(xStart,yStart,matrix){for(let y=0;y<7;++y){const patternY=MatrixUtil.POSITION_DETECTION_PATTERN[y];for(let x=0;x<7;++x){matrix.setNumber(xStart+x,yStart+y,patternY[x]);}}}
static embedPositionDetectionPatternsAndSeparators(matrix){const pdpWidth=MatrixUtil.POSITION_DETECTION_PATTERN[0].length;MatrixUtil.embedPositionDetectionPattern(0,0,matrix);MatrixUtil.embedPositionDetectionPattern(matrix.getWidth()-pdpWidth,0,matrix);MatrixUtil.embedPositionDetectionPattern(0,matrix.getWidth()-pdpWidth,matrix);const hspWidth=8;MatrixUtil.embedHorizontalSeparationPattern(0,hspWidth-1,matrix);MatrixUtil.embedHorizontalSeparationPattern(matrix.getWidth()-hspWidth,hspWidth-1,matrix);MatrixUtil.embedHorizontalSeparationPattern(0,matrix.getWidth()-hspWidth,matrix);const vspSize=7;MatrixUtil.embedVerticalSeparationPattern(vspSize,0,matrix);MatrixUtil.embedVerticalSeparationPattern(matrix.getHeight()-vspSize-1,0,matrix);MatrixUtil.embedVerticalSeparationPattern(vspSize,matrix.getHeight()-vspSize,matrix);}
static maybeEmbedPositionAdjustmentPatterns(version,matrix){if(version.getVersionNumber()<2){return;}
const index=version.getVersionNumber()-1;const coordinates=MatrixUtil.POSITION_ADJUSTMENT_PATTERN_COORDINATE_TABLE[index];for(let i=0,length=coordinates.length;i!==length;i++){const y=coordinates[i];if(y>=0){for(let j=0;j!==length;j++){const x=coordinates[j];if(x>=0&&MatrixUtil.isEmpty(matrix.get(x,y))){MatrixUtil.embedPositionAdjustmentPattern(x-2,y-2,matrix);}}}}}}
MatrixUtil.POSITION_DETECTION_PATTERN=Array.from([Int32Array.from([1,1,1,1,1,1,1]),Int32Array.from([1,0,0,0,0,0,1]),Int32Array.from([1,0,1,1,1,0,1]),Int32Array.from([1,0,1,1,1,0,1]),Int32Array.from([1,0,1,1,1,0,1]),Int32Array.from([1,0,0,0,0,0,1]),Int32Array.from([1,1,1,1,1,1,1]),]);MatrixUtil.POSITION_ADJUSTMENT_PATTERN=Array.from([Int32Array.from([1,1,1,1,1]),Int32Array.from([1,0,0,0,1]),Int32Array.from([1,0,1,0,1]),Int32Array.from([1,0,0,0,1]),Int32Array.from([1,1,1,1,1]),]);MatrixUtil.POSITION_ADJUSTMENT_PATTERN_COORDINATE_TABLE=Array.from([Int32Array.from([-1,-1,-1,-1,-1,-1,-1]),Int32Array.from([6,18,-1,-1,-1,-1,-1]),Int32Array.from([6,22,-1,-1,-1,-1,-1]),Int32Array.from([6,26,-1,-1,-1,-1,-1]),Int32Array.from([6,30,-1,-1,-1,-1,-1]),Int32Array.from([6,34,-1,-1,-1,-1,-1]),Int32Array.from([6,22,38,-1,-1,-1,-1]),Int32Array.from([6,24,42,-1,-1,-1,-1]),Int32Array.from([6,26,46,-1,-1,-1,-1]),Int32Array.from([6,28,50,-1,-1,-1,-1]),Int32Array.from([6,30,54,-1,-1,-1,-1]),Int32Array.from([6,32,58,-1,-1,-1,-1]),Int32Array.from([6,34,62,-1,-1,-1,-1]),Int32Array.from([6,26,46,66,-1,-1,-1]),Int32Array.from([6,26,48,70,-1,-1,-1]),Int32Array.from([6,26,50,74,-1,-1,-1]),Int32Array.from([6,30,54,78,-1,-1,-1]),Int32Array.from([6,30,56,82,-1,-1,-1]),Int32Array.from([6,30,58,86,-1,-1,-1]),Int32Array.from([6,34,62,90,-1,-1,-1]),Int32Array.from([6,28,50,72,94,-1,-1]),Int32Array.from([6,26,50,74,98,-1,-1]),Int32Array.from([6,30,54,78,102,-1,-1]),Int32Array.from([6,28,54,80,106,-1,-1]),Int32Array.from([6,32,58,84,110,-1,-1]),Int32Array.from([6,30,58,86,114,-1,-1]),Int32Array.from([6,34,62,90,118,-1,-1]),Int32Array.from([6,26,50,74,98,122,-1]),Int32Array.from([6,30,54,78,102,126,-1]),Int32Array.from([6,26,52,78,104,130,-1]),Int32Array.from([6,30,56,82,108,134,-1]),Int32Array.from([6,34,60,86,112,138,-1]),Int32Array.from([6,30,58,86,114,142,-1]),Int32Array.from([6,34,62,90,118,146,-1]),Int32Array.from([6,30,54,78,102,126,150]),Int32Array.from([6,24,50,76,102,128,154]),Int32Array.from([6,28,54,80,106,132,158]),Int32Array.from([6,32,58,84,110,136,162]),Int32Array.from([6,26,54,82,110,138,166]),Int32Array.from([6,30,58,86,114,142,170]),]);MatrixUtil.TYPE_INFO_COORDINATES=Array.from([Int32Array.from([8,0]),Int32Array.from([8,1]),Int32Array.from([8,2]),Int32Array.from([8,3]),Int32Array.from([8,4]),Int32Array.from([8,5]),Int32Array.from([8,7]),Int32Array.from([8,8]),Int32Array.from([7,8]),Int32Array.from([5,8]),Int32Array.from([4,8]),Int32Array.from([3,8]),Int32Array.from([2,8]),Int32Array.from([1,8]),Int32Array.from([0,8]),]);MatrixUtil.VERSION_INFO_POLY=0x1f25;MatrixUtil.TYPE_INFO_POLY=0x537;MatrixUtil.TYPE_INFO_MASK_PATTERN=0x5412;class BlockPair{constructor(dataBytes,errorCorrectionBytes){this.dataBytes=dataBytes;this.errorCorrectionBytes=errorCorrectionBytes;}
getDataBytes(){return this.dataBytes;}
getErrorCorrectionBytes(){return this.errorCorrectionBytes;}}
class Encoder{constructor(){}
static calculateMaskPenalty(matrix){return MaskUtil.applyMaskPenaltyRule1(matrix)
+MaskUtil.applyMaskPenaltyRule2(matrix)
+MaskUtil.applyMaskPenaltyRule3(matrix)
+MaskUtil.applyMaskPenaltyRule4(matrix);}
static encode(content,ecLevel,hints=null){let encoding=Encoder.DEFAULT_BYTE_MODE_ENCODING;const hasEncodingHint=hints!==null&&undefined!==hints.get(EncodeHintType$1.CHARACTER_SET);if(hasEncodingHint){encoding=hints.get(EncodeHintType$1.CHARACTER_SET).toString();}
const mode=this.chooseMode(content,encoding);const headerBits=new BitArray();if(mode===Mode$1.BYTE&&(hasEncodingHint||Encoder.DEFAULT_BYTE_MODE_ENCODING!==encoding)){const eci=CharacterSetECI.getCharacterSetECIByName(encoding);if(eci!==undefined){this.appendECI(eci,headerBits);}}
this.appendModeInfo(mode,headerBits);const dataBits=new BitArray();this.appendBytes(content,mode,dataBits,encoding);let version;if(hints!==null&&undefined!==hints.get(EncodeHintType$1.QR_VERSION)){const versionNumber=Number.parseInt(hints.get(EncodeHintType$1.QR_VERSION).toString(),10);version=Version$1.getVersionForNumber(versionNumber);const bitsNeeded=this.calculateBitsNeeded(mode,headerBits,dataBits,version);if(!this.willFit(bitsNeeded,version,ecLevel)){throw new WriterException('Data too big for requested version');}}
else{version=this.recommendVersion(ecLevel,mode,headerBits,dataBits);}
const headerAndDataBits=new BitArray();headerAndDataBits.appendBitArray(headerBits);const numLetters=mode===Mode$1.BYTE?dataBits.getSizeInBytes():content.length;this.appendLengthInfo(numLetters,version,mode,headerAndDataBits);headerAndDataBits.appendBitArray(dataBits);const ecBlocks=version.getECBlocksForLevel(ecLevel);const numDataBytes=version.getTotalCodewords()-ecBlocks.getTotalECCodewords();this.terminateBits(numDataBytes,headerAndDataBits);const finalBits=this.interleaveWithECBytes(headerAndDataBits,version.getTotalCodewords(),numDataBytes,ecBlocks.getNumBlocks());const qrCode=new QRCode();qrCode.setECLevel(ecLevel);qrCode.setMode(mode);qrCode.setVersion(version);const dimension=version.getDimensionForVersion();const matrix=new ByteMatrix(dimension,dimension);const maskPattern=this.chooseMaskPattern(finalBits,ecLevel,version,matrix);qrCode.setMaskPattern(maskPattern);MatrixUtil.buildMatrix(finalBits,ecLevel,version,maskPattern,matrix);qrCode.setMatrix(matrix);return qrCode;}
static recommendVersion(ecLevel,mode,headerBits,dataBits){const provisionalBitsNeeded=this.calculateBitsNeeded(mode,headerBits,dataBits,Version$1.getVersionForNumber(1));const provisionalVersion=this.chooseVersion(provisionalBitsNeeded,ecLevel);const bitsNeeded=this.calculateBitsNeeded(mode,headerBits,dataBits,provisionalVersion);return this.chooseVersion(bitsNeeded,ecLevel);}
static calculateBitsNeeded(mode,headerBits,dataBits,version){return headerBits.getSize()+mode.getCharacterCountBits(version)+dataBits.getSize();}
static getAlphanumericCode(code){if(code<Encoder.ALPHANUMERIC_TABLE.length){return Encoder.ALPHANUMERIC_TABLE[code];}
return-1;}
static chooseMode(content,encoding=null){if(CharacterSetECI.SJIS.getName()===encoding&&this.isOnlyDoubleByteKanji(content)){return Mode$1.KANJI;}
let hasNumeric=false;let hasAlphanumeric=false;for(let i=0,length=content.length;i<length;++i){const c=content.charAt(i);if(Encoder.isDigit(c)){hasNumeric=true;}
else if(this.getAlphanumericCode(c.charCodeAt(0))!==-1){hasAlphanumeric=true;}
else{return Mode$1.BYTE;}}
if(hasAlphanumeric){return Mode$1.ALPHANUMERIC;}
if(hasNumeric){return Mode$1.NUMERIC;}
return Mode$1.BYTE;}
static isOnlyDoubleByteKanji(content){let bytes;try{bytes=StringEncoding.encode(content,CharacterSetECI.SJIS);}
catch(ignored){return false;}
const length=bytes.length;if(length%2!==0){return false;}
for(let i=0;i<length;i+=2){const byte1=bytes[i]&0xFF;if((byte1<0x81||byte1>0x9F)&&(byte1<0xE0||byte1>0xEB)){return false;}}
return true;}
static chooseMaskPattern(bits,ecLevel,version,matrix){let minPenalty=Number.MAX_SAFE_INTEGER;let bestMaskPattern=-1;for(let maskPattern=0;maskPattern<QRCode.NUM_MASK_PATTERNS;maskPattern++){MatrixUtil.buildMatrix(bits,ecLevel,version,maskPattern,matrix);let penalty=this.calculateMaskPenalty(matrix);if(penalty<minPenalty){minPenalty=penalty;bestMaskPattern=maskPattern;}}
return bestMaskPattern;}
static chooseVersion(numInputBits,ecLevel){for(let versionNum=1;versionNum<=40;versionNum++){const version=Version$1.getVersionForNumber(versionNum);if(Encoder.willFit(numInputBits,version,ecLevel)){return version;}}
throw new WriterException('Data too big');}
static willFit(numInputBits,version,ecLevel){const numBytes=version.getTotalCodewords();const ecBlocks=version.getECBlocksForLevel(ecLevel);const numEcBytes=ecBlocks.getTotalECCodewords();const numDataBytes=numBytes-numEcBytes;const totalInputBytes=(numInputBits+7)/8;return numDataBytes>=totalInputBytes;}
static terminateBits(numDataBytes,bits){const capacity=numDataBytes*8;if(bits.getSize()>capacity){throw new WriterException('data bits cannot fit in the QR Code'+bits.getSize()+' > '+
capacity);}
for(let i=0;i<4&&bits.getSize()<capacity;++i){bits.appendBit(false);}
const numBitsInLastByte=bits.getSize()&0x07;if(numBitsInLastByte>0){for(let i=numBitsInLastByte;i<8;i++){bits.appendBit(false);}}
const numPaddingBytes=numDataBytes-bits.getSizeInBytes();for(let i=0;i<numPaddingBytes;++i){bits.appendBits((i&0x01)===0?0xEC:0x11,8);}
if(bits.getSize()!==capacity){throw new WriterException('Bits size does not equal capacity');}}
static getNumDataBytesAndNumECBytesForBlockID(numTotalBytes,numDataBytes,numRSBlocks,blockID,numDataBytesInBlock,numECBytesInBlock){if(blockID>=numRSBlocks){throw new WriterException('Block ID too large');}
const numRsBlocksInGroup2=numTotalBytes%numRSBlocks;const numRsBlocksInGroup1=numRSBlocks-numRsBlocksInGroup2;const numTotalBytesInGroup1=Math.floor(numTotalBytes/numRSBlocks);const numTotalBytesInGroup2=numTotalBytesInGroup1+1;const numDataBytesInGroup1=Math.floor(numDataBytes/numRSBlocks);const numDataBytesInGroup2=numDataBytesInGroup1+1;const numEcBytesInGroup1=numTotalBytesInGroup1-numDataBytesInGroup1;const numEcBytesInGroup2=numTotalBytesInGroup2-numDataBytesInGroup2;if(numEcBytesInGroup1!==numEcBytesInGroup2){throw new WriterException('EC bytes mismatch');}
if(numRSBlocks!==numRsBlocksInGroup1+numRsBlocksInGroup2){throw new WriterException('RS blocks mismatch');}
if(numTotalBytes!==((numDataBytesInGroup1+numEcBytesInGroup1)*numRsBlocksInGroup1)+
((numDataBytesInGroup2+numEcBytesInGroup2)*numRsBlocksInGroup2)){throw new WriterException('Total bytes mismatch');}
if(blockID<numRsBlocksInGroup1){numDataBytesInBlock[0]=numDataBytesInGroup1;numECBytesInBlock[0]=numEcBytesInGroup1;}
else{numDataBytesInBlock[0]=numDataBytesInGroup2;numECBytesInBlock[0]=numEcBytesInGroup2;}}
static interleaveWithECBytes(bits,numTotalBytes,numDataBytes,numRSBlocks){if(bits.getSizeInBytes()!==numDataBytes){throw new WriterException('Number of bits and data bytes does not match');}
let dataBytesOffset=0;let maxNumDataBytes=0;let maxNumEcBytes=0;const blocks=new Array();for(let i=0;i<numRSBlocks;++i){const numDataBytesInBlock=new Int32Array(1);const numEcBytesInBlock=new Int32Array(1);Encoder.getNumDataBytesAndNumECBytesForBlockID(numTotalBytes,numDataBytes,numRSBlocks,i,numDataBytesInBlock,numEcBytesInBlock);const size=numDataBytesInBlock[0];const dataBytes=new Uint8Array(size);bits.toBytes(8*dataBytesOffset,dataBytes,0,size);const ecBytes=Encoder.generateECBytes(dataBytes,numEcBytesInBlock[0]);blocks.push(new BlockPair(dataBytes,ecBytes));maxNumDataBytes=Math.max(maxNumDataBytes,size);maxNumEcBytes=Math.max(maxNumEcBytes,ecBytes.length);dataBytesOffset+=numDataBytesInBlock[0];}
if(numDataBytes!==dataBytesOffset){throw new WriterException('Data bytes does not match offset');}
const result=new BitArray();for(let i=0;i<maxNumDataBytes;++i){for(const block of blocks){const dataBytes=block.getDataBytes();if(i<dataBytes.length){result.appendBits(dataBytes[i],8);}}}
for(let i=0;i<maxNumEcBytes;++i){for(const block of blocks){const ecBytes=block.getErrorCorrectionBytes();if(i<ecBytes.length){result.appendBits(ecBytes[i],8);}}}
if(numTotalBytes!==result.getSizeInBytes()){throw new WriterException('Interleaving error: '+numTotalBytes+' and '+
result.getSizeInBytes()+' differ.');}
return result;}
static generateECBytes(dataBytes,numEcBytesInBlock){const numDataBytes=dataBytes.length;const toEncode=new Int32Array(numDataBytes+numEcBytesInBlock);for(let i=0;i<numDataBytes;i++){toEncode[i]=dataBytes[i]&0xFF;}
new ReedSolomonEncoder(GenericGF.QR_CODE_FIELD_256).encode(toEncode,numEcBytesInBlock);const ecBytes=new Uint8Array(numEcBytesInBlock);for(let i=0;i<numEcBytesInBlock;i++){ecBytes[i]=toEncode[numDataBytes+i];}
return ecBytes;}
static appendModeInfo(mode,bits){bits.appendBits(mode.getBits(),4);}
static appendLengthInfo(numLetters,version,mode,bits){const numBits=mode.getCharacterCountBits(version);if(numLetters>=(1<<numBits)){throw new WriterException(numLetters+' is bigger than '+((1<<numBits)-1));}
bits.appendBits(numLetters,numBits);}
static appendBytes(content,mode,bits,encoding){switch(mode){case Mode$1.NUMERIC:Encoder.appendNumericBytes(content,bits);break;case Mode$1.ALPHANUMERIC:Encoder.appendAlphanumericBytes(content,bits);break;case Mode$1.BYTE:Encoder.append8BitBytes(content,bits,encoding);break;case Mode$1.KANJI:Encoder.appendKanjiBytes(content,bits);break;default:throw new WriterException('Invalid mode: '+mode);}}
static getDigit(singleCharacter){return singleCharacter.charCodeAt(0)-48;}
static isDigit(singleCharacter){const cn=Encoder.getDigit(singleCharacter);return cn>=0&&cn<=9;}
static appendNumericBytes(content,bits){const length=content.length;let i=0;while(i<length){const num1=Encoder.getDigit(content.charAt(i));if(i+2<length){const num2=Encoder.getDigit(content.charAt(i+1));const num3=Encoder.getDigit(content.charAt(i+2));bits.appendBits(num1*100+num2*10+num3,10);i+=3;}
else if(i+1<length){const num2=Encoder.getDigit(content.charAt(i+1));bits.appendBits(num1*10+num2,7);i+=2;}
else{bits.appendBits(num1,4);i++;}}}
static appendAlphanumericBytes(content,bits){const length=content.length;let i=0;while(i<length){const code1=Encoder.getAlphanumericCode(content.charCodeAt(i));if(code1===-1){throw new WriterException();}
if(i+1<length){const code2=Encoder.getAlphanumericCode(content.charCodeAt(i+1));if(code2===-1){throw new WriterException();}
bits.appendBits(code1*45+code2,11);i+=2;}
else{bits.appendBits(code1,6);i++;}}}
static append8BitBytes(content,bits,encoding){let bytes;try{bytes=StringEncoding.encode(content,encoding);}
catch(uee){throw new WriterException(uee);}
for(let i=0,length=bytes.length;i!==length;i++){const b=bytes[i];bits.appendBits(b,8);}}
static appendKanjiBytes(content,bits){let bytes;try{bytes=StringEncoding.encode(content,CharacterSetECI.SJIS);}
catch(uee){throw new WriterException(uee);}
const length=bytes.length;for(let i=0;i<length;i+=2){const byte1=bytes[i]&0xFF;const byte2=bytes[i+1]&0xFF;const code=((byte1<<8)&0xFFFFFFFF)|byte2;let subtracted=-1;if(code>=0x8140&&code<=0x9ffc){subtracted=code-0x8140;}
else if(code>=0xe040&&code<=0xebbf){subtracted=code-0xc140;}
if(subtracted===-1){throw new WriterException('Invalid byte sequence');}
const encoded=((subtracted>>8)*0xc0)+(subtracted&0xff);bits.appendBits(encoded,13);}}
static appendECI(eci,bits){bits.appendBits(Mode$1.ECI.getBits(),4);bits.appendBits(eci.getValue(),8);}}
Encoder.ALPHANUMERIC_TABLE=Int32Array.from([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,36,-1,-1,-1,37,38,-1,-1,-1,-1,39,40,-1,41,42,43,0,1,2,3,4,5,6,7,8,9,44,-1,-1,-1,-1,-1,-1,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,-1,-1,-1,-1,-1,]);Encoder.DEFAULT_BYTE_MODE_ENCODING=CharacterSetECI.UTF8.getName();class BrowserQRCodeSvgWriter{write(contents,width,height,hints=null){if(contents.length===0){throw new IllegalArgumentException('Found empty contents');}
if(width<0||height<0){throw new IllegalArgumentException('Requested dimensions are too small: '+width+'x'+height);}
let errorCorrectionLevel=ErrorCorrectionLevel.L;let quietZone=BrowserQRCodeSvgWriter.QUIET_ZONE_SIZE;if(hints!==null){if(undefined!==hints.get(EncodeHintType$1.ERROR_CORRECTION)){errorCorrectionLevel=ErrorCorrectionLevel.fromString(hints.get(EncodeHintType$1.ERROR_CORRECTION).toString());}
if(undefined!==hints.get(EncodeHintType$1.MARGIN)){quietZone=Number.parseInt(hints.get(EncodeHintType$1.MARGIN).toString(),10);}}
const code=Encoder.encode(contents,errorCorrectionLevel,hints);return this.renderResult(code,width,height,quietZone);}
writeToDom(containerElement,contents,width,height,hints=null){if(typeof containerElement==='string'){containerElement=document.querySelector(containerElement);}
const svgElement=this.write(contents,width,height,hints);if(containerElement)
containerElement.appendChild(svgElement);}
renderResult(code,width,height,quietZone){const input=code.getMatrix();if(input===null){throw new IllegalStateException();}
const inputWidth=input.getWidth();const inputHeight=input.getHeight();const qrWidth=inputWidth+(quietZone*2);const qrHeight=inputHeight+(quietZone*2);const outputWidth=Math.max(width,qrWidth);const outputHeight=Math.max(height,qrHeight);const multiple=Math.min(Math.floor(outputWidth/qrWidth),Math.floor(outputHeight/qrHeight));const leftPadding=Math.floor((outputWidth-(inputWidth*multiple))/2);const topPadding=Math.floor((outputHeight-(inputHeight*multiple))/2);const svgElement=this.createSVGElement(outputWidth,outputHeight);for(let inputY=0,outputY=topPadding;inputY<inputHeight;inputY++,outputY+=multiple){for(let inputX=0,outputX=leftPadding;inputX<inputWidth;inputX++,outputX+=multiple){if(input.get(inputX,inputY)===1){const svgRectElement=this.createSvgRectElement(outputX,outputY,multiple,multiple);svgElement.appendChild(svgRectElement);}}}
return svgElement;}
createSVGElement(w,h){const svgElement=document.createElementNS(BrowserQRCodeSvgWriter.SVG_NS,'svg');svgElement.setAttributeNS(null,'height',w.toString());svgElement.setAttributeNS(null,'width',h.toString());return svgElement;}
createSvgRectElement(x,y,w,h){const rect=document.createElementNS(BrowserQRCodeSvgWriter.SVG_NS,'rect');rect.setAttributeNS(null,'x',x.toString());rect.setAttributeNS(null,'y',y.toString());rect.setAttributeNS(null,'height',w.toString());rect.setAttributeNS(null,'width',h.toString());rect.setAttributeNS(null,'fill','#000000');return rect;}}
BrowserQRCodeSvgWriter.QUIET_ZONE_SIZE=4;BrowserQRCodeSvgWriter.SVG_NS='http://www.w3.org/2000/svg';class QRCodeWriter{encode(contents,format,width,height,hints){if(contents.length===0){throw new IllegalArgumentException('Found empty contents');}
if(format!==BarcodeFormat$1.QR_CODE){throw new IllegalArgumentException('Can only encode QR_CODE, but got '+format);}
if(width<0||height<0){throw new IllegalArgumentException(`Requested dimensions are too small: ${width}x${height}`);}
let errorCorrectionLevel=ErrorCorrectionLevel.L;let quietZone=QRCodeWriter.QUIET_ZONE_SIZE;if(hints!==null){if(undefined!==hints.get(EncodeHintType$1.ERROR_CORRECTION)){errorCorrectionLevel=ErrorCorrectionLevel.fromString(hints.get(EncodeHintType$1.ERROR_CORRECTION).toString());}
if(undefined!==hints.get(EncodeHintType$1.MARGIN)){quietZone=Number.parseInt(hints.get(EncodeHintType$1.MARGIN).toString(),10);}}
const code=Encoder.encode(contents,errorCorrectionLevel,hints);return QRCodeWriter.renderResult(code,width,height,quietZone);}
static renderResult(code,width,height,quietZone){const input=code.getMatrix();if(input===null){throw new IllegalStateException();}
const inputWidth=input.getWidth();const inputHeight=input.getHeight();const qrWidth=inputWidth+(quietZone*2);const qrHeight=inputHeight+(quietZone*2);const outputWidth=Math.max(width,qrWidth);const outputHeight=Math.max(height,qrHeight);const multiple=Math.min(Math.floor(outputWidth/qrWidth),Math.floor(outputHeight/qrHeight));const leftPadding=Math.floor((outputWidth-(inputWidth*multiple))/2);const topPadding=Math.floor((outputHeight-(inputHeight*multiple))/2);const output=new BitMatrix(outputWidth,outputHeight);for(let inputY=0,outputY=topPadding;inputY<inputHeight;inputY++,outputY+=multiple){for(let inputX=0,outputX=leftPadding;inputX<inputWidth;inputX++,outputX+=multiple){if(input.get(inputX,inputY)===1){output.setRegion(outputX,outputY,multiple,multiple);}}}
return output;}}
QRCodeWriter.QUIET_ZONE_SIZE=4;class MultiFormatWriter{encode(contents,format,width,height,hints){let writer;switch(format){case BarcodeFormat$1.QR_CODE:writer=new QRCodeWriter();break;default:throw new IllegalArgumentException('No encoder available for format '+format);}
return writer.encode(contents,format,width,height,hints);}}
class PlanarYUVLuminanceSource extends LuminanceSource{constructor(yuvData,dataWidth,dataHeight,left,top,width,height,reverseHorizontal){super(width,height);this.yuvData=yuvData;this.dataWidth=dataWidth;this.dataHeight=dataHeight;this.left=left;this.top=top;if(left+width>dataWidth||top+height>dataHeight){throw new IllegalArgumentException('Crop rectangle does not fit within image data.');}
if(reverseHorizontal){this.reverseHorizontal(width,height);}}
getRow(y,row){if(y<0||y>=this.getHeight()){throw new IllegalArgumentException('Requested row is outside the image: '+y);}
const width=this.getWidth();if(row===null||row===undefined||row.length<width){row=new Uint8ClampedArray(width);}
const offset=(y+this.top)*this.dataWidth+this.left;System.arraycopy(this.yuvData,offset,row,0,width);return row;}
getMatrix(){const width=this.getWidth();const height=this.getHeight();if(width===this.dataWidth&&height===this.dataHeight){return this.yuvData;}
const area=width*height;const matrix=new Uint8ClampedArray(area);let inputOffset=this.top*this.dataWidth+this.left;if(width===this.dataWidth){System.arraycopy(this.yuvData,inputOffset,matrix,0,area);return matrix;}
for(let y=0;y<height;y++){const outputOffset=y*width;System.arraycopy(this.yuvData,inputOffset,matrix,outputOffset,width);inputOffset+=this.dataWidth;}
return matrix;}
isCropSupported(){return true;}
crop(left,top,width,height){return new PlanarYUVLuminanceSource(this.yuvData,this.dataWidth,this.dataHeight,this.left+left,this.top+top,width,height,false);}
renderThumbnail(){const width=this.getWidth()/PlanarYUVLuminanceSource.THUMBNAIL_SCALE_FACTOR;const height=this.getHeight()/PlanarYUVLuminanceSource.THUMBNAIL_SCALE_FACTOR;const pixels=new Int32Array(width*height);const yuv=this.yuvData;let inputOffset=this.top*this.dataWidth+this.left;for(let y=0;y<height;y++){const outputOffset=y*width;for(let x=0;x<width;x++){const grey=yuv[inputOffset+x*PlanarYUVLuminanceSource.THUMBNAIL_SCALE_FACTOR]&0xff;pixels[outputOffset+x]=0xFF000000|(grey*0x00010101);}
inputOffset+=this.dataWidth*PlanarYUVLuminanceSource.THUMBNAIL_SCALE_FACTOR;}
return pixels;}
getThumbnailWidth(){return this.getWidth()/PlanarYUVLuminanceSource.THUMBNAIL_SCALE_FACTOR;}
getThumbnailHeight(){return this.getHeight()/PlanarYUVLuminanceSource.THUMBNAIL_SCALE_FACTOR;}
reverseHorizontal(width,height){const yuvData=this.yuvData;for(let y=0,rowStart=this.top*this.dataWidth+this.left;y<height;y++,rowStart+=this.dataWidth){const middle=rowStart+width/2;for(let x1=rowStart,x2=rowStart+width-1;x1<middle;x1++,x2--){const temp=yuvData[x1];yuvData[x1]=yuvData[x2];yuvData[x2]=temp;}}}
invert(){return new InvertedLuminanceSource(this);}}
PlanarYUVLuminanceSource.THUMBNAIL_SCALE_FACTOR=2;class RGBLuminanceSource extends LuminanceSource{constructor(luminances,width,height,dataWidth,dataHeight,left,top){super(width,height);this.dataWidth=dataWidth;this.dataHeight=dataHeight;this.left=left;this.top=top;if(luminances.BYTES_PER_ELEMENT===4){const size=width*height;const luminancesUint8Array=new Uint8ClampedArray(size);for(let offset=0;offset<size;offset++){const pixel=luminances[offset];const r=(pixel>>16)&0xff;const g2=(pixel>>7)&0x1fe;const b=pixel&0xff;luminancesUint8Array[offset]=((r+g2+b)/4)&0xFF;}
this.luminances=luminancesUint8Array;}
else{this.luminances=luminances;}
if(undefined===dataWidth){this.dataWidth=width;}
if(undefined===dataHeight){this.dataHeight=height;}
if(undefined===left){this.left=0;}
if(undefined===top){this.top=0;}
if(this.left+width>this.dataWidth||this.top+height>this.dataHeight){throw new IllegalArgumentException('Crop rectangle does not fit within image data.');}}
getRow(y,row){if(y<0||y>=this.getHeight()){throw new IllegalArgumentException('Requested row is outside the image: '+y);}
const width=this.getWidth();if(row===null||row===undefined||row.length<width){row=new Uint8ClampedArray(width);}
const offset=(y+this.top)*this.dataWidth+this.left;System.arraycopy(this.luminances,offset,row,0,width);return row;}
getMatrix(){const width=this.getWidth();const height=this.getHeight();if(width===this.dataWidth&&height===this.dataHeight){return this.luminances;}
const area=width*height;const matrix=new Uint8ClampedArray(area);let inputOffset=this.top*this.dataWidth+this.left;if(width===this.dataWidth){System.arraycopy(this.luminances,inputOffset,matrix,0,area);return matrix;}
for(let y=0;y<height;y++){const outputOffset=y*width;System.arraycopy(this.luminances,inputOffset,matrix,outputOffset,width);inputOffset+=this.dataWidth;}
return matrix;}
isCropSupported(){return true;}
crop(left,top,width,height){return new RGBLuminanceSource(this.luminances,width,height,this.dataWidth,this.dataHeight,this.left+left,this.top+top);}
invert(){return new InvertedLuminanceSource(this);}}
class Charset extends CharacterSetECI{static forName(name){return this.getCharacterSetECIByName(name);}}
class StandardCharsets{}
StandardCharsets.ISO_8859_1=CharacterSetECI.ISO8859_1;class DefaultPlacement{constructor(codewords,numcols,numrows){this.codewords=codewords;this.numcols=numcols;this.numrows=numrows;this.bits=new Uint8Array(numcols*numrows);Arrays.fill(this.bits,2);}
getNumrows(){return this.numrows;}
getNumcols(){return this.numcols;}
getBits(){return this.bits;}
getBit(col,row){return this.bits[row*this.numcols+col]===1;}
setBit(col,row,bit){this.bits[row*this.numcols+col]=bit?1:0;}
noBit(col,row){return this.bits[row*this.numcols+col]===2;}
place(){let pos=0;let row=4;let col=0;do{if(row===this.numrows&&col===0){this.corner1(pos++);}
if(row===this.numrows-2&&col===0&&this.numcols%4!==0){this.corner2(pos++);}
if(row===this.numrows-2&&col===0&&this.numcols%8===4){this.corner3(pos++);}
if(row===this.numrows+4&&col===2&&this.numcols%8===0){this.corner4(pos++);}
do{if(row<this.numrows&&col>=0&&this.noBit(col,row)){this.utah(row,col,pos++);}
row-=2;col+=2;}while(row>=0&&col<this.numcols);row++;col+=3;do{if(row>=0&&col<this.numcols&&this.noBit(col,row)){this.utah(row,col,pos++);}
row+=2;col-=2;}while(row<this.numrows&&col>=0);row+=3;col++;}while(row<this.numrows||col<this.numcols);if(this.noBit(this.numcols-1,this.numrows-1)){this.setBit(this.numcols-1,this.numrows-1,true);this.setBit(this.numcols-2,this.numrows-2,true);}}
module(row,col,pos,bit){if(row<0){row+=this.numrows;col+=4-((this.numrows+4)%8);}
if(col<0){col+=this.numcols;row+=4-((this.numcols+4)%8);}
let v=this.codewords.charCodeAt(pos);v&=1<<(8-bit);this.setBit(col,row,v!==0);}
utah(row,col,pos){this.module(row-2,col-2,pos,1);this.module(row-2,col-1,pos,2);this.module(row-1,col-2,pos,3);this.module(row-1,col-1,pos,4);this.module(row-1,col,pos,5);this.module(row,col-2,pos,6);this.module(row,col-1,pos,7);this.module(row,col,pos,8);}
corner1(pos){this.module(this.numrows-1,0,pos,1);this.module(this.numrows-1,1,pos,2);this.module(this.numrows-1,2,pos,3);this.module(0,this.numcols-2,pos,4);this.module(0,this.numcols-1,pos,5);this.module(1,this.numcols-1,pos,6);this.module(2,this.numcols-1,pos,7);this.module(3,this.numcols-1,pos,8);}
corner2(pos){this.module(this.numrows-3,0,pos,1);this.module(this.numrows-2,0,pos,2);this.module(this.numrows-1,0,pos,3);this.module(0,this.numcols-4,pos,4);this.module(0,this.numcols-3,pos,5);this.module(0,this.numcols-2,pos,6);this.module(0,this.numcols-1,pos,7);this.module(1,this.numcols-1,pos,8);}
corner3(pos){this.module(this.numrows-3,0,pos,1);this.module(this.numrows-2,0,pos,2);this.module(this.numrows-1,0,pos,3);this.module(0,this.numcols-2,pos,4);this.module(0,this.numcols-1,pos,5);this.module(1,this.numcols-1,pos,6);this.module(2,this.numcols-1,pos,7);this.module(3,this.numcols-1,pos,8);}
corner4(pos){this.module(this.numrows-1,0,pos,1);this.module(this.numrows-1,this.numcols-1,pos,2);this.module(0,this.numcols-3,pos,3);this.module(0,this.numcols-2,pos,4);this.module(0,this.numcols-1,pos,5);this.module(1,this.numcols-3,pos,6);this.module(1,this.numcols-2,pos,7);this.module(1,this.numcols-1,pos,8);}}
const FACTOR_SETS=[5,7,10,11,12,14,18,20,24,28,36,42,48,56,62,68,];const FACTORS=[[228,48,15,111,62],[23,68,144,134,240,92,254],[28,24,185,166,223,248,116,255,110,61],[175,138,205,12,194,168,39,245,60,97,120],[41,153,158,91,61,42,142,213,97,178,100,242],[156,97,192,252,95,9,157,119,138,45,18,186,83,185],[83,195,100,39,188,75,66,61,241,213,109,129,94,254,225,48,90,188,],[15,195,244,9,233,71,168,2,188,160,153,145,253,79,108,82,27,174,186,172,],[52,190,88,205,109,39,176,21,155,197,251,223,155,21,5,172,254,124,12,181,184,96,50,193,],[211,231,43,97,71,96,103,174,37,151,170,53,75,34,249,121,17,138,110,213,141,136,120,151,233,168,93,255,],[245,127,242,218,130,250,162,181,102,120,84,179,220,251,80,182,229,18,2,4,68,33,101,137,95,119,115,44,175,184,59,25,225,98,81,112,],[77,193,137,31,19,38,22,153,247,105,122,2,245,133,242,8,175,95,100,9,167,105,214,111,57,121,21,1,253,57,54,101,248,202,69,50,150,177,226,5,9,5,],[245,132,172,223,96,32,117,22,238,133,238,231,205,188,237,87,191,106,16,147,118,23,37,90,170,205,131,88,120,100,66,138,186,240,82,44,176,87,187,147,160,175,69,213,92,253,225,19,],[175,9,223,238,12,17,220,208,100,29,175,170,230,192,215,235,150,159,36,223,38,200,132,54,228,146,218,234,117,203,29,232,144,238,22,150,201,117,62,207,164,13,137,245,127,67,247,28,155,43,203,107,233,53,143,46,],[242,93,169,50,144,210,39,118,202,188,201,189,143,108,196,37,185,112,134,230,245,63,197,190,250,106,185,221,175,64,114,71,161,44,147,6,27,218,51,63,87,10,40,130,188,17,163,31,176,170,4,107,232,7,94,166,224,124,86,47,11,204,],[220,228,173,89,251,149,159,56,89,33,147,244,154,36,73,127,213,136,248,180,234,197,158,177,68,122,93,213,15,160,227,236,66,139,153,185,202,167,179,25,220,232,96,210,231,136,223,239,181,241,59,52,172,25,49,232,211,189,64,54,108,153,132,63,96,103,82,186,],];const MODULO_VALUE=0x12d;const static_LOG=(LOG,ALOG)=>{let p=1;for(let i=0;i<255;i++){ALOG[i]=p;LOG[p]=i;p*=2;if(p>=256){p^=MODULO_VALUE;}}
return{LOG,ALOG,};};const{LOG,ALOG}=static_LOG([],[]);(function(SymbolShapeHint){SymbolShapeHint[SymbolShapeHint["FORCE_NONE"]=0]="FORCE_NONE";SymbolShapeHint[SymbolShapeHint["FORCE_SQUARE"]=1]="FORCE_SQUARE";SymbolShapeHint[SymbolShapeHint["FORCE_RECTANGLE"]=2]="FORCE_RECTANGLE";})(exports.DataMatrixSymbolShapeHint||(exports.DataMatrixSymbolShapeHint={}));const PAD=129;const LATCH_TO_C40=230;const LATCH_TO_BASE256=231;const UPPER_SHIFT=235;const MACRO_05=236;const MACRO_06=237;const LATCH_TO_ANSIX12=238;const LATCH_TO_TEXT=239;const LATCH_TO_EDIFACT=240;const C40_UNLATCH=254;const X12_UNLATCH=254;const MACRO_05_HEADER='[)>\u001E05\u001D';const MACRO_06_HEADER='[)>\u001E06\u001D';const MACRO_TRAILER='\u001E\u0004';const ASCII_ENCODATION=0;const C40_ENCODATION=1;const TEXT_ENCODATION=2;const X12_ENCODATION=3;const EDIFACT_ENCODATION=4;const BASE256_ENCODATION=5;class ErrorCorrection$1{static encodeECC200(codewords,symbolInfo){if(codewords.length!==symbolInfo.getDataCapacity()){throw new Error('The number of codewords does not match the selected symbol');}
const sb=new StringBuilder();sb.append(codewords);const blockCount=symbolInfo.getInterleavedBlockCount();if(blockCount===1){const ecc=this.createECCBlock(codewords,symbolInfo.getErrorCodewords());sb.append(ecc);}
else{const dataSizes=[];const errorSizes=[];for(let i=0;i<blockCount;i++){dataSizes[i]=symbolInfo.getDataLengthForInterleavedBlock(i+1);errorSizes[i]=symbolInfo.getErrorLengthForInterleavedBlock(i+1);}
for(let block=0;block<blockCount;block++){const temp=new StringBuilder();for(let d=block;d<symbolInfo.getDataCapacity();d+=blockCount){temp.append(codewords.charAt(d));}
const ecc=this.createECCBlock(temp.toString(),errorSizes[block]);let pos=0;for(let e=block;e<errorSizes[block]*blockCount;e+=blockCount){sb.setCharAt(symbolInfo.getDataCapacity()+e,ecc.charAt(pos++));}}}
return sb.toString();}
static createECCBlock(codewords,numECWords){let table=-1;for(let i=0;i<FACTOR_SETS.length;i++){if(FACTOR_SETS[i]===numECWords){table=i;break;}}
if(table<0){throw new Error('Illegal number of error correction codewords specified: '+numECWords);}
const poly=FACTORS[table];const ecc=[];for(let i=0;i<numECWords;i++){ecc[i]=0;}
for(let i=0;i<codewords.length;i++){let m=ecc[numECWords-1]^codewords.charAt(i).charCodeAt(0);for(let k=numECWords-1;k>0;k--){if(m!==0&&poly[k]!==0){ecc[k]=ecc[k-1]^ALOG[(LOG[m]+LOG[poly[k]])%255];}
else{ecc[k]=ecc[k-1];}}
if(m!==0&&poly[0]!==0){ecc[0]=ALOG[(LOG[m]+LOG[poly[0]])%255];}
else{ecc[0]=0;}}
const eccReversed=[];for(let i=0;i<numECWords;i++){eccReversed[i]=ecc[numECWords-i-1];}
return eccReversed.map(c=>String.fromCharCode(c)).join('');}}
class ASCIIEncoder{getEncodingMode(){return ASCII_ENCODATION;}
encode(context){const n=HighLevelEncoder.determineConsecutiveDigitCount(context.getMessage(),context.pos);if(n>=2){context.writeCodeword(this.encodeASCIIDigits(context.getMessage().charCodeAt(context.pos),context.getMessage().charCodeAt(context.pos+1)));context.pos+=2;}
else{const c=context.getCurrentChar();const newMode=HighLevelEncoder.lookAheadTest(context.getMessage(),context.pos,this.getEncodingMode());if(newMode!==this.getEncodingMode()){switch(newMode){case BASE256_ENCODATION:context.writeCodeword(LATCH_TO_BASE256);context.signalEncoderChange(BASE256_ENCODATION);return;case C40_ENCODATION:context.writeCodeword(LATCH_TO_C40);context.signalEncoderChange(C40_ENCODATION);return;case X12_ENCODATION:context.writeCodeword(LATCH_TO_ANSIX12);context.signalEncoderChange(X12_ENCODATION);break;case TEXT_ENCODATION:context.writeCodeword(LATCH_TO_TEXT);context.signalEncoderChange(TEXT_ENCODATION);break;case EDIFACT_ENCODATION:context.writeCodeword(LATCH_TO_EDIFACT);context.signalEncoderChange(EDIFACT_ENCODATION);break;default:throw new Error('Illegal mode: '+newMode);}}
else if(HighLevelEncoder.isExtendedASCII(c)){context.writeCodeword(UPPER_SHIFT);context.writeCodeword(c-128+1);context.pos++;}
else{context.writeCodeword(c+1);context.pos++;}}}
encodeASCIIDigits(digit1,digit2){if(HighLevelEncoder.isDigit(digit1)&&HighLevelEncoder.isDigit(digit2)){const num=(digit1-48)*10+(digit2-48);return num+130;}
throw new Error('not digits: '+digit1+digit2);}}
class Base256Encoder{getEncodingMode(){return BASE256_ENCODATION;}
encode(context){const buffer=new StringBuilder();buffer.append(0o0);while(context.hasMoreCharacters()){const c=context.getCurrentChar();buffer.append(c);context.pos++;const newMode=HighLevelEncoder.lookAheadTest(context.getMessage(),context.pos,this.getEncodingMode());if(newMode!==this.getEncodingMode()){context.signalEncoderChange(ASCII_ENCODATION);break;}}
const dataCount=buffer.length()-1;const lengthFieldSize=1;const currentSize=context.getCodewordCount()+dataCount+lengthFieldSize;context.updateSymbolInfo(currentSize);const mustPad=context.getSymbolInfo().getDataCapacity()-currentSize>0;if(context.hasMoreCharacters()||mustPad){if(dataCount<=249){buffer.setCharAt(0,StringUtils.getCharAt(dataCount));}
else if(dataCount<=1555){buffer.setCharAt(0,StringUtils.getCharAt(Math.floor(dataCount/250)+249));buffer.insert(1,StringUtils.getCharAt(dataCount%250));}
else{throw new Error('Message length not in valid ranges: '+dataCount);}}
for(let i=0,c=buffer.length();i<c;i++){context.writeCodeword(this.randomize255State(buffer.charAt(i).charCodeAt(0),context.getCodewordCount()+1));}}
randomize255State(ch,codewordPosition){const pseudoRandom=((149*codewordPosition)%255)+1;const tempVariable=ch+pseudoRandom;if(tempVariable<=255){return tempVariable;}
else{return tempVariable-256;}}}
class C40Encoder{getEncodingMode(){return C40_ENCODATION;}
encodeMaximal(context){const buffer=new StringBuilder();let lastCharSize=0;let backtrackStartPosition=context.pos;let backtrackBufferLength=0;while(context.hasMoreCharacters()){const c=context.getCurrentChar();context.pos++;lastCharSize=this.encodeChar(c,buffer);if(buffer.length()%3===0){backtrackStartPosition=context.pos;backtrackBufferLength=buffer.length();}}
if(backtrackBufferLength!==buffer.length()){const unwritten=Math.floor((buffer.length()/3)*2);const curCodewordCount=Math.floor(context.getCodewordCount()+unwritten+1);context.updateSymbolInfo(curCodewordCount);const available=context.getSymbolInfo().getDataCapacity()-curCodewordCount;const rest=Math.floor(buffer.length()%3);if((rest===2&&available!==2)||(rest===1&&(lastCharSize>3||available!==1))){context.pos=backtrackStartPosition;}}
if(buffer.length()>0){context.writeCodeword(LATCH_TO_C40);}
this.handleEOD(context,buffer);}
encode(context){const buffer=new StringBuilder();while(context.hasMoreCharacters()){const c=context.getCurrentChar();context.pos++;let lastCharSize=this.encodeChar(c,buffer);const unwritten=Math.floor(buffer.length()/3)*2;const curCodewordCount=context.getCodewordCount()+unwritten;context.updateSymbolInfo(curCodewordCount);const available=context.getSymbolInfo().getDataCapacity()-curCodewordCount;if(!context.hasMoreCharacters()){const removed=new StringBuilder();if(buffer.length()%3===2&&available!==2){lastCharSize=this.backtrackOneCharacter(context,buffer,removed,lastCharSize);}
while(buffer.length()%3===1&&(lastCharSize>3||available!==1)){lastCharSize=this.backtrackOneCharacter(context,buffer,removed,lastCharSize);}
break;}
const count=buffer.length();if(count%3===0){const newMode=HighLevelEncoder.lookAheadTest(context.getMessage(),context.pos,this.getEncodingMode());if(newMode!==this.getEncodingMode()){context.signalEncoderChange(ASCII_ENCODATION);break;}}}
this.handleEOD(context,buffer);}
backtrackOneCharacter(context,buffer,removed,lastCharSize){const count=buffer.length();const test=buffer.toString().substring(0,count-lastCharSize);buffer.setLengthToZero();buffer.append(test);context.pos--;const c=context.getCurrentChar();lastCharSize=this.encodeChar(c,removed);context.resetSymbolInfo();return lastCharSize;}
writeNextTriplet(context,buffer){context.writeCodewords(this.encodeToCodewords(buffer.toString()));const test=buffer.toString().substring(3);buffer.setLengthToZero();buffer.append(test);}
handleEOD(context,buffer){const unwritten=Math.floor((buffer.length()/3)*2);const rest=buffer.length()%3;const curCodewordCount=context.getCodewordCount()+unwritten;context.updateSymbolInfo(curCodewordCount);const available=context.getSymbolInfo().getDataCapacity()-curCodewordCount;if(rest===2){buffer.append('\0');while(buffer.length()>=3){this.writeNextTriplet(context,buffer);}
if(context.hasMoreCharacters()){context.writeCodeword(C40_UNLATCH);}}
else if(available===1&&rest===1){while(buffer.length()>=3){this.writeNextTriplet(context,buffer);}
if(context.hasMoreCharacters()){context.writeCodeword(C40_UNLATCH);}
context.pos--;}
else if(rest===0){while(buffer.length()>=3){this.writeNextTriplet(context,buffer);}
if(available>0||context.hasMoreCharacters()){context.writeCodeword(C40_UNLATCH);}}
else{throw new Error('Unexpected case. Please report!');}
context.signalEncoderChange(ASCII_ENCODATION);}
encodeChar(c,sb){if(c===' '.charCodeAt(0)){sb.append(0o3);return 1;}
if(c>='0'.charCodeAt(0)&&c<='9'.charCodeAt(0)){sb.append(c-48+4);return 1;}
if(c>='A'.charCodeAt(0)&&c<='Z'.charCodeAt(0)){sb.append(c-65+14);return 1;}
if(c<' '.charCodeAt(0)){sb.append(0o0);sb.append(c);return 2;}
if(c<='/'.charCodeAt(0)){sb.append(0o1);sb.append(c-33);return 2;}
if(c<='@'.charCodeAt(0)){sb.append(0o1);sb.append(c-58+15);return 2;}
if(c<='_'.charCodeAt(0)){sb.append(0o1);sb.append(c-91+22);return 2;}
if(c<=127){sb.append(0o2);sb.append(c-96);return 2;}
sb.append(`${0o1}\u001e`);let len=2;len+=this.encodeChar(c-128,sb);return len;}
encodeToCodewords(sb){const v=1600*sb.charCodeAt(0)+40*sb.charCodeAt(1)+sb.charCodeAt(2)+1;const cw1=v/256;const cw2=v%256;const result=new StringBuilder();result.append(cw1);result.append(cw2);return result.toString();}}
class EdifactEncoder{getEncodingMode(){return EDIFACT_ENCODATION;}
encode(context){const buffer=new StringBuilder();while(context.hasMoreCharacters()){const c=context.getCurrentChar();this.encodeChar(c,buffer);context.pos++;const count=buffer.length();if(count>=4){context.writeCodewords(this.encodeToCodewords(buffer.toString()));const test=buffer.toString().substring(4);buffer.setLengthToZero();buffer.append(test);const newMode=HighLevelEncoder.lookAheadTest(context.getMessage(),context.pos,this.getEncodingMode());if(newMode!==this.getEncodingMode()){context.signalEncoderChange(ASCII_ENCODATION);break;}}}
buffer.append(StringUtils.getCharAt(31));this.handleEOD(context,buffer);}
handleEOD(context,buffer){try{const count=buffer.length();if(count===0){return;}
if(count===1){context.updateSymbolInfo();let available=context.getSymbolInfo().getDataCapacity()-
context.getCodewordCount();const remaining=context.getRemainingCharacters();if(remaining>available){context.updateSymbolInfo(context.getCodewordCount()+1);available=context.getSymbolInfo().getDataCapacity()-
context.getCodewordCount();}
if(remaining<=available&&available<=2){return;}}
if(count>4){throw new Error('Count must not exceed 4');}
const restChars=count-1;const encoded=this.encodeToCodewords(buffer.toString());const endOfSymbolReached=!context.hasMoreCharacters();let restInAscii=endOfSymbolReached&&restChars<=2;if(restChars<=2){context.updateSymbolInfo(context.getCodewordCount()+restChars);const available=context.getSymbolInfo().getDataCapacity()-
context.getCodewordCount();if(available>=3){restInAscii=false;context.updateSymbolInfo(context.getCodewordCount()+encoded.length);}}
if(restInAscii){context.resetSymbolInfo();context.pos-=restChars;}
else{context.writeCodewords(encoded);}}
finally{context.signalEncoderChange(ASCII_ENCODATION);}}
encodeChar(c,sb){if(c>=' '.charCodeAt(0)&&c<='?'.charCodeAt(0)){sb.append(c);}
else if(c>='@'.charCodeAt(0)&&c<='^'.charCodeAt(0)){sb.append(StringUtils.getCharAt(c-64));}
else{HighLevelEncoder.illegalCharacter(StringUtils.getCharAt(c));}}
encodeToCodewords(sb){const len=sb.length;if(len===0){throw new Error('StringBuilder must not be empty');}
const c1=sb.charAt(0).charCodeAt(0);const c2=len>=2?sb.charAt(1).charCodeAt(0):0;const c3=len>=3?sb.charAt(2).charCodeAt(0):0;const c4=len>=4?sb.charAt(3).charCodeAt(0):0;const v=(c1<<18)+(c2<<12)+(c3<<6)+c4;const cw1=(v>>16)&255;const cw2=(v>>8)&255;const cw3=v&255;const res=new StringBuilder();res.append(cw1);if(len>=2){res.append(cw2);}
if(len>=3){res.append(cw3);}
return res.toString();}}
class SymbolInfo{constructor(rectangular,dataCapacity,errorCodewords,matrixWidth,matrixHeight,dataRegions,rsBlockData=0,rsBlockError=0){this.rectangular=rectangular;this.dataCapacity=dataCapacity;this.errorCodewords=errorCodewords;this.matrixWidth=matrixWidth;this.matrixHeight=matrixHeight;this.dataRegions=dataRegions;this.rsBlockData=rsBlockData;this.rsBlockError=rsBlockError;}
static lookup(dataCodewords,shape=0,minSize=null,maxSize=null,fail=true){for(const symbol of PROD_SYMBOLS){if(shape===1&&symbol.rectangular){continue;}
if(shape===2&&!symbol.rectangular){continue;}
if(minSize!=null&&(symbol.getSymbolWidth()<minSize.getWidth()||symbol.getSymbolHeight()<minSize.getHeight())){continue;}
if(maxSize!=null&&(symbol.getSymbolWidth()>maxSize.getWidth()||symbol.getSymbolHeight()>maxSize.getHeight())){continue;}
if(dataCodewords<=symbol.dataCapacity){return symbol;}}
if(fail){throw new Error("Can't find a symbol arrangement that matches the message. Data codewords: "+
dataCodewords);}
return null;}
getHorizontalDataRegions(){switch(this.dataRegions){case 1:return 1;case 2:case 4:return 2;case 16:return 4;case 36:return 6;default:throw new Error('Cannot handle this number of data regions');}}
getVerticalDataRegions(){switch(this.dataRegions){case 1:case 2:return 1;case 4:return 2;case 16:return 4;case 36:return 6;default:throw new Error('Cannot handle this number of data regions');}}
getSymbolDataWidth(){return this.getHorizontalDataRegions()*this.matrixWidth;}
getSymbolDataHeight(){return this.getVerticalDataRegions()*this.matrixHeight;}
getSymbolWidth(){return this.getSymbolDataWidth()+this.getHorizontalDataRegions()*2;}
getSymbolHeight(){return this.getSymbolDataHeight()+this.getVerticalDataRegions()*2;}
getCodewordCount(){return this.dataCapacity+this.errorCodewords;}
getInterleavedBlockCount(){if(!this.rsBlockData)
return 1;return this.dataCapacity/this.rsBlockData;}
getDataCapacity(){return this.dataCapacity;}
getErrorCodewords(){return this.errorCodewords;}
getDataLengthForInterleavedBlock(index){return this.rsBlockData;}
getErrorLengthForInterleavedBlock(index){return this.rsBlockError;}}
class DataMatrixSymbolInfo144 extends SymbolInfo{constructor(){super(false,1558,620,22,22,36,-1,62);}
getInterleavedBlockCount(){return 10;}
getDataLengthForInterleavedBlock(index){return index<=8?156:155;}}
const PROD_SYMBOLS=[new SymbolInfo(false,3,5,8,8,1),new SymbolInfo(false,5,7,10,10,1),new SymbolInfo(true,5,7,16,6,1),new SymbolInfo(false,8,10,12,12,1),new SymbolInfo(true,10,11,14,6,2),new SymbolInfo(false,12,12,14,14,1),new SymbolInfo(true,16,14,24,10,1),new SymbolInfo(false,18,14,16,16,1),new SymbolInfo(false,22,18,18,18,1),new SymbolInfo(true,22,18,16,10,2),new SymbolInfo(false,30,20,20,20,1),new SymbolInfo(true,32,24,16,14,2),new SymbolInfo(false,36,24,22,22,1),new SymbolInfo(false,44,28,24,24,1),new SymbolInfo(true,49,28,22,14,2),new SymbolInfo(false,62,36,14,14,4),new SymbolInfo(false,86,42,16,16,4),new SymbolInfo(false,114,48,18,18,4),new SymbolInfo(false,144,56,20,20,4),new SymbolInfo(false,174,68,22,22,4),new SymbolInfo(false,204,84,24,24,4,102,42),new SymbolInfo(false,280,112,14,14,16,140,56),new SymbolInfo(false,368,144,16,16,16,92,36),new SymbolInfo(false,456,192,18,18,16,114,48),new SymbolInfo(false,576,224,20,20,16,144,56),new SymbolInfo(false,696,272,22,22,16,174,68),new SymbolInfo(false,816,336,24,24,16,136,56),new SymbolInfo(false,1050,408,18,18,36,175,68),new SymbolInfo(false,1304,496,20,20,36,163,62),new DataMatrixSymbolInfo144(),];class EncoderContext{constructor(msg){this.msg=msg;this.pos=0;this.skipAtEnd=0;const msgBinary=msg.split('').map(c=>c.charCodeAt(0));const sb=new StringBuilder();for(let i=0,c=msgBinary.length;i<c;i++){const ch=String.fromCharCode(msgBinary[i]&0xff);if(ch==='?'&&msg.charAt(i)!=='?'){throw new Error('Message contains characters outside ISO-8859-1 encoding.');}
sb.append(ch);}
this.msg=sb.toString();this.shape=0;this.codewords=new StringBuilder();this.newEncoding=-1;}
setSymbolShape(shape){this.shape=shape;}
setSizeConstraints(minSize,maxSize){this.minSize=minSize;this.maxSize=maxSize;}
getMessage(){return this.msg;}
setSkipAtEnd(count){this.skipAtEnd=count;}
getCurrentChar(){return this.msg.charCodeAt(this.pos);}
getCurrent(){return this.msg.charCodeAt(this.pos);}
getCodewords(){return this.codewords;}
writeCodewords(codewords){this.codewords.append(codewords);}
writeCodeword(codeword){this.codewords.append(codeword);}
getCodewordCount(){return this.codewords.length();}
getNewEncoding(){return this.newEncoding;}
signalEncoderChange(encoding){this.newEncoding=encoding;}
resetEncoderSignal(){this.newEncoding=-1;}
hasMoreCharacters(){return this.pos<this.getTotalMessageCharCount();}
getTotalMessageCharCount(){return this.msg.length-this.skipAtEnd;}
getRemainingCharacters(){return this.getTotalMessageCharCount()-this.pos;}
getSymbolInfo(){return this.symbolInfo;}
updateSymbolInfo(len=this.getCodewordCount()){if(this.symbolInfo==null||len>this.symbolInfo.getDataCapacity()){this.symbolInfo=SymbolInfo.lookup(len,this.shape,this.minSize,this.maxSize,true);}}
resetSymbolInfo(){this.symbolInfo=null;}}
class X12Encoder extends C40Encoder{getEncodingMode(){return X12_ENCODATION;}
encode(context){const buffer=new StringBuilder();while(context.hasMoreCharacters()){const c=context.getCurrentChar();context.pos++;this.encodeChar(c,buffer);const count=buffer.length();if(count%3===0){this.writeNextTriplet(context,buffer);const newMode=HighLevelEncoder.lookAheadTest(context.getMessage(),context.pos,this.getEncodingMode());if(newMode!==this.getEncodingMode()){context.signalEncoderChange(ASCII_ENCODATION);break;}}}
this.handleEOD(context,buffer);}
encodeChar(c,sb){switch(c){case 13:sb.append(0o0);break;case'*'.charCodeAt(0):sb.append(0o1);break;case'>'.charCodeAt(0):sb.append(0o2);break;case' '.charCodeAt(0):sb.append(0o3);break;default:if(c>='0'.charCodeAt(0)&&c<='9'.charCodeAt(0)){sb.append(c-48+4);}
else if(c>='A'.charCodeAt(0)&&c<='Z'.charCodeAt(0)){sb.append(c-65+14);}
else{HighLevelEncoder.illegalCharacter(StringUtils.getCharAt(c));}
break;}
return 1;}
handleEOD(context,buffer){context.updateSymbolInfo();const available=context.getSymbolInfo().getDataCapacity()-context.getCodewordCount();const count=buffer.length();context.pos-=count;if(context.getRemainingCharacters()>1||available>1||context.getRemainingCharacters()!==available){context.writeCodeword(X12_UNLATCH);}
if(context.getNewEncoding()<0){context.signalEncoderChange(ASCII_ENCODATION);}}}
class TextEncoder$1 extends C40Encoder{getEncodingMode(){return TEXT_ENCODATION;}
encodeChar(c,sb){if(c===' '.charCodeAt(0)){sb.append(0o3);return 1;}
if(c>='0'.charCodeAt(0)&&c<='9'.charCodeAt(0)){sb.append(c-48+4);return 1;}
if(c>='a'.charCodeAt(0)&&c<='z'.charCodeAt(0)){sb.append(c-97+14);return 1;}
if(c<' '.charCodeAt(0)){sb.append(0o0);sb.append(c);return 2;}
if(c<='/'.charCodeAt(0)){sb.append(0o1);sb.append(c-33);return 2;}
if(c<='@'.charCodeAt(0)){sb.append(0o1);sb.append(c-58+15);return 2;}
if(c>='['.charCodeAt(0)&&c<='_'.charCodeAt(0)){sb.append(0o1);sb.append(c-91+22);return 2;}
if(c==='`'.charCodeAt(0)){sb.append(0o2);sb.append(0);return 2;}
if(c<='Z'.charCodeAt(0)){sb.append(0o2);sb.append(c-65+1);return 2;}
if(c<=127){sb.append(0o2);sb.append(c-123+27);return 2;}
sb.append(`${0o1}\u001e`);let len=2;len+=this.encodeChar(c-128,sb);return len;}}
class HighLevelEncoder{static randomize253State(codewordPosition){const pseudoRandom=((149*codewordPosition)%253)+1;const tempVariable=PAD+pseudoRandom;return tempVariable<=254?tempVariable:tempVariable-254;}
static encodeHighLevel(msg,shape=0,minSize=null,maxSize=null,forceC40=false){const c40Encoder=new C40Encoder();const encoders=[new ASCIIEncoder(),c40Encoder,new TextEncoder$1(),new X12Encoder(),new EdifactEncoder(),new Base256Encoder(),];const context=new EncoderContext(msg);context.setSymbolShape(shape);context.setSizeConstraints(minSize,maxSize);if(msg.startsWith(MACRO_05_HEADER)&&msg.endsWith(MACRO_TRAILER)){context.writeCodeword(MACRO_05);context.setSkipAtEnd(2);context.pos+=MACRO_05_HEADER.length;}
else if(msg.startsWith(MACRO_06_HEADER)&&msg.endsWith(MACRO_TRAILER)){context.writeCodeword(MACRO_06);context.setSkipAtEnd(2);context.pos+=MACRO_06_HEADER.length;}
let encodingMode=ASCII_ENCODATION;if(forceC40){c40Encoder.encodeMaximal(context);encodingMode=context.getNewEncoding();context.resetEncoderSignal();}
while(context.hasMoreCharacters()){encoders[encodingMode].encode(context);if(context.getNewEncoding()>=0){encodingMode=context.getNewEncoding();context.resetEncoderSignal();}}
const len=context.getCodewordCount();context.updateSymbolInfo();const capacity=context.getSymbolInfo().getDataCapacity();if(len<capacity&&encodingMode!==ASCII_ENCODATION&&encodingMode!==BASE256_ENCODATION&&encodingMode!==EDIFACT_ENCODATION){context.writeCodeword('\u00fe');}
const codewords=context.getCodewords();if(codewords.length()<capacity){codewords.append(PAD);}
while(codewords.length()<capacity){codewords.append(this.randomize253State(codewords.length()+1));}
return context.getCodewords().toString();}
static lookAheadTest(msg,startpos,currentMode){const newMode=this.lookAheadTestIntern(msg,startpos,currentMode);if(currentMode===X12_ENCODATION&&newMode===X12_ENCODATION){const endpos=Math.min(startpos+3,msg.length);for(let i=startpos;i<endpos;i++){if(!this.isNativeX12(msg.charCodeAt(i))){return ASCII_ENCODATION;}}}
else if(currentMode===EDIFACT_ENCODATION&&newMode===EDIFACT_ENCODATION){const endpos=Math.min(startpos+4,msg.length);for(let i=startpos;i<endpos;i++){if(!this.isNativeEDIFACT(msg.charCodeAt(i))){return ASCII_ENCODATION;}}}
return newMode;}
static lookAheadTestIntern(msg,startpos,currentMode){if(startpos>=msg.length){return currentMode;}
let charCounts;if(currentMode===ASCII_ENCODATION){charCounts=[0,1,1,1,1,1.25];}
else{charCounts=[1,2,2,2,2,2.25];charCounts[currentMode]=0;}
let charsProcessed=0;const mins=new Uint8Array(6);const intCharCounts=[];while(true){if(startpos+charsProcessed===msg.length){Arrays.fill(mins,0);Arrays.fill(intCharCounts,0);const min=this.findMinimums(charCounts,intCharCounts,Integer.MAX_VALUE,mins);const minCount=this.getMinimumCount(mins);if(intCharCounts[ASCII_ENCODATION]===min){return ASCII_ENCODATION;}
if(minCount===1){if(mins[BASE256_ENCODATION]>0){return BASE256_ENCODATION;}
if(mins[EDIFACT_ENCODATION]>0){return EDIFACT_ENCODATION;}
if(mins[TEXT_ENCODATION]>0){return TEXT_ENCODATION;}
if(mins[X12_ENCODATION]>0){return X12_ENCODATION;}}
return C40_ENCODATION;}
const c=msg.charCodeAt(startpos+charsProcessed);charsProcessed++;if(this.isDigit(c)){charCounts[ASCII_ENCODATION]+=0.5;}
else if(this.isExtendedASCII(c)){charCounts[ASCII_ENCODATION]=Math.ceil(charCounts[ASCII_ENCODATION]);charCounts[ASCII_ENCODATION]+=2.0;}
else{charCounts[ASCII_ENCODATION]=Math.ceil(charCounts[ASCII_ENCODATION]);charCounts[ASCII_ENCODATION]++;}
if(this.isNativeC40(c)){charCounts[C40_ENCODATION]+=2.0/3.0;}
else if(this.isExtendedASCII(c)){charCounts[C40_ENCODATION]+=8.0/3.0;}
else{charCounts[C40_ENCODATION]+=4.0/3.0;}
if(this.isNativeText(c)){charCounts[TEXT_ENCODATION]+=2.0/3.0;}
else if(this.isExtendedASCII(c)){charCounts[TEXT_ENCODATION]+=8.0/3.0;}
else{charCounts[TEXT_ENCODATION]+=4.0/3.0;}
if(this.isNativeX12(c)){charCounts[X12_ENCODATION]+=2.0/3.0;}
else if(this.isExtendedASCII(c)){charCounts[X12_ENCODATION]+=13.0/3.0;}
else{charCounts[X12_ENCODATION]+=10.0/3.0;}
if(this.isNativeEDIFACT(c)){charCounts[EDIFACT_ENCODATION]+=3.0/4.0;}
else if(this.isExtendedASCII(c)){charCounts[EDIFACT_ENCODATION]+=17.0/4.0;}
else{charCounts[EDIFACT_ENCODATION]+=13.0/4.0;}
if(this.isSpecialB256(c)){charCounts[BASE256_ENCODATION]+=4.0;}
else{charCounts[BASE256_ENCODATION]++;}
if(charsProcessed>=4){Arrays.fill(mins,0);Arrays.fill(intCharCounts,0);this.findMinimums(charCounts,intCharCounts,Integer.MAX_VALUE,mins);if(intCharCounts[ASCII_ENCODATION]<this.min(intCharCounts[BASE256_ENCODATION],intCharCounts[C40_ENCODATION],intCharCounts[TEXT_ENCODATION],intCharCounts[X12_ENCODATION],intCharCounts[EDIFACT_ENCODATION])){return ASCII_ENCODATION;}
if(intCharCounts[BASE256_ENCODATION]<intCharCounts[ASCII_ENCODATION]||intCharCounts[BASE256_ENCODATION]+1<this.min(intCharCounts[C40_ENCODATION],intCharCounts[TEXT_ENCODATION],intCharCounts[X12_ENCODATION],intCharCounts[EDIFACT_ENCODATION])){return BASE256_ENCODATION;}
if(intCharCounts[EDIFACT_ENCODATION]+1<this.min(intCharCounts[BASE256_ENCODATION],intCharCounts[C40_ENCODATION],intCharCounts[TEXT_ENCODATION],intCharCounts[X12_ENCODATION],intCharCounts[ASCII_ENCODATION])){return EDIFACT_ENCODATION;}
if(intCharCounts[TEXT_ENCODATION]+1<this.min(intCharCounts[BASE256_ENCODATION],intCharCounts[C40_ENCODATION],intCharCounts[EDIFACT_ENCODATION],intCharCounts[X12_ENCODATION],intCharCounts[ASCII_ENCODATION])){return TEXT_ENCODATION;}
if(intCharCounts[X12_ENCODATION]+1<this.min(intCharCounts[BASE256_ENCODATION],intCharCounts[C40_ENCODATION],intCharCounts[EDIFACT_ENCODATION],intCharCounts[TEXT_ENCODATION],intCharCounts[ASCII_ENCODATION])){return X12_ENCODATION;}
if(intCharCounts[C40_ENCODATION]+1<this.min(intCharCounts[ASCII_ENCODATION],intCharCounts[BASE256_ENCODATION],intCharCounts[EDIFACT_ENCODATION],intCharCounts[TEXT_ENCODATION])){if(intCharCounts[C40_ENCODATION]<intCharCounts[X12_ENCODATION]){return C40_ENCODATION;}
if(intCharCounts[C40_ENCODATION]===intCharCounts[X12_ENCODATION]){let p=startpos+charsProcessed+1;while(p<msg.length){const tc=msg.charCodeAt(p);if(this.isX12TermSep(tc)){return X12_ENCODATION;}
if(!this.isNativeX12(tc)){break;}
p++;}
return C40_ENCODATION;}}}}}
static min(f1,f2,f3,f4,f5){const val=Math.min(f1,Math.min(f2,Math.min(f3,f4)));if(f5===undefined){return val;}
else{return Math.min(val,f5);}}
static findMinimums(charCounts,intCharCounts,min,mins){for(let i=0;i<6;i++){const current=(intCharCounts[i]=Math.ceil(charCounts[i]));if(min>current){min=current;Arrays.fill(mins,0);}
if(min===current){mins[i]=mins[i]+1;}}
return min;}
static getMinimumCount(mins){let minCount=0;for(let i=0;i<6;i++){minCount+=mins[i];}
return minCount||0;}
static isDigit(ch){return ch>='0'.charCodeAt(0)&&ch<='9'.charCodeAt(0);}
static isExtendedASCII(ch){return ch>=128&&ch<=255;}
static isNativeC40(ch){return(ch===' '.charCodeAt(0)||(ch>='0'.charCodeAt(0)&&ch<='9'.charCodeAt(0))||(ch>='A'.charCodeAt(0)&&ch<='Z'.charCodeAt(0)));}
static isNativeText(ch){return(ch===' '.charCodeAt(0)||(ch>='0'.charCodeAt(0)&&ch<='9'.charCodeAt(0))||(ch>='a'.charCodeAt(0)&&ch<='z'.charCodeAt(0)));}
static isNativeX12(ch){return(this.isX12TermSep(ch)||ch===' '.charCodeAt(0)||(ch>='0'.charCodeAt(0)&&ch<='9'.charCodeAt(0))||(ch>='A'.charCodeAt(0)&&ch<='Z'.charCodeAt(0)));}
static isX12TermSep(ch){return(ch===13||ch==='*'.charCodeAt(0)||ch==='>'.charCodeAt(0));}
static isNativeEDIFACT(ch){return ch>=' '.charCodeAt(0)&&ch<='^'.charCodeAt(0);}
static isSpecialB256(ch){return false;}
static determineConsecutiveDigitCount(msg,startpos=0){const len=msg.length;let idx=startpos;while(idx<len&&this.isDigit(msg.charCodeAt(idx))){idx++;}
return idx-startpos;}
static illegalCharacter(singleCharacter){let hex=Integer.toHexString(singleCharacter.charCodeAt(0));hex='0000'.substring(0,4-hex.length)+hex;throw new Error('Illegal character: '+singleCharacter+' (0x'+hex+')');}}
class CharsetEncoder{constructor(charset){this.charset=charset;this.name=charset.name;}
canEncode(c){try{return StringEncoding.encode(c,this.charset)!=null;}
catch(ex){return false;}}}
class ECIEncoderSet{constructor(stringToEncode,priorityCharset,fnc1){this.ENCODERS=['IBM437','ISO-8859-2','ISO-8859-3','ISO-8859-4','ISO-8859-5','ISO-8859-6','ISO-8859-7','ISO-8859-8','ISO-8859-9','ISO-8859-10','ISO-8859-11','ISO-8859-13','ISO-8859-14','ISO-8859-15','ISO-8859-16','windows-1250','windows-1251','windows-1252','windows-1256','Shift_JIS',].map(name=>new CharsetEncoder(Charset.forName(name)));this.encoders=[];const neededEncoders=[];neededEncoders.push(new CharsetEncoder(StandardCharsets.ISO_8859_1));let needUnicodeEncoder=priorityCharset!=null&&priorityCharset.name.startsWith('UTF');for(let i=0;i<stringToEncode.length;i++){let canEncode=false;for(const encoder of neededEncoders){const singleCharacter=stringToEncode.charAt(i);const c=singleCharacter.charCodeAt(0);if(c===fnc1||encoder.canEncode(singleCharacter)){canEncode=true;break;}}
if(!canEncode){for(const encoder of this.ENCODERS){if(encoder.canEncode(stringToEncode.charAt(i))){neededEncoders.push(encoder);canEncode=true;break;}}}
if(!canEncode){needUnicodeEncoder=true;}}
if(neededEncoders.length===1&&!needUnicodeEncoder){this.encoders=[neededEncoders[0]];}
else{this.encoders=[];let index=0;for(const encoder of neededEncoders){this.encoders[index++]=encoder;}}
let priorityEncoderIndexValue=-1;if(priorityCharset!=null){for(let i=0;i<this.encoders.length;i++){if(this.encoders[i]!=null&&priorityCharset.name===this.encoders[i].name){priorityEncoderIndexValue=i;break;}}}
this.priorityEncoderIndex=priorityEncoderIndexValue;}
length(){return this.encoders.length;}
getCharsetName(index){if(!(index<this.length())){throw new Error('index must be less than length');}
return this.encoders[index].name;}
getCharset(index){if(!(index<this.length())){throw new Error('index must be less than length');}
return this.encoders[index].charset;}
getECIValue(encoderIndex){return this.encoders[encoderIndex].charset.getValueIdentifier();}
getPriorityEncoderIndex(){return this.priorityEncoderIndex;}
canEncode(c,encoderIndex){if(!(encoderIndex<this.length())){throw new Error('index must be less than length');}
return true;}
encode(c,encoderIndex){if(!(encoderIndex<this.length())){throw new Error('index must be less than length');}
return StringEncoding.encode(StringUtils.getCharAt(c),this.encoders[encoderIndex].name);}}
const COST_PER_ECI=3;class MinimalECIInput{constructor(stringToEncode,priorityCharset,fnc1){this.fnc1=fnc1;const encoderSet=new ECIEncoderSet(stringToEncode,priorityCharset,fnc1);if(encoderSet.length()===1){for(let i=0;i<this.bytes.length;i++){const c=stringToEncode.charAt(i).charCodeAt(0);this.bytes[i]=c===fnc1?1000:c;}}
else{this.bytes=this.encodeMinimally(stringToEncode,encoderSet,fnc1);}}
getFNC1Character(){return this.fnc1;}
length(){return this.bytes.length;}
haveNCharacters(index,n){if(index+n-1>=this.bytes.length){return false;}
for(let i=0;i<n;i++){if(this.isECI(index+i)){return false;}}
return true;}
charAt(index){if(index<0||index>=this.length()){throw new Error(''+index);}
if(this.isECI(index)){throw new Error('value at '+index+' is not a character but an ECI');}
return this.isFNC1(index)?this.fnc1:this.bytes[index];}
subSequence(start,end){if(start<0||start>end||end>this.length()){throw new Error(''+start);}
const result=new StringBuilder();for(let i=start;i<end;i++){if(this.isECI(i)){throw new Error('value at '+i+' is not a character but an ECI');}
result.append(this.charAt(i));}
return result.toString();}
isECI(index){if(index<0||index>=this.length()){throw new Error(''+index);}
return this.bytes[index]>255&&this.bytes[index]<=999;}
isFNC1(index){if(index<0||index>=this.length()){throw new Error(''+index);}
return this.bytes[index]===1000;}
getECIValue(index){if(index<0||index>=this.length()){throw new Error(''+index);}
if(!this.isECI(index)){throw new Error('value at '+index+' is not an ECI but a character');}
return this.bytes[index]-256;}
addEdge(edges,to,edge){if(edges[to][edge.encoderIndex]==null||edges[to][edge.encoderIndex].cachedTotalSize>edge.cachedTotalSize){edges[to][edge.encoderIndex]=edge;}}
addEdges(stringToEncode,encoderSet,edges,from,previous,fnc1){const ch=stringToEncode.charAt(from).charCodeAt(0);let start=0;let end=encoderSet.length();if(encoderSet.getPriorityEncoderIndex()>=0&&(ch===fnc1||encoderSet.canEncode(ch,encoderSet.getPriorityEncoderIndex()))){start=encoderSet.getPriorityEncoderIndex();end=start+1;}
for(let i=start;i<end;i++){if(ch===fnc1||encoderSet.canEncode(ch,i)){this.addEdge(edges,from+1,new InputEdge(ch,encoderSet,i,previous,fnc1));}}}
encodeMinimally(stringToEncode,encoderSet,fnc1){const inputLength=stringToEncode.length;const edges=new InputEdge[inputLength+1][encoderSet.length()]();this.addEdges(stringToEncode,encoderSet,edges,0,null,fnc1);for(let i=1;i<=inputLength;i++){for(let j=0;j<encoderSet.length();j++){if(edges[i][j]!=null&&i<inputLength){this.addEdges(stringToEncode,encoderSet,edges,i,edges[i][j],fnc1);}}
for(let j=0;j<encoderSet.length();j++){edges[i-1][j]=null;}}
let minimalJ=-1;let minimalSize=Integer.MAX_VALUE;for(let j=0;j<encoderSet.length();j++){if(edges[inputLength][j]!=null){const edge=edges[inputLength][j];if(edge.cachedTotalSize<minimalSize){minimalSize=edge.cachedTotalSize;minimalJ=j;}}}
if(minimalJ<0){throw new Error('Failed to encode "'+stringToEncode+'"');}
const intsAL=[];let current=edges[inputLength][minimalJ];while(current!=null){if(current.isFNC1()){intsAL.unshift(1000);}
else{const bytes=encoderSet.encode(current.c,current.encoderIndex);for(let i=bytes.length-1;i>=0;i--){intsAL.unshift(bytes[i]&0xff);}}
const previousEncoderIndex=current.previous===null?0:current.previous.encoderIndex;if(previousEncoderIndex!==current.encoderIndex){intsAL.unshift(256+encoderSet.getECIValue(current.encoderIndex));}
current=current.previous;}
const ints=[];for(let i=0;i<ints.length;i++){ints[i]=intsAL[i];}
return ints;}}
class InputEdge{constructor(c,encoderSet,encoderIndex,previous,fnc1){this.c=c;this.encoderSet=encoderSet;this.encoderIndex=encoderIndex;this.previous=previous;this.fnc1=fnc1;this.c=c===fnc1?1000:c;let size=this.isFNC1()?1:encoderSet.encode(c,encoderIndex).length;const previousEncoderIndex=previous===null?0:previous.encoderIndex;if(previousEncoderIndex!==encoderIndex){size+=COST_PER_ECI;}
if(previous!=null){size+=previous.cachedTotalSize;}
this.cachedTotalSize=size;}
isFNC1(){return this.c===1000;}}
var Mode$3;(function(Mode){Mode[Mode["ASCII"]=0]="ASCII";Mode[Mode["C40"]=1]="C40";Mode[Mode["TEXT"]=2]="TEXT";Mode[Mode["X12"]=3]="X12";Mode[Mode["EDF"]=4]="EDF";Mode[Mode["B256"]=5]="B256";})(Mode$3||(Mode$3={}));const C40_SHIFT2_CHARS=['!','"','#','$','%','&',"'",'(',')','*','+',',','-','.','/',':',';','<','=','>','?','@','[','\\',']','^','_',];class MinimalEncoder{static isExtendedASCII(ch,fnc1){return ch!==fnc1&&ch>=128&&ch<=255;}
static isInC40Shift1Set(ch){return ch<=31;}
static isInC40Shift2Set(ch,fnc1){for(const c40Shift2Char of C40_SHIFT2_CHARS){if(c40Shift2Char.charCodeAt(0)===ch){return true;}}
return ch===fnc1;}
static isInTextShift1Set(ch){return this.isInC40Shift1Set(ch);}
static isInTextShift2Set(ch,fnc1){return this.isInC40Shift2Set(ch,fnc1);}
static encodeHighLevel(msg,priorityCharset=null,fnc1=-1,shape=0){let macroId=0;if(msg.startsWith(MACRO_05_HEADER)&&msg.endsWith(MACRO_TRAILER)){macroId=5;msg=msg.substring(MACRO_05_HEADER.length,msg.length-2);}
else if(msg.startsWith(MACRO_06_HEADER)&&msg.endsWith(MACRO_TRAILER)){macroId=6;msg=msg.substring(MACRO_06_HEADER.length,msg.length-2);}
return decodeURIComponent(escape(String.fromCharCode(...this.encode(msg,priorityCharset,fnc1,shape,macroId))));}
static encode(input,priorityCharset,fnc1,shape,macroId){return this.encodeMinimally(new Input(input,priorityCharset,fnc1,shape,macroId)).getBytes();}
static addEdge(edges,edge){const vertexIndex=edge.fromPosition+edge.characterLength;if(edges[vertexIndex][edge.getEndMode()]===null||edges[vertexIndex][edge.getEndMode()].cachedTotalSize>edge.cachedTotalSize){edges[vertexIndex][edge.getEndMode()]=edge;}}
static getNumberOfC40Words(input,from,c40,characterLength){let thirdsCount=0;for(let i=from;i<input.length();i++){if(input.isECI(i)){characterLength[0]=0;return 0;}
const ci=input.charAt(i);if((c40&&HighLevelEncoder.isNativeC40(ci))||(!c40&&HighLevelEncoder.isNativeText(ci))){thirdsCount++;}
else if(!MinimalEncoder.isExtendedASCII(ci,input.getFNC1Character())){thirdsCount+=2;}
else{const asciiValue=ci&0xff;if(asciiValue>=128&&((c40&&HighLevelEncoder.isNativeC40(asciiValue-128))||(!c40&&HighLevelEncoder.isNativeText(asciiValue-128)))){thirdsCount+=3;}
else{thirdsCount+=4;}}
if(thirdsCount%3===0||((thirdsCount-2)%3===0&&i+1===input.length())){characterLength[0]=i-from+1;return Math.ceil(thirdsCount/3.0);}}
characterLength[0]=0;return 0;}
static addEdges(input,edges,from,previous){if(input.isECI(from)){this.addEdge(edges,new Edge(input,Mode$3.ASCII,from,1,previous));return;}
const ch=input.charAt(from);if(previous===null||previous.getEndMode()!==Mode$3.EDF){if(HighLevelEncoder.isDigit(ch)&&input.haveNCharacters(from,2)&&HighLevelEncoder.isDigit(input.charAt(from+1))){this.addEdge(edges,new Edge(input,Mode$3.ASCII,from,2,previous));}
else{this.addEdge(edges,new Edge(input,Mode$3.ASCII,from,1,previous));}
const modes=[Mode$3.C40,Mode$3.TEXT];for(const mode of modes){const characterLength=[];if(MinimalEncoder.getNumberOfC40Words(input,from,mode===Mode$3.C40,characterLength)>0){this.addEdge(edges,new Edge(input,mode,from,characterLength[0],previous));}}
if(input.haveNCharacters(from,3)&&HighLevelEncoder.isNativeX12(input.charAt(from))&&HighLevelEncoder.isNativeX12(input.charAt(from+1))&&HighLevelEncoder.isNativeX12(input.charAt(from+2))){this.addEdge(edges,new Edge(input,Mode$3.X12,from,3,previous));}
this.addEdge(edges,new Edge(input,Mode$3.B256,from,1,previous));}
let i;for(i=0;i<3;i++){const pos=from+i;if(input.haveNCharacters(pos,1)&&HighLevelEncoder.isNativeEDIFACT(input.charAt(pos))){this.addEdge(edges,new Edge(input,Mode$3.EDF,from,i+1,previous));}
else{break;}}
if(i===3&&input.haveNCharacters(from,4)&&HighLevelEncoder.isNativeEDIFACT(input.charAt(from+3))){this.addEdge(edges,new Edge(input,Mode$3.EDF,from,4,previous));}}
static encodeMinimally(input){const inputLength=input.length();const edges=Array(inputLength+1).fill(null).map(()=>Array(6).fill(0));this.addEdges(input,edges,0,null);for(let i=1;i<=inputLength;i++){for(let j=0;j<6;j++){if(edges[i][j]!==null&&i<inputLength){this.addEdges(input,edges,i,edges[i][j]);}}
for(let j=0;j<6;j++){edges[i-1][j]=null;}}
let minimalJ=-1;let minimalSize=Integer.MAX_VALUE;for(let j=0;j<6;j++){if(edges[inputLength][j]!==null){const edge=edges[inputLength][j];const size=j>=1&&j<=3?edge.cachedTotalSize+1:edge.cachedTotalSize;if(size<minimalSize){minimalSize=size;minimalJ=j;}}}
if(minimalJ<0){throw new Error('Failed to encode "'+input+'"');}
return new Result$1(edges[inputLength][minimalJ]);}}
class Result$1{constructor(solution){const input=solution.input;let size=0;let bytesAL=[];const randomizePostfixLength=[];const randomizeLengths=[];if((solution.mode===Mode$3.C40||solution.mode===Mode$3.TEXT||solution.mode===Mode$3.X12)&&solution.getEndMode()!==Mode$3.ASCII){size+=this.prepend(Edge.getBytes(254),bytesAL);}
let current=solution;while(current!==null){size+=this.prepend(current.getDataBytes(),bytesAL);if(current.previous===null||current.getPreviousStartMode()!==current.getMode()){if(current.getMode()===Mode$3.B256){if(size<=249){bytesAL.unshift(size);size++;}
else{bytesAL.unshift(size%250);bytesAL.unshift(size/250+249);size+=2;}
randomizePostfixLength.push(bytesAL.length);randomizeLengths.push(size);}
this.prepend(current.getLatchBytes(),bytesAL);size=0;}
current=current.previous;}
if(input.getMacroId()===5){size+=this.prepend(Edge.getBytes(236),bytesAL);}
else if(input.getMacroId()===6){size+=this.prepend(Edge.getBytes(237),bytesAL);}
if(input.getFNC1Character()>0){size+=this.prepend(Edge.getBytes(232),bytesAL);}
for(let i=0;i<randomizePostfixLength.length;i++){this.applyRandomPattern(bytesAL,bytesAL.length-randomizePostfixLength[i],randomizeLengths[i]);}
const capacity=solution.getMinSymbolSize(bytesAL.length);if(bytesAL.length<capacity){bytesAL.push(129);}
while(bytesAL.length<capacity){bytesAL.push(this.randomize253State(bytesAL.length+1));}
this.bytes=new Uint8Array(bytesAL.length);for(let i=0;i<this.bytes.length;i++){this.bytes[i]=bytesAL[i];}}
prepend(bytes,into){for(let i=bytes.length-1;i>=0;i--){into.unshift(bytes[i]);}
return bytes.length;}
randomize253State(codewordPosition){const pseudoRandom=((149*codewordPosition)%253)+1;const tempVariable=129+pseudoRandom;return tempVariable<=254?tempVariable:tempVariable-254;}
applyRandomPattern(bytesAL,startPosition,length){for(let i=0;i<length;i++){const Pad_codeword_position=startPosition+i;const Pad_codeword_value=bytesAL[Pad_codeword_position]&0xff;const pseudo_random_number=((149*(Pad_codeword_position+1))%255)+1;const temp_variable=Pad_codeword_value+pseudo_random_number;bytesAL[Pad_codeword_position]=temp_variable<=255?temp_variable:temp_variable-256;}}
getBytes(){return this.bytes;}}
class Edge{constructor(input,mode,fromPosition,characterLength,previous){this.input=input;this.mode=mode;this.fromPosition=fromPosition;this.characterLength=characterLength;this.previous=previous;this.allCodewordCapacities=[3,5,8,10,12,16,18,22,30,32,36,44,49,62,86,114,144,174,204,280,368,456,576,696,816,1050,1304,1558,];this.squareCodewordCapacities=[3,5,8,12,18,22,30,36,44,62,86,114,144,174,204,280,368,456,576,696,816,1050,1304,1558,];this.rectangularCodewordCapacities=[5,10,16,33,32,49];if(!(fromPosition+characterLength<=input.length())){throw new Error('Invalid edge');}
let size=previous!==null?previous.cachedTotalSize:0;const previousMode=this.getPreviousMode();switch(mode){case Mode$3.ASCII:size++;if(input.isECI(fromPosition)||MinimalEncoder.isExtendedASCII(input.charAt(fromPosition),input.getFNC1Character())){size++;}
if(previousMode===Mode$3.C40||previousMode===Mode$3.TEXT||previousMode===Mode$3.X12){size++;}
break;case Mode$3.B256:size++;if(previousMode!==Mode$3.B256){size++;}
else if(this.getB256Size()===250){size++;}
if(previousMode===Mode$3.ASCII){size++;}
else if(previousMode===Mode$3.C40||previousMode===Mode$3.TEXT||previousMode===Mode$3.X12){size+=2;}
break;case Mode$3.C40:case Mode$3.TEXT:case Mode$3.X12:if(mode===Mode$3.X12){size+=2;}
else{let charLen=[];size+=MinimalEncoder.getNumberOfC40Words(input,fromPosition,mode===Mode$3.C40,charLen)*2;}
if(previousMode===Mode$3.ASCII||previousMode===Mode$3.B256){size++;}
else if(previousMode!==mode&&(previousMode===Mode$3.C40||previousMode===Mode$3.TEXT||previousMode===Mode$3.X12)){size+=2;}
break;case Mode$3.EDF:size+=3;if(previousMode===Mode$3.ASCII||previousMode===Mode$3.B256){size++;}
else if(previousMode===Mode$3.C40||previousMode===Mode$3.TEXT||previousMode===Mode$3.X12){size+=2;}
break;}
this.cachedTotalSize=size;}
getB256Size(){let cnt=0;let current=this;while(current!==null&&current.mode===Mode$3.B256&&cnt<=250){cnt++;current=current.previous;}
return cnt;}
getPreviousStartMode(){return this.previous===null?Mode$3.ASCII:this.previous.mode;}
getPreviousMode(){return this.previous===null?Mode$3.ASCII:this.previous.getEndMode();}
getEndMode(){if(this.mode===Mode$3.EDF){if(this.characterLength<4){return Mode$3.ASCII;}
const lastASCII=this.getLastASCII();if(lastASCII>0&&this.getCodewordsRemaining(this.cachedTotalSize+lastASCII)<=2-lastASCII){return Mode$3.ASCII;}}
if(this.mode===Mode$3.C40||this.mode===Mode$3.TEXT||this.mode===Mode$3.X12){if(this.fromPosition+this.characterLength>=this.input.length()&&this.getCodewordsRemaining(this.cachedTotalSize)===0){return Mode$3.ASCII;}
const lastASCII=this.getLastASCII();if(lastASCII===1&&this.getCodewordsRemaining(this.cachedTotalSize+1)===0){return Mode$3.ASCII;}}
return this.mode;}
getMode(){return this.mode;}
getLastASCII(){const length=this.input.length();const from=this.fromPosition+this.characterLength;if(length-from>4||from>=length){return 0;}
if(length-from===1){if(MinimalEncoder.isExtendedASCII(this.input.charAt(from),this.input.getFNC1Character())){return 0;}
return 1;}
if(length-from===2){if(MinimalEncoder.isExtendedASCII(this.input.charAt(from),this.input.getFNC1Character())||MinimalEncoder.isExtendedASCII(this.input.charAt(from+1),this.input.getFNC1Character())){return 0;}
if(HighLevelEncoder.isDigit(this.input.charAt(from))&&HighLevelEncoder.isDigit(this.input.charAt(from+1))){return 1;}
return 2;}
if(length-from===3){if(HighLevelEncoder.isDigit(this.input.charAt(from))&&HighLevelEncoder.isDigit(this.input.charAt(from+1))&&!MinimalEncoder.isExtendedASCII(this.input.charAt(from+2),this.input.getFNC1Character())){return 2;}
if(HighLevelEncoder.isDigit(this.input.charAt(from+1))&&HighLevelEncoder.isDigit(this.input.charAt(from+2))&&!MinimalEncoder.isExtendedASCII(this.input.charAt(from),this.input.getFNC1Character())){return 2;}
return 0;}
if(HighLevelEncoder.isDigit(this.input.charAt(from))&&HighLevelEncoder.isDigit(this.input.charAt(from+1))&&HighLevelEncoder.isDigit(this.input.charAt(from+2))&&HighLevelEncoder.isDigit(this.input.charAt(from+3))){return 2;}
return 0;}
getMinSymbolSize(minimum){switch(this.input.getShapeHint()){case 1:for(const capacity of this.squareCodewordCapacities){if(capacity>=minimum){return capacity;}}
break;case 2:for(const capacity of this.rectangularCodewordCapacities){if(capacity>=minimum){return capacity;}}
break;}
for(const capacity of this.allCodewordCapacities){if(capacity>=minimum){return capacity;}}
return this.allCodewordCapacities[this.allCodewordCapacities.length-1];}
getCodewordsRemaining(minimum){return this.getMinSymbolSize(minimum)-minimum;}
static getBytes(c1,c2){const result=new Uint8Array(c2?2:1);result[0]=c1;if(c2){result[1]=c2;}
return result;}
setC40Word(bytes,offset,c1,c2,c3){const val16=1600*(c1&0xff)+40*(c2&0xff)+(c3&0xff)+1;bytes[offset]=val16/256;bytes[offset+1]=val16%256;}
getX12Value(c){return c===13?0:c===42?1:c===62?2:c===32?3:c>=48&&c<=57?c-44:c>=65&&c<=90?c-51:c;}
getX12Words(){if(!(this.characterLength%3===0)){throw new Error('X12 words must be a multiple of 3');}
const result=new Uint8Array((this.characterLength/3)*2);for(let i=0;i<result.length;i+=2){this.setC40Word(result,i,this.getX12Value(this.input.charAt(this.fromPosition+(i/2)*3)),this.getX12Value(this.input.charAt(this.fromPosition+(i/2)*3+1)),this.getX12Value(this.input.charAt(this.fromPosition+(i/2)*3+2)));}
return result;}
getShiftValue(c,c40,fnc1){return(c40&&MinimalEncoder.isInC40Shift1Set(c))||(!c40&&MinimalEncoder.isInTextShift1Set(c))?0:(c40&&MinimalEncoder.isInC40Shift2Set(c,fnc1))||(!c40&&MinimalEncoder.isInTextShift2Set(c,fnc1))?1:2;}
getC40Value(c40,setIndex,c,fnc1){if(c===fnc1){if(!(setIndex===2)){throw new Error('FNC1 cannot be used in C40 shift 2');}
return 27;}
if(c40){return c<=31?c:c===32?3:c<=47?c-33:c<=57?c-44:c<=64?c-43:c<=90?c-51:c<=95?c-69:c<=127?c-96:c;}
else{return c===0?0:setIndex===0&&c<=3?c-1:setIndex===1&&c<=31?c:c===32?3:c>=33&&c<=47?c-33:c>=48&&c<=57?c-44:c>=58&&c<=64?c-43:c>=65&&c<=90?c-64:c>=91&&c<=95?c-69:c===96?0:c>=97&&c<=122?c-83:c>=123&&c<=127?c-96:c;}}
getC40Words(c40,fnc1){const c40Values=[];for(let i=0;i<this.characterLength;i++){const ci=this.input.charAt(this.fromPosition+i);if((c40&&HighLevelEncoder.isNativeC40(ci))||(!c40&&HighLevelEncoder.isNativeText(ci))){c40Values.push(this.getC40Value(c40,0,ci,fnc1));}
else if(!MinimalEncoder.isExtendedASCII(ci,fnc1)){const shiftValue=this.getShiftValue(ci,c40,fnc1);c40Values.push(shiftValue);c40Values.push(this.getC40Value(c40,shiftValue,ci,fnc1));}
else{const asciiValue=(ci&0xff)-128;if((c40&&HighLevelEncoder.isNativeC40(asciiValue))||(!c40&&HighLevelEncoder.isNativeText(asciiValue))){c40Values.push(1);c40Values.push(30);c40Values.push(this.getC40Value(c40,0,asciiValue,fnc1));}
else{c40Values.push(1);c40Values.push(30);const shiftValue=this.getShiftValue(asciiValue,c40,fnc1);c40Values.push(shiftValue);c40Values.push(this.getC40Value(c40,shiftValue,asciiValue,fnc1));}}}
if(c40Values.length%3!==0){if(!((c40Values.length-2)%3===0&&this.fromPosition+this.characterLength===this.input.length())){throw new Error('C40 words must be a multiple of 3');}
c40Values.push(0);}
const result=new Uint8Array((c40Values.length/3)*2);let byteIndex=0;for(let i=0;i<c40Values.length;i+=3){this.setC40Word(result,byteIndex,c40Values[i]&0xff,c40Values[i+1]&0xff,c40Values[i+2]&0xff);byteIndex+=2;}
return result;}
getEDFBytes(){const numberOfThirds=Math.ceil(this.characterLength/4.0);const result=new Uint8Array(numberOfThirds*3);let pos=this.fromPosition;const endPos=Math.min(this.fromPosition+this.characterLength-1,this.input.length()-1);for(let i=0;i<numberOfThirds;i+=3){const edfValues=[];for(let j=0;j<4;j++){if(pos<=endPos){edfValues[j]=this.input.charAt(pos++)&0x3f;}
else{edfValues[j]=pos===endPos+1?0x1f:0;}}
let val24=edfValues[0]<<18;val24|=edfValues[1]<<12;val24|=edfValues[2]<<6;val24|=edfValues[3];result[i]=(val24>>16)&0xff;result[i+1]=(val24>>8)&0xff;result[i+2]=val24&0xff;}
return result;}
getLatchBytes(){switch(this.getPreviousMode()){case Mode$3.ASCII:case Mode$3.B256:switch(this.mode){case Mode$3.B256:return Edge.getBytes(231);case Mode$3.C40:return Edge.getBytes(230);case Mode$3.TEXT:return Edge.getBytes(239);case Mode$3.X12:return Edge.getBytes(238);case Mode$3.EDF:return Edge.getBytes(240);}
break;case Mode$3.C40:case Mode$3.TEXT:case Mode$3.X12:if(this.mode!==this.getPreviousMode()){switch(this.mode){case Mode$3.ASCII:return Edge.getBytes(254);case Mode$3.B256:return Edge.getBytes(254,231);case Mode$3.C40:return Edge.getBytes(254,230);case Mode$3.TEXT:return Edge.getBytes(254,239);case Mode$3.X12:return Edge.getBytes(254,238);case Mode$3.EDF:return Edge.getBytes(254,240);}}
break;case Mode$3.EDF:if(this.mode!==Mode$3.EDF){throw new Error('Cannot switch from EDF to '+this.mode);}
break;}
return new Uint8Array(0);}
getDataBytes(){switch(this.mode){case Mode$3.ASCII:if(this.input.isECI(this.fromPosition)){return Edge.getBytes(241,this.input.getECIValue(this.fromPosition)+1);}
else if(MinimalEncoder.isExtendedASCII(this.input.charAt(this.fromPosition),this.input.getFNC1Character())){return Edge.getBytes(235,this.input.charAt(this.fromPosition)-127);}
else if(this.characterLength===2){return Edge.getBytes(this.input.charAt(this.fromPosition)*10+
this.input.charAt(this.fromPosition+1)+
130);}
else if(this.input.isFNC1(this.fromPosition)){return Edge.getBytes(232);}
else{return Edge.getBytes(this.input.charAt(this.fromPosition)+1);}
case Mode$3.B256:return Edge.getBytes(this.input.charAt(this.fromPosition));case Mode$3.C40:return this.getC40Words(true,this.input.getFNC1Character());case Mode$3.TEXT:return this.getC40Words(false,this.input.getFNC1Character());case Mode$3.X12:return this.getX12Words();case Mode$3.EDF:return this.getEDFBytes();}}}
class Input extends MinimalECIInput{constructor(stringToEncode,priorityCharset,fnc1,shape,macroId){super(stringToEncode,priorityCharset,fnc1);this.shape=shape;this.macroId=macroId;}
getMacroId(){return this.macroId;}
getShapeHint(){return this.shape;}}
class DataMatrixWriter{encode(contents,format,width,height,hints=null){if(contents.trim()===''){throw new Error('Found empty contents');}
if(format!==BarcodeFormat$1.DATA_MATRIX){throw new Error('Can only encode DATA_MATRIX, but got '+format);}
if(width<0||height<0){throw new Error('Requested dimensions can\'t be negative: '+width+'x'+height);}
let shape=0;let minSize=null;let maxSize=null;if(hints!=null){const requestedShape=hints.get(EncodeHintType$1.DATA_MATRIX_SHAPE);if(requestedShape!=null){shape=requestedShape;}
const requestedMinSize=hints.get(EncodeHintType$1.MIN_SIZE);if(requestedMinSize!=null){minSize=requestedMinSize;}
const requestedMaxSize=hints.get(EncodeHintType$1.MAX_SIZE);if(requestedMaxSize!=null){maxSize=requestedMaxSize;}}
let encoded;const hasCompactionHint=hints!=null&&hints.has(EncodeHintType$1.DATA_MATRIX_COMPACT)&&Boolean(hints.get(EncodeHintType$1.DATA_MATRIX_COMPACT).toString());if(hasCompactionHint){const hasGS1FormatHint=hints.has(EncodeHintType$1.GS1_FORMAT)&&Boolean(hints.get(EncodeHintType$1.GS1_FORMAT).toString());let charset=null;const hasEncodingHint=hints.has(EncodeHintType$1.CHARACTER_SET);if(hasEncodingHint){charset=Charset.forName(hints.get(EncodeHintType$1.CHARACTER_SET).toString());}
encoded=MinimalEncoder.encodeHighLevel(contents,charset,hasGS1FormatHint?0x1d:-1,shape);}
else{const hasForceC40Hint=hints!=null&&hints.has(EncodeHintType$1.FORCE_C40)&&Boolean(hints.get(EncodeHintType$1.FORCE_C40).toString());encoded=HighLevelEncoder.encodeHighLevel(contents,shape,minSize,maxSize,hasForceC40Hint);}
const symbolInfo=SymbolInfo.lookup(encoded.length,shape,minSize,maxSize,true);const codewords=ErrorCorrection$1.encodeECC200(encoded,symbolInfo);const placement=new DefaultPlacement(codewords,symbolInfo.getSymbolDataWidth(),symbolInfo.getSymbolDataHeight());placement.place();return this.encodeLowLevel(placement,symbolInfo,width,height);}
encodeLowLevel(placement,symbolInfo,width,height){const symbolWidth=symbolInfo.getSymbolDataWidth();const symbolHeight=symbolInfo.getSymbolDataHeight();const matrix=new ByteMatrix(symbolInfo.getSymbolWidth(),symbolInfo.getSymbolHeight());let matrixY=0;for(let y=0;y<symbolHeight;y++){let matrixX;if(y%symbolInfo.matrixHeight===0){matrixX=0;for(let x=0;x<symbolInfo.getSymbolWidth();x++){matrix.setBoolean(matrixX,matrixY,x%2===0);matrixX++;}
matrixY++;}
matrixX=0;for(let x=0;x<symbolWidth;x++){if(x%symbolInfo.matrixWidth===0){matrix.setBoolean(matrixX,matrixY,true);matrixX++;}
matrix.setBoolean(matrixX,matrixY,placement.getBit(x,y));matrixX++;if(x%symbolInfo.matrixWidth===symbolInfo.matrixWidth-1){matrix.setBoolean(matrixX,matrixY,y%2===0);matrixX++;}}
matrixY++;if(y%symbolInfo.matrixHeight===symbolInfo.matrixHeight-1){matrixX=0;for(let x=0;x<symbolInfo.getSymbolWidth();x++){matrix.setBoolean(matrixX,matrixY,true);matrixX++;}
matrixY++;}}
return this.convertByteMatrixToBitMatrix(matrix,width,height);}
convertByteMatrixToBitMatrix(matrix,reqWidth,reqHeight){const matrixWidth=matrix.getWidth();const matrixHeight=matrix.getHeight();const outputWidth=Math.max(reqWidth,matrixWidth);const outputHeight=Math.max(reqHeight,matrixHeight);const multiple=Math.min(outputWidth/matrixWidth,outputHeight/matrixHeight);let leftPadding=(outputWidth-matrixWidth*multiple)/2;let topPadding=(outputHeight-matrixHeight*multiple)/2;let output;if(reqHeight<matrixHeight||reqWidth<matrixWidth){leftPadding=0;topPadding=0;output=new BitMatrix(matrixWidth,matrixHeight);}
else{output=new BitMatrix(reqWidth,reqHeight);}
output.clear();for(let inputY=0,outputY=topPadding;inputY<matrixHeight;inputY++,outputY+=multiple){for(let inputX=0,outputX=leftPadding;inputX<matrixWidth;inputX++,outputX+=multiple){if(matrix.get(inputX,inputY)===1){output.setRegion(outputX,outputY,multiple,multiple);}}}
return output;}}
class AztecCode{isCompact(){return this.compact;}
setCompact(compact){this.compact=compact;}
getSize(){return this.size;}
setSize(size){this.size=size;}
getLayers(){return this.layers;}
setLayers(layers){this.layers=layers;}
getCodeWords(){return this.codeWords;}
setCodeWords(codeWords){this.codeWords=codeWords;}
getMatrix(){return this.matrix;}
setMatrix(matrix){this.matrix=matrix;}}
class Collections{static singletonList(item){return[item];}
static min(collection,comparator){return collection.sort(comparator)[0];}}
class Token{constructor(previous){this.previous=previous;}
getPrevious(){return this.previous;}}
class SimpleToken extends Token{constructor(previous,value,bitCount){super(previous);this.value=value;this.bitCount=bitCount;}
appendTo(bitArray,text){bitArray.appendBits(this.value,this.bitCount);}
add(value,bitCount){return new SimpleToken(this,value,bitCount);}
addBinaryShift(start,byteCount){console.warn('addBinaryShift on SimpleToken, this simply returns a copy of this token');return new SimpleToken(this,start,byteCount);}
toString(){let value=this.value&((1<<this.bitCount)-1);value|=1<<this.bitCount;return'<'+Integer.toBinaryString(value|(1<<this.bitCount)).substring(1)+'>';}}
class BinaryShiftToken extends SimpleToken{constructor(previous,binaryShiftStart,binaryShiftByteCount){super(previous,0,0);this.binaryShiftStart=binaryShiftStart;this.binaryShiftByteCount=binaryShiftByteCount;}
appendTo(bitArray,text){for(let i=0;i<this.binaryShiftByteCount;i++){if(i===0||(i===31&&this.binaryShiftByteCount<=62)){bitArray.appendBits(31,5);if(this.binaryShiftByteCount>62){bitArray.appendBits(this.binaryShiftByteCount-31,16);}
else if(i===0){bitArray.appendBits(Math.min(this.binaryShiftByteCount,31),5);}
else{bitArray.appendBits(this.binaryShiftByteCount-31,5);}}
bitArray.appendBits(text[this.binaryShiftStart+i],8);}}
addBinaryShift(start,byteCount){return new BinaryShiftToken(this,start,byteCount);}
toString(){return'<'+this.binaryShiftStart+'::'+(this.binaryShiftStart+this.binaryShiftByteCount-1)+'>';}}
function addBinaryShift(token,start,byteCount){return new BinaryShiftToken(token,start,byteCount);}
function add(token,value,bitCount){return new SimpleToken(token,value,bitCount);}
const MODE_NAMES=['UPPER','LOWER','DIGIT','MIXED','PUNCT'];const MODE_UPPER=0;const MODE_LOWER=1;const MODE_DIGIT=2;const MODE_MIXED=3;const MODE_PUNCT=4;const EMPTY_TOKEN=new SimpleToken(null,0,0);const LATCH_TABLE=[Int32Array.from([0,(5<<16)+28,(5<<16)+30,(5<<16)+29,(10<<16)+(29<<5)+30]),Int32Array.from([(9<<16)+(30<<4)+14,0,(5<<16)+30,(5<<16)+29,(10<<16)+(29<<5)+30]),Int32Array.from([(4<<16)+14,(9<<16)+(14<<5)+28,0,(9<<16)+(14<<5)+29,(14<<16)+(14<<10)+(29<<5)+30]),Int32Array.from([(5<<16)+29,(5<<16)+28,(10<<16)+(29<<5)+30,0,(5<<16)+30]),Int32Array.from([(5<<16)+31,(10<<16)+(31<<5)+28,(10<<16)+(31<<5)+30,(10<<16)+(31<<5)+29,0])];function static_SHIFT_TABLE(SHIFT_TABLE){for(let table of SHIFT_TABLE){Arrays.fill(table,-1);}
SHIFT_TABLE[MODE_UPPER][MODE_PUNCT]=0;SHIFT_TABLE[MODE_LOWER][MODE_PUNCT]=0;SHIFT_TABLE[MODE_LOWER][MODE_UPPER]=28;SHIFT_TABLE[MODE_MIXED][MODE_PUNCT]=0;SHIFT_TABLE[MODE_DIGIT][MODE_PUNCT]=0;SHIFT_TABLE[MODE_DIGIT][MODE_UPPER]=15;return SHIFT_TABLE;}
const SHIFT_TABLE=static_SHIFT_TABLE(Arrays.createInt32Array(6,6));class State{constructor(token,mode,binaryBytes,bitCount){this.token=token;this.mode=mode;this.binaryShiftByteCount=binaryBytes;this.bitCount=bitCount;}
getMode(){return this.mode;}
getToken(){return this.token;}
getBinaryShiftByteCount(){return this.binaryShiftByteCount;}
getBitCount(){return this.bitCount;}
latchAndAppend(mode,value){let bitCount=this.bitCount;let token=this.token;if(mode!==this.mode){let latch=LATCH_TABLE[this.mode][mode];token=add(token,latch&0xffff,latch>>16);bitCount+=latch>>16;}
let latchModeBitCount=mode===MODE_DIGIT?4:5;token=add(token,value,latchModeBitCount);return new State(token,mode,0,bitCount+latchModeBitCount);}
shiftAndAppend(mode,value){let token=this.token;let thisModeBitCount=this.mode===MODE_DIGIT?4:5;token=add(token,SHIFT_TABLE[this.mode][mode],thisModeBitCount);token=add(token,value,5);return new State(token,this.mode,0,this.bitCount+thisModeBitCount+5);}
addBinaryShiftChar(index){let token=this.token;let mode=this.mode;let bitCount=this.bitCount;if(this.mode===MODE_PUNCT||this.mode===MODE_DIGIT){let latch=LATCH_TABLE[mode][MODE_UPPER];token=add(token,latch&0xffff,latch>>16);bitCount+=latch>>16;mode=MODE_UPPER;}
let deltaBitCount=this.binaryShiftByteCount===0||this.binaryShiftByteCount===31?18:this.binaryShiftByteCount===62?9:8;let result=new State(token,mode,this.binaryShiftByteCount+1,bitCount+deltaBitCount);if(result.binaryShiftByteCount===2047+31){result=result.endBinaryShift(index+1);}
return result;}
endBinaryShift(index){if(this.binaryShiftByteCount===0){return this;}
let token=this.token;token=addBinaryShift(token,index-this.binaryShiftByteCount,this.binaryShiftByteCount);return new State(token,this.mode,0,this.bitCount);}
isBetterThanOrEqualTo(other){let newModeBitCount=this.bitCount+(LATCH_TABLE[this.mode][other.mode]>>16);if(this.binaryShiftByteCount<other.binaryShiftByteCount){newModeBitCount+=State.calculateBinaryShiftCost(other)-
State.calculateBinaryShiftCost(this);}
else if(this.binaryShiftByteCount>other.binaryShiftByteCount&&other.binaryShiftByteCount>0){newModeBitCount+=10;}
return newModeBitCount<=other.bitCount;}
toBitArray(text){let symbols=[];for(let token=this.endBinaryShift(text.length).token;token!==null;token=token.getPrevious()){symbols.unshift(token);}
let bitArray=new BitArray();for(const symbol of symbols){symbol.appendTo(bitArray,text);}
return bitArray;}
toString(){return StringUtils.format('%s bits=%d bytes=%d',MODE_NAMES[this.mode],this.bitCount,this.binaryShiftByteCount);}
static calculateBinaryShiftCost(state){if(state.binaryShiftByteCount>62){return 21;}
if(state.binaryShiftByteCount>31){return 20;}
if(state.binaryShiftByteCount>0){return 10;}
return 0;}}
State.INITIAL_STATE=new State(EMPTY_TOKEN,MODE_UPPER,0,0);function static_CHAR_MAP(CHAR_MAP){const spaceCharCode=StringUtils.getCharCode(' ');const pointCharCode=StringUtils.getCharCode('.');const commaCharCode=StringUtils.getCharCode(',');CHAR_MAP[MODE_UPPER][spaceCharCode]=1;const zUpperCharCode=StringUtils.getCharCode('Z');const aUpperCharCode=StringUtils.getCharCode('A');for(let c=aUpperCharCode;c<=zUpperCharCode;c++){CHAR_MAP[MODE_UPPER][c]=c-aUpperCharCode+2;}
CHAR_MAP[MODE_LOWER][spaceCharCode]=1;const zLowerCharCode=StringUtils.getCharCode('z');const aLowerCharCode=StringUtils.getCharCode('a');for(let c=aLowerCharCode;c<=zLowerCharCode;c++){CHAR_MAP[MODE_LOWER][c]=c-aLowerCharCode+2;}
CHAR_MAP[MODE_DIGIT][spaceCharCode]=1;const nineCharCode=StringUtils.getCharCode('9');const zeroCharCode=StringUtils.getCharCode('0');for(let c=zeroCharCode;c<=nineCharCode;c++){CHAR_MAP[MODE_DIGIT][c]=c-zeroCharCode+2;}
CHAR_MAP[MODE_DIGIT][commaCharCode]=12;CHAR_MAP[MODE_DIGIT][pointCharCode]=13;const mixedTable=['\x00',' ','\x01','\x02','\x03','\x04','\x05','\x06','\x07','\b','\t','\n','\x0b','\f','\r','\x1b','\x1c','\x1d','\x1e','\x1f','@','\\','^','_','`','|','~','\x7f'];for(let i=0;i<mixedTable.length;i++){CHAR_MAP[MODE_MIXED][StringUtils.getCharCode(mixedTable[i])]=i;}
const punctTable=['\x00','\r','\x00','\x00','\x00','\x00','!','\'','#','$','%','&','\'','(',')','*','+',',','-','.','/',':',';','<','=','>','?','[',']','{','}'];for(let i=0;i<punctTable.length;i++){if(StringUtils.getCharCode(punctTable[i])>0){CHAR_MAP[MODE_PUNCT][StringUtils.getCharCode(punctTable[i])]=i;}}
return CHAR_MAP;}
const CHAR_MAP=static_CHAR_MAP(Arrays.createInt32Array(5,256));class HighLevelEncoder$1{constructor(text){this.text=text;}
encode(){const spaceCharCode=StringUtils.getCharCode(' ');const lineBreakCharCode=StringUtils.getCharCode('\n');let states=Collections.singletonList(State.INITIAL_STATE);for(let index=0;index<this.text.length;index++){let pairCode;let nextChar=index+1<this.text.length?this.text[index+1]:0;switch(this.text[index]){case StringUtils.getCharCode('\r'):pairCode=nextChar===lineBreakCharCode?2:0;break;case StringUtils.getCharCode('.'):pairCode=nextChar===spaceCharCode?3:0;break;case StringUtils.getCharCode(','):pairCode=nextChar===spaceCharCode?4:0;break;case StringUtils.getCharCode(':'):pairCode=nextChar===spaceCharCode?5:0;break;default:pairCode=0;}
if(pairCode>0){states=HighLevelEncoder$1.updateStateListForPair(states,index,pairCode);index++;}
else{states=this.updateStateListForChar(states,index);}}
const minState=Collections.min(states,(a,b)=>{return a.getBitCount()-b.getBitCount();});return minState.toBitArray(this.text);}
updateStateListForChar(states,index){const result=[];for(let state of states){this.updateStateForChar(state,index,result);}
return HighLevelEncoder$1.simplifyStates(result);}
updateStateForChar(state,index,result){let ch=(this.text[index]&0xff);let charInCurrentTable=CHAR_MAP[state.getMode()][ch]>0;let stateNoBinary=null;for(let mode=0;mode<=MODE_PUNCT;mode++){let charInMode=CHAR_MAP[mode][ch];if(charInMode>0){if(stateNoBinary==null){stateNoBinary=state.endBinaryShift(index);}
if(!charInCurrentTable||mode===state.getMode()||mode===MODE_DIGIT){const latchState=stateNoBinary.latchAndAppend(mode,charInMode);result.push(latchState);}
if(!charInCurrentTable&&SHIFT_TABLE[state.getMode()][mode]>=0){const shiftState=stateNoBinary.shiftAndAppend(mode,charInMode);result.push(shiftState);}}}
if(state.getBinaryShiftByteCount()>0||CHAR_MAP[state.getMode()][ch]===0){let binaryState=state.addBinaryShiftChar(index);result.push(binaryState);}}
static updateStateListForPair(states,index,pairCode){const result=[];for(let state of states){this.updateStateForPair(state,index,pairCode,result);}
return this.simplifyStates(result);}
static updateStateForPair(state,index,pairCode,result){let stateNoBinary=state.endBinaryShift(index);result.push(stateNoBinary.latchAndAppend(MODE_PUNCT,pairCode));if(state.getMode()!==MODE_PUNCT){result.push(stateNoBinary.shiftAndAppend(MODE_PUNCT,pairCode));}
if(pairCode===3||pairCode===4){let digitState=stateNoBinary.latchAndAppend(MODE_DIGIT,16-pairCode).latchAndAppend(MODE_DIGIT,1);result.push(digitState);}
if(state.getBinaryShiftByteCount()>0){let binaryState=state.addBinaryShiftChar(index).addBinaryShiftChar(index+1);result.push(binaryState);}}
static simplifyStates(states){let result=[];for(const newState of states){let add=true;for(const oldState of result){if(oldState.isBetterThanOrEqualTo(newState)){add=false;break;}
if(newState.isBetterThanOrEqualTo(oldState)){result=result.filter(x=>x!==oldState);}}
if(add){result.push(newState);}}
return result;}}
class Encoder$1{constructor(){}
static encodeBytes(data){return Encoder$1.encode(data,Encoder$1.DEFAULT_EC_PERCENT,Encoder$1.DEFAULT_AZTEC_LAYERS);}
static encode(data,minECCPercent,userSpecifiedLayers){let bits=new HighLevelEncoder$1(data).encode();let eccBits=Integer.truncDivision((bits.getSize()*minECCPercent),100)+11;let totalSizeBits=bits.getSize()+eccBits;let compact;let layers;let totalBitsInLayer;let wordSize;let stuffedBits;if(userSpecifiedLayers!==Encoder$1.DEFAULT_AZTEC_LAYERS){compact=userSpecifiedLayers<0;layers=Math.abs(userSpecifiedLayers);if(layers>(compact?Encoder$1.MAX_NB_BITS_COMPACT:Encoder$1.MAX_NB_BITS)){throw new IllegalArgumentException(StringUtils.format('Illegal value %s for layers',userSpecifiedLayers));}
totalBitsInLayer=Encoder$1.totalBitsInLayer(layers,compact);wordSize=Encoder$1.WORD_SIZE[layers];let usableBitsInLayers=totalBitsInLayer-(totalBitsInLayer%wordSize);stuffedBits=Encoder$1.stuffBits(bits,wordSize);if(stuffedBits.getSize()+eccBits>usableBitsInLayers){throw new IllegalArgumentException('Data to large for user specified layer');}
if(compact&&stuffedBits.getSize()>wordSize*64){throw new IllegalArgumentException('Data to large for user specified layer');}}
else{wordSize=0;stuffedBits=null;for(let i=0;;i++){if(i>Encoder$1.MAX_NB_BITS){throw new IllegalArgumentException('Data too large for an Aztec code');}
compact=i<=3;layers=compact?i+1:i;totalBitsInLayer=Encoder$1.totalBitsInLayer(layers,compact);if(totalSizeBits>totalBitsInLayer){continue;}
if(stuffedBits==null||wordSize!==Encoder$1.WORD_SIZE[layers]){wordSize=Encoder$1.WORD_SIZE[layers];stuffedBits=Encoder$1.stuffBits(bits,wordSize);}
let usableBitsInLayers=totalBitsInLayer-(totalBitsInLayer%wordSize);if(compact&&stuffedBits.getSize()>wordSize*64){continue;}
if(stuffedBits.getSize()+eccBits<=usableBitsInLayers){break;}}}
let messageBits=Encoder$1.generateCheckWords(stuffedBits,totalBitsInLayer,wordSize);let messageSizeInWords=stuffedBits.getSize()/wordSize;let modeMessage=Encoder$1.generateModeMessage(compact,layers,messageSizeInWords);let baseMatrixSize=(compact?11:14)+layers*4;let alignmentMap=new Int32Array(baseMatrixSize);let matrixSize;if(compact){matrixSize=baseMatrixSize;for(let i=0;i<alignmentMap.length;i++){alignmentMap[i]=i;}}
else{matrixSize=baseMatrixSize+1+2*Integer.truncDivision((Integer.truncDivision(baseMatrixSize,2)-1),15);let origCenter=Integer.truncDivision(baseMatrixSize,2);let center=Integer.truncDivision(matrixSize,2);for(let i=0;i<origCenter;i++){let newOffset=i+Integer.truncDivision(i,15);alignmentMap[origCenter-i-1]=center-newOffset-1;alignmentMap[origCenter+i]=center+newOffset+1;}}
let matrix=new BitMatrix(matrixSize);for(let i=0,rowOffset=0;i<layers;i++){let rowSize=(layers-i)*4+(compact?9:12);for(let j=0;j<rowSize;j++){let columnOffset=j*2;for(let k=0;k<2;k++){if(messageBits.get(rowOffset+columnOffset+k)){matrix.set(alignmentMap[i*2+k],alignmentMap[i*2+j]);}
if(messageBits.get(rowOffset+rowSize*2+columnOffset+k)){matrix.set(alignmentMap[i*2+j],alignmentMap[baseMatrixSize-1-i*2-k]);}
if(messageBits.get(rowOffset+rowSize*4+columnOffset+k)){matrix.set(alignmentMap[baseMatrixSize-1-i*2-k],alignmentMap[baseMatrixSize-1-i*2-j]);}
if(messageBits.get(rowOffset+rowSize*6+columnOffset+k)){matrix.set(alignmentMap[baseMatrixSize-1-i*2-j],alignmentMap[i*2+k]);}}}
rowOffset+=rowSize*8;}
Encoder$1.drawModeMessage(matrix,compact,matrixSize,modeMessage);if(compact){Encoder$1.drawBullsEye(matrix,Integer.truncDivision(matrixSize,2),5);}
else{Encoder$1.drawBullsEye(matrix,Integer.truncDivision(matrixSize,2),7);for(let i=0,j=0;i<Integer.truncDivision(baseMatrixSize,2)-1;i+=15,j+=16){for(let k=Integer.truncDivision(matrixSize,2)&1;k<matrixSize;k+=2){matrix.set(Integer.truncDivision(matrixSize,2)-j,k);matrix.set(Integer.truncDivision(matrixSize,2)+j,k);matrix.set(k,Integer.truncDivision(matrixSize,2)-j);matrix.set(k,Integer.truncDivision(matrixSize,2)+j);}}}
let aztec=new AztecCode();aztec.setCompact(compact);aztec.setSize(matrixSize);aztec.setLayers(layers);aztec.setCodeWords(messageSizeInWords);aztec.setMatrix(matrix);return aztec;}
static drawBullsEye(matrix,center,size){for(let i=0;i<size;i+=2){for(let j=center-i;j<=center+i;j++){matrix.set(j,center-i);matrix.set(j,center+i);matrix.set(center-i,j);matrix.set(center+i,j);}}
matrix.set(center-size,center-size);matrix.set(center-size+1,center-size);matrix.set(center-size,center-size+1);matrix.set(center+size,center-size);matrix.set(center+size,center-size+1);matrix.set(center+size,center+size-1);}
static generateModeMessage(compact,layers,messageSizeInWords){let modeMessage=new BitArray();if(compact){modeMessage.appendBits(layers-1,2);modeMessage.appendBits(messageSizeInWords-1,6);modeMessage=Encoder$1.generateCheckWords(modeMessage,28,4);}
else{modeMessage.appendBits(layers-1,5);modeMessage.appendBits(messageSizeInWords-1,11);modeMessage=Encoder$1.generateCheckWords(modeMessage,40,4);}
return modeMessage;}
static drawModeMessage(matrix,compact,matrixSize,modeMessage){let center=Integer.truncDivision(matrixSize,2);if(compact){for(let i=0;i<7;i++){let offset=center-3+i;if(modeMessage.get(i)){matrix.set(offset,center-5);}
if(modeMessage.get(i+7)){matrix.set(center+5,offset);}
if(modeMessage.get(20-i)){matrix.set(offset,center+5);}
if(modeMessage.get(27-i)){matrix.set(center-5,offset);}}}
else{for(let i=0;i<10;i++){let offset=center-5+i+Integer.truncDivision(i,5);if(modeMessage.get(i)){matrix.set(offset,center-7);}
if(modeMessage.get(i+10)){matrix.set(center+7,offset);}
if(modeMessage.get(29-i)){matrix.set(offset,center+7);}
if(modeMessage.get(39-i)){matrix.set(center-7,offset);}}}}
static generateCheckWords(bitArray,totalBits,wordSize){let messageSizeInWords=bitArray.getSize()/wordSize;let rs=new ReedSolomonEncoder(Encoder$1.getGF(wordSize));let totalWords=Integer.truncDivision(totalBits,wordSize);let messageWords=Encoder$1.bitsToWords(bitArray,wordSize,totalWords);rs.encode(messageWords,totalWords-messageSizeInWords);let startPad=totalBits%wordSize;let messageBits=new BitArray();messageBits.appendBits(0,startPad);for(const messageWord of Array.from(messageWords)){messageBits.appendBits(messageWord,wordSize);}
return messageBits;}
static bitsToWords(stuffedBits,wordSize,totalWords){let message=new Int32Array(totalWords);let i;let n;for(i=0,n=stuffedBits.getSize()/wordSize;i<n;i++){let value=0;for(let j=0;j<wordSize;j++){value|=stuffedBits.get(i*wordSize+j)?(1<<wordSize-j-1):0;}
message[i]=value;}
return message;}
static getGF(wordSize){switch(wordSize){case 4:return GenericGF.AZTEC_PARAM;case 6:return GenericGF.AZTEC_DATA_6;case 8:return GenericGF.AZTEC_DATA_8;case 10:return GenericGF.AZTEC_DATA_10;case 12:return GenericGF.AZTEC_DATA_12;default:throw new IllegalArgumentException('Unsupported word size '+wordSize);}}
static stuffBits(bits,wordSize){let out=new BitArray();let n=bits.getSize();let mask=(1<<wordSize)-2;for(let i=0;i<n;i+=wordSize){let word=0;for(let j=0;j<wordSize;j++){if(i+j>=n||bits.get(i+j)){word|=1<<(wordSize-1-j);}}
if((word&mask)===mask){out.appendBits(word&mask,wordSize);i--;}
else if((word&mask)===0){out.appendBits(word|1,wordSize);i--;}
else{out.appendBits(word,wordSize);}}
return out;}
static totalBitsInLayer(layers,compact){return((compact?88:112)+16*layers)*layers;}}
Encoder$1.DEFAULT_EC_PERCENT=33;Encoder$1.DEFAULT_AZTEC_LAYERS=0;Encoder$1.MAX_NB_BITS=32;Encoder$1.MAX_NB_BITS_COMPACT=4;Encoder$1.WORD_SIZE=Int32Array.from([4,6,6,8,8,8,8,8,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,12,12,12,12,12,12,12,12,12,12]);class AztecWriter{encode(contents,format,width,height){return this.encodeWithHints(contents,format,width,height,null);}
encodeWithHints(contents,format,width,height,hints){let charset=StandardCharsets.ISO_8859_1;let eccPercent=Encoder$1.DEFAULT_EC_PERCENT;let layers=Encoder$1.DEFAULT_AZTEC_LAYERS;if(hints!=null){if(hints.has(EncodeHintType$1.CHARACTER_SET)){charset=Charset.forName(hints.get(EncodeHintType$1.CHARACTER_SET).toString());}
if(hints.has(EncodeHintType$1.ERROR_CORRECTION)){eccPercent=Integer.parseInt(hints.get(EncodeHintType$1.ERROR_CORRECTION).toString());}
if(hints.has(EncodeHintType$1.AZTEC_LAYERS)){layers=Integer.parseInt(hints.get(EncodeHintType$1.AZTEC_LAYERS).toString());}}
return AztecWriter.encodeLayers(contents,format,width,height,charset,eccPercent,layers);}
static encodeLayers(contents,format,width,height,charset,eccPercent,layers){if(format!==BarcodeFormat$1.AZTEC){throw new IllegalArgumentException('Can only encode AZTEC, but got '+format);}
let aztec=Encoder$1.encode(StringUtils.getBytes(contents,charset),eccPercent,layers);return AztecWriter.renderResult(aztec,width,height);}
static renderResult(code,width,height){let input=code.getMatrix();if(input==null){throw new IllegalStateException();}
let inputWidth=input.getWidth();let inputHeight=input.getHeight();let outputWidth=Math.max(width,inputWidth);let outputHeight=Math.max(height,inputHeight);let multiple=Math.min(outputWidth/inputWidth,outputHeight/inputHeight);let leftPadding=(outputWidth-(inputWidth*multiple))/2;let topPadding=(outputHeight-(inputHeight*multiple))/2;let output=new BitMatrix(outputWidth,outputHeight);for(let inputY=0,outputY=topPadding;inputY<inputHeight;inputY++,outputY+=multiple){for(let inputX=0,outputX=leftPadding;inputX<inputWidth;inputX++,outputX+=multiple){if(input.get(inputX,inputY)){output.setRegion(outputX,outputY,multiple,multiple);}}}
return output;}}
exports.AbstractExpandedDecoder=AbstractExpandedDecoder;exports.ArgumentException=ArgumentException;exports.ArithmeticException=ArithmeticException;exports.AztecCode=AztecCode;exports.AztecCodeReader=AztecReader;exports.AztecCodeWriter=AztecWriter;exports.AztecDecoder=Decoder;exports.AztecDetector=Detector;exports.AztecDetectorResult=AztecDetectorResult;exports.AztecEncoder=Encoder$1;exports.AztecHighLevelEncoder=HighLevelEncoder$1;exports.AztecPoint=Point;exports.BarcodeFormat=BarcodeFormat$1;exports.Binarizer=Binarizer;exports.BinaryBitmap=BinaryBitmap;exports.BitArray=BitArray;exports.BitMatrix=BitMatrix;exports.BitSource=BitSource;exports.BrowserAztecCodeReader=BrowserAztecCodeReader;exports.BrowserBarcodeReader=BrowserBarcodeReader;exports.BrowserCodeReader=BrowserCodeReader;exports.BrowserDatamatrixCodeReader=BrowserDatamatrixCodeReader;exports.BrowserMultiFormatReader=BrowserMultiFormatReader;exports.BrowserPDF417Reader=BrowserPDF417Reader;exports.BrowserQRCodeReader=BrowserQRCodeReader;exports.BrowserQRCodeSvgWriter=BrowserQRCodeSvgWriter;exports.CharacterSetECI=CharacterSetECI;exports.ChecksumException=ChecksumException;exports.CodaBarReader=CodaBarReader;exports.Code128Reader=Code128Reader;exports.Code39Reader=Code39Reader;exports.Code93Reader=Code93Reader;exports.DataMatrixDecodedBitStreamParser=DecodedBitStreamParser;exports.DataMatrixDefaultPlacement=DefaultPlacement;exports.DataMatrixErrorCorrection=ErrorCorrection$1;exports.DataMatrixHighLevelEncoder=HighLevelEncoder;exports.DataMatrixReader=DataMatrixReader;exports.DataMatrixSymbolInfo=SymbolInfo;exports.DataMatrixWriter=DataMatrixWriter;exports.DecodeHintType=DecodeHintType$1;exports.DecoderResult=DecoderResult;exports.DefaultGridSampler=DefaultGridSampler;exports.DetectorResult=DetectorResult;exports.EAN13Reader=EAN13Reader;exports.EncodeHintType=EncodeHintType$1;exports.Exception=Exception;exports.FormatException=FormatException;exports.GenericGF=GenericGF;exports.GenericGFPoly=GenericGFPoly;exports.GlobalHistogramBinarizer=GlobalHistogramBinarizer;exports.GridSampler=GridSampler;exports.GridSamplerInstance=GridSamplerInstance;exports.HTMLCanvasElementLuminanceSource=HTMLCanvasElementLuminanceSource;exports.HybridBinarizer=HybridBinarizer;exports.ITFReader=ITFReader;exports.IllegalArgumentException=IllegalArgumentException;exports.IllegalStateException=IllegalStateException;exports.InvertedLuminanceSource=InvertedLuminanceSource;exports.LuminanceSource=LuminanceSource;exports.MathUtils=MathUtils;exports.MultiFormatOneDReader=MultiFormatOneDReader;exports.MultiFormatReader=MultiFormatReader;exports.MultiFormatWriter=MultiFormatWriter;exports.NotFoundException=NotFoundException;exports.OneDReader=OneDReader;exports.PDF417DecodedBitStreamParser=DecodedBitStreamParser$2;exports.PDF417DecoderErrorCorrection=ErrorCorrection;exports.PDF417Reader=PDF417Reader;exports.PDF417ResultMetadata=PDF417ResultMetadata;exports.PerspectiveTransform=PerspectiveTransform;exports.PlanarYUVLuminanceSource=PlanarYUVLuminanceSource;exports.QRCodeByteMatrix=ByteMatrix;exports.QRCodeDataMask=DataMask;exports.QRCodeDecodedBitStreamParser=DecodedBitStreamParser$1;exports.QRCodeDecoderErrorCorrectionLevel=ErrorCorrectionLevel;exports.QRCodeDecoderFormatInformation=FormatInformation;exports.QRCodeEncoder=Encoder;exports.QRCodeEncoderQRCode=QRCode;exports.QRCodeMaskUtil=MaskUtil;exports.QRCodeMatrixUtil=MatrixUtil;exports.QRCodeMode=Mode$1;exports.QRCodeReader=QRCodeReader;exports.QRCodeVersion=Version$1;exports.QRCodeWriter=QRCodeWriter;exports.RGBLuminanceSource=RGBLuminanceSource;exports.RSS14Reader=RSS14Reader;exports.RSSExpandedReader=RSSExpandedReader;exports.ReaderException=ReaderException;exports.ReedSolomonDecoder=ReedSolomonDecoder;exports.ReedSolomonEncoder=ReedSolomonEncoder;exports.ReedSolomonException=ReedSolomonException;exports.Result=Result;exports.ResultMetadataType=ResultMetadataType$1;exports.ResultPoint=ResultPoint;exports.StringUtils=StringUtils;exports.UnsupportedOperationException=UnsupportedOperationException;exports.VideoInputDevice=VideoInputDevice;exports.WhiteRectangleDetector=WhiteRectangleDetector;exports.WriterException=WriterException;exports.ZXingArrays=Arrays;exports.ZXingCharset=Charset;exports.ZXingInteger=Integer;exports.ZXingStandardCharsets=StandardCharsets;exports.ZXingStringBuilder=StringBuilder;exports.ZXingStringEncoding=StringEncoding;exports.ZXingSystem=System;exports.createAbstractExpandedDecoder=createDecoder;Object.defineProperty(exports,'__esModule',{value:true});})));;

/* /web/static/src/env.js */
odoo.define('@web/env',['@odoo/owl','@web/core/utils/hooks','@web/core/registry','@web/core/templates','@web/core/l10n/translation','@web/session'],function(require){'use strict';let __exports={};const{App,EventBus}=require("@odoo/owl");const{SERVICES_METADATA}=require("@web/core/utils/hooks");const{registry}=require("@web/core/registry");const{getTemplate}=require("@web/core/templates");const{_t}=require("@web/core/l10n/translation");const{session}=require("@web/session");__exports.makeEnv=makeEnv;function makeEnv(){return{bus:new EventBus(),services:{},debug:odoo.debug,get isSmall(){throw new Error("UI service not initialized!");},};}
const serviceRegistry=registry.category("services");serviceRegistry.addValidation({start:Function,dependencies:{type:Array,element:String,optional:true},async:{type:[{type:Array,element:String},{value:true}],optional:true},"*":true,});let startServicesPromise=null;__exports.startServices=startServices;async function startServices(env){await Promise.resolve();const toStart=new Map();serviceRegistry.addEventListener("UPDATE",async(ev)=>{await Promise.resolve();const{operation,key:name,value:service}=ev.detail;if(operation==="delete"){return;}
if(toStart.size){const namedService=Object.assign(Object.create(service),{name});toStart.set(name,namedService);}else{await _startServices(env,toStart);}});await _startServices(env,toStart);}
async function _startServices(env,toStart){if(startServicesPromise){return startServicesPromise.then(()=>_startServices(env,toStart));}
const services=env.services;for(const[name,service]of serviceRegistry.getEntries()){if(!(name in services)){const namedService=Object.assign(Object.create(service),{name});toStart.set(name,namedService);}}
async function start(){let service=null;const proms=[];while((service=findNext())){const name=service.name;toStart.delete(name);const entries=(service.dependencies||[]).map((dep)=>[dep,services[dep]]);const dependencies=Object.fromEntries(entries);if(name in services){continue;}
const value=service.start(env,dependencies);if("async"in service){SERVICES_METADATA[name]=service.async;}
proms.push(Promise.resolve(value).then((val)=>{services[name]=val||null;}));}
await Promise.all(proms);if(proms.length){return start();}}
startServicesPromise=start().finally(()=>{startServicesPromise=null;});await startServicesPromise;if(toStart.size){const missingDeps=new Set();for(const service of toStart.values()){for(const dependency of service.dependencies){if(!(dependency in services)&&!toStart.has(dependency)){missingDeps.add(dependency);}}}
const depNames=[...missingDeps].join(", ");throw new Error(`Some services could not be started: ${[
                ...toStart.keys(),
            ]}. Missing dependencies: ${depNames}`);}
function findNext(){for(const s of toStart.values()){if(s.dependencies){if(s.dependencies.every((d)=>d in services)){return s;}}else{return s;}}
return null;}}
__exports.mountComponent=mountComponent;async function mountComponent(component,target,appConfig={}){let{env}=appConfig;const isRoot=!env;if(isRoot){env=await makeEnv();await startServices(env);}
const app=new App(component,{env,getTemplate,dev:env.debug||session.test_mode,warnIfNoStaticProps:!session.test_mode,name:component.constructor.name,translatableAttributes:["data-tooltip"],translateFn:_t,...appConfig,});const root=await app.mount(target);if(isRoot){odoo.__WOWL_DEBUG__={root};}
return app;}
return __exports;});;

/* /web/static/src/session.js */
odoo.define('@web/session',[],function(require){'use strict';let __exports={};const session=__exports.session=odoo.__session_info__||{};delete odoo.__session_info__;return __exports;});;

/* /web/static/src/core/action_swiper/action_swiper.js */
odoo.define('@web/core/action_swiper/action_swiper',['@web/core/browser/browser','@web/core/l10n/localization','@web/core/utils/numbers','@odoo/owl','@web/core/utils/concurrency'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{localization}=require("@web/core/l10n/localization");const{clamp}=require("@web/core/utils/numbers");const{Component,onMounted,onWillUnmount,useRef,useState}=require("@odoo/owl");const{Deferred}=require("@web/core/utils/concurrency");const isScrollSwipable=(scrollables)=>{return{left:!scrollables.filter((e)=>e.scrollLeft!==0).length,right:!scrollables.filter((e)=>e.scrollLeft+Math.round(e.getBoundingClientRect().width)!==e.scrollWidth).length,};};const ActionSwiper=__exports.ActionSwiper=class ActionSwiper extends Component{static template="web.ActionSwiper";static props={onLeftSwipe:{type:Object,args:{action:Function,icon:String,bgColor:String,},optional:true,},onRightSwipe:{type:Object,args:{action:Function,icon:String,bgColor:String,},optional:true,},slots:Object,animationOnMove:{type:Boolean,optional:true},animationType:{type:String,optional:true},swipeDistanceRatio:{type:Number,optional:true},swipeInvalid:{type:Function,optional:true},};static defaultProps={onLeftSwipe:undefined,onRightSwipe:undefined,animationOnMove:true,animationType:"bounce",swipeDistanceRatio:2,};setup(){this.actionTimeoutId=null;this.resetTimeoutId=null;this.defaultState={containerStyle:"",isSwiping:false,width:undefined,};this.root=useRef("root");this.targetContainer=useRef("targetContainer");this.state=useState({...this.defaultState});this.scrollables=undefined;this.startX=undefined;this.swipedDistance=0;this.isScrollValidated=false;onMounted(()=>{if(this.targetContainer.el){this.state.width=this.targetContainer.el.getBoundingClientRect().width;}
if(this.props.onLeftSwipe||this.props.onRightSwipe){const classes=new Set(this.root.el.classList);classes.delete("o_actionswiper");for(const className of classes){this.targetContainer.el.firstChild.classList.add(className);this.root.el.classList.remove(className);}}});onWillUnmount(()=>{browser.clearTimeout(this.actionTimeoutId);browser.clearTimeout(this.resetTimeoutId);});}
get localizedProps(){return{onLeftSwipe:localization.direction==="rtl"?this.props.onRightSwipe:this.props.onLeftSwipe,onRightSwipe:localization.direction==="rtl"?this.props.onLeftSwipe:this.props.onRightSwipe,};}
_onTouchEndSwipe(){if(this.state.isSwiping){this.state.isSwiping=false;if(this.localizedProps.onRightSwipe&&this.swipedDistance>this.state.width/this.props.swipeDistanceRatio){this.swipedDistance=this.state.width;this.handleSwipe(this.localizedProps.onRightSwipe.action);}else if(this.localizedProps.onLeftSwipe&&this.swipedDistance<-this.state.width/this.props.swipeDistanceRatio){this.swipedDistance=-this.state.width;this.handleSwipe(this.localizedProps.onLeftSwipe.action);}else{this.state.containerStyle="";}}}
_onTouchMoveSwipe(ev){if(this.state.isSwiping){if(this.props.swipeInvalid&&this.props.swipeInvalid()){this.state.isSwiping=false;return;}
const{onLeftSwipe,onRightSwipe}=this.localizedProps;this.swipedDistance=clamp(ev.touches[0].clientX-this.startX,onLeftSwipe?-this.state.width:0,onRightSwipe?this.state.width:0);if(Math.abs(this.swipedDistance)>40){ev.preventDefault();}
if(!this.isScrollValidated&&this.scrollables&&!isScrollSwipable(this.scrollables)[this.swipedDistance>0?"left":"right"]){return this._reset();}
this.isScrollValidated=true;if(this.props.animationOnMove){this.state.containerStyle=`transform: translateX(${this.swipedDistance}px)`;}}}
_onTouchStartSwipe(ev){this.scrollables=ev.composedPath().filter((e)=>e.nodeType===1&&this.targetContainer.el.contains(e)&&e.scrollWidth>e.getBoundingClientRect().width&&["auto","scroll"].includes(window.getComputedStyle(e)["overflow-x"]));if(!this.state.width){this.state.width=this.targetContainer&&this.targetContainer.el.getBoundingClientRect().width;}
this.state.isSwiping=true;this.isScrollValidated=false;this.startX=ev.touches[0].clientX;}
_reset(){Object.assign(this.state,{...this.defaultState});this.scrollables=undefined;this.startX=undefined;this.swipedDistance=0;this.isScrollValidated=false;}
handleSwipe(action){if(this.props.animationType==="bounce"){this.state.containerStyle=`transform: translateX(${this.swipedDistance}px)`;this.actionTimeoutId=browser.setTimeout(async()=>{await action(Promise.resolve());this._reset();},500);}else if(this.props.animationType==="forwards"){this.state.containerStyle=`transform: translateX(${this.swipedDistance}px)`;this.actionTimeoutId=browser.setTimeout(async()=>{const prom=new Deferred();await action(prom);this.state.isSwiping=true;this.state.containerStyle=`transform: translateX(${-this.swipedDistance}px)`;this.resetTimeoutId=browser.setTimeout(()=>{prom.resolve();this._reset();},100);},100);}else{return action(Promise.resolve());}}}
return __exports;});;

/* /web/static/src/core/anchor_scroll_prevention.js */
odoo.define('@web/core/anchor_scroll_prevention',['@web/core/browser/browser'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");browser.addEventListener("click",(ev)=>{const href=ev.target.closest("a")?.getAttribute("href");if(href&&href==="#"){ev.preventDefault();return;}});return __exports;});;

/* /web/static/src/core/assets.js */
odoo.define('@web/core/assets',['@odoo/owl','@web/session','@web/core/registry'],function(require){'use strict';let __exports={};const{Component,onWillStart,whenReady,xml}=require("@odoo/owl");const{session}=require("@web/session");const{registry}=require("@web/core/registry");const computeCacheMap=()=>{for(const script of document.head.querySelectorAll("script[src]")){cacheMap.set(script.src,Promise.resolve());}
for(const link of document.head.querySelectorAll("link[rel=stylesheet][href]")){cacheMap.set(link.href,Promise.resolve());}};const onLoadAndError=(el,onLoad,onError)=>{const onLoadListener=(event)=>{removeListeners();onLoad(event);};const onErrorListener=(error)=>{removeListeners();onError(error);};const removeListeners=()=>{el.removeEventListener("load",onLoadListener);el.removeEventListener("error",onErrorListener);};el.addEventListener("load",onLoadListener);el.addEventListener("error",onErrorListener);};const cacheMap=new Map();whenReady(computeCacheMap);__exports.getBundle=getBundle;function getBundle(){return assets.getBundle(...arguments);}
__exports.loadBundle=loadBundle;function loadBundle(){return assets.loadBundle(...arguments);}
__exports.loadJS=loadJS;function loadJS(){return assets.loadJS(...arguments);}
__exports.loadCSS=loadCSS;function loadCSS(){return assets.loadCSS(...arguments);}
const AssetsLoadingError=__exports.AssetsLoadingError=class AssetsLoadingError extends Error{}
const LazyComponent=__exports.LazyComponent=class LazyComponent extends Component{static template=xml`<t t-component="Component" t-props="props.props"/>`;static props={Component:String,bundle:String,props:{type:Object,optional:true},};setup(){onWillStart(async()=>{await loadBundle(this.props.bundle);this.Component=registry.category("lazy_components").get(this.props.Component);});}}
const assets=__exports.assets={retries:{count:3,delay:5000,extraDelay:2500,},getBundle(bundleName){if(cacheMap.has(bundleName)){return cacheMap.get(bundleName);}
const url=new URL(`/web/bundle/${bundleName}`,location.origin);for(const[key,value]of Object.entries(session.bundle_params||{})){url.searchParams.set(key,value);}
const promise=fetch(url).then(async(response)=>{const cssLibs=[];const jsLibs=[];if(!response.bodyUsed){const result=await response.json();for(const{src,type}of Object.values(result)){if(type==="link"&&src){cssLibs.push(src);}else if(type==="script"&&src){jsLibs.push(src);}}}
return{cssLibs,jsLibs};}).catch((reason)=>{cacheMap.delete(bundleName);throw reason;});cacheMap.set(bundleName,promise);return promise;},loadBundle(bundleName){if(typeof bundleName!=="string"){throw new Error(`loadBundle(bundleName:string) accepts only bundleName argument as a string ! Not ${JSON.stringify(
                    bundleName
                )} as ${typeof bundleName}`);}
return getBundle(bundleName).then(({cssLibs,jsLibs})=>Promise.all([...cssLibs.map(loadCSS),...jsLibs.map(loadJS)]));},loadCSS(url,retryCount=0){if(cacheMap.has(url)){return cacheMap.get(url);}
const linkEl=document.createElement("link");linkEl.type="text/css";linkEl.rel="stylesheet";linkEl.href=url;const promise=new Promise((resolve,reject)=>onLoadAndError(linkEl,resolve,async()=>{cacheMap.delete(url);if(retryCount<assets.retries.count){const delay=assets.retries.delay+assets.retries.extraDelay*retryCount;await new Promise((res)=>setTimeout(res,delay));linkEl.remove();loadCSS(url,retryCount+1).then(resolve).catch((reason)=>{cacheMap.delete(url);reject(reason);});}else{reject(new AssetsLoadingError(`The loading of ${url} failed`));}}));cacheMap.set(url,promise);document.head.appendChild(linkEl);return promise;},loadJS(url){if(cacheMap.has(url)){return cacheMap.get(url);}
const scriptEl=document.createElement("script");scriptEl.type=url.includes("web/static/lib/pdfjs/")?"module":"text/javascript";scriptEl.src=url;const promise=new Promise((resolve,reject)=>onLoadAndError(scriptEl,resolve,()=>{cacheMap.delete(url);reject(new AssetsLoadingError(`The loading of ${url} failed`));}));cacheMap.set(url,promise);document.head.appendChild(scriptEl);return promise;},};return __exports;});;

/* /web/static/src/core/autocomplete/autocomplete.js */
odoo.define('@web/core/autocomplete/autocomplete',['@web/core/utils/concurrency','@web/core/utils/hooks','@web/core/utils/scrolling','@web/core/utils/timing','@web/core/hotkeys/hotkey_service','@web/core/position/position_hook','@odoo/owl'],function(require){'use strict';let __exports={};const{Deferred}=require("@web/core/utils/concurrency");const{useAutofocus,useForwardRefToParent,useService}=require("@web/core/utils/hooks");const{isScrollableY,scrollTo}=require("@web/core/utils/scrolling");const{useDebounced}=require("@web/core/utils/timing");const{getActiveHotkey}=require("@web/core/hotkeys/hotkey_service");const{usePosition}=require("@web/core/position/position_hook");const{Component,onWillUpdateProps,useExternalListener,useRef,useState}=require("@odoo/owl");const AutoComplete=__exports.AutoComplete=class AutoComplete extends Component{static template="web.AutoComplete";static props={value:{type:String,optional:true},id:{type:String,optional:true},onSelect:{type:Function},sources:{type:Array,element:{type:Object,shape:{placeholder:{type:String,optional:true},optionTemplate:{type:String,optional:true},options:[Array,Function],},},},placeholder:{type:String,optional:true},autoSelect:{type:Boolean,optional:true},resetOnSelect:{type:Boolean,optional:true},onInput:{type:Function,optional:true},onCancel:{type:Function,optional:true},onChange:{type:Function,optional:true},onBlur:{type:Function,optional:true},onFocus:{type:Function,optional:true},input:{type:Function,optional:true},dropdown:{type:Boolean,optional:true},autofocus:{type:Boolean,optional:true},class:{type:String,optional:true},};static defaultProps={value:"",placeholder:"",autoSelect:false,dropdown:true,onInput:()=>{},onCancel:()=>{},onChange:()=>{},onBlur:()=>{},onFocus:()=>{},};setup(){this.nextSourceId=0;this.nextOptionId=0;this.sources=[];this.inEdition=false;this.timeout=250;this.state=useState({navigationRev:0,optionsRev:0,open:false,activeSourceOption:null,value:this.props.value,});this.inputRef=useForwardRefToParent("input");this.listRef=useRef("sourcesList");if(this.props.autofocus){useAutofocus({refName:"input"});}
this.root=useRef("root");this.debouncedProcessInput=useDebounced(async()=>{const currentPromise=this.pendingPromise;this.pendingPromise=null;this.props.onInput({inputValue:this.inputRef.el.value,});try{await this.open(true);currentPromise.resolve();}catch{currentPromise.reject();}finally{if(currentPromise===this.loadingPromise){this.loadingPromise=null;}}},this.timeout);useExternalListener(window,"scroll",this.externalClose,true);useExternalListener(window,"pointerdown",this.externalClose,true);this.hotkey=useService("hotkey");this.hotkeysToRemove=[];onWillUpdateProps((nextProps)=>{if(this.props.value!==nextProps.value||this.forceValFromProp){this.forceValFromProp=false;if(!this.inEdition){this.state.value=nextProps.value;this.inputRef.el.value=nextProps.value;}
this.close();}});if(this.props.dropdown){usePosition("sourcesList",()=>this.targetDropdown,this.dropdownOptions);}else{this.open(false);}}
get targetDropdown(){return this.inputRef.el;}
get activeSourceOptionId(){if(!this.isOpened||!this.state.activeSourceOption){return undefined;}
const[sourceIndex,optionIndex]=this.state.activeSourceOption;const source=this.sources[sourceIndex];return`${this.props.id || "autocomplete"}_${sourceIndex}_${
            source.isLoading ? "loading" : optionIndex
        }`;}
get dropdownOptions(){return{position:"bottom-start",};}
get isOpened(){return this.state.open;}
get hasOptions(){for(const source of this.sources){if(source.isLoading||source.options.length){return true;}}
return false;}
get activeOption(){const[sourceIndex,optionIndex]=this.state.activeSourceOption;return this.sources[sourceIndex].options[optionIndex];}
open(useInput=false){this.state.open=true;return this.loadSources(useInput);}
close(){this.state.open=false;this.state.activeSourceOption=null;}
cancel(){if(this.inputRef.el.value.length){if(this.props.autoSelect){this.inputRef.el.value=this.props.value;this.props.onCancel();}}
this.close();}
async loadSources(useInput){this.sources=[];this.state.activeSourceOption=null;const proms=[];for(const pSource of this.props.sources){const source=this.makeSource(pSource);this.sources.push(source);const options=this.loadOptions(pSource.options,useInput?this.inputRef.el.value.trim():"");if(options instanceof Promise){source.isLoading=true;const prom=options.then((options)=>{source.options=options.map((option)=>this.makeOption(option));source.isLoading=false;this.state.optionsRev++;});proms.push(prom);}else{source.options=options.map((option)=>this.makeOption(option));}}
await Promise.all(proms);this.navigate(0);}
get displayOptions(){return!this.props.dropdown||(this.isOpened&&this.hasOptions);}
loadOptions(options,request){if(typeof options==="function"){return options(request);}else{return options;}}
makeOption(option){return Object.assign(Object.create(option),{id:++this.nextOptionId,});}
makeSource(source){return{id:++this.nextSourceId,options:[],isLoading:false,placeholder:source.placeholder,optionTemplate:source.optionTemplate,};}
isActiveSourceOption([sourceIndex,optionIndex]){return(this.state.activeSourceOption&&this.state.activeSourceOption[0]===sourceIndex&&this.state.activeSourceOption[1]===optionIndex);}
selectOption(option,params={}){this.inEdition=false;if(option.unselectable){this.inputRef.el.value="";this.close();return;}
if(this.props.resetOnSelect){this.inputRef.el.value="";}
this.forceValFromProp=true;this.props.onSelect(option,{...params,input:this.inputRef.el,});this.close();}
navigate(direction){let step=Math.sign(direction);if(!step){this.state.activeSourceOption=null;step=1;}else{this.state.navigationRev++;}
if(this.state.activeSourceOption){let[sourceIndex,optionIndex]=this.state.activeSourceOption;let source=this.sources[sourceIndex];optionIndex+=step;if(0>optionIndex||optionIndex>=source.options.length){sourceIndex+=step;source=this.sources[sourceIndex];while(source&&source.isLoading){sourceIndex+=step;source=this.sources[sourceIndex];}
if(source){optionIndex=step<0?source.options.length-1:0;}}
this.state.activeSourceOption=source?[sourceIndex,optionIndex]:null;}else{let sourceIndex=step<0?this.sources.length-1:0;let source=this.sources[sourceIndex];while(source&&source.isLoading){sourceIndex+=step;source=this.sources[sourceIndex];}
if(source){const optionIndex=step<0?source.options.length-1:0;if(optionIndex<source.options.length){this.state.activeSourceOption=[sourceIndex,optionIndex];}}}}
onInputBlur(){if(this.ignoreBlur){this.ignoreBlur=false;return;}
this.props.onBlur({inputValue:this.inputRef.el.value,});this.inEdition=false;}
onInputClick(){if(!this.isOpened){this.open(this.inputRef.el.value.trim()!==this.props.value.trim());}else{this.close();}}
onInputChange(ev){if(this.ignoreBlur){ev.stopImmediatePropagation();}
this.props.onChange({inputValue:this.inputRef.el.value,});}
async onInput(){this.inEdition=true;this.pendingPromise=this.pendingPromise||new Deferred();this.loadingPromise=this.pendingPromise;this.debouncedProcessInput();}
onInputFocus(ev){this.inputRef.el.setSelectionRange(0,this.inputRef.el.value.length);this.props.onFocus(ev);}
get autoCompleteRootClass(){let classList="";if(this.props.class){classList+=this.props.class;}
if(this.props.dropdown){classList+=" dropdown";}
return classList;}
get ulDropdownClass(){let classList="";if(this.props.dropdown){classList+=" dropdown-menu ui-autocomplete";}else{classList+=" list-group";}
return classList;}
async onInputKeydown(ev){const hotkey=getActiveHotkey(ev);const isSelectKey=hotkey==="enter"||hotkey==="tab";if(this.loadingPromise&&isSelectKey){if(hotkey==="enter"){ev.stopPropagation();ev.preventDefault();}
await this.loadingPromise;}
switch(hotkey){case"enter":if(!this.isOpened||!this.state.activeSourceOption){return;}
this.selectOption(this.activeOption);break;case"escape":if(!this.isOpened){return;}
this.cancel();break;case"tab":case"shift+tab":if(!this.isOpened){return;}
if(this.props.autoSelect&&this.state.activeSourceOption&&(this.state.navigationRev>0||this.inputRef.el.value.length>0)){this.selectOption(this.activeOption);}
this.close();return;case"arrowup":this.navigate(-1);if(!this.isOpened){this.open(true);}
this.scroll();break;case"arrowdown":this.navigate(+1);if(!this.isOpened){this.open(true);}
this.scroll();break;default:return;}
ev.stopPropagation();ev.preventDefault();}
onOptionMouseEnter(indices){this.state.activeSourceOption=indices;}
onOptionMouseLeave(){this.state.activeSourceOption=null;}
onOptionClick(option){this.selectOption(option);this.inputRef.el.focus();}
externalClose(ev){if(this.isOpened&&!this.root.el.contains(ev.target)){this.cancel();}}
scroll(){if(!this.activeSourceOptionId){return;}
if(isScrollableY(this.listRef.el)){scrollTo(this.listRef.el.querySelector(`#${this.activeSourceOptionId}`));}}}
return __exports;});;

/* /web/static/src/core/barcode/ZXingBarcodeDetector.js */
odoo.define('@web/core/barcode/ZXingBarcodeDetector',[],function(require){'use strict';let __exports={};__exports.buildZXingBarcodeDetector=buildZXingBarcodeDetector;function buildZXingBarcodeDetector(ZXing){const ZXingFormats=new Map([["aztec",ZXing.BarcodeFormat.AZTEC],["code_39",ZXing.BarcodeFormat.CODE_39],["code_128",ZXing.BarcodeFormat.CODE_128],["data_matrix",ZXing.BarcodeFormat.DATA_MATRIX],["ean_8",ZXing.BarcodeFormat.EAN_8],["ean_13",ZXing.BarcodeFormat.EAN_13],["itf",ZXing.BarcodeFormat.ITF],["pdf417",ZXing.BarcodeFormat.PDF_417],["qr_code",ZXing.BarcodeFormat.QR_CODE],["upc_a",ZXing.BarcodeFormat.UPC_A],["upc_e",ZXing.BarcodeFormat.UPC_E],]);const allSupportedFormats=Array.from(ZXingFormats.keys());ZXing.HTMLCanvasElementLuminanceSource.toGrayscaleBuffer=function(imageBuffer,width,height){const grayscaleBuffer=new Uint8ClampedArray(width*height);for(let i=0,j=0,length=imageBuffer.length;i<length;i+=4,j++){let gray;const alpha=imageBuffer[i+3];if(alpha===0){gray=0xff;}else{const pixelR=imageBuffer[i];const pixelG=imageBuffer[i+1];const pixelB=imageBuffer[i+2];gray=(306*pixelR+601*pixelG+117*pixelB+0x200)>>10;}
grayscaleBuffer[j]=gray;}
return grayscaleBuffer;};class ZXingBarcodeDetector{constructor(opts={}){const formats=opts.formats||allSupportedFormats;const hints=new Map([[ZXing.DecodeHintType.POSSIBLE_FORMATS,formats.map((format)=>ZXingFormats.get(format)),],[ZXing.DecodeHintType.TRY_HARDER,true],]);this.reader=new ZXing.MultiFormatReader();this.reader.setHints(hints);}
async detect(video){if(!(video instanceof HTMLVideoElement)){throw new DOMException("imageDataFrom() requires an HTMLVideoElement","InvalidArgumentError");}
if(!isVideoElementReady(video)){throw new DOMException("HTMLVideoElement is not ready","InvalidStateError");}
const canvas=document.createElement("canvas");let barcodeArea;if(this.cropArea&&(this.cropArea.x||this.cropArea.y)){barcodeArea=this.cropArea;}else{barcodeArea={x:0,y:0,width:video.videoWidth,height:video.videoHeight,};}
canvas.width=barcodeArea.width;canvas.height=barcodeArea.height;const ctx=canvas.getContext("2d");ctx.drawImage(video,barcodeArea.x,barcodeArea.y,barcodeArea.width,barcodeArea.height,0,0,barcodeArea.width,barcodeArea.height);const luminanceSource=new ZXing.HTMLCanvasElementLuminanceSource(canvas);const binaryBitmap=new ZXing.BinaryBitmap(new ZXing.HybridBinarizer(luminanceSource));try{const result=this.reader.decodeWithState(binaryBitmap);const{resultPoints}=result;const boundingBox=DOMRectReadOnly.fromRect({x:resultPoints[0].x,y:resultPoints[0].y,height:Math.max(1,Math.abs(resultPoints[1].y-resultPoints[0].y)),width:Math.max(1,Math.abs(resultPoints[1].x-resultPoints[0].x)),});const cornerPoints=resultPoints;const format=Array.from(ZXingFormats).find(([k,val])=>val===result.getBarcodeFormat());const rawValue=result.getText();return[{boundingBox,cornerPoints,format,rawValue,},];}catch(err){if(err.name==="NotFoundException"){return[];}
throw err;}}
setCropArea(cropArea){this.cropArea=cropArea;}}
ZXingBarcodeDetector.getSupportedFormats=async()=>allSupportedFormats;return ZXingBarcodeDetector;}
const HAVE_NOTHING=0;const HAVE_METADATA=1;__exports.isVideoElementReady=isVideoElementReady;function isVideoElementReady(video){return![HAVE_NOTHING,HAVE_METADATA].includes(video.readyState);}
return __exports;});;

/* /web/static/src/core/barcode/barcode_dialog.js */
odoo.define('@web/core/barcode/barcode_dialog',['@web/core/l10n/translation','@web/core/dialog/dialog','@odoo/owl','@web/core/barcode/barcode_video_scanner'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{Dialog}=require("@web/core/dialog/dialog");const{Component,useState}=require("@odoo/owl");const{BarcodeVideoScanner,isBarcodeScannerSupported}=require("@web/core/barcode/barcode_video_scanner");const BarcodeDialog=__exports.BarcodeDialog=class BarcodeDialog extends Component{static template="web.BarcodeDialog";static components={BarcodeVideoScanner,Dialog,};static props=["facingMode","close","onResult","onError"];setup(){this.state=useState({barcodeScannerSupported:isBarcodeScannerSupported(),errorMessage:_t("Check your browser permissions"),});}
onResult(result){this.props.close();this.props.onResult(result);}
onError(error){this.state.barcodeScannerSupported=false;this.state.errorMessage=error.message;}}
__exports.scanBarcode=scanBarcode;async function scanBarcode(env,facingMode="environment"){let res;let rej;const promise=new Promise((resolve,reject)=>{res=resolve;rej=reject;});env.services.dialog.add(BarcodeDialog,{facingMode,onResult:(result)=>res(result),onError:(error)=>rej(error),});return promise;}
return __exports;});;

/* /web/static/src/core/barcode/barcode_video_scanner.js */
odoo.define('@web/core/barcode/barcode_video_scanner',['@web/core/browser/browser','@web/core/utils/concurrency','@web/core/assets','@web/core/barcode/ZXingBarcodeDetector','@web/core/barcode/crop_overlay','@odoo/owl','@web/core/l10n/translation','@web/core/utils/objects'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{delay}=require("@web/core/utils/concurrency");const{loadJS}=require("@web/core/assets");const{isVideoElementReady,buildZXingBarcodeDetector}=require("@web/core/barcode/ZXingBarcodeDetector");const{CropOverlay}=require("@web/core/barcode/crop_overlay");const{Component,onMounted,onWillStart,onWillUnmount,useRef,useState}=require("@odoo/owl");const{_t}=require("@web/core/l10n/translation");const{pick}=require("@web/core/utils/objects");const BarcodeVideoScanner=__exports.BarcodeVideoScanner=class BarcodeVideoScanner extends Component{static template="web.BarcodeVideoScanner";static components={CropOverlay,};static props={cssClass:{type:String,optional:true},facingMode:{type:String,validate:(fm)=>["environment","left","right","user"].includes(fm),},close:{type:Function,optional:true},onReady:{type:Function,optional:true},onResult:Function,onError:Function,delayBetweenScan:{type:Number,optional:true},};static defaultProps={cssClass:"w-100 h-100",};setup(){this.videoPreviewRef=useRef("videoPreview");this.detectorTimeout=null;this.stream=null;this.detector=null;this.overlayInfo={};this.zoomRatio=1;this.scanPaused=false;this.state=useState({isReady:false,});onWillStart(async()=>{let DetectorClass;if("BarcodeDetector"in window){DetectorClass=BarcodeDetector;}else{await loadJS("/web/static/lib/zxing-library/zxing-library.js");DetectorClass=buildZXingBarcodeDetector(window.ZXing);}
const formats=await DetectorClass.getSupportedFormats();this.detector=new DetectorClass({formats});});onMounted(async()=>{const constraints={video:{facingMode:this.props.facingMode},audio:false,};try{this.stream=await browser.navigator.mediaDevices.getUserMedia(constraints);}catch(err){const errors={NotFoundError:_t("No device can be found."),NotAllowedError:_t("Odoo needs your authorization first."),};const errorMessage=_t("Could not start scanning. %(message)s",{message:errors[err.name]||err.message,});this.props.onError(new Error(errorMessage));return;}
if(!this.videoPreviewRef.el){this.cleanStreamAndTimeout();const errorMessage=_t("Barcode Video Scanner could not be mounted properly.");this.props.onError(new Error(errorMessage));return;}
this.videoPreviewRef.el.srcObject=this.stream;await this.isVideoReady();const{height,width}=getComputedStyle(this.videoPreviewRef.el);const divWidth=width.slice(0,-2);const divHeight=height.slice(0,-2);const tracks=this.stream.getVideoTracks();if(tracks.length){const[track]=tracks;const settings=track.getSettings();this.zoomRatio=Math.min(divWidth/settings.width,divHeight/settings.height);}
this.detectorTimeout=setTimeout(this.detectCode.bind(this),100);});onWillUnmount(()=>this.cleanStreamAndTimeout());}
cleanStreamAndTimeout(){clearTimeout(this.detectorTimeout);this.detectorTimeout=null;if(this.stream){this.stream.getTracks().forEach((track)=>track.stop());this.stream=null;}}
isZXingBarcodeDetector(){return this.detector&&this.detector.__proto__.constructor.name==="ZXingBarcodeDetector";}
async isVideoReady(){while(!isVideoElementReady(this.videoPreviewRef.el)){await delay(10);}
this.state.isReady=true;if(this.props.onReady){this.props.onReady();}}
onResize(overlayInfo){this.overlayInfo=overlayInfo;if(this.isZXingBarcodeDetector()){this.detector.setCropArea(this.adaptValuesWithRatio(this.overlayInfo,true));}}
async detectCode(){let barcodeDetected=false;let codes=[];try{codes=await this.detector.detect(this.videoPreviewRef.el);}catch(err){this.props.onError(err);}
for(const code of codes){if(!this.isZXingBarcodeDetector()&&this.overlayInfo.x!==undefined&&this.overlayInfo.y!==undefined){const{x,y,width,height}=this.adaptValuesWithRatio(code.boundingBox);if(x<this.overlayInfo.x||x+width>this.overlayInfo.x+this.overlayInfo.width||y<this.overlayInfo.y||y+height>this.overlayInfo.y+this.overlayInfo.height){continue;}}
barcodeDetected=true;this.barcodeDetected(code.rawValue);break;}
if(this.stream&&(!barcodeDetected||!this.props.delayBetweenScan)){this.detectorTimeout=setTimeout(this.detectCode.bind(this),100);}}
barcodeDetected(barcode){if(this.props.delayBetweenScan&&!this.scanPaused){this.scanPaused=true;this.detectorTimeout=setTimeout(()=>{this.scanPaused=false;this.detectorTimeout=setTimeout(this.detectCode.bind(this),100);},this.props.delayBetweenScan);}
this.props.onResult(barcode);}
adaptValuesWithRatio(domRect,dividerRatio=false){const newObject=pick(domRect,"x","y","width","height");for(const key of Object.keys(newObject)){if(dividerRatio){newObject[key]/=this.zoomRatio;}else{newObject[key]*=this.zoomRatio;}}
return newObject;}}
__exports.isBarcodeScannerSupported=isBarcodeScannerSupported;function isBarcodeScannerSupported(){return Boolean(browser.navigator.mediaDevices&&browser.navigator.mediaDevices.getUserMedia);}
return __exports;});;

/* /web/static/src/core/barcode/crop_overlay.js */
odoo.define('@web/core/barcode/crop_overlay',['@odoo/owl','@web/core/browser/browser','@web/core/utils/numbers'],function(require){'use strict';let __exports={};const{Component,useRef,onPatched}=require("@odoo/owl");const{browser}=require("@web/core/browser/browser");const{clamp}=require("@web/core/utils/numbers");const CropOverlay=__exports.CropOverlay=class CropOverlay extends Component{static template="web.CropOverlay";static props={onResize:Function,isReady:Boolean,slots:{type:Object,shape:{default:{},},},};setup(){this.localStorageKey="o-barcode-scanner-overlay";this.cropContainerRef=useRef("crop-container");this.isMoving=false;this.boundaryOverlay={};this.relativePosition={x:0,y:0,};onPatched(()=>{this.setupCropRect();});}
setupCropRect(){if(!this.props.isReady){return;}
this.computeDefaultPoint();this.computeOverlayPosition();this.calculateAndSetTransparentRect();this.executeOnResizeCallback();}
boundPoint(pointValue,boundaryRect){return{x:clamp(pointValue.x,boundaryRect.left,boundaryRect.left+boundaryRect.width),y:clamp(pointValue.y,boundaryRect.top,boundaryRect.top+boundaryRect.height),};}
calculateAndSetTransparentRect(){const cropTransparentRect=this.getTransparentRec(this.relativePosition,this.boundaryOverlay);this.setCropValue(cropTransparentRect,this.relativePosition);}
computeOverlayPosition(){const cropOverlayElement=this.cropContainerRef.el.querySelector(".o_crop_overlay");this.boundaryOverlay=cropOverlayElement.getBoundingClientRect();}
executeOnResizeCallback(){const transparentRec=this.getTransparentRec(this.relativePosition,this.boundaryOverlay);browser.localStorage.setItem(this.localStorageKey,JSON.stringify(transparentRec));this.props.onResize({...transparentRec,width:this.boundaryOverlay.width-2*transparentRec.x,height:this.boundaryOverlay.height-2*transparentRec.y,});}
computeDefaultPoint(){const firstChildComputedStyle=getComputedStyle(this.cropContainerRef.el.firstChild);const elementWidth=firstChildComputedStyle.width.slice(0,-2);const elementHeight=firstChildComputedStyle.height.slice(0,-2);const stringSavedPoint=browser.localStorage.getItem(this.localStorageKey);if(stringSavedPoint){const savedPoint=JSON.parse(stringSavedPoint);this.relativePosition={x:clamp(savedPoint.x,0,elementWidth),y:clamp(savedPoint.y,0,elementHeight),};}else{const stepWidth=elementWidth/10;const width=stepWidth*8;const height=width/4;const startY=elementHeight/2-height/2;this.relativePosition={x:stepWidth+width,y:startY+height,};}}
getTransparentRec(point,rect){const middleX=rect.width/2;const middleY=rect.height/2;const newDeltaX=Math.abs(point.x-middleX);const newDeltaY=Math.abs(point.y-middleY);return{x:middleX-newDeltaX,y:middleY-newDeltaY,};}
setCropValue(point,iconPoint){if(!iconPoint){iconPoint=point;}
this.cropContainerRef.el.style.setProperty("--o-crop-x",`${point.x}px`);this.cropContainerRef.el.style.setProperty("--o-crop-y",`${point.y}px`);this.cropContainerRef.el.style.setProperty("--o-crop-icon-x",`${iconPoint.x}px`);this.cropContainerRef.el.style.setProperty("--o-crop-icon-y",`${iconPoint.y}px`);}
pointerDown(event){event.preventDefault();if(event.target.matches(".o_crop_icon")){this.computeOverlayPosition();this.isMoving=true;}}
pointerMove(event){if(!this.isMoving){return;}
let eventPosition;if(event.touches&&event.touches.length){eventPosition=event.touches[0];}else{eventPosition=event;}
const{clientX,clientY}=eventPosition;const restrictedPosition=this.boundPoint({x:clientX,y:clientY,},this.boundaryOverlay);this.relativePosition={x:restrictedPosition.x-this.boundaryOverlay.left,y:restrictedPosition.y-this.boundaryOverlay.top,};this.calculateAndSetTransparentRect(this.relativePosition);}
pointerUp(event){this.isMoving=false;this.executeOnResizeCallback();}}
return __exports;});;

/* /web/static/src/core/browser/browser.js */
odoo.define('@web/core/browser/browser',[],function(require){'use strict';let __exports={};let sessionStorage;let localStorage;try{sessionStorage=window.sessionStorage;localStorage=window.localStorage;localStorage.setItem("__localStorage__","true");localStorage.removeItem("__localStorage__");}catch{localStorage=makeRAMLocalStorage();sessionStorage=makeRAMLocalStorage();}
const browser=__exports.browser={addEventListener:window.addEventListener.bind(window),dispatchEvent:window.dispatchEvent.bind(window),AnalyserNode:window.AnalyserNode,Audio:window.Audio,AudioBufferSourceNode:window.AudioBufferSourceNode,AudioContext:window.AudioContext,AudioWorkletNode:window.AudioWorkletNode,BeforeInstallPromptEvent:window.BeforeInstallPromptEvent?.bind(window),GainNode:window.GainNode,MediaStreamAudioSourceNode:window.MediaStreamAudioSourceNode,removeEventListener:window.removeEventListener.bind(window),setTimeout:window.setTimeout.bind(window),clearTimeout:window.clearTimeout.bind(window),setInterval:window.setInterval.bind(window),clearInterval:window.clearInterval.bind(window),performance:window.performance,requestAnimationFrame:window.requestAnimationFrame.bind(window),cancelAnimationFrame:window.cancelAnimationFrame.bind(window),console:window.console,history:window.history,matchMedia:window.matchMedia.bind(window),navigator,Notification:window.Notification,open:window.open.bind(window),SharedWorker:window.SharedWorker,Worker:window.Worker,XMLHttpRequest:window.XMLHttpRequest,localStorage,sessionStorage,fetch:window.fetch.bind(window),innerHeight:window.innerHeight,innerWidth:window.innerWidth,ontouchstart:window.ontouchstart,BroadcastChannel:window.BroadcastChannel,};Object.defineProperty(browser,"location",{set(val){window.location=val;},get(){return window.location;},configurable:true,});Object.defineProperty(browser,"innerHeight",{get:()=>window.innerHeight,configurable:true,});Object.defineProperty(browser,"innerWidth",{get:()=>window.innerWidth,configurable:true,});__exports.makeRAMLocalStorage=makeRAMLocalStorage;function makeRAMLocalStorage(){let store={};return{setItem(key,value){const newValue=String(value);store[key]=newValue;window.dispatchEvent(new StorageEvent("storage",{key,newValue}));},getItem(key){return store[key]??null;},clear(){store={};},removeItem(key){delete store[key];window.dispatchEvent(new StorageEvent("storage",{key,newValue:null}));},get length(){return Object.keys(store).length;},key(){return"";},};}
return __exports;});;

/* /web/static/src/core/browser/cookie.js */
odoo.define('@web/core/browser/cookie',[],function(require){'use strict';let __exports={};const COOKIE_TTL=24*60*60*365;const cookie=__exports.cookie={get _cookieMonster(){return document.cookie;},set _cookieMonster(value){document.cookie=value;},get(str){const parts=this._cookieMonster.split("; ");for(const part of parts){const[key,value]=part.split(/=(.*)/);if(key===str){return value||"";}}},set(key,value,ttl=COOKIE_TTL){let fullCookie=[];if(value!==undefined){fullCookie.push(`${key}=${value}`);}
fullCookie=fullCookie.concat(["path=/",`max-age=${ttl}`]);this._cookieMonster=fullCookie.join("; ");},delete(key){this.set(key,"kill",0);},};return __exports;});;

/* /web/static/src/core/browser/feature_detection.js */
odoo.define('@web/core/browser/feature_detection',['@web/core/browser/browser'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");__exports.isBrowserChrome=isBrowserChrome;function isBrowserChrome(){return/Chrome/i.test(browser.navigator.userAgent);}
__exports.isBrowserFirefox=isBrowserFirefox;function isBrowserFirefox(){return/Firefox/i.test(browser.navigator.userAgent);}
__exports.isBrowserSafari=isBrowserSafari;function isBrowserSafari(){return!isBrowserChrome()&&browser.navigator.userAgent?.includes("Safari");}
__exports.isAndroid=isAndroid;function isAndroid(){return/Android/i.test(browser.navigator.userAgent);}
__exports.isIOS=isIOS;function isIOS(){return(/(iPad|iPhone|iPod)/i.test(browser.navigator.userAgent)||(browser.navigator.platform==="MacIntel"&&maxTouchPoints()>1));}
__exports.isOtherMobileOS=isOtherMobileOS;function isOtherMobileOS(){return/(webOS|BlackBerry|Windows Phone)/i.test(browser.navigator.userAgent);}
__exports.isMacOS=isMacOS;function isMacOS(){return/Mac/i.test(browser.navigator.userAgent);}
__exports.isMobileOS=isMobileOS;function isMobileOS(){return isAndroid()||isIOS()||isOtherMobileOS();}
__exports.isIosApp=isIosApp;function isIosApp(){return/OdooMobile \(iOS\)/i.test(browser.navigator.userAgent);}
__exports.isAndroidApp=isAndroidApp;function isAndroidApp(){return/OdooMobile.+Android/i.test(browser.navigator.userAgent);}
__exports.isDisplayStandalone=isDisplayStandalone;function isDisplayStandalone(){return browser.matchMedia("(display-mode: standalone)").matches;}
__exports.hasTouch=hasTouch;function hasTouch(){return browser.ontouchstart!==undefined||browser.matchMedia("(pointer:coarse)").matches;}
__exports.maxTouchPoints=maxTouchPoints;function maxTouchPoints(){return browser.navigator.maxTouchPoints||1;}
return __exports;});;

/* /web/static/src/core/browser/title_service.js */
odoo.define('@web/core/browser/title_service',['@web/core/registry'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const titleService=__exports.titleService={start(){const titleCounters={};const titleParts={};function getParts(){return Object.assign({},titleParts);}
function setCounters(counters){for(const key in counters){const val=counters[key];if(!val){delete titleCounters[key];}else{titleCounters[key]=val;}}
updateTitle();}
function setParts(parts){for(const key in parts){const val=parts[key];if(!val){delete titleParts[key];}else{titleParts[key]=val;}}
updateTitle();}
function updateTitle(){const counter=Object.values(titleCounters).reduce((acc,count)=>acc+count,0);const name=Object.values(titleParts).join(" - ")||"Odoo";if(!counter){document.title=name;}else{document.title=`(${counter}) ${name}`;}}
return{get current(){return document.title;},getParts,setCounters,setParts,};},};registry.category("services").add("title",titleService);return __exports;});;

/* /web/static/src/core/checkbox/checkbox.js */
odoo.define('@web/core/checkbox/checkbox',['@web/core/hotkeys/hotkey_hook','@odoo/owl'],function(require){'use strict';let __exports={};const{useHotkey}=require("@web/core/hotkeys/hotkey_hook");const{Component,useRef}=require("@odoo/owl");const CheckBox=__exports.CheckBox=class CheckBox extends Component{static template="web.CheckBox";static nextId=1;static defaultProps={onChange:()=>{},};static props={id:{type:true,optional:true,},disabled:{type:Boolean,optional:true,},value:{type:Boolean,optional:true,},slots:{type:Object,optional:true,},onChange:{type:Function,optional:true,},className:{type:String,optional:true,},name:{type:String,optional:true,},};setup(){this.id=`checkbox-comp-${CheckBox.nextId++}`;this.rootRef=useRef("root");useHotkey("Enter",({area})=>{const oldValue=area.querySelector("input").checked;this.props.onChange(!oldValue);},{area:()=>this.rootRef.el,bypassEditableProtection:true});}
onClick(ev){if(ev.composedPath().find((el)=>["INPUT","LABEL"].includes(el.tagName))){ev.stopPropagation();return;}
const input=this.rootRef.el.querySelector("input");input.focus();if(!this.props.disabled){ev.stopPropagation();input.checked=!input.checked;this.props.onChange(input.checked);}}
onChange(ev){if(!this.props.disabled){this.props.onChange(ev.target.checked);}}}
return __exports;});;

/* /web/static/src/core/code_editor/code_editor.js */
odoo.define('@web/core/code_editor/code_editor',['@odoo/owl','@web/core/assets','@web/core/utils/timing'],function(require){'use strict';let __exports={};const{Component,onWillDestroy,onWillStart,useEffect,useRef,useState}=require("@odoo/owl");const{loadBundle}=require("@web/core/assets");const{useDebounced}=require("@web/core/utils/timing");function onResized(ref,callback){const _ref=typeof ref==="string"?useRef(ref):ref;const resizeObserver=new ResizeObserver(callback);useEffect((el)=>{if(el){resizeObserver.observe(el);return()=>resizeObserver.unobserve(el);}},()=>[_ref.el]);onWillDestroy(()=>{resizeObserver.disconnect();});}
const CodeEditor=__exports.CodeEditor=class CodeEditor extends Component{static template="web.CodeEditor";static components={};static props={mode:{type:String,optional:true,validate:(mode)=>CodeEditor.MODES.includes(mode),},value:{validate:(v)=>typeof v==="string",optional:true},readonly:{type:Boolean,optional:true},onChange:{type:Function,optional:true},onBlur:{type:Function,optional:true},class:{type:String,optional:true},theme:{type:String,optional:true,validate:(theme)=>CodeEditor.THEMES.includes(theme),},maxLines:{type:Number,optional:true},sessionId:{type:[Number,String],optional:true},};static defaultProps={readonly:false,value:"",onChange:()=>{},class:"",theme:"",sessionId:1,};static MODES=["javascript","xml","qweb","scss","python"];static THEMES=["","monokai"];setup(){this.editorRef=useRef("editorRef");this.state=useState({activeMode:undefined,});onWillStart(async()=>await loadBundle("web.ace_lib"));const sessions={};let ignoredAceChange=false;useEffect((el)=>{if(!el){return;}
const aceEditor=window.ace.edit(el);this.aceEditor=aceEditor;this.aceEditor.setOptions({maxLines:this.props.maxLines,showPrintMargin:false,useWorker:false,});this.aceEditor.$blockScrolling=true;this.aceEditor.on("changeMode",()=>{this.state.activeMode=this.aceEditor.getSession().$modeId.split("/").at(-1);});const session=aceEditor.getSession();if(!sessions[this.props.sessionId]){sessions[this.props.sessionId]=session;}
session.setValue(this.props.value);session.on("change",()=>{if(this.props.onChange&&!ignoredAceChange){this.props.onChange(this.aceEditor.getValue());}});this.aceEditor.on("blur",()=>{if(this.props.onBlur){this.props.onBlur();}});return()=>{aceEditor.destroy();};},()=>[this.editorRef.el]);useEffect((theme)=>this.aceEditor.setTheme(theme?`ace/theme/${theme}`:""),()=>[this.props.theme]);useEffect((readonly)=>{this.aceEditor.setOptions({readOnly:readonly,highlightActiveLine:!readonly,highlightGutterLine:!readonly,});this.aceEditor.renderer.setOptions({displayIndentGuides:!readonly,showGutter:!readonly,});this.aceEditor.renderer.$cursorLayer.element.style.display=readonly?"none":"block";},()=>[this.props.readonly]);useEffect((sessionId,mode,value)=>{let session=sessions[sessionId];if(session){if(session.getValue()!==value){ignoredAceChange=true;session.setValue(value);ignoredAceChange=false;}}else{session=new window.ace.EditSession(value);session.setUndoManager(new window.ace.UndoManager());session.setOptions({useWorker:false,tabSize:2,useSoftTabs:true,});session.on("change",()=>{if(this.props.onChange&&!ignoredAceChange){this.props.onChange(this.aceEditor.getValue());}});sessions[sessionId]=session;}
session.setMode(mode?`ace/mode/${mode}`:"");this.aceEditor.setSession(session);},()=>[this.props.sessionId,this.props.mode,this.props.value]);const debouncedResize=useDebounced(()=>{if(this.aceEditor){this.aceEditor.resize();}},250);onResized(this.editorRef,debouncedResize);}}
return __exports;});;

/* /web/static/src/core/colorlist/colorlist.js */
odoo.define('@web/core/colorlist/colorlist',['@web/core/l10n/translation','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{Component,useRef,useState,useExternalListener}=require("@odoo/owl");const ColorList=__exports.ColorList=class ColorList extends Component{static COLORS=[_t("No color"),_t("Red"),_t("Orange"),_t("Yellow"),_t("Cyan"),_t("Purple"),_t("Almond"),_t("Teal"),_t("Blue"),_t("Raspberry"),_t("Green"),_t("Violet"),];static template="web.ColorList";static defaultProps={forceExpanded:false,isExpanded:false,};static props={canToggle:{type:Boolean,optional:true},colors:Array,forceExpanded:{type:Boolean,optional:true},isExpanded:{type:Boolean,optional:true},onColorSelected:Function,selectedColor:{type:Number,optional:true},};setup(){this.colorlistRef=useRef("colorlist");this.state=useState({isExpanded:this.props.isExpanded});useExternalListener(window,"click",this.onOutsideClick);}
get colors(){return this.constructor.COLORS;}
onColorSelected(id){this.props.onColorSelected(id);if(!this.props.forceExpanded){this.state.isExpanded=false;}}
onOutsideClick(ev){if(this.colorlistRef.el.contains(ev.target)||this.props.forceExpanded){return;}
this.state.isExpanded=false;}
onToggle(ev){if(this.props.canToggle){ev.preventDefault();ev.stopPropagation();this.state.isExpanded=!this.state.isExpanded;this.colorlistRef.el.firstElementChild.focus();}}}
return __exports;});;

/* /web/static/src/core/colorpicker/colorpicker.js */
odoo.define('@web/core/colorpicker/colorpicker',['@web/core/utils/colors','@web/core/utils/functions','@web/core/utils/numbers','@web/core/utils/timing','@odoo/owl'],function(require){'use strict';let __exports={};const{convertCSSColorToRgba,convertHslToRgb,convertRgbaToCSSColor,convertRgbToHsl,}=require("@web/core/utils/colors");const{uniqueId}=require("@web/core/utils/functions");const{clamp}=require("@web/core/utils/numbers");const{debounce,useThrottleForAnimation}=require("@web/core/utils/timing");const{Component,onMounted,onWillUpdateProps,useExternalListener,useRef}=require("@odoo/owl");const Colorpicker=__exports.Colorpicker=class Colorpicker extends Component{static template="web.Colorpicker";static props={document:{type:true,optional:true},defaultColor:{type:String,optional:true},selectedColor:{type:String,optional:true},noTransparency:{type:Boolean,optional:true},stopClickPropagation:{type:Boolean,optional:true},onColorSelect:{type:Function,optional:true},onColorPreview:{type:Function,optional:true},onInputEnter:{type:Function,optional:true},};static defaultProps={document:window.document,defaultColor:"#FF0000",noTransparency:false,stopClickPropagation:false,onColorSelect:()=>{},onColorPreview:()=>{},onInputEnter:()=>{},};setup(){this.pickerFlag=false;this.sliderFlag=false;this.opacitySliderFlag=false;this.colorComponents={};this.uniqueId=uniqueId("colorpicker");this.selectedHexValue="";this.debouncedOnChangeInputs=debounce(this.onChangeInputs.bind(this),10,true);this.elRef=useRef("el");this.colorPickerAreaRef=useRef("colorPickerArea");this.colorPickerPointerRef=useRef("colorPickerPointer");this.colorSliderRef=useRef("colorSlider");this.colorSliderPointerRef=useRef("colorSliderPointer");this.opacitySliderRef=useRef("opacitySlider");this.opacitySliderPointerRef=useRef("opacitySliderPointer");const documents=[window.top,...Array.from(window.top.frames).filter((frame)=>{try{const document=frame.document;return!!document;}catch{return false;}}),].map((w)=>w.document);this.throttleOnMouseMove=useThrottleForAnimation((ev)=>{this.onMouseMovePicker(ev);this.onMouseMoveSlider(ev);this.onMouseMoveOpacitySlider(ev);});for(const doc of documents){useExternalListener(doc,"mousemove",this.throttleOnMouseMove);useExternalListener(doc,"mouseup",this.onMouseUp.bind(this));}
onMounted(async()=>{const defaultCssColor=this.props.selectedColor?this.props.selectedColor:this.props.defaultColor;const rgba=convertCSSColorToRgba(defaultCssColor);if(rgba){this._updateRgba(rgba.red,rgba.green,rgba.blue,rgba.opacity);}
this.previewActive=true;this._updateUI();});onWillUpdateProps((newProps)=>{const newSelectedColor=newProps.selectedColor?newProps.selectedColor:newProps.defaultColor;this.setSelectedColor(newSelectedColor);});}
setSelectedColor(color){const rgba=convertCSSColorToRgba(color);if(rgba){const oldPreviewActive=this.previewActive;this.previewActive=false;this._updateRgba(rgba.red,rgba.green,rgba.blue,rgba.opacity);this.previewActive=oldPreviewActive;this._updateUI();}}
get el(){return this.elRef.el;}
_updateUI(){for(const[color,value]of Object.entries(this.colorComponents)){const input=this.el.querySelector(`.o_${color}_input`);if(input){input.value=value;}}
const colorPickerArea=this.colorPickerAreaRef.el;colorPickerArea.style.backgroundColor=`hsl(${this.colorComponents.hue}, 100%, 50%)`;const top=((100-this.colorComponents.lightness)*colorPickerArea.clientHeight)/100;const left=(this.colorComponents.saturation*colorPickerArea.clientWidth)/100;const colorpickerPointer=this.colorPickerPointerRef.el;colorpickerPointer.style.top=top-5+"px";colorpickerPointer.style.left=left-5+"px";const colorSlider=this.colorSliderRef.el;const height=colorSlider.clientHeight;const y=(this.colorComponents.hue*height)/360;this.colorSliderPointerRef.el.style.top=`${Math.round(y - 2)}px`;if(!this.props.noTransparency){const opacitySlider=this.opacitySliderRef.el;const heightOpacity=opacitySlider.clientHeight;const z=heightOpacity*(1-this.colorComponents.opacity/100.0);this.opacitySliderPointerRef.el.style.top=`${Math.round(z - 2)}px`;opacitySlider.style.background=`linear-gradient(${this.colorComponents.hex} 0%, transparent 100%)`;}}
_updateHex(hex){const rgb=convertCSSColorToRgba(hex);if(!rgb){return;}
Object.assign(this.colorComponents,{hex:hex},rgb,convertRgbToHsl(rgb.red,rgb.green,rgb.blue));this._updateCssColor();}
_updateRgba(r,g,b,a){const opacity=a||this.colorComponents.opacity;if(opacity<0.1&&(r>0.1||g>0.1||b>0.1)){a=100;}
const hex=convertRgbaToCSSColor(r,g,b);if(!hex){return;}
Object.assign(this.colorComponents,{red:r,green:g,blue:b},a===undefined?{}:{opacity:a},{hex:hex},convertRgbToHsl(r,g,b));this._updateCssColor();}
_updateHsl(h,s,l){let a=this.colorComponents.opacity;if(a<0.1&&l>0.1){a=100;}
const rgb=convertHslToRgb(h,s,l);if(!rgb){return;}
const hex=convertRgbaToCSSColor(rgb.red,rgb.green,rgb.blue);Object.assign(this.colorComponents,{hue:h,saturation:s,lightness:l},rgb,{hex:hex},{opacity:a});this._updateCssColor();}
_updateOpacity(a){if(a<0||a>100){return;}
Object.assign(this.colorComponents,{opacity:a});this._updateCssColor();}
_colorSelected(){this.props.onColorSelect(this.colorComponents);}
_updateCssColor(){const r=this.colorComponents.red;const g=this.colorComponents.green;const b=this.colorComponents.blue;const a=this.colorComponents.opacity;Object.assign(this.colorComponents,{cssColor:convertRgbaToCSSColor(r,g,b,a)});if(this.previewActive){this.props.onColorPreview(this.colorComponents);}}
onKeydown(ev){if(ev.key==="Enter"){if(ev.target.tagName==="INPUT"){this.onChangeInputs(ev);}
ev.preventDefault();this.props.onInputEnter(ev);}}
onClick(ev){if(this.props.stopClickPropagation){ev.stopPropagation();}
ev.__isColorpickerClick=true;if(ev.target.dataset.colorMethod==="hex"&&!this.selectedHexValue){ev.target.select();this.selectedHexValue=ev.target.value;return;}
this.selectedHexValue="";}
onMouseUp(){if(this.pickerFlag||this.sliderFlag||this.opacitySliderFlag){this._colorSelected();}
this.pickerFlag=false;this.sliderFlag=false;this.opacitySliderFlag=false;}
onMouseDownPicker(ev){this.pickerFlag=true;ev.preventDefault();this.onMouseMovePicker(ev);}
onMouseMovePicker(ev){if(!this.pickerFlag){return;}
const colorPickerArea=this.colorPickerAreaRef.el;const rect=colorPickerArea.getClientRects()[0];const top=ev.pageY-rect.top;const left=ev.pageX-rect.left;let saturation=Math.round((100*left)/colorPickerArea.clientWidth);let lightness=Math.round((100*(colorPickerArea.clientHeight-top))/colorPickerArea.clientHeight);saturation=clamp(saturation,0,100);lightness=clamp(lightness,0,100);this._updateHsl(this.colorComponents.hue,saturation,lightness);this._updateUI();}
onMouseDownSlider(ev){this.sliderFlag=true;ev.preventDefault();this.onMouseMoveSlider(ev);}
onMouseMoveSlider(ev){if(!this.sliderFlag){return;}
const colorSlider=this.colorSliderRef.el;const y=ev.pageY-colorSlider.getClientRects()[0].top;let hue=Math.round((360*y)/colorSlider.clientHeight);hue=clamp(hue,0,360);this._updateHsl(hue,this.colorComponents.saturation,this.colorComponents.lightness);this._updateUI();}
onMouseDownOpacitySlider(ev){this.opacitySliderFlag=true;ev.preventDefault();this.onMouseMoveOpacitySlider(ev);}
onMouseMoveOpacitySlider(ev){if(!this.opacitySliderFlag||this.props.noTransparency){return;}
const opacitySlider=this.opacitySliderRef.el;const y=ev.pageY-opacitySlider.getClientRects()[0].top;let opacity=Math.round(100*(1-y/opacitySlider.clientHeight));opacity=clamp(opacity,0,100);this._updateOpacity(opacity);this._updateUI();}
onChangeInputs(ev){switch(ev.target.dataset.colorMethod){case"hex":return;case"rgb":this._updateRgba(parseInt(this.el.querySelector(".o_red_input").value),parseInt(this.el.querySelector(".o_green_input").value),parseInt(this.el.querySelector(".o_blue_input").value));break;case"hsl":this._updateHsl(parseInt(this.el.querySelector(".o_hue_input").value),parseInt(this.el.querySelector(".o_saturation_input").value),parseInt(this.el.querySelector(".o_lightness_input").value));break;case"opacity":this._updateOpacity(parseInt(this.el.querySelector(".o_opacity_input").value));break;}
this._updateUI();this._colorSelected();}
onHexColorInput(ev){const hexColorValue=ev.target.value.replaceAll("#","");if(hexColorValue.length===6){this._updateHex(`#${hexColorValue}`);this._updateUI();this._colorSelected();}}}
return __exports;});;

/* /web/static/src/core/colors/colors.js */
odoo.define('@web/core/colors/colors',['@web/core/utils/numbers'],function(require){'use strict';let __exports={};const{clamp}=require("@web/core/utils/numbers");const COLORS_ENT_BRIGHT=["#875A7B","#A5D8D7","#DCD0D9"];const COLORS_ENT_DARK=["#6B3E66","#147875","#5A395A"];const COLORS_SM=["#4EA7F2","#EA6175","#43C5B1","#F4A261","#8481DD","#FFD86D",];const COLORS_MD=["#4EA7F2","#3188E6","#43C5B1","#00A78D","#EA6175","#CE4257","#F4A261","#F48935","#8481DD","#5752D1","#FFD86D","#FFBC2C",];const COLORS_LG=["#4EA7F2","#3188E6","#056BD9","#A76DBC","#7F4295","#6D2387","#EA6175","#CE4257","#982738","#43C5B1","#00A78D","#0E8270","#F4A261","#F48935","#BE5D10","#8481DD","#5752D1","#3A3580","#A4A8B6","#7E8290","#545B70","#FFD86D","#FFBC2C","#C08A16",];const COLORS_XL=["#4EA7F2","#3188E6","#056BD9","#155193","#A76DBC","#7F4295","#6D2387","#4F1565","#EA6175","#CE4257","#982738","#791B29","#43C5B1","#00A78D","#0E8270","#105F53","#F4A261","#F48935","#BE5D10","#7D380D","#8481DD","#5752D1","#3A3580","#26235F","#A4A8B6","#7E8290","#545B70","#3F4250","#FFD86D","#FFBC2C","#C08A16","#936A12",];__exports.getColors=getColors;function getColors(colorScheme,paletteName){switch(paletteName){case"odoo":return colorScheme==="dark"?COLORS_ENT_DARK:COLORS_ENT_BRIGHT;case"sm":return COLORS_SM;case"md":return COLORS_MD;case"lg":return COLORS_LG;default:return COLORS_XL;}}
__exports.getColor=getColor;function getColor(index,colorScheme,paletteSizeOrName){let paletteName;if(paletteSizeOrName==="odoo"){paletteName="odoo";}else if(paletteSizeOrName<=6||paletteSizeOrName==="sm"){paletteName="sm";}else if(paletteSizeOrName<=12||paletteSizeOrName==="md"){paletteName="md";}else if(paletteSizeOrName<=24||paletteSizeOrName==="lg"){paletteName="lg";}else{paletteName="xl";}
const colors=getColors(colorScheme,paletteName);return colors[index%colors.length];}
const DEFAULT_BG=__exports.DEFAULT_BG="#d3d3d3";__exports.getBorderWhite=getBorderWhite;function getBorderWhite(colorScheme){return colorScheme==="dark"?"rgba(38, 42, 54, .2)":"rgba(249,250,251, .2)";}
const RGB_REGEX=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i;__exports.hexToRGBA=hexToRGBA;function hexToRGBA(hex,opacity){const rgb=RGB_REGEX.exec(hex).slice(1,4).map((n)=>parseInt(n,16)).join(",");return`rgba(${rgb},${opacity})`;}
__exports.getCustomColor=getCustomColor;function getCustomColor(colorScheme,brightModeColor,darkModeColor){if(darkModeColor===undefined){return brightModeColor;}else{return colorScheme==="dark"?darkModeColor:brightModeColor;}}
__exports.lightenColor=lightenColor;function lightenColor(color,factor){factor=clamp(factor,0,1);let r=parseInt(color.substring(1,3),16);let g=parseInt(color.substring(3,5),16);let b=parseInt(color.substring(5,7),16);r=Math.round(r+(255-r)*factor);g=Math.round(g+(255-g)*factor);b=Math.round(b+(255-b)*factor);r=r.toString(16).padStart(2,"0");g=g.toString(16).padStart(2,"0");b=b.toString(16).padStart(2,"0");return`#${r}${g}${b}`;}
__exports.darkenColor=darkenColor;function darkenColor(color,factor){factor=clamp(factor,0,1);let r=parseInt(color.substring(1,3),16);let g=parseInt(color.substring(3,5),16);let b=parseInt(color.substring(5,7),16);r=Math.round(r*(1-factor));g=Math.round(g*(1-factor));b=Math.round(b*(1-factor));r=r.toString(16).padStart(2,"0");g=g.toString(16).padStart(2,"0");b=b.toString(16).padStart(2,"0");return`#${r}${g}${b}`;}
return __exports;});;

/* /web/static/src/core/commands/command_category.js */
odoo.define('@web/core/commands/command_category',['@web/core/registry'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const commandCategoryRegistry=registry.category("command_categories");commandCategoryRegistry.add("app",{},{sequence:10}).add("smart_action",{},{sequence:15}).add("actions",{},{sequence:30}).add("default",{},{sequence:50}).add("view_switcher",{},{sequence:100}).add("debug",{},{sequence:110}).add("disabled",{});return __exports;});;

/* /web/static/src/core/commands/command_hook.js */
odoo.define('@web/core/commands/command_hook',['@web/core/utils/hooks','@odoo/owl'],function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{useEffect}=require("@odoo/owl");__exports.useCommand=useCommand;function useCommand(name,action,options={}){const commandService=useService("command");useEffect(()=>commandService.add(name,action,options),()=>[]);}
return __exports;});;

/* /web/static/src/core/commands/command_palette.js */
odoo.define('@web/core/commands/command_palette',['@web/core/dialog/dialog','@web/core/hotkeys/hotkey_hook','@web/core/l10n/translation','@web/core/utils/concurrency','@web/core/utils/hooks','@web/core/utils/scrolling','@web/core/utils/search','@web/core/utils/timing','@web/core/browser/feature_detection','@web/core/utils/strings','@odoo/owl'],function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{useHotkey}=require("@web/core/hotkeys/hotkey_hook");const{_t}=require("@web/core/l10n/translation");const{KeepLast,Race}=require("@web/core/utils/concurrency");const{useAutofocus,useService}=require("@web/core/utils/hooks");const{scrollTo}=require("@web/core/utils/scrolling");const{fuzzyLookup}=require("@web/core/utils/search");const{debounce}=require("@web/core/utils/timing");const{isMacOS,isMobileOS}=require("@web/core/browser/feature_detection");const{escapeRegExp}=require("@web/core/utils/strings");const{Component,onWillStart,onWillDestroy,EventBus,useRef,useState,markRaw,useExternalListener,}=require("@odoo/owl");const DEFAULT_PLACEHOLDER=_t("Search...");const DEFAULT_EMPTY_MESSAGE=_t("No result found");const FUZZY_NAMESPACES=["default"];function commandsWithinCategory(categoryName,categories){return(cmd)=>{const inCurrentCategory=categoryName===cmd.category;const fallbackCategory=categoryName==="default"&&!categories.includes(cmd.category);return inCurrentCategory||fallbackCategory;};}
__exports.splitCommandName=splitCommandName;function splitCommandName(name,searchValue){if(name){const splitName=name.split(new RegExp(`(${escapeRegExp(searchValue)})`,"ig"));return searchValue.length&&splitName.length>1?splitName:[name];}
return[];}
const DefaultCommandItem=__exports.DefaultCommandItem=class DefaultCommandItem extends Component{static template="web.DefaultCommandItem";static props={slots:{type:Object,optional:true},hotkey:{type:String,optional:true},hotkeyOptions:{type:String,optional:true},name:{type:String,optional:true},searchValue:{type:String,optional:true},executeCommand:{type:Function,optional:true},};}
const CommandPalette=__exports.CommandPalette=class CommandPalette extends Component{static template="web.CommandPalette";static components={Dialog};static lastSessionId=0;static props={bus:{type:EventBus,optional:true},close:Function,config:Object,closeMe:{type:Function,optional:true},};setup(){if(this.props.bus){const setConfig=({detail})=>this.setCommandPaletteConfig(detail);this.props.bus.addEventListener(`SET-CONFIG`,setConfig);onWillDestroy(()=>this.props.bus.removeEventListener(`SET-CONFIG`,setConfig));}
this.keyId=1;this.race=new Race();this.keepLast=new KeepLast();this._sessionId=CommandPalette.lastSessionId++;this.DefaultCommandItem=DefaultCommandItem;this.activeElement=useService("ui").activeElement;this.inputRef=useAutofocus();useHotkey("Enter",()=>this.executeSelectedCommand(),{bypassEditableProtection:true});useHotkey("Control+Enter",()=>this.executeSelectedCommand(true),{bypassEditableProtection:true,});useHotkey("ArrowUp",()=>this.selectCommandAndScrollTo("PREV"),{bypassEditableProtection:true,allowRepeat:true,});useHotkey("ArrowDown",()=>this.selectCommandAndScrollTo("NEXT"),{bypassEditableProtection:true,allowRepeat:true,});useExternalListener(window,"mousedown",this.onWindowMouseDown);this.state=useState({});this.root=useRef("root");this.listboxRef=useRef("listbox");onWillStart(()=>this.setCommandPaletteConfig(this.props.config));}
get commandsByCategory(){const categories=[];for(const category of this.categoryKeys){const commands=this.state.commands.filter(commandsWithinCategory(category,this.categoryKeys));if(commands.length){categories.push({commands,name:this.categoryNames[category],keyId:category,});}}
return categories;}
async setCommandPaletteConfig(config){this.configByNamespace=config.configByNamespace||{};this.state.FooterComponent=config.FooterComponent;this.providersByNamespace={default:[]};for(const provider of config.providers){const namespace=provider.namespace||"default";if(namespace in this.providersByNamespace){this.providersByNamespace[namespace].push(provider);}else{this.providersByNamespace[namespace]=[provider];}}
const{namespace,searchValue}=this.processSearchValue(config.searchValue||"");this.switchNamespace(namespace);this.state.searchValue=searchValue;await this.race.add(this.search(searchValue));}
async setCommands(namespace,options={}){this.categoryKeys=["default"];this.categoryNames={};const proms=this.providersByNamespace[namespace].map((provider)=>{const{provide}=provider;const result=provide(this.env,options);return result;});let commands=(await this.keepLast.add(Promise.all(proms))).flat();const namespaceConfig=this.configByNamespace[namespace]||{};if(options.searchValue&&FUZZY_NAMESPACES.includes(namespace)){commands=fuzzyLookup(options.searchValue,commands,(c)=>c.name);}else{if(namespaceConfig.categories){let commandsSorted=[];this.categoryKeys=namespaceConfig.categories;this.categoryNames=namespaceConfig.categoryNames||{};if(!this.categoryKeys.includes("default")){this.categoryKeys.push("default");}
for(const category of this.categoryKeys){commandsSorted=commandsSorted.concat(commands.filter(commandsWithinCategory(category,this.categoryKeys)));}
commands=commandsSorted;}}
this.state.commands=markRaw(commands.slice(0,100).map((command)=>({...command,keyId:this.keyId++,splitName:splitCommandName(command.name,options.searchValue),})));this.selectCommand(this.state.commands.length?0:-1);this.mouseSelectionActive=false;this.state.emptyMessage=(namespaceConfig.emptyMessage||DEFAULT_EMPTY_MESSAGE).toString();}
selectCommand(index){if(index===-1||index>=this.state.commands.length){this.state.selectedCommand=null;return;}
this.state.selectedCommand=markRaw(this.state.commands[index]);}
selectCommandAndScrollTo(type){this.mouseSelectionActive=false;const index=this.state.commands.indexOf(this.state.selectedCommand);if(index===-1){return;}
let nextIndex;if(type==="NEXT"){nextIndex=index<this.state.commands.length-1?index+1:0;}else if(type==="PREV"){nextIndex=index>0?index-1:this.state.commands.length-1;}
this.selectCommand(nextIndex);const command=this.listboxRef.el.querySelector(`#o_command_${nextIndex}`);scrollTo(command,{scrollable:this.listboxRef.el});}
onCommandClicked(event,index){event.preventDefault();this.selectCommand(index);const ctrlKey=isMacOS()?event.metaKey:event.ctrlKey;this.executeSelectedCommand(ctrlKey);}
async executeCommand(command){const config=await command.action();if(config){this.setCommandPaletteConfig(config);}else{this.props.close();}}
async executeSelectedCommand(ctrlKey){await this.searchValuePromise;const selectedCommand=this.state.selectedCommand;if(selectedCommand){if(!ctrlKey){this.executeCommand(selectedCommand);}else if(selectedCommand.href){window.open(selectedCommand.href,"_blank");}}}
onCommandMouseEnter(index){if(this.mouseSelectionActive){this.selectCommand(index);}else{this.mouseSelectionActive=true;}}
async search(searchValue){this.state.isLoading=true;try{await this.setCommands(this.state.namespace,{searchValue,activeElement:this.activeElement,sessionId:this._sessionId,});}finally{this.state.isLoading=false;}
if(this.inputRef.el){this.inputRef.el.focus();}}
debounceSearch(value){const{namespace,searchValue}=this.processSearchValue(value);if(namespace!=="default"&&this.state.namespace!==namespace){this.switchNamespace(namespace);}
this.state.searchValue=searchValue;this.searchValuePromise=this.lastDebounceSearch(searchValue).catch(()=>{this.searchValuePromise=null;});}
onSearchInput(ev){this.debounceSearch(ev.target.value);}
onKeyDown(ev){if(ev.key.toLowerCase()==="backspace"&&!ev.target.value.length&&!ev.repeat){this.switchNamespace("default");this.state.searchValue="";this.searchValuePromise=this.lastDebounceSearch("").catch(()=>{this.searchValuePromise=null;});}}
onWindowMouseDown(ev){if(!this.root.el.contains(ev.target)){this.props.close();}}
switchNamespace(namespace){if(this.lastDebounceSearch){this.lastDebounceSearch.cancel();}
const namespaceConfig=this.configByNamespace[namespace]||{};this.lastDebounceSearch=debounce((value)=>this.search(value),namespaceConfig.debounceDelay||0);this.state.namespace=namespace;this.state.placeholder=namespaceConfig.placeholder||DEFAULT_PLACEHOLDER.toString();}
processSearchValue(searchValue){let namespace="default";if(searchValue.length&&this.providersByNamespace[searchValue[0]]){namespace=searchValue[0];searchValue=searchValue.slice(1);}
return{namespace,searchValue};}
get isMacOS(){return isMacOS();}
get isMobileOS(){return isMobileOS();}}
return __exports;});;

/* /web/static/src/core/commands/command_service.js */
odoo.define('@web/core/commands/command_service',['@web/core/registry','@web/core/commands/command_palette','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{CommandPalette}=require("@web/core/commands/command_palette");const{Component,EventBus}=require("@odoo/owl");const commandCategoryRegistry=registry.category("command_categories");const commandProviderRegistry=registry.category("command_provider");const commandSetupRegistry=registry.category("command_setup");class DefaultFooter extends Component{static template="web.DefaultFooter";static props={switchNamespace:{type:Function},};setup(){this.elements=commandSetupRegistry.getEntries().map((el)=>({namespace:el[0],name:el[1].name})).filter((el)=>el.name);}
onClick(namespace){this.props.switchNamespace(namespace);}}
const commandService=__exports.commandService={dependencies:["dialog","hotkey","ui"],start(env,{dialog,hotkey:hotkeyService,ui}){const registeredCommands=new Map();let nextToken=0;let isPaletteOpened=false;const bus=new EventBus();hotkeyService.add("control+k",openMainPalette,{bypassEditableProtection:true,global:true,});function openMainPalette(config={},onClose){const configByNamespace={};for(const provider of commandProviderRegistry.getAll()){const namespace=provider.namespace||"default";if(!configByNamespace[namespace]){configByNamespace[namespace]={categories:[],categoryNames:{},};}}
for(const[category,el]of commandCategoryRegistry.getEntries()){const namespace=el.namespace||"default";const name=el.name;if(namespace in configByNamespace){configByNamespace[namespace].categories.push(category);configByNamespace[namespace].categoryNames[category]=name;}}
for(const[namespace,{emptyMessage,debounceDelay,placeholder},]of commandSetupRegistry.getEntries()){if(namespace in configByNamespace){if(emptyMessage){configByNamespace[namespace].emptyMessage=emptyMessage;}
if(debounceDelay!==undefined){configByNamespace[namespace].debounceDelay=debounceDelay;}
if(placeholder){configByNamespace[namespace].placeholder=placeholder;}}}
config=Object.assign({configByNamespace,FooterComponent:DefaultFooter,providers:commandProviderRegistry.getAll(),},config);return openPalette(config,onClose);}
function openPalette(config,onClose){if(isPaletteOpened){bus.trigger("SET-CONFIG",config);return;}
isPaletteOpened=true;dialog.add(CommandPalette,{config,bus,},{onClose:()=>{isPaletteOpened=false;if(onClose){onClose();}},});}
function registerCommand(command,options){if(!command.name||!command.action||typeof command.action!=="function"){throw new Error("A Command must have a name and an action function.");}
const registration=Object.assign({},command,options);if(registration.identifier){const commandsArray=Array.from(registeredCommands.values());const sameName=commandsArray.find((com)=>com.name===registration.name);if(sameName){if(registration.identifier!==sameName.identifier){registration.name+=` (${registration.identifier})`;sameName.name+=` (${sameName.identifier})`;}}else{const sameFullName=commandsArray.find((com)=>com.name===registration.name+`(${registration.identifier})`);if(sameFullName){registration.name+=` (${registration.identifier})`;}}}
if(registration.hotkey){const action=async()=>{const commandService=env.services.command;const config=await command.action();if(!isPaletteOpened&&config){commandService.openPalette(config);}};registration.removeHotkey=hotkeyService.add(registration.hotkey,action,{...options.hotkeyOptions,global:registration.global,isAvailable:(...args)=>{let available=true;if(registration.isAvailable){available=registration.isAvailable(...args);}
if(available&&options.hotkeyOptions?.isAvailable){available=options.hotkeyOptions?.isAvailable(...args);}
return available;},});}
const token=nextToken++;registeredCommands.set(token,registration);if(!options.activeElement){Promise.resolve().then(()=>{registration.activeElement=ui.activeElement;});}
return token;}
function unregisterCommand(token){const cmd=registeredCommands.get(token);if(cmd&&cmd.removeHotkey){cmd.removeHotkey();}
registeredCommands.delete(token);}
return{add(name,action,options={}){const token=registerCommand({name,action},options);return()=>{unregisterCommand(token);};},getCommands(activeElement){return[...registeredCommands.values()].filter((command)=>command.activeElement===activeElement||command.global);},openMainPalette,openPalette,};},};registry.category("services").add("command",commandService);return __exports;});;

/* /web/static/src/core/commands/default_providers.js */
odoo.define('@web/core/commands/default_providers',['@web/core/browser/feature_detection','@web/core/hotkeys/hotkey_hook','@web/core/l10n/translation','@web/core/registry','@web/core/utils/strings','@web/core/utils/ui','@web/core/commands/command_palette','@odoo/owl'],function(require){'use strict';let __exports={};const{isMacOS}=require("@web/core/browser/feature_detection");const{useHotkey}=require("@web/core/hotkeys/hotkey_hook");const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{capitalize}=require("@web/core/utils/strings");const{getVisibleElements}=require("@web/core/utils/ui");const{DefaultCommandItem}=require("@web/core/commands/command_palette");const{Component}=require("@odoo/owl");const commandSetupRegistry=registry.category("command_setup");commandSetupRegistry.add("default",{emptyMessage:_t("No command found"),placeholder:_t("Search for a command..."),});const HotkeyCommandItem=__exports.HotkeyCommandItem=class HotkeyCommandItem extends Component{static template="web.HotkeyCommandItem";static props=["hotkey","hotkeyOptions?","name?","searchValue?","executeCommand","slots"];setup(){useHotkey(this.props.hotkey,this.props.executeCommand);}
getKeysToPress(command){const{hotkey}=command;let result=hotkey.split("+");if(isMacOS()){result=result.map((x)=>x.replace("control","command")).map((x)=>x.replace("alt","control"));}
return result.map((key)=>key.toUpperCase());}}
const commandCategoryRegistry=registry.category("command_categories");const commandProviderRegistry=registry.category("command_provider");commandProviderRegistry.add("command",{provide:(env,options={})=>{const commands=env.services.command.getCommands(options.activeElement).map((cmd)=>{cmd.category=commandCategoryRegistry.contains(cmd.category)?cmd.category:"default";return cmd;}).filter((command)=>command.isAvailable===undefined||command.isAvailable());const uniqueCommands=commands.filter((obj,index)=>{return(index===commands.findIndex((o)=>obj.name===o.name&&obj.category===o.category));});return uniqueCommands.map((command)=>({Component:command.hotkey?HotkeyCommandItem:DefaultCommandItem,action:command.action,category:command.category,name:command.name,props:{hotkey:command.hotkey,hotkeyOptions:command.hotkeyOptions,},}));},});commandProviderRegistry.add("data-hotkeys",{provide:(env,options={})=>{const commands=[];const overlayModifier=registry.category("services").get("hotkey").overlayModifier;for(const el of getVisibleElements(options.activeElement,"[data-hotkey]:not(:disabled)")){const closest=el.closest("[data-command-category]");const category=closest?closest.dataset.commandCategory:"default";if(category==="disabled"){continue;}
const description=el.title||el.dataset.bsOriginalTitle||el.dataset.tooltip||el.placeholder||(el.innerText&&`${el.innerText.slice(0, 50)}${el.innerText.length > 50 ? "..." : ""}`)||_t("no description provided");commands.push({Component:HotkeyCommandItem,action:()=>{el.focus();el.click();},category,name:capitalize(description.trim().toLowerCase()),props:{hotkey:`${overlayModifier}+${el.dataset.hotkey}`,},});}
return commands;},});return __exports;});;

/* /web/static/src/core/confirmation_dialog/confirmation_dialog.js */
odoo.define('@web/core/confirmation_dialog/confirmation_dialog',['@web/core/dialog/dialog','@web/core/l10n/translation','@web/core/utils/hooks','@odoo/owl'],function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{_t}=require("@web/core/l10n/translation");const{useChildRef}=require("@web/core/utils/hooks");const{Component}=require("@odoo/owl");const deleteConfirmationMessage=__exports.deleteConfirmationMessage=_t(`Ready to make your record disappear into thin air? Are you sure?
It will be gone forever!

Think twice before you click that 'Delete' button!`);const ConfirmationDialog=__exports.ConfirmationDialog=class ConfirmationDialog extends Component{static template="web.ConfirmationDialog";static components={Dialog};static props={close:Function,title:{validate:(m)=>{return(typeof m==="string"||(typeof m==="object"&&typeof m.toString==="function"));},optional:true,},body:{type:String,optional:true},confirm:{type:Function,optional:true},confirmLabel:{type:String,optional:true},confirmClass:{type:String,optional:true},cancel:{type:Function,optional:true},cancelLabel:{type:String,optional:true},dismiss:{type:Function,optional:true},};static defaultProps={confirmLabel:_t("Ok"),cancelLabel:_t("Cancel"),confirmClass:"btn-primary",title:_t("Confirmation"),};setup(){this.env.dialogData.dismiss=()=>this._dismiss();this.modalRef=useChildRef();this.isProcess=false;}
async _cancel(){return this.execButton(this.props.cancel);}
async _confirm(){return this.execButton(this.props.confirm);}
async _dismiss(){return this.execButton(this.props.dismiss||this.props.cancel);}
setButtonsDisabled(disabled){this.isProcess=disabled;if(!this.modalRef.el){return;}
for(const button of[...this.modalRef.el.querySelectorAll(".modal-footer button")]){button.disabled=disabled;}}
async execButton(callback){if(this.isProcess){return;}
this.setButtonsDisabled(true);if(callback){let shouldClose;try{shouldClose=await callback();}catch(e){this.props.close();throw e;}
if(shouldClose===false){this.setButtonsDisabled(false);return;}}
this.props.close();}}
const AlertDialog=__exports.AlertDialog=class AlertDialog extends ConfirmationDialog{static template="web.AlertDialog";static props={...ConfirmationDialog.props,contentClass:{type:String,optional:true},};static defaultProps={...ConfirmationDialog.defaultProps,title:_t("Alert"),};}
return __exports;});;

/* /web/static/src/core/context.js */
odoo.define('@web/core/context',['@web/core/py_js/py','@web/core/py_js/py_builtin','@web/core/py_js/py_interpreter'],function(require){'use strict';let __exports={};const{evaluateExpr,parseExpr}=require("@web/core/py_js/py");const{BUILTINS}=require("@web/core/py_js/py_builtin");const{evaluate}=require("@web/core/py_js/py_interpreter");__exports.makeContext=makeContext;function makeContext(contexts,initialEvaluationContext){const evaluationContext=Object.assign({},initialEvaluationContext);const context={};for(let ctx of contexts){if(ctx!==""){ctx=typeof ctx==="string"?evaluateExpr(ctx,evaluationContext):ctx;Object.assign(context,ctx);Object.assign(evaluationContext,context);}}
return context;}
function getPartialNames(ast){if(ast.type===5){return[ast.value];}
if(ast.type===6){return getPartialNames(ast.right);}
if(ast.type===14||ast.type===7){return getPartialNames(ast.left).concat(getPartialNames(ast.right));}
if(ast.type===15){return getPartialNames(ast.obj);}
return[];}
__exports.evalPartialContext=evalPartialContext;function evalPartialContext(_context,evaluationContext={}){const ast=parseExpr(_context);const context={};for(const key in ast.value){const value=ast.value[key];if(getPartialNames(value).some((name)=>!(name in evaluationContext||name in BUILTINS))){continue;}
try{context[key]=evaluate(value,evaluationContext);}catch{}}
return context;}
return __exports;});;

/* /web/static/src/core/copy_button/copy_button.js */
odoo.define('@web/core/copy_button/copy_button',['@web/core/browser/browser','@web/core/tooltip/tooltip','@web/core/popover/popover_hook','@odoo/owl'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{Tooltip}=require("@web/core/tooltip/tooltip");const{usePopover}=require("@web/core/popover/popover_hook");const{Component,useRef}=require("@odoo/owl");const CopyButton=__exports.CopyButton=class CopyButton extends Component{static template="web.CopyButton";static props={className:{type:String,optional:true},copyText:{type:String,optional:true},disabled:{type:Boolean,optional:true},successText:{type:String,optional:true},icon:{type:String,optional:true},content:{type:[String,Object],optional:true},};setup(){this.button=useRef("button");this.popover=usePopover(Tooltip);}
showTooltip(){this.popover.open(this.button.el,{tooltip:this.props.successText});browser.setTimeout(this.popover.close,800);}
async onClick(){let write;if(typeof this.props.content==="string"||this.props.content instanceof String){write=(value)=>browser.navigator.clipboard.writeText(value);}else{write=(value)=>browser.navigator.clipboard.write(value);}
try{await write(this.props.content);}catch(error){return browser.console.warn(error);}
this.showTooltip();}}
return __exports;});;

/* /web/static/src/core/currency.js */
odoo.define('@web/core/currency',['@web/core/utils/numbers','@web/session','@web/core/utils/strings'],function(require){'use strict';let __exports={};const{formatFloat,humanNumber}=require("@web/core/utils/numbers");const{session}=require("@web/session");const{nbsp}=require("@web/core/utils/strings");const currencies=__exports.currencies=session.currencies||{};delete session.currencies;__exports.getCurrency=getCurrency;function getCurrency(id){return currencies[id];}
__exports.formatCurrency=formatCurrency;function formatCurrency(amount,currencyId,options={}){const currency=getCurrency(currencyId);const digits=options.digits||(currency&&currency.digits);let formattedAmount;if(options.humanReadable){formattedAmount=humanNumber(amount,{decimals:digits?digits[1]:2});}else{formattedAmount=formatFloat(amount,{digits});}
if(!currency||options.noSymbol){return formattedAmount;}
const formatted=[currency.symbol,formattedAmount];if(currency.position==="after"){formatted.reverse();}
return formatted.join(nbsp);}
return __exports;});;

/* /web/static/src/core/datetime/datetime_hook.js */
odoo.define('@web/core/datetime/datetime_hook',['@odoo/owl','@web/core/popover/popover_hook','@web/core/utils/hooks'],function(require){'use strict';let __exports={};const{onPatched,onWillRender,useEffect,useRef}=require("@odoo/owl");const{usePopover}=require("@web/core/popover/popover_hook");const{useService}=require("@web/core/utils/hooks");__exports.useDateTimePicker=useDateTimePicker;function useDateTimePicker(hookParams){const datetimePicker=useService("datetime_picker");if(typeof hookParams.target==="string"){const target=useRef(hookParams.target);Object.defineProperty(hookParams,"target",{get(){return target.el;},});}
const inputRefs=[useRef("start-date"),useRef("end-date")];const createPopover=hookParams.createPopover??usePopover;const getInputs=()=>inputRefs.map((ref)=>ref?.el);const{computeBasePickerProps,state,open,focusIfNeeded,enable}=datetimePicker.create(hookParams,getInputs,createPopover);onWillRender(computeBasePickerProps);useEffect(enable,getInputs);onPatched(focusIfNeeded);return{state,open};}
return __exports;});;

/* /web/static/src/core/datetime/datetime_input.js */
odoo.define('@web/core/datetime/datetime_input',['@odoo/owl','@web/core/utils/objects','@web/core/datetime/datetime_hook','@web/core/datetime/datetime_picker'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{omit}=require("@web/core/utils/objects");const{useDateTimePicker}=require("@web/core/datetime/datetime_hook");const{DateTimePicker}=require("@web/core/datetime/datetime_picker");const dateTimeInputOwnProps={format:{type:String,optional:true},id:{type:String,optional:true},onChange:{type:Function,optional:true},onApply:{type:Function,optional:true},placeholder:{type:String,optional:true},};const DateTimeInput=__exports.DateTimeInput=class DateTimeInput extends Component{static props={...DateTimePicker.props,...dateTimeInputOwnProps,};static template="web.DateTimeInput";setup(){const getPickerProps=()=>omit(this.props,...Object.keys(dateTimeInputOwnProps));useDateTimePicker({format:this.props.format,get pickerProps(){return getPickerProps();},onApply:(...args)=>this.props.onApply?.(...args),onChange:(...args)=>this.props.onChange?.(...args),});}}
return __exports;});;

/* /web/static/src/core/datetime/datetime_picker.js */
odoo.define('@web/core/datetime/datetime_picker',['@odoo/owl','@web/core/l10n/translation','@web/core/l10n/dates','@web/core/l10n/localization','@web/core/utils/arrays'],function(require){'use strict';let __exports={};const{Component,onWillRender,onWillUpdateProps,useState}=require("@odoo/owl");const{_t}=require("@web/core/l10n/translation");const{MAX_VALID_DATE,MIN_VALID_DATE,clampDate,is24HourFormat,isInRange,isMeridiemFormat,today,}=require("@web/core/l10n/dates");const{localization}=require("@web/core/l10n/localization");const{ensureArray}=require("@web/core/utils/arrays");const{DateTime,Info}=luxon;const getStartOfDecade=(date)=>Math.floor(date.year/10)*10;const getStartOfCentury=(date)=>Math.floor(date.year/100)*100;const getStartOfWeek=(date)=>{const{weekStart}=localization;return date.set({weekday:date.weekday<weekStart?weekStart-7:weekStart});};const numberRange=(min,max)=>[...Array(max-min)].map((_,i)=>i+min);const parseLimitDate=(value,defaultValue)=>clampDate(value==="today"?today():value||defaultValue,MIN_VALID_DATE,MAX_VALID_DATE);const toDateItem=({isOutOfRange=false,isValid=true,label,range,extraClass})=>({id:range[0].toISODate(),includesToday:isInRange(today(),range),isOutOfRange,isValid,label:String(range[0][label]),range,extraClass,});const toWeekItem=(weekDayItems)=>({number:weekDayItems[3].range[0].weekNumber,days:weekDayItems,});const HOURS=numberRange(0,24).map((hour)=>[hour,String(hour)]);const MINUTES=numberRange(0,60).map((minute)=>[minute,String(minute||0).padStart(2,"0")]);const SECONDS=[...MINUTES];const MERIDIEMS=["AM","PM"];const PRECISION_LEVELS=new Map().set("days",{mainTitle:_t("Select month"),nextTitle:_t("Next month"),prevTitle:_t("Previous month"),step:{month:1},getTitle:(date,{additionalMonth})=>{const titles=[`${date.monthLong} ${date.year}`];if(additionalMonth){const next=date.plus({month:1});titles.push(`${next.monthLong} ${next.year}`);}
return titles;},getItems:(date,{additionalMonth,maxDate,minDate,showWeekNumbers,isDateValid,dayCellClass})=>{const startDates=[date];if(additionalMonth){startDates.push(date.plus({month:1}));}
const lastWeeks=[];let shouldAddLastWeek=false;const dayItems=startDates.map((date,i)=>{const monthRange=[date.startOf("month"),date.endOf("month")];const weeks=[];let startOfNextWeek=getStartOfWeek(monthRange[0]);for(let w=0;w<WEEKS_PER_MONTH;w++){const weekDayItems=[];for(let d=0;d<DAYS_PER_WEEK;d++){const day=startOfNextWeek.plus({day:d});const range=[day,day.endOf("day")];const dayItem=toDateItem({isOutOfRange:!isInRange(day,monthRange),isValid:isInRange(range,[minDate,maxDate])&&isDateValid?.(day),label:"day",range,extraClass:dayCellClass?.(day)||"",});weekDayItems.push(dayItem);if(d===DAYS_PER_WEEK-1){startOfNextWeek=day.plus({day:1});}
if(w===WEEKS_PER_MONTH-1){shouldAddLastWeek||=!dayItem.isOutOfRange;}}
const weekItem=toWeekItem(weekDayItems);if(w===WEEKS_PER_MONTH-1){lastWeeks.push(weekItem);}else{weeks.push(weekItem);}}
const daysOfWeek=weeks[0].days.map((d)=>[d.range[0].weekdayShort,d.range[0].weekdayLong,Info.weekdays("narrow",{locale:d.range[0].locale})[d.range[0].weekday-1],]);if(showWeekNumbers){daysOfWeek.unshift(["#",_t("Week numbers"),"#"]);}
return{id:`__month__${i}`,number:monthRange[0].month,daysOfWeek,weeks,};});if(shouldAddLastWeek){for(let i=0;i<dayItems.length;i++){dayItems[i].weeks.push(lastWeeks[i]);}}
return dayItems;},}).set("months",{mainTitle:_t("Select year"),nextTitle:_t("Next year"),prevTitle:_t("Previous year"),step:{year:1},getTitle:(date)=>String(date.year),getItems:(date,{maxDate,minDate})=>{const startOfYear=date.startOf("year");return numberRange(0,12).map((i)=>{const startOfMonth=startOfYear.plus({month:i});const range=[startOfMonth,startOfMonth.endOf("month")];return toDateItem({isValid:isInRange(range,[minDate,maxDate]),label:"monthShort",range,});});},}).set("years",{mainTitle:_t("Select decade"),nextTitle:_t("Next decade"),prevTitle:_t("Previous decade"),step:{year:10},getTitle:(date)=>`${getStartOfDecade(date) - 1} - ${getStartOfDecade(date) + 10}`,getItems:(date,{maxDate,minDate})=>{const startOfDecade=date.startOf("year").set({year:getStartOfDecade(date)});return numberRange(-GRID_MARGIN,GRID_COUNT+GRID_MARGIN).map((i)=>{const startOfYear=startOfDecade.plus({year:i});const range=[startOfYear,startOfYear.endOf("year")];return toDateItem({isOutOfRange:i<0||i>=GRID_COUNT,isValid:isInRange(range,[minDate,maxDate]),label:"year",range,});});},}).set("decades",{mainTitle:_t("Select century"),nextTitle:_t("Next century"),prevTitle:_t("Previous century"),step:{year:100},getTitle:(date)=>`${getStartOfCentury(date) - 10} - ${getStartOfCentury(date) + 100}`,getItems:(date,{maxDate,minDate})=>{const startOfCentury=date.startOf("year").set({year:getStartOfCentury(date)});return numberRange(-GRID_MARGIN,GRID_COUNT+GRID_MARGIN).map((i)=>{const startOfDecade=startOfCentury.plus({year:i*10});const range=[startOfDecade,startOfDecade.plus({year:10,millisecond:-1})];return toDateItem({label:"year",isOutOfRange:i<0||i>=GRID_COUNT,isValid:isInRange(range,[minDate,maxDate]),range,});});},});const GRID_COUNT=10;const GRID_MARGIN=1;const NULLABLE_DATETIME_PROPERTY=[DateTime,{value:false},{value:null}];const DAYS_PER_WEEK=7;const WEEKS_PER_MONTH=6;const DateTimePicker=__exports.DateTimePicker=class DateTimePicker extends Component{static props={focusedDateIndex:{type:Number,optional:true},showWeekNumbers:{type:Boolean,optional:true},daysOfWeekFormat:{type:String,optional:true},maxDate:{type:[NULLABLE_DATETIME_PROPERTY,{value:"today"}],optional:true},maxPrecision:{type:[...PRECISION_LEVELS.keys()].map((value)=>({value})),optional:true,},minDate:{type:[NULLABLE_DATETIME_PROPERTY,{value:"today"}],optional:true},minPrecision:{type:[...PRECISION_LEVELS.keys()].map((value)=>({value})),optional:true,},onSelect:{type:Function,optional:true},range:{type:Boolean,optional:true},rounding:{type:Number,optional:true},slots:{type:Object,shape:{bottom_left:{type:Object,optional:true},buttons:{type:Object,optional:true},},optional:true,},type:{type:[{value:"date"},{value:"datetime"}],optional:true},value:{type:[NULLABLE_DATETIME_PROPERTY,{type:Array,element:NULLABLE_DATETIME_PROPERTY},],optional:true,},isDateValid:{type:Function,optional:true},dayCellClass:{type:Function,optional:true},tz:{type:String,optional:true},};static defaultProps={focusedDateIndex:0,daysOfWeekFormat:"short",maxPrecision:"decades",minPrecision:"days",rounding:5,type:"datetime",};static template="web.DateTimePicker";get activePrecisionLevel(){return PRECISION_LEVELS.get(this.state.precision);}
get isLastPrecisionLevel(){return(this.allowedPrecisionLevels.indexOf(this.state.precision)===this.allowedPrecisionLevels.length-1);}
get titles(){return ensureArray(this.title);}
setup(){this.availableHours=HOURS;this.availableMinutes=MINUTES;this.allowedPrecisionLevels=[];this.items=[];this.title="";this.shouldAdjustFocusDate=false;this.state=useState({focusDate:null,hoveredDate:null,timeValues:[],precision:this.props.minPrecision,});this.onPropsUpdated(this.props);onWillUpdateProps((nextProps)=>this.onPropsUpdated(nextProps));onWillRender(()=>this.onWillRender());}
onPropsUpdated(props){this.values=ensureArray(props.value).map((value)=>value&&!value.isValid?null:value);this.availableHours=HOURS;this.availableMinutes=MINUTES.filter((minute)=>!(minute[0]%props.rounding));this.availableSeconds=props.rounding?[]:SECONDS;this.allowedPrecisionLevels=this.filterPrecisionLevels(props.minPrecision,props.maxPrecision);this.additionalMonth=props.range&&!this.env.isSmall;this.maxDate=parseLimitDate(props.maxDate,MAX_VALID_DATE);this.minDate=parseLimitDate(props.minDate,MIN_VALID_DATE);if(this.props.type==="date"){this.maxDate=this.maxDate.endOf("day");this.minDate=this.minDate.startOf("day");}
if(this.maxDate<this.minDate){throw new Error(`DateTimePicker error: given "maxDate" comes before "minDate".`);}
const timeValues=this.values.map((val,index)=>[index===1&&!this.values[1]?(val||DateTime.local()).hour+1:(val||DateTime.local()).hour,val?.minute||0,val?.second||0,]);if(props.range){this.state.timeValues=timeValues;}else{this.state.timeValues=[];this.state.timeValues[props.focusedDateIndex]=timeValues[props.focusedDateIndex];}
this.shouldAdjustFocusDate=!props.range;this.adjustFocus(this.values,props.focusedDateIndex);this.handle12HourSystem();this.state.timeValues=this.state.timeValues.map((timeValue)=>timeValue.map(String));}
onWillRender(){const{dayCellClass,focusedDateIndex,isDateValid,range,showWeekNumbers}=this.props;const{focusDate,hoveredDate}=this.state;const precision=this.activePrecisionLevel;const getterParams={additionalMonth:this.additionalMonth,maxDate:this.maxDate,minDate:this.minDate,showWeekNumbers:showWeekNumbers??!range,isDateValid,dayCellClass,};this.title=precision.getTitle(focusDate,getterParams);this.items=precision.getItems(focusDate,getterParams);this.selectedRange=[...this.values];if(range&&focusedDateIndex>0&&(!this.values[1]||hoveredDate>this.values[0])){this.selectedRange[1]=hoveredDate;}}
adjustFocus(values,focusedDateIndex){if(!this.shouldAdjustFocusDate&&this.state.focusDate){return;}
let dateToFocus=values[focusedDateIndex]||values[focusedDateIndex===1?0:1]||today();if(this.additionalMonth&&focusedDateIndex===1&&values[0]&&values[1]&&values[0].month!==values[1].month){dateToFocus=dateToFocus.minus({month:1});}
this.shouldAdjustFocusDate=false;this.state.focusDate=this.clamp(dateToFocus.startOf("month"));}
clamp(value){return clampDate(value,this.minDate,this.maxDate);}
filterPrecisionLevels(minPrecision,maxPrecision){const levels=[...PRECISION_LEVELS.keys()];return levels.slice(levels.indexOf(minPrecision),levels.indexOf(maxPrecision)+1);}
getActiveRangeInfo({isOutOfRange,range}){const result={isSelected:!isOutOfRange&&isInRange(this.selectedRange,range),isSelectStart:false,isSelectEnd:false,isHighlighted:isInRange(this.state.hoveredDate,range),isCurrent:false,};if(this.props.range){if(result.isSelected){const[selectStart,selectEnd]=this.selectedRange;result.isSelectStart=!selectStart||isInRange(selectStart,range);result.isSelectEnd=!selectEnd||isInRange(selectEnd,range);}
result.isCurrent=!isOutOfRange&&(isInRange(this.values[0],range)||isInRange(this.values[1],range));}else{result.isSelectStart=result.isSelectEnd=result.isSelected;}
return result;}
getTimeValues(valueIndex){let[hour,minute,second]=this.state.timeValues[valueIndex].map(Number);if(this.is12HourFormat&&this.meridiems&&this.state.timeValues[valueIndex][3]==="PM"){hour+=12;}
return[hour,minute,second];}
handle12HourSystem(){if(isMeridiemFormat()){this.meridiems=MERIDIEMS.map((m)=>[m,m]);for(const timeValues of this.state.timeValues){if(timeValues){timeValues.push(MERIDIEMS[Math.floor(timeValues[0]/12)||0]);}}}
this.is12HourFormat=!is24HourFormat();if(this.is12HourFormat){this.availableHours=[[0,HOURS[12][1]],...HOURS.slice(1,12)];for(const timeValues of this.state.timeValues){if(timeValues){timeValues[0]%=12;}}}}
isSelectedDate({range}){return this.values.some((value)=>isInRange(value,range));}
next(ev){ev.preventDefault();const{step}=this.activePrecisionLevel;this.state.focusDate=this.clamp(this.state.focusDate.plus(step));}
previous(ev){ev.preventDefault();const{step}=this.activePrecisionLevel;this.state.focusDate=this.clamp(this.state.focusDate.minus(step));}
selectTime(valueIndex){const value=this.values[valueIndex]||today();this.validateAndSelect(value,valueIndex,"time");}
validateAndSelect(value,valueIndex,unit){if(!this.props.onSelect){return false;}
const result=[...this.values];result[valueIndex]=value;if(this.props.type==="datetime"){const[hour,minute,second]=this.getTimeValues(valueIndex);result[valueIndex]=result[valueIndex].set({hour,minute,second});}
if(!isInRange(result[valueIndex],[this.minDate,this.maxDate])){return false;}
this.props.onSelect(result.length===2?result:result[0],unit);return true;}
zoomIn(date){const index=this.allowedPrecisionLevels.indexOf(this.state.precision)-1;if(index in this.allowedPrecisionLevels){this.state.focusDate=this.clamp(date);this.state.precision=this.allowedPrecisionLevels[index];return true;}
return false;}
zoomOut(){const index=this.allowedPrecisionLevels.indexOf(this.state.precision)+1;if(index in this.allowedPrecisionLevels){this.state.precision=this.allowedPrecisionLevels[index];return true;}
return false;}
zoomOrSelect(dateItem){if(!dateItem.isValid){return;}
if(this.zoomIn(dateItem.range[0])){return;}
const[value]=dateItem.range;const valueIndex=this.props.focusedDateIndex;const isValid=this.validateAndSelect(value,valueIndex,"date");this.shouldAdjustFocusDate=isValid&&!this.props.range;}}
return __exports;});;

/* /web/static/src/core/datetime/datetime_picker_popover.js */
odoo.define('@web/core/datetime/datetime_picker_popover',['@odoo/owl','@web/core/hotkeys/hotkey_hook','@web/core/datetime/datetime_picker'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{useHotkey}=require("@web/core/hotkeys/hotkey_hook");const{DateTimePicker}=require("@web/core/datetime/datetime_picker");const DateTimePickerPopover=__exports.DateTimePickerPopover=class DateTimePickerPopover extends Component{static components={DateTimePicker};static props={close:Function,pickerProps:{type:Object,shape:DateTimePicker.props},};static template="web.DateTimePickerPopover";get isDateTimeRange(){return(this.props.pickerProps.type==="datetime"||Array.isArray(this.props.pickerProps.value));}
setup(){useHotkey("enter",()=>this.props.close());}}
return __exports;});;

/* /web/static/src/core/datetime/datetimepicker_service.js */
odoo.define('@web/core/datetime/datetimepicker_service',['@odoo/owl','@web/core/l10n/dates','@web/core/popover/popover_hook','@web/core/registry','@web/core/utils/arrays','@web/core/utils/objects','@web/core/datetime/datetime_picker','@web/core/datetime/datetime_picker_popover'],function(require){'use strict';let __exports={};const{markRaw,reactive}=require("@odoo/owl");const{areDatesEqual,formatDate,formatDateTime,parseDate,parseDateTime}=require("@web/core/l10n/dates");const{makePopover}=require("@web/core/popover/popover_hook");const{registry}=require("@web/core/registry");const{ensureArray,zip,zipWith}=require("@web/core/utils/arrays");const{deepCopy,shallowEqual}=require("@web/core/utils/objects");const{DateTimePicker}=require("@web/core/datetime/datetime_picker");const{DateTimePickerPopover}=require("@web/core/datetime/datetime_picker_popover");const arePropsEqual=(obj1,obj2)=>shallowEqual(obj1,obj2,(a,b)=>areDatesEqual(a,b)||shallowEqual(a,b));const FOCUS_CLASSNAME="text-primary";const formatters={date:formatDate,datetime:formatDateTime,};const listenedElements=new WeakSet();const parsers={date:parseDate,datetime:parseDateTime,};const datetimePickerService=__exports.datetimePickerService={dependencies:["popover"],start(env,{popover:popoverService}){return{create:(hookParams,getInputs=()=>[hookParams.target,null])=>{const createPopover=hookParams.createPopover??((...args)=>makePopover(popoverService.add,...args));const ensureVisibility=hookParams.ensureVisibility??(()=>env.isSmall);const popover=createPopover(DateTimePickerPopover,{onClose:()=>{if(!allowOnClose){return;}
updateValueFromInputs();apply();setFocusClass(null);if(restoreTargetMargin){restoreTargetMargin();restoreTargetMargin=null;}},});const apply=()=>{const valueCopy=deepCopy(pickerProps.value);if(areDatesEqual(lastAppliedValue,valueCopy)){return;}
inputsChanged=ensureArray(pickerProps.value).map(()=>false);hookParams.onApply?.(pickerProps.value);lastAppliedValue=valueCopy;};const computeBasePickerProps=()=>{const nextInitialProps=markValuesRaw(hookParams.pickerProps);const propsCopy=deepCopy(nextInitialProps);if(lastInitialProps&&arePropsEqual(lastInitialProps,propsCopy)){return;}
lastInitialProps=propsCopy;lastAppliedValue=propsCopy.value;inputsChanged=ensureArray(lastInitialProps.value).map(()=>false);for(const[key,value]of Object.entries(nextInitialProps)){if(pickerProps[key]!==value&&!areDatesEqual(pickerProps[key],value)){pickerProps[key]=value;}}};const focusActiveInput=()=>{const inputEl=getInput(pickerProps.focusedDateIndex);if(!inputEl){shouldFocus=true;return;}
const{activeElement}=inputEl.ownerDocument;if(activeElement!==inputEl){inputEl.focus();}
setInputFocus(inputEl);};const getInput=(valueIndex)=>{const el=getInputs()[valueIndex];if(el&&document.body.contains(el)){return el;}
return null;};const getPopoverTarget=()=>{if(hookParams.target){return hookParams.target;}
if(pickerProps.range){let parentElement=getInput(0).parentElement;const inputEls=getInputs();while(parentElement&&!inputEls.every((inputEl)=>parentElement.contains(inputEl))){parentElement=parentElement.parentElement;}
return parentElement||getInput(0);}else{return getInput(0);}};const markValuesRaw=(obj)=>{const copy={};for(const[key,value]of Object.entries(obj)){if(value&&typeof value==="object"){copy[key]=markRaw(value);}else{copy[key]=value;}}
return copy;};const onInputChange=(ev)=>{updateValueFromInputs();inputsChanged[ev.target===getInput(1)?1:0]=true;if(!popover.isOpen||inputsChanged.every(Boolean)){saveAndClose();}};const onInputClick=({target})=>{openPicker(target===getInput(1)?1:0);};const onInputFocus=({target})=>{pickerProps.focusedDateIndex=target===getInput(1)?1:0;setInputFocus(target);};const onInputKeydown=(ev)=>{if(ev.key=="Enter"&&ev.ctrlKey){ev.preventDefault();updateValueFromInputs();return openPicker(ev.target===getInput(1)?1:0);}
switch(ev.key){case"Enter":case"Escape":{return saveAndClose();}
case"Tab":{if(!getInput(0)||!getInput(1)||ev.target!==getInput(ev.shiftKey?1:0)){return saveAndClose();}}}};const openPicker=(inputIndex)=>{pickerProps.focusedDateIndex=inputIndex;if(!popover.isOpen){const popoverTarget=getPopoverTarget();if(ensureVisibility()){const{marginBottom}=popoverTarget.style;popoverTarget.style.marginBottom=`100vh`;popoverTarget.scrollIntoView(true);restoreTargetMargin=async()=>{popoverTarget.style.marginBottom=marginBottom;};}
popover.open(popoverTarget,{pickerProps});}
focusActiveInput();};const safeConvert=(operation,value)=>{const{type}=pickerProps;const convertFn=(operation==="format"?formatters:parsers)[type];const options={tz:pickerProps.tz,format:hookParams.format};if(operation==="format"){options.showSeconds=hookParams.showSeconds??true;options.condensed=hookParams.condensed||false;}
try{return[convertFn(value,options),null];}catch(error){if(error?.name==="ConversionError"){return[null,error];}else{throw error;}}};const saveAndClose=()=>{if(popover.isOpen){popover.close();}else{apply();}};const setFocusClass=(input)=>{for(const el of getInputs()){if(el){el.classList.toggle(FOCUS_CLASSNAME,popover.isOpen&&el===input);}}};const setInputFocus=(inputEl)=>{inputEl.selectionStart=0;inputEl.selectionEnd=inputEl.value.length;setFocusClass(inputEl);shouldFocus=false;};const updateInput=(el,value)=>{if(!el){return;}
const[formattedValue]=safeConvert("format",value);el.value=formattedValue||"";};const updateValue=(value,unit,source)=>{const previousValue=pickerProps.value;pickerProps.value=value;if(areDatesEqual(previousValue,pickerProps.value)){return;}
if(unit!=="time"){if(pickerProps.range&&source==="picker"){if(pickerProps.focusedDateIndex===0||(value[0]&&value[1]&&value[1]<value[0])){const{year,month,day}=value[pickerProps.focusedDateIndex];for(let i=0;i<value.length;i++){value[i]=value[i]&&value[i].set({year,month,day});}
pickerProps.focusedDateIndex=1;}else{pickerProps.focusedDateIndex=pickerProps.focusedDateIndex===1?0:1;}}}
hookParams.onChange?.(value);};const updateValueFromInputs=()=>{const values=zipWith(getInputs(),ensureArray(pickerProps.value),(el,currentValue)=>{if(!el){return currentValue;}
const[parsedValue,error]=safeConvert("parse",el.value);if(error){updateInput(el,currentValue);return currentValue;}else{return parsedValue;}});updateValue(values.length===2?values:values[0],"date","input");};const rawPickerProps={...DateTimePicker.defaultProps,onSelect:(value,unit)=>{value&&=markRaw(value);updateValue(value,unit,"picker");if(!pickerProps.range&&pickerProps.type==="date"){saveAndClose();}},...markValuesRaw(hookParams.pickerProps),};const pickerProps=reactive(rawPickerProps,()=>{const currentIsRange=pickerProps.range;if(popover.isOpen&&lastIsRange!==currentIsRange){allowOnClose=false;popover.open(getPopoverTarget(),{pickerProps});allowOnClose=true;}
lastIsRange=currentIsRange;for(const[el,value]of zip(getInputs(),ensureArray(pickerProps.value),true)){if(el){updateInput(el,value);}}
shouldFocus=true;});let allowOnClose=true;let inputsChanged=[];let lastInitialProps=null;let lastAppliedValue=null;let lastIsRange=pickerProps.range;let restoreTargetMargin=null;let shouldFocus=false;return{state:pickerProps,open:openPicker,computeBasePickerProps,focusIfNeeded(){if(popover.isOpen&&shouldFocus){focusActiveInput();}},enable(){let editableInputs=0;for(const[el,value]of zip(getInputs(),ensureArray(pickerProps.value),true)){updateInput(el,value);if(el&&!el.disabled&&!el.readOnly&&!listenedElements.has(el)){listenedElements.add(el);el.addEventListener("change",onInputChange);el.addEventListener("click",onInputClick);el.addEventListener("focus",onInputFocus);el.addEventListener("keydown",onInputKeydown);editableInputs++;}}
const calendarIconGroupEl=getInput(0)?.parentElement.querySelector(".o_input_group_date_icon");if(calendarIconGroupEl){calendarIconGroupEl.classList.add("cursor-pointer");calendarIconGroupEl.addEventListener("click",()=>openPicker(0));}
if(!editableInputs&&popover.isOpen){saveAndClose();}
return()=>{};},get isOpen(){return popover.isOpen;},};},};},};registry.category("services").add("datetime_picker",datetimePickerService);return __exports;});;

/* /web/static/src/core/dialog/dialog.js */
odoo.define('@web/core/dialog/dialog',['@web/core/hotkeys/hotkey_hook','@web/core/ui/ui_service','@web/core/utils/hooks','@odoo/owl','@web/core/utils/timing','@web/core/utils/draggable_hook_builder_owl'],function(require){'use strict';let __exports={};const{useHotkey}=require("@web/core/hotkeys/hotkey_hook");const{useActiveElement}=require("@web/core/ui/ui_service");const{useForwardRefToParent}=require("@web/core/utils/hooks");const{Component,onWillDestroy,useChildSubEnv,useExternalListener,useState}=require("@odoo/owl");const{throttleForAnimation}=require("@web/core/utils/timing");const{makeDraggableHook}=require("@web/core/utils/draggable_hook_builder_owl");const useDialogDraggable=makeDraggableHook({name:"useDialogDraggable",onWillStartDrag({ctx,addCleanup,addStyle,getRect}){const{height,width}=getRect(ctx.current.element);ctx.current.container=document.createElement("div");addStyle(ctx.current.container,{position:"fixed",top:"0",bottom:`${70 - height}px`,left:`${70 - width}px`,right:`${70 - width}px`,});ctx.current.element.after(ctx.current.container);addCleanup(()=>ctx.current.container.remove());},onDrop({ctx,getRect}){const{top,left}=getRect(ctx.current.element);return{left:left-ctx.current.elementRect.left,top:top-ctx.current.elementRect.top,};},});const Dialog=__exports.Dialog=class Dialog extends Component{static template="web.Dialog";static props={contentClass:{type:String,optional:true},bodyClass:{type:String,optional:true},fullscreen:{type:Boolean,optional:true},footer:{type:Boolean,optional:true},header:{type:Boolean,optional:true},size:{type:String,optional:true,validate:(s)=>["sm","md","lg","xl","fs","fullscreen"].includes(s),},technical:{type:Boolean,optional:true},title:{type:String,optional:true},modalRef:{type:Function,optional:true},slots:{type:Object,shape:{default:Object,header:{type:Object,optional:true},footer:{type:Object,optional:true},},},withBodyPadding:{type:Boolean,optional:true},onExpand:{type:Function,optional:true},};static defaultProps={contentClass:"",bodyClass:"",fullscreen:false,footer:true,header:true,size:"lg",technical:true,title:"Odoo",withBodyPadding:true,};setup(){this.modalRef=useForwardRefToParent("modalRef");useActiveElement("modalRef");this.data=useState(this.env.dialogData);useHotkey("escape",()=>this.onEscape());useHotkey("control+enter",()=>{const btns=document.querySelectorAll(".o_dialog:not(.o_inactive_modal) .modal-footer button");const firstVisibleBtn=Array.from(btns).find((btn)=>{const styles=getComputedStyle(btn);return styles.display!=="none";});if(firstVisibleBtn){firstVisibleBtn.click();}},{bypassEditableProtection:true});this.id=`dialog_${this.data.id}`;useChildSubEnv({inDialog:true,dialogId:this.id});this.isMovable=this.props.header;if(this.isMovable){this.position=useState({left:0,top:0});useDialogDraggable({enable:()=>!this.env.isSmall,ref:this.modalRef,elements:".modal-content",handle:".modal-header",ignore:"button, input",edgeScrolling:{enabled:false},onDrop:({top,left})=>{this.position.left+=left;this.position.top+=top;},});const throttledResize=throttleForAnimation(this.onResize.bind(this));useExternalListener(window,"resize",throttledResize);}
onWillDestroy(()=>{if(this.env.isSmall){this.data.scrollToOrigin();}});}
get isFullscreen(){return this.props.fullscreen||this.env.isSmall;}
get contentStyle(){if(this.isMovable){return`top: ${this.position.top}px; left: ${this.position.left}px;`;}
return"";}
onResize(){this.position.left=0;this.position.top=0;}
onEscape(){return this.dismiss();}
async dismiss(){if(this.data.dismiss){await this.data.dismiss();}
return this.data.close();}}
return __exports;});;

/* /web/static/src/core/dialog/dialog_service.js */
odoo.define('@web/core/dialog/dialog_service',['@odoo/owl','@web/core/registry'],function(require){'use strict';let __exports={};const{Component,markRaw,reactive,useChildSubEnv,xml}=require("@odoo/owl");const{registry}=require("@web/core/registry");class DialogWrapper extends Component{static template=xml`<t t-component="props.subComponent" t-props="props.subProps" />`;static props=["*"];setup(){useChildSubEnv({dialogData:this.props.subEnv});}}
const dialogService=__exports.dialogService={dependencies:["overlay"],start(env,{overlay}){const stack=[];let nextId=0;const deactivate=()=>{for(const subEnv of stack){subEnv.isActive=false;}};const add=(dialogClass,props,options={})=>{const id=nextId++;const close=()=>remove();const subEnv=reactive({id,close,isActive:true,});deactivate();stack.push(subEnv);document.body.classList.add("modal-open");const scrollOrigin={top:window.scrollY,left:window.scrollX};subEnv.scrollToOrigin=()=>{if(!stack.length){window.scrollTo(scrollOrigin);}};const remove=overlay.add(DialogWrapper,{subComponent:dialogClass,subProps:markRaw({...props,close}),subEnv,},{onRemove:()=>{stack.pop();deactivate();if(stack.length){stack.at(-1).isActive=true;}else{document.body.classList.remove("modal-open");}
options.onClose?.();},rootId:options.context?.root?.el.getRootNode()?.host?.id,});return remove;};function closeAll(){for(const dialog of[...stack].reverse()){dialog.close();}}
return{add,closeAll};},};registry.category("services").add("dialog",dialogService);return __exports;});;

/* /web/static/src/core/domain.js */
odoo.define('@web/core/domain',['@web/core/utils/arrays','@web/core/py_js/py','@web/core/py_js/py_utils','@web/core/utils/strings'],function(require){'use strict';let __exports={};const{shallowEqual}=require("@web/core/utils/arrays");const{evaluate,formatAST,parseExpr}=require("@web/core/py_js/py");const{toPyValue}=require("@web/core/py_js/py_utils");const{escapeRegExp}=require("@web/core/utils/strings");const InvalidDomainError=__exports.InvalidDomainError=class InvalidDomainError extends Error{}
const Domain=__exports.Domain=class Domain{static combine(domains,operator){if(domains.length===0){return new Domain([]);}
const domain1=domains[0]instanceof Domain?domains[0]:new Domain(domains[0]);if(domains.length===1){return domain1;}
const domain2=Domain.combine(domains.slice(1),operator);const result=new Domain([]);const astValues1=domain1.ast.value;const astValues2=domain2.ast.value;const op=operator==="AND"?"&":"|";const combinedAST={type:4,value:astValues1.concat(astValues2)};result.ast=normalizeDomainAST(combinedAST,op);return result;}
static and(domains){return Domain.combine(domains,"AND");}
static or(domains){return Domain.combine(domains,"OR");}
static not(domain){const result=new Domain(domain);result.ast.value.unshift({type:1,value:"!"});return result;}
static removeDomainLeaves(domain,keysToRemove){function processLeaf(elements,idx,operatorCtx,newDomain){const leaf=elements[idx];if(leaf.type===10){if(keysToRemove.includes(leaf.value[0].value)){if(operatorCtx==="&"){newDomain.ast.value.push(...Domain.TRUE.ast.value);}else if(operatorCtx==="|"){newDomain.ast.value.push(...Domain.FALSE.ast.value);}}else{newDomain.ast.value.push(leaf);}
return 1;}else if(leaf.type===1){if(leaf.value==="|"&&elements[idx+1].type===10&&elements[idx+2].type===10&&keysToRemove.includes(elements[idx+1].value[0].value)&&keysToRemove.includes(elements[idx+2].value[0].value)){newDomain.ast.value.push(...Domain.TRUE.ast.value);return 3;}
newDomain.ast.value.push(leaf);if(leaf.value==="!"){return 1+processLeaf(elements,idx+1,"&",newDomain);}
const firstLeafSkip=processLeaf(elements,idx+1,leaf.value,newDomain);const secondLeafSkip=processLeaf(elements,idx+1+firstLeafSkip,leaf.value,newDomain);return 1+firstLeafSkip+secondLeafSkip;}
return 0;}
domain=new Domain(domain);if(domain.ast.value.length===0){return domain;}
const newDomain=new Domain([]);processLeaf(domain.ast.value,0,"&",newDomain);return newDomain;}
constructor(descr=[]){if(descr instanceof Domain){return new Domain(descr.toString());}else{let rawAST;try{rawAST=typeof descr==="string"?parseExpr(descr):toAST(descr);}catch(error){throw new InvalidDomainError(`Invalid domain representation: ${descr.toString()}`,{cause:error,});}
this.ast=normalizeDomainAST(rawAST);}}
contains(record){const expr=evaluate(this.ast,record);return matchDomain(record,expr);}
toString(){return formatAST(this.ast);}
toList(context){return evaluate(this.ast,context);}
toJson(){try{const evaluatedAsList=this.toList({});const evaluatedDomain=new Domain(evaluatedAsList);if(evaluatedDomain.toString()===this.toString()){return evaluatedAsList;}
return this.toString();}catch{return this.toString();}}}
__exports.evalDomain=evalDomain;function evalDomain(modifier,evalContext){if(modifier&&typeof modifier!=="boolean"){modifier=new Domain(modifier).contains(evalContext);}
return Boolean(modifier);}
const TRUE_LEAF=[1,"=",1];const FALSE_LEAF=[0,"=",1];const TRUE_DOMAIN=new Domain([TRUE_LEAF]);const FALSE_DOMAIN=new Domain([FALSE_LEAF]);Domain.TRUE=TRUE_DOMAIN;Domain.FALSE=FALSE_DOMAIN;function toAST(domain){const elems=domain.map((elem)=>{switch(elem){case"!":case"&":case"|":return{type:1,value:elem};default:return{type:10,value:elem.map(toPyValue),};}});return{type:4,value:elems};}
function normalizeDomainAST(domain,op="&"){if(domain.type!==4){if(domain.type===10){const value=domain.value;if(value.findIndex((e)=>e.type===10)===-1||!value.every((e)=>e.type===10||e.type===1)){throw new InvalidDomainError("Invalid domain AST");}}else{throw new InvalidDomainError("Invalid domain AST");}}
if(domain.value.length===0){return domain;}
let expected=1;for(const child of domain.value){switch(child.type){case 1:if(child.value==="&"||child.value==="|"){expected++;}else if(child.value!=="!"){throw new InvalidDomainError("Invalid domain AST");}
break;case 4:case 10:if(child.value.length===3){expected--;break;}
throw new InvalidDomainError("Invalid domain AST");default:throw new InvalidDomainError("Invalid domain AST");}}
const values=domain.value.slice();while(expected<0){expected++;values.unshift({type:1,value:op});}
if(expected>0){throw new InvalidDomainError(`invalid domain ${formatAST(domain)} (missing ${expected} segment(s))`);}
return{type:4,value:values};}
function matchCondition(record,condition){if(typeof condition==="boolean"){return condition;}
const[field,operator,value]=condition;if(typeof field==="string"){const names=field.split(".");if(names.length>=2){return matchCondition(record[names[0]],[names.slice(1).join("."),operator,value]);}}
let likeRegexp,ilikeRegexp;if(["like","not like","ilike","not ilike"].includes(operator)){likeRegexp=new RegExp(`(.*)${escapeRegExp(value).replaceAll("%", "(.*)")}(.*)`,"g");ilikeRegexp=new RegExp(`(.*)${escapeRegExp(value).replaceAll("%", "(.*)")}(.*)`,"gi");}
const fieldValue=typeof field==="number"?field:record[field];switch(operator){case"=?":if([false,null].includes(value)){return true;}
case"=":case"==":if(Array.isArray(fieldValue)&&Array.isArray(value)){return shallowEqual(fieldValue,value);}
return fieldValue===value;case"!=":case"<>":return!matchCondition(record,[field,"==",value]);case"<":return fieldValue<value;case"<=":return fieldValue<=value;case">":return fieldValue>value;case">=":return fieldValue>=value;case"in":{const val=Array.isArray(value)?value:[value];const fieldVal=Array.isArray(fieldValue)?fieldValue:[fieldValue];return fieldVal.some((fv)=>val.includes(fv));}
case"not in":{const val=Array.isArray(value)?value:[value];const fieldVal=Array.isArray(fieldValue)?fieldValue:[fieldValue];return!fieldVal.some((fv)=>val.includes(fv));}
case"like":if(fieldValue===false){return false;}
return Boolean(fieldValue.match(likeRegexp));case"not like":if(fieldValue===false){return false;}
return Boolean(!fieldValue.match(likeRegexp));case"=like":if(fieldValue===false){return false;}
return new RegExp(escapeRegExp(value).replace(/%/g,".*")).test(fieldValue);case"ilike":if(fieldValue===false){return false;}
return Boolean(fieldValue.match(ilikeRegexp));case"not ilike":if(fieldValue===false){return false;}
return Boolean(!fieldValue.match(ilikeRegexp));case"=ilike":if(fieldValue===false){return false;}
return new RegExp(escapeRegExp(value).replace(/%/g,".*"),"i").test(fieldValue);case"any":case"not_any":return true;}
throw new InvalidDomainError("could not match domain");}
function makeOperators(record){const match=matchCondition.bind(null,record);return{"!":(x)=>!match(x),"&":(a,b)=>match(a)&&match(b),"|":(a,b)=>match(a)||match(b),};}
function matchDomain(record,domain){if(domain.length===0){return true;}
const operators=makeOperators(record);const reversedDomain=Array.from(domain).reverse();const condStack=[];for(const item of reversedDomain){const operator=typeof item==="string"&&operators[item];if(operator){const operands=condStack.splice(-operator.length);condStack.push(operator(...operands));}else{condStack.push(item);}}
return matchCondition(record,condStack.pop());}
return __exports;});;

/* /web/static/src/core/domain_selector/domain_selector.js */
odoo.define('@web/core/domain_selector/domain_selector',['@odoo/owl','@web/core/domain','@web/core/tree_editor/tree_editor','@web/core/tree_editor/condition_tree','@web/core/model_field_selector/utils','@web/core/checkbox/checkbox','@web/core/utils/objects','@web/core/domain_selector/domain_selector_operator_editor','@web/core/tree_editor/tree_editor_operator_editor','@web/core/l10n/translation','@web/core/model_field_selector/model_field_selector','@web/core/utils/hooks','@web/core/tree_editor/utils','@web/core/domain_selector/utils'],function(require){'use strict';let __exports={};const{Component,onWillStart,onWillUpdateProps}=require("@odoo/owl");const{Domain}=require("@web/core/domain");const{TreeEditor}=require("@web/core/tree_editor/tree_editor");const{domainFromTree,treeFromDomain,formatValue,condition,}=require("@web/core/tree_editor/condition_tree");const{useLoadFieldInfo}=require("@web/core/model_field_selector/utils");const{CheckBox}=require("@web/core/checkbox/checkbox");const{deepEqual}=require("@web/core/utils/objects");const{getDomainDisplayedOperators}=require("@web/core/domain_selector/domain_selector_operator_editor");const{getOperatorEditorInfo}=require("@web/core/tree_editor/tree_editor_operator_editor");const{_t}=require("@web/core/l10n/translation");const{ModelFieldSelector}=require("@web/core/model_field_selector/model_field_selector");const{useService}=require("@web/core/utils/hooks");const{useMakeGetFieldDef}=require("@web/core/tree_editor/utils");const{getDefaultCondition}=require("@web/core/domain_selector/utils");const ARCHIVED_CONDITION=condition("active","in",[true,false]);const ARCHIVED_DOMAIN=`[("active", "in", [True, False])]`;const DomainSelector=__exports.DomainSelector=class DomainSelector extends Component{static template="web.DomainSelector";static components={TreeEditor,CheckBox};static props={domain:String,resModel:String,className:{type:String,optional:true},defaultConnector:{type:[{value:"&"},{value:"|"}],optional:true},isDebugMode:{type:Boolean,optional:true},readonly:{type:Boolean,optional:true},update:{type:Function,optional:true},debugUpdate:{type:Function,optional:true},};static defaultProps={isDebugMode:false,readonly:true,update:()=>{},};setup(){this.fieldService=useService("field");this.loadFieldInfo=useLoadFieldInfo(this.fieldService);this.makeGetFieldDef=useMakeGetFieldDef(this.fieldService);this.tree=null;this.showArchivedCheckbox=false;this.includeArchived=false;onWillStart(()=>this.onPropsUpdated(this.props));onWillUpdateProps((np)=>this.onPropsUpdated(np));}
async onPropsUpdated(p){let domain;let isSupported=true;try{domain=new Domain(p.domain);}catch{isSupported=false;}
if(!isSupported){this.tree=null;this.showArchivedCheckbox=false;this.includeArchived=false;return;}
const tree=treeFromDomain(domain);const getFieldDef=await this.makeGetFieldDef(p.resModel,tree,["active"]);this.tree=treeFromDomain(domain,{getFieldDef,distributeNot:!p.isDebugMode,});this.showArchivedCheckbox=this.getShowArchivedCheckBox(Boolean(getFieldDef("active")),p);this.includeArchived=false;if(this.showArchivedCheckbox){if(this.tree.value==="&"){this.tree.children=this.tree.children.filter((child)=>{if(deepEqual(child,ARCHIVED_CONDITION)){this.includeArchived=true;return false;}
return true;});if(this.tree.children.length===1){this.tree=this.tree.children[0];}}else if(deepEqual(this.tree,ARCHIVED_CONDITION)){this.includeArchived=true;this.tree=treeFromDomain(`[]`);}}}
getShowArchivedCheckBox(hasActiveField,props){return hasActiveField;}
getDefaultCondition(fieldDefs){return getDefaultCondition(fieldDefs);}
getDefaultOperator(fieldDef){return getDomainDisplayedOperators(fieldDef)[0];}
getOperatorEditorInfo(fieldDef){const operators=getDomainDisplayedOperators(fieldDef);return getOperatorEditorInfo(operators,fieldDef);}
getPathEditorInfo(resModel,defaultCondition){const{isDebugMode}=this.props;return{component:ModelFieldSelector,extractProps:({update,value:path})=>{return{path,update,resModel,isDebugMode,readonly:false,};},isSupported:(path)=>[0,1].includes(path)||typeof path==="string",defaultValue:()=>defaultCondition.path,stringify:(path)=>formatValue(path),message:_t("Invalid field chain"),};}
toggleIncludeArchived(){this.includeArchived=!this.includeArchived;this.update(this.tree);}
resetDomain(){this.props.update("[]");}
onDomainInput(domain){if(this.props.debugUpdate){this.props.debugUpdate(domain);}}
onDomainChange(domain){this.props.update(domain,true);}
update(tree){const archiveDomain=this.includeArchived?ARCHIVED_DOMAIN:`[]`;const domain=tree?Domain.and([domainFromTree(tree),archiveDomain]).toString():archiveDomain;this.props.update(domain);}}
return __exports;});;

/* /web/static/src/core/domain_selector/domain_selector_operator_editor.js */
odoo.define('@web/core/domain_selector/domain_selector_operator_editor',[],function(require){'use strict';let __exports={};__exports.getDomainDisplayedOperators=getDomainDisplayedOperators;function getDomainDisplayedOperators(fieldDef){if(!fieldDef){fieldDef={};}
const{type,is_property}=fieldDef;if(is_property){switch(type){case"many2many":case"tags":return["in","not in","set","not_set"];case"many2one":case"selection":return["=","!=","set","not_set"];}}
const hierarchyOperators=fieldDef.allow_hierachy_operators?["child_of","parent_of"]:[];switch(type){case"boolean":return["is","is_not"];case"selection":return["=","!=","in","not in","set","not_set"];case"char":case"text":case"html":return["=","!=","ilike","not ilike","in","not in","set","not_set","starts_with","ends_with",];case"date":case"datetime":return["=","!=",">",">=","<","<=","between","within","set","not_set"];case"integer":case"float":case"monetary":return["=","!=",">",">=","<","<=","between","ilike","not ilike","set","not_set",];case"many2one":case"many2many":case"one2many":return["in","not in","=","!=","ilike","not ilike",...hierarchyOperators,"set","not_set","starts_with","ends_with","any","not any",];case"json":return["=","!=","ilike","not ilike","set","not_set"];case"properties":return["set","not_set"];case undefined:return["="];default:return["=","!=",">",">=","<","<=","ilike","not ilike","like","not like","=like","=ilike","in","not in","set","not_set",];}}
return __exports;});;

/* /web/static/src/core/domain_selector/utils.js */
odoo.define('@web/core/domain_selector/utils',['@web/core/tree_editor/tree_editor_value_editors','@web/core/domain_selector/domain_selector_operator_editor','@web/core/utils/hooks','@web/core/tree_editor/condition_tree','@web/core/tree_editor/utils'],function(require){'use strict';let __exports={};const{getDefaultValue}=require("@web/core/tree_editor/tree_editor_value_editors");const{getDomainDisplayedOperators}=require("@web/core/domain_selector/domain_selector_operator_editor");const{useService}=require("@web/core/utils/hooks");const{domainFromTree,condition}=require("@web/core/tree_editor/condition_tree");const{getDefaultPath}=require("@web/core/tree_editor/utils");__exports.getDefaultCondition=getDefaultCondition;function getDefaultCondition(fieldDefs){const defaultPath=getDefaultPath(fieldDefs);const fieldDef=fieldDefs[defaultPath];const operator=getDomainDisplayedOperators(fieldDef)[0];const value=getDefaultValue(fieldDef,operator);return condition(fieldDef.name,operator,value);}
__exports.getDefaultDomain=getDefaultDomain;function getDefaultDomain(fieldDefs){return domainFromTree(getDefaultCondition(fieldDefs));}
__exports.useGetDefaultLeafDomain=useGetDefaultLeafDomain;function useGetDefaultLeafDomain(){const fieldService=useService("field");return async(resModel)=>{const fieldDefs=await fieldService.loadFields(resModel);return getDefaultDomain(fieldDefs);};}
return __exports;});;

/* /web/static/src/core/domain_selector_dialog/domain_selector_dialog.js */
odoo.define('@web/core/domain_selector_dialog/domain_selector_dialog',['@web/core/l10n/translation','@odoo/owl','@web/core/dialog/dialog','@web/core/domain','@web/core/domain_selector/domain_selector','@web/core/network/rpc','@web/core/utils/hooks','@web/core/user'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{Component,useRef,useState}=require("@odoo/owl");const{Dialog}=require("@web/core/dialog/dialog");const{Domain}=require("@web/core/domain");const{DomainSelector}=require("@web/core/domain_selector/domain_selector");const{rpc}=require("@web/core/network/rpc");const{useService}=require("@web/core/utils/hooks");const{user}=require("@web/core/user");const DomainSelectorDialog=__exports.DomainSelectorDialog=class DomainSelectorDialog extends Component{static template="web.DomainSelectorDialog";static components={Dialog,DomainSelector,};static props={close:Function,onConfirm:Function,resModel:String,className:{type:String,optional:true},defaultConnector:{type:[{value:"&"},{value:"|"}],optional:true},domain:String,isDebugMode:{type:Boolean,optional:true},readonly:{type:Boolean,optional:true},text:{type:String,optional:true},confirmButtonText:{type:String,optional:true},disableConfirmButton:{type:Function,optional:true},discardButtonText:{type:String,optional:true},title:{type:String,optional:true},context:{type:Object,optional:true},};static defaultProps={isDebugMode:false,readonly:false,context:{},};setup(){this.notification=useService("notification");this.orm=useService("orm");this.state=useState({domain:this.props.domain});this.confirmButtonRef=useRef("confirm");}
get confirmButtonText(){return this.props.confirmButtonText||_t("Confirm");}
get dialogTitle(){return this.props.title||_t("Domain");}
get disabled(){if(this.props.disableConfirmButton){return this.props.disableConfirmButton(this.state.domain);}
return false;}
get discardButtonText(){return this.props.discardButtonText||_t("Discard");}
get domainSelectorProps(){return{className:this.props.className,resModel:this.props.resModel,readonly:this.props.readonly,isDebugMode:this.props.isDebugMode,defaultConnector:this.props.defaultConnector,domain:this.state.domain,update:(domain)=>{this.state.domain=domain;},};}
async onConfirm(){this.confirmButtonRef.el.disabled=true;let domain;let isValid;try{const evalContext={...user.context,...this.props.context};domain=new Domain(this.state.domain).toList(evalContext);}catch{isValid=false;}
if(isValid===undefined){isValid=await rpc("/web/domain/validate",{model:this.props.resModel,domain,});}
if(!isValid){if(this.confirmButtonRef.el){this.confirmButtonRef.el.disabled=false;}
this.notification.add(_t("Domain is invalid. Please correct it"),{type:"danger",});return;}
this.props.onConfirm(this.state.domain);this.props.close();}
onDiscard(){this.props.close();}}
return __exports;});;

/* /web/static/src/core/dropdown/_behaviours/dropdown_group_hook.js */
odoo.define('@web/core/dropdown/_behaviours/dropdown_group_hook',['@odoo/owl','@web/core/dropdown/dropdown_group'],function(require){'use strict';let __exports={};const{useComponent,useEffect,useEnv}=require("@odoo/owl");const{DROPDOWN_GROUP}=require("@web/core/dropdown/dropdown_group");__exports.useDropdownGroup=useDropdownGroup;function useDropdownGroup(){const env=useEnv();const group={isInGroup:DROPDOWN_GROUP in env,get isOpen(){return this.isInGroup&&[...env[DROPDOWN_GROUP]].some((dropdown)=>dropdown.isOpen);},};if(group.isInGroup){const dropdown=useComponent();useEffect(()=>{env[DROPDOWN_GROUP].add(dropdown.state);return()=>env[DROPDOWN_GROUP].delete(dropdown.state);});}
return group;}
return __exports;});;

/* /web/static/src/core/dropdown/_behaviours/dropdown_nesting.js */
odoo.define('@web/core/dropdown/_behaviours/dropdown_nesting',['@odoo/owl','@web/core/l10n/localization','@web/core/utils/hooks','@web/core/utils/reactive'],function(require){'use strict';let __exports={};const{EventBus,onWillDestroy,useChildSubEnv,useEffect,useEnv}=require("@odoo/owl");const{localization}=require("@web/core/l10n/localization");const{useBus,useService}=require("@web/core/utils/hooks");const{effect}=require("@web/core/utils/reactive");const DROPDOWN_NESTING=__exports.DROPDOWN_NESTING=Symbol("dropdownNesting");const BUS=new EventBus();class DropdownNestingState{constructor({parent,close}){this._isOpen=false;this.parent=parent;this.children=new Set();this.close=close;parent?.children.add(this);}
set isOpen(value){this._isOpen=value;if(this._isOpen){BUS.trigger("dropdown-opened",this);}}
get isOpen(){return this._isOpen;}
remove(){this.parent?.children.delete(this);}
closeAllParents(){this.close();if(this.parent){this.parent.closeAllParents();}}
closeChildren(){this.children.forEach((child)=>child.close());}
shouldIgnoreChanges(other){return(other===this||other.activeEl!==this.activeEl||[...this.children].some((child)=>child.shouldIgnoreChanges(other)));}
handleChange(other){if(this.shouldIgnoreChanges(other)){return;}
if(other.isOpen&&this.isOpen){this.close();}}}
__exports.useDropdownNesting=useDropdownNesting;function useDropdownNesting(state){const env=useEnv();const current=new DropdownNestingState({parent:env[DROPDOWN_NESTING],close:()=>state.close(),});const uiService=useService("ui");useEffect(()=>{Promise.resolve().then(()=>{current.activeEl=uiService.activeElement;});},()=>[]);useChildSubEnv({[DROPDOWN_NESTING]:current});useBus(BUS,"dropdown-opened",({detail:other})=>current.handleChange(other));effect((state)=>{current.isOpen=state.isOpen;},[state]);onWillDestroy(()=>{current.remove();});return{get hasParent(){return Boolean(current.parent);},navigationOptions:{onEnabled:(items)=>{if(current.parent){items[0]?.focus();}},onMouseEnter:(item)=>{if(item.target.classList.contains("o-dropdown")){item.select();}},hotkeys:{escape:()=>current.close(),arrowleft:(index,items)=>{if(localization.direction==="rtl"&&items[index]?.target.classList.contains("o-dropdown")){items[index]?.select();}else if(current.parent){current.close();}},arrowright:(index,items)=>{if(localization.direction==="rtl"&&current.parent){current.close();}else if(items[index]?.target.classList.contains("o-dropdown")){items[index]?.select();}},},},};}
return __exports;});;

/* /web/static/src/core/dropdown/_behaviours/dropdown_popover.js */
odoo.define('@web/core/dropdown/_behaviours/dropdown_popover',['@odoo/owl','@web/core/dropdown/dropdown_item'],function(require){'use strict';let __exports={};const{Component,onMounted,onRendered,onWillDestroy,onWillStart,xml}=require("@odoo/owl");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const DropdownPopover=__exports.DropdownPopover=class DropdownPopover extends Component{static components={DropdownItem};static template=xml`
        <t t-if="this.props.items">
            <t t-foreach="this.props.items" t-as="item" t-key="this.getKey(item, item_index)">
                <DropdownItem class="item.class" onSelected="() => item.onSelected()" t-out="item.label"/>
            </t>
        </t>
        <t t-slot="content" />
    `;static props={close:{type:Function,optional:true},beforeOpen:{type:Function,optional:true},onOpened:{type:Function,optional:true},onClosed:{type:Function,optional:true},refresher:Object,slots:Object,items:{type:Array,optional:true},};setup(){onRendered(()=>{this.props.refresher.token;});onWillStart(async()=>{await this.props.beforeOpen?.();});onMounted(()=>{this.props.onOpened?.();});onWillDestroy(()=>{this.props.onClosed?.();});}
getKey(item,index){return"id"in item?item.id:index;}}
return __exports;});;

/* /web/static/src/core/dropdown/accordion_item.js */
odoo.define('@web/core/dropdown/accordion_item',['@odoo/owl'],function(require){'use strict';let __exports={};const{Component,onPatched,useState}=require("@odoo/owl");const ACCORDION=__exports.ACCORDION=Symbol("Accordion");const AccordionItem=__exports.AccordionItem=class AccordionItem extends Component{static template="web.AccordionItem";static components={};static props={slots:{type:Object,shape:{default:{},},},description:String,selected:{type:Boolean,optional:true,},class:{type:String,optional:true,},};static defaultProps={class:"",selected:false,};setup(){this.state=useState({open:false,});this.parentComponent=this.env[ACCORDION];onPatched(()=>{this.parentComponent?.accordionStateChanged?.();});}}
return __exports;});;

/* /web/static/src/core/dropdown/checkbox_item.js */
odoo.define('@web/core/dropdown/checkbox_item',['@web/core/dropdown/dropdown_item'],function(require){'use strict';let __exports={};const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const CheckboxItem=__exports.CheckboxItem=class CheckboxItem extends DropdownItem{static template="web.CheckboxItem";static props={...DropdownItem.props,checked:{type:Boolean,optional:false,},};}
return __exports;});;

/* /web/static/src/core/dropdown/dropdown.js */
odoo.define('@web/core/dropdown/dropdown',['@odoo/owl','@web/core/dropdown/_behaviours/dropdown_group_hook','@web/core/dropdown/_behaviours/dropdown_nesting','@web/core/dropdown/_behaviours/dropdown_popover','@web/core/dropdown/dropdown_hooks','@web/core/navigation/navigation','@web/core/popover/popover_hook','@web/core/utils/classname','@web/core/utils/hooks','@web/core/utils/objects','@web/core/utils/reactive'],function(require){'use strict';let __exports={};const{Component,onMounted,onRendered,onWillUpdateProps,reactive,status,useEffect,xml,}=require("@odoo/owl");const{useDropdownGroup}=require("@web/core/dropdown/_behaviours/dropdown_group_hook");const{useDropdownNesting}=require("@web/core/dropdown/_behaviours/dropdown_nesting");const{DropdownPopover}=require("@web/core/dropdown/_behaviours/dropdown_popover");const{useDropdownState}=require("@web/core/dropdown/dropdown_hooks");const{useNavigation}=require("@web/core/navigation/navigation");const{usePopover}=require("@web/core/popover/popover_hook");const{mergeClasses}=require("@web/core/utils/classname");const{useChildRef,useService}=require("@web/core/utils/hooks");const{deepMerge}=require("@web/core/utils/objects");const{effect}=require("@web/core/utils/reactive");function getFirstElementOfNode(node){if(!node){return null;}
if(node.el){return node.el.nodeType===Node.ELEMENT_NODE?node.el:null;}
if(node.bdom||node.child){return getFirstElementOfNode(node.bdom||node.child);}
if(node.children){for(const child of node.children){const el=getFirstElementOfNode(child);if(el){return el;}}}
return null;}
const Dropdown=__exports.Dropdown=class Dropdown extends Component{static template=xml`<t t-slot="default"/>`;static components={};static props={arrow:{optional:true},menuClass:{optional:true},position:{type:String,optional:true},slots:{type:Object,shape:{default:{optional:true},content:{optional:true},},},items:{optional:true,type:Array,elements:{type:Object,shape:{label:String,onSelected:Function,class:{optional:true},"*":true,},},},menuRef:{type:Function,optional:true},disabled:{type:Boolean,optional:true},holdOnHover:{type:Boolean,optional:true},beforeOpen:{type:Function,optional:true},onOpened:{type:Function,optional:true},onStateChanged:{type:Function,optional:true},state:{type:Object,shape:{isOpen:Boolean,close:Function,open:Function,"*":true,},optional:true,},manual:{type:Boolean,optional:true},navigationOptions:{type:Object,optional:true},};static defaultProps={arrow:false,disabled:false,holdOnHover:false,menuClass:"",state:undefined,navigationOptions:{},};setup(){this.menuRef=this.props.menuRef||useChildRef();this.state=this.props.state||useDropdownState();this.nesting=useDropdownNesting(this.state);this.group=useDropdownGroup();this.navigation=useNavigation(this.menuRef,{focusInitialElementOnDisabled:()=>!this.group.isInGroup,itemsSelector:":scope .o-navigable, :scope .o-dropdown",...deepMerge(this.nesting.navigationOptions,this.props.navigationOptions),});let activeEl;this.uiService=useService("ui");useEffect(()=>{Promise.resolve().then(()=>{activeEl=this.uiService.activeElement;});},()=>[]);this.popover=usePopover(DropdownPopover,{animation:false,arrow:this.props.arrow,closeOnClickAway:(target)=>{return this.popoverCloseOnClickAway(target,activeEl);},closeOnEscape:false,env:this.__owl__.childEnv,holdOnHover:this.props.holdOnHover,onClose:()=>this.state.close(),onPositioned:(el,{direction})=>this.setTargetDirectionClass(direction),popoverClass:mergeClasses("o-dropdown--menu dropdown-menu mx-0",{"o-dropdown--menu-submenu":this.hasParent},this.props.menuClass),popoverRole:"menu",position:this.position,ref:this.menuRef,setActiveElement:false,});onRendered(()=>(this.popoverRefresher?this.popoverRefresher.token++:null));onMounted(()=>this.onStateChanged(this.state));effect((state)=>this.onStateChanged(state),[this.state]);useEffect((target)=>this.setTargetElement(target),()=>[this.target]);onWillUpdateProps(({disabled})=>{if(disabled){this.closePopover();}});}
get position(){return this.props.position||(this.hasParent?"right-start":"bottom-start");}
get hasParent(){return this.nesting.hasParent;}
get target(){const target=getFirstElementOfNode(this.__owl__.bdom);if(!target){throw new Error("Could not find a valid dropdown toggler, prefer a single html element and put any dynamic content inside of it.");}
return target;}
handleClick(event){if(this.props.disabled){return;}
event.stopPropagation();if(this.state.isOpen&&!this.hasParent){this.state.close();}else{this.state.open();}}
handleMouseEnter(){if(this.props.disabled){return;}
if(this.hasParent||this.group.isOpen){this.target.focus();this.state.open();}}
onStateChanged(state){if(state.isOpen){this.openPopover();}else{this.closePopover();}}
popoverCloseOnClickAway(target,activeEl){return this.uiService.getActiveElementOf(target)===activeEl;}
setTargetElement(target){if(!target){return;}
target.ariaExpanded=false;target.classList.add("o-dropdown");if(this.hasParent){target.classList.add("o-dropdown--has-parent");}
const tagName=target.tagName.toLowerCase();if(!["input","textarea","table","thead","tbody","tr","th","td"].includes(tagName)){target.classList.add("dropdown-toggle");if(this.hasParent){target.classList.add("o-dropdown-item","o-navigable","dropdown-item");if(!target.classList.contains("o-dropdown--no-caret")){target.classList.add("o-dropdown-caret");}}}
this.defaultDirection=this.position.split("-")[0];this.setTargetDirectionClass(this.defaultDirection);if(!this.props.manual){target.addEventListener("click",this.handleClick.bind(this));target.addEventListener("mouseenter",this.handleMouseEnter.bind(this));return()=>{target.removeEventListener("click",this.handleClick.bind(this));target.removeEventListener("mouseenter",this.handleMouseEnter.bind(this));};}}
setTargetDirectionClass(direction){if(!this.target){return;}
const directionClasses={bottom:"dropdown",top:"dropup",left:"dropstart",right:"dropend",};this.target.classList.remove(...Object.values(directionClasses));this.target.classList.add(directionClasses[direction]);}
openPopover(){if(this.popover.isOpen||status(this)!=="mounted"){return;}
if(!this.target||!this.target.isConnected){this.state.close();return;}
this.popoverRefresher=reactive({token:0});const props={beforeOpen:()=>this.props.beforeOpen?.(),onOpened:()=>this.onOpened(),onClosed:()=>this.onClosed(),refresher:this.popoverRefresher,items:this.props.items,slots:this.props.slots,};this.popover.open(this.target,props);}
closePopover(){this.popover.close();this.navigation.disable();}
onOpened(){this.navigation.enable();this.props.onOpened?.();this.props.onStateChanged?.(true);if(this.target){this.target.ariaExpanded=true;this.target.classList.add("show");}}
onClosed(){this.props.onStateChanged?.(false);if(this.target){this.target.ariaExpanded=false;this.target.classList.remove("show");this.setTargetDirectionClass(this.defaultDirection);}}}
return __exports;});;

/* /web/static/src/core/dropdown/dropdown_group.js */
odoo.define('@web/core/dropdown/dropdown_group',['@odoo/owl'],function(require){'use strict';let __exports={};const{Component,onWillDestroy,useChildSubEnv,xml}=require("@odoo/owl");const GROUPS=new Map();function getGroup(id){if(!GROUPS.has(id)){GROUPS.set(id,{group:new Set(),count:0,});}
GROUPS.get(id).count++;return GROUPS.get(id).group;}
function removeGroup(id){const groupData=GROUPS.get(id);groupData.count--;if(groupData.count<=0){GROUPS.delete(id);}}
const DROPDOWN_GROUP=__exports.DROPDOWN_GROUP=Symbol("dropdownGroup");const DropdownGroup=__exports.DropdownGroup=class DropdownGroup extends Component{static template=xml`<t t-slot="default"/>`;static props={group:{type:String,optional:true},slots:Object,};setup(){if(this.props.group){const group=getGroup(this.props.group);onWillDestroy(()=>removeGroup(this.props.group));useChildSubEnv({[DROPDOWN_GROUP]:group});}else{useChildSubEnv({[DROPDOWN_GROUP]:new Set()});}}}
return __exports;});;

/* /web/static/src/core/dropdown/dropdown_hooks.js */
odoo.define('@web/core/dropdown/dropdown_hooks',['@odoo/owl','@web/core/dropdown/_behaviours/dropdown_nesting'],function(require){'use strict';let __exports={};const{useEnv,useState}=require("@odoo/owl");const{DROPDOWN_NESTING}=require("@web/core/dropdown/_behaviours/dropdown_nesting");__exports.useDropdownState=useDropdownState;function useDropdownState({onOpen,onClose}={}){const state=useState({isOpen:false,open:()=>{state.isOpen=true;onOpen?.();},close:()=>{state.isOpen=false;onClose?.();},});return state;}
__exports.useDropdownCloser=useDropdownCloser;function useDropdownCloser(){const env=useEnv();const dropdown=env[DROPDOWN_NESTING];return{close:()=>dropdown?.close(),closeChildren:()=>dropdown?.closeChildren(),closeAll:()=>dropdown?.closeAllParents(),};}
return __exports;});;

/* /web/static/src/core/dropdown/dropdown_item.js */
odoo.define('@web/core/dropdown/dropdown_item',['@odoo/owl','@web/core/dropdown/dropdown_hooks'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{useDropdownCloser}=require("@web/core/dropdown/dropdown_hooks");const ClosingMode={None:"none",ClosestParent:"closest",AllParents:"all",};const DropdownItem=__exports.DropdownItem=class DropdownItem extends Component{static template="web.DropdownItem";static props={class:{type:[String,Object],optional:true,},onSelected:{type:Function,optional:true,},closingMode:{type:ClosingMode,optional:true,},attrs:{type:Object,optional:true,},slots:{Object,optional:true},};static defaultProps={closingMode:ClosingMode.AllParents,attrs:{},};setup(){this.dropdownControl=useDropdownCloser();}
onClick(ev){if(this.props.attrs&&this.props.attrs.href){ev.preventDefault();}
this.props.onSelected?.();switch(this.props.closingMode){case ClosingMode.ClosestParent:this.dropdownControl.close();break;case ClosingMode.AllParents:this.dropdownControl.closeAll();break;}}}
return __exports;});;

/* /web/static/src/core/dropzone/dropzone.js */
odoo.define('@web/core/dropzone/dropzone',['@odoo/owl'],function(require){'use strict';let __exports={};const{Component,useEffect,useRef,useState}=require("@odoo/owl");const Dropzone=__exports.Dropzone=class Dropzone extends Component{static props={extraClass:{type:String,optional:true},onDrop:{type:Function,optional:true},ref:Object,slots:{type:Object,optional:true},};static template="web.Dropzone";setup(){super.setup();this.root=useRef("root");this.state=useState({isDraggingInside:false,});useEffect(()=>{const{top,left,width,height}=this.props.ref.el.getBoundingClientRect();this.root.el.style=`top:${top}px;left:${left}px;width:${width}px;height:${height}px;`;});}}
return __exports;});;

/* /web/static/src/core/dropzone/dropzone_hook.js */
odoo.define('@web/core/dropzone/dropzone_hook',['@web/core/dropzone/dropzone','@odoo/owl','@web/core/utils/hooks'],function(require){'use strict';let __exports={};const{Dropzone}=require("@web/core/dropzone/dropzone");const{useEffect,useExternalListener}=require("@odoo/owl");const{useService}=require("@web/core/utils/hooks");__exports.useCustomDropzone=useCustomDropzone;function useCustomDropzone(targetRef,dropzoneComponent,dropzoneComponentProps,isDropzoneEnabled=()=>true){const overlayService=useService("overlay");const uiService=useService("ui");let dragCount=0;let hasTarget=false;let removeDropzone=false;useExternalListener(document,"dragenter",onDragEnter,{capture:true});useExternalListener(document,"dragleave",onDragLeave,{capture:true});useExternalListener(window,"dragover",(ev)=>{if(ev.dataTransfer&&ev.dataTransfer.types.includes("Files")){ev.preventDefault();}});useExternalListener(window,"drop",(ev)=>{if(ev.dataTransfer&&ev.dataTransfer.types.includes("Files")){ev.preventDefault();}
dragCount=0;updateDropzone();},{capture:true});function updateDropzone(){const hasDropzone=!!removeDropzone;const isTargetInActiveElement=uiService.activeElement.contains(targetRef.el);const shouldDisplayDropzone=dragCount&&hasTarget&&isTargetInActiveElement&&isDropzoneEnabled();if(shouldDisplayDropzone&&!hasDropzone){removeDropzone=overlayService.add(dropzoneComponent,{ref:targetRef,...dropzoneComponentProps});}
if(!shouldDisplayDropzone&&hasDropzone){removeDropzone();removeDropzone=false;}}
function onDragEnter(ev){if(dragCount||(ev.dataTransfer&&ev.dataTransfer.types.includes("Files"))){dragCount++;updateDropzone();}}
function onDragLeave(){if(dragCount){dragCount--;updateDropzone();}}
useEffect((el)=>{hasTarget=!!el;updateDropzone();},()=>[targetRef.el]);}
__exports.useDropzone=useDropzone;function useDropzone(targetRef,onDrop,extraClass,isDropzoneEnabled=()=>true){const dropzoneComponent=Dropzone;const dropzoneComponentProps={extraClass,onDrop};useCustomDropzone(targetRef,dropzoneComponent,dropzoneComponentProps,isDropzoneEnabled);}
return __exports;});;

/* /web/static/src/core/effects/effect_service.js */
odoo.define('@web/core/effects/effect_service',['@web/core/l10n/translation','@web/core/registry','@web/core/user','@web/core/effects/rainbow_man'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{user}=require("@web/core/user");const{RainbowMan}=require("@web/core/effects/rainbow_man");const effectRegistry=registry.category("effects");function rainbowMan(env,params={}){let message=params.message;if(message instanceof Element){console.log("Providing an HTML element to an effect is deprecated. Note that all event handlers will be lost.");message=message.outerHTML;}else if(!message){message=_t("Well Done!");}
if(user.showEffect){const props={imgUrl:params.img_url||"/web/static/img/smile.svg",fadeout:params.fadeout||"medium",message,Component:params.Component,props:params.props,};return{Component:RainbowMan,props};}
env.services.notification.add(message);}
effectRegistry.add("rainbow_man",rainbowMan);const effectService=__exports.effectService={dependencies:["overlay"],start(env,{overlay}){const add=(params={})=>{const type=params.type||"rainbow_man";const effect=effectRegistry.get(type);const{Component,props}=effect(env,params)||{};if(Component){const remove=overlay.add(Component,{...props,close:()=>remove(),});}};return{add};},};registry.category("services").add("effect",effectService);return __exports;});;

/* /web/static/src/core/effects/rainbow_man.js */
odoo.define('@web/core/effects/rainbow_man',['@web/core/browser/browser','@odoo/owl'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{Component,useEffect,useExternalListener,useState}=require("@odoo/owl");const RainbowMan=__exports.RainbowMan=class RainbowMan extends Component{static template="web.RainbowMan";static rainbowFadeouts={slow:4500,medium:3500,fast:2000,no:false};static props={fadeout:String,close:Function,message:String,imgUrl:String,Component:{type:Function,optional:true},props:{type:Object,optional:true},};setup(){useExternalListener(document.body,"click",this.closeRainbowMan);this.state=useState({isFading:false});this.delay=RainbowMan.rainbowFadeouts[this.props.fadeout];if(this.delay){useEffect(()=>{const timeout=browser.setTimeout(()=>{this.state.isFading=true;},this.delay);return()=>browser.clearTimeout(timeout);},()=>[]);}}
onAnimationEnd(ev){if(this.delay&&ev.animationName==="reward-fading-reverse"){ev.stopPropagation();this.closeRainbowMan();}}
closeRainbowMan(){this.props.close();}}
return __exports;});;

/* /web/static/src/core/emoji_picker/emoji_picker.js */
odoo.define('@web/core/emoji_picker/emoji_picker',['@web/core/utils/misc','@odoo/owl','@web/core/assets','@web/core/browser/browser','@web/core/l10n/translation','@web/core/popover/popover_hook','@web/core/utils/search','@web/core/utils/hooks','@web/core/browser/feature_detection'],function(require){'use strict';let __exports={};const{markEventHandled}=require("@web/core/utils/misc");const{Component,onMounted,onPatched,onWillDestroy,onWillPatch,onWillStart,onWillUnmount,useEffect,useRef,useState,}=require("@odoo/owl");const{loadBundle}=require("@web/core/assets");const{browser}=require("@web/core/browser/browser");const{_t}=require("@web/core/l10n/translation");const{usePopover}=require("@web/core/popover/popover_hook");const{fuzzyLookup}=require("@web/core/utils/search");const{useAutofocus,useService}=require("@web/core/utils/hooks");const{isMobileOS}=require("@web/core/browser/feature_detection");__exports.useEmojiPicker=useEmojiPicker;function useEmojiPicker(ref,props,options={}){const targets=[];const state=useState({isOpen:false});const newOptions={...options,onClose:()=>{state.isOpen=false;options.onClose?.();},};const popover=usePopover(EmojiPicker,{...newOptions,animation:false,popoverClass:"border-secondary",});props.storeScroll={scrollValue:0,set:(value)=>{props.storeScroll.scrollValue=value;},get:()=>{return props.storeScroll.scrollValue;},};function add(ref,onSelect,{show=false}={}){const toggler=()=>toggle(ref,onSelect);targets.push([ref,toggler]);if(!ref.el){return;}
ref.el.addEventListener("click",toggler);ref.el.addEventListener("mouseenter",loadEmoji);if(show){ref.el.click();}}
function toggle(ref,onSelect=props.onSelect){if(popover.isOpen){popover.close();}else{state.isOpen=true;popover.open(ref.el,{...props,onSelect});}}
if(ref){add(ref);}
onMounted(()=>{for(const[ref,toggle]of targets){if(!ref.el){continue;}
ref.el.addEventListener("click",toggle);ref.el.addEventListener("mouseenter",loadEmoji);}});onWillPatch(()=>{for(const[ref,toggle]of targets){if(!ref.el){continue;}
ref.el.removeEventListener("click",toggle);ref.el.removeEventListener("mouseenter",loadEmoji);}});onPatched(()=>{for(const[ref,toggle]of targets){if(!ref.el){continue;}
ref.el.addEventListener("click",toggle);ref.el.addEventListener("mouseenter",loadEmoji);}});Object.assign(state,{add});return state;}
const loadingListeners=[];const loader=__exports.loader={loadEmoji:()=>loadBundle("web.assets_emoji"),loaded:undefined,onEmojiLoaded(cb){loadingListeners.push(cb);},};__exports.loadEmoji=loadEmoji;async function loadEmoji(){const res={categories:[],emojis:[]};try{await loader.loadEmoji();const{getCategories,getEmojis}=odoo.loader.modules.get("@web/core/emoji_picker/emoji_data");res.categories=getCategories();res.emojis=getEmojis();return res;}catch{return res;}finally{if(!loader.loaded){loader.loaded={emojiValueToShortcode:{}};for(const emoji of res.emojis){const value=emoji.codepoints;const shortcode=emoji.shortcodes[0];loader.loaded.emojiValueToShortcode[value]=shortcode;for(const listener of loadingListeners){listener();}
loadingListeners.length=0;}}}}
const EMOJI_PICKER_PROPS=__exports.EMOJI_PICKER_PROPS=["close?","onClose?","onSelect","state?","storeScroll?"];const EmojiPicker=__exports.EmojiPicker=class EmojiPicker extends Component{static props=EMOJI_PICKER_PROPS;static template="web.EmojiPicker";categories=null;emojis=null;shouldScrollElem=null;lastSearchTerm;keyboardNavigated=false;setup(){this.gridRef=useRef("emoji-grid");this.navbarRef=useRef("navbar");this.ui=useState(useService("ui"));this.isMobileOS=isMobileOS();this.state=useState({activeEmojiIndex:0,categoryId:null,recent:JSON.parse(browser.localStorage.getItem("web.emoji.frequent")||"{}"),searchTerm:"",});const onStorage=(ev)=>{if(ev.key==="web.emoji.frequent"){this.state.recent=ev.newValue?JSON.parse(ev.newValue):{};}else if(ev.key===null){this.state.recent={};}};browser.addEventListener("storage",onStorage);onWillDestroy(()=>{browser.removeEventListener("storage",onStorage);});useAutofocus();onWillStart(async()=>{const{categories,emojis}=await loadEmoji();this.categories=categories;this.emojis=emojis;this.emojiByCodepoints=Object.fromEntries(this.emojis.map((emoji)=>[emoji.codepoints,emoji]));this.recentCategory={name:"Frequently used",displayName:_t("Frequently used"),title:"🕓",sortId:0,};this.state.categoryId=this.recentEmojis.length?this.recentCategory.sortId:this.categories[0].sortId;});onMounted(()=>{this.navbarResizeObserver=new ResizeObserver(()=>this.adaptNavbar());this.navbarResizeObserver.observe(this.navbarRef.el);this.adaptNavbar();if(this.emojis.length===0){return;}
this.highlightActiveCategory();if(this.props.storeScroll){this.gridRef.el.scrollTop=this.props.storeScroll.get();}});onPatched(()=>{if(this.emojis.length===0){return;}
if(this.shouldScrollElem){this.shouldScrollElem=false;const getElement=()=>this.gridRef.el.querySelector(`.o-EmojiPicker-category[data-category="${this.state.categoryId}"`);const elem=getElement();if(elem){elem.scrollIntoView();}else{this.shouldScrollElem=getElement;}}});useEffect(()=>this.updateEmojiPickerRepr(),()=>[this.state.categoryId,this.state.searchTerm]);useEffect((el)=>{const gridEl=this.gridRef?.el;const activeEl=gridEl?.querySelector(".o-Emoji.o-active");if(gridEl&&activeEl&&this.keyboardNavigated&&!isElementVisible(activeEl,gridEl)){activeEl.scrollIntoView({block:"center",behavior:"instant"});this.keyboardNavigated=false;}},()=>[this.state.activeEmojiIndex,this.gridRef?.el]);useEffect(()=>{if(this.searchTerm){this.gridRef.el.scrollTop=0;this.state.categoryId=null;}else{if(this.lastSearchTerm){this.gridRef.el.scrollTop=0;}
this.highlightActiveCategory();}
this.lastSearchTerm=this.searchTerm;},()=>[this.searchTerm]);onWillUnmount(()=>{this.navbarResizeObserver.disconnect();if(!this.gridRef.el){return;}
if(this.props.storeScroll){this.props.storeScroll.set(this.gridRef.el.scrollTop);}});}
adaptNavbar(){const computedStyle=getComputedStyle(this.navbarRef.el);const availableWidth=this.navbarRef.el.getBoundingClientRect().width-
parseInt(computedStyle.paddingLeft)-
parseInt(computedStyle.marginLeft)-
parseInt(computedStyle.paddingLeft)-
parseInt(computedStyle.marginLeft);const itemWidth=this.navbarRef.el.querySelector(".o-Emoji").getBoundingClientRect().width;const gapWidth=parseInt(computedStyle.gap);const maxAvailableNavbarItemAmountAtOnce=Math.floor(availableWidth/(itemWidth+gapWidth));const repr=[];let panel=[];const allCategories=this.getAllCategories();for(const category of allCategories){if(panel.length===maxAvailableNavbarItemAmountAtOnce-1&&category!==allCategories.at(-1)){panel.push("next");repr.push(panel);panel=[];panel.push("previous");}
panel.push(category.sortId);}
if(panel.length>0){if(repr.length>0){panel.push(...[...Array(maxAvailableNavbarItemAmountAtOnce-panel.length)].map((_,idx)=>"empty_"+idx));}
repr.push(panel);}
this.state.emojiNavbarRepr=repr;}
get currentNavbarPanel(){if(!this.state.emojiNavbarRepr){return this.getAllCategories().map((c)=>c.sortId);}
if(this.state.categoryId===null||Number.isNaN(this.state.categoryId)){return this.state.emojiNavbarRepr[0];}
return this.state.emojiNavbarRepr.find((panel)=>panel.includes(this.state.categoryId));}
get searchTerm(){return this.props.state?this.props.state.searchTerm:this.state.searchTerm;}
set searchTerm(value){if(this.props.state){this.props.state.searchTerm=value;}else{this.state.searchTerm=value;}}
get itemsNumber(){return this.recentEmojis.length+this.getEmojis().length;}
get recentEmojis(){const recent=Object.entries(this.state.recent).sort(([,usage_1],[,usage_2])=>usage_2-usage_1).map(([codepoints])=>this.emojiByCodepoints[codepoints]);if(this.searchTerm&&recent.length>0){return fuzzyLookup(this.searchTerm,recent,(emoji)=>[emoji.name,...emoji.keywords,...emoji.emoticons,...emoji.shortcodes,]);}
return recent.slice(0,42);}
onClick(ev){markEventHandled(ev,"emoji.selectEmoji");}
onClickToNextCategories(){const panelIndex=this.state.emojiNavbarRepr.findIndex((p)=>p.includes(this.state.categoryId));this.selectCategory(this.state.emojiNavbarRepr[panelIndex+1][1]);}
onClickToPreviousCategories(){const panelIndex=this.state.emojiNavbarRepr.findIndex((p)=>p.includes(this.state.categoryId));this.selectCategory(this.state.emojiNavbarRepr[panelIndex-1].at(-2));}
updateEmojiPickerRepr(){const emojiEls=Array.from(this.gridRef.el.querySelectorAll(".o-Emoji"));const emojiRects=emojiEls.map((el)=>el.getBoundingClientRect());this.emojiMatrix=[];for(const[index,pos]of emojiRects.entries()){const emojiIndex=emojiEls[index].dataset.index;if(this.emojiMatrix.length===0||pos.top>emojiRects[index-1].top){this.emojiMatrix.push([]);}
this.emojiMatrix.at(-1).push(parseInt(emojiIndex));}}
handleNavigation(key){const currentIdx=this.state.activeEmojiIndex;let currentRow=-1;let currentCol=-1;const rowIdx=this.emojiMatrix.findIndex((row)=>row.includes(currentIdx));if(rowIdx!==-1){currentRow=rowIdx;currentCol=this.emojiMatrix[currentRow].indexOf(currentIdx);}
let newIdx;switch(key){case"ArrowDown":{const rowBelow=this.emojiMatrix[currentRow+1];const rowBelowBelow=this.emojiMatrix[currentRow+2];if(rowBelow?.length<=currentCol&&rowBelowBelow?.length>=currentCol){newIdx=rowBelowBelow?.[currentCol];}else{newIdx=rowBelow?.[Math.min(currentCol,rowBelow.length-1)];}
break;}
case"ArrowUp":{const rowAbove=this.emojiMatrix[currentRow-1];const rowAboveAbove=this.emojiMatrix[currentRow-2];if(rowAbove?.length<=currentCol&&rowAboveAbove?.length>=currentCol){newIdx=rowAboveAbove?.[currentCol];}else{newIdx=rowAbove?.[Math.min(currentCol,rowAbove.length-1)];}
break;}
case"ArrowRight":{const colRight=currentCol+1;if(colRight===this.emojiMatrix[currentRow].length){const rowBelowRight=this.emojiMatrix[currentRow+1];newIdx=rowBelowRight?.[0];}else{newIdx=this.emojiMatrix[currentRow][colRight];}
break;}
case"ArrowLeft":{const colLeft=currentCol-1;if(colLeft<0){const rowAboveLeft=this.emojiMatrix[currentRow-1];newIdx=rowAboveLeft?.[rowAboveLeft.length-1]??this.state.activeEmojiIndex;}else{newIdx=this.emojiMatrix[currentRow][colLeft];}
break;}}
this.state.activeEmojiIndex=newIdx??this.state.activeEmojiIndex;}
onKeydown(ev){switch(ev.key){case"ArrowDown":case"ArrowUp":case"ArrowRight":case"ArrowLeft":this.handleNavigation(ev.key);this.keyboardNavigated=true;break;case"Enter":ev.preventDefault();this.gridRef.el.querySelector(`.o-EmojiPicker-content .o-Emoji[data-index="${this.state.activeEmojiIndex}"]`)?.click();break;case"Escape":this.props.close?.();this.props.onClose?.();ev.stopPropagation();}}
getAllCategories(){const res=[...this.categories];if(this.recentEmojis.length>0){res.unshift(this.recentCategory);}
return res;}
getEmojis(){let emojisToDisplay=[...this.emojis];const recentEmojis=this.recentEmojis;if(recentEmojis.length>0&&this.searchTerm){emojisToDisplay=emojisToDisplay.filter((emoji)=>!recentEmojis.includes(emoji));}
if(this.searchTerm.length>1){return fuzzyLookup(this.searchTerm,emojisToDisplay,(emoji)=>[emoji.name,...emoji.keywords,...emoji.emoticons,...emoji.shortcodes,]);}
return emojisToDisplay;}
getEmojisFromSearch(){return[...this.recentEmojis,...this.getEmojis()];}
selectCategory(categoryId){this.searchTerm="";this.state.categoryId=categoryId;this.shouldScrollElem=true;}
selectEmoji(ev){const codepoints=ev.currentTarget.dataset.codepoints;const resetOnSelect=!ev.shiftKey&&!this.ui.isSmall;this.props.onSelect(codepoints,resetOnSelect);this.state.recent[codepoints]??=0;this.state.recent[codepoints]++;browser.localStorage.setItem("web.emoji.frequent",JSON.stringify(this.state.recent));if(resetOnSelect){this.gridRef.el.scrollTop=0;this.props.close?.();this.props.onClose?.();}}
highlightActiveCategory(){if(!this.gridRef||!this.gridRef.el){return;}
const coords=this.gridRef.el.getBoundingClientRect();const res=document.elementFromPoint(coords.x+10,coords.y+10);if(!res){return;}
this.state.categoryId=parseInt(res.dataset.category);}}
function isElementVisible(el,holder){const offset=20;holder=holder||document.body;const{top,bottom,height}=el.getBoundingClientRect();let{top:holderTop,bottom:holderBottom}=holder.getBoundingClientRect();holderTop+=offset*2;holderBottom-=offset;return top-offset<=holderTop?holderTop-top<=height:bottom-holderBottom<=height;}
return __exports;});;

/* /web/static/src/core/ensure_jquery.js */
odoo.define('@web/core/ensure_jquery',['@web/core/assets'],function(require){'use strict';let __exports={};const{loadBundle,loadJS}=require("@web/core/assets");__exports.ensureJQuery=ensureJQuery;async function ensureJQuery(){if(!window.jQuery){await loadBundle("web._assets_jquery");const BTS_CLASSES=["Carousel","Dropdown","Modal","Popover","Tooltip","Collapse"];const $=window.jQuery;for(const CLS of BTS_CLASSES){const plugin=window[CLS];if(plugin){const name=plugin.NAME;const JQUERY_NO_CONFLICT=$.fn[name];$.fn[name]=plugin.jQueryInterface;$.fn[name].Constructor=plugin;$.fn[name].noConflict=()=>{$.fn[name]=JQUERY_NO_CONFLICT;return plugin.jQueryInterface;};}}}else if(!window.jQuery.fn.getScrollingElement){await loadJS("/web/static/src/legacy/js/libs/jquery.js");}}
return __exports;});;

/* /web/static/src/core/errors/error_dialogs.js */
odoo.define('@web/core/errors/error_dialogs',['@web/core/browser/browser','@web/core/dialog/dialog','@web/core/l10n/translation','@web/core/registry','@web/core/tooltip/tooltip','@web/core/popover/popover_hook','@web/core/utils/hooks','@web/core/utils/strings','@odoo/owl'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{Dialog}=require("@web/core/dialog/dialog");const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{Tooltip}=require("@web/core/tooltip/tooltip");const{usePopover}=require("@web/core/popover/popover_hook");const{useService}=require("@web/core/utils/hooks");const{capitalize}=require("@web/core/utils/strings");const{Component,useRef,useState,markup}=require("@odoo/owl");const{DateTime}=luxon;const standardErrorDialogProps=__exports.standardErrorDialogProps={traceback:{type:[String,{value:null}],optional:true},message:{type:String,optional:true},name:{type:String,optional:true},exceptionName:{type:[String,{value:null}],optional:true},data:{type:[Object,{value:null}],optional:true},subType:{type:[String,{value:null}],optional:true},code:{type:[Number,String,{value:null}],optional:true},type:{type:[String,{value:null}],optional:true},serverHost:{type:[String,{value:null}],optional:true},id:{type:[Number,{value:null}],optional:true},model:{type:[String,{value:null}],optional:true},close:Function,};const odooExceptionTitleMap=__exports.odooExceptionTitleMap=new Map(Object.entries({"odoo.addons.base.models.ir_mail_server.MailDeliveryException":_t("MailDeliveryException"),"odoo.exceptions.AccessDenied":_t("Access Denied"),"odoo.exceptions.MissingError":_t("Missing Record"),"odoo.addons.web.controllers.action.MissingActionError":_t("Missing Action"),"odoo.exceptions.UserError":_t("Invalid Operation"),"odoo.exceptions.ValidationError":_t("Validation Error"),"odoo.exceptions.AccessError":_t("Access Error"),"odoo.exceptions.Warning":_t("Warning"),}));const ErrorDialog=__exports.ErrorDialog=class ErrorDialog extends Component{static template="web.ErrorDialog";static components={Dialog};static title=_t("Odoo Error");static showTracebackButtonText=_t("See technical details");static hideTracebackButtonText=_t("Hide technical details");static props={...standardErrorDialogProps};setup(){this.state=useState({showTraceback:false,});this.copyButtonRef=useRef("copyButton");this.popover=usePopover(Tooltip);this.contextDetails="Occured ";if(this.props.serverHost){this.contextDetails+=`on ${this.props.serverHost} `;}
if(this.props.model&&this.props.id){this.contextDetails+=`on model ${this.props.model} and id ${this.props.id} `;}
this.contextDetails+=`on ${DateTime.now()
            .setZone("UTC")
            .toFormat("yyyy-MM-dd HH:mm:ss")} GMT`;}
showTooltip(){this.popover.open(this.copyButtonRef.el,{tooltip:_t("Copied")});browser.setTimeout(this.popover.close,800);}
onClickClipboard(){browser.navigator.clipboard.writeText(`${this.props.name}\n\n${this.props.message}\n\n${this.contextDetails}\n\n${this.props.traceback}`);this.showTooltip();}}
const ClientErrorDialog=__exports.ClientErrorDialog=class ClientErrorDialog extends ErrorDialog{}
ClientErrorDialog.title=_t("Odoo Client Error");const NetworkErrorDialog=__exports.NetworkErrorDialog=class NetworkErrorDialog extends ErrorDialog{}
NetworkErrorDialog.title=_t("Odoo Network Error");const RPCErrorDialog=__exports.RPCErrorDialog=class RPCErrorDialog extends ErrorDialog{setup(){super.setup();this.inferTitle();this.traceback=this.props.traceback;if(this.props.data&&this.props.data.debug){this.traceback=`${this.props.data.debug}\nThe above server error caused the following client error:\n${this.traceback}`;}}
inferTitle(){if(this.props.exceptionName&&odooExceptionTitleMap.has(this.props.exceptionName)){this.title=odooExceptionTitleMap.get(this.props.exceptionName).toString();return;}
if(!this.props.type){return;}
switch(this.props.type){case"server":this.title=_t("Odoo Server Error");break;case"script":this.title=_t("Odoo Client Error");break;case"network":this.title=_t("Odoo Network Error");break;}}
onClickClipboard(){browser.navigator.clipboard.writeText(`${this.props.name}\n\n${this.props.message}\n\n${this.contextDetails}\n\n${this.traceback}`);this.showTooltip();}}
const WarningDialog=__exports.WarningDialog=class WarningDialog extends Component{static template="web.WarningDialog";static components={Dialog};static props={...standardErrorDialogProps,title:{type:String,optional:true},};setup(){this.title=this.inferTitle();const{data,message}=this.props;if(data&&data.arguments&&data.arguments.length>0){this.message=data.arguments[0];}else{this.message=message;}}
inferTitle(){if(this.props.exceptionName&&odooExceptionTitleMap.has(this.props.exceptionName)){return odooExceptionTitleMap.get(this.props.exceptionName).toString();}
return this.props.title||_t("Odoo Warning");}}
const RedirectWarningDialog=__exports.RedirectWarningDialog=class RedirectWarningDialog extends Component{static template="web.RedirectWarningDialog";static components={Dialog};static props={...standardErrorDialogProps};setup(){this.actionService=useService("action");const{data,subType}=this.props;const[message,actionId,buttonText,additionalContext]=data.arguments;this.title=capitalize(subType)||_t("Odoo Warning");this.message=message;this.actionId=actionId;this.buttonText=buttonText;this.additionalContext=additionalContext;}
async onClick(){const options={};if(this.additionalContext){options.additionalContext=this.additionalContext;}
if(this.actionId.help){this.actionId.help=markup(this.actionId.help);}
await this.actionService.doAction(this.actionId,options);this.props.close();}}
const Error504Dialog=__exports.Error504Dialog=class Error504Dialog extends Component{static template="web.Error504Dialog";static components={Dialog};static props={...standardErrorDialogProps};}
const SessionExpiredDialog=__exports.SessionExpiredDialog=class SessionExpiredDialog extends Component{static template="web.SessionExpiredDialog";static components={Dialog};static props={...standardErrorDialogProps};onClick(){browser.location.reload();}}
registry.category("error_dialogs").add("odoo.exceptions.AccessDenied",WarningDialog).add("odoo.exceptions.AccessError",WarningDialog).add("odoo.exceptions.MissingError",WarningDialog).add("odoo.addons.web.controllers.action.MissingActionError",WarningDialog).add("odoo.exceptions.UserError",WarningDialog).add("odoo.exceptions.ValidationError",WarningDialog).add("odoo.exceptions.RedirectWarning",RedirectWarningDialog).add("odoo.http.SessionExpiredException",SessionExpiredDialog).add("werkzeug.exceptions.Forbidden",SessionExpiredDialog).add("504",Error504Dialog);return __exports;});;

/* /web/static/src/core/errors/error_service.js */
odoo.define('@web/core/errors/error_service',['@web/core/browser/browser','@web/core/registry','@web/core/errors/error_utils','@web/core/browser/feature_detection'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const{completeUncaughtError,getErrorTechnicalName}=require("@web/core/errors/error_utils");const{isBrowserFirefox,isBrowserChrome}=require("@web/core/browser/feature_detection");const UncaughtError=__exports.UncaughtError=class UncaughtError extends Error{constructor(message){super(message);this.name=getErrorTechnicalName(this);this.traceback=null;}}
const UncaughtClientError=__exports.UncaughtClientError=class UncaughtClientError extends UncaughtError{constructor(message="Uncaught Javascript Error"){super(message);}}
const UncaughtPromiseError=__exports.UncaughtPromiseError=class UncaughtPromiseError extends UncaughtError{constructor(message="Uncaught Promise"){super(message);this.unhandledRejectionEvent=null;}}
const ThirdPartyScriptError=__exports.ThirdPartyScriptError=class ThirdPartyScriptError extends UncaughtError{constructor(message="Third-Party Script Error"){super(message);}}
const errorService=__exports.errorService={start(env){function handleError(uncaughtError,retry=true){function shouldLogError(){return(uncaughtError.event&&!uncaughtError.event.defaultPrevented&&uncaughtError.traceback);}
let originalError=uncaughtError;while(originalError instanceof Error&&"cause"in originalError){originalError=originalError.cause;}
for(const[name,handler]of registry.category("error_handlers").getEntries()){try{if(handler(env,uncaughtError,originalError)){break;}}catch(e){if(shouldLogError()){uncaughtError.event.preventDefault();console.error(`@web/core/error_service: handler "${name}" failed with "${
                                e.cause || e
                            }" while trying to handle:\n`+uncaughtError.traceback);}
return;}}
if(shouldLogError()){uncaughtError.event.preventDefault();console.error(uncaughtError.traceback);}}
browser.addEventListener("error",async(ev)=>{const{colno,error,filename,lineno,message}=ev;const errorsToIgnore=["ResizeObserver loop completed with undelivered notifications.","ResizeObserver loop limit exceeded",];if(!(error instanceof Error)&&errorsToIgnore.includes(message)){ev.preventDefault();return;}
const isRedactedError=!filename&&!lineno&&!colno;const isThirdPartyScriptError=isRedactedError||(isBrowserFirefox()&&new URL(filename).origin!==window.location.origin);if(isThirdPartyScriptError&&!odoo.debug){return;}
let uncaughtError;if(isRedactedError){uncaughtError=new ThirdPartyScriptError();uncaughtError.traceback=`An error whose details cannot be accessed by the Odoo framework has occurred.\n`+`The error probably originates from a JavaScript file served from a different origin.\n`+`The full error is available in the browser console.`;}else{uncaughtError=new UncaughtClientError();uncaughtError.event=ev;if(error instanceof Error){error.errorEvent=ev;const annotated=env.debug&&env.debug.includes("assets");await completeUncaughtError(uncaughtError,error,annotated);}}
uncaughtError.cause=error;handleError(uncaughtError);});browser.addEventListener("unhandledrejection",async(ev)=>{const error=ev.reason;let traceback;if(isBrowserChrome()&&ev instanceof CustomEvent&&error===undefined){if(!odoo.debug){return;}
traceback=`Uncaught unknown Error\n`+`An unknown error occured. This may be due to a Chrome extension meddling with Odoo.\n`+`(Opening your browser console might give you a hint on the error.)`;}
const uncaughtError=new UncaughtPromiseError();uncaughtError.unhandledRejectionEvent=ev;uncaughtError.event=ev;uncaughtError.traceback=traceback;if(error instanceof Error){error.errorEvent=ev;const annotated=env.debug&&env.debug.includes("assets");await completeUncaughtError(uncaughtError,error,annotated);}
uncaughtError.cause=error;handleError(uncaughtError);});},};registry.category("services").add("error",errorService,{sequence:1});return __exports;});;

/* /web/static/src/core/errors/error_utils.js */
odoo.define('@web/core/errors/error_utils',['@web/core/assets'],function(require){'use strict';let __exports={};const{loadJS}=require("@web/core/assets");function combineErrorNames(uncaughtError,originalError){const originalErrorName=getErrorTechnicalName(originalError);const uncaughtErrorName=getErrorTechnicalName(uncaughtError);if(originalErrorName===Error.name){return uncaughtErrorName;}else{return`${uncaughtErrorName} > ${originalErrorName}`;}}
__exports.fullTraceback=fullTraceback;function fullTraceback(error){let traceback=formatTraceback(error);let current=error.cause;while(current){traceback+=`\n\nCaused by: ${
            current instanceof Error ? formatTraceback(current) : current
        }`;current=current.cause;}
return traceback;}
__exports.fullAnnotatedTraceback=fullAnnotatedTraceback;async function fullAnnotatedTraceback(error){if(error.annotatedTraceback){return error.annotatedTraceback;}
if(error.errorEvent){error.errorEvent.preventDefault();}
let traceback;try{traceback=await annotateTraceback(error);let current=error.cause;while(current){traceback+=`\n\nCaused by: ${
                current instanceof Error ? await annotateTraceback(current) : current
            }`;current=current.cause;}}catch(e){console.warn("Failed to annotate traceback for error:",error,"failure reason:",e);traceback=fullTraceback(error);}
error.annotatedTraceback=traceback;if(error.errorEvent){throw error;}
return traceback;}
__exports.completeUncaughtError=completeUncaughtError;async function completeUncaughtError(uncaughtError,originalError,annotated=false){uncaughtError.name=combineErrorNames(uncaughtError,originalError);if(annotated){uncaughtError.traceback=await fullAnnotatedTraceback(originalError);}else{uncaughtError.traceback=fullTraceback(originalError);}
if(originalError.message){uncaughtError.message=`${uncaughtError.message} > ${originalError.message}`;}
uncaughtError.cause=originalError;}
__exports.getErrorTechnicalName=getErrorTechnicalName;function getErrorTechnicalName(error){return error.name!==Error.name?error.name:error.constructor.name;}
__exports.formatTraceback=formatTraceback;function formatTraceback(error){let traceback=error.stack;const errorName=getErrorTechnicalName(error);const descriptionLine=`${errorName}: ${error.message}`;if(error.stack.split("\n")[0].trim()!==descriptionLine){traceback=`${descriptionLine}\n${error.stack}`.replace(/\n/g,"\n    ");}
return traceback;}
__exports.annotateTraceback=annotateTraceback;async function annotateTraceback(error){const traceback=formatTraceback(error);try{await loadJS("/web/static/lib/stacktracejs/stacktrace.js");}catch{return traceback;}
if(error.stack){const regex=/ line (\d*) > (Function):(\d*)/gm;const subst=`:$1`;error.stack=error.stack.replace(regex,subst);}
let frames;try{frames=await StackTrace.fromError(error);}catch(e){console.warn("The following error could not be annotated:",error,e);return traceback;}
const lines=traceback.split("\n");if(lines[lines.length-1].trim()===""){lines.splice(-1);}
let lineIndex=0;let frameIndex=0;while(frameIndex<frames.length){const line=lines[lineIndex];if(!line.match(/:\d+:\d+\)?$/)){lineIndex++;continue;}
const frame=frames[frameIndex];const info=` (${frame.fileName}:${frame.lineNumber})`;lines[lineIndex]=line+info;lineIndex++;frameIndex++;}
return lines.join("\n");}
return __exports;});;

/* /web/static/src/core/errors/scss_error_dialog.js */
odoo.define('@web/core/errors/scss_error_dialog',['@web/core/browser/browser','@web/core/registry','@web/core/l10n/translation','@web/core/utils/urls'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const{_t,translationIsReady}=require("@web/core/l10n/translation");const{getOrigin}=require("@web/core/utils/urls");const scssErrorNotificationService={dependencies:["notification"],start(env,{notification}){const origin=getOrigin();const assets=[...document.styleSheets].filter((sheet)=>{return(sheet.href?.includes("/web")&&sheet.href?.includes("/assets/")&&new URL(sheet.href,browser.location.origin).origin===origin);});translationIsReady.then(()=>{for(const asset of assets){let cssRules;try{cssRules=asset.cssRules;}catch{continue;}
const lastRule=cssRules?.[cssRules?.length-1];if(lastRule?.selectorText==="css_error_message"){const message=_t("The style compilation failed. This is an administrator or developer error that must be fixed for the entire database before continuing working. See browser console or server logs for details.");notification.add(message,{title:_t("Style error"),sticky:true,type:"danger",});console.log(lastRule.style.content.replaceAll("\\a","\n").replaceAll("\\*","*").replaceAll(`\\"`,`"`));}}});},};registry.category("services").add("scss_error_display",scssErrorNotificationService);return __exports;});;

/* /web/static/src/core/expression_editor/expression_editor.js */
odoo.define('@web/core/expression_editor/expression_editor',['@odoo/owl','@web/core/expression_editor/expression_editor_operator_editor','@web/core/tree_editor/condition_tree','@web/core/tree_editor/tree_editor','@web/core/tree_editor/tree_editor_operator_editor','@web/core/tree_editor/tree_editor_value_editors','@web/core/tree_editor/utils','@web/core/model_field_selector/model_field_selector','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{Component,onWillStart,onWillUpdateProps}=require("@odoo/owl");const{getExpressionDisplayedOperators}=require("@web/core/expression_editor/expression_editor_operator_editor");const{condition,expressionFromTree,treeFromExpression,}=require("@web/core/tree_editor/condition_tree");const{TreeEditor}=require("@web/core/tree_editor/tree_editor");const{getOperatorEditorInfo}=require("@web/core/tree_editor/tree_editor_operator_editor");const{getDefaultValue}=require("@web/core/tree_editor/tree_editor_value_editors");const{getDefaultPath}=require("@web/core/tree_editor/utils");const{ModelFieldSelector}=require("@web/core/model_field_selector/model_field_selector");const{_t}=require("@web/core/l10n/translation");const ExpressionEditor=__exports.ExpressionEditor=class ExpressionEditor extends Component{static template="web.ExpressionEditor";static components={TreeEditor};static props={resModel:String,fields:Object,expression:String,update:Function,};setup(){onWillStart(()=>this.onPropsUpdated(this.props));onWillUpdateProps((nextProps)=>this.onPropsUpdated(nextProps));}
async onPropsUpdated(props){this.filteredFields=Object.fromEntries(Object.entries(props.fields).filter(([_,fieldDef])=>fieldDef.type!=="properties"));try{this.tree=treeFromExpression(props.expression,{getFieldDef:(name)=>this.getFieldDef(name,props),distributeNot:!this.isDebugMode,});}catch{this.tree=null;}}
getFieldDef(name,props=this.props){if(typeof name==="string"){return props.fields[name]||null;}
return null;}
getDefaultCondition(){const defaultPath=getDefaultPath(this.filteredFields);const fieldDef=this.filteredFields[defaultPath];const operator=getExpressionDisplayedOperators(fieldDef)[0];const value=getDefaultValue(fieldDef,operator);return condition(fieldDef.name,operator,value);}
getDefaultOperator(fieldDef){return getExpressionDisplayedOperators(fieldDef)[0];}
getOperatorEditorInfo(fieldDef){const operators=getExpressionDisplayedOperators(fieldDef);return getOperatorEditorInfo(operators,fieldDef);}
getPathEditorInfo(resModel,defaultCondition){if(resModel!==this.props.resModel){throw new Error(`Expression editor doesn't support tree as value so resModel has to be props.resModel`);}
return{component:ModelFieldSelector,extractProps:({value,update})=>({path:value,update,resModel:this.props.resModel,readonly:false,filter:(fieldDef)=>fieldDef.name in this.filteredFields,showDebugInput:false,followRelations:false,isDebugMode:this.isDebugMode,}),isSupported:(value)=>[0,1].includes(value)||value in this.filteredFields,stringify:(value)=>this.props.fields[value].string,defaultValue:()=>defaultCondition.path,message:_t("Field properties not supported"),};}
get isDebugMode(){return!!this.env.debug;}
onExpressionChange(expression){this.props.update(expression);}
resetExpression(){this.props.update("True");}
update(tree){const expression=expressionFromTree(tree,{getFieldDef:(name)=>this.getFieldDef(name),});this.props.update(expression);}}
return __exports;});;

/* /web/static/src/core/expression_editor/expression_editor_operator_editor.js */
odoo.define('@web/core/expression_editor/expression_editor_operator_editor',['@web/core/domain_selector/domain_selector_operator_editor'],function(require){'use strict';let __exports={};const{getDomainDisplayedOperators}=require("@web/core/domain_selector/domain_selector_operator_editor");const EXPRESSION_VALID_OPERATORS=["<","<=",">",">=","between","within","in","not in","=","!=","set","not_set","is","is_not",];__exports.getExpressionDisplayedOperators=getExpressionDisplayedOperators;function getExpressionDisplayedOperators(fieldDef){const operators=getDomainDisplayedOperators(fieldDef);return operators.filter((operator)=>EXPRESSION_VALID_OPERATORS.includes(operator));}
return __exports;});;

/* /web/static/src/core/expression_editor_dialog/expression_editor_dialog.js */
odoo.define('@web/core/expression_editor_dialog/expression_editor_dialog',['@odoo/owl','@web/core/dialog/dialog','@web/core/expression_editor/expression_editor','@web/core/py_js/py','@web/core/utils/hooks','@web/core/l10n/translation','@web/core/user'],function(require){'use strict';let __exports={};const{Component,useRef,useState}=require("@odoo/owl");const{Dialog}=require("@web/core/dialog/dialog");const{ExpressionEditor}=require("@web/core/expression_editor/expression_editor");const{evaluateExpr}=require("@web/core/py_js/py");const{useService}=require("@web/core/utils/hooks");const{_t}=require("@web/core/l10n/translation");const{user}=require("@web/core/user");const ExpressionEditorDialog=__exports.ExpressionEditorDialog=class ExpressionEditorDialog extends Component{static components={Dialog,ExpressionEditor};static template="web.ExpressionEditorDialog";static props={close:Function,resModel:String,fields:Object,expression:String,onConfirm:Function,};setup(){this.notification=useService("notification");this.state=useState({expression:this.props.expression,});this.confirmButtonRef=useRef("confirm");}
get expressionEditorProps(){return{resModel:this.props.resModel,fields:this.props.fields,expression:this.state.expression,update:(expression)=>{this.state.expression=expression;},};}
makeDefaultRecord(){const record={};for(const[name,{type}]of Object.entries(this.props.fields)){switch(type){case"integer":case"float":case"monetary":record[name]=name==="id"?false:0;break;case"one2many":case"many2many":record[name]=[];break;default:record[name]=false;}}
return record;}
async onConfirm(){this.confirmButtonRef.el.disabled=true;const record=this.makeDefaultRecord();const evalContext={...user.context,...record};try{evaluateExpr(this.state.expression,evalContext);}catch{if(this.confirmButtonRef.el){this.confirmButtonRef.el.disabled=false;}
this.notification.add(_t("Expression is invalid. Please correct it"),{type:"danger",});return;}
this.props.onConfirm(this.state.expression);this.props.close();}
onDiscard(){this.props.close();}}
return __exports;});;

/* /web/static/src/core/field_service.js */
odoo.define('@web/core/field_service',['@web/core/utils/cache','@web/core/domain','@web/core/registry'],function(require){'use strict';let __exports={};const{Cache}=require("@web/core/utils/cache");const{Domain}=require("@web/core/domain");const{registry}=require("@web/core/registry");const fieldService=__exports.fieldService={dependencies:["orm"],async:["loadFields","loadPath","loadPropertyDefinitions"],start(env,{orm}){const cache=new Cache((resModel,options)=>{return orm.call(resModel,"fields_get",[options.fieldNames,options.attributes]).catch((error)=>{cache.clear(resModel,options);return Promise.reject(error);});},(resModel,options)=>JSON.stringify([resModel,options.fieldNames,options.attributes]));env.bus.addEventListener("CLEAR-CACHES",()=>cache.invalidate());async function loadFields(resModel,options={}){if(typeof resModel!=="string"||!resModel){throw new Error(`Invalid model name: ${resModel}`);}
return cache.read(resModel,options);}
async function _loadPropertyDefinitions(fieldDefs,name,domain=[]){const{definition_record:definitionRecord,definition_record_field:definitionRecordField,}=fieldDefs[name];const definitionRecordModel=fieldDefs[definitionRecord].relation;domain=Domain.and([[[definitionRecordField,"!=",false]],domain]).toList();const result=await orm.webSearchRead(definitionRecordModel,domain,{specification:{display_name:{},[definitionRecordField]:{},},});const definitions={};for(const record of result.records){for(const definition of record[definitionRecordField]){definitions[definition.name]={is_property:true,searchable:true,record_id:record.id,record_name:record.display_name,...definition,};}}
return definitions;}
async function loadPropertyDefinitions(resModel,fieldName,domain){const fieldDefs=await loadFields(resModel);return _loadPropertyDefinitions(fieldDefs,fieldName,domain);}
async function _loadPath(resModel,fieldDefs,names){if(!fieldDefs){return{isInvalid:"path",names,modelsInfo:[]};}
const[name,...remainingNames]=names;const modelsInfo=[{resModel,fieldDefs}];if(resModel==="*"&&remainingNames.length){return{isInvalid:"path",names,modelsInfo};}
const fieldDef=fieldDefs[name];if((name!=="*"&&!fieldDef)||(name==="*"&&remainingNames.length)){return{isInvalid:"path",names,modelsInfo};}
if(!remainingNames.length){return{names,modelsInfo};}
let subResult;if(fieldDef.relation){subResult=await _loadPath(fieldDef.relation,await loadFields(fieldDef.relation),remainingNames);}else if(fieldDef.type==="properties"){subResult=await _loadPath("*",await _loadPropertyDefinitions(fieldDefs,name),remainingNames);}
if(subResult){const result={names,modelsInfo:[...modelsInfo,...subResult.modelsInfo],};if(subResult.isInvalid){result.isInvalid="path";}
return result;}
return{isInvalid:"path",names,modelsInfo};}
async function loadPath(resModel,path="*"){const fieldDefs=await loadFields(resModel);if(typeof path!=="string"||!path){throw new Error(`Invalid path: ${path}`);}
return _loadPath(resModel,fieldDefs,path.split("."));}
return{loadFields,loadPath,loadPropertyDefinitions};},};registry.category("services").add("field",fieldService);return __exports;});;

/* /web/static/src/core/file_input/file_input.js */
odoo.define('@web/core/file_input/file_input',['@odoo/owl','@web/core/utils/files'],function(require){'use strict';let __exports={};const{Component,onMounted,useRef,useState}=require("@odoo/owl");const{useFileUploader}=require("@web/core/utils/files");const FileInput=__exports.FileInput=class FileInput extends Component{static template="web.FileInput";static defaultProps={acceptedFileExtensions:"*",hidden:false,multiUpload:false,onUpload:()=>{},route:"/web/binary/upload_attachment",beforeOpen:async()=>true,};static props={acceptedFileExtensions:{type:String,optional:true},autoOpen:{type:Boolean,optional:true},hidden:{type:Boolean,optional:true},multiUpload:{type:Boolean,optional:true},onUpload:{type:Function,optional:true},beforeOpen:{type:Function,optional:true},resId:{type:Number,optional:true},resModel:{type:String,optional:true},route:{type:String,optional:true},"*":true,};setup(){this.uploadFiles=useFileUploader();this.fileInputRef=useRef("file-input");this.state=useState({isDisable:false,});onMounted(()=>{if(this.props.autoOpen){this.onTriggerClicked();}});}
get httpParams(){const{resId,resModel}=this.props;const params={csrf_token:odoo.csrf_token,ufile:[...this.fileInputRef.el.files],};if(resModel){params.model=resModel;}
if(resId!==undefined){params.id=resId;}
return params;}
async onFileInputChange(){this.state.isDisable=true;const parsedFileData=await this.uploadFiles(this.props.route,this.httpParams);if(parsedFileData){this.props.onUpload(parsedFileData,this.fileInputRef.el?this.fileInputRef.el.files:[]);this.fileInputRef.el.value=null;}
this.state.isDisable=false;}
async onTriggerClicked(){if(await this.props.beforeOpen()){this.fileInputRef.el.click();}}}
return __exports;});;

/* /web/static/src/core/file_upload/file_upload_progress_bar.js */
odoo.define('@web/core/file_upload/file_upload_progress_bar',['@web/core/l10n/translation','@web/core/utils/hooks','@web/core/confirmation_dialog/confirmation_dialog','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{useService}=require("@web/core/utils/hooks");const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{Component}=require("@odoo/owl");const FileUploadProgressBar=__exports.FileUploadProgressBar=class FileUploadProgressBar extends Component{static template="web.FileUploadProgressBar";static props={fileUpload:{type:Object},};setup(){this.dialogService=useService("dialog");}
onCancel(){if(!this.props.fileUpload.xhr){return;}
this.dialogService.add(ConfirmationDialog,{body:_t("Do you really want to cancel the upload of %s?",this.props.fileUpload.title),confirm:()=>{this.props.fileUpload.xhr.abort();},});}}
return __exports;});;

/* /web/static/src/core/file_upload/file_upload_progress_container.js */
odoo.define('@web/core/file_upload/file_upload_progress_container',['@odoo/owl'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const FileUploadProgressContainer=__exports.FileUploadProgressContainer=class FileUploadProgressContainer extends Component{static template="web.FileUploadProgressContainer";static props={Component:{optional:false},shouldDisplay:{type:Function,optional:true},fileUploads:{type:Object},};}
return __exports;});;

/* /web/static/src/core/file_upload/file_upload_progress_record.js */
odoo.define('@web/core/file_upload/file_upload_progress_record',['@web/core/l10n/translation','@web/core/file_upload/file_upload_progress_bar','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{FileUploadProgressBar}=require("@web/core/file_upload/file_upload_progress_bar");const{Component}=require("@odoo/owl");const FileUploadProgressRecord=__exports.FileUploadProgressRecord=class FileUploadProgressRecord extends Component{static template="";static components={FileUploadProgressBar,};static props={fileUpload:Object,selector:{type:String,optional:true},};getProgressTexts(){const fileUpload=this.props.fileUpload;const percent=Math.round(fileUpload.progress*100);if(percent===100){return{left:_t("Processing..."),right:"",};}else{const mbLoaded=Math.round(fileUpload.loaded/1000000);const mbTotal=Math.round(fileUpload.total/1000000);return{left:_t("Uploading... (%s%)",percent),right:_t("(%(mbLoaded)s/%(mbTotal)sMB)",{mbLoaded,mbTotal}),};}}}
const FileUploadProgressKanbanRecord=__exports.FileUploadProgressKanbanRecord=class FileUploadProgressKanbanRecord extends FileUploadProgressRecord{static template="web.FileUploadProgressKanbanRecord";}
const FileUploadProgressDataRow=__exports.FileUploadProgressDataRow=class FileUploadProgressDataRow extends FileUploadProgressRecord{static template="web.FileUploadProgressDataRow";}
return __exports;});;

/* /web/static/src/core/file_upload/file_upload_service.js */
odoo.define('@web/core/file_upload/file_upload_service',['@web/core/l10n/translation','@web/core/registry','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{EventBus,reactive}=require("@odoo/owl");const fileUploadService=__exports.fileUploadService={dependencies:["notification"],createXhr(){return new window.XMLHttpRequest();},start(env,{notificationService}){const uploads=reactive({});let nextId=1;const bus=new EventBus();const upload=async(route,files,params={})=>{const xhr=this.createXhr();xhr.open("POST",route);const formData=new FormData();formData.append("csrf_token",odoo.csrf_token);for(const file of files){formData.append("ufile",file);}
if(params.buildFormData){params.buildFormData(formData);}
const upload=reactive({id:nextId++,xhr,data:formData,progress:0,loaded:0,total:0,state:"pending",title:files.length===1?files[0].name:_t("%s Files",files.length),type:files.length===1?files[0].type:undefined,});uploads[upload.id]=upload;xhr.upload.addEventListener("progress",async(ev)=>{upload.progress=ev.loaded/ev.total;upload.loaded=ev.loaded;upload.total=ev.total;upload.state="loading";});xhr.addEventListener("load",()=>{delete uploads[upload.id];upload.state="loaded";bus.trigger("FILE_UPLOAD_LOADED",{upload});});xhr.addEventListener("error",async()=>{delete uploads[upload.id];upload.state="error";if(params.displayErrorNotification!==undefined&&params.displayErrorNotification){notificationService.add(_t("An error occured while uploading."),{title:_t("Error"),sticky:true,});}
bus.trigger("FILE_UPLOAD_ERROR",{upload});});xhr.addEventListener("abort",async()=>{delete uploads[upload.id];upload.state="abort";bus.trigger("FILE_UPLOAD_ERROR",{upload});});xhr.send(formData);bus.trigger("FILE_UPLOAD_ADDED",{upload});return upload;};return{bus,upload,uploads};},};registry.category("services").add("file_upload",fileUploadService);return __exports;});;

/* /web/static/src/core/file_viewer/file_model.js */
odoo.define('@web/core/file_viewer/file_model',['@web/core/utils/urls'],function(require){'use strict';let __exports={};const{url}=require("@web/core/utils/urls");const FileModelMixin=__exports.FileModelMixin=(T)=>class extends T{access_token;checksum;extension;filename;id;mimetype;name;type;tmpUrl;url;uploading;get defaultSource(){const route=url(this.urlRoute,this.urlQueryParams);const encodedRoute=encodeURIComponent(route);if(this.isPdf){return`/web/static/lib/pdfjs/web/viewer.html?file=${encodedRoute}#pagemode=none`;}
if(this.isUrlYoutube){const urlArr=this.url.split("/");let token=urlArr[urlArr.length-1];if(token.includes("watch")){token=token.split("v=")[1];const amp=token.indexOf("&");if(amp!==-1){token=token.substring(0,amp);}}
return`https://www.youtube.com/embed/${token}`;}
return route;}
get displayName(){return this.name||this.filename;}
get downloadUrl(){return url(this.urlRoute,{...this.urlQueryParams,download:true});}
get isImage(){const imageMimetypes=["image/bmp","image/gif","image/jpeg","image/png","image/svg+xml","image/tiff","image/x-icon","image/webp",];return imageMimetypes.includes(this.mimetype);}
get isPdf(){return this.mimetype&&this.mimetype.startsWith("application/pdf");}
get isText(){const textMimeType=["application/javascript","application/json","text/css","text/html","text/plain",];return textMimeType.includes(this.mimetype);}
get isUrl(){return this.type==="url"&&this.url;}
get isUrlYoutube(){return!!this.url&&this.url.includes("youtu");}
get isVideo(){const videoMimeTypes=["audio/mpeg","video/x-matroska","video/mp4","video/webm"];return videoMimeTypes.includes(this.mimetype);}
get isViewable(){return((this.isText||this.isImage||this.isVideo||this.isPdf||this.isUrlYoutube)&&!this.uploading);}
get urlQueryParams(){if(this.uploading&&this.tmpUrl){return{};}
const params={access_token:this.access_token,filename:this.name,unique:this.checksum,};for(const prop in params){if(!params[prop]){delete params[prop];}}
return params;}
get urlRoute(){if(this.uploading&&this.tmpUrl){return this.tmpUrl;}
return this.isImage?`/web/image/${this.id}`:`/web/content/${this.id}`;}};const FileModel=__exports.FileModel=class FileModel extends FileModelMixin(Object){}
return __exports;});;

/* /web/static/src/core/file_viewer/file_viewer.js */
odoo.define('@web/core/file_viewer/file_viewer',['@odoo/owl','@web/core/utils/hooks'],function(require){'use strict';let __exports={};const{Component,useRef,useState}=require("@odoo/owl");const{useAutofocus,useService}=require("@web/core/utils/hooks");const FileViewer=__exports.FileViewer=class FileViewer extends Component{static template="web.FileViewer";static components={};static props=["files","startIndex","close?","modal?"];static defaultProps={modal:true,};setup(){useAutofocus();this.imageRef=useRef("image");this.zoomerRef=useRef("zoomer");this.isDragging=false;this.dragStartX=0;this.dragStartY=0;this.scrollZoomStep=0.1;this.zoomStep=0.5;this.minScale=0.5;this.translate={dx:0,dy:0,x:0,y:0,};this.state=useState({index:this.props.startIndex,file:this.props.files[this.props.startIndex],imageLoaded:false,scale:1,angle:0,});this.ui=useState(useService("ui"));}
onImageLoaded(){this.state.imageLoaded=true;}
close(){this.props.close&&this.props.close();}
next(){const last=this.props.files.length-1;this.activateFile(this.state.index===last?0:this.state.index+1);}
previous(){const last=this.props.files.length-1;this.activateFile(this.state.index===0?last:this.state.index-1);}
activateFile(index){this.state.index=index;this.state.file=this.props.files[index];}
onKeydown(ev){switch(ev.key){case"ArrowRight":this.next();break;case"ArrowLeft":this.previous();break;case"Escape":this.close();break;case"q":this.close();break;}
if(this.state.file.isImage){switch(ev.key){case"r":this.rotate();break;case"+":this.zoomIn();break;case"-":this.zoomOut();break;case"0":this.resetZoom();break;}}}
onWheelImage(ev){if(ev.deltaY>0){this.zoomOut({scroll:true});}else{this.zoomIn({scroll:true});}}
onMousedownImage(ev){if(this.isDragging){return;}
if(ev.button!==0){return;}
this.isDragging=true;this.dragStartX=ev.clientX;this.dragStartY=ev.clientY;}
onMouseupImage(){if(!this.isDragging){return;}
this.isDragging=false;this.translate.x+=this.translate.dx;this.translate.y+=this.translate.dy;this.translate.dx=0;this.translate.dy=0;this.updateZoomerStyle();}
onMousemoveView(ev){if(!this.isDragging){return;}
this.translate.dx=ev.clientX-this.dragStartX;this.translate.dy=ev.clientY-this.dragStartY;this.updateZoomerStyle();}
resetZoom(){this.state.scale=1;this.updateZoomerStyle();}
rotate(){this.state.angle+=90;}
zoomIn({scroll=false}={}){this.state.scale=this.state.scale+(scroll?this.scrollZoomStep:this.zoomStep);this.updateZoomerStyle();}
zoomOut({scroll=false}={}){if(this.state.scale===this.minScale){return;}
const unflooredAdaptedScale=this.state.scale-(scroll?this.scrollZoomStep:this.zoomStep);this.state.scale=Math.max(this.minScale,unflooredAdaptedScale);this.updateZoomerStyle();}
updateZoomerStyle(){const tx=this.imageRef.el.offsetWidth*this.state.scale>this.zoomerRef.el.offsetWidth?this.translate.x+this.translate.dx:0;const ty=this.imageRef.el.offsetHeight*this.state.scale>this.zoomerRef.el.offsetHeight?this.translate.y+this.translate.dy:0;if(tx===0){this.translate.x=0;}
if(ty===0){this.translate.y=0;}
this.zoomerRef.el.style="transform: "+`translate(${tx}px, ${ty}px)`;}
get imageStyle(){let style="transform: "+`scale3d(${this.state.scale}, ${this.state.scale}, 1) `+`rotate(${this.state.angle}deg);`;if(this.state.angle%180!==0){style+=`max-height: ${window.innerWidth}px; max-width: ${window.innerHeight}px;`;}else{style+="max-height: 100%; max-width: 100%;";}
return style;}
onClickPrint(){const printWindow=window.open("about:blank","_new");printWindow.document.open();printWindow.document.write(`
                <html>
                    <head>
                        <script>
                            function onloadImage() {
                                setTimeout('printImage()', 10);
                            }
                            function printImage() {
                                window.print();
                                window.close();
                            }
                        </script>
                    </head>
                    <body onload='onloadImage()'>
                        <img src="${this.state.file.defaultSource}" alt=""/>
                    </body>
                </html>`);printWindow.document.close();}}
return __exports;});;

/* /web/static/src/core/file_viewer/file_viewer_hook.js */
odoo.define('@web/core/file_viewer/file_viewer_hook',['@odoo/owl','@web/core/registry','@web/core/file_viewer/file_viewer'],function(require){'use strict';let __exports={};const{onWillDestroy}=require("@odoo/owl");const{registry}=require("@web/core/registry");const{FileViewer}=require("@web/core/file_viewer/file_viewer");let id=1;__exports.createFileViewer=createFileViewer;function createFileViewer(){const fileViewerId=`web.file_viewer${id++}`;function open(file,files=[file]){if(!file.isViewable){return;}
if(files.length>0){const viewableFiles=files.filter((file)=>file.isViewable);const index=viewableFiles.indexOf(file);registry.category("main_components").add(fileViewerId,{Component:FileViewer,props:{files:viewableFiles,startIndex:index,close},});}}
function close(){registry.category("main_components").remove(fileViewerId);}
return{open,close};}
__exports.useFileViewer=useFileViewer;function useFileViewer(){const{open,close}=createFileViewer();onWillDestroy(close);return{open,close};}
return __exports;});;

/* /web/static/src/core/hotkeys/hotkey_hook.js */
odoo.define('@web/core/hotkeys/hotkey_hook',['@web/core/utils/hooks','@odoo/owl'],function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{useEffect}=require("@odoo/owl");__exports.useHotkey=useHotkey;function useHotkey(hotkey,callback,options={}){const hotkeyService=useService("hotkey");useEffect(()=>hotkeyService.add(hotkey,callback,options),()=>[]);}
return __exports;});;

/* /web/static/src/core/hotkeys/hotkey_service.js */
odoo.define('@web/core/hotkeys/hotkey_service',['@web/core/browser/feature_detection','@web/core/registry','@web/core/browser/browser','@web/core/utils/ui'],function(require){'use strict';let __exports={};const{isMacOS}=require("@web/core/browser/feature_detection");const{registry}=require("@web/core/registry");const{browser}=require("@web/core/browser/browser");const{getVisibleElements}=require("@web/core/utils/ui");const ALPHANUM_KEYS="abcdefghijklmnopqrstuvwxyz0123456789".split("");const NAV_KEYS=["arrowleft","arrowright","arrowup","arrowdown","pageup","pagedown","home","end","backspace","enter","tab","delete","space",];const MODIFIERS=["alt","control","shift"];const AUTHORIZED_KEYS=[...ALPHANUM_KEYS,...NAV_KEYS,"escape"];__exports.getActiveHotkey=getActiveHotkey;function getActiveHotkey(ev){if(!ev.key){return"";}
if(ev.isComposing){return"";}
const hotkey=[];if(isMacOS()?ev.ctrlKey:ev.altKey){hotkey.push("alt");}
if(isMacOS()?ev.metaKey:ev.ctrlKey){hotkey.push("control");}
if(ev.shiftKey){hotkey.push("shift");}
let key=ev.key.toLowerCase();if(key===" "){key="space";}
if(ev.code&&ev.code.indexOf("Digit")===0){key=ev.code.slice(-1);}
if(!AUTHORIZED_KEYS.includes(key)&&ev.code&&ev.code.indexOf("Key")===0){key=ev.code.slice(-1).toLowerCase();}
if(!MODIFIERS.includes(key)){hotkey.push(key);}
return hotkey.join("+");}
const hotkeyService=__exports.hotkeyService={dependencies:["ui"],overlayModifier:"alt",start(env,{ui}){const registrations=new Map();let nextToken=0;let overlaysVisible=false;addListeners(browser);function addListeners(target){target.addEventListener("keydown",onKeydown);target.addEventListener("keyup",removeHotkeyOverlays);target.addEventListener("blur",removeHotkeyOverlays);target.addEventListener("click",removeHotkeyOverlays);}
function onKeydown(event){if(event.code&&event.code.indexOf("Numpad")===0&&/^\d$/.test(event.key)){return;}
const hotkey=getActiveHotkey(event);if(!hotkey){return;}
const{activeElement,isBlocked}=ui;if(isBlocked){return;}
const elementsWithAccessKey=document.querySelectorAll("[accesskey]");for(const el of elementsWithAccessKey){if(el instanceof HTMLElement){el.dataset.hotkey=el.accessKey;el.removeAttribute("accesskey");}}
if(!overlaysVisible&&hotkey===hotkeyService.overlayModifier){addHotkeyOverlays(activeElement);event.preventDefault();return;}
const singleKey=hotkey.split("+").pop();if(!AUTHORIZED_KEYS.includes(singleKey)){return;}
const targetIsEditable=event.target instanceof HTMLElement&&(/input|textarea/i.test(event.target.tagName)||event.target.isContentEditable)&&!event.target.matches("input[type=checkbox], input[type=radio]");const shouldProtectEditable=targetIsEditable&&!event.target.dataset.allowHotkeys&&singleKey!=="escape";const infos={activeElement,hotkey,isRepeated:event.repeat,target:event.target,shouldProtectEditable,};const dispatched=dispatch(infos);if(dispatched){event.preventDefault();event.stopImmediatePropagation();}
if(overlaysVisible){removeHotkeyOverlays();event.preventDefault();}}
function dispatch(infos){const{activeElement,hotkey,isRepeated,target,shouldProtectEditable}=infos;const reversedRegistrations=Array.from(registrations.values()).reverse();const domRegistrations=getDomRegistrations(hotkey,activeElement);const allRegistrations=reversedRegistrations.concat(domRegistrations);const candidates=allRegistrations.filter((reg)=>reg.hotkey===hotkey&&(reg.allowRepeat||!isRepeated)&&(reg.bypassEditableProtection||!shouldProtectEditable)&&(reg.global||reg.activeElement===activeElement)&&(!reg.isAvailable||reg.isAvailable())&&(!reg.area||(target&&reg.area()&&reg.area().contains(target))));let winner=candidates.shift();if(winner&&winner.area){for(const candidate of candidates.filter((c)=>Boolean(c.area))){if(candidate.area()&&winner.area().contains(candidate.area())){winner=candidate;}}}
if(winner){winner.callback({area:winner.area&&winner.area(),target,});return true;}
return false;}
function getDomRegistrations(hotkey,activeElement){const overlayModParts=hotkeyService.overlayModifier.split("+");if(!overlayModParts.every((el)=>hotkey.includes(el))){return[];}
const cleanHotkey=hotkey.split("+").filter((key)=>!overlayModParts.includes(key)).join("+");const elems=getVisibleElements(activeElement,`[data-hotkey='${cleanHotkey}' i]`);return elems.map((el)=>({hotkey,activeElement,bypassEditableProtection:true,callback:()=>{if(document.activeElement){document.activeElement.blur();}
el.focus();setTimeout(()=>el.click());},}));}
function addHotkeyOverlays(activeElement){const hotkeysFromHookToHighlight=[];for(const[,registration]of registrations){const overlayElement=registration.withOverlay?.();if(overlayElement){hotkeysFromHookToHighlight.push({hotkey:registration.hotkey.replace(`${hotkeyService.overlayModifier}+`,""),el:overlayElement,});}}
const hotkeysFromDomToHighlight=getVisibleElements(activeElement,"[data-hotkey]:not(:disabled)").map((el)=>({hotkey:el.dataset.hotkey,el}));const items=[...hotkeysFromDomToHighlight,...hotkeysFromHookToHighlight];for(const item of items){const hotkey=item.hotkey;const overlay=document.createElement("div");overlay.classList.add("o_web_hotkey_overlay","position-absolute","top-0","bottom-0","start-0","end-0","d-flex","justify-content-center","align-items-center","m-0","bg-black-50","h6");overlay.style.zIndex=1;const overlayKbd=document.createElement("kbd");overlayKbd.className="small";overlayKbd.appendChild(document.createTextNode(hotkey.toUpperCase()));overlay.appendChild(overlayKbd);let overlayParent;if(item.el.tagName.toUpperCase()==="INPUT"){overlayParent=item.el.parentElement;}else{overlayParent=item.el;}
if(overlayParent.style.position!=="absolute"){overlayParent.style.position="relative";}
overlayParent.appendChild(overlay);}
overlaysVisible=true;}
function removeHotkeyOverlays(){for(const overlay of document.querySelectorAll(".o_web_hotkey_overlay")){overlay.remove();}
overlaysVisible=false;}
function registerHotkey(hotkey,callback,options={}){if(!hotkey||hotkey.length===0){throw new Error("You must specify an hotkey when registering a registration.");}
if(!callback||typeof callback!=="function"){throw new Error("You must specify a callback function when registering a registration.");}
const keys=hotkey.toLowerCase().split("+").filter((k)=>!MODIFIERS.includes(k));if(keys.some((k)=>!AUTHORIZED_KEYS.includes(k))){throw new Error(`You are trying to subscribe for an hotkey ('${hotkey}')
            that contains parts not whitelisted: ${keys.join(", ")}`);}else if(keys.length>1){throw new Error(`You are trying to subscribe for an hotkey ('${hotkey}')
            that contains more than one single key part: ${keys.join("+")}`);}
const token=nextToken++;const registration={hotkey:hotkey.toLowerCase(),callback,activeElement:null,allowRepeat:options&&options.allowRepeat,bypassEditableProtection:options&&options.bypassEditableProtection,global:options&&options.global,area:options&&options.area,isAvailable:options&&options.isAvailable,withOverlay:options&&options.withOverlay,};Promise.resolve().then(()=>{registration.activeElement=ui.activeElement;});registrations.set(token,registration);return token;}
function unregisterHotkey(token){registrations.delete(token);}
return{add(hotkey,callback,options={}){const token=registerHotkey(hotkey,callback,options);return()=>{unregisterHotkey(token);};},registerIframe(iframe){addListeners(iframe.contentWindow);},};},};registry.category("services").add("hotkey",hotkeyService);return __exports;});;

/* /web/static/src/core/install_scoped_app/install_scoped_app.js */
odoo.define('@web/core/install_scoped_app/install_scoped_app',['@web/core/browser/browser','@web/core/registry','@odoo/owl','@web/core/browser/feature_detection','@web/core/utils/hooks','@web/core/dropdown/dropdown'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const{Component,onMounted,useState}=require("@odoo/owl");const{isDisplayStandalone}=require("@web/core/browser/feature_detection");const{useService}=require("@web/core/utils/hooks");const{Dropdown}=require("@web/core/dropdown/dropdown");const InstallScopedApp=__exports.InstallScopedApp=class InstallScopedApp extends Component{static props={};static template="web.InstallScopedApp";static components={Dropdown};setup(){this.pwa=useState(useService("pwa"));this.state=useState({manifest:{},showInstallUI:false});this.isDisplayStandalone=isDisplayStandalone();this.isInstallationPossible=browser.BeforeInstallPromptEvent!==undefined;onMounted(async()=>{this.state.manifest=await this.pwa.getManifest();this.state.showInstallUI=true;});}
onChangeName(ev){const value=ev.target.value;if(value!==this.state.manifest.name){const url=new URL(document.location.href);url.searchParams.set("app_name",encodeURIComponent(value));browser.location.replace(url);}}
onInstall(){this.state.showInstallUI=false;this.pwa.show({onDone:(res)=>{if(res.outcome==="accepted"){browser.location.replace(this.state.manifest.start_url);}else{this.state.showInstallUI=true;}},});}}
registry.category("public_components").add("web.install_scoped_app",InstallScopedApp);return __exports;});;

/* /web/static/src/core/l10n/dates.js */
odoo.define('@web/core/l10n/dates',['@web/core/l10n/localization','@web/core/l10n/translation','@web/core/utils/functions','@web/core/utils/arrays'],function(require){'use strict';let __exports={};const{localization}=require("@web/core/l10n/localization");const{_t}=require("@web/core/l10n/translation");const{memoize}=require("@web/core/utils/functions");const{ensureArray}=require("@web/core/utils/arrays");const{DateTime,Settings}=luxon;const MIN_VALID_DATE=__exports.MIN_VALID_DATE=DateTime.fromObject({year:1000});const MAX_VALID_DATE=__exports.MAX_VALID_DATE=DateTime.fromObject({year:9999}).endOf("year");const SERVER_DATE_FORMAT="yyyy-MM-dd";const SERVER_TIME_FORMAT="HH:mm:ss";const SERVER_DATETIME_FORMAT=`${SERVER_DATE_FORMAT} ${SERVER_TIME_FORMAT}`;const nonAlphaRegex=/[^a-z]/gi;const nonDigitRegex=/[^\d]/g;const normalizeFormatTable={a:"ccc",A:"cccc",b:"MMM",B:"MMMM",d:"dd",H:"HH",I:"hh",j:"o",m:"MM",M:"mm",p:"a",S:"ss",W:"WW",w:"c",y:"yy",Y:"yyyy",c:"ccc MMM d HH:mm:ss yyyy",x:"MM/dd/yy",X:"HH:mm:ss",};const smartDateUnits={d:"days",m:"months",w:"weeks",y:"years",};const smartDateRegex=new RegExp(["^","([+-])","(\\d+)",`([${Object.keys(smartDateUnits).join("")}]?)`,"$"].join("\\s*"),"i");const dateCache=new WeakMap();const dateTimeCache=new WeakMap();const ConversionError=__exports.ConversionError=class ConversionError extends Error{name="ConversionError";}
__exports.areDatesEqual=areDatesEqual;function areDatesEqual(d1,d2){if(Array.isArray(d1)||Array.isArray(d2)){d1=ensureArray(d1);d2=ensureArray(d2);return d1.length===d2.length&&d1.every((d1Val,i)=>areDatesEqual(d1Val,d2[i]));}
if(d1 instanceof DateTime&&d2 instanceof DateTime&&d1!==d2){return d1.equals(d2);}else{return d1===d2;}}
__exports.clampDate=clampDate;function clampDate(desired,minDate,maxDate){if(maxDate<desired){return maxDate;}
if(minDate>desired){return minDate;}
return desired;}
__exports.getLocalWeekNumber=getLocalWeekNumber;function getLocalWeekNumber(date){return getLocalYearAndWeek(date).week;}
__exports.getLocalYearAndWeek=getLocalYearAndWeek;function getLocalYearAndWeek(date){if(!date.isLuxonDateTime){date=DateTime.fromJSDate(date);}
const{weekStart}=localization;date=date.minus({days:(date.weekday+7-weekStart)%7});date=weekStart>1&&weekStart<5?date.minus({days:(date.weekday+6)%7}):date.plus({days:(8-date.weekday)%7});date=date.plus({days:6});const jan4=DateTime.local(date.year,1,4);const diffDays=date<jan4?date.diff(jan4.minus({years:1}),"day").days:date.diff(jan4,"day").days;return{year:date.year,week:Math.trunc(diffDays/7)+1};}
__exports.getStartOfLocalWeek=getStartOfLocalWeek;function getStartOfLocalWeek(date){const{weekStart}=localization;const weekday=date.weekday<weekStart?weekStart-7:weekStart;return date.set({weekday}).startOf("day");}
__exports.getEndOfLocalWeek=getEndOfLocalWeek;function getEndOfLocalWeek(date){return getStartOfLocalWeek(date).plus({days:6}).endOf("day");}
__exports.is24HourFormat=is24HourFormat;function is24HourFormat(format){return/H/.test(format||localization.timeFormat);}
__exports.isInRange=isInRange;function isInRange(value,range){if(!value||!range){return false;}
if(Array.isArray(value)){const actualValues=value.filter(Boolean);if(actualValues.length<2){return isInRange(actualValues[0],range);}
return((value[0]<=range[0]&&range[0]<=value[1])||(range[0]<=value[0]&&value[0]<=range[1]));}else{return range[0]<=value&&value<=range[1];}}
__exports.isMeridiemFormat=isMeridiemFormat;function isMeridiemFormat(format){return/a/.test(format||localization.timeFormat);}
function isValidDate(date){return date&&date.isValid&&isInRange(date,[MIN_VALID_DATE,MAX_VALID_DATE]);}
function parseSmartDateInput(value){const match=value.match(smartDateRegex);if(match){let date=DateTime.local();const offset=parseInt(match[2],10);const unit=smartDateUnits[(match[3]||"d").toLowerCase()];if(match[1]==="+"){date=date.plus({[unit]:offset});}else{date=date.minus({[unit]:offset});}
return date;}
return false;}
const stripAlphaDupes=memoize(function stripAlphaDupes(str){return str.replace(/[a-z]/gi,(letter,index,str)=>letter===str[index-1]?"":letter);});const strftimeToLuxonFormat=__exports.strftimeToLuxonFormat=memoize(function strftimeToLuxonFormat(format){const output=[];let inToken=false;for(let index=0;index<format.length;++index){let character=format[index];if(character==="%"&&!inToken){inToken=true;continue;}
if(/[a-z]/gi.test(character)){if(inToken&&normalizeFormatTable[character]!==undefined){character=normalizeFormatTable[character];}else{character=`'${character}'`;}}
output.push(character);inToken=false;}
return output.join("");});__exports.today=today;function today(){return DateTime.local().startOf("day");}
const condensedFormats={};function getCondensedFormat(format){const originalFormat=format;if(!condensedFormats[originalFormat]){format=format.replace(/(^|[^M])M{2}([^M]|$)/,"$1M$2");format=format.replace(/(^|[^d])d{2}([^d]|$)/,"$1d$2");format=format.replace(/(^|[^H])H{2}([^H]|$)/,"$1H$2");condensedFormats[originalFormat]=format;}
return condensedFormats[originalFormat];}
__exports.formatDate=formatDate;function formatDate(value,options={}){if(!value){return"";}
let format=options.format;if(!format){format=localization.dateFormat;if(options.condensed){format=getCondensedFormat(format);}}
return value.toFormat(format);}
__exports.formatDateTime=formatDateTime;function formatDateTime(value,options={}){if(!value){return"";}
let format=options.format;if(!format){if(options.showSeconds===false){format=`${localization.dateFormat} ${localization.shortTimeFormat}`;}else{format=localization.dateTimeFormat;}
if(options.condensed){format=getCondensedFormat(format);}}
return value.setZone(options.tz||"default").toFormat(format);}
__exports.formatDuration=formatDuration;function formatDuration(seconds,showFullDuration){const displayStyle=showFullDuration?"long":"narrow";const numberOfValuesToDisplay=showFullDuration?2:1;const durationKeys=["years","months","days","hours","minutes"];if(seconds<60){seconds=60;}
seconds-=seconds%60;let duration=luxon.Duration.fromObject({seconds:seconds}).shiftTo(...durationKeys);duration=duration.shiftTo(...durationKeys.filter((key)=>duration.get(key)));const durationSplit=duration.toHuman({unitDisplay:displayStyle}).split(",");if(!showFullDuration&&duration.loc.locale.includes("en")&&duration.months>0){durationSplit[0]=durationSplit[0].replace("m","M");}
return durationSplit.slice(0,numberOfValuesToDisplay).join(",");}
__exports.serializeDate=serializeDate;function serializeDate(value){if(!dateCache.has(value)){dateCache.set(value,value.toFormat(SERVER_DATE_FORMAT,{numberingSystem:"latn"}));}
return dateCache.get(value);}
__exports.serializeDateTime=serializeDateTime;function serializeDateTime(value){if(!dateTimeCache.has(value)){dateTimeCache.set(value,value.setZone("utc").toFormat(SERVER_DATETIME_FORMAT,{numberingSystem:"latn"}));}
return dateTimeCache.get(value);}
__exports.parseDate=parseDate;function parseDate(value,options={}){const parsed=parseDateTime(value,{...options,format:options.format||localization.dateFormat,});return parsed&&parsed.startOf("day");}
__exports.parseDateTime=parseDateTime;function parseDateTime(value,options={}){if(!value){return false;}
const fmt=options.format||localization.dateTimeFormat;const parseOpts={setZone:true,zone:options.tz||"default",};const switchToLatin=Settings.defaultNumberingSystem!=="latn"&&/[0-9]/.test(value);if(switchToLatin){parseOpts.numberingSystem="latn";}
let result=DateTime.fromFormat(value,fmt,parseOpts);if(!isValidDate(result)){result=parseSmartDateInput(value);}
if(!isValidDate(result)){const fmtWoZero=stripAlphaDupes(fmt);result=DateTime.fromFormat(value,fmtWoZero,parseOpts);}
if(!isValidDate(result)){const digitList=value.split(nonDigitRegex).filter(Boolean);const fmtList=fmt.split(nonAlphaRegex).filter(Boolean);const valWoSeps=digitList.join("");let carry=0;const fmtWoSeps=fmtList.map((part,i)=>{const digitLength=(digitList[i]||"").length;const actualPart=part.slice(0,digitLength+carry);carry+=digitLength-actualPart.length;return actualPart;}).join("");result=DateTime.fromFormat(valWoSeps,fmtWoSeps,parseOpts);}
if(!isValidDate(result)){const valueDigits=value.replace(nonDigitRegex,"");if(valueDigits.length>4){result=DateTime.fromISO(value,parseOpts);if(!isValidDate(result)){result=DateTime.fromSQL(value,parseOpts);}}}
if(!isValidDate(result)){throw new ConversionError(_t("'%s' is not a correct date or datetime",value));}
if(switchToLatin){result=result.reconfigure({numberingSystem:Settings.defaultNumberingSystem,});}
return result.setZone(options.tz||"default");}
__exports.deserializeDate=deserializeDate;function deserializeDate(value,options={}){options={numberingSystem:"latn",zone:"default",...options};return DateTime.fromSQL(value,options).reconfigure({numberingSystem:Settings.defaultNumberingSystem,});}
__exports.deserializeDateTime=deserializeDateTime;function deserializeDateTime(value,options={}){return DateTime.fromSQL(value,{numberingSystem:"latn",zone:"utc"}).setZone(options?.tz||"default").reconfigure({numberingSystem:Settings.defaultNumberingSystem,});}
return __exports;});;

/* /web/static/src/core/l10n/localization.js */
odoo.define('@web/core/l10n/localization',[],function(require){'use strict';let __exports={};const localization=__exports.localization=new Proxy({},{get:(target,p)=>{if(p in target||p==="then"){return Reflect.get(target,p);}
throw new Error(`could not access localization parameter "${p}": parameters are not ready yet. Maybe add 'localization' to your dependencies?`);},});return __exports;});;

/* /web/static/src/core/l10n/localization_service.js */
odoo.define('@web/core/l10n/localization_service',['@web/session','@web/core/l10n/utils','@web/core/user','@web/core/browser/browser','@web/core/registry','@web/core/l10n/dates','@web/core/l10n/localization','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{session}=require("@web/session");const{jsToPyLocale}=require("@web/core/l10n/utils");const{user}=require("@web/core/user");const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const{strftimeToLuxonFormat}=require("@web/core/l10n/dates");const{localization}=require("@web/core/l10n/localization");const{translatedTerms,translationLoaded,translationIsReady}=require("@web/core/l10n/translation");const{Settings}=luxon;const NUMBERING_SYSTEMS=[[/^ar-(sa|sy|001)$/i,"arab"],[/^bn/i,"beng"],[/^bo/i,"tibt"],[/^pa-in/i,"guru"],[/^ta/i,"tamldec"],[/.*/i,"latn"],];const localizationService=__exports.localizationService={start:async()=>{const cacheHashes=session.cache_hashes||{};const translationsHash=cacheHashes.translations||new Date().getTime().toString();const lang=jsToPyLocale(user.lang||document.documentElement.getAttribute("lang"));const translationURL=session.translationURL||"/web/webclient/translations";let url=`${translationURL}/${translationsHash}`;if(lang){url+=`?lang=${lang}`;}
const response=await browser.fetch(url);if(!response.ok){throw new Error("Error while fetching translations");}
const{lang_parameters:userLocalization,modules:modules,multi_lang:multiLang,}=await response.json();const terms={};for(const addon of Object.keys(modules)){for(const message of modules[addon].messages){terms[message.id]=message.string;}}
Object.assign(translatedTerms,terms);translatedTerms[translationLoaded]=true;translationIsReady.resolve(true);const locale=user.lang||browser.navigator.language;Settings.defaultLocale=locale;for(const[re,numberingSystem]of NUMBERING_SYSTEMS){if(re.test(locale)){Settings.defaultNumberingSystem=numberingSystem;break;}}
const dateFormat=strftimeToLuxonFormat(userLocalization.date_format);const timeFormat=strftimeToLuxonFormat(userLocalization.time_format);const shortTimeFormat=strftimeToLuxonFormat(userLocalization.short_time_format);const dateTimeFormat=`${dateFormat} ${timeFormat}`;const grouping=JSON.parse(userLocalization.grouping);Object.assign(localization,{dateFormat,timeFormat,shortTimeFormat,dateTimeFormat,decimalPoint:userLocalization.decimal_point,direction:userLocalization.direction,grouping,multiLang,thousandsSep:userLocalization.thousands_sep,weekStart:userLocalization.week_start,code:jsToPyLocale(locale),});return localization;},};registry.category("services").add("localization",localizationService);return __exports;});;

/* /web/static/src/core/l10n/translation.js */
odoo.define('@web/core/l10n/translation',['@odoo/owl','@web/core/utils/concurrency','@web/core/utils/strings'],function(require){'use strict';let __exports={};const{markup}=require("@odoo/owl");const{Deferred}=require("@web/core/utils/concurrency");const{escape,sprintf}=require("@web/core/utils/strings");const translationLoaded=__exports.translationLoaded=Symbol("translationLoaded");const translatedTerms=__exports.translatedTerms={[translationLoaded]:false,};const translationIsReady=__exports.translationIsReady=new Deferred();const Markup=markup().constructor;__exports._t=_t;function _t(term,...values){if(translatedTerms[translationLoaded]){const translation=translatedTerms[term]??term;if(values.length===0){return translation;}
return _safeSprintf(translation,...values);}else{return new LazyTranslatedString(term,values);}}
class LazyTranslatedString extends String{constructor(term,values){super(term);this.values=values;}
valueOf(){const term=super.valueOf();if(translatedTerms[translationLoaded]){const translation=translatedTerms[term]??term;if(this.values.length===0){return translation;}
return _safeSprintf(translation,...this.values);}else{throw new Error(`translation error`);}}
toString(){return this.valueOf();}}
_t("less than a minute ago");_t("about a minute ago");_t("%d minutes ago");_t("about an hour ago");_t("%d hours ago");_t("a day ago");_t("%d days ago");_t("about a month ago");_t("%d months ago");_t("about a year ago");_t("%d years ago");__exports.loadLanguages=loadLanguages;async function loadLanguages(orm){if(!loadLanguages.installedLanguages){loadLanguages.installedLanguages=await orm.call("res.lang","get_installed");}
return loadLanguages.installedLanguages;}
function _safeSprintf(str,...values){let hasMarkup;if(values.length===1&&Object.prototype.toString.call(values[0])==="[object Object]"){hasMarkup=Object.values(values[0]).some((v)=>v instanceof Markup);}else{hasMarkup=values.some((v)=>v instanceof Markup);}
if(hasMarkup){return markup(sprintf(escape(str),..._escapeNonMarkup(values)));}
return sprintf(str,...values);}
function _escapeNonMarkup(values){if(Object.prototype.toString.call(values[0])==="[object Object]"){const sanitized={};for(const[key,value]of Object.entries(values[0])){sanitized[key]=value instanceof Markup?value:escape(value);}
return[sanitized];}
return values.map((x)=>(x instanceof Markup?x:escape(x)));}
return __exports;});;

/* /web/static/src/core/l10n/utils.js */
odoo.define('@web/core/l10n/utils',['@web/core/l10n/utils/format_list','@web/core/l10n/utils/locales'],function(require){'use strict';let __exports={};Object.assign(__exports,require("@web/core/l10n/utils/format_list"));Object.assign(__exports,require("@web/core/l10n/utils/locales"));return __exports;});;

/* /web/static/src/core/l10n/utils/format_list.js */
odoo.define('@web/core/l10n/utils/format_list',['@web/core/user'],function(require){'use strict';let __exports={};const{user}=require("@web/core/user");const LIST_STYLES={standard:{type:"conjunction",style:"long",},"standard-short":{type:"conjunction",style:"short",},or:{type:"disjunction",style:"long",},"or-short":{type:"disjunction",style:"short",},unit:{type:"unit",style:"long",},"unit-short":{type:"unit",style:"short",},"unit-narrow":{type:"unit",style:"narrow",},};__exports.formatList=formatList;function formatList(list,{localeCode="",style="standard"}={}){const locale=localeCode||user.lang||"en-US";const formatter=new Intl.ListFormat(locale,LIST_STYLES[style]);return formatter.format(list);}
return __exports;});;

/* /web/static/src/core/l10n/utils/locales.js */
odoo.define('@web/core/l10n/utils/locales',[],function(require){'use strict';let __exports={};__exports.jsToPyLocale=jsToPyLocale;function jsToPyLocale(locale){if(!locale){return"";}
try{var{language,script,region}=new Intl.Locale(locale);if(language==="fil"){language="tl";}}catch{return locale;}
let xpgLocale=language;if(region){xpgLocale+=`_${region}`;}
switch(script){case"Cyrl":xpgLocale+="@Cyrl";break;case"Latn":xpgLocale+="@latin";break;}
return xpgLocale;}
__exports.pyToJsLocale=pyToJsLocale;function pyToJsLocale(locale){if(!locale){return"";}
const regex=/^([a-z]+)(_[A-Z\d]+)?(@.+)?$/;const match=locale.match(regex);if(!match){return locale;}
const[,language,territory,modifier]=match;const subtags=[language];switch(modifier){case"@Cyrl":subtags.push("Cyrl");break;case"@latin":subtags.push("Latn");break;}
if(territory){subtags.push(territory.slice(1));}
return subtags.join("-");}
return __exports;});;

/* /web/static/src/core/macro.js */
odoo.define('@web/core/macro',['@web/core/browser/browser','@web/core/utils/ui','@web/core/utils/concurrency','@odoo/owl'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{isVisible}=require("@web/core/utils/ui");const{delay,Mutex}=require("@web/core/utils/concurrency");const{validate}=require("@odoo/owl");const macroSchema={name:{type:String,optional:true},checkDelay:{type:Number,optional:true},stepDelay:{type:Number,optional:true},timeout:{type:Number,optional:true},steps:{type:Array,element:{initialDelay:{type:Function,optional:true},action:{type:Function},trigger:{type:[Function,String],optional:true},timeout:{type:Number,optional:true},},},onComplete:{type:Function,optional:true},onStep:{type:Function,optional:true},onError:{type:Function,optional:true},onTimeout:{type:Function,optional:true},};const ACTION_HELPERS=__exports.ACTION_HELPERS={click(el,_step){el.dispatchEvent(new MouseEvent("mouseover"));el.dispatchEvent(new MouseEvent("mouseenter"));el.dispatchEvent(new MouseEvent("mousedown"));el.dispatchEvent(new MouseEvent("mouseup"));el.click();el.dispatchEvent(new MouseEvent("mouseout"));el.dispatchEvent(new MouseEvent("mouseleave"));},text(el,step){this.click(el,step);el.value=step.value;el.dispatchEvent(new InputEvent("input",{bubbles:true}));el.dispatchEvent(new InputEvent("change",{bubbles:true}));},};const mutex=new Mutex();class TimeoutError extends Error{}
const Macro=__exports.Macro=class Macro{currentIndex=0;isComplete=false;calledBack=false;constructor(descr){try{validate(descr,macroSchema);}catch(error){throw new Error(`Error in schema for Macro ${JSON.stringify(descr, null, 4)}\n${error.message}`);}
Object.assign(this,descr);this.name=this.name||"anonymous";this.onComplete=this.onComplete||(()=>{});this.onStep=this.onStep||(()=>{});this.stepElFound=new Array(this.steps.length).fill(false);this.stepHasStarted=new Array(this.steps.length).fill(false);this.observer=new MacroMutationObserver(()=>this.debounceAdvance("mutation"));}
async start(target=document){this.observer.observe(target);this.debounceAdvance("next");}
getDebounceDelay(){let delay=Math.max(this.checkDelay??750,50);if(!this.stepHasStarted[this.currentIndex]){delay=this.currentIndex===0?0:50;this.stepHasStarted[this.currentIndex]=true;if(this.currentStep?.initialDelay){const initialDelay=parseFloat(this.currentStep.initialDelay());delay=initialDelay>=0?initialDelay:delay;}}
return delay;}
async advance(){if(this.isComplete){return;}
if(this.currentStep.trigger){this.setTimer();}
let proceedToAction=true;if(this.currentStep.trigger){proceedToAction=this.findTrigger();}
if(proceedToAction){this.safeCall(this.onStep,this.currentElement,this.currentStep);this.clearTimer();const actionResult=await this.performAction();if(!actionResult){this.increment();this.debounceAdvance("next");}}}
findTrigger(){if(this.isComplete){return;}
const trigger=this.currentStep.trigger;try{if(typeof trigger==="function"){this.currentElement=this.safeCall(trigger);}else if(typeof trigger==="string"){const triggerEl=document.querySelector(trigger);this.currentElement=isVisible(triggerEl)&&triggerEl;}else{throw new Error(`Trigger can only be string or function.`);}}catch(error){this.stop(`Error when trying to find trigger: ${error.message}`);}
return!!this.currentElement;}
async performAction(){let actionResult;try{const action=this.currentStep.action;if(action in ACTION_HELPERS){actionResult=ACTION_HELPERS[action](this.currentElement,this.currentStep);}else if(typeof action==="function"){actionResult=await this.safeCall(action,this.currentElement);}}catch(error){this.stop(`ERROR IN ACTION: ${error.message}`);}
return actionResult;}
get currentStep(){return this.steps[this.currentIndex];}
get currentElement(){return this.stepElFound[this.currentIndex];}
set currentElement(value){this.stepElFound[this.currentIndex]=value;}
increment(){this.currentIndex++;if(this.currentIndex>=this.steps.length){this.stop();}}
safeCall(fn,...args){if(this.isComplete){return;}
try{return fn(...args);}catch(e){this.stop(e);}}
setTimer(){this.clearTimer();const timeout=this.currentStep.timeout||this.timeout;if(timeout>0){this.timer=browser.setTimeout(()=>{this.stop(new TimeoutError(timeout));},timeout);}}
clearTimer(){this.resetDebounce();if(this.timer){browser.clearTimeout(this.timer);}}
resetDebounce(){if(this.debouncedAdvance){browser.clearTimeout(this.debouncedAdvance);}}
async debounceAdvance(from){this.resetDebounce();if(this.isComplete||(from==="next"&&this.stepHasStarted[this.currentIndex])||(from==="mutation"&&!this.stepHasStarted[this.currentIndex])||(from==="mutation"&&this.currentElement)){return;}
if(!this.currentStep&&this.currentIndex===0){await delay(300);this.stop();}else if(from==="next"&&!this.currentStep.trigger){this.advance();}else{this.debouncedAdvance=browser.setTimeout(()=>mutex.exec(()=>this.advance()),this.getDebounceDelay());}}
stop(error){this.clearTimer();this.isComplete=true;this.observer.disconnect();if(!this.calledBack){this.calledBack=true;if(error){if(error instanceof TimeoutError){if(typeof this.onTimeout==="function"){this.onTimeout(error.message,this.currentStep,this.currentIndex);}else{console.error("Step timeout");}}else{if(typeof this.onError==="function"){this.onError(error,this.currentStep,this.currentIndex);}else{console.error(error);}}}else if(this.currentIndex===this.steps.length){mutex.getUnlockedDef().then(()=>{this.onComplete();});}}
return;}}
const MacroMutationObserver=__exports.MacroMutationObserver=class MacroMutationObserver{observerOptions={attributes:true,childList:true,subtree:true,characterData:true,};constructor(callback){this.callback=callback;this.observer=new MutationObserver((mutationList,observer)=>{callback();mutationList.forEach((mutationRecord)=>Array.from(mutationRecord.addedNodes).forEach((node)=>{let iframes=[];if(String(node.tagName).toLowerCase()==="iframe"){iframes=[node];}else if(node instanceof HTMLElement){iframes=Array.from(node.querySelectorAll("iframe"));}
iframes.forEach((iframeEl)=>this.observeIframe(iframeEl,observer,()=>callback()));this.findAllShadowRoots(node).forEach((shadowRoot)=>observer.observe(shadowRoot,this.observerOptions));}));});}
disconnect(){this.observer.disconnect();}
findAllShadowRoots(node,shadowRoots=[]){if(node.shadowRoot){shadowRoots.push(node.shadowRoot);this.findAllShadowRoots(node.shadowRoot,shadowRoots);}
node.childNodes.forEach((child)=>{this.findAllShadowRoots(child,shadowRoots);});return shadowRoots;}
observe(target){this.observer.observe(target,this.observerOptions);target.querySelectorAll("iframe").forEach((el)=>this.observeIframe(el,this.observer,()=>this.callback()));this.findAllShadowRoots(target).forEach((shadowRoot)=>{this.observer.observe(shadowRoot,this.observerOptions);});}
observeIframe(iframeEl,observer,callback){const observerOptions={attributes:true,childList:true,subtree:true,characterData:true,};const observeIframeContent=()=>{if(iframeEl.contentDocument){iframeEl.contentDocument.addEventListener("load",(event)=>{callback();observer.observe(event.target,observerOptions);});if(!iframeEl.src||iframeEl.contentDocument.readyState==="complete"){callback();observer.observe(iframeEl.contentDocument,observerOptions);}}};observeIframeContent();iframeEl.addEventListener("load",observeIframeContent);}}
return __exports;});;

/* /web/static/src/core/main_components_container.js */
odoo.define('@web/core/main_components_container',['@odoo/owl','@web/core/registry','@web/core/registry_hook','@web/core/utils/components'],function(require){'use strict';let __exports={};const{Component,xml}=require("@odoo/owl");const{registry}=require("@web/core/registry");const{useRegistry}=require("@web/core/registry_hook");const{ErrorHandler}=require("@web/core/utils/components");const mainComponents=registry.category("main_components");mainComponents.addValidation({Component:{validate:(c)=>c.prototype instanceof Component},props:{type:Object,optional:true}});const MainComponentsContainer=__exports.MainComponentsContainer=class MainComponentsContainer extends Component{static components={ErrorHandler};static props={};static template=xml`
    <div class="o-main-components-container">
        <t t-foreach="Components.entries" t-as="C" t-key="C[0]">
            <ErrorHandler onError="error => this.handleComponentError(error, C)">
                <t t-component="C[1].Component" t-props="C[1].props"/>
            </ErrorHandler>
        </t>
    </div>
    `;setup(){this.Components=useRegistry(mainComponents);}
handleComponentError(error,C){this.Components.entries.splice(this.Components.entries.indexOf(C),1);this.render();Promise.resolve().then(()=>{throw error;});}}
return __exports;});;

/* /web/static/src/core/model_field_selector/model_field_selector.js */
odoo.define('@web/core/model_field_selector/model_field_selector',['@odoo/owl','@web/core/utils/concurrency','@web/core/model_field_selector/model_field_selector_popover','@web/core/model_field_selector/utils','@web/core/popover/popover_hook'],function(require){'use strict';let __exports={};const{Component,onWillStart,onWillUpdateProps,useState}=require("@odoo/owl");const{KeepLast}=require("@web/core/utils/concurrency");const{ModelFieldSelectorPopover}=require("@web/core/model_field_selector/model_field_selector_popover");const{useLoadFieldInfo,useLoadPathDescription}=require("@web/core/model_field_selector/utils");const{usePopover}=require("@web/core/popover/popover_hook");const ModelFieldSelector=__exports.ModelFieldSelector=class ModelFieldSelector extends Component{static template="web._ModelFieldSelector";static components={Popover:ModelFieldSelectorPopover,};static props={resModel:String,path:{optional:true},allowEmpty:{type:Boolean,optional:true},readonly:{type:Boolean,optional:true},showSearchInput:{type:Boolean,optional:true},isDebugMode:{type:Boolean,optional:true},update:{type:Function,optional:true},filter:{type:Function,optional:true},followRelations:{type:Boolean,optional:true},showDebugInput:{type:Boolean,optional:true},};static defaultProps={readonly:true,allowEmpty:false,isDebugMode:false,showSearchInput:true,update:()=>{},followRelations:true,};setup(){this.loadPathDescription=useLoadPathDescription();const loadFieldInfo=useLoadFieldInfo();this.popover=usePopover(this.constructor.components.Popover,{popoverClass:"o_popover_field_selector",onClose:async()=>{if(this.newPath!==null){const fieldInfo=await loadFieldInfo(this.props.resModel,this.newPath);this.props.update(this.newPath,fieldInfo);}},});this.keepLast=new KeepLast();this.state=useState({isInvalid:false,displayNames:[]});onWillStart(()=>this.updateState(this.props));onWillUpdateProps((nextProps)=>this.updateState(nextProps));}
openPopover(currentTarget){if(this.props.readonly){return;}
this.newPath=null;this.popover.open(currentTarget,{resModel:this.props.resModel,path:this.props.path,update:(path,_fieldInfo,debug=false)=>{this.newPath=path;if(!debug){this.updateState({...this.props,path},true);}},showSearchInput:this.props.showSearchInput,isDebugMode:this.props.isDebugMode,filter:this.props.filter,followRelations:this.props.followRelations,showDebugInput:this.props.showDebugInput,});}
async updateState(params,isConcurrent){const{resModel,path,allowEmpty}=params;let prom=this.loadPathDescription(resModel,path,allowEmpty);if(isConcurrent){prom=this.keepLast.add(prom);}
const state=await prom;Object.assign(this.state,state);}
clear(){if(this.popover.isOpen){this.newPath="";this.popover.close();return;}
this.props.update("",{resModel:this.props.resModel,fieldDef:null});}}
return __exports;});;

/* /web/static/src/core/model_field_selector/model_field_selector_popover.js */
odoo.define('@web/core/model_field_selector/model_field_selector_popover',['@odoo/owl','@web/core/utils/timing','@web/core/l10n/translation','@web/core/utils/search','@web/core/utils/concurrency','@web/core/utils/arrays','@web/core/utils/hooks'],function(require){'use strict';let __exports={};const{Component,onWillStart,useEffect,useRef,useState}=require("@odoo/owl");const{debounce}=require("@web/core/utils/timing");const{_t}=require("@web/core/l10n/translation");const{fuzzyLookup}=require("@web/core/utils/search");const{KeepLast}=require("@web/core/utils/concurrency");const{sortBy}=require("@web/core/utils/arrays");const{useService}=require("@web/core/utils/hooks");class Page{constructor(resModel,fieldDefs,options={}){this.resModel=resModel;this.fieldDefs=fieldDefs;const{previousPage=null,selectedName=null,isDebugMode}=options;this.previousPage=previousPage;this.selectedName=selectedName;this.isDebugMode=isDebugMode;this.sortedFieldNames=sortBy(Object.keys(fieldDefs),(key)=>fieldDefs[key].string);this.fieldNames=this.sortedFieldNames;this.query="";this.focusedFieldName=null;this.resetFocusedFieldName();}
get path(){const previousPath=this.previousPage?.path||"";if(this.selectedName){if(previousPath){return`${previousPath}.${this.selectedName}`;}else{return this.selectedName;}}
return previousPath;}
get selectedField(){return this.fieldDefs[this.selectedName];}
get title(){const prefix=this.previousPage?.previousPage?"... > ":"";const title=this.previousPage?.selectedField?.string||"";if(prefix.length||title.length){return`${prefix}${title}`;}
return _t("Select a field");}
focus(direction){if(!this.fieldNames.length){return;}
const index=this.fieldNames.indexOf(this.focusedFieldName);if(direction==="previous"){if(index===0){this.focusedFieldName=this.fieldNames[this.fieldNames.length-1];}else{this.focusedFieldName=this.fieldNames[index-1];}}else{if(index===this.fieldNames.length-1){this.focusedFieldName=this.fieldNames[0];}else{this.focusedFieldName=this.fieldNames[index+1];}}}
resetFocusedFieldName(){if(this.selectedName&&this.fieldNames.includes(this.selectedName)){this.focusedFieldName=this.selectedName;}else{this.focusedFieldName=this.fieldNames.length?this.fieldNames[0]:null;}}
searchFields(query=""){this.query=query;this.fieldNames=this.sortedFieldNames;if(query){this.fieldNames=fuzzyLookup(query,this.fieldNames,(key)=>{const vals=[this.fieldDefs[key].string];if(this.isDebugMode){vals.push(key);}
return vals;});}
this.resetFocusedFieldName();}}
const ModelFieldSelectorPopover=__exports.ModelFieldSelectorPopover=class ModelFieldSelectorPopover extends Component{static template="web.ModelFieldSelectorPopover";static props={close:Function,filter:{type:Function,optional:true},followRelations:{type:Boolean,optional:true},showDebugInput:{type:Boolean,optional:true},isDebugMode:{type:Boolean,optional:true},path:{optional:true},resModel:String,showSearchInput:{type:Boolean,optional:true},update:Function,};static defaultProps={filter:(value)=>value.searchable&&value.type!="json",isDebugMode:false,followRelations:true,};setup(){this.fieldService=useService("field");this.state=useState({page:null});this.keepLast=new KeepLast();this.debouncedSearchFields=debounce(this.searchFields.bind(this),250);onWillStart(async()=>{this.state.page=await this.loadPages(this.props.resModel,this.props.path);});const rootRef=useRef("root");useEffect(()=>{const focusedElement=rootRef.el.querySelector(".o_model_field_selector_popover_item.active");if(focusedElement){focusedElement.scrollIntoView({block:"center"});}});useEffect(()=>{if(this.props.showSearchInput){const searchInput=rootRef.el.querySelector(".o_model_field_selector_popover_search .o_input");searchInput.focus();}},()=>[this.state.page]);}
get showDebugInput(){return this.props.showDebugInput??this.props.isDebugMode;}
filter(fieldDefs,path){const filteredKeys=Object.keys(fieldDefs).filter((k)=>this.props.filter(fieldDefs[k],path));return Object.fromEntries(filteredKeys.map((k)=>[k,fieldDefs[k]]));}
async followRelation(fieldDef){const{modelsInfo}=await this.keepLast.add(this.fieldService.loadPath(this.state.page.resModel,`${fieldDef.name}.*`));this.state.page.selectedName=fieldDef.name;const{resModel,fieldDefs}=modelsInfo.at(-1);this.openPage(new Page(resModel,this.filter(fieldDefs,this.state.page.path),{previousPage:this.state.page,isDebugMode:this.props.isDebugMode,}));}
goToPreviousPage(){this.keepLast.add(Promise.resolve());this.openPage(this.state.page.previousPage);}
async loadNewPath(path){const newPage=await this.keepLast.add(this.loadPages(this.props.resModel,path));this.openPage(newPage);}
async loadPages(resModel,path){if(typeof path!=="string"||!path.length){const fieldDefs=await this.fieldService.loadFields(resModel);return new Page(resModel,this.filter(fieldDefs,path),{isDebugMode:this.props.isDebugMode,});}
const{isInvalid,modelsInfo,names}=await this.fieldService.loadPath(resModel,path);switch(isInvalid){case"model":throw new Error(`Invalid model name: ${resModel}`);case"path":{const{resModel,fieldDefs}=modelsInfo[0];return new Page(resModel,this.filter(fieldDefs,path),{selectedName:path,isDebugMode:this.props.isDebugMode,});}
default:{let page=null;for(let index=0;index<names.length;index++){const name=names[index];const{resModel,fieldDefs}=modelsInfo[index];page=new Page(resModel,this.filter(fieldDefs,path),{previousPage:page,selectedName:name,isDebugMode:this.props.isDebugMode,});}
return page;}}}
openPage(page){this.state.page=page;this.state.page.searchFields();this.props.update(page.path);}
searchFields(query){this.state.page.searchFields(query);}
selectField(field){if(field.type==="properties"){return this.followRelation(field);}
this.keepLast.add(Promise.resolve());this.state.page.selectedName=field.name;this.props.update(this.state.page.path,field);this.props.close(true);}
onDebugInputKeydown(ev){switch(ev.key){case"Enter":{ev.preventDefault();ev.stopPropagation();this.loadNewPath(ev.currentTarget.value);break;}}}
async onInputKeydown(ev){const{page}=this.state;switch(ev.key){case"ArrowUp":{if(ev.target.selectionStart===0){page.focus("previous");}
break;}
case"ArrowDown":{if(ev.target.selectionStart===page.query.length){page.focus("next");}
break;}
case"ArrowLeft":{if(ev.target.selectionStart===0&&page.previousPage){this.goToPreviousPage();}
break;}
case"ArrowRight":{if(ev.target.selectionStart===page.query.length){const focusedFieldName=this.state.page.focusedFieldName;if(focusedFieldName){const fieldDef=this.state.page.fieldDefs[focusedFieldName];if(fieldDef.relation||fieldDef.type==="properties"){this.followRelation(fieldDef);}}}
break;}
case"Enter":{const focusedFieldName=this.state.page.focusedFieldName;if(focusedFieldName){const fieldDef=this.state.page.fieldDefs[focusedFieldName];this.selectField(fieldDef);}else{ev.preventDefault();ev.stopPropagation();}
break;}
case"Escape":{ev.preventDefault();ev.stopPropagation();this.props.close();break;}}}}
return __exports;});;

/* /web/static/src/core/model_field_selector/utils.js */
odoo.define('@web/core/model_field_selector/utils',['@web/core/utils/hooks'],function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");function makeString(value){return String(value??"-");}
__exports.useLoadFieldInfo=useLoadFieldInfo;function useLoadFieldInfo(fieldService){fieldService||=useService("field");return async(resModel,path)=>{if(typeof path!=="string"||!path){return{resModel,fieldDef:null};}
const{isInvalid,names,modelsInfo}=await fieldService.loadPath(resModel,path);if(isInvalid){return{resModel,fieldDef:null};}
const name=names.at(-1);const modelInfo=modelsInfo.at(-1);return{resModel:modelInfo.resModel,fieldDef:modelInfo.fieldDefs[name]};};}
__exports.useLoadPathDescription=useLoadPathDescription;function useLoadPathDescription(fieldService){fieldService||=useService("field");return async(resModel,path,allowEmpty)=>{if([0,1].includes(path)){return{isInvalid:false,displayNames:[makeString(path)]};}
if(allowEmpty&&!path){return{isInvalid:false,displayNames:[]};}
if(typeof path!=="string"||!path){return{isInvalid:true,displayNames:[makeString()]};}
const{isInvalid,modelsInfo,names}=await fieldService.loadPath(resModel,path);const result={isInvalid:!!isInvalid,displayNames:[]};if(!isInvalid){const lastName=names.at(-1);const lastFieldDef=modelsInfo.at(-1).fieldDefs[lastName];if(["properties","properties_definition"].includes(lastFieldDef.type)){result.isInvalid=true;}}
for(let index=0;index<names.length;index++){const name=names[index];const fieldDef=modelsInfo[index]?.fieldDefs[name];result.displayNames.push(fieldDef?.string||makeString(name));}
return result;};}
return __exports;});;

/* /web/static/src/core/model_selector/model_selector.js */
odoo.define('@web/core/model_selector/model_selector',['@web/core/autocomplete/autocomplete','@web/core/utils/hooks','@web/core/utils/search','@web/core/l10n/translation','@odoo/owl'],function(require){'use strict';let __exports={};const{AutoComplete}=require("@web/core/autocomplete/autocomplete");const{useService}=require("@web/core/utils/hooks");const{fuzzyLookup}=require("@web/core/utils/search");const{_t}=require("@web/core/l10n/translation");const{Component,onWillStart}=require("@odoo/owl");const ModelSelector=__exports.ModelSelector=class ModelSelector extends Component{static template="web.ModelSelector";static components={AutoComplete};static props={onModelSelected:Function,id:{type:String,optional:true},value:{type:String,optional:true},models:{type:Array,optional:true},};setup(){this.orm=useService("orm");onWillStart(async()=>{if(!this.props.models){this.models=await this._fetchAvailableModels();}else{this.models=await this.orm.call("ir.model","display_name_for",[this.props.models,]);}
this.models=this.models.map((record)=>({label:record.display_name,technical:record.model,classList:{[`o_model_selector_${record.model}`]:1,},}));});}
get sources(){return[this.optionsSource];}
get optionsSource(){return{placeholder:_t("Loading..."),options:this.loadOptionsSource.bind(this),};}
onSelect(option){this.props.onModelSelected({label:option.label,technical:option.technical,});}
filterModels(name){if(!name){const visibleModels=this.models.slice(0,8);if(this.models.length-visibleModels.length>0){visibleModels.push({label:_t("Start typing..."),unselectable:true,classList:"o_m2o_start_typing",});}
return visibleModels;}
return fuzzyLookup(name,this.models,(model)=>model.technical+model.label);}
loadOptionsSource(request){const options=this.filterModels(request);if(!options.length){options.push({label:_t("No records"),classList:"o_m2o_no_result",unselectable:true,});}
return options;}
async _fetchAvailableModels(){const result=await this.orm.call("ir.model","get_available_models");return result||[];}}
return __exports;});;

/* /web/static/src/core/name_service.js */
odoo.define('@web/core/name_service',['@web/core/registry','@web/core/utils/arrays','@web/core/utils/concurrency'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{unique,zip}=require("@web/core/utils/arrays");const{Deferred}=require("@web/core/utils/concurrency");const ERROR_INACCESSIBLE_OR_MISSING=__exports.ERROR_INACCESSIBLE_OR_MISSING=Symbol("INACCESSIBLE OR MISSING RECORD ID");function isId(val){return Number.isInteger(val)&&val>=1;}
const nameService=__exports.nameService={dependencies:["orm"],async:["loadDisplayNames"],start(env,{orm}){let cache={};const batches={};function clearCache(){cache={};}
env.bus.addEventListener("ACTION_MANAGER:UPDATE",clearCache);function getMapping(resModel){if(!cache[resModel]){cache[resModel]={};}
return cache[resModel];}
function addDisplayNames(resModel,displayNames){const mapping=getMapping(resModel);for(const resId in displayNames){mapping[resId]=new Deferred();mapping[resId].resolve(displayNames[resId]);}}
async function loadDisplayNames(resModel,resIds){const mapping=getMapping(resModel);const proms=[];const resIdsToFetch=[];for(const resId of unique(resIds)){if(!isId(resId)){throw new Error(`Invalid ID: ${resId}`);}
if(!(resId in mapping)){mapping[resId]=new Deferred();resIdsToFetch.push(resId);}
proms.push(mapping[resId]);}
if(resIdsToFetch.length){if(batches[resModel]){batches[resModel].push(...resIdsToFetch);}else{batches[resModel]=resIdsToFetch;await Promise.resolve();const idsInBatch=unique(batches[resModel]);delete batches[resModel];const specification={display_name:{}};orm.silent.webSearchRead(resModel,[["id","in",idsInBatch]],{specification}).then(({records})=>{const displayNames=Object.fromEntries(records.map((rec)=>[rec.id,rec.display_name]));for(const resId of idsInBatch){mapping[resId].resolve(resId in displayNames?displayNames[resId]:ERROR_INACCESSIBLE_OR_MISSING);}});}}
const names=await Promise.all(proms);return Object.fromEntries(zip(resIds,names));}
return{addDisplayNames,clearCache,loadDisplayNames};},};registry.category("services").add("name",nameService);return __exports;});;

/* /web/static/src/core/navigation/navigation.js */
odoo.define('@web/core/navigation/navigation',['@odoo/owl','@web/core/utils/hooks','@web/core/utils/scrolling','@web/core/utils/timing'],function(require){'use strict';let __exports={};const{useEffect,useRef}=require("@odoo/owl");const{useService}=require("@web/core/utils/hooks");const{scrollTo}=require("@web/core/utils/scrolling");const{debounce,throttleForAnimation}=require("@web/core/utils/timing");const ACTIVE_ELEMENT_CLASS="focus";const throttledElementFocus=throttleForAnimation((el)=>el?.focus());function focusElement(el){throttledElementFocus.cancel();throttledElementFocus(el);}
class NavigationItem{constructor({index,el,setActiveItem,options}){this.index=index;this.options=options;this.setActiveItem=setActiveItem;this.el=el;if(options.shouldFocusChildInput){const subInput=el.querySelector(":scope input, :scope button, :scope textarea");this.target=subInput||el;}else{this.target=el;}
const focus=()=>this.focus(true);const onMouseEnter=(ev)=>this.onMouseEnter(ev);this.target.addEventListener("focus",focus);this.target.addEventListener("mouseenter",onMouseEnter);this.removeListeners=()=>{this.target.removeEventListener("focus",focus);this.target.removeEventListener("mouseenter",onMouseEnter);};}
select(){this.focus();this.target.click();}
focus(skipRealFocus=false){scrollTo(this.target);this.setActiveItem(this.index,this);this.target.classList.add(ACTIVE_ELEMENT_CLASS);if(!skipRealFocus&&!this.options.virtualFocus){focusElement(this.target);}}
defocus(){this.target.classList.remove(ACTIVE_ELEMENT_CLASS);}
onMouseEnter(){this.focus(true);this.options.onMouseEnter?.(this);}}
class Navigator{constructor(containerRef,options,hotkeyService){this.enabled=false;this.containerRef=containerRef;const focusAt=(increment)=>{const isFocused=this.activeItem?.el.isConnected;const index=this.currentActiveIndex+increment;if(isFocused&&index>=0){return this.items[index%this.items.length]?.focus();}else if(!isFocused&&increment>=0){return this.items[0]?.focus();}else{return this.items.at(-1)?.focus();}};this.options={shouldFocusChildInput:true,virtualFocus:false,itemsSelector:":scope .o-navigable",focusInitialElementOnDisabled:()=>true,...options,hotkeys:{home:(index,items)=>items[0]?.focus(),end:(index,items)=>items.at(-1)?.focus(),tab:()=>focusAt(+1),"shift+tab":()=>focusAt(-1),arrowdown:()=>focusAt(+1),arrowup:()=>focusAt(-1),enter:(index,items)=>{const item=items[index]||items[0];item?.select();},...(options?.hotkeys||{}),},};this.items=[];this.activeItem=undefined;this.currentActiveIndex=-1;this.initialFocusElement=undefined;this.debouncedUpdate=debounce(()=>this.update(),100);this.hotkeyRemoves=[];this.hotkeyService=hotkeyService;this.allowedInEditableHotkeys=["arrowup","arrowdown","enter","tab","shift+tab"];}
enable(){if(!this.containerRef.el||this.targetObserver){return;}
for(const[hotkey,callback]of Object.entries(this.options.hotkeys)){if(!callback){continue;}
this.hotkeyRemoves.push(this.hotkeyService.add(hotkey,()=>callback(this.currentActiveIndex,this.items),{allowRepeat:true,bypassEditableProtection:this.allowedInEditableHotkeys.includes(hotkey),}));}
this.targetObserver=new MutationObserver(()=>this.debouncedUpdate());this.targetObserver.observe(this.containerRef.el,{childList:true,subtree:true,});this.initialFocusElement=document.activeElement;this.currentActiveIndex=-1;this.update();if(this.options.onEnabled){this.options.onEnabled(this.items);}else if(this.items.length>0){this.items[0]?.focus();}
this.enabled=true;}
disable(){if(!this.enabled){return;}
if(this.targetObserver){this.targetObserver.disconnect();this.targetObserver=undefined;}
this.clearItems();for(const removeHotkey of this.hotkeyRemoves){removeHotkey();}
this.hotkeyRemoves=[];if(this.options.focusInitialElementOnDisabled()){focusElement(this.initialFocusElement);}
this.enabled=false;}
update(){if(!this.containerRef.el){return;}
const oldItemsLength=this.items.length;this.clearItems();const elements=[...this.containerRef.el.querySelectorAll(this.options.itemsSelector)];this.items=elements.map((el,index)=>{return new NavigationItem({index,el,options:this.options,setActiveItem:(index,el)=>this.setActiveItem(index,el),});});if(oldItemsLength!=this.items.length&&this.currentActiveIndex>=this.items.length){this.items.at(-1)?.focus();}}
setActiveItem(index,item){if(this.activeItem){this.activeItem.el.classList.remove(ACTIVE_ELEMENT_CLASS);}
this.activeItem=item;this.currentActiveIndex=index;}
clearItems(){for(const item of this.items){item.removeListeners();}
this.items=[];}}
__exports.useNavigation=useNavigation;function useNavigation(containerRef,options={}){const hotkeyService=useService("hotkey");containerRef=typeof containerRef==="string"?useRef(containerRef):containerRef;const navigator=new Navigator(containerRef,options,hotkeyService);useEffect((container)=>{if(container){navigator.enable();}else if(navigator){navigator.disable();}},()=>[containerRef.el]);return{enable:()=>navigator.enable(),disable:()=>navigator.disable(),};}
return __exports;});;

/* /web/static/src/core/network/download.js */
odoo.define('@web/core/network/download',['@web/core/l10n/translation','@web/core/network/rpc','@web/core/browser/browser'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{makeErrorFromResponse,ConnectionLostError}=require("@web/core/network/rpc");const{browser}=require("@web/core/browser/browser");const HEX_ESCAPE_REPLACE_REGEXP=/%([0-9A-Fa-f]{2})/g;const NON_LATIN1_REGEXP=/[^\x20-\x7e\xa0-\xff]/g;const QESC_REGEXP=/\\([\u0000-\u007f])/g;const PARAM_REGEXP=/;[\x09\x20]*([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\x09\x20]*=[\x09\x20]*("(?:[\x20!\x23-\x5b\x5d-\x7e\x80-\xff]|\\[\x20-\x7e])*"|[!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\x09\x20]*/g;const EXT_VALUE_REGEXP=/^([A-Za-z0-9!#$%&+\-^_`{}~]+)'(?:[A-Za-z]{2,3}(?:-[A-Za-z]{3}){0,3}|[A-Za-z]{4,8}|)'((?:%[0-9A-Fa-f]{2}|[A-Za-z0-9!#$&+.^_`|~-])+)$/;const DISPOSITION_TYPE_REGEXP=/^([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\x09\x20]*(?:$|;)/;function decodefield(str){const match=EXT_VALUE_REGEXP.exec(str);if(!match){throw new TypeError("invalid extended field value");}
const charset=match[1].toLowerCase();const encoded=match[2];switch(charset){case"iso-8859-1":return encoded.replace(HEX_ESCAPE_REPLACE_REGEXP,pdecode).replace(NON_LATIN1_REGEXP,"?");case"utf-8":return decodeURIComponent(encoded);default:throw new TypeError("unsupported charset in extended field");}}
function parse(string){if(!string||typeof string!=="string"){throw new TypeError("argument string is required");}
let match=DISPOSITION_TYPE_REGEXP.exec(string);if(!match){throw new TypeError("invalid type format");}
let index=match[0].length;const type=match[1].toLowerCase();let key;const names=[];const params={};let value;index=PARAM_REGEXP.lastIndex=match[0].substr(-1)===";"?index-1:index;while((match=PARAM_REGEXP.exec(string))){if(match.index!==index){throw new TypeError("invalid parameter format");}
index+=match[0].length;key=match[1].toLowerCase();value=match[2];if(names.indexOf(key)!==-1){throw new TypeError("invalid duplicate parameter");}
names.push(key);if(key.indexOf("*")+1===key.length){key=key.slice(0,-1);value=decodefield(value);params[key]=value;continue;}
if(typeof params[key]==="string"){continue;}
if(value[0]==='"'){value=value.substr(1,value.length-2).replace(QESC_REGEXP,"$1");}
params[key]=value;}
if(index!==-1&&index!==string.length){throw new TypeError("invalid parameter format");}
return new ContentDisposition(type,params);}
function pdecode(str,hex){return String.fromCharCode(parseInt(hex,16));}
function ContentDisposition(type,parameters){this.type=type;this.parameters=parameters;}
function _download(data,filename,mimetype){let self=window,defaultMime="application/octet-stream",mimeType=mimetype||defaultMime,payload=data,url=!filename&&!mimetype&&payload,anchor=document.createElement("a"),toString=function(a){return String(a);},myBlob=self.Blob||self.MozBlob||self.WebKitBlob||toString,fileName=filename||"download",blob,reader;myBlob=myBlob.call?myBlob.bind(self):Blob;if(String(this)==="true"){payload=[payload,mimeType];mimeType=payload[0];payload=payload[1];}
if(url&&url.length<2048){fileName=url.split("/").pop().split("?")[0];anchor.href=url;if(anchor.href.indexOf(url)!==-1){return new Promise((resolve,reject)=>{let xhr=new browser.XMLHttpRequest();xhr.open("GET",url,true);configureBlobDownloadXHR(xhr,{onSuccess:resolve,onFailure:reject,url});xhr.send();});}}
if(/^data:[\w+\-]+\/[\w+\-]+[,;]/.test(payload)){if(payload.length>1024*1024*1.999&&myBlob!==toString){payload=dataUrlToBlob(payload);mimeType=payload.type||defaultMime;}else{return navigator.msSaveBlob?navigator.msSaveBlob(dataUrlToBlob(payload),fileName):saver(payload);}}
blob=payload instanceof myBlob?payload:new myBlob([payload],{type:mimeType});function dataUrlToBlob(strUrl){let parts=strUrl.split(/[:;,]/),type=parts[1],decoder=parts[2]==="base64"?atob:decodeURIComponent,binData=decoder(parts.pop()),mx=binData.length,i=0,uiArr=new Uint8Array(mx);for(i;i<mx;++i){uiArr[i]=binData.charCodeAt(i);}
return new myBlob([uiArr],{type});}
function saver(url,winMode){if("download"in anchor){anchor.href=url;anchor.setAttribute("download",fileName);anchor.className="download-js-link";anchor.innerText=_t("downloading...");anchor.style.display="none";document.body.appendChild(anchor);setTimeout(()=>{anchor.click();document.body.removeChild(anchor);if(winMode===true){setTimeout(()=>{self.URL.revokeObjectURL(anchor.href);},250);}},66);return true;}
if(/(Version)\/(\d+)\.(\d+)(?:\.(\d+))?.*Safari\//.test(navigator.userAgent)){url=url.replace(/^data:([\w\/\-+]+)/,defaultMime);if(!window.open(url)){if(confirm("Displaying New Document\n\nUse Save As... to download, then click back to return to this page.")){location.href=url;}}
return true;}
let f=document.createElement("iframe");document.body.appendChild(f);if(!winMode){url=`data:${url.replace(/^data:([\w\/\-+]+)/, defaultMime)}`;}
f.src=url;setTimeout(()=>{document.body.removeChild(f);},333);}
if(navigator.msSaveBlob){return navigator.msSaveBlob(blob,fileName);}
if(self.URL){saver(self.URL.createObjectURL(blob),true);}else{if(typeof blob==="string"||blob.constructor===toString){try{return saver(`data:${mimeType};base64,${self.btoa(blob)}`);}catch{return saver(`data:${mimeType},${encodeURIComponent(blob)}`);}}
reader=new FileReader();reader.onload=function(){saver(this.result);};reader.readAsDataURL(blob);}
return true;}
__exports.downloadFile=downloadFile;function downloadFile(data,filename,mimetype){return downloadFile._download(data,filename,mimetype);}
downloadFile._download=_download;__exports.download=download;function download(options){return download._download(options);}
download._download=(options)=>{return new Promise((resolve,reject)=>{const xhr=new browser.XMLHttpRequest();let data;if(Object.prototype.hasOwnProperty.call(options,"form")){xhr.open(options.form.method,options.form.action);data=new FormData(options.form);}else{xhr.open("POST",options.url);data=new FormData();Object.entries(options.data).forEach((entry)=>{const[key,value]=entry;data.append(key,value);});}
data.append("token","dummy-because-api-expects-one");if(odoo.csrf_token){data.append("csrf_token",odoo.csrf_token);}
configureBlobDownloadXHR(xhr,{onSuccess:resolve,onFailure:reject,url:options.url,});xhr.send(data);});};__exports.configureBlobDownloadXHR=configureBlobDownloadXHR;function configureBlobDownloadXHR(xhr,{onSuccess=()=>{},onFailure=()=>{},url}={}){xhr.responseType="blob";xhr.onload=()=>{const mimetype=xhr.response.type;const header=(xhr.getResponseHeader("Content-Disposition")||"").replace(/;$/,"");const filename=header?parse(header).parameters.filename:null;if(xhr.status===200&&(mimetype!=="text/html"||filename)){_download(xhr.response,filename,mimetype);onSuccess(filename);}else if(xhr.status===502){onFailure(new ConnectionLostError(url));}else{const decoder=new FileReader();decoder.onload=()=>{const contents=decoder.result;const doc=new DOMParser().parseFromString(contents,"text/html");const nodes=doc.body.children.length===0?[doc.body]:doc.body.children;let error;try{const node=nodes[1]||nodes[0];error=JSON.parse(node.textContent);}catch{error={message:"Arbitrary Uncaught Python Exception",data:{debug:`${xhr.status}`+`\n`+`${nodes.length > 0 ? nodes[0].textContent : ""}
                                ${nodes.length > 1 ? nodes[1].textContent : ""}`,},};}
error=makeErrorFromResponse(error);onFailure(error);};decoder.readAsText(xhr.response);}};xhr.onerror=()=>{onFailure(new ConnectionLostError(url));};}
return __exports;});;

/* /web/static/src/core/network/http_service.js */
odoo.define('@web/core/network/http_service',['@web/core/browser/browser','@web/core/registry'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");function checkResponseStatus(response){if(response.status===502){throw new Error("Failed to fetch");}}
__exports.get=get;async function get(route,readMethod="json"){const response=await browser.fetch(route,{method:"GET"});checkResponseStatus(response);return response[readMethod]();}
__exports.post=post;async function post(route,params={},readMethod="json"){let formData=params;if(!(formData instanceof FormData)){formData=new FormData();for(const key in params){const value=params[key];if(Array.isArray(value)&&value.length){for(const val of value){formData.append(key,val);}}else{formData.append(key,value);}}}
const response=await browser.fetch(route,{body:formData,method:"POST",});checkResponseStatus(response);return response[readMethod]();}
const httpService=__exports.httpService={start(){return{get,post};},};registry.category("services").add("http",httpService);return __exports;});;

/* /web/static/src/core/network/rpc.js */
odoo.define('@web/core/network/rpc',['@odoo/owl','@web/core/browser/browser'],function(require){'use strict';let __exports={};const{EventBus}=require("@odoo/owl");const{browser}=require("@web/core/browser/browser");const rpcBus=__exports.rpcBus=new EventBus();const RPCError=__exports.RPCError=class RPCError extends Error{constructor(){super(...arguments);this.name="RPC_ERROR";this.type="server";this.code=null;this.data=null;this.exceptionName=null;this.subType=null;}}
const ConnectionLostError=__exports.ConnectionLostError=class ConnectionLostError extends Error{constructor(url,...args){super(`Connection to "${url}" couldn't be established or was interrupted`,...args);this.url=url;}}
const ConnectionAbortedError=__exports.ConnectionAbortedError=class ConnectionAbortedError extends Error{}
__exports.makeErrorFromResponse=makeErrorFromResponse;function makeErrorFromResponse(reponse){const{code,data:errorData,message,type:subType}=reponse;const error=new RPCError();error.exceptionName=errorData.name;error.subType=subType;error.data=errorData;error.message=message;error.code=code;return error;}
let rpcId=0;__exports.rpc=rpc;function rpc(url,params={},settings={}){return rpc._rpc(url,params,settings);}
rpc._rpc=function(url,params,settings){const XHR=browser.XMLHttpRequest;const data={id:rpcId++,jsonrpc:"2.0",method:"call",params:params,};const request=settings.xhr||new XHR();let rejectFn;const promise=new Promise((resolve,reject)=>{rejectFn=reject;rpcBus.trigger("RPC:REQUEST",{data,url,settings});request.addEventListener("load",()=>{if(request.status===502){const error=new ConnectionLostError(url);rpcBus.trigger("RPC:RESPONSE",{data,settings,error});reject(error);return;}
let params;try{params=JSON.parse(request.response);}catch{const error=new ConnectionLostError(url);rpcBus.trigger("RPC:RESPONSE",{data,settings,error});return reject(error);}
const{error:responseError,result:responseResult}=params;if(!params.error){rpcBus.trigger("RPC:RESPONSE",{data,settings,result:params.result});return resolve(responseResult);}
const error=makeErrorFromResponse(responseError);error.id=data.id;error.model=data.params.model;rpcBus.trigger("RPC:RESPONSE",{data,settings,error});reject(error);});request.addEventListener("error",()=>{const error=new ConnectionLostError(url);rpcBus.trigger("RPC:RESPONSE",{data,settings,error});reject(error);});request.open("POST",url);const headers=settings.headers||{};headers["Content-Type"]="application/json";for(let[header,value]of Object.entries(headers)){request.setRequestHeader(header,value);}
request.send(JSON.stringify(data));});promise.abort=function(rejectError=true){if(request.abort){request.abort();}
const error=new ConnectionAbortedError("XmlHttpRequestError abort");rpcBus.trigger("RPC:RESPONSE",{data,settings,error});if(rejectError){rejectFn(error);}};return promise;};return __exports;});;

/* /web/static/src/core/notebook/notebook.js */
odoo.define('@web/core/notebook/notebook',['@web/core/utils/scrolling','@odoo/owl','@web/core/browser/browser'],function(require){'use strict';let __exports={};const{scrollTo}=require("@web/core/utils/scrolling");const{Component,onWillUpdateProps,useEffect,useExternalListener,useRef,useState,}=require("@odoo/owl");const{browser}=require("@web/core/browser/browser");const Notebook=__exports.Notebook=class Notebook extends Component{static template="web.Notebook";static defaultProps={className:"",orientation:"horizontal",onPageUpdate:()=>{},};static props={slots:{type:Object,optional:true},pages:{type:Object,optional:true},class:{optional:true},className:{type:String,optional:true},anchors:{type:Object,optional:true},defaultPage:{type:String,optional:true},orientation:{type:String,optional:true},icons:{type:Object,optional:true},onPageUpdate:{type:Function,optional:true},};setup(){this.activePane=useRef("activePane");this.anchorTarget=null;this.pages=this.computePages(this.props);this.state=useState({currentPage:null});this.state.currentPage=this.computeActivePage(this.props.defaultPage,true);useExternalListener(browser,"click",this.onAnchorClicked);useEffect(()=>{this.props.onPageUpdate(this.state.currentPage);if(this.anchorTarget){const matchingEl=this.activePane.el.querySelector(`#${this.anchorTarget}`);scrollTo(matchingEl,{isAnchor:true});this.anchorTarget=null;}
this.activePane.el?.classList.add("show");},()=>[this.state.currentPage]);onWillUpdateProps((nextProps)=>{const activateDefault=this.props.defaultPage!==nextProps.defaultPage||!this.defaultVisible;this.pages=this.computePages(nextProps);this.state.currentPage=this.computeActivePage(nextProps.defaultPage,activateDefault);});}
get navItems(){return this.pages.filter((e)=>e[1].isVisible);}
get page(){const page=this.pages.find((e)=>e[0]===this.state.currentPage)[1];return page.Component&&page;}
onAnchorClicked(ev){if(!this.props.anchors){return;}
const href=ev.target.closest("a")?.getAttribute("href");if(!href){return;}
const id=href.substring(1);if(this.props.anchors[id]){if(this.state.currentPage!==this.props.anchors[id].target){ev.preventDefault();this.anchorTarget=id;this.state.currentPage=this.props.anchors[id].target;}}}
activatePage(pageIndex){if(!this.disabledPages.includes(pageIndex)&&this.state.currentPage!==pageIndex){this.activePane.el?.classList.remove("show");this.state.currentPage=pageIndex;}}
computePages(props){if(!props.slots&&!props.pages){return[];}
if(props.pages){for(const page of props.pages){page.isVisible=true;}}
this.disabledPages=[];const pages=[];const pagesWithIndex=[];for(const[k,v]of Object.entries({...props.slots,...props.pages})){const id=v.id||k;if(v.index){pagesWithIndex.push([id,v]);}else{pages.push([id,v]);}
if(v.isDisabled){this.disabledPages.push(k);}}
for(const page of pagesWithIndex){pages.splice(page[1].index,0,page);}
return pages;}
computeActivePage(defaultPage,activateDefault){if(!this.pages.length){return null;}
const pages=this.pages.filter((e)=>e[1].isVisible).map((e)=>e[0]);if(defaultPage){if(!pages.includes(defaultPage)){this.defaultVisible=false;}else{this.defaultVisible=true;if(activateDefault){return defaultPage;}}}
const current=this.state.currentPage;if(!current||(current&&!pages.includes(current))){return pages[0];}
return current;}}
return __exports;});;

/* /web/static/src/core/notifications/notification.js */
odoo.define('@web/core/notifications/notification',['@odoo/owl'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const Notification=__exports.Notification=class Notification extends Component{static template="web.NotificationWowl";static props={message:{validate:(m)=>{return(typeof m==="string"||(typeof m==="object"&&typeof m.toString==="function"));},},title:{type:[String,Boolean,{toString:Function}],optional:true},type:{type:String,optional:true,validate:(t)=>["warning","danger","success","info"].includes(t),},className:{type:String,optional:true},buttons:{type:Array,element:{type:Object,shape:{name:{type:String},icon:{type:String,optional:true},primary:{type:Boolean,optional:true},onClick:Function,},},optional:true,},close:{type:Function},refresh:{type:Function},freeze:{type:Function},};static defaultProps={buttons:[],className:"",type:"warning",};}
return __exports;});;

/* /web/static/src/core/notifications/notification_container.js */
odoo.define('@web/core/notifications/notification_container',['@web/core/notifications/notification','@web/core/transition','@odoo/owl'],function(require){'use strict';let __exports={};const{Notification}=require("@web/core/notifications/notification");const{Transition}=require("@web/core/transition");const{Component,xml,useState}=require("@odoo/owl");const NotificationContainer=__exports.NotificationContainer=class NotificationContainer extends Component{static props={notifications:Object,};static template=xml`
        <div class="o_notification_manager">
            <t t-foreach="notifications" t-as="notification" t-key="notification">
                <Transition leaveDuration="0" immediate="true" name="'o_notification_fade'" t-slot-scope="transition">
                    <Notification t-props="notification_value.props" className="(notification_value.props.className || '') + ' ' + transition.className"/>
                </Transition>
            </t>
        </div>`;static components={Notification,Transition};setup(){this.notifications=useState(this.props.notifications);}}
return __exports;});;

/* /web/static/src/core/notifications/notification_service.js */
odoo.define('@web/core/notifications/notification_service',['@web/core/browser/browser','@web/core/registry','@web/core/notifications/notification_container','@odoo/owl'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const{NotificationContainer}=require("@web/core/notifications/notification_container");const{reactive}=require("@odoo/owl");const AUTOCLOSE_DELAY=4000;const notificationService=__exports.notificationService={notificationContainer:NotificationContainer,start(){let notifId=0;const notifications=reactive({});registry.category("main_components").add(this.notificationContainer.name,{Component:this.notificationContainer,props:{notifications},},{sequence:100});function add(message,options={}){const id=++notifId;const closeFn=()=>close(id);const props=Object.assign({},options,{message,close:closeFn});const autocloseDelay=options.autocloseDelay??AUTOCLOSE_DELAY;const sticky=props.sticky;delete props.sticky;delete props.onClose;delete props.autocloseDelay;let closeTimeout;const refresh=sticky?()=>{}:()=>{closeTimeout=browser.setTimeout(closeFn,autocloseDelay);};const freeze=sticky?()=>{}:()=>{browser.clearTimeout(closeTimeout);};props.refresh=refreshAll;props.freeze=freezeAll;const notification={id,props,onClose:options.onClose,refresh,freeze,};notifications[id]=notification;if(!sticky){closeTimeout=browser.setTimeout(closeFn,autocloseDelay);}
return closeFn;}
function refreshAll(){for(const id in notifications){notifications[id].refresh();}}
function freezeAll(){for(const id in notifications){notifications[id].freeze();}}
function close(id){if(notifications[id]){const notification=notifications[id];if(notification.onClose){notification.onClose();}
delete notifications[id];}}
return{add};},};registry.category("services").add("notification",notificationService);return __exports;});;

/* /web/static/src/core/orm_service.js */
odoo.define('@web/core/orm_service',['@web/core/registry','@web/core/network/rpc','@web/core/user'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{rpc}=require("@web/core/network/rpc");const{user}=require("@web/core/user");const x2ManyCommands=__exports.x2ManyCommands={CREATE:0,create(virtualID,values){delete values.id;return[x2ManyCommands.CREATE,virtualID||false,values];},UPDATE:1,update(id,values){delete values.id;return[x2ManyCommands.UPDATE,id,values];},DELETE:2,delete(id){return[x2ManyCommands.DELETE,id,false];},UNLINK:3,unlink(id){return[x2ManyCommands.UNLINK,id,false];},LINK:4,link(id){return[x2ManyCommands.LINK,id,false];},CLEAR:5,clear(){return[x2ManyCommands.CLEAR,false,false];},SET:6,set(ids){return[x2ManyCommands.SET,false,ids];},};function validateModel(value){if(typeof value!=="string"||value.length===0){throw new Error(`Invalid model name: ${value}`);}}
function validatePrimitiveList(name,type,value){if(!Array.isArray(value)||value.some((val)=>typeof val!==type)){throw new Error(`Invalid ${name} list: ${value}`);}}
function validateObject(name,obj){if(typeof obj!=="object"||obj===null||Array.isArray(obj)){throw new Error(`${name} should be an object`);}}
function validateArray(name,array){if(!Array.isArray(array)){throw new Error(`${name} should be an array`);}}
const UPDATE_METHODS=__exports.UPDATE_METHODS=["unlink","create","write","web_save","action_archive","action_unarchive",];const ORM=__exports.ORM=class ORM{constructor(){this.rpc=rpc;this._silent=false;}
get silent(){return Object.assign(Object.create(this),{_silent:true});}
call(model,method,args=[],kwargs={}){validateModel(model);const url=`/web/dataset/call_kw/${model}/${method}`;const fullContext=Object.assign({},user.context,kwargs.context||{});const fullKwargs=Object.assign({},kwargs,{context:fullContext});const params={model,method,args,kwargs:fullKwargs,};return this.rpc(url,params,{silent:this._silent});}
create(model,records,kwargs={}){validateArray("records",records);for(const record of records){validateObject("record",record);}
return this.call(model,"create",[records],kwargs);}
read(model,ids,fields,kwargs={}){validatePrimitiveList("ids","number",ids);if(fields){validatePrimitiveList("fields","string",fields);}
if(!ids.length){return Promise.resolve([]);}
return this.call(model,"read",[ids,fields],kwargs);}
readGroup(model,domain,fields,groupby,kwargs={}){validateArray("domain",domain);validatePrimitiveList("fields","string",fields);validatePrimitiveList("groupby","string",groupby);groupby=[...new Set(groupby)];return this.call(model,"read_group",[],{...kwargs,domain,fields,groupby});}
search(model,domain,kwargs={}){validateArray("domain",domain);return this.call(model,"search",[domain],kwargs);}
searchRead(model,domain,fields,kwargs={}){validateArray("domain",domain);if(fields){validatePrimitiveList("fields","string",fields);}
return this.call(model,"search_read",[],{...kwargs,domain,fields});}
searchCount(model,domain,kwargs={}){validateArray("domain",domain);return this.call(model,"search_count",[domain],kwargs);}
unlink(model,ids,kwargs={}){validatePrimitiveList("ids","number",ids);if(!ids.length){return Promise.resolve(true);}
return this.call(model,"unlink",[ids],kwargs);}
webReadGroup(model,domain,fields,groupby,kwargs={}){validateArray("domain",domain);validatePrimitiveList("fields","string",fields);validatePrimitiveList("groupby","string",groupby);return this.call(model,"web_read_group",[],{...kwargs,groupby,domain,fields,});}
webRead(model,ids,kwargs={}){validatePrimitiveList("ids","number",ids);return this.call(model,"web_read",[ids],kwargs);}
webSearchRead(model,domain,kwargs={}){validateArray("domain",domain);return this.call(model,"web_search_read",[],{...kwargs,domain});}
write(model,ids,data,kwargs={}){validatePrimitiveList("ids","number",ids);validateObject("data",data);return this.call(model,"write",[ids,data],kwargs);}
webSave(model,ids,data,kwargs={}){validatePrimitiveList("ids","number",ids);validateObject("data",data);return this.call(model,"web_save",[ids,data],kwargs);}}
const ormService=__exports.ormService={async:["call","create","nameGet","read","readGroup","search","searchRead","unlink","webSearchRead","write",],start(){return new ORM();},};registry.category("services").add("orm",ormService);return __exports;});;

/* /web/static/src/core/overlay/overlay_container.js */
odoo.define('@web/core/overlay/overlay_container',['@odoo/owl','@web/core/utils/arrays','@web/core/utils/components'],function(require){'use strict';let __exports={};const{Component,onWillDestroy,useChildSubEnv,useEffect,useRef,useState}=require("@odoo/owl");const{sortBy}=require("@web/core/utils/arrays");const{ErrorHandler}=require("@web/core/utils/components");const OVERLAY_ITEMS=[];const OVERLAY_SYMBOL=__exports.OVERLAY_SYMBOL=Symbol("Overlay");class OverlayItem extends Component{static template="web.OverlayContainer.Item";static components={};static props={component:{type:Function},props:{type:Object},env:{type:Object,optional:true},};setup(){this.rootRef=useRef("rootRef");OVERLAY_ITEMS.push(this);onWillDestroy(()=>{const index=OVERLAY_ITEMS.indexOf(this);OVERLAY_ITEMS.splice(index,1);});if(this.props.env){this.__owl__.childEnv=this.props.env;}
useChildSubEnv({[OVERLAY_SYMBOL]:{contains:(target)=>this.contains(target),},});}
get subOverlays(){return OVERLAY_ITEMS.slice(OVERLAY_ITEMS.indexOf(this));}
contains(target){return(this.rootRef.el?.contains(target)||this.subOverlays.some((oi)=>oi.rootRef.el?.contains(target)));}}
const OverlayContainer=__exports.OverlayContainer=class OverlayContainer extends Component{static template="web.OverlayContainer";static components={ErrorHandler,OverlayItem};static props={overlays:Object};setup(){this.root=useRef("root");this.state=useState({rootEl:null});useEffect(()=>{this.state.rootEl=this.root.el;},()=>[this.root.el]);}
get sortedOverlays(){return sortBy(Object.values(this.props.overlays),(overlay)=>overlay.sequence);}
isVisible(overlay){return overlay.rootId===this.state.rootEl?.getRootNode()?.host?.id;}
handleError(overlay,error){overlay.remove();Promise.resolve().then(()=>{throw error;});}}
return __exports;});;

/* /web/static/src/core/overlay/overlay_service.js */
odoo.define('@web/core/overlay/overlay_service',['@odoo/owl','@web/core/registry','@web/core/overlay/overlay_container'],function(require){'use strict';let __exports={};const{markRaw,reactive}=require("@odoo/owl");const{registry}=require("@web/core/registry");const{OverlayContainer}=require("@web/core/overlay/overlay_container");const mainComponents=registry.category("main_components");const services=registry.category("services");const overlayService=__exports.overlayService={start(){let nextId=0;const overlays=reactive({});mainComponents.add("OverlayContainer",{Component:OverlayContainer,props:{overlays},});const remove=(id,onRemove=()=>{})=>{if(id in overlays){onRemove();delete overlays[id];}};const add=(component,props,options={})=>{const id=++nextId;const removeCurrentOverlay=()=>remove(id,options.onRemove);overlays[id]={id,component,env:options.env&&markRaw(options.env),props,remove:removeCurrentOverlay,sequence:options.sequence??50,rootId:options.rootId,};return removeCurrentOverlay;};return{add,overlays};},};services.add("overlay",overlayService);return __exports;});;

/* /web/static/src/core/pager/pager.js */
odoo.define('@web/core/pager/pager',['@web/core/utils/hooks','@web/core/utils/numbers','@odoo/owl'],function(require){'use strict';let __exports={};const{useAutofocus}=require("@web/core/utils/hooks");const{clamp}=require("@web/core/utils/numbers");const{Component,useExternalListener,useState,EventBus}=require("@odoo/owl");const PAGER_UPDATED_EVENT=__exports.PAGER_UPDATED_EVENT="PAGER:UPDATED";const pagerBus=__exports.pagerBus=new EventBus();const Pager=__exports.Pager=class Pager extends Component{static template="web.Pager";static defaultProps={isEditable:true,withAccessKey:true,};static props={offset:Number,limit:Number,total:Number,onUpdate:Function,isEditable:{type:Boolean,optional:true},withAccessKey:{type:Boolean,optional:true},updateTotal:{type:Function,optional:true},};setup(){this.state=useState({isEditing:false,isDisabled:false,});this.inputRef=useAutofocus();useExternalListener(document,"mousedown",this.onClickAway,{capture:true});}
get minimum(){return this.props.offset+1;}
get maximum(){return Math.min(this.props.offset+this.props.limit,this.props.total);}
get value(){const parts=[this.minimum];if(this.props.limit>1){parts.push(this.maximum);}
return parts.join("-");}
get isSinglePage(){return!this.props.updateTotal&&this.minimum===1&&this.maximum===this.props.total;}
async navigate(direction){let minimum=this.props.offset+this.props.limit*direction;let total=this.props.total;if(this.props.updateTotal&&minimum<0){total=await this.props.updateTotal();}
if(minimum>=total){if(!this.props.updateTotal){minimum=0;}}else if(minimum<0&&this.props.limit===1){minimum=total-1;}else if(minimum<0&&this.props.limit>1){minimum=total-(total%this.props.limit||this.props.limit);}
this.update(minimum,this.props.limit,true);}
async parse(value){let[minimum,maximum]=value.trim().split(/\s*[-\s,;]\s*/);minimum=parseInt(minimum,10);maximum=maximum?parseInt(maximum,10):minimum;if(this.props.updateTotal){return{minimum:minimum-1,maximum};}
return{minimum:clamp(minimum,1,this.props.total)-1,maximum:clamp(maximum,1,this.props.total),};}
async setValue(value){const{minimum,maximum}=await this.parse(value);if(!isNaN(minimum)&&!isNaN(maximum)&&minimum<maximum){this.update(minimum,maximum-minimum);}}
async update(offset,limit,hasNavigated){this.state.isDisabled=true;try{await this.props.onUpdate({offset,limit},hasNavigated);}finally{if(this.env.isSmall){pagerBus.trigger(PAGER_UPDATED_EVENT,{value:this.value,total:this.props.total,});}
this.state.isDisabled=false;this.state.isEditing=false;}}
async updateTotal(){if(!this.state.isDisabled){this.state.isDisabled=true;await this.props.updateTotal();this.state.isDisabled=false;}}
onClickAway(ev){if(ev.target!==this.inputRef.el){this.state.isEditing=false;}}
onInputBlur(){this.state.isEditing=false;}
onInputChange(ev){this.setValue(ev.target.value);if(!this.state.isDisabled){ev.preventDefault();}}
onInputKeydown(ev){switch(ev.key){case"Enter":ev.preventDefault();ev.stopPropagation();this.setValue(ev.currentTarget.value);break;case"Escape":ev.preventDefault();ev.stopPropagation();this.state.isEditing=false;break;}}
onValueClick(){if(this.props.isEditable&&!this.state.isEditing&&!this.state.isDisabled){if(this.inputRef.el){this.inputRef.el.focus();}
this.state.isEditing=true;}}}
return __exports;});;

/* /web/static/src/core/pager/pager_indicator.js */
odoo.define('@web/core/pager/pager_indicator',['@web/core/browser/browser','@web/core/registry','@web/core/transition','@web/core/utils/hooks','@odoo/owl','@web/core/pager/pager'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const{Transition}=require("@web/core/transition");const{useBus}=require("@web/core/utils/hooks");const{Component,useState}=require("@odoo/owl");const{PAGER_UPDATED_EVENT,pagerBus}=require("@web/core/pager/pager");const PagerIndicator=__exports.PagerIndicator=class PagerIndicator extends Component{static template="web.PagerIndicator";static components={Transition};static props={};setup(){this.state=useState({show:false,value:"-",total:0,});this.startShowTimer=null;useBus(pagerBus,PAGER_UPDATED_EVENT,this.pagerUpdate);}
pagerUpdate({detail}){this.state.value=detail.value;this.state.total=detail.total;browser.clearTimeout(this.startShowTimer);this.state.show=true;this.startShowTimer=browser.setTimeout(()=>{this.state.show=false;},1400);}}
registry.category("main_components").add("PagerIndicator",{Component:PagerIndicator,});return __exports;});;

/* /web/static/src/core/popover/popover.js */
odoo.define('@web/core/popover/popover',['@odoo/owl','@web/core/hotkeys/hotkey_hook','@web/core/overlay/overlay_container','@web/core/position/position_hook','@web/core/ui/ui_service','@web/core/utils/classname','@web/core/utils/hooks'],function(require){'use strict';let __exports={};const{Component,onMounted,onWillDestroy,useComponent,useRef}=require("@odoo/owl");const{useHotkey}=require("@web/core/hotkeys/hotkey_hook");const{OVERLAY_SYMBOL}=require("@web/core/overlay/overlay_container");const{usePosition}=require("@web/core/position/position_hook");const{useActiveElement}=require("@web/core/ui/ui_service");const{addClassesToElement,mergeClasses}=require("@web/core/utils/classname");const{useForwardRefToParent}=require("@web/core/utils/hooks");function useEarlyExternalListener(target,eventName,handler,eventParams){const component=useComponent();const boundHandler=handler.bind(component);target.addEventListener(eventName,boundHandler,eventParams);onWillDestroy(()=>target.removeEventListener(eventName,boundHandler,eventParams));}
function useClickAway(callback){const pointerDownHandler=(event)=>{callback(event.composedPath()[0]);};const blurHandler=(ev)=>{const target=ev.relatedTarget||document.activeElement;if(target?.tagName==="IFRAME"){callback(target);}};useEarlyExternalListener(window,"pointerdown",pointerDownHandler,{capture:true});useEarlyExternalListener(window,"blur",blurHandler,{capture:true});}
const POPOVERS=new WeakMap();__exports.getPopoverForTarget=getPopoverForTarget;function getPopoverForTarget(target){return POPOVERS.get(target);}
const Popover=__exports.Popover=class Popover extends Component{static template="web.Popover";static defaultProps={animation:true,arrow:true,class:"",closeOnClickAway:()=>true,closeOnEscape:true,componentProps:{},fixedPosition:false,position:"bottom",setActiveElement:false,};static props={component:{type:Function},componentProps:{optional:true,type:Object},target:{validate:(target)=>{const Element=target?.ownerDocument?.defaultView?.Element;return((Boolean(Element)&&(target instanceof Element||target instanceof window.Element))||(typeof target==="object"&&target?.constructor?.name?.endsWith("Element")));},},animation:{optional:true,type:Boolean},arrow:{optional:true,type:Boolean},class:{optional:true},role:{optional:true,type:String},fixedPosition:{optional:true,type:Boolean},holdOnHover:{optional:true,type:Boolean},onPositioned:{optional:true,type:Function},position:{optional:true,type:String,validate:(p)=>{const[d,v="middle"]=p.split("-");return(["top","bottom","left","right"].includes(d)&&["start","middle","end","fit"].includes(v));},},close:{optional:true,type:Function},closeOnClickAway:{optional:true,type:Function},closeOnEscape:{optional:true,type:Boolean},setActiveElement:{optional:true,type:Boolean},ref:{optional:true,type:Function},slots:{optional:true,type:Object},};static animationTime=200;setup(){if(this.props.setActiveElement){useActiveElement("ref");}
useForwardRefToParent("ref");this.popoverRef=useRef("ref");let shouldAnimate=this.props.animation;this.position=usePosition("ref",()=>this.props.target,{onPositioned:(el,solution)=>{(this.props.onPositioned||this.onPositioned.bind(this))(el,solution);if(this.props.arrow&&this.props.onPositioned){this.onPositioned.bind(this)(el,solution);}
if(shouldAnimate){shouldAnimate=false;const transform={top:["translateY(-5%)","translateY(0)"],right:["translateX(5%)","translateX(0)"],bottom:["translateY(5%)","translateY(0)"],left:["translateX(-5%)","translateX(0)"],}[solution.direction];this.position.lock();const animation=el.animate({opacity:[0,1],transform},this.constructor.animationTime);animation.finished.then(this.position.unlock);}
if(this.props.fixedPosition){this.position.lock();}},position:this.props.position,});onMounted(()=>POPOVERS.set(this.props.target,this.popoverRef.el));onWillDestroy(()=>POPOVERS.delete(this.props.target));if(!this.props.close){return;}
if(this.props.target.isConnected){useClickAway((target)=>this.onClickAway(target));if(this.props.closeOnEscape){useHotkey("escape",()=>this.props.close());}
const targetObserver=new MutationObserver(this.onTargetMutate.bind(this));targetObserver.observe(this.props.target.parentElement,{childList:true});onWillDestroy(()=>targetObserver.disconnect());}else{this.props.close();}}
get defaultClassObj(){return mergeClasses("o_popover popover mw-100",{"o-popover--with-arrow":this.props.arrow},this.props.class);}
isInside(target){return(this.props.target?.contains(target)||this.popoverRef?.el?.contains(target)||this.env[OVERLAY_SYMBOL]?.contains(target));}
onClickAway(target){if(this.props.closeOnClickAway(target)&&!this.isInside(target)){this.props.close();}}
onTargetMutate(){if(!this.props.target.isConnected){this.props.close();}}
onPositioned(el,{direction,variant}){const position=`${direction[0]}${variant[0]}`;el.classList=[];const directionMap={top:"top",bottom:"bottom",left:"start",right:"end",};addClassesToElement(el,this.defaultClassObj,`bs-popover-${directionMap[direction]}`,`o-popover-${direction}`,`o-popover--${position}`);if(this.props.arrow){const arrowEl=el.querySelector(":scope > .popover-arrow");arrowEl.className="popover-arrow";switch(position){case"tm":case"bm":case"tf":case"bf":arrowEl.classList.add("start-0","end-0","mx-auto");break;case"lm":case"rm":case"lf":case"rf":arrowEl.classList.add("top-0","bottom-0","my-auto");break;case"ts":case"bs":arrowEl.classList.add("end-auto");break;case"te":case"be":arrowEl.classList.add("start-auto");break;case"ls":case"rs":arrowEl.classList.add("bottom-auto");break;case"le":case"re":arrowEl.classList.add("top-auto");break;}}}}
return __exports;});;

/* /web/static/src/core/popover/popover_hook.js */
odoo.define('@web/core/popover/popover_hook',['@odoo/owl','@web/core/utils/hooks'],function(require){'use strict';let __exports={};const{onWillUnmount,status,useComponent}=require("@odoo/owl");const{useService}=require("@web/core/utils/hooks");__exports.makePopover=makePopover;function makePopover(addFn,component,options){let removeFn=null;function close(){removeFn?.();}
return{open(target,props){close();const newOptions=Object.create(options);newOptions.onClose=()=>{removeFn=null;options.onClose?.();};removeFn=addFn(target,component,props,newOptions);},close,get isOpen(){return Boolean(removeFn);},};}
__exports.usePopover=usePopover;function usePopover(component,options={}){const popoverService=useService("popover");const owner=useComponent();const newOptions=Object.create(options);newOptions.onClose=()=>{if(status(owner)!=="destroyed"){options.onClose?.();}};const popover=makePopover(popoverService.add,component,newOptions);onWillUnmount(popover.close);return popover;}
return __exports;});;

/* /web/static/src/core/popover/popover_service.js */
odoo.define('@web/core/popover/popover_service',['@odoo/owl','@web/core/popover/popover','@web/core/registry'],function(require){'use strict';let __exports={};const{markRaw}=require("@odoo/owl");const{Popover}=require("@web/core/popover/popover");const{registry}=require("@web/core/registry");const popoverService=__exports.popoverService={dependencies:["overlay"],start(_,{overlay}){const add=(target,component,props={},options={})=>{const closeOnClickAway=typeof options.closeOnClickAway==="function"?options.closeOnClickAway:()=>options.closeOnClickAway??true;const remove=overlay.add(Popover,{target,close:()=>remove(),closeOnClickAway,closeOnEscape:options.closeOnEscape,component,componentProps:markRaw(props),ref:options.ref,class:options.popoverClass,animation:options.animation,arrow:options.arrow,role:options.popoverRole,position:options.position,onPositioned:options.onPositioned,fixedPosition:options.fixedPosition,holdOnHover:options.holdOnHover,setActiveElement:options.setActiveElement??true,},{env:options.env,onRemove:options.onClose,rootId:target.getRootNode()?.host?.id,});return remove;};return{add};},};registry.category("services").add("popover",popoverService);return __exports;});;

/* /web/static/src/core/position/position_hook.js */
odoo.define('@web/core/position/position_hook',['@web/core/position/utils','@web/core/utils/objects','@web/core/utils/timing','@odoo/owl'],function(require){'use strict';let __exports={};const{reposition}=require("@web/core/position/utils");const{omit}=require("@web/core/utils/objects");const{useThrottleForAnimation}=require("@web/core/utils/timing");const{EventBus,onWillDestroy,useChildSubEnv,useComponent,useEffect,useRef,}=require("@odoo/owl");const DEFAULTS={margin:0,position:"bottom",};const POSITION_BUS=Symbol("position-bus");__exports.usePosition=usePosition;function usePosition(refName,getTarget,options={}){const ref=useRef(refName);let lock=false;const update=()=>{const targetEl=getTarget();if(!ref.el||!targetEl?.isConnected||lock){return;}
const repositionOptions={...DEFAULTS,...omit(options,"onPositioned")};const solution=reposition(ref.el,targetEl,repositionOptions);options.onPositioned?.(ref.el,solution);};const component=useComponent();const bus=component.env[POSITION_BUS]||new EventBus();let executingUpdate=false;const batchedUpdate=async()=>{if(!executingUpdate){executingUpdate=true;update();await Promise.resolve();executingUpdate=false;}};bus.addEventListener("update",batchedUpdate);onWillDestroy(()=>bus.removeEventListener("update",batchedUpdate));const isTopmost=!(POSITION_BUS in component.env);if(isTopmost){useChildSubEnv({[POSITION_BUS]:bus});}
const throttledUpdate=useThrottleForAnimation(()=>bus.trigger("update"));useEffect(()=>{bus.trigger("update");if(isTopmost){const scrollListener=(e)=>{if(ref.el?.contains(e.target)){return;}
throttledUpdate();};const targetDocument=getTarget()?.ownerDocument;targetDocument?.addEventListener("scroll",scrollListener,{capture:true});targetDocument?.addEventListener("load",throttledUpdate,{capture:true});window.addEventListener("resize",throttledUpdate);return()=>{targetDocument?.removeEventListener("scroll",scrollListener,{capture:true});targetDocument?.removeEventListener("load",throttledUpdate,{capture:true});window.removeEventListener("resize",throttledUpdate);};}});return{lock:()=>{lock=true;},unlock:()=>{lock=false;bus.trigger("update");},};}
return __exports;});;

/* /web/static/src/core/position/utils.js */
odoo.define('@web/core/position/utils',['@web/core/l10n/localization'],function(require){'use strict';let __exports={};const{localization}=require("@web/core/l10n/localization");const DIRECTIONS={t:"top",r:"right",b:"bottom",l:"left"};const VARIANTS={s:"start",m:"middle",e:"end",f:"fit"};const DIRECTION_FLIP_ORDER={top:"tbrl",right:"rltb",bottom:"btrl",left:"lrbt"};const VARIANT_FLIP_ORDER={start:"sme",middle:"mse",end:"ems",fit:"f"};const FIT_FLIP_ORDER={top:"tb",right:"rl",bottom:"bt",left:"lr"};function getIFrame(popperEl,targetEl){return[...popperEl.ownerDocument.getElementsByTagName("iframe")].find((iframe)=>iframe.contentDocument?.contains(targetEl));}
function computePosition(popper,target,{container,margin,position}){let[direction,variant="middle"]=position.split("-");if(localization.direction==="rtl"){if(["left","right"].includes(direction)){direction=direction==="left"?"right":"left";}else if(["start","end"].includes(variant)){variant=variant==="start"?"end":"start";}}
const directions=variant==="fit"?FIT_FLIP_ORDER[direction]:DIRECTION_FLIP_ORDER[direction];const variants=VARIANT_FLIP_ORDER[variant];if(!container){container=popper.ownerDocument.documentElement;}else if(typeof container==="function"){container=container();}
const popperStyle=getComputedStyle(popper);const{marginTop,marginLeft,marginRight,marginBottom}=popperStyle;const popMargins={top:parseFloat(marginTop),left:parseFloat(marginLeft),right:parseFloat(marginRight),bottom:parseFloat(marginBottom),};const shouldAccountForIFrame=popper.ownerDocument!==target.ownerDocument;const iframe=shouldAccountForIFrame?getIFrame(popper,target):null;const popBox=popper.getBoundingClientRect();const targetBox=target.getBoundingClientRect();const contBox=container.getBoundingClientRect();const iframeBox=iframe?.getBoundingClientRect()??{top:0,left:0};const containerIsHTMLNode=container===container.ownerDocument.firstElementChild;const directionsData={t:iframeBox.top+targetBox.top-popMargins.bottom-margin-popBox.height,b:iframeBox.top+targetBox.bottom+popMargins.top+margin,r:iframeBox.left+targetBox.right+popMargins.left+margin,l:iframeBox.left+targetBox.left-popMargins.right-margin-popBox.width,};const variantsData={vf:iframeBox.left+targetBox.left,vs:iframeBox.left+targetBox.left+popMargins.left,vm:iframeBox.left+targetBox.left+targetBox.width/2-popBox.width/2,ve:iframeBox.left+targetBox.right-popMargins.right-popBox.width,hf:iframeBox.top+targetBox.top,hs:iframeBox.top+targetBox.top+popMargins.top,hm:iframeBox.top+targetBox.top+targetBox.height/2-popBox.height/2,he:iframeBox.top+targetBox.bottom-popMargins.bottom-popBox.height,};function getPositioningData(d=directions[0],v=variants[0],containerRestricted=false){const vertical=["t","b"].includes(d);const variantPrefix=vertical?"v":"h";const directionValue=directionsData[d];const variantValue=variantsData[variantPrefix+v];if(containerRestricted){const[directionSize,variantSize]=vertical?[popBox.height,popBox.width]:[popBox.width,popBox.height];let[directionMin,directionMax]=vertical?[contBox.top,contBox.bottom]:[contBox.left,contBox.right];let[variantMin,variantMax]=vertical?[contBox.left,contBox.right]:[contBox.top,contBox.bottom];if(containerIsHTMLNode){if(vertical){directionMin+=container.scrollTop;directionMax+=container.scrollTop;}else{variantMin+=container.scrollTop;variantMax+=container.scrollTop;}}
const directionOverflow=Math.ceil(directionValue)<Math.floor(directionMin)||Math.floor(directionValue+directionSize)>Math.ceil(directionMax);const variantOverflow=Math.ceil(variantValue)<Math.floor(variantMin)||Math.floor(variantValue+variantSize)>Math.ceil(variantMax);if(directionOverflow||variantOverflow){return null;}}
const positioning=vertical?{top:directionValue,left:variantValue}:{top:variantValue,left:directionValue};return{top:positioning.top-popBox.top,left:positioning.left-popBox.left,direction:DIRECTIONS[d],variant:VARIANTS[v],};}
for(const d of directions){for(const v of variants){const match=getPositioningData(d,v,true);if(match){return match;}}}
return getPositioningData();}
__exports.reposition=reposition;function reposition(popper,target,options){popper.style.position="fixed";popper.style.top="0px";popper.style.left="0px";const solution=computePosition(popper,target,options);const{top,left,direction,variant}=solution;popper.style.top=`${top}px`;popper.style.left=`${left}px`;if(variant==="fit"){const styleProperty=["top","bottom"].includes(direction)?"width":"height";popper.style[styleProperty]=target.getBoundingClientRect()[styleProperty]+"px";}
return solution;}
return __exports;});;

/* /web/static/src/core/pwa/install_prompt.js */
odoo.define('@web/core/pwa/install_prompt',['@odoo/owl','@web/core/dialog/dialog','@web/core/browser/feature_detection'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{Dialog}=require("@web/core/dialog/dialog");const{isIOS}=require("@web/core/browser/feature_detection");const InstallPrompt=__exports.InstallPrompt=class InstallPrompt extends Component{static props={close:true,onClose:{type:Function},};static components={Dialog,};static template="web.InstallPrompt";get isMobileSafari(){return isIOS();}
onClose(){this.props.close();this.props.onClose();}}
return __exports;});;

/* /web/static/src/core/pwa/pwa_service.js */
odoo.define('@web/core/pwa/pwa_service',['@odoo/owl','@web/core/browser/browser','@web/core/browser/feature_detection','@web/core/network/http_service','@web/core/registry','@web/core/pwa/install_prompt'],function(require){'use strict';let __exports={};const{reactive}=require("@odoo/owl");const{browser}=require("@web/core/browser/browser");const{isDisplayStandalone,isIOS,isMacOS,isBrowserSafari,}=require("@web/core/browser/feature_detection");const{get}=require("@web/core/network/http_service");const{registry}=require("@web/core/registry");const{InstallPrompt}=require("@web/core/pwa/install_prompt");const serviceRegistry=registry.category("services");let BEFOREINSTALLPROMPT_EVENT;let REGISTER_BEFOREINSTALLPROMPT_EVENT;browser.addEventListener("beforeinstallprompt",(ev)=>{if(REGISTER_BEFOREINSTALLPROMPT_EVENT){return REGISTER_BEFOREINSTALLPROMPT_EVENT(ev);}else{BEFOREINSTALLPROMPT_EVENT=ev;}});const pwaService={dependencies:["dialog"],start(env,{dialog}){let _manifest;let nativePrompt;const state=reactive({canPromptToInstall:false,isAvailable:false,isScopedApp:browser.location.href.includes("/scoped_app"),isSupportedOnBrowser:false,startUrl:"/odoo",decline,getManifest,hasScopeBeenInstalled,show,});function _getInstallationState(scope=state.startUrl){const installationState=browser.localStorage.getItem("pwaService.installationState");return installationState?JSON.parse(installationState)[scope]:"";}
function _setInstallationState(value){const ls=JSON.parse(browser.localStorage.getItem("pwaService.installationState")||"{}");ls[state.startUrl]=value;browser.localStorage.setItem("pwaService.installationState",JSON.stringify(ls));}
function _removeInstallationState(){const ls=JSON.parse(browser.localStorage.getItem("pwaService.installationState"));delete ls[state.startUrl];browser.localStorage.setItem("pwaService.installationState",JSON.stringify(ls));}
if(state.isScopedApp){if(browser.location.pathname==="/scoped_app"){state.startUrl="/"+new URL(browser.location.href).searchParams.get("path");}else{state.startUrl=browser.location.pathname;}}
state.isSupportedOnBrowser=browser.BeforeInstallPromptEvent!==undefined||(isBrowserSafari()&&!isDisplayStandalone()&&(isIOS()||(isMacOS()&&browser.navigator.userAgent.match(/Version\/(\d+)/)[1]>=17)));const installationState=_getInstallationState();if(state.isSupportedOnBrowser){if(BEFOREINSTALLPROMPT_EVENT){_handleBeforeInstallPrompt(BEFOREINSTALLPROMPT_EVENT,installationState);BEFOREINSTALLPROMPT_EVENT=null;}
REGISTER_BEFOREINSTALLPROMPT_EVENT=(ev)=>{_handleBeforeInstallPrompt(ev,installationState);};if(isBrowserSafari()){state.canPromptToInstall=installationState!=="dismissed";state.isAvailable=true;}}
function _handleBeforeInstallPrompt(ev,installationState){nativePrompt=ev;if(installationState==="accepted"){if(!isDisplayStandalone()){_removeInstallationState();}}
state.canPromptToInstall=installationState!=="dismissed";state.isAvailable=true;}
async function getManifest(){if(!_manifest){const manifest=await get(document.querySelector("link[rel=manifest")?.getAttribute("href"),"text");_manifest=JSON.parse(manifest);}
return _manifest;}
function hasScopeBeenInstalled(scope){return _getInstallationState(scope)==="accepted";}
async function show({onDone}={}){if(!state.isAvailable){return;}
if(nativePrompt){const res=await nativePrompt.prompt();_setInstallationState(res.outcome);state.canPromptToInstall=false;if(onDone){onDone(res);}}else if(isBrowserSafari()){dialog.add(InstallPrompt,{onClose:()=>{if(onDone){onDone({});}
this.decline();},});}}
function decline(){_setInstallationState("dismissed");state.canPromptToInstall=false;}
return state;},};serviceRegistry.add("pwa",pwaService);return __exports;});;

/* /web/static/src/core/py_js/py.js */
odoo.define('@web/core/py_js/py',['@web/core/py_js/py_interpreter','@web/core/py_js/py_parser','@web/core/py_js/py_tokenizer','@web/core/py_js/py_utils'],function(require){'use strict';let __exports={};const{evaluate}=require("@web/core/py_js/py_interpreter");const{parse}=require("@web/core/py_js/py_parser");const{tokenize}=require("@web/core/py_js/py_tokenizer");{const{evaluate}=require("@web/core/py_js/py_interpreter");Object.assign(__exports,{evaluate})};{const{parse}=require("@web/core/py_js/py_parser");Object.assign(__exports,{parse})};{const{tokenize}=require("@web/core/py_js/py_tokenizer");Object.assign(__exports,{tokenize})};{const{formatAST}=require("@web/core/py_js/py_utils");Object.assign(__exports,{formatAST})};__exports.parseExpr=parseExpr;function parseExpr(expr){const tokens=tokenize(expr);return parse(tokens);}
__exports.evaluateExpr=evaluateExpr;function evaluateExpr(expr,context={}){let ast;try{ast=parseExpr(expr);}catch(error){throw new EvalError(`Can not parse python expression: (${expr})\nError: ${error.message}`);}
try{return evaluate(ast,context);}catch(error){throw new EvalError(`Can not evaluate python expression: (${expr})\nError: ${error.message}`);}}
__exports.evaluateBooleanExpr=evaluateBooleanExpr;function evaluateBooleanExpr(expr,context={}){if(!expr||expr==='False'||expr==='0'){return false;}
if(expr==='True'||expr==='1'){return true;}
return evaluateExpr(`bool(${expr})`,context);}
return __exports;});;

/* /web/static/src/core/py_js/py_builtin.js */
odoo.define('@web/core/py_js/py_builtin',['@web/core/py_js/py_date'],function(require){'use strict';let __exports={};const{PyDate,PyDateTime,PyRelativeDelta,PyTime,PyTimeDelta}=require("@web/core/py_js/py_date");const EvaluationError=__exports.EvaluationError=class EvaluationError extends Error{}
__exports.execOnIterable=execOnIterable;function execOnIterable(iterable,func){if(iterable===null){throw new EvaluationError(`value not iterable`);}
if(typeof iterable==="object"&&!Array.isArray(iterable)&&!(iterable instanceof Set)){iterable=Object.keys(iterable);}
if(typeof iterable?.[Symbol.iterator]!=="function"){throw new EvaluationError(`value not iterable`);}
return func(iterable);}
const BUILTINS=__exports.BUILTINS={bool(value){switch(typeof value){case"number":return value!==0;case"string":return value!=="";case"boolean":return value;case"object":if(value===null||value===undefined){return false;}
if(value.isTrue){return value.isTrue();}
if(value instanceof Array){return!!value.length;}
if(value instanceof Set){return!!value.size;}
return Object.keys(value).length!==0;}
return true;},set(iterable){if(arguments.length>2){throw new EvaluationError(`set expected at most 1 argument, got (${arguments.length - 1}`);}
return execOnIterable(iterable,(iterable)=>{return new Set(iterable);});},max(...args){return Math.max(...args.slice(0,-1));},min(...args){return Math.min(...args.slice(0,-1));},time:{strftime(format){return PyDateTime.now().strftime(format);},},context_today(){return PyDate.today();},get current_date(){return this.today;},get today(){return PyDate.today().strftime("%Y-%m-%d");},get now(){return PyDateTime.now().strftime("%Y-%m-%d %H:%M:%S");},datetime:{time:PyTime,timedelta:PyTimeDelta,datetime:PyDateTime,date:PyDate,},relativedelta:PyRelativeDelta,true:true,false:false,};return __exports;});;

/* /web/static/src/core/py_js/py_date.js */
odoo.define('@web/core/py_js/py_date',['@web/core/py_js/py_parser'],function(require){'use strict';let __exports={};const{parseArgs}=require("@web/core/py_js/py_parser");const AssertionError=__exports.AssertionError=class AssertionError extends Error{}
const ValueError=__exports.ValueError=class ValueError extends Error{}
const NotSupportedError=__exports.NotSupportedError=class NotSupportedError extends Error{}
function fmt2(n){return String(n).padStart(2,"0");}
function fmt4(n){return String(n).padStart(4,"0");}
function divmod(a,b,fn){let mod=a%b;if((mod>0&&b<0)||(mod<0&&b>0)){mod+=b;}
return fn(Math.floor(a/b),mod);}
function assert(bool,message="AssertionError"){if(!bool){throw new AssertionError(message);}}
const DAYS_IN_MONTH=[null,31,28,31,30,31,30,31,31,30,31,30,31];const DAYS_BEFORE_MONTH=[null];for(let dbm=0,i=1;i<DAYS_IN_MONTH.length;++i){DAYS_BEFORE_MONTH.push(dbm);dbm+=DAYS_IN_MONTH[i];}
function daysInMonth(year,month){if(month===2&&isLeap(year)){return 29;}
return DAYS_IN_MONTH[month];}
function isLeap(year){return year%4===0&&(year%100!==0||year%400===0);}
function daysBeforeYear(year){const y=year-1;return y*365+Math.floor(y/4)-Math.floor(y/100)+Math.floor(y/400);}
function daysBeforeMonth(year,month){const postLeapFeb=month>2&&isLeap(year);return DAYS_BEFORE_MONTH[month]+(postLeapFeb?1:0);}
function ymd2ord(year,month,day){const dim=daysInMonth(year,month);if(!(1<=day&&day<=dim)){throw new ValueError(`day must be in 1..${dim}`);}
return daysBeforeYear(year)+daysBeforeMonth(year,month)+day;}
const DI400Y=daysBeforeYear(401);const DI100Y=daysBeforeYear(101);const DI4Y=daysBeforeYear(5);function ord2ymd(n){--n;let n400,n100,n4,n1,n0;divmod(n,DI400Y,function(_n400,n){n400=_n400;divmod(n,DI100Y,function(_n100,n){n100=_n100;divmod(n,DI4Y,function(_n4,n){n4=_n4;divmod(n,365,function(_n1,n){n1=_n1;n0=n;});});});});n=n0;const year=n400*400+1+n100*100+n4*4+n1;if(n1==4||n100==100){assert(n0===0);return{year:year-1,month:12,day:31,};}
const leapyear=n1===3&&(n4!==24||n100==3);assert(leapyear==isLeap(year));let month=(n+50)>>5;let preceding=DAYS_BEFORE_MONTH[month]+(month>2&&leapyear?1:0);if(preceding>n){--month;preceding-=DAYS_IN_MONTH[month]+(month===2&&leapyear?1:0);}
n-=preceding;return{year:year,month:month,day:n+1,};}
function tmxxx(year,month,day,hour,minute,second,microsecond){hour=hour||0;minute=minute||0;second=second||0;microsecond=microsecond||0;if(microsecond<0||microsecond>999999){divmod(microsecond,1000000,function(carry,ms){microsecond=ms;second+=carry;});}
if(second<0||second>59){divmod(second,60,function(carry,s){second=s;minute+=carry;});}
if(minute<0||minute>59){divmod(minute,60,function(carry,m){minute=m;hour+=carry;});}
if(hour<0||hour>23){divmod(hour,24,function(carry,h){hour=h;day+=carry;});}
if(month<1||month>12){divmod(month-1,12,function(carry,m){month=m+1;year+=carry;});}
const dim=daysInMonth(year,month);if(day<1||day>dim){if(day===0){--month;if(month>0){day=daysInMonth(year,month);}else{--year;month=12;day=31;}}else if(day==dim+1){++month;day=1;if(month>12){month=1;++year;}}else{const r=ord2ymd(ymd2ord(year,month,1)+(day-1));year=r.year;month=r.month;day=r.day;}}
return{year:year,month:month,day:day,hour:hour,minute:minute,second:second,microsecond:microsecond,};}
const PyDate=__exports.PyDate=class PyDate{static today(){return this.convertDate(new Date());}
static convertDate(date){const year=date.getFullYear();const month=date.getMonth()+1;const day=date.getDate();return new PyDate(year,month,day);}
constructor(year,month,day){this.year=year;this.month=month;this.day=day;}
static create(...args){const{year,month,day}=parseArgs(args,["year","month","day"]);return new PyDate(year,month,day);}
add(timedelta){const s=tmxxx(this.year,this.month,this.day+timedelta.days);return new PyDate(s.year,s.month,s.day);}
isEqual(other){if(!(other instanceof PyDate)){return false;}
return this.year===other.year&&this.month===other.month&&this.day===other.day;}
strftime(format){return format.replace(/%([A-Za-z])/g,(m,c)=>{switch(c){case"Y":return fmt4(this.year);case"m":return fmt2(this.month);case"d":return fmt2(this.day);}
throw new ValueError(`No known conversion for ${m}`);});}
substract(other){if(other instanceof PyTimeDelta){return this.add(other.negate());}
if(other instanceof PyDate){return PyTimeDelta.create(this.toordinal()-other.toordinal());}
throw NotSupportedError();}
toJSON(){return this.strftime("%Y-%m-%d");}
toordinal(){return ymd2ord(this.year,this.month,this.day);}}
const PyDateTime=__exports.PyDateTime=class PyDateTime{static now(){return this.convertDate(new Date());}
static convertDate(date){const year=date.getFullYear();const month=date.getMonth()+1;const day=date.getDate();const hour=date.getHours();const minute=date.getMinutes();const second=date.getSeconds();return new PyDateTime(year,month,day,hour,minute,second,0);}
static create(...args){const namedArgs=parseArgs(args,["year","month","day","hour","minute","second","microsecond",]);const year=namedArgs.year;const month=namedArgs.month;const day=namedArgs.day;const hour=namedArgs.hour||0;const minute=namedArgs.minute||0;const second=namedArgs.second||0;const ms=namedArgs.micro/1000||0;return new PyDateTime(year,month,day,hour,minute,second,ms);}
static combine(...args){const{date,time}=parseArgs(args,["date","time"]);return PyDateTime.create(date.year,date.month,date.day,time.hour,time.minute,time.second);}
constructor(year,month,day,hour,minute,second,microsecond){this.year=year;this.month=month;this.day=day;this.hour=hour;this.minute=minute;this.second=second;this.microsecond=microsecond;}
add(timedelta){const s=tmxxx(this.year,this.month,this.day+timedelta.days,this.hour,this.minute,this.second+timedelta.seconds,this.microsecond+timedelta.microseconds);return new PyDateTime(s.year,s.month,s.day,s.hour,s.minute,s.second,s.microsecond);}
isEqual(other){if(!(other instanceof PyDateTime)){return false;}
return(this.year===other.year&&this.month===other.month&&this.day===other.day&&this.hour===other.hour&&this.minute===other.minute&&this.second===other.second&&this.microsecond===other.microsecond);}
strftime(format){return format.replace(/%([A-Za-z])/g,(m,c)=>{switch(c){case"Y":return fmt4(this.year);case"m":return fmt2(this.month);case"d":return fmt2(this.day);case"H":return fmt2(this.hour);case"M":return fmt2(this.minute);case"S":return fmt2(this.second);}
throw new ValueError(`No known conversion for ${m}`);});}
substract(timedelta){return this.add(timedelta.negate());}
toJSON(){return this.strftime("%Y-%m-%d %H:%M:%S");}
to_utc(){const d=new Date(this.year,this.month-1,this.day,this.hour,this.minute,this.second);const timedelta=PyTimeDelta.create({minutes:d.getTimezoneOffset()});return this.add(timedelta);}}
const PyTime=__exports.PyTime=class PyTime extends PyDate{static create(...args){const namedArgs=parseArgs(args,["hour","minute","second"]);const hour=namedArgs.hour||0;const minute=namedArgs.minute||0;const second=namedArgs.second||0;return new PyTime(hour,minute,second);}
constructor(hour,minute,second){const now=new Date();const year=now.getFullYear();const month=now.getMonth();const day=now.getDate();super(year,month,day);this.hour=hour;this.minute=minute;this.second=second;}
strftime(format){return format.replace(/%([A-Za-z])/g,(m,c)=>{switch(c){case"Y":return fmt4(this.year);case"m":return fmt2(this.month+1);case"d":return fmt2(this.day);case"H":return fmt2(this.hour);case"M":return fmt2(this.minute);case"S":return fmt2(this.second);}
throw new ValueError(`No known conversion for ${m}`);});}
toJSON(){return this.strftime("%H:%M:%S");}}
const DAYS_IN_YEAR=[31,59,90,120,151,181,212,243,273,304,334,366];const TIME_PERIODS=["hour","minute","second"];const PERIODS=["year","month","day",...TIME_PERIODS];const RELATIVE_KEYS="years months weeks days hours minutes seconds microseconds leapdays".split(" ");const ABSOLUTE_KEYS="year month day hour minute second microsecond weekday nlyearday yearday".split(" ");const argsSpec=["dt1","dt2"];const PyRelativeDelta=__exports.PyRelativeDelta=class PyRelativeDelta{static create(...args){const params=parseArgs(args,argsSpec);if("dt1"in params){throw new Error("relativedelta(dt1, dt2) is not supported for now");}
for(const period of PERIODS){if(period in params){const val=params[period];assert(val>=0,`${period} ${val} is out of range`);}}
for(const key of RELATIVE_KEYS){params[key]=params[key]||0;}
for(const key of ABSOLUTE_KEYS){params[key]=key in params?params[key]:null;}
params.days+=7*params.weeks;let yearDay=0;if(params.nlyearday){yearDay=params.nlyearday;}else if(params.yearday){yearDay=params.yearday;if(yearDay>59){params.leapDays=-1;}}
if(yearDay){for(let monthIndex=0;monthIndex<DAYS_IN_YEAR.length;monthIndex++){if(yearDay<=DAYS_IN_YEAR[monthIndex]){params.month=monthIndex+1;if(monthIndex===0){params.day=yearDay;}else{params.day=yearDay-DAYS_IN_YEAR[monthIndex-1];}
break;}}}
return new PyRelativeDelta(params);}
static add(date,delta){if(!(date instanceof PyDate||date instanceof PyDateTime)){throw NotSupportedError();}
const s=tmxxx((delta.year||date.year)+delta.years,(delta.month||date.month)+delta.months,delta.day||date.day,delta.hour||date.hour||0,delta.minute||date.minute||0,delta.second||date.seconds||0,delta.microseconds||date.microseconds||0);const newDateTime=new PyDateTime(s.year,s.month,s.day,s.hour,s.minute,s.second,s.microsecond);let leapDays=0;if(delta.leapDays&&newDateTime.month>2&&isLeap(newDateTime.year)){leapDays=delta.leapDays;}
const temp=newDateTime.add(PyTimeDelta.create({days:delta.days+leapDays,hours:delta.hours,minutes:delta.minutes,seconds:delta.seconds,microseconds:delta.microseconds,}));const hasTime=Boolean(temp.hour||temp.minute||temp.second||temp.microsecond);const returnDate=!hasTime&&date instanceof PyDate?new PyDate(temp.year,temp.month,temp.day):temp;if(delta.weekday!==null){const wantedDow=delta.weekday+1;const _date=new Date(returnDate.year,returnDate.month-1,returnDate.day);const days=(7-_date.getDay()+wantedDow)%7;return returnDate.add(new PyTimeDelta(days,0,0));}
return returnDate;}
static substract(date,delta){return PyRelativeDelta.add(date,delta.negate());}
constructor(params={},sign=+1){this.years=sign*params.years;this.months=sign*params.months;this.days=sign*params.days;this.hours=sign*params.hours;this.minutes=sign*params.minutes;this.seconds=sign*params.seconds;this.microseconds=sign*params.microseconds;this.leapDays=params.leapDays;this.year=params.year;this.month=params.month;this.day=params.day;this.hour=params.hour;this.minute=params.minute;this.second=params.second;this.microsecond=params.microsecond;this.weekday=params.weekday;}
negate(){return new PyRelativeDelta(this,-1);}
isEqual(other){throw new NotSupportedError();}}
const TIME_DELTA_KEYS="weeks days hours minutes seconds milliseconds microseconds".split(" ");function modf(x){const mod=x%1;return[mod<0?mod+1:mod,Math.floor(x)];}
const PyTimeDelta=__exports.PyTimeDelta=class PyTimeDelta{static create(...args){const namedArgs=parseArgs(args,["days","seconds","microseconds"]);for(const key of TIME_DELTA_KEYS){namedArgs[key]=namedArgs[key]||0;}
let d=0;let s=0;let us=0;const days=namedArgs.days+namedArgs.weeks*7;let seconds=namedArgs.seconds+60*namedArgs.minutes+3600*namedArgs.hours;let microseconds=namedArgs.microseconds+1000*namedArgs.milliseconds;const[dFrac,dInt]=modf(days);d=dInt;let daysecondsfrac=0;if(dFrac){const[dsFrac,dsInt]=modf(dFrac*24*3600);s=dsInt;daysecondsfrac=dsFrac;}
const[sFrac,sInt]=modf(seconds);seconds=sInt;const secondsfrac=sFrac+daysecondsfrac;divmod(seconds,24*3600,(days,seconds)=>{d+=days;s+=seconds;});microseconds+=secondsfrac*1e6;divmod(microseconds,1000000,(seconds,microseconds)=>{divmod(seconds,24*3600,(days,seconds)=>{d+=days;s+=seconds;us+=Math.round(microseconds);});});return new PyTimeDelta(d,s,us);}
constructor(days,seconds,microseconds){this.days=days;this.seconds=seconds;this.microseconds=microseconds;}
add(other){return PyTimeDelta.create({days:this.days+other.days,seconds:this.seconds+other.seconds,microseconds:this.microseconds+other.microseconds,});}
divide(n){const us=(this.days*24*3600+this.seconds)*1e6+this.microseconds;return PyTimeDelta.create({microseconds:Math.floor(us/n)});}
isEqual(other){if(!(other instanceof PyTimeDelta)){return false;}
return(this.days===other.days&&this.seconds===other.seconds&&this.microseconds===other.microseconds);}
isTrue(){return this.days!==0||this.seconds!==0||this.microseconds!==0;}
multiply(n){return PyTimeDelta.create({days:n*this.days,seconds:n*this.seconds,microseconds:n*this.microseconds,});}
negate(){return PyTimeDelta.create({days:-this.days,seconds:-this.seconds,microseconds:-this.microseconds,});}
substract(other){return PyTimeDelta.create({days:this.days-other.days,seconds:this.seconds-other.seconds,microseconds:this.microseconds-other.microseconds,});}
total_seconds(){return this.days*86400+this.seconds+this.microseconds/1000000;}}
return __exports;});;

/* /web/static/src/core/py_js/py_interpreter.js */
odoo.define('@web/core/py_js/py_interpreter',['@web/core/py_js/py_builtin','@web/core/py_js/py_date','@web/core/py_js/py_utils','@web/core/py_js/py_parser'],function(require){'use strict';let __exports={};const{BUILTINS,EvaluationError,execOnIterable}=require("@web/core/py_js/py_builtin");const{NotSupportedError,PyDate,PyDateTime,PyRelativeDelta,PyTime,PyTimeDelta,}=require("@web/core/py_js/py_date");const{PY_DICT,toPyDict}=require("@web/core/py_js/py_utils");const{parseArgs}=require("@web/core/py_js/py_parser");const isTrue=BUILTINS.bool;function applyUnaryOp(ast,context){const value=evaluate(ast.right,context);switch(ast.op){case"-":if(value instanceof Object&&value.negate){return value.negate();}
return-value;case"+":return value;case"not":return!isTrue(value);}
throw new EvaluationError(`Unknown unary operator: ${ast.op}`);}
function pytypeIndex(val){switch(typeof val){case"object":return val===null?1:Array.isArray(val)?5:3;case"number":return 2;case"string":return 4;}
throw new EvaluationError(`Unknown type: ${typeof val}`);}
function isConstructor(obj){return!!obj.prototype&&!!obj.prototype.constructor.name;}
function isLess(left,right){if(typeof left==="number"&&typeof right==="number"){return left<right;}
if(typeof left==="boolean"){left=left?1:0;}
if(typeof right==="boolean"){right=right?1:0;}
const leftIndex=pytypeIndex(left);const rightIndex=pytypeIndex(right);if(leftIndex===rightIndex){return left<right;}
return leftIndex<rightIndex;}
function isEqual(left,right){if(typeof left!==typeof right){if(typeof left==="boolean"&&typeof right==="number"){return right===(left?1:0);}
if(typeof left==="number"&&typeof right==="boolean"){return left===(right?1:0);}
return false;}
if(left instanceof Object&&left.isEqual){return left.isEqual(right);}
return left===right;}
function isIn(left,right){if(Array.isArray(right)){return right.includes(left);}
if(typeof right==="string"&&typeof left==="string"){return right.includes(left);}
if(typeof right==="object"){return left in right;}
return false;}
function applyBinaryOp(ast,context){const left=evaluate(ast.left,context);const right=evaluate(ast.right,context);switch(ast.op){case"+":{const relativeDeltaOnLeft=left instanceof PyRelativeDelta;const relativeDeltaOnRight=right instanceof PyRelativeDelta;if(relativeDeltaOnLeft||relativeDeltaOnRight){const date=relativeDeltaOnLeft?right:left;const delta=relativeDeltaOnLeft?left:right;return PyRelativeDelta.add(date,delta);}
const timeDeltaOnLeft=left instanceof PyTimeDelta;const timeDeltaOnRight=right instanceof PyTimeDelta;if(timeDeltaOnLeft&&timeDeltaOnRight){return left.add(right);}
if(timeDeltaOnLeft){if(right instanceof PyDate||right instanceof PyDateTime){return right.add(left);}else{throw NotSupportedError();}}
if(timeDeltaOnRight){if(left instanceof PyDate||left instanceof PyDateTime){return left.add(right);}else{throw NotSupportedError();}}
if(left instanceof Array&&right instanceof Array){return[...left,...right];}
return left+right;}
case"-":{const isRightDelta=right instanceof PyRelativeDelta;if(isRightDelta){return PyRelativeDelta.substract(left,right);}
const timeDeltaOnRight=right instanceof PyTimeDelta;if(timeDeltaOnRight){if(left instanceof PyTimeDelta){return left.substract(right);}else if(left instanceof PyDate||left instanceof PyDateTime){return left.substract(right);}else{throw NotSupportedError();}}
if(left instanceof PyDate){return left.substract(right);}
return left-right;}
case"*":{const timeDeltaOnLeft=left instanceof PyTimeDelta;const timeDeltaOnRight=right instanceof PyTimeDelta;if(timeDeltaOnLeft||timeDeltaOnRight){const number=timeDeltaOnLeft?right:left;const delta=timeDeltaOnLeft?left:right;return delta.multiply(number);}
return left*right;}
case"/":return left/right;case"%":return left%right;case"//":if(left instanceof PyTimeDelta){return left.divide(right);}
return Math.floor(left/right);case"**":return left**right;case"==":return isEqual(left,right);case"<>":case"!=":return!isEqual(left,right);case"<":return isLess(left,right);case">":return isLess(right,left);case">=":return isEqual(left,right)||isLess(right,left);case"<=":return isEqual(left,right)||isLess(left,right);case"in":return isIn(left,right);case"not in":return!isIn(left,right);}
throw new EvaluationError(`Unknown binary operator: ${ast.op}`);}
const DICT={get(...args){const{key,defValue}=parseArgs(args,["key","defValue"]);if(key in this){return this[key];}else if(defValue){return defValue;}
return null;},};const STRING={lower(){return this.toLowerCase();},upper(){return this.toUpperCase();},};function applyFunc(key,func,set,...args){if(args.length===1){return new Set(set);}
if(args.length>2){throw new EvaluationError(`${key}: py_js supports at most 1 argument, got (${args.length - 1})`);}
return execOnIterable(args[0],func);}
const SET={intersection(...args){return applyFunc("intersection",(iterable)=>{const intersection=new Set();for(const i of iterable){if(this.has(i)){intersection.add(i);}}
return intersection;},this,...args);},difference(...args){return applyFunc("difference",(iterable)=>{iterable=new Set(iterable);const difference=new Set();for(const e of this){if(!iterable.has(e)){difference.add(e);}}
return difference;},this,...args);},union(...args){return applyFunc("union",(iterable)=>{return new Set([...this,...iterable]);},this,...args);},};function methods(_class){return Object.getOwnPropertyNames(_class.prototype).map((prop)=>_class.prototype[prop]);}
const allowedFns=new Set([BUILTINS.time.strftime,BUILTINS.set,BUILTINS.bool,BUILTINS.min,BUILTINS.max,BUILTINS.context_today,BUILTINS.datetime.datetime.now,BUILTINS.datetime.datetime.combine,BUILTINS.datetime.date.today,...methods(BUILTINS.relativedelta),...Object.values(BUILTINS.datetime).flatMap((obj)=>methods(obj)),...Object.values(SET),...Object.values(DICT),...Object.values(STRING),]);const unboundFn=Symbol("unbound function");__exports.evaluate=evaluate;function evaluate(ast,context={}){const dicts=new Set();let pyContext;const evalContext=Object.create(context);if(!evalContext.context){Object.defineProperty(evalContext,"context",{get(){if(!pyContext){pyContext=toPyDict(context);}
return pyContext;},});}
function _innerEvaluate(ast){switch(ast.type){case 0:case 1:return ast.value;case 5:if(ast.value in evalContext){return evalContext[ast.value];}else if(ast.value in BUILTINS){return BUILTINS[ast.value];}else{throw new EvaluationError(`Name '${ast.value}' is not defined`);}
case 3:return null;case 2:return ast.value;case 6:return applyUnaryOp(ast,evalContext);case 7:return applyBinaryOp(ast,evalContext);case 14:{const left=_evaluate(ast.left);if(ast.op==="and"){return isTrue(left)?_evaluate(ast.right):left;}else{return isTrue(left)?left:_evaluate(ast.right);}}
case 4:case 10:return ast.value.map(_evaluate);case 11:{const dict={};for(const key in ast.value){dict[key]=_evaluate(ast.value[key]);}
dicts.add(dict);return dict;}
case 8:{const fnValue=_evaluate(ast.fn);const args=ast.args.map(_evaluate);const kwargs={};for(const kwarg in ast.kwargs){kwargs[kwarg]=_evaluate(ast.kwargs[kwarg]);}
if(fnValue===PyDate||fnValue===PyDateTime||fnValue===PyTime||fnValue===PyRelativeDelta||fnValue===PyTimeDelta){return fnValue.create(...args,kwargs);}
return fnValue(...args,kwargs);}
case 12:{const dict=_evaluate(ast.target);const key=_evaluate(ast.key);return dict[key];}
case 13:{if(isTrue(_evaluate(ast.condition))){return _evaluate(ast.ifTrue);}else{return _evaluate(ast.ifFalse);}}
case 15:{let left=_evaluate(ast.obj);let result;if(dicts.has(left)||Object.isPrototypeOf.call(PY_DICT,left)){result=DICT[ast.key];}else if(typeof left==="string"){result=STRING[ast.key];}else if(left instanceof Set){result=SET[ast.key];}else if(ast.key=="get"&&typeof left==="object"){result=DICT[ast.key];left=toPyDict(left);}else{result=left[ast.key];}
if(typeof result==="function"){if(!isConstructor(result)){const bound=result.bind(left);bound[unboundFn]=result;return bound;}}
return result;}}
throw new EvaluationError(`AST of type ${ast.type} cannot be evaluated`);}
function _evaluate(ast){const val=_innerEvaluate(ast);if(typeof val==="function"&&!allowedFns.has(val)&&!allowedFns.has(val[unboundFn])){throw new Error("Invalid Function Call");}
return val;}
return _evaluate(ast);}
return __exports;});;

/* /web/static/src/core/py_js/py_parser.js */
odoo.define('@web/core/py_js/py_parser',['@web/core/py_js/py_tokenizer'],function(require){'use strict';let __exports={};const{binaryOperators,comparators}=require("@web/core/py_js/py_tokenizer");const ParserError=__exports.ParserError=class ParserError extends Error{}
const chainedOperators=new Set(comparators);const infixOperators=new Set(binaryOperators.concat(comparators));__exports.bp=bp;function bp(symbol){switch(symbol){case"=":return 10;case"if":return 20;case"in":case"not in":case"is":case"is not":case"<":case"<=":case">":case">=":case"<>":case"==":case"!=":return 60;case"or":return 30;case"and":return 40;case"not":return 50;case"|":return 70;case"^":return 80;case"&":return 90;case"<<":case">>":return 100;case"+":case"-":return 110;case"*":case"/":case"//":case"%":return 120;case"**":return 140;case".":case"(":case"[":return 150;}
return 0;}
function bindingPower(token){return token.type===2?bp(token.value):0;}
function isSymbol(token,value){return token.type===2&&token.value===value;}
function parsePrefix(current,tokens){switch(current.type){case 0:return{type:0,value:current.value};case 1:return{type:1,value:current.value};case 4:if(current.value==="None"){return{type:3};}else{return{type:2,value:current.value==="True"};}
case 3:return{type:5,value:current.value};case 2:switch(current.value){case"-":case"+":case"~":return{type:6,op:current.value,right:_parse(tokens,130),};case"not":return{type:6,op:current.value,right:_parse(tokens,50),};case"(":{const content=[];let isTuple=false;while(tokens[0]&&!isSymbol(tokens[0],")")){content.push(_parse(tokens,0));if(tokens[0]){if(tokens[0]&&isSymbol(tokens[0],",")){isTuple=true;tokens.shift();}else if(!isSymbol(tokens[0],")")){throw new ParserError("parsing error");}}else{throw new ParserError("parsing error");}}
if(!tokens[0]||!isSymbol(tokens[0],")")){throw new ParserError("parsing error");}
tokens.shift();isTuple=isTuple||content.length===0;return isTuple?{type:10,value:content}:content[0];}
case"[":{const value=[];while(tokens[0]&&!isSymbol(tokens[0],"]")){value.push(_parse(tokens,0));if(tokens[0]){if(isSymbol(tokens[0],",")){tokens.shift();}else if(!isSymbol(tokens[0],"]")){throw new ParserError("parsing error");}}}
if(!tokens[0]||!isSymbol(tokens[0],"]")){throw new ParserError("parsing error");}
tokens.shift();return{type:4,value};}
case"{":{const dict={};while(tokens[0]&&!isSymbol(tokens[0],"}")){const key=_parse(tokens,0);if((key.type!==1&&key.type!==0)||!tokens[0]||!isSymbol(tokens[0],":")){throw new ParserError("parsing error");}
tokens.shift();const value=_parse(tokens,0);dict[key.value]=value;if(isSymbol(tokens[0],",")){tokens.shift();}}
if(!tokens.shift()){throw new ParserError("parsing error");}
return{type:11,value:dict};}}}
throw new ParserError("Token cannot be parsed");}
function parseInfix(left,current,tokens){switch(current.type){case 2:if(infixOperators.has(current.value)){let right=_parse(tokens,bindingPower(current));if(current.value==="and"||current.value==="or"){return{type:14,op:current.value,left,right,};}else if(current.value==="."){if(right.type===5){return{type:15,obj:left,key:right.value,};}else{throw new ParserError("invalid obj lookup");}}
let op={type:7,op:current.value,left,right,};while(chainedOperators.has(current.value)&&tokens[0]&&tokens[0].type===2&&chainedOperators.has(tokens[0].value)){const nextToken=tokens.shift();op={type:14,op:"and",left:op,right:{type:7,op:nextToken.value,left:right,right:_parse(tokens,bindingPower(nextToken)),},};right=op.right.right;}
return op;}
switch(current.value){case"(":{const args=[];const kwargs={};while(tokens[0]&&!isSymbol(tokens[0],")")){const arg=_parse(tokens,0);if(arg.type===9){kwargs[arg.name.value]=arg.value;}else{args.push(arg);}
if(tokens[0]&&isSymbol(tokens[0],",")){tokens.shift();}}
if(!tokens[0]||!isSymbol(tokens[0],")")){throw new ParserError("parsing error");}
tokens.shift();return{type:8,fn:left,args,kwargs};}
case"=":if(left.type===5){return{type:9,name:left,value:_parse(tokens,10),};}
break;case"[":{const key=_parse(tokens);if(!tokens[0]||!isSymbol(tokens[0],"]")){throw new ParserError("parsing error");}
tokens.shift();return{type:12,target:left,key:key,};}
case"if":{const condition=_parse(tokens);if(!tokens[0]||!isSymbol(tokens[0],"else")){throw new ParserError("parsing error");}
tokens.shift();const ifFalse=_parse(tokens);return{type:13,condition,ifTrue:left,ifFalse,};}}}
throw new ParserError("Token cannot be parsed");}
function _parse(tokens,bp=0){const token=tokens.shift();let expr=parsePrefix(token,tokens);while(tokens[0]&&bindingPower(tokens[0])>bp){expr=parseInfix(expr,tokens.shift(),tokens);}
return expr;}
__exports.parse=parse;function parse(tokens){if(tokens.length){const ast=_parse(tokens,0);if(tokens.length){throw new ParserError("Token(s) unused");}
return ast;}
throw new ParserError("Missing token");}
__exports.parseArgs=parseArgs;function parseArgs(args,spec){const last=args[args.length-1];const unnamedArgs=typeof last==="object"?args.slice(0,-1):args;const kwargs=typeof last==="object"?last:{};for(const[index,val]of unnamedArgs.entries()){kwargs[spec[index]]=val;}
return kwargs;}
return __exports;});;

/* /web/static/src/core/py_js/py_tokenizer.js */
odoo.define('@web/core/py_js/py_tokenizer',[],function(require){'use strict';let __exports={};const TokenizerError=__exports.TokenizerError=class TokenizerError extends Error{}
const directMap={"\\":"\\",'"':'"',"'":"'",a:"\x07",b:"\x08",f:"\x0c",n:"\n",r:"\r",t:"\t",v:"\v",};function decodeStringLiteral(str,unicode){const out=[];let code;for(var i=0;i<str.length;++i){if(str[i]!=="\\"){out.push(str[i]);continue;}
var escape=str[i+1];if(escape in directMap){out.push(directMap[escape]);++i;continue;}
switch(escape){case"\n":++i;continue;case"N":if(!unicode){break;}
throw new TokenizerError("SyntaxError: \\N{} escape not implemented");case"u":if(!unicode){break;}
var uni=str.slice(i+2,i+6);if(!/[0-9a-f]{4}/i.test(uni)){throw new TokenizerError(["SyntaxError: (unicode error) 'unicodeescape' codec"," can't decode bytes in position ",i,"-",i+4,": truncated \\uXXXX escape",].join(""));}
code=parseInt(uni,16);out.push(String.fromCharCode(code));i+=5;continue;case"U":if(!unicode){break;}
throw new TokenizerError("SyntaxError: \\U escape not implemented");case"x":var hex=str.slice(i+2,i+4);if(!/[0-9a-f]{2}/i.test(hex)){if(!unicode){throw new TokenizerError("ValueError: invalid \\x escape");}
throw new TokenizerError(["SyntaxError: (unicode error) 'unicodeescape'"," codec can't decode bytes in position ",i,"-",i+2,": truncated \\xXX escape",].join(""));}
code=parseInt(hex,16);out.push(String.fromCharCode(code));i+=3;continue;default:if(!/[0-8]/.test(escape)){break;}
var r=/[0-8]{1,3}/g;r.lastIndex=i+1;var m=r.exec(str);var oct=m[0];code=parseInt(oct,8);out.push(String.fromCharCode(code));i+=oct.length;continue;}
out.push("\\");}
return out.join("");}
const constants=new Set(["None","False","True"]);const comparators=__exports.comparators=["in","not","not in","is","is not","<","<=",">",">=","<>","!=","==",];const binaryOperators=__exports.binaryOperators=["or","and","|","^","&","<<",">>","+","-","*","/","//","%","~","**",".",];const unaryOperators=__exports.unaryOperators=["-"];const symbols=new Set([...["(",")","[","]","{","}",":",","],...["if","else","lambda","="],...comparators,...binaryOperators,...unaryOperators,]);function group(...args){return"("+args.join("|")+")";}
const Name="[a-zA-Z_]\\w*";const Whitespace="[ \\f\\t]*";const DecNumber="\\d+(L|l)?";const IntNumber=DecNumber;const Exponent="[eE][+-]?\\d+";const PointFloat=group(`\\d+\\.\\d*(${Exponent})?`,`\\.\\d+(${Exponent})?`);const FloatNumber=group(PointFloat,`\\d+${Exponent}`);const Number=group(FloatNumber,IntNumber);const Operator=group("\\*\\*=?",">>=?","<<=?","<>","!=","//=?","[+\\-*/%&|^=<>]=?","~");const Bracket="[\\[\\]\\(\\)\\{\\}]";const Special="[:;.,`@]";const Funny=group(Operator,Bracket,Special);const ContStr=group("([uU])?'([^\n'\\\\]*(?:\\\\.[^\n'\\\\]*)*)'",'([uU])?"([^\n"\\\\]*(?:\\\\.[^\n"\\\\]*)*)"');const PseudoToken=Whitespace+group(Number,Funny,ContStr,Name);const NumberPattern=new RegExp("^"+Number+"$");const StringPattern=new RegExp("^"+ContStr+"$");const NamePattern=new RegExp("^"+Name+"$");const strip=new RegExp("^"+Whitespace);__exports.tokenize=tokenize;function tokenize(str){const tokens=[];const max=str.length;let start=0;let end=0;const pseudoprog=new RegExp(PseudoToken,"g");while(pseudoprog.lastIndex<max){const pseudomatch=pseudoprog.exec(str);if(!pseudomatch){if(/^\s+$/.test(str.slice(end))){break;}
throw new TokenizerError("Failed to tokenize <<"+
str+">> at index "+
(end||0)+"; parsed so far: "+
tokens);}
if(pseudomatch.index>end){if(str.slice(end,pseudomatch.index).trim()){throw new TokenizerError("Invalid expression");}}
start=pseudomatch.index;end=pseudoprog.lastIndex;let token=str.slice(start,end).replace(strip,"");if(NumberPattern.test(token)){tokens.push({type:0,value:parseFloat(token),});}else if(StringPattern.test(token)){var m=StringPattern.exec(token);tokens.push({type:1,value:decodeStringLiteral(m[3]!==undefined?m[3]:m[5],!!(m[2]||m[4])),});}else if(symbols.has(token)){if(token==="in"&&tokens.length>0&&tokens[tokens.length-1].value==="not"){token="not in";tokens.pop();}else if(token==="not"&&tokens.length>0&&tokens[tokens.length-1].value==="is"){token="is not";tokens.pop();}
tokens.push({type:2,value:token,});}else if(constants.has(token)){tokens.push({type:4,value:token,});}else if(NamePattern.test(token)){tokens.push({type:3,value:token,});}else{throw new TokenizerError("Invalid expression");}}
return tokens;}
return __exports;});;

/* /web/static/src/core/py_js/py_utils.js */
odoo.define('@web/core/py_js/py_utils',['@web/core/py_js/py_parser','@web/core/py_js/py_date'],function(require){'use strict';let __exports={};const{bp}=require("@web/core/py_js/py_parser");const{PyDate,PyDateTime}=require("@web/core/py_js/py_date");__exports.toPyValue=toPyValue;function toPyValue(value){switch(typeof value){case"string":return{type:1,value};case"number":return{type:0,value};case"boolean":return{type:2,value};case"object":if(Array.isArray(value)){return{type:4,value:value.map(toPyValue)};}else if(value===null){return{type:3};}else if(value instanceof Date){return{type:1,value:PyDateTime.convertDate(value)};}else if(value instanceof PyDate||value instanceof PyDateTime){return{type:1,value};}else{const content={};for(const key in value){content[key]=toPyValue(value[key]);}
return{type:11,value:content};}
default:throw new Error("Invalid type");}}
__exports.formatAST=formatAST;function formatAST(ast,lbp=0){switch(ast.type){case 3:return"None";case 1:return JSON.stringify(ast.value);case 0:return String(ast.value);case 2:return ast.value?"True":"False";case 4:return`[${ast.value.map(formatAST).join(", ")}]`;case 6:if(ast.op==="not"){return`not `+formatAST(ast.right,50);}
return ast.op+formatAST(ast.right,130);case 7:{const abp=bp(ast.op);const str=`${formatAST(ast.left, abp)} ${ast.op} ${formatAST(ast.right, abp)}`;return abp<lbp?`(${str})`:str;}
case 11:{const pairs=[];for(const k in ast.value){pairs.push(`"${k}": ${formatAST(ast.value[k])}`);}
return`{`+pairs.join(", ")+`}`;}
case 10:return`(${ast.value.map(formatAST).join(", ")})`;case 5:return ast.value;case 12:{return`${formatAST(ast.target)}[${formatAST(ast.key)}]`;}
case 13:{const{ifTrue,condition,ifFalse}=ast;return`${formatAST(ifTrue)} if ${formatAST(condition)} else ${formatAST(ifFalse)}`;}
case 14:{const abp=bp(ast.op);const str=`${formatAST(ast.left, abp)} ${ast.op} ${formatAST(ast.right, abp)}`;return abp<lbp?`(${str})`:str;}
case 15:return`${formatAST(ast.obj, 150)}.${ast.key}`;case 8:{const args=ast.args.map(formatAST);const kwargs=[];for(const kwarg in ast.kwargs){kwargs.push(`${kwarg} = ${formatAST(ast.kwargs[kwarg])}`);}
const argStr=args.concat(kwargs).join(", ");return`${formatAST(ast.fn)}(${argStr})`;}}
throw new Error("invalid expression: "+ast);}
const PY_DICT=__exports.PY_DICT=Object.create(null);__exports.toPyDict=toPyDict;function toPyDict(obj){return new Proxy(obj,{getPrototypeOf(){return PY_DICT;},});}
return __exports;});;

/* /web/static/src/core/record_selectors/multi_record_selector.js */
odoo.define('@web/core/record_selectors/multi_record_selector',['@odoo/owl','@web/core/tags_list/tags_list','@web/core/utils/hooks','@web/core/record_selectors/record_autocomplete','@web/core/l10n/translation','@web/core/record_selectors/tag_navigation_hook'],function(require){'use strict';let __exports={};const{Component,onWillStart,onWillUpdateProps}=require("@odoo/owl");const{TagsList}=require("@web/core/tags_list/tags_list");const{useService}=require("@web/core/utils/hooks");const{RecordAutocomplete}=require("@web/core/record_selectors/record_autocomplete");const{_t}=require("@web/core/l10n/translation");const{useTagNavigation}=require("@web/core/record_selectors/tag_navigation_hook");const MultiRecordSelector=__exports.MultiRecordSelector=class MultiRecordSelector extends Component{static props={resIds:{type:Array,element:Number},resModel:String,update:Function,domain:{type:Array,optional:true},context:{type:Object,optional:true},fieldString:{type:String,optional:true},placeholder:{type:String,optional:true},};static components={RecordAutocomplete,TagsList};static template="web.MultiRecordSelector";setup(){this.nameService=useService("name");this.onTagKeydown=useTagNavigation("multiRecordSelector",this.deleteTag.bind(this));onWillStart(()=>this.computeDerivedParams());onWillUpdateProps((nextProps)=>this.computeDerivedParams(nextProps));}
async computeDerivedParams(props=this.props){const displayNames=await this.getDisplayNames(props);this.tags=this.getTags(props,displayNames);}
async getDisplayNames(props){const ids=this.getIds(props);return this.nameService.loadDisplayNames(props.resModel,ids);}
get placeholder(){return this.getIds().length?"":this.props.placeholder;}
getIds(props=this.props){return props.resIds;}
getTags(props,displayNames){return props.resIds.map((id,index)=>{const text=typeof displayNames[id]==="string"?displayNames[id]:_t("Inaccessible/missing record ID: %s",id);return{text,onDelete:()=>{this.deleteTag(index);},onKeydown:this.onTagKeydown,};});}
deleteTag(index){this.props.update([...this.props.resIds.slice(0,index),...this.props.resIds.slice(index+1),]);}
update(resIds){this.props.update([...this.props.resIds,...resIds]);}}
return __exports;});;

/* /web/static/src/core/record_selectors/record_autocomplete.js */
odoo.define('@web/core/record_selectors/record_autocomplete',['@odoo/owl','@web/core/autocomplete/autocomplete','@web/core/l10n/translation','@web/core/domain','@web/core/registry','@web/core/utils/hooks'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{AutoComplete}=require("@web/core/autocomplete/autocomplete");const{_t}=require("@web/core/l10n/translation");const{Domain}=require("@web/core/domain");const{registry}=require("@web/core/registry");const{useOwnedDialogs,useService}=require("@web/core/utils/hooks");const SEARCH_LIMIT=7;const SEARCH_MORE_LIMIT=320;const RecordAutocomplete=__exports.RecordAutocomplete=class RecordAutocomplete extends Component{static props={resModel:String,update:Function,multiSelect:Boolean,getIds:Function,value:String,domain:{type:Array,optional:true},context:{type:Object,optional:true},className:{type:String,optional:true},fieldString:{type:String,optional:true},placeholder:{type:String,optional:true},};static components={AutoComplete};static template="web.RecordAutocomplete";setup(){this.orm=useService("orm");this.nameService=useService("name");this.addDialog=useOwnedDialogs();this.sources=[{placeholder:_t("Loading..."),options:this.loadOptionsSource.bind(this),},];}
addNames(options){const displayNames=Object.fromEntries(options);this.nameService.addDisplayNames(this.props.resModel,displayNames);}
getIds(){return this.props.getIds();}
async loadOptionsSource(name){if(this.lastProm){this.lastProm.abort(false);}
this.lastProm=this.search(name,SEARCH_LIMIT+1);const nameGets=(await this.lastProm).map(([id,label])=>([id,label?label.split("\n")[0]:_t("Unnamed")]));this.addNames(nameGets);const options=nameGets.map(([value,label])=>({value,label}));if(SEARCH_LIMIT<nameGets.length){options.push({label:_t("Search More..."),action:this.onSearchMore.bind(this,name),classList:"o_m2o_dropdown_option",});}
if(options.length===0){options.push({label:_t("(no result)"),unselectable:true});}
return options;}
async onSearchMore(name){const{fieldString,multiSelect,resModel}=this.props;let operator;const ids=[];if(name){const nameGets=await this.search(name,SEARCH_MORE_LIMIT);this.addNames(nameGets);operator="in";ids.push(...nameGets.map((nameGet)=>nameGet[0]));}else{operator="not in";ids.push(...this.getIds());}
const dynamicFilters=ids.length?[{description:_t("Quick search: %s",name),domain:[["id",operator,ids]],},]:undefined;const SelectCreateDialog=registry.category("dialogs").get("select_create");this.addDialog(SelectCreateDialog,{title:_t("Search: %s",fieldString),dynamicFilters,domain:this.getDomain(),resModel,noCreate:true,multiSelect,context:this.props.context||{},onSelected:(resId)=>{const resIds=Array.isArray(resId)?resId:[resId];this.props.update([...resIds]);},});}
getDomain(){const domainIds=Domain.not([["id","in",this.getIds()]]);if(this.props.domain){return Domain.and([this.props.domain,domainIds]).toList();}
return domainIds.toList();}
onSelect({value:resId,action},params){if(action){return action(params);}
this.props.update([resId]);}
search(name,limit){const domain=this.getDomain();return this.orm.call(this.props.resModel,"name_search",[],{name,args:domain,limit,context:this.props.context||{},});}
onChange({inputValue}){if(!inputValue.length){this.props.update([]);}}}
return __exports;});;

/* /web/static/src/core/record_selectors/record_selector.js */
odoo.define('@web/core/record_selectors/record_selector',['@odoo/owl','@web/core/utils/hooks','@web/core/record_selectors/record_autocomplete','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{Component,onWillStart,onWillUpdateProps}=require("@odoo/owl");const{useService}=require("@web/core/utils/hooks");const{RecordAutocomplete}=require("@web/core/record_selectors/record_autocomplete");const{_t}=require("@web/core/l10n/translation");const RecordSelector=__exports.RecordSelector=class RecordSelector extends Component{static props={resId:[Number,{value:false}],resModel:String,update:Function,domain:{type:Array,optional:true},context:{type:Object,optional:true},fieldString:{type:String,optional:true},placeholder:{type:String,optional:true},};static components={RecordAutocomplete};static template="web.RecordSelector";setup(){this.nameService=useService("name");onWillStart(()=>this.computeDerivedParams());onWillUpdateProps((nextProps)=>this.computeDerivedParams(nextProps));}
async computeDerivedParams(props=this.props){const displayNames=await this.getDisplayNames(props);this.displayName=this.getDisplayName(props,displayNames);}
async getDisplayNames(props){const ids=this.getIds(props);return this.nameService.loadDisplayNames(props.resModel,ids);}
getDisplayName(props=this.props,displayNames){const{resId}=props;if(resId===false){return"";}
return typeof displayNames[resId]==="string"?displayNames[resId]:_t("Inaccessible/missing record ID: %s",resId);}
getIds(props=this.props){if(props.resId){return[props.resId];}
return[];}
update(resIds){this.props.update(resIds[0]||false);this.render(true);}}
return __exports;});;

/* /web/static/src/core/record_selectors/tag_navigation_hook.js */
odoo.define('@web/core/record_selectors/tag_navigation_hook',['@web/core/hotkeys/hotkey_service','@odoo/owl'],function(require){'use strict';let __exports={};const{getActiveHotkey}=require("@web/core/hotkeys/hotkey_service");const{useEffect,useRef}=require("@odoo/owl");__exports.useTagNavigation=useTagNavigation;function useTagNavigation(refName,deleteTag){const ref=useRef(refName);useEffect((autocomplete)=>{if(!autocomplete){return;}
autocomplete.addEventListener("keydown",onAutoCompleteKeydown);return()=>{autocomplete.removeEventListener("keydown",onAutoCompleteKeydown);};},()=>[ref.el?.querySelector(".o-autocomplete")]);function focusTag(index){const tags=ref.el.getElementsByClassName("o_tag");if(tags.length){if(index===undefined){tags[tags.length-1].focus();}else{tags[index].focus();}}}
function onAutoCompleteKeydown(ev){if(ev.isComposing){return;}
const hotkey=getActiveHotkey(ev);const input=ev.target.closest(".o-autocomplete--input");const autoCompleteMenuOpened=!!ref.el.querySelector(".o-autocomplete--dropdown-menu");switch(hotkey){case"arrowleft":{if(input.selectionStart||autoCompleteMenuOpened){return;}
focusTag();break;}
case"arrowright":{if(input.selectionStart!==input.value.length||autoCompleteMenuOpened){return;}
focusTag(0);break;}
case"backspace":{if(input.value){return;}
const tags=ref.el.getElementsByClassName("o_tag");if(tags.length){deleteTag(tags.length-1);}
break;}
default:return;}
ev.preventDefault();ev.stopPropagation();}
function onTagKeydown(ev){const hotkey=getActiveHotkey(ev);const tags=[...ref.el.getElementsByClassName("o_tag")];const closestTag=ev.target.closest(".o_tag");const tagIndex=tags.indexOf(closestTag);const input=ref.el.querySelector(".o-autocomplete--input");switch(hotkey){case"arrowleft":{if(tagIndex===0){input.focus();}else{focusTag(tagIndex-1);}
break;}
case"arrowright":{if(tagIndex===tags.length-1){input.focus();}else{focusTag(tagIndex+1);}
break;}
case"backspace":{input.focus();deleteTag(tagIndex);break;}
default:return;}
ev.preventDefault();ev.stopPropagation();}
return onTagKeydown;}
return __exports;});;

/* /web/static/src/core/registry.js */
odoo.define('@web/core/registry',['@odoo/owl'],function(require){'use strict';let __exports={};const{EventBus,validate}=require("@odoo/owl");const KeyNotFoundError=__exports.KeyNotFoundError=class KeyNotFoundError extends Error{}
const DuplicatedKeyError=__exports.DuplicatedKeyError=class DuplicatedKeyError extends Error{}
const validateSchema=(value,schema)=>{if(!odoo.debug){return;}
validate(value,schema);}
const Registry=__exports.Registry=class Registry extends EventBus{constructor(name){super();this.content={};this.subRegistries={};this.elements=null;this.entries=null;this.name=name;this.validationSchema=null;this.addEventListener("UPDATE",()=>{this.elements=null;this.entries=null;});}
add(key,value,{force,sequence}={}){if(this.validationSchema){validateSchema(value,this.validationSchema);}
if(!force&&key in this.content){throw new DuplicatedKeyError(`Cannot add key "${key}" in the "${this.name}" registry: it already exists`);}
let previousSequence;if(force){const elem=this.content[key];previousSequence=elem&&elem[0];}
sequence=sequence===undefined?previousSequence||50:sequence;this.content[key]=[sequence,value];const payload={operation:"add",key,value};this.trigger("UPDATE",payload);return this;}
get(key,defaultValue){if(arguments.length<2&&!(key in this.content)){throw new KeyNotFoundError(`Cannot find key "${key}" in the "${this.name}" registry`);}
const info=this.content[key];return info?info[1]:defaultValue;}
contains(key){return key in this.content;}
getAll(){if(!this.elements){const content=Object.values(this.content).sort((el1,el2)=>el1[0]-el2[0]);this.elements=content.map((elem)=>elem[1]);}
return this.elements.slice();}
getEntries(){if(!this.entries){const entries=Object.entries(this.content).sort((el1,el2)=>el1[1][0]-el2[1][0]);this.entries=entries.map(([str,elem])=>[str,elem[1]]);}
return this.entries.slice();}
remove(key){const value=this.content[key];delete this.content[key];const payload={operation:"delete",key,value};this.trigger("UPDATE",payload);}
category(subcategory){if(!(subcategory in this.subRegistries)){this.subRegistries[subcategory]=new Registry(subcategory);}
return this.subRegistries[subcategory];}
addValidation(schema){if(this.validationSchema){throw new Error("Validation schema already set on this registry");}
this.validationSchema=schema;for(const value of this.getAll()){validateSchema(value,schema);}}}
const registry=__exports.registry=new Registry();return __exports;});;

/* /web/static/src/core/registry_hook.js */
odoo.define('@web/core/registry_hook',['@odoo/owl'],function(require){'use strict';let __exports={};const{useState,onWillStart,onWillDestroy}=require("@odoo/owl");__exports.useRegistry=useRegistry;function useRegistry(registry){const state=useState({entries:registry.getEntries()});const listener=({detail})=>{const index=state.entries.findIndex(([k])=>k===detail.key);if(detail.operation==="add"&&index===-1){const newEntries=registry.getEntries();const newEntry=newEntries.find(([k])=>k===detail.key);const newIndex=newEntries.indexOf(newEntry);if(newIndex===newEntries.length-1){state.entries.push(newEntry);}else{state.entries.splice(newIndex,0,newEntry);}}else if(detail.operation==="delete"&&index>=0){state.entries.splice(index,1);}};onWillStart(()=>registry.addEventListener("UPDATE",listener));onWillDestroy(()=>registry.removeEventListener("UPDATE",listener));return state;}
return __exports;});;

/* /web/static/src/core/resizable_panel/resizable_panel.js */
odoo.define('@web/core/resizable_panel/resizable_panel',['@odoo/owl'],function(require){'use strict';let __exports={};const{Component,onMounted,onWillUpdateProps,onWillUnmount,useEffect,useExternalListener,useRef,useComponent,}=require("@odoo/owl");function useResizable({containerRef,handleRef,initialWidth=400,getMinWidth=()=>400,onResize=()=>{},getResizeSide=()=>"end",}){containerRef=typeof containerRef=="string"?useRef(containerRef):containerRef;handleRef=typeof handleRef=="string"?useRef(handleRef):handleRef;const props=useComponent().props;let minWidth=getMinWidth(props);let resizeSide=getResizeSide(props);let isChangingSize=false;useExternalListener(document,"mouseup",()=>onMouseUp());useExternalListener(document,"mousemove",(ev)=>onMouseMove(ev));useExternalListener(window,"resize",()=>{const limit=getLimitWidth();if(getContainerRect().width>=limit){resize(computeFinalWidth(limit));}});let docDirection;useEffect((container)=>{if(container){docDirection=getComputedStyle(container).direction;}},()=>[containerRef.el]);onMounted(()=>{if(handleRef.el){resize(initialWidth);handleRef.el.addEventListener("mousedown",onMouseDown);}});onWillUpdateProps((nextProps)=>{minWidth=getMinWidth(nextProps);resizeSide=getResizeSide(nextProps);});onWillUnmount(()=>{if(handleRef.el){handleRef.el.removeEventListener("mousedown",onMouseDown);}});function onMouseDown(){isChangingSize=true;document.body.classList.add("pe-none","user-select-none");}
function onMouseUp(){isChangingSize=false;document.body.classList.remove("pe-none","user-select-none");}
function onMouseMove(ev){if(!isChangingSize||!containerRef.el){return;}
const direction=(docDirection==="ltr"&&resizeSide==="end")||(docDirection==="rtl"&&resizeSide==="start")?1:-1;const fixedSide=direction===1?"left":"right";const containerRect=getContainerRect();const newWidth=(ev.clientX-containerRect[fixedSide])*direction;resize(computeFinalWidth(newWidth));}
function computeFinalWidth(targetContainerWidth){const handlerSpacing=handleRef.el?handleRef.el.offsetWidth/2:10;const w=Math.max(minWidth,targetContainerWidth+handlerSpacing);const limit=getLimitWidth();return Math.min(w,limit-handlerSpacing);}
function getContainerRect(){const container=containerRef.el;const offsetParent=container.offsetParent;let containerRect={};if(!offsetParent){containerRect=container.getBoundingClientRect();}else{containerRect.left=container.offsetLeft;containerRect.right=container.offsetLeft+container.offsetWidth;containerRect.width=container.offsetWidth;}
return containerRect;}
function getLimitWidth(){const offsetParent=containerRef.el.offsetParent;return offsetParent?offsetParent.offsetWidth:window.innerWidth;}
function resize(width){containerRef.el.style.setProperty("width",`${width}px`);onResize(width);}}
const ResizablePanel=__exports.ResizablePanel=class ResizablePanel extends Component{static template="web_studio.ResizablePanel";static components={};static props={onResize:{type:Function,optional:true},initialWidth:{type:Number,optional:true},minWidth:{type:Number,optional:true},class:{type:String,optional:true},slots:{type:Object},handleSide:{validate:(val)=>["start","end"].includes(val),optional:true,},};static defaultProps={onResize:()=>{},width:400,minWidth:400,class:"",handleSide:"end",};setup(){useResizable({containerRef:"containerRef",handleRef:"handleRef",onResize:this.props.onResize,initialWidth:this.props.initialWidth,getMinWidth:(props)=>props.minWidth,getResizeSide:(props)=>props.handleSide,});}
get class(){const classes=this.props.class.split(" ");if(!classes.some((cls)=>cls.startsWith("position-"))){classes.push("position-relative");}
return classes.join(" ");}}
return __exports;});;

/* /web/static/src/core/select_menu/select_menu.js */
odoo.define('@web/core/select_menu/select_menu',['@odoo/owl','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/core/l10n/translation','@web/core/tags_list/tags_list','@web/core/utils/classname','@web/core/utils/hooks','@web/core/utils/scrolling','@web/core/utils/search','@web/core/utils/timing'],function(require){'use strict';let __exports={};const{Component,onWillUpdateProps,useEffect,useRef,useState}=require("@odoo/owl");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{_t}=require("@web/core/l10n/translation");const{TagsList}=require("@web/core/tags_list/tags_list");const{mergeClasses}=require("@web/core/utils/classname");const{useAutofocus,useChildRef}=require("@web/core/utils/hooks");const{scrollTo}=require("@web/core/utils/scrolling");const{fuzzyLookup}=require("@web/core/utils/search");const{useDebounced}=require("@web/core/utils/timing");const SelectMenu=__exports.SelectMenu=class SelectMenu extends Component{static template="web.SelectMenu";static choiceItemTemplate="web.SelectMenu.ChoiceItem";static components={Dropdown,DropdownItem,TagsList};static defaultProps={value:undefined,class:"",togglerClass:"",multiSelect:false,onSelect:()=>{},required:false,searchable:true,autoSort:true,searchPlaceholder:_t("Search..."),choices:[],groups:[],disabled:false,};static props={choices:{optional:true,type:Array,element:{type:Object,shape:{value:true,label:{type:String},"*":true,},},},groups:{type:Array,optional:true,element:{type:Object,shape:{label:{type:String,optional:true},choices:{type:Array,element:{type:Object,shape:{value:true,label:{type:String},"*":true,},},},},},},class:{type:String,optional:true},menuClass:{type:String,optional:true},togglerClass:{type:String,optional:true},required:{type:Boolean,optional:true},searchable:{type:Boolean,optional:true},autoSort:{type:Boolean,optional:true},placeholder:{type:String,optional:true},searchPlaceholder:{type:String,optional:true},value:{optional:true},multiSelect:{type:Boolean,optional:true},onInput:{type:Function,optional:true},onSelect:{type:Function,optional:true},slots:{type:Object,optional:true},disabled:{type:Boolean,optional:true},};static SCROLL_SETTINGS={defaultCount:500,increaseAmount:300,distanceBeforeReload:500,};setup(){this.state=useState({choices:[],displayedOptions:[],searchValue:"",});this.inputRef=useRef("inputRef");this.menuRef=useChildRef();this.debouncedOnInput=useDebounced(()=>this.onInput(this.inputRef.el?this.inputRef.el.value.trim():""),250);this.isOpen=false;this.selectedChoice=this.getSelectedChoice(this.props);onWillUpdateProps((nextProps)=>{if(this.state.choices!==nextProps.choices){this.state.choices=nextProps.choices;}
if(this.props.value!==nextProps.value){this.selectedChoice=this.getSelectedChoice(nextProps);}});useEffect(()=>{if(this.isOpen){const groups=[{choices:this.props.choices},...this.props.groups];this.filterOptions(this.state.searchValue,groups);}},()=>[this.props.choices,this.props.groups]);useAutofocus({refName:"inputRef"});}
get displayValue(){return this.selectedChoice?this.selectedChoice.label:"";}
get canDeselect(){return!this.props.required&&this.selectedChoice!==undefined;}
get multiSelectChoices(){return this.selectedChoice.map((c)=>{return{id:c.value,text:c.label,onDelete:()=>{const values=[...this.props.value];values.splice(values.indexOf(c.value),1);this.props.onSelect(values);},};});}
get menuClass(){return mergeClasses({"o_select_menu_menu border bg-light":true,"py-0":this.props.searchable,o_select_menu_multi_select:this.props.multiSelect,},this.props.menuClass);}
async onBeforeOpen(){if(this.state.searchValue.length){this.state.searchValue="";if(this.props.onInput){await this.executeOnInput("");}}
this.filterOptions();}
onStateChanged(open){this.isOpen=open;if(open){this.menuRef.el?.addEventListener("scroll",(ev)=>this.onScroll(ev));const selectedElement=this.menuRef.el?.querySelectorAll(".o_select_active")[0];if(selectedElement){scrollTo(selectedElement);}}}
isOptionSelected(choice){if(this.props.multiSelect){return this.props.value.includes(choice.value);}
return this.props.value===choice.value;}
getItemClass(choice){if(this.isOptionSelected(choice)){return"o_select_menu_item p-2 o_select_active bg-primary fw-bolder fst-italic";}else{return"o_select_menu_item p-2";}}
async executeOnInput(searchString){await this.props.onInput(searchString);}
onInput(searchString){this.filterOptions(searchString);this.state.searchValue=searchString;const inputEl=this.inputRef.el;if(inputEl&&inputEl.parentNode){inputEl.parentNode.scrollTo(0,0);}
if(this.props.onInput){this.executeOnInput(searchString);}}
getSelectedChoice(props){const choices=[...props.choices,...props.groups.flatMap((g)=>g.choices)];if(!this.props.multiSelect){return choices.find((c)=>c.value===props.value);}
const valueSet=new Set(props.value);return[...(this.selectedChoice||[]),...choices].filter((c,index,self)=>valueSet.has(c.value)&&self.findIndex((t)=>t.value===c.value)===index);}
onItemSelected(value){if(this.props.multiSelect){const values=[...this.props.value];const valueIndex=values.indexOf(value);if(valueIndex!==-1){values.splice(valueIndex,1);this.props.onSelect(values);}else{this.props.onSelect([...this.props.value,value]);}}else if(!this.selectedChoice||this.selectedChoice.value!==value){this.props.onSelect(value);}
if(this.inputRef.el){this.inputRef.el.value="";this.state.searchValue="";}}
filterOptions(searchString="",groups){const groupsList=groups||[{choices:this.props.choices},...this.props.groups];this.state.choices=[];for(const group of groupsList){let filteredOptions=[];if(searchString){filteredOptions=fuzzyLookup(searchString,group.choices,(choice)=>choice.label);}else{filteredOptions=group.choices;if(this.props.autoSort){filteredOptions.sort((optionA,optionB)=>optionA.label.localeCompare(optionB.label));}}
if(filteredOptions.length===0){continue;}
if(group.label){this.state.choices.push({...group,isGroup:true});}
this.state.choices.push(...filteredOptions);}
this.sliceDisplayedOptions();}
onScroll(event){const el=event.target;const hasReachMax=this.state.displayedOptions.length>=this.state.choices.length;const remainingDistance=el.scrollHeight-el.scrollTop;const distanceToReload=el.clientHeight+this.constructor.SCROLL_SETTINGS.distanceBeforeReload;if(!hasReachMax&&remainingDistance<distanceToReload){const displayCount=this.state.displayedOptions.length+
this.constructor.SCROLL_SETTINGS.increaseAmount;this.state.displayedOptions=this.state.choices.slice(0,displayCount);}}
sliceDisplayedOptions(){const selectedIndex=this.getSelectedOptionIndex();const defaultCount=this.constructor.SCROLL_SETTINGS.defaultCount;if(selectedIndex===-1){this.state.displayedOptions=this.state.choices.slice(0,defaultCount);}else{const endIndex=Math.max(selectedIndex+this.constructor.SCROLL_SETTINGS.increaseAmount,defaultCount);this.state.displayedOptions=this.state.choices.slice(0,endIndex);}}
getSelectedOptionIndex(){let selectedIndex=-1;for(let i=0;i<this.state.choices.length;i++){if(this.isOptionSelected(this.state.choices[i])){selectedIndex=i;}}
return selectedIndex;}}
return __exports;});;

/* /web/static/src/core/signature/name_and_signature.js */
odoo.define('@web/core/signature/name_and_signature',['@web/core/assets','@web/core/browser/feature_detection','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/core/network/rpc','@web/core/utils/hooks','@web/core/utils/render','@web/core/utils/urls','@odoo/owl'],function(require){'use strict';let __exports={};const{loadJS}=require("@web/core/assets");const{isMobileOS}=require("@web/core/browser/feature_detection");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{rpc}=require("@web/core/network/rpc");const{useAutofocus}=require("@web/core/utils/hooks");const{renderToString}=require("@web/core/utils/render");const{getDataURLFromFile}=require("@web/core/utils/urls");const{Component,useState,onWillStart,useRef,useEffect}=require("@odoo/owl");let htmlId=0;const NameAndSignature=__exports.NameAndSignature=class NameAndSignature extends Component{static template="web.NameAndSignature";static components={Dropdown,DropdownItem};static props={signature:{type:Object},defaultFont:{type:String,optional:true},displaySignatureRatio:{type:Number,optional:true},fontColor:{type:String,optional:true},signatureType:{type:String,optional:true},noInputName:{type:Boolean,optional:true},mode:{type:String,optional:true},onSignatureChange:{type:Function,optional:true},};static defaultProps={defaultFont:"",displaySignatureRatio:3.0,fontColor:"DarkBlue",signatureType:"signature",noInputName:false,onSignatureChange:()=>{},};setup(){this.htmlId=htmlId++;this.defaultName=this.props.signature.name||"";this.currentFont=0;this.drawTimeout=null;this.state=useState({signMode:this.props.mode||(this.props.noInputName&&!this.defaultName?"draw":"auto"),showSignatureArea:!!(this.props.noInputName||this.defaultName),showFontList:false,});this.signNameInputRef=useRef("signNameInput");this.signInputLoad=useRef("signInputLoad");useAutofocus({refName:"signNameInput"});useEffect((el)=>{if(el){el.click();}},()=>[this.signInputLoad.el]);onWillStart(async()=>{this.fonts=await rpc(`/web/sign/get_fonts/${this.props.defaultFont}`);});onWillStart(async()=>{await loadJS("/web/static/lib/signature_pad/signature_pad.umd.js");});this.signatureRef=useRef("signature");useEffect((el)=>{if(el){this.signaturePad=new SignaturePad(el,{penColor:this.props.fontColor,backgroundColor:"rgba(255,255,255,0)",minWidth:2,maxWidth:2,});this.signaturePad.addEventListener("endStroke",()=>{this.props.signature.isSignatureEmpty=this.isSignatureEmpty;this.props.onSignatureChange(this.state.signMode);});this.resetSignature();this.props.signature.getSignatureImage=()=>this.signaturePad.toDataURL();this.props.signature.resetSignature=()=>this.resetSignature();if(this.state.signMode==="auto"){this.drawCurrentName();}
if(this.props.signature.signatureImage){this.clear();this.signaturePad.fromDataURL(this.props.signature.signatureImage);}}},()=>[this.signatureRef.el]);}
async drawCurrentName(){const font=this.fonts[this.currentFont];const text=this.getCleanedName();const canvas=this.signatureRef.el;const img=this.getSVGText(font,text,canvas.width,canvas.height);await this.printImage(img);}
focusName(){if(!isMobileOS()&&this.signNameInputRef.el){this.signNameInputRef.el.focus();}}
clear(){this.signaturePad.clear();this.props.signature.isSignatureEmpty=this.isSignatureEmpty;}
getCleanedName(){const text=this.props.signature.name;if(this.props.signatureType==="initial"&&text){return(text.split(" ").map(function(w){return w[0];}).join(".")+".");}
return text;}
getSVGText(font,text,width,height){const svg=renderToString("web.sign_svg_text",{width:width,height:height,font:font,text:text,type:this.props.signatureType,color:this.props.fontColor,});return"data:image/svg+xml,"+encodeURI(svg);}
getSVGTextFont(font){const height=100;const width=parseInt(height*this.props.displaySignatureRatio);return this.getSVGText(font,this.getCleanedName(),width,height);}
uploadFile(){this.signInputLoad.el?.click();}
async onChangeSignLoadInput(ev){var file=ev.target.files[0];if(file===undefined){return false;}
if(file.type.substr(0,5)!=="image"){this.clear();this.state.loadIsInvalid=true;return false;}
this.state.loadIsInvalid=false;const result=await getDataURLFromFile(file);await this.printImage(result);}
onClickSignAutoSelectStyle(){this.state.showFontList=true;}
onClickSignDrawClear(){this.clear();this.props.onSignatureChange(this.state.signMode);}
onClickSignLoad(){this.setMode("load");}
onClickSignAuto(){this.setMode("auto");}
onInputSignName(ev){this.props.signature.name=ev.target.value;if(!this.state.showSignatureArea&&this.getCleanedName()){this.state.showSignatureArea=true;return;}
if(this.state.signMode==="auto"){this.drawCurrentName();}}
onSelectFont(index){this.currentFont=index;this.drawCurrentName();}
async printImage(imgSrc){this.clear();const c=this.signaturePad.canvas;const img=new Image();img.onload=()=>{const ctx=c.getContext("2d");var ratio=((img.width/img.height)>(c.width/c.height))?c.width/img.width:c.height/img.height;ctx.drawImage(img,(c.width/2)-(img.width*ratio/2),(c.height/2)-(img.height*ratio/2),img.width*ratio,img.height*ratio);this.props.signature.isSignatureEmpty=this.isSignatureEmpty;this.props.onSignatureChange(this.state.signMode);};img.src=imgSrc;this.signaturePad._isEmpty=false;}
resetSignature(){this.resizeSignature();this.clear();this.setMode(this.state.signMode,true);this.focusName();}
resizeSignature(){const width=this.signatureRef.el.clientWidth;const height=parseInt(width/this.props.displaySignatureRatio);Object.assign(this.signatureRef.el,{width,height});}
setMode(mode,reset){if(reset!==true&&mode===this.signMode){return;}
this.state.signMode=mode;this.signaturePad[this.state.signMode==="draw"?"on":"off"]();this.clear();if(this.state.signMode==="auto"){this.drawCurrentName();}
this.props.onSignatureChange(this.state.signMode);}
get isSignatureEmpty(){return this.signaturePad.isEmpty();}
get loadIsInvalid(){return this.state.signMode==="load"&&this.state.loadIsInvalid;}}
return __exports;});;

/* /web/static/src/core/signature/signature_dialog.js */
odoo.define('@web/core/signature/signature_dialog',['@web/core/dialog/dialog','@web/core/signature/name_and_signature','@odoo/owl'],function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{NameAndSignature}=require("@web/core/signature/name_and_signature");const{Component,useState}=require("@odoo/owl");const SignatureDialog=__exports.SignatureDialog=class SignatureDialog extends Component{static template="web.SignatureDialog";static components={Dialog,NameAndSignature};static props={defaultName:{type:String,optional:true},nameAndSignatureProps:Object,uploadSignature:Function,close:Function,};static defaultProps={defaultName:"",};setup(){this.signature=useState({name:this.props.defaultName,isSignatureEmpty:true,});}
onClickConfirm(){this.props.uploadSignature({name:this.signature.name,signatureImage:this.signature.getSignatureImage(),});this.props.close();}
get nameAndSignatureProps(){return{...this.props.nameAndSignatureProps,signature:this.signature,};}}
return __exports;});;

/* /web/static/src/core/tags_list/tags_list.js */
odoo.define('@web/core/tags_list/tags_list',['@odoo/owl'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const TagsList=__exports.TagsList=class TagsList extends Component{static template="web.TagsList";static defaultProps={displayText:true,};static props={displayText:{type:Boolean,optional:true},visibleItemsLimit:{type:Number,optional:true},tags:{type:Object},};get visibleTagsCount(){return this.props.visibleItemsLimit-1;}
get visibleTags(){if(this.props.visibleItemsLimit&&this.props.tags.length>this.props.visibleItemsLimit){return this.props.tags.slice(0,this.visibleTagsCount);}
return this.props.tags;}
get otherTags(){if(!this.props.visibleItemsLimit||this.props.tags.length<=this.props.visibleItemsLimit){return[];}
return this.props.tags.slice(this.visibleTagsCount);}
get tooltipInfo(){return JSON.stringify({tags:this.otherTags.map((tag)=>({text:tag.text,id:tag.id,})),});}}
return __exports;});;

/* /web/static/src/core/template_inheritance.js */
odoo.define('@web/core/template_inheritance',[],function(require){'use strict';let __exports={};const RSTRIP_REGEXP=/(?=\n[ \t]*$)/;function addBefore(target,operation){const nodes=getNodes(target,operation);if(nodes.length===0){return;}
const{previousSibling}=target;target.before(...nodes);if(previousSibling?.nodeType===Node.TEXT_NODE){const[text1,text2]=previousSibling.data.split(RSTRIP_REGEXP);previousSibling.data=text1.trimEnd();if(nodes[0].nodeType===Node.TEXT_NODE){mergeTextNodes(previousSibling,nodes[0]);}
if(text2&&nodes.some((n)=>n.nodeType!==Node.TEXT_NODE)){const textNode=document.createTextNode(text2);target.before(textNode);if(textNode.previousSibling.nodeType===Node.TEXT_NODE){mergeTextNodes(textNode.previousSibling,textNode);}}}}
function getRoot(element){while(element.parentElement){element=element.parentElement;}
return element;}
const HASCLASS_REGEXP=/hasclass\(([^)]*)\)/g;function getXpath(operation){const xpath=operation.getAttribute("expr");return xpath.replaceAll(HASCLASS_REGEXP,(_,capturedGroup)=>{return capturedGroup.split(",").map((c)=>`contains(concat(' ', @class, ' '), ' ${c.trim().slice(1, -1)} ')`).join(" and ");});}
function getNode(element,operation){const root=getRoot(element);const doc=new Document();doc.appendChild(root);if(operation.tagName==="xpath"){const xpath=getXpath(operation);const result=doc.evaluate(xpath,root,null,XPathResult.FIRST_ORDERED_NODE_TYPE);return result.singleNodeValue;}
for(const elem of root.querySelectorAll(operation.tagName)){if([...operation.attributes].every(({name,value})=>name==="position"||elem.getAttribute(name)===value)){return elem;}}
return null;}
function getElement(element,operation){const node=getNode(element,operation);if(!node){throw new Error(`Element '${operation.outerHTML}' cannot be located in element tree`);}
if(!(node instanceof Element)){throw new Error(`Found node ${node} instead of an element`);}
return node;}
function getNodes(element,operation){const nodes=[];for(const childNode of operation.childNodes){if(childNode.tagName==="xpath"&&childNode.getAttribute?.("position")==="move"){const node=getElement(element,childNode);removeNode(node);nodes.push(node);}else{nodes.push(childNode);}}
return nodes;}
function mergeTextNodes(first,second,trimEnd=true){first.data=(trimEnd?first.data.trimEnd():first.data)+second.data;second.remove();}
function splitAndTrim(str,separator){return str.split(separator).map((s)=>s.trim());}
function modifyAttributes(target,operation){for(const child of operation.children){if(child.tagName!=="attribute"){continue;}
const attributeName=child.getAttribute("name");const firstNode=child.childNodes[0];let value=firstNode?.nodeType===Node.TEXT_NODE?firstNode.data:"";const add=child.getAttribute("add")||"";const remove=child.getAttribute("remove")||"";if(add||remove){if(firstNode?.nodeType===Node.TEXT_NODE){throw new Error(`Useless element content ${firstNode.outerHTML}`);}
const separator=child.getAttribute("separator")||",";const toRemove=new Set(splitAndTrim(remove,separator));const values=splitAndTrim(target.getAttribute(attributeName)||"",separator).filter((s)=>!toRemove.has(s));values.push(...splitAndTrim(add,separator).filter((s)=>s));value=values.join(separator);}
if(value){target.setAttribute(attributeName,value);}else{target.removeAttribute(attributeName);}}}
function removeNode(node){const{nextSibling,previousSibling}=node;node.remove();if(nextSibling?.nodeType===Node.TEXT_NODE&&previousSibling?.nodeType===Node.TEXT_NODE){mergeTextNodes(previousSibling,nextSibling,previousSibling.parentElement.firstChild===previousSibling);}}
function replace(root,target,operation){const mode=operation.getAttribute("mode")||"outer";switch(mode){case"outer":{const result=operation.ownerDocument.evaluate(".//*[text()='$0']",operation,null,XPathResult.ORDERED_NODE_SNAPSHOT_TYPE);for(let i=0;i<result.snapshotLength;i++){const loc=result.snapshotItem(i);loc.firstChild.replaceWith(target.cloneNode(true));}
if(target.parentElement){const nodes=getNodes(target,operation);target.replaceWith(...nodes);}else{let operationContent=null;let comment=null;for(const child of operation.childNodes){if(child.nodeType===Node.ELEMENT_NODE){operationContent=child;break;}
if(child.nodeType===Node.COMMENT_NODE){comment=child;}}
root=operationContent.cloneNode(true);if(target.hasAttribute("t-name")){root.setAttribute("t-name",target.getAttribute("t-name"));}
if(comment){root.prepend(comment);}}
break;}
case"inner":while(target.firstChild){target.removeChild(target.lastChild);}
target.append(...operation.childNodes);break;default:throw new Error(`Invalid mode attribute: '${mode}'`);}
return root;}
__exports.applyInheritance=applyInheritance;function applyInheritance(root,operations,url=""){for(const operation of operations.children){const target=getElement(root,operation);const position=operation.getAttribute("position")||"inside";if(odoo.debug&&url){const attributes=[...operation.attributes].map(({name,value})=>`${name}=${JSON.stringify(name === "position" ? position : value)}`);const comment=document.createComment(` From file: ${url} ; ${attributes.join(" ; ")} `);if(position==="attributes"){target.before(comment);}else{operation.prepend(comment);}}
switch(position){case"replace":{root=replace(root,target,operation);break;}
case"attributes":{modifyAttributes(target,operation);break;}
case"inside":{const sentinel=document.createElement("sentinel");target.append(sentinel);addBefore(sentinel,operation);removeNode(sentinel);break;}
case"after":{const sentinel=document.createElement("sentinel");target.after(sentinel);addBefore(sentinel,operation);removeNode(sentinel);break;}
case"before":{addBefore(target,operation);break;}
default:throw new Error(`Invalid position attribute: '${position}'`);}}
return root;}
return __exports;});;

/* /web/static/src/core/templates.js */
odoo.define('@web/core/templates',['@web/core/template_inheritance'],function(require){'use strict';let __exports={};const{applyInheritance}=require("@web/core/template_inheritance");const parser=new DOMParser();const templateProcessors=[];let urlFilters=[];function getParsedTemplate(templateString){const doc=parser.parseFromString(templateString,"text/xml");for(const processor of templateProcessors){processor(doc);}
return doc.firstChild;}
function getClone(template){const c=template.cloneNode(true);new Document().append(c);return c;}
const registered=new Set();function isRegistered(...args){const key=JSON.stringify([...args]);if(registered.has(key)){return true;}
registered.add(key);return false;}
let blockType=null;let blockId=0;const templates={};const parsedTemplates={};const info={};__exports.registerTemplate=registerTemplate;function registerTemplate(name,url,templateString){if(isRegistered(...arguments)){return;}
if(blockType!=="templates"){blockType="templates";blockId++;}
if(name in templates&&(info[name].url!==url||templates[name]!==templateString)){throw new Error(`Template ${name} already exists`);}
templates[name]=templateString;info[name]={blockId,url};}
const templateExtensions={};const parsedTemplateExtensions={};__exports.registerTemplateExtension=registerTemplateExtension;function registerTemplateExtension(inheritFrom,url,templateString){if(isRegistered(...arguments)){return;}
if(blockType!=="extensions"){blockType="extensions";blockId++;}
if(!templateExtensions[inheritFrom]){templateExtensions[inheritFrom]=[];}
if(!templateExtensions[inheritFrom][blockId]){templateExtensions[inheritFrom][blockId]=[];}
templateExtensions[inheritFrom][blockId].push({templateString,url,});}
__exports.registerTemplateProcessor=registerTemplateProcessor;function registerTemplateProcessor(processor){templateProcessors.push(processor);}
__exports.setUrlFilters=setUrlFilters;function setUrlFilters(filters){urlFilters=filters;}
function _getTemplate(name,blockId=null){if(!(name in parsedTemplates)){if(!(name in templates)){return null;}
const templateString=templates[name];parsedTemplates[name]=getParsedTemplate(templateString);}
let processedTemplate=parsedTemplates[name];const inheritFrom=processedTemplate.getAttribute("t-inherit");if(inheritFrom){const parentTemplate=_getTemplate(inheritFrom,blockId||info[name].blockId);if(!parentTemplate){throw new Error(`Constructing template ${name}: template parent ${inheritFrom} not found`);}
const element=getClone(processedTemplate);processedTemplate=applyInheritance(getClone(parentTemplate),element,info[name].url);if(processedTemplate.tagName!==element.tagName){const temp=processedTemplate;processedTemplate=new Document().createElement(element.tagName);processedTemplate.append(...temp.childNodes);}
for(const{name,value}of element.attributes){if(!["t-inherit","t-inherit-mode"].includes(name)){processedTemplate.setAttribute(name,value);}}}
for(const otherBlockId in templateExtensions[name]||{}){if(blockId&&otherBlockId>blockId){break;}
if(!(name in parsedTemplateExtensions)){parsedTemplateExtensions[name]={};}
if(!(otherBlockId in parsedTemplateExtensions[name])){parsedTemplateExtensions[name][otherBlockId]=[];for(const{templateString,url}of templateExtensions[name][otherBlockId]){parsedTemplateExtensions[name][otherBlockId].push({template:getParsedTemplate(templateString),url,});}}
for(const{template,url}of parsedTemplateExtensions[name][otherBlockId]){if(!urlFilters.every((filter)=>filter(url))){continue;}
processedTemplate=applyInheritance(inheritFrom?processedTemplate:getClone(processedTemplate),getClone(template),url);}}
return processedTemplate;}
let processedTemplates={};__exports.getTemplate=getTemplate;function getTemplate(name){if(!processedTemplates[name]){processedTemplates[name]=_getTemplate(name);}
return processedTemplates[name];}
__exports.clearProcessedTemplates=clearProcessedTemplates;function clearProcessedTemplates(){processedTemplates={};}
__exports.checkPrimaryTemplateParents=checkPrimaryTemplateParents;function checkPrimaryTemplateParents(namesToCheck){const missing=new Set(namesToCheck.filter((name)=>!(name in templates)));if(missing.size){console.error(`Missing (primary) parent templates: ${[...missing].join(", ")}`);}}
return __exports;});;

/* /web/static/src/core/tooltip/tooltip.js */
odoo.define('@web/core/tooltip/tooltip',['@odoo/owl'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const Tooltip=__exports.Tooltip=class Tooltip extends Component{static template="web.Tooltip";static props={close:Function,tooltip:{type:String,optional:true},template:{type:String,optional:true},info:{optional:true},};}
return __exports;});;

/* /web/static/src/core/tooltip/tooltip_hook.js */
odoo.define('@web/core/tooltip/tooltip_hook',['@web/core/utils/hooks','@odoo/owl'],function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{useEffect,useRef}=require("@odoo/owl");__exports.useTooltip=useTooltip;function useTooltip(refName,params){const tooltip=useService("tooltip");const ref=useRef(refName);useEffect((el)=>tooltip.add(el,params),()=>[ref.el]);}
return __exports;});;

/* /web/static/src/core/tooltip/tooltip_service.js */
odoo.define('@web/core/tooltip/tooltip_service',['@web/core/browser/browser','@web/core/registry','@web/core/tooltip/tooltip','@web/core/browser/feature_detection','@odoo/owl'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const{Tooltip}=require("@web/core/tooltip/tooltip");const{hasTouch}=require("@web/core/browser/feature_detection");const{whenReady}=require("@odoo/owl");const OPEN_DELAY=__exports.OPEN_DELAY=400;const CLOSE_DELAY=__exports.CLOSE_DELAY=200;const SHOW_AFTER_DELAY=__exports.SHOW_AFTER_DELAY=250;const tooltipService=__exports.tooltipService={dependencies:["popover"],start(env,{popover}){let openTooltipTimeout;let closeTooltip;let showTimer;let target=null;const elementsWithTooltips=new WeakMap();function cleanup(){target=null;browser.clearTimeout(openTooltipTimeout);openTooltipTimeout=null;if(closeTooltip){closeTooltip();closeTooltip=null;}}
function shouldCleanup(){if(!target){return false;}
if(!document.body.contains(target)){return true;}
return false;}
function openTooltip(el,{tooltip="",template,info,position,delay=OPEN_DELAY}){cleanup();if(!tooltip&&!template){return;}
target=el;openTooltipTimeout=browser.setTimeout(()=>{if(target.isConnected){closeTooltip=popover.add(target,Tooltip,{tooltip,template,info},{position});target.title="";}},delay);}
function openElementsTooltip(el){if(el.nodeType===Node.TEXT_NODE){return;}
const element=el.closest("[data-tooltip], [data-tooltip-template]");if(elementsWithTooltips.has(el)){openTooltip(el,elementsWithTooltips.get(el));}else if(element){const dataset=element.dataset;const params={tooltip:dataset.tooltip,template:dataset.tooltipTemplate,position:dataset.tooltipPosition,};if(dataset.tooltipInfo){params.info=JSON.parse(dataset.tooltipInfo);}
if(dataset.tooltipDelay){params.delay=parseInt(dataset.tooltipDelay,10);}
openTooltip(element,params);}}
function onMouseenter(ev){openElementsTooltip(ev.target);}
function cleanupTooltip(ev){if(target===ev.target.closest("[data-tooltip], [data-tooltip-template]")){cleanup();}}
function onTouchStart(ev){cleanup();showTimer=browser.setTimeout(()=>{openElementsTooltip(ev.target);},SHOW_AFTER_DELAY);}
whenReady(()=>{browser.setInterval(()=>{if(shouldCleanup()){cleanup();}},CLOSE_DELAY);if(hasTouch()){document.body.addEventListener("touchstart",onTouchStart);document.body.addEventListener("touchend",(ev)=>{if(ev.target.closest("[data-tooltip], [data-tooltip-template]")){if(!ev.target.dataset.tooltipTouchTapToShow){browser.clearTimeout(showTimer);browser.clearTimeout(openTooltipTimeout);}}});document.body.addEventListener("touchcancel",(ev)=>{if(ev.target.closest("[data-tooltip], [data-tooltip-template]")){if(!ev.target.dataset.tooltipTouchTapToShow){browser.clearTimeout(showTimer);browser.clearTimeout(openTooltipTimeout);}}});}
document.body.addEventListener("mouseenter",onMouseenter,{capture:true});document.body.addEventListener("mouseleave",cleanupTooltip,{capture:true});document.body.addEventListener("click",cleanupTooltip,{capture:true});});return{add(el,params){elementsWithTooltips.set(el,params);return()=>{elementsWithTooltips.delete(el);if(target===el){cleanup();}};},};},};registry.category("services").add("tooltip",tooltipService);return __exports;});;

/* /web/static/src/core/transition.js */
odoo.define('@web/core/transition',['@web/core/browser/browser','@odoo/owl'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{Component,onWillUpdateProps,status,useComponent,useEffect,useState,xml,}=require("@odoo/owl");const config=__exports.config={disabled:false,};__exports.useTransition=useTransition;function useTransition({name,initialVisibility=true,immediate=false,leaveDuration=500,onLeave=()=>{},}){const component=useComponent();const state=useState({shouldMount:initialVisibility,stage:initialVisibility?"enter":"leave",});if(config.disabled){return{get shouldMount(){return state.shouldMount;},set shouldMount(val){state.shouldMount=val;},get className(){return`${name} ${name}-enter-active`;},get stage(){return"enter-active";},};}
let onNextPatch=null;useEffect(()=>{if(onNextPatch){onNextPatch();onNextPatch=null;}});let prevState,timer;const transition={get shouldMount(){return state.shouldMount;},set shouldMount(newState){if(newState===prevState){return;}
browser.clearTimeout(timer);prevState=newState;if(newState){if(status(component)==="mounted"||immediate){state.stage="enter";component.render();onNextPatch=()=>{state.stage="enter-active";};}else{state.stage="enter-active";}
state.shouldMount=true;}else{state.stage="leave";timer=browser.setTimeout(()=>{state.shouldMount=false;onLeave();},leaveDuration);}},get className(){return`${name} ${name}-${state.stage}`;},get stage(){return state.stage;},};transition.shouldMount=initialVisibility;return transition;}
const Transition=__exports.Transition=class Transition extends Component{static template=xml`<t t-slot="default" t-if="transition.shouldMount" className="transition.className"/>`;static props={name:String,visible:{type:Boolean,optional:true},immediate:{type:Boolean,optional:true},leaveDuration:{type:Number,optional:true},onLeave:{type:Function,optional:true},slots:Object,};setup(){const{immediate,visible,leaveDuration,name,onLeave}=this.props;this.transition=useTransition({initialVisibility:visible,immediate,leaveDuration,name,onLeave,});onWillUpdateProps(({visible=true})=>{this.transition.shouldMount=visible;});}}
return __exports;});;

/* /web/static/src/core/tree_editor/condition_tree.js */
odoo.define('@web/core/tree_editor/condition_tree',['@web/core/domain','@web/core/py_js/py','@web/core/py_js/py_utils','@web/core/utils/objects'],function(require){'use strict';let __exports={};const{Domain}=require("@web/core/domain");const{formatAST,parseExpr}=require("@web/core/py_js/py");const{toPyValue}=require("@web/core/py_js/py_utils");const{deepCopy,deepEqual}=require("@web/core/utils/objects");const TERM_OPERATORS_NEGATION=__exports.TERM_OPERATORS_NEGATION={"<":">=",">":"<=","<=":">",">=":"<","=":"!=","!=":"=",in:"not in",like:"not like",ilike:"not ilike","not in":"in","not like":"like","not ilike":"ilike",};const TERM_OPERATORS_NEGATION_EXTENDED={...TERM_OPERATORS_NEGATION,is:"is not","is not":"is","==":"!=","!=":"==",};const EXCHANGE={"<":">","<=":">=",">":"<",">=":"<=","=":"=","!=":"!=",};const COMPARATORS=["<","<=",">",">=","in","not in","==","is","!=","is not"];const DATETIME_TODAY_STRING_EXPRESSION=`datetime.datetime.combine(context_today(), datetime.time(0, 0, 0)).to_utc().strftime("%Y-%m-%d %H:%M:%S")`;const DATE_TODAY_STRING_EXPRESSION=`context_today().strftime("%Y-%m-%d")`;const DELTA_DATE_AST=parseExpr(`(context_today() + relativedelta(period=amount)).strftime('%Y-%m-%d')`);const DELTA_DATETIME_AST=parseExpr(`datetime.datetime.combine(context_today() + relativedelta(period=amount), datetime.time(0, 0, 0)).to_utc().strftime("%Y-%m-%d %H:%M:%S")`);function replaceKwargs(ast,fieldType,kwargs={}){const astCopy=deepCopy(ast);if(fieldType==="date"){astCopy.fn.obj.right.kwargs=kwargs;}else{astCopy.fn.obj.fn.obj.args[0].right.kwargs=kwargs;}
return astCopy;}
function getDelta(ast,fieldType){const kwargs=(fieldType==="date"?ast.fn?.obj?.right?.kwargs:ast.fn?.obj?.fn?.obj?.args?.[0]?.right?.kwargs)||{};if(Object.keys(kwargs).length!==1){return null;}
if(!deepEqual(replaceKwargs(ast,fieldType),replaceKwargs(fieldType==="date"?DELTA_DATE_AST:DELTA_DATETIME_AST,fieldType))){return null;}
const[option,amountAST]=Object.entries(kwargs)[0];return[toValue(amountAST),option];}
function getDeltaExpression(value,fieldType){const ast=replaceKwargs(fieldType==="date"?DELTA_DATE_AST:DELTA_DATETIME_AST,fieldType,{[value[1]]:toAST(value[0])});return expression(formatAST(ast));}
function isTodayExpr(val,type){return(val._expr===(type==="date"?DATE_TODAY_STRING_EXPRESSION:DATETIME_TODAY_STRING_EXPRESSION));}
const Expression=__exports.Expression=class Expression{constructor(ast){if(typeof ast==="string"){ast=parseExpr(ast);}
this._ast=ast;this._expr=formatAST(ast);}
toAST(){return this._ast;}
toString(){return this._expr;}}
__exports.expression=expression;function expression(expr){return new Expression(expr);}
__exports.connector=connector;function connector(value,children=[],negate=false){return{type:"connector",value,children,negate};}
__exports.condition=condition;function condition(path,operator,value,negate=false){return{type:"condition",path,operator,value,negate};}
__exports.complexCondition=complexCondition;function complexCondition(value){parseExpr(value);return{type:"complex_condition",value};}
function cloneValue(value){if(value instanceof Expression){return new Expression(value.toAST());}
if(Array.isArray(value)){return value.map(cloneValue);}
return value;}
__exports.cloneTree=cloneTree;function cloneTree(tree){const clone={};for(const key in tree){clone[key]=cloneValue(tree[key]);}
return clone;}
__exports.formatValue=formatValue;function formatValue(value){return formatAST(toAST(value));}
__exports.normalizeValue=normalizeValue;function normalizeValue(value){return toValue(toAST(value));}
__exports.toValue=toValue;function toValue(ast,isWithinArray=false){if([4,10].includes(ast.type)&&!isWithinArray){return ast.value.map((v)=>toValue(v,true));}else if([0,1,2].includes(ast.type)){return ast.value;}else if(ast.type===6&&ast.op==="-"&&ast.right.type===0){return-ast.right.value;}else if(ast.type===5&&["false","true"].includes(ast.value)){return JSON.parse(ast.value);}else{return new Expression(ast);}}
__exports.isTree=isTree;function isTree(value){return(typeof value==="object"&&!(value instanceof Domain)&&!(value instanceof Expression)&&!Array.isArray(value)&&value!==null);}
function toAST(value){if(isTree(value)){const domain=new Domain(domainFromTree(value));return domain.ast;}
if(value instanceof Expression){return value.toAST();}
if(Array.isArray(value)){return{type:4,value:value.map(toAST)};}
return toPyValue(value);}
function addChild(parent,child){if(child.type==="connector"&&!child.negate&&child.value===parent.value){parent.children.push(...child.children);}else{parent.children.push(child);}}
function getNormalizedCondition(condition){let{operator,negate}=condition;if(negate&&typeof operator==="string"&&TERM_OPERATORS_NEGATION[operator]){operator=TERM_OPERATORS_NEGATION[operator];negate=false;}
return{...condition,operator,negate};}
function normalizeCondition(condition){Object.assign(condition,getNormalizedCondition(condition));}
function _construcTree(ASTs,distributeNot,negate=false){const[firstAST,...tailASTs]=ASTs;if(firstAST.type===1&&firstAST.value==="!"){return _construcTree(tailASTs,distributeNot,!negate);}
const tree={type:firstAST.type===1?"connector":"condition"};if(tree.type==="connector"){tree.value=firstAST.value;if(distributeNot&&negate){tree.value=tree.value==="&"?"|":"&";tree.negate=false;}else{tree.negate=negate;}
tree.children=[];}else{const[pathAST,operatorAST,valueAST]=firstAST.value;tree.path=toValue(pathAST);tree.negate=negate;tree.operator=toValue(operatorAST);tree.value=toValue(valueAST);if(["any","not any"].includes(tree.operator)){try{tree.value=treeFromDomain(formatAST(valueAST));}catch{tree.value=Array.isArray(tree.value)?tree.value:[tree.value];}}
normalizeCondition(tree);}
let remaimingASTs=tailASTs;if(tree.type==="connector"){for(let i=0;i<2;i++){const{tree:child,remaimingASTs:otherASTs}=_construcTree(remaimingASTs,distributeNot,distributeNot&&negate);remaimingASTs=otherASTs;addChild(tree,child);}}
return{tree,remaimingASTs};}
function construcTree(initialASTs,options){if(!initialASTs.length){return connector("&");}
const{tree}=_construcTree(initialASTs,options.distributeNot);return tree;}
function getASTs(tree){const ASTs=[];if(tree.type==="condition"){if(tree.negate){ASTs.push(toAST("!"));}
ASTs.push({type:10,value:[tree.path,tree.operator,tree.value].map(toAST),});return ASTs;}
const length=tree.children.length;if(length&&tree.negate){ASTs.push(toAST("!"));}
for(let i=0;i<length-1;i++){ASTs.push(toAST(tree.value));}
for(const child of tree.children){ASTs.push(...getASTs(child));}
return ASTs;}
function not(ast){if(isNot(ast)){return ast.right;}
if(ast.type===2){return{...ast,value:!ast.value};}
if(ast.type===7&&COMPARATORS.includes(ast.op)){return{...ast,op:TERM_OPERATORS_NEGATION_EXTENDED[ast.op]};}
return{type:6,op:"not",right:isBool(ast)?ast.args[0]:ast};}
function bool(ast){if(isBool(ast)||isNot(ast)||ast.type===2){return ast;}
return{type:8,fn:{type:5,value:"bool"},args:[ast],kwargs:{}};}
function name(value){return{type:5,value};}
function or(left,right){return{type:14,op:"or",left,right};}
function and(left,right){return{type:14,op:"and",left,right};}
function isNot(ast){return ast.type===6&&ast.op==="not";}
function is(oneParamFunc,ast){return(ast.type===8&&ast.fn.type===5&&ast.fn.value===oneParamFunc&&ast.args.length===1);}
function isSet(ast){return ast.type===8&&ast.fn.type===5&&ast.fn.value==="set"&&ast.args.length<=1;}
function isBool(ast){return is("bool",ast);}
function isValidPath(ast,options){const getFieldDef=options.getFieldDef||(()=>null);if(ast.type===5){return getFieldDef(ast.value)!==null;}
return false;}
function isX2Many(ast,options){if(isValidPath(ast,options)){const fieldDef=options.getFieldDef(ast.value);return["many2many","one2many"].includes(fieldDef.type);}
return false;}
function _getConditionFromComparator(ast,options){if(["is","is not"].includes(ast.op)){return null;}
let operator=ast.op;if(operator==="=="){operator="=";}
let left=ast.left;let right=ast.right;if(isValidPath(left,options)==isValidPath(right,options)){return null;}
if(!isValidPath(left,options)){if(operator in EXCHANGE){const temp=left;left=right;right=temp;operator=EXCHANGE[operator];}else{return null;}}
return condition(left.value,operator,toValue(right));}
function isValidPath2(ast,options){if(!ast){return null;}
if([4,10].includes(ast.type)&&ast.value.length===1){return isValidPath(ast.value[0],options);}
return isValidPath(ast,options);}
function _getConditionFromIntersection(ast,options,negate=false){let left=ast.fn.obj.args[0];let right=ast.args[0];if(!left){return condition(negate?1:0,"=",1);}
if(isValidPath2(left,options)==isValidPath2(right,options)){return null;}
if(!isValidPath2(left,options)){const temp=left;left=right;right=temp;}
if([4,10].includes(left.type)&&left.value.length===1){left=left.value[0];}
if(!right){return condition(left.value,negate?"=":"!=",false);}
if(isSet(right)){if(!right.args[0]){right={type:4,value:[]};}
if([4,10].includes(right.args[0].type)){right=right.args[0];}}
if(![4,10].includes(right.type)){return null;}
return condition(left.value,negate?"not in":"in",toValue(right));}
function _leafFromAST(ast,options,negate=false){if(isNot(ast)){return _treeFromAST(ast.right,options,!negate);}
if(ast.type===5&&isValidPath(ast,options)){return condition(ast.value,negate?"=":"!=",false);}
const astValue=toValue(ast);if(["boolean","number","string"].includes(typeof astValue)){return condition(astValue?1:0,"=",1);}
if(ast.type===8&&ast.fn.type===15&&isSet(ast.fn.obj)&&ast.fn.key==="intersection"){const tree=_getConditionFromIntersection(ast,options,negate);if(tree){return tree;}}
if(ast.type===7&&COMPARATORS.includes(ast.op)){if(negate){return _leafFromAST(not(ast),options);}
const tree=_getConditionFromComparator(ast,options);if(tree){return tree;}}
return complexCondition(formatAST(negate?not(ast):ast));}
function _treeFromAST(ast,options,negate=false){if(isNot(ast)){return _treeFromAST(ast.right,options,!negate);}
if(ast.type===14){const tree=connector(ast.op==="and"?"&":"|");if(options.distributeNot&&negate){tree.value=tree.value==="&"?"|":"&";}else{tree.negate=negate;}
const subASTs=[ast.left,ast.right];for(const subAST of subASTs){const child=_treeFromAST(subAST,options,options.distributeNot&&negate);addChild(tree,child);}
return tree;}
if(ast.type===13){const newAST=or(and(ast.condition,ast.ifTrue),and(not(ast.condition),ast.ifFalse));return _treeFromAST(newAST,options,negate);}
return _leafFromAST(ast,options,negate);}
function _expressionFromTree(tree,options,isRoot=false){if(tree.type==="connector"&&tree.value==="|"&&tree.children.length===2){const isSimpleAnd=(tree)=>tree.type==="connector"&&tree.value==="&"&&tree.children.length===2;if(tree.children.every((c)=>isSimpleAnd(c))){const[c1,c2]=tree.children;for(let i=0;i<2;i++){const c1Child=c1.children[i];const str1=_expressionFromTree({...c1Child},options);for(let j=0;j<2;j++){const c2Child=c2.children[j];const str2=_expressionFromTree(c2Child,options);if(str1===`not ${str2}`||`not ${str1}`===str2){const others=[c1.children[1-i],c2.children[1-j]];const str=_expressionFromTree(c1Child,options);const strs=others.map((c)=>_expressionFromTree(c,options));return`${strs[0]} if ${str} else ${strs[1]}`;}}}}}
if(tree.type==="connector"){const connector=tree.value==="&"?"and":"or";const subExpressions=tree.children.map((c)=>_expressionFromTree(c,options));if(!subExpressions.length){return connector==="and"?"1":"0";}
let expression=subExpressions.join(` ${connector} `);if(!isRoot||tree.negate){expression=`( ${expression} )`;}
if(tree.negate){expression=`not ${expression}`;}
return expression;}
if(tree.type==="complex_condition"){return tree.value;}
tree=getNormalizedCondition(tree);const{path,operator,value}=tree;const op=operator==="="?"==":operator;if(typeof op!=="string"||!COMPARATORS.includes(op)){throw new Error("Invalid operator");}
if([0,1].includes(path)){if(operator!=="="||value!==1){return new Error("Invalid condition");}
return formatAST({type:2,value:Boolean(path)});}
const pathAST=toAST(path);if(typeof path=="string"&&isValidPath(name(path),options)){pathAST.type=5;}
if(value===false&&["=","!="].includes(operator)){return formatAST(operator==="="?not(pathAST):pathAST);}
let valueAST=toAST(value);if(["in","not in"].includes(operator)&&!(value instanceof Expression)&&![4,10].includes(valueAST.type)){valueAST={type:4,value:[valueAST]};}
if(pathAST.type===5&&isX2Many(pathAST,options)&&["in","not in"].includes(operator)){const ast={type:8,fn:{type:15,obj:{args:[pathAST],type:8,fn:{type:5,value:"set",},},key:"intersection",},args:[valueAST],};return formatAST(operator==="not in"?not(ast):ast);}
return formatAST({type:7,op,left:pathAST,right:valueAST,});}
function createBetweenOperators(tree){if(["condition","complex_condition"].includes(tree.type)){return tree;}
const processedChildren=tree.children.map(createBetweenOperators);if(tree.value==="|"){return{...tree,children:processedChildren};}
const children=[];for(let i=0;i<processedChildren.length;i++){const child1=processedChildren[i];const child2=processedChildren[i+1];if(child1.type==="condition"&&child2&&child2.type==="condition"&&formatValue(child1.path)===formatValue(child2.path)&&child1.operator===">="&&child2.operator==="<="){children.push(condition(child1.path,"between",normalizeValue([child1.value,child2.value])));i+=1;}else{children.push(child1);}}
if(children.length===1){return{...children[0]};}
return{...tree,children};}
function createWithinOperators(tree,options={}){if(tree.children){return{...tree,children:tree.children.map((child)=>createWithinOperators(child,options)),};}
const fieldType=options.getFieldDef?.(tree.path)?.type;if(tree.operator!=="between"||!["date","datetime"].includes(fieldType)){return tree;}
function getProcessedDelta(val,periodShouldBePositive=true){const delta=getDelta(toAST(val),fieldType);if(delta){const[amount]=delta;if(Number.isInteger(amount)&&((amount<0&&periodShouldBePositive)||(amount>0&&!periodShouldBePositive))){return null;}}
return delta;}
const newTree={...tree};if(isTodayExpr(newTree.value[0],fieldType)){const delta=getProcessedDelta(newTree.value[1]);if(delta){newTree.operator="within";newTree.value=[...delta,fieldType];}}else if(isTodayExpr(newTree.value[1],fieldType)){const delta=getProcessedDelta(newTree.value[0],false);if(delta){newTree.operator="within";newTree.value=[...delta,fieldType];}}
return newTree;}
__exports.removeBetweenOperators=removeBetweenOperators;function removeBetweenOperators(tree){if(tree.type==="complex_condition"){return tree;}
if(tree.type==="condition"){if(tree.operator!=="between"){return tree;}
const{negate,path,value}=tree;return connector("&",[condition(path,">=",value[0]),condition(path,"<=",value[1])],negate);}
const processedChildren=tree.children.map(removeBetweenOperators);if(tree.value==="|"){return{...tree,children:processedChildren};}
const newTree={...tree,children:[]};for(let i=0;i<processedChildren.length;i++){addChild(newTree,processedChildren[i]);}
return newTree;}
__exports.removeWithinOperators=removeWithinOperators;function removeWithinOperators(tree){if(tree.type==="complex_condition"){return tree;}
if(tree.type==="condition"){if(tree.operator!=="within"){return tree;}
const{negate,path,value}=tree;const fieldType=value[2];const expressions=[expression(fieldType==="date"?DATE_TODAY_STRING_EXPRESSION:DATETIME_TODAY_STRING_EXPRESSION),getDeltaExpression(value,fieldType),];const reverse=Number.isInteger(value[0])&&value[0]>0;return condition(path,"between",reverse?Object.values(expressions):Object.values(expressions).reverse(),negate);}
const processedChildren=tree.children.map(removeWithinOperators);return{...tree,children:processedChildren};}
__exports.createVirtualOperators=createVirtualOperators;function createVirtualOperators(tree,options={}){if(tree.type==="condition"){const{path,operator,value}=tree;if(["=","!="].includes(operator)){const fieldDef=options.getFieldDef?.(path)||null;if(fieldDef){if(fieldDef.type==="boolean"){return{...tree,operator:operator==="="?"is":"is_not"};}else if(!["many2one","date","datetime"].includes(fieldDef?.type)&&value===false){return{...tree,operator:operator==="="?"not_set":"set"};}}}
if(operator==="=ilike"){if(value.endsWith?.("%")){return{...tree,operator:"starts_with",value:value.slice(0,-1)};}
if(value.startsWith?.("%")){return{...tree,operator:"ends_with",value:value.slice(1)};}}
return tree;}
if(tree.type==="complex_condition"){return tree;}
const processedChildren=tree.children.map((c)=>createVirtualOperators(c,options));return{...tree,children:processedChildren};}
__exports.removeVirtualOperators=removeVirtualOperators;function removeVirtualOperators(tree){if(tree.type==="condition"){const{operator,value}=tree;if(["is","is_not"].includes(operator)){return{...tree,operator:operator==="is"?"=":"!="};}
if(["set","not_set"].includes(operator)){return{...tree,operator:operator==="set"?"!=":"="};}
if(["starts_with","ends_with"].includes(operator)){return{...tree,value:operator==="starts_with"?`${value}%`:`%${value}`,operator:"=ilike",};}
return tree;}
if(tree.type==="complex_condition"){return tree;}
const processedChildren=tree.children.map((c)=>removeVirtualOperators(c));return{...tree,children:processedChildren};}
function createComplexConditions(tree){if(tree.type==="condition"){if(tree.path instanceof Expression&&tree.operator==="="&&tree.value===1){return complexCondition(String(tree.path));}
return cloneTree(tree);}
if(tree.type==="complex_condition"){return cloneTree(tree);}
return{...tree,children:tree.children.map((child)=>createComplexConditions(child)),};}
function removeComplexConditions(tree){if(tree.type==="condition"){return cloneTree(tree);}
if(tree.type==="complex_condition"){const ast=parseExpr(tree.value);return condition(new Expression(bool(ast)),"=",1);}
return{...tree,children:tree.children.map((child)=>removeComplexConditions(child)),};}
__exports.treeFromExpression=treeFromExpression;function treeFromExpression(expression,options={}){const ast=parseExpr(expression);const tree=_treeFromAST(ast,options);return createVirtualOperators(createWithinOperators(createBetweenOperators(tree),options),options);}
__exports.expressionFromTree=expressionFromTree;function expressionFromTree(tree,options={}){const simplifiedTree=createComplexConditions(removeBetweenOperators(removeWithinOperators(removeVirtualOperators(tree))));return _expressionFromTree(simplifiedTree,options,true);}
__exports.domainFromTree=domainFromTree;function domainFromTree(tree){const simplifiedTree=removeBetweenOperators(removeWithinOperators(removeVirtualOperators(removeComplexConditions(tree))));const domainAST={type:4,value:getASTs(simplifiedTree),};return formatAST(domainAST);}
__exports.treeFromDomain=treeFromDomain;function treeFromDomain(domain,options={}){domain=new Domain(domain);const domainAST=domain.ast;const tree=construcTree(domainAST.value,options);return createVirtualOperators(createWithinOperators(createBetweenOperators(tree),options),options);}
__exports.expressionFromDomain=expressionFromDomain;function expressionFromDomain(domain,options={}){const tree=treeFromDomain(domain,options);return expressionFromTree(tree,options);}
__exports.domainFromExpression=domainFromExpression;function domainFromExpression(expression,options={}){const tree=treeFromExpression(expression,options);return domainFromTree(tree);}
return __exports;});;

/* /web/static/src/core/tree_editor/tree_editor.js */
odoo.define('@web/core/tree_editor/tree_editor',['@web/core/tree_editor/utils','@odoo/owl','@web/core/utils/hooks','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/core/tree_editor/condition_tree','@web/core/tree_editor/tree_editor_value_editors','@web/core/model_field_selector/model_field_selector','@web/core/model_field_selector/utils','@web/core/utils/objects'],function(require){'use strict';let __exports={};const{getResModel,useMakeGetFieldDef,useMakeGetConditionDescription,}=require("@web/core/tree_editor/utils");const{Component,onWillStart,onWillUpdateProps}=require("@odoo/owl");const{useService}=require("@web/core/utils/hooks");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{condition,cloneTree,formatValue,removeVirtualOperators,connector,isTree,}=require("@web/core/tree_editor/condition_tree");const{getDefaultValue,getValueEditorInfo,}=require("@web/core/tree_editor/tree_editor_value_editors");const{ModelFieldSelector}=require("@web/core/model_field_selector/model_field_selector");const{useLoadFieldInfo}=require("@web/core/model_field_selector/utils");const{deepEqual,shallowEqual}=require("@web/core/utils/objects");const TRUE_TREE=condition(1,"=",1);function collectDifferences(tree,otherTree){if(tree.type!==otherTree.type){return[{type:"other"}];}
if(tree.negate!==otherTree.negate){return[{type:"other"}];}
if(tree.type==="condition"){if(formatValue(tree.path)!==formatValue(otherTree.path)){return[{type:"other"}];}
if(formatValue(tree.value)!==formatValue(otherTree.value)){return[{type:"other"}];}
if(formatValue(tree.operator)!==formatValue(otherTree.operator)){if(tree.operator==="!="&&otherTree.operator==="set"){return[{type:"replacement",tree,operator:"set"}];}else if(tree.operator==="="&&otherTree.operator==="not_set"){return[{type:"replacement",tree,operator:"not_set"}];}else{return[{type:"other"}];}}
return[];}
if(tree.value!==otherTree.value){return[{type:"other"}];}
if(tree.type==="complex_condition"){return[];}
if(tree.children.length!==otherTree.children.length){return[{type:"other"}];}
const diffs=[];for(let i=0;i<tree.children.length;i++){const child=tree.children[i];const otherChild=otherTree.children[i];const childDiffs=collectDifferences(child,otherChild);if(childDiffs.some((d)=>d.type!=="replacement")){return[{type:"other"}];}
diffs.push(...childDiffs);}
return diffs;}
function restoreVirtualOperators(tree,otherTree){const diffs=collectDifferences(tree,otherTree);if(diffs.some((d)=>d.type!=="replacement")){return;}
for(const{tree,operator}of diffs){tree.operator=operator;}}
const TreeEditor=__exports.TreeEditor=class TreeEditor extends Component{static template="web.TreeEditor";static components={Dropdown,DropdownItem,ModelFieldSelector,TreeEditor,};static props={tree:Object,resModel:String,update:Function,getDefaultCondition:Function,getPathEditorInfo:Function,getOperatorEditorInfo:Function,getDefaultOperator:Function,readonly:{type:Boolean,optional:true},slots:{type:Object,optional:true},isDebugMode:{type:Boolean,optional:true},defaultConnector:{type:[{value:"&"},{value:"|"}],optional:true},isSubTree:{type:Boolean,optional:true},};static defaultProps={defaultConnector:"&",readonly:false,isSubTree:false,};setup(){this.isTree=isTree;this.fieldService=useService("field");this.nameService=useService("name");this.loadFieldInfo=useLoadFieldInfo(this.fieldService);this.makeGetFieldDef=useMakeGetFieldDef(this.fieldService);this.makeGetConditionDescription=useMakeGetConditionDescription(this.fieldService,this.nameService);onWillStart(()=>this.onPropsUpdated(this.props));onWillUpdateProps((nextProps)=>this.onPropsUpdated(nextProps));}
async onPropsUpdated(props){this.tree=cloneTree(props.tree);if(shallowEqual(this.tree,TRUE_TREE)){this.tree=connector(props.defaultConnector);}else if(this.tree.type!=="connector"){this.tree=connector(props.defaultConnector,[this.tree]);}
if(this.previousTree){restoreVirtualOperators(this.tree,this.previousTree);this.previousTree=null;}
const[fieldDefs,getFieldDef]=await Promise.all([this.fieldService.loadFields(props.resModel),this.makeGetFieldDef(props.resModel,this.tree),]);this.getFieldDef=getFieldDef;this.defaultCondition=props.getDefaultCondition(fieldDefs);if(props.readonly){this.getConditionDescription=await this.makeGetConditionDescription(props.resModel,this.tree,this.getFieldDef);}}
get className(){return`${this.props.readonly ? "o_read_mode" : "o_edit_mode"}`;}
get isDebugMode(){return this.props.isDebugMode!==undefined?this.props.isDebugMode:!!this.env.debug;}
notifyChanges(){this.previousTree=cloneTree(this.tree);this.props.update(this.tree);}
updateConnector(node,value){node.value=value;node.negate=false;this.notifyChanges();}
updateComplexCondition(node,value){node.value=value;this.notifyChanges();}
createNewLeaf(){return cloneTree(this.defaultCondition);}
createNewBranch(value){return connector(value,[this.createNewLeaf(),this.createNewLeaf()]);}
insertRootLeaf(parent){parent.children.push(this.createNewLeaf());this.notifyChanges();}
insertLeaf(parent,node){const newNode=node.type!=="connector"?cloneTree(node):this.createNewLeaf();const index=parent.children.indexOf(node);parent.children.splice(index+1,0,newNode);this.notifyChanges();}
insertBranch(parent,node){const nextConnector=parent.value==="&"?"|":"&";const newNode=this.createNewBranch(nextConnector);const index=parent.children.indexOf(node);parent.children.splice(index+1,0,newNode);this.notifyChanges();}
delete(parent,node){const index=parent.children.indexOf(node);parent.children.splice(index,1);this.notifyChanges();}
getResModel(node){const fieldDef=this.getFieldDef(node.path);const resModel=getResModel(fieldDef);return resModel;}
getPathEditorInfo(){return this.props.getPathEditorInfo(this.props.resModel,this.defaultCondition);}
getOperatorEditorInfo(node){const fieldDef=this.getFieldDef(node.path);return this.props.getOperatorEditorInfo(fieldDef);}
getValueEditorInfo(node){const fieldDef=this.getFieldDef(node.path);return getValueEditorInfo(fieldDef,node.operator);}
async updatePath(node,path){const{fieldDef}=await this.loadFieldInfo(this.props.resModel,path);node.path=path;node.negate=false;node.operator=this.props.getDefaultOperator(fieldDef);node.value=getDefaultValue(fieldDef,node.operator);this.notifyChanges();}
updateLeafOperator(node,operator,negate){const previousNode=cloneTree(node);const fieldDef=this.getFieldDef(node.path);node.negate=negate;node.operator=operator;node.value=getDefaultValue(fieldDef,operator,node.value);if(deepEqual(removeVirtualOperators(node),removeVirtualOperators(previousNode))){this.render();}
this.notifyChanges();}
updateLeafValue(node,value){node.value=value;this.notifyChanges();}
highlightNode(target){const nodeEl=target.closest(".o_tree_editor_node");nodeEl.classList.toggle("o_hovered_button");}}
return __exports;});;

/* /web/static/src/core/tree_editor/tree_editor_autocomplete.js */
odoo.define('@web/core/tree_editor/tree_editor_autocomplete',['@web/core/record_selectors/multi_record_selector','@web/core/l10n/translation','@web/core/py_js/py_utils','@web/core/tree_editor/condition_tree','@web/core/record_selectors/record_selector'],function(require){'use strict';let __exports={};const{MultiRecordSelector}=require("@web/core/record_selectors/multi_record_selector");const{_t}=require("@web/core/l10n/translation");const{formatAST,toPyValue}=require("@web/core/py_js/py_utils");const{Expression}=require("@web/core/tree_editor/condition_tree");const{RecordSelector}=require("@web/core/record_selectors/record_selector");const isId=__exports.isId=(val)=>Number.isInteger(val)&&val>=1;const getFormat=__exports.getFormat=(val,displayNames)=>{let text;let colorIndex;if(isId(val)){text=typeof displayNames[val]==="string"?displayNames[val]:_t("Inaccessible/missing record ID: %s",val);colorIndex=typeof displayNames[val]==="string"?0:2;}else{text=val instanceof Expression?String(val):_t("Invalid record ID: %s",formatAST(toPyValue(val)));colorIndex=val instanceof Expression?2:1;}
return{text,colorIndex};};const DomainSelectorAutocomplete=__exports.DomainSelectorAutocomplete=class DomainSelectorAutocomplete extends MultiRecordSelector{static props={...MultiRecordSelector.props,resIds:true,};getIds(props=this.props){return props.resIds.filter((val)=>isId(val));}
getTags(props,displayNames){return props.resIds.map((val,index)=>{const{text,colorIndex}=getFormat(val,displayNames);return{text,colorIndex,onDelete:()=>{this.props.update([...this.props.resIds.slice(0,index),...this.props.resIds.slice(index+1),]);},};});}}
const DomainSelectorSingleAutocomplete=__exports.DomainSelectorSingleAutocomplete=class DomainSelectorSingleAutocomplete extends RecordSelector{static props={...RecordSelector.props,resId:true,};getDisplayName(props=this.props,displayNames){const{resId}=props;if(resId===false){return"";}
const{text}=getFormat(resId,displayNames);return text;}
getIds(props=this.props){if(isId(props.resId)){return[props.resId];}
return[];}}
return __exports;});;

/* /web/static/src/core/tree_editor/tree_editor_components.js */
odoo.define('@web/core/tree_editor/tree_editor_components',['@odoo/owl','@web/core/tags_list/tags_list','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{TagsList}=require("@web/core/tags_list/tags_list");const{_t}=require("@web/core/l10n/translation");const Input=__exports.Input=class Input extends Component{static props=["value","update","startEmpty?"];static template="web.TreeEditor.Input";}
const Select=__exports.Select=class Select extends Component{static props=["value","update","options","addBlankOption?"];static template="web.TreeEditor.Select";deserialize(value){return JSON.parse(value);}
serialize(value){return JSON.stringify(value);}}
const Range=__exports.Range=class Range extends Component{static props=["value","update","editorInfo"];static template="web.TreeEditor.Range";update(index,newValue){const result=[...this.props.value];result[index]=newValue;return this.props.update(result);}}
const Within=__exports.Within=class Within extends Component{static props=["value","update","amountEditorInfo","optionEditorInfo"];static template="web.TreeEditor.Within";static components={Input,Select};static options=[["days",_t("days")],["weeks",_t("weeks")],["months",_t("months")],["years",_t("years")],];update(index,newValue){const result=[...this.props.value];result[index]=newValue;return this.props.update(result);}}
const List=__exports.List=class List extends Component{static components={TagsList};static props=["value","update","editorInfo"];static template="web.TreeEditor.List";get tags(){const{isSupported,stringify}=this.props.editorInfo;return this.props.value.map((val,index)=>({text:stringify(val),colorIndex:isSupported(val)?0:2,onDelete:()=>{this.props.update([...this.props.value.slice(0,index),...this.props.value.slice(index+1),]);},}));}
update(newValue){return this.props.update([...this.props.value,newValue]);}}
return __exports;});;

/* /web/static/src/core/tree_editor/tree_editor_operator_editor.js */
odoo.define('@web/core/tree_editor/tree_editor_operator_editor',['@web/core/l10n/translation','@web/core/tree_editor/condition_tree','@web/core/utils/strings','@web/core/py_js/py','@web/core/tree_editor/tree_editor_components'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{formatValue,TERM_OPERATORS_NEGATION,toValue,}=require("@web/core/tree_editor/condition_tree");const{sprintf}=require("@web/core/utils/strings");const{parseExpr}=require("@web/core/py_js/py");const{Select}=require("@web/core/tree_editor/tree_editor_components");const OPERATOR_DESCRIPTIONS={"=":"=","!=":"!=","<=":"<=","<":"<",">":">",">=":">=","=?":"=?","=like":_t("=like"),"=ilike":_t("=ilike"),like:_t("like"),"not like":_t("not like"),ilike:_t("contains"),"not ilike":_t("does not contain"),in:_t("is in"),"not in":_t("is not in"),child_of:_t("child of"),parent_of:_t("parent of"),is:_t("is"),is_not:_t("is not"),set:_t("is set"),not_set:_t("is not set"),starts_with:_t("starts with"),ends_with:_t("ends with"),between:_t("is between"),within:_t("is within"),any:(fieldDefType)=>{switch(fieldDefType){case"many2one":return _t("matches");default:return _t("match");}},"not any":(fieldDefType)=>{switch(fieldDefType){case"many2one":return _t("matches none of");default:return _t("match none of");}},};function toKey(operator,negate=false){if(!negate&&typeof operator==="string"&&operator in OPERATOR_DESCRIPTIONS){return operator;}
return JSON.stringify([formatValue(operator),negate]);}
function toOperator(key){if(!key.includes("[")){return[key,false];}
const[expr,negate]=JSON.parse(key);return[toValue(parseExpr(expr)),negate];}
function getOperatorDescription(operator,fieldDefType){const description=OPERATOR_DESCRIPTIONS[operator];if(typeof description==="function"&&description.constructor?.name!=="LazyTranslatedString"){return description(fieldDefType);}
return description;}
__exports.getOperatorLabel=getOperatorLabel;function getOperatorLabel(operator,fieldDefType,negate=false){let label;if(typeof operator==="string"&&operator in OPERATOR_DESCRIPTIONS){if(negate&&operator in TERM_OPERATORS_NEGATION){return getOperatorDescription(TERM_OPERATORS_NEGATION[operator],fieldDefType);}
label=getOperatorDescription(operator,fieldDefType);}else{label=formatValue(operator);}
if(negate){return sprintf(`not %s`,label);}
return label;}
function getOperatorInfo(operator,fieldDefType,negate=false){const key=toKey(operator,negate);const label=getOperatorLabel(operator,fieldDefType,negate);return[key,label];}
__exports.getOperatorEditorInfo=getOperatorEditorInfo;function getOperatorEditorInfo(operators,fieldDef){const defaultOperator=operators[0];const operatorsInfo=operators.map((operator)=>getOperatorInfo(operator,fieldDef?.type));return{component:Select,extractProps:({update,value:[operator,negate]})=>{const[operatorKey,operatorLabel]=getOperatorInfo(operator,fieldDef?.type,negate);const options=[...operatorsInfo];if(!options.some(([key])=>key===operatorKey)){options.push([operatorKey,operatorLabel]);}
return{value:operatorKey,update:(operatorKey)=>update(...toOperator(operatorKey)),options,};},defaultValue:()=>defaultOperator,isSupported:([operator])=>typeof operator==="string"&&operator in OPERATOR_DESCRIPTIONS,message:_t("Operator not supported"),stringify:([operator,negate])=>getOperatorLabel(operator,negate),};}
return __exports;});;

/* /web/static/src/core/tree_editor/tree_editor_value_editors.js */
odoo.define('@web/core/tree_editor/tree_editor_value_editors',['@web/core/l10n/dates','@web/core/l10n/translation','@web/core/registry','@web/core/datetime/datetime_input','@web/core/tree_editor/tree_editor_autocomplete','@web/core/utils/arrays','@web/core/tree_editor/tree_editor_components','@web/core/tree_editor/condition_tree','@web/core/tree_editor/utils','@web/core/domain'],function(require){'use strict';let __exports={};const{deserializeDate,deserializeDateTime,serializeDate,serializeDateTime,}=require("@web/core/l10n/dates");const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{DateTimeInput}=require("@web/core/datetime/datetime_input");const{DomainSelectorAutocomplete,DomainSelectorSingleAutocomplete,}=require("@web/core/tree_editor/tree_editor_autocomplete");const{unique}=require("@web/core/utils/arrays");const{Input,Select,List,Range,Within}=require("@web/core/tree_editor/tree_editor_components");const{connector,formatValue,isTree}=require("@web/core/tree_editor/condition_tree");const{getResModel,disambiguate,isId}=require("@web/core/tree_editor/utils");const{Domain}=require("@web/core/domain");const{DateTime}=luxon;const formatters=registry.category("formatters");const parsers=registry.category("parsers");function parseValue(fieldType,value){const parser=parsers.get(fieldType,(value)=>value);try{return parser(value);}catch{return value;}}
function isParsable(fieldType,value){const parser=parsers.get(fieldType,(value)=>value);try{parser(value);}catch{return false;}
return true;}
function genericSerializeDate(type,value){return type==="date"?serializeDate(value):serializeDateTime(value);}
function genericDeserializeDate(type,value){return type==="date"?deserializeDate(value):deserializeDateTime(value);}
const STRING_EDITOR={component:Input,extractProps:({value,update})=>({value,update}),isSupported:(value)=>typeof value==="string",defaultValue:()=>"",};function makeSelectEditor(options,params={}){const getOption=(value)=>options.find(([v])=>v===value)||null;return{component:Select,extractProps:({value,update})=>({value,update,options,addBlankOption:params.addBlankOption,}),isSupported:(value)=>Boolean(getOption(value)),defaultValue:()=>options[0]?.[0]??false,stringify:(value,disambiguate)=>{const option=getOption(value);return option?option[1]:disambiguate?formatValue(value):String(value);},message:_t("Value not in selection"),};}
function getDomain(fieldDef){if(fieldDef.type==="many2one"){return[];}
try{return new Domain(fieldDef.domain||[]).toList();}catch{return[];}}
function makeAutoCompleteEditor(fieldDef){return{component:DomainSelectorAutocomplete,extractProps:({value,update})=>{return{resModel:getResModel(fieldDef),fieldString:fieldDef.string,domain:getDomain(fieldDef),update:(value)=>update(unique(value)),resIds:unique(value),};},isSupported:(value)=>Array.isArray(value),defaultValue:()=>[],};}
function getPartialValueEditorInfo(fieldDef,operator,params={}){switch(operator){case"set":case"not_set":return{component:null,extractProps:null,isSupported:(value)=>value===false,defaultValue:()=>false,};case"=like":case"=ilike":case"like":case"not like":case"ilike":case"not ilike":return STRING_EDITOR;case"between":{const editorInfo=getValueEditorInfo(fieldDef,"=");return{component:Range,extractProps:({value,update})=>({value,update,editorInfo,}),isSupported:(value)=>Array.isArray(value)&&value.length===2,defaultValue:()=>{const{defaultValue}=editorInfo;return[defaultValue(),defaultValue()];},};}
case"within":{return{component:Within,extractProps:({value,update})=>({value,update,amountEditorInfo:getValueEditorInfo({type:"integer"},"="),optionEditorInfo:makeSelectEditor(Within.options),}),isSupported:(value)=>Array.isArray(value)&&value.length===3&&typeof value[1]==="string"&&value[2]===fieldDef.type,defaultValue:()=>{return[-1,"months",fieldDef.type];},};}
case"in":case"not in":{switch(fieldDef.type){case"tags":return STRING_EDITOR;case"many2one":case"many2many":case"one2many":return makeAutoCompleteEditor(fieldDef);default:{const editorInfo=getValueEditorInfo(fieldDef,"=",{addBlankOption:true,startEmpty:true,});return{component:List,extractProps:({value,update})=>{if(!disambiguate(value)){const{stringify}=editorInfo;editorInfo.stringify=(val)=>stringify(val,false);}
return{value,update,editorInfo,};},isSupported:(value)=>Array.isArray(value),defaultValue:()=>[],};}}}
case"any":case"not any":{switch(fieldDef.type){case"many2one":case"many2many":case"one2many":{return{component:null,extractProps:null,isSupported:isTree,defaultValue:()=>connector("&"),};}}}}
const{type}=fieldDef;switch(type){case"integer":case"float":case"monetary":{const formatType=type==="integer"?"integer":"float";return{component:Input,extractProps:({value,update})=>({value:String(value),update:(value)=>update(parseValue(formatType,value)),startEmpty:params.startEmpty,}),isSupported:()=>true,defaultValue:()=>1,shouldResetValue:(value)=>parseValue(formatType,value)===value,};}
case"date":case"datetime":return{component:DateTimeInput,extractProps:({value,update})=>({value:params.startEmpty||value===false?false:genericDeserializeDate(type,value),type,onApply:(value)=>{if(!params.startEmpty||value){update(genericSerializeDate(type,value||DateTime.local()));}},}),isSupported:(value)=>value===false||(typeof value==="string"&&isParsable(type,value)),defaultValue:()=>genericSerializeDate(type,DateTime.local()),stringify:(value)=>{if(value===false){return _t("False");}
if(typeof value==="string"&&isParsable(type,value)){const formatter=formatters.get(type,formatValue);return formatter(genericDeserializeDate(type,value));}
return formatValue(value);},message:_t("Not a valid %s",type),};case"char":case"html":case"text":return STRING_EDITOR;case"boolean":{if(["is","is_not"].includes(operator)){const options=[[true,_t("set")],[false,_t("not set")],];return makeSelectEditor(options,params);}
const options=[[true,_t("True")],[false,_t("False")],];return makeSelectEditor(options,params);}
case"many2one":{if(["=","!="].includes(operator)){return{component:DomainSelectorSingleAutocomplete,extractProps:({value,update})=>({resModel:getResModel(fieldDef),fieldString:fieldDef.string,update,resId:value,}),isSupported:()=>true,defaultValue:()=>false,shouldResetValue:(value)=>value!==false&&!isId(value),};}else if(["parent_of","child_of"].includes(operator)){return makeAutoCompleteEditor(fieldDef);}
break;}
case"many2many":case"one2many":if(["=","!="].includes(operator)){return makeAutoCompleteEditor(fieldDef);}
break;case"selection":{const options=fieldDef.selection||[];return makeSelectEditor(options,params);}
case undefined:{const options=[[1,"1"]];return makeSelectEditor(options,params);}}
return{component:Input,extractProps:({value,update})=>({value:String(value),update,}),isSupported:()=>true,defaultValue:()=>"",};}
__exports.getValueEditorInfo=getValueEditorInfo;function getValueEditorInfo(fieldDef,operator,options={}){const info=getPartialValueEditorInfo(fieldDef||{},operator,options);return{extractProps:({value,update})=>({value,update}),message:_t("Value not supported"),stringify:(val,disambiguate=true)=>{if(disambiguate){return formatValue(val);}
return String(val);},...info,};}
__exports.getDefaultValue=getDefaultValue;function getDefaultValue(fieldDef,operator,value=null){const{isSupported,shouldResetValue,defaultValue}=getValueEditorInfo(fieldDef,operator);if(value===null||!isSupported(value)||shouldResetValue?.(value)){return defaultValue();}
return value;}
return __exports;});;

/* /web/static/src/core/tree_editor/utils.js */
odoo.define('@web/core/tree_editor/utils',['@web/core/utils/arrays','@web/core/tree_editor/tree_editor_operator_editor','@web/core/tree_editor/condition_tree','@web/core/utils/hooks','@web/core/l10n/translation','@web/core/l10n/dates','@web/core/model_field_selector/utils','@web/core/tree_editor/tree_editor_components'],function(require){'use strict';let __exports={};const{unique,zip}=require("@web/core/utils/arrays");const{getOperatorLabel}=require("@web/core/tree_editor/tree_editor_operator_editor");const{Expression,condition,createVirtualOperators,normalizeValue,isTree,}=require("@web/core/tree_editor/condition_tree");const{useService}=require("@web/core/utils/hooks");const{_t}=require("@web/core/l10n/translation");const{deserializeDate,deserializeDateTime,formatDate,formatDateTime,}=require("@web/core/l10n/dates");const{useLoadFieldInfo,useLoadPathDescription}=require("@web/core/model_field_selector/utils");const{Within}=require("@web/core/tree_editor/tree_editor_components");function formatValue(val,disambiguate,fieldDef,displayNames){if(val instanceof Expression){return val.toString();}
if(displayNames&&isId(val)){if(typeof displayNames[val]==="string"){val=displayNames[val];}else{return _t("Inaccessible/missing record ID: %s",val);}}
if(fieldDef?.type==="selection"){const[,label]=(fieldDef.selection||[]).find(([v])=>v===val)||[];if(label!==undefined){val=label;}}
if(typeof val==="string"){if(fieldDef?.type==="datetime"){return formatDateTime(deserializeDateTime(val));}
if(fieldDef?.type==="date"){return formatDate(deserializeDate(val));}}
if(disambiguate&&typeof val==="string"){return JSON.stringify(val);}
return val;}
__exports.isId=isId;function isId(value){return Number.isInteger(value)&&value>=1;}
__exports.disambiguate=disambiguate;function disambiguate(value,displayNames){if(!Array.isArray(value)){return value==="";}
let hasSomeString=false;let hasSomethingElse=false;for(const val of value){if(val===""){return true;}
if(typeof val==="string"||(displayNames&&isId(val))){hasSomeString=true;}else{hasSomethingElse=true;}}
return hasSomeString&&hasSomethingElse;}
__exports.useMakeGetFieldDef=useMakeGetFieldDef;function useMakeGetFieldDef(fieldService){fieldService||=useService("field");const loadFieldInfo=useLoadFieldInfo(fieldService);return async(resModel,tree,additionalsPath=[])=>{const pathsInTree=getPathsInTree(tree);const paths=new Set([...pathsInTree,...additionalsPath]);const promises=[];const fieldDefs={};for(const path of paths){if(typeof path==="string"){promises.push(loadFieldInfo(resModel,path).then(({fieldDef})=>{fieldDefs[path]=fieldDef;}));}}
await Promise.all(promises);return(path)=>{if(typeof path==="string"){return fieldDefs[path];}
return null;};};}
function useGetTreePathDescription(fieldService){fieldService||=useService("field");const loadPathDescription=useLoadPathDescription(fieldService);return async(resModel,tree)=>{const paths=getPathsInTree(tree);const promises=[];const pathDescriptions=new Map();for(const path of paths){promises.push(loadPathDescription(resModel,path).then(({displayNames})=>{pathDescriptions.set(path,displayNames.join(" \u2794 "));}));}
await Promise.all(promises);return(path)=>pathDescriptions.get(path);};}
async function getDisplayNames(tree,getFieldDef,nameService){const resIdsByModel=extractIdsFromTree(tree,getFieldDef);const proms=[];const resModels=[];for(const[resModel,resIds]of Object.entries(resIdsByModel)){resModels.push(resModel);proms.push(nameService.loadDisplayNames(resModel,resIds));}
return Object.fromEntries(zip(resModels,await Promise.all(proms)));}
__exports.useMakeGetConditionDescription=useMakeGetConditionDescription;function useMakeGetConditionDescription(fieldService,nameService){const makeGetPathDescriptions=useGetTreePathDescription(fieldService);return async(resModel,tree,getFieldDef)=>{tree=simplifyTree(tree);const[displayNames,getPathDescription]=await Promise.all([getDisplayNames(tree,getFieldDef,nameService),makeGetPathDescriptions(resModel,tree),]);return(node)=>_getConditionDescription(node,getFieldDef,getPathDescription,displayNames);};}
function _getConditionDescription(node,getFieldDef,getPathDescription,displayNames){const nodeWithVirtualOperators=createVirtualOperators(node,{getFieldDef});const{operator,negate,value,path}=nodeWithVirtualOperators;const fieldDef=getFieldDef(path);const operatorLabel=getOperatorLabel(operator,fieldDef?.type,negate);const pathDescription=getPathDescription(path);const description={pathDescription,operatorDescription:operatorLabel,valueDescription:null,};if(isTree(node.value)){return description;}
if(["set","not_set"].includes(operator)){return description;}
if(["is","is_not"].includes(operator)){description.valueDescription={values:[value?_t("set"):_t("not set")],join:"",addParenthesis:false,};return description;}
const coModeldisplayNames=displayNames[getResModel(fieldDef)];const dis=disambiguate(value,coModeldisplayNames);const values=operator=="within"?[value[0],Within.options.find((option)=>option[0]===value[1])[1]]:(Array.isArray(value)?value:[value]).slice(0,21).map((val,index)=>index<20?formatValue(val,dis,fieldDef,coModeldisplayNames):"...");let join;let addParenthesis=Array.isArray(value);switch(operator){case"between":join=_t("and");addParenthesis=false;break;case"within":join=" ";addParenthesis=false;break;case"in":case"not in":join=",";break;default:join=_t("or");}
description.valueDescription={values,join,addParenthesis};return description;}
__exports.useGetTreeDescription=useGetTreeDescription;function useGetTreeDescription(fieldService,nameService){fieldService||=useService("field");nameService||=useService("name");const makeGetFieldDef=useMakeGetFieldDef(fieldService);const makeGetConditionDescription=useMakeGetConditionDescription(fieldService,nameService);return async(resModel,tree)=>{async function getTreeDescription(resModel,tree,isSubExpression=false){tree=simplifyTree(tree);if(tree.type==="connector"){const childDescriptions=tree.children.map((node)=>getTreeDescription(resModel,node,true));const separator=tree.value==="&"?_t("and"):_t("or");let description=await Promise.all(childDescriptions);description=description.join(` ${separator} `);if(isSubExpression||tree.negate){description=`( ${description} )`;}
if(tree.negate){description=`! ${description}`;}
return description;}
const getFieldDef=await makeGetFieldDef(resModel,tree);const getConditionDescription=await makeGetConditionDescription(resModel,tree,getFieldDef);const{pathDescription,operatorDescription,valueDescription}=getConditionDescription(tree);const stringDescription=[pathDescription,operatorDescription];if(valueDescription){const{values,join,addParenthesis}=valueDescription;const jointedValues=values.join(` ${join} `);stringDescription.push(addParenthesis?`( ${jointedValues} )`:jointedValues);}else if(isTree(tree.value)){const _fieldDef=getFieldDef(tree.path);const _resModel=getResModel(_fieldDef);const _tree=tree.value;const description=await getTreeDescription(_resModel,_tree);stringDescription.push(`( ${description} )`);}
return stringDescription.join(" ");}
return getTreeDescription(resModel,tree);};}
__exports.getResModel=getResModel;function getResModel(fieldDef){if(fieldDef){return fieldDef.is_property?fieldDef.comodel:fieldDef.relation;}
return null;}
function extractIdsFromTree(tree,getFieldDef){const idsByModel=_extractIdsRecursive(tree,getFieldDef,{});for(const resModel in idsByModel){idsByModel[resModel]=unique(idsByModel[resModel]);}
return idsByModel;}
function _extractIdsRecursive(tree,getFieldDef,idsByModel){if(tree.type==="condition"){const fieldDef=getFieldDef(tree.path);if(["many2one","many2many","one2many"].includes(fieldDef?.type)){const value=tree.value;const values=Array.isArray(value)?value:[value];const ids=values.filter((val)=>isId(val));const resModel=getResModel(fieldDef);if(ids.length){if(!idsByModel[resModel]){idsByModel[resModel]=[];}
idsByModel[resModel].push(...ids);}}}
if(tree.type==="connector"){for(const child of tree.children){_extractIdsRecursive(child,getFieldDef,idsByModel);}}
return idsByModel;}
__exports.getPathsInTree=getPathsInTree;function getPathsInTree(tree){const paths=[];if(tree.type==="condition"){paths.push(tree.path);}
if(tree.type==="connector"&&tree.children){for(const child of tree.children){paths.push(...getPathsInTree(child));}}
return unique(paths);}
const SPECIAL_FIELDS=["country_id","user_id","partner_id","stage_id","id"];__exports.getDefaultPath=getDefaultPath;function getDefaultPath(fieldDefs){for(const name of SPECIAL_FIELDS){const fieldDef=fieldDefs[name];if(fieldDef){return fieldDef.name;}}
const name=Object.keys(fieldDefs)[0];if(name){return name;}
throw new Error(`No field found`);}
function simplifyTree(tree){if(tree.type==="condition"){return tree;}
const processedChildren=tree.children.map(simplifyTree);if(tree.value==="&"){return{...tree,children:processedChildren};}
const children=[];const childrenByPath={};for(const child of processedChildren){if(child.type==="connector"||typeof child.path!=="string"||!["=","in"].includes(child.operator)){children.push(child);}else{if(!childrenByPath[child.path]){childrenByPath[child.path]=[];}
childrenByPath[child.path].push(child);}}
for(const path in childrenByPath){if(childrenByPath[path].length===1){children.push(childrenByPath[path][0]);continue;}
const value=[];for(const child of childrenByPath[path]){if(child.operator==="="){value.push(child.value);}else{value.push(...child.value);}}
children.push(condition(path,"in",normalizeValue(value)));}
if(children.length===1){return{...children[0]};}
return{...tree,children};}
return __exports;});;

/* /web/static/src/core/ui/block_ui.js */
odoo.define('@web/core/ui/block_ui',['@web/core/l10n/translation','@web/core/browser/browser','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{browser}=require("@web/core/browser/browser");const{EventBus,Component,useState,xml}=require("@odoo/owl");const BlockUI=__exports.BlockUI=class BlockUI extends Component{static props={bus:EventBus,};static template=xml`
        <t t-if="state.blockState === BLOCK_STATES.UNBLOCKED">
            <div/>
        </t>
        <t t-else="">
            <t t-set="visiblyBlocked" t-value="state.blockState === BLOCK_STATES.VISIBLY_BLOCKED"/>
            <div class="o_blockUI fixed-top d-flex justify-content-center align-items-center flex-column vh-100"
                 t-att-class="visiblyBlocked ? '' : 'o_blockUI_invisible'">
                <t t-if="visiblyBlocked">
                    <div class="o_spinner mb-4">
                        <img src="/web/static/img/spin.svg" alt="Loading..."/>
                    </div>
                    <div class="o_message text-center px-4">
                        <t t-esc="state.line1"/><br/>
                        <t t-esc="state.line2"/>
                    </div>
                </t>
            </div>
        </t>
    `;setup(){this.messagesByDuration=[{time:20,l1:_t("Loading...")},{time:40,l1:_t("Still loading...")},{time:60,l1:_t("Still loading..."),l2:_t("Please be patient."),},{time:180,l1:_t("Don't leave yet,"),l2:_t("it's still loading..."),},{time:120,l1:_t("You may not believe it,"),l2:_t("but the application is actually loading..."),},{time:3180,l1:_t("Take a minute to get a coffee,"),l2:_t("because it's loading..."),},{time:null,l1:_t("Maybe you should consider reloading the application by pressing F5..."),},];this.BLOCK_STATES={UNBLOCKED:0,BLOCKED:1,VISIBLY_BLOCKED:2};this.state=useState({blockState:this.BLOCK_STATES.UNBLOCKED,line1:"",line2:"",});this.props.bus.addEventListener("BLOCK",this.block.bind(this));this.props.bus.addEventListener("UNBLOCK",this.unblock.bind(this));}
replaceMessage(index){const message=this.messagesByDuration[index];this.state.line1=message.l1;this.state.line2=message.l2||"";if(message.time!==null){this.msgTimer=browser.setTimeout(()=>{this.replaceMessage(index+1);},message.time*1000);}}
block(ev){const showBlockedUI=()=>(this.state.blockState=this.BLOCK_STATES.VISIBLY_BLOCKED);const delay=ev.detail?.delay;if(delay){this.state.blockState=this.BLOCK_STATES.BLOCKED;this.showBlockedUITimer=setTimeout(showBlockedUI,delay);}else{showBlockedUI();}
if(ev.detail?.message){this.state.line1=ev.detail.message;}else{this.replaceMessage(0);}}
unblock(){this.state.blockState=this.BLOCK_STATES.UNBLOCKED;clearTimeout(this.showBlockedUITimer);clearTimeout(this.msgTimer);this.state.line1="";this.state.line2="";}}
return __exports;});;

/* /web/static/src/core/ui/ui_service.js */
odoo.define('@web/core/ui/ui_service',['@web/core/utils/hooks','@web/core/registry','@web/core/utils/timing','@web/core/ui/block_ui','@web/core/browser/browser','@web/core/utils/ui','@web/core/hotkeys/hotkey_service','@odoo/owl'],function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{registry}=require("@web/core/registry");const{throttleForAnimation}=require("@web/core/utils/timing");const{BlockUI}=require("@web/core/ui/block_ui");const{browser}=require("@web/core/browser/browser");const{getTabableElements}=require("@web/core/utils/ui");const{getActiveHotkey}=require("@web/core/hotkeys/hotkey_service");const{EventBus,reactive,useEffect,useRef}=require("@odoo/owl");const SIZES=__exports.SIZES={XS:0,VSM:1,SM:2,MD:3,LG:4,XL:5,XXL:6};function getFirstAndLastTabableElements(el){const tabableEls=getTabableElements(el);return[tabableEls[0],tabableEls[tabableEls.length-1]];}
__exports.useActiveElement=useActiveElement;function useActiveElement(refName){if(!refName){throw new Error("refName not given to useActiveElement");}
const uiService=useService("ui");const ref=useRef(refName);function trapFocus(e){const hotkey=getActiveHotkey(e);if(!["tab","shift+tab"].includes(hotkey)){return;}
const el=e.currentTarget;const[firstTabableEl,lastTabableEl]=getFirstAndLastTabableElements(el);switch(hotkey){case"tab":if(document.activeElement===lastTabableEl){firstTabableEl.focus();e.preventDefault();e.stopPropagation();}
break;case"shift+tab":if(document.activeElement===firstTabableEl){lastTabableEl.focus();e.preventDefault();e.stopPropagation();}
break;}}
useEffect((el)=>{if(el){const[firstTabableEl]=getFirstAndLastTabableElements(el);if(!firstTabableEl){return;}
const oldActiveElement=document.activeElement;uiService.activateElement(el);el.addEventListener("keydown",trapFocus);if(!el.contains(document.activeElement)){firstTabableEl.focus();}
return async()=>{await Promise.resolve();uiService.deactivateElement(el);el.removeEventListener("keydown",trapFocus);if(el.contains(document.activeElement)||document.activeElement===document.body){oldActiveElement.focus();}};}},()=>[ref.el]);}
const MEDIAS_BREAKPOINTS=__exports.MEDIAS_BREAKPOINTS=[{maxWidth:474},{minWidth:475,maxWidth:575},{minWidth:576,maxWidth:767},{minWidth:768,maxWidth:991},{minWidth:992,maxWidth:1199},{minWidth:1200,maxWidth:1533},{minWidth:1534},];__exports.getMediaQueryLists=getMediaQueryLists;function getMediaQueryLists(){return MEDIAS_BREAKPOINTS.map(({minWidth,maxWidth})=>{if(!maxWidth){return window.matchMedia(`(min-width: ${minWidth}px)`);}
if(!minWidth){return window.matchMedia(`(max-width: ${maxWidth}px)`);}
return window.matchMedia(`(min-width: ${minWidth}px) and (max-width: ${maxWidth}px)`);});}
const MEDIAS=getMediaQueryLists();const utils=__exports.utils={getSize(){return MEDIAS.findIndex((media)=>media.matches);},isSmall(ui={}){return(ui.size||utils.getSize())<=SIZES.SM;},};const bus=new EventBus();__exports.listenSizeChange=listenSizeChange;function listenSizeChange(callback){bus.addEventListener("resize",callback);return()=>bus.removeEventListener("resize",callback);}
const uiService=__exports.uiService={start(env){registry.category("main_components").add("BlockUI",{Component:BlockUI,props:{bus}});let blockCount=0;function block(data){blockCount++;if(blockCount===1){bus.trigger("BLOCK",{message:data?.message,delay:data?.delay,});}}
function unblock(){blockCount--;if(blockCount<0){console.warn("Unblock ui was called more times than block, you should only unblock the UI if you have previously blocked it.");blockCount=0;}
if(blockCount===0){bus.trigger("UNBLOCK");}}
let activeElems=[document];function activateElement(el){activeElems.push(el);bus.trigger("active-element-changed",el);}
function deactivateElement(el){activeElems=activeElems.filter((x)=>x!==el);bus.trigger("active-element-changed",ui.activeElement);}
function getActiveElementOf(el){for(const activeElement of[...activeElems].reverse()){if(activeElement.contains(el)){return activeElement;}}}
const ui=reactive({bus,size:utils.getSize(),get activeElement(){return activeElems[activeElems.length-1];},get isBlocked(){return blockCount>0;},isSmall:utils.isSmall(),block,unblock,activateElement,deactivateElement,getActiveElementOf,});const updateSize=()=>{const prevSize=ui.size;ui.size=utils.getSize();if(ui.size!==prevSize){ui.isSmall=utils.isSmall(ui);bus.trigger("resize");}};browser.addEventListener("resize",throttleForAnimation(updateSize));Object.defineProperty(env,"isSmall",{get(){return ui.isSmall;},});return ui;},};registry.category("services").add("ui",uiService);return __exports;});;

/* /web/static/src/core/user.js */
odoo.define('@web/core/user',['@web/core/browser/browser','@web/core/l10n/utils/locales','@web/core/network/rpc','@web/core/utils/cache','@web/session','@web/core/utils/arrays'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{pyToJsLocale}=require("@web/core/l10n/utils/locales");const{rpc}=require("@web/core/network/rpc");const{Cache}=require("@web/core/utils/cache");const{session}=require("@web/session");const{ensureArray}=require("@web/core/utils/arrays");__exports._makeUser=_makeUser;function _makeUser(session){const{home_action_id:homeActionId,is_admin:isAdmin,is_internal_user:isInternalUser,is_system:isSystem,name,partner_id:partnerId,show_effect:showEffect,uid:userId,username:login,user_context:context,user_settings,partner_write_date:writeDate,}=session;const settings=user_settings||{};delete session.home_action_id;delete session.is_admin;delete session.is_internal_user;delete session.is_system;delete session.name;delete session.partner_id;delete session.show_effect;delete session.uid;delete session.username;delete session.user_context;delete session.user_settings;delete session.partner_write_date;const getGroupCacheValue=(group,context)=>{if(!userId){return Promise.resolve(false);}
return rpc("/web/dataset/call_kw/res.users/has_group",{model:"res.users",method:"has_group",args:[userId,group],kwargs:{context},});};const getGroupCacheKey=(group)=>group;const groupCache=new Cache(getGroupCacheValue,getGroupCacheKey);if(isInternalUser!==undefined){groupCache.cache["base.group_user"]=Promise.resolve(isInternalUser);}
if(isSystem!==undefined){groupCache.cache["base.group_system"]=Promise.resolve(isSystem);}
const getAccessRightCacheValue=(model,operation,ids,context)=>{const url=`/web/dataset/call_kw/${model}/has_access`;return rpc(url,{model,method:"has_access",args:[ids,operation],kwargs:{context},});};const getAccessRightCacheKey=(model,operation,ids)=>JSON.stringify([model,operation,ids]);const accessRightCache=new Cache(getAccessRightCacheValue,getAccessRightCacheKey);const lang=pyToJsLocale(context?.lang);const user={name,login,isAdmin,isSystem,partnerId,homeActionId,showEffect,userId,writeDate,get context(){return Object.assign({},context,{uid:this.userId});},get lang(){return lang;},get tz(){return this.context.tz;},get settings(){return Object.assign({},settings);},updateContext(update){Object.assign(context,update);},hasGroup(group){return groupCache.read(group,this.context);},checkAccessRight(model,operation,ids=[]){return accessRightCache.read(model,operation,ensureArray(ids),this.context);},async setUserSettings(key,value){const model="res.users.settings";const method="set_res_users_settings";const changedSettings=await rpc(`/web/dataset/call_kw/${model}/${method}`,{model,method,args:[[this.settings.id]],kwargs:{new_settings:{[key]:value,},context:this.context,},});Object.assign(settings,changedSettings);},};return user;}
const user=__exports.user=_makeUser(session);const LAST_CONNECTED_USER_KEY="web.lastConnectedUser";const getLastConnectedUsers=__exports.getLastConnectedUsers=()=>{const lastConnectedUsers=browser.localStorage.getItem(LAST_CONNECTED_USER_KEY);return lastConnectedUsers?JSON.parse(lastConnectedUsers):[];};const setLastConnectedUsers=__exports.setLastConnectedUsers=(users)=>{browser.localStorage.setItem(LAST_CONNECTED_USER_KEY,JSON.stringify(users.slice(0,5)));};if(user.login&&user.login!=="__system__"){const users=getLastConnectedUsers();const lastConnectedUsers=[{login:user.login,name:user.name,partnerId:user.partnerId,partnerWriteDate:user.writeDate,userId:user.userId,},...users.filter((u)=>u.userId!==user.userId),];setLastConnectedUsers(lastConnectedUsers);}
return __exports;});;

/* /web/static/src/core/user_switch/user_switch.js */
odoo.define('@web/core/user_switch/user_switch',['@odoo/owl','@web/core/registry','@web/core/user','@web/core/utils/urls'],function(require){'use strict';let __exports={};const{Component,useRef,useState,useEffect}=require("@odoo/owl");const{registry}=require("@web/core/registry");const{getLastConnectedUsers,setLastConnectedUsers}=require("@web/core/user");const{imageUrl}=require("@web/core/utils/urls");const UserSwitch=__exports.UserSwitch=class UserSwitch extends Component{static template="web.login_user_switch";static props={};setup(){const users=getLastConnectedUsers();this.root=useRef("root");this.state=useState({users,displayUserChoice:users.length>1,});this.form=document.querySelector("form.oe_login_form");this.form.classList.toggle("d-none",users.length>1);this.form.querySelector(":placeholder-shown")?.focus();useEffect((el)=>el?.querySelector("button.list-group-item-action")?.focus(),()=>[this.root.el]);}
toggleFormDisplay(){this.state.displayUserChoice=!this.state.displayUserChoice&&this.state.users.length;this.form.classList.toggle("d-none",this.state.displayUserChoice);this.form.querySelector(":placeholder-shown")?.focus();}
getAvatarUrl({partnerId,partnerWriteDate:unique}){return imageUrl("res.partner",partnerId,"avatar_128",{unique});}
remove(deletedUser){this.state.users=this.state.users.filter((user)=>user!==deletedUser);setLastConnectedUsers(this.state.users);if(!this.state.users.length){this.fillForm();}}
fillForm(login=""){this.form.querySelector("input#login").value=login;this.form.querySelector("input#password").value="";this.toggleFormDisplay();}}
registry.category("public_components").add("web.user_switch",UserSwitch);return __exports;});;

/* /web/static/src/core/utils/arrays.js */
odoo.define('@web/core/utils/arrays',['@web/core/utils/objects'],function(require){'use strict';let __exports={};const{shallowEqual:_shallowEqual}=require("@web/core/utils/objects");function _cartesian(...args){if(args.length===0){return[undefined];}
const firstArray=args.shift().map((elem)=>[elem]);if(args.length===0){return firstArray;}
const result=[];const productOfOtherArrays=_cartesian(...args);for(const array of firstArray){for(const tuple of productOfOtherArrays){result.push([...array,...tuple]);}}
return result;}
function _getExtractorFrom(criterion){if(criterion){switch(typeof criterion){case"string":return(element)=>element[criterion];case"function":return criterion;default:throw new Error(`Expected criterion of type 'string' or 'function' and got '${typeof criterion}'`);}}else{return(element)=>element;}}
__exports.ensureArray=ensureArray;function ensureArray(value){return isIterable(value)?[...value]:[value];}
__exports.intersection=intersection;function intersection(iter1,iter2){const set2=new Set(iter2);return unique(iter1).filter((v)=>set2.has(v));}
__exports.isIterable=isIterable;function isIterable(value){return Boolean(value&&typeof value==="object"&&value[Symbol.iterator]);}
__exports.groupBy=groupBy;function groupBy(iterable,criterion){const extract=_getExtractorFrom(criterion);const groups={};for(const element of iterable){const group=String(extract(element));if(!(group in groups)){groups[group]=[];}
groups[group].push(element);}
return groups;}
__exports.sortBy=sortBy;function sortBy(iterable,criterion,order="asc"){const extract=_getExtractorFrom(criterion);return[...iterable].sort((elA,elB)=>{const a=extract(elA);const b=extract(elB);let result;if(isNaN(a)&&isNaN(b)){result=a>b?1:a<b?-1:0;}else{result=a-b;}
return order==="asc"?result:-result;});}
__exports.symmetricalDifference=symmetricalDifference;function symmetricalDifference(iter1,iter2){const array1=[...iter1];const array2=[...iter2];return[...array1.filter((value)=>!array2.includes(value)),...array2.filter((value)=>!array1.includes(value)),];}
__exports.cartesian=cartesian;function cartesian(...args){if(args.length===0){return[undefined];}else if(args.length===1){return args[0];}else{return _cartesian(...args);}}
const shallowEqual=__exports.shallowEqual=_shallowEqual;__exports.sections=sections;function sections(iterable){const array=[...iterable];const sections=[];for(let i=0;i<array.length+1;i++){sections.push(array.slice(0,i));}
return sections;}
__exports.unique=unique;function unique(iterable){return[...new Set(iterable)];}
__exports.zip=zip;function zip(iter1,iter2,fill=false){const array1=[...iter1];const array2=[...iter2];const result=[];const getLength=fill?Math.max:Math.min;for(let i=0;i<getLength(array1.length,array2.length);i++){result.push([array1[i],array2[i]]);}
return result;}
__exports.zipWith=zipWith;function zipWith(iter1,iter2,mapFn){return zip(iter1,iter2).map(([e1,e2])=>mapFn(e1,e2));}
__exports.slidingWindow=slidingWindow;function slidingWindow(arr,width){const res=[];for(let i=0;i<=arr.length-width;i++){res.push(arr.slice(i,i+width));}
return res;}
__exports.rotate=rotate;function rotate(i,arr,inc=1){return(arr.length+i+inc)%arr.length;}
return __exports;});;

/* /web/static/src/core/utils/autoresize.js */
odoo.define('@web/core/utils/autoresize',['@odoo/owl','@web/core/browser/browser'],function(require){'use strict';let __exports={};const{useEffect}=require("@odoo/owl");const{browser}=require("@web/core/browser/browser");__exports.useAutoresize=useAutoresize;function useAutoresize(ref,options={}){let wasProgrammaticallyResized=false;let resize=null;useEffect((el)=>{if(el){resize=(programmaticResize=false)=>{wasProgrammaticallyResized=programmaticResize;if(el instanceof HTMLInputElement){resizeInput(el,options);}else{resizeTextArea(el,options);}
options.onResize?.(el,options);};el.addEventListener("input",()=>resize(true));const resizeObserver=new ResizeObserver(()=>{if(wasProgrammaticallyResized){wasProgrammaticallyResized=false;return;}
resize();});resizeObserver.observe(el);return()=>{el.removeEventListener("input",resize);resizeObserver.unobserve(el);resizeObserver.disconnect();resize=null;};}},()=>[ref.el]);useEffect(()=>{if(resize){resize(true);}});}
function resizeInput(input){input.style.width="100%";const maxWidth=input.clientWidth;const isSafari16=/Version\/16.+Safari/i.test(browser.navigator.userAgent);input.style.width="10px";if(input.value===""&&input.placeholder!==""){input.style.width="auto";return;}
if(input.scrollWidth+5+(isSafari16?8:0)>maxWidth){input.style.width="100%";return;}
input.style.width=input.scrollWidth+5+(isSafari16?8:0)+"px";}
__exports.resizeTextArea=resizeTextArea;function resizeTextArea(textarea,options={}){const minimumHeight=options.minimumHeight||0;let heightOffset=0;const style=window.getComputedStyle(textarea);if(style.boxSizing==="border-box"){const paddingHeight=parseFloat(style.paddingTop)+parseFloat(style.paddingBottom);const borderHeight=parseFloat(style.borderTopWidth)+parseFloat(style.borderBottomWidth);heightOffset=borderHeight+paddingHeight;}
const previousStyle={borderTopWidth:style.borderTopWidth,borderBottomWidth:style.borderBottomWidth,padding:style.padding,};Object.assign(textarea.style,{height:"auto",borderTopWidth:0,borderBottomWidth:0,paddingTop:0,paddingRight:style.paddingRight,paddingBottom:0,paddingLeft:style.paddingLeft,});textarea.style.height="auto";const height=Math.max(minimumHeight,textarea.scrollHeight+heightOffset);Object.assign(textarea.style,previousStyle,{height:`${height}px`});textarea.parentElement.style.height=`${height}px`;}
return __exports;});;

/* /web/static/src/core/utils/binary.js */
odoo.define('@web/core/utils/binary',['@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");__exports.isBinarySize=isBinarySize;function isBinarySize(value){return/^\d+(\.\d*)? [^0-9]+$/.test(value);}
__exports.toBase64Length=toBase64Length;function toBase64Length(maxBytes){return Math.ceil(maxBytes*4/3);}
__exports.humanSize=humanSize;function humanSize(size){const units=_t("Bytes|Kb|Mb|Gb|Tb|Pb|Eb|Zb|Yb").split("|");let i=0;while(size>=1024){size/=1024;++i;}
return`${size.toFixed(2)} ${units[i].trim()}`;}
return __exports;});;

/* /web/static/src/core/utils/cache.js */
odoo.define('@web/core/utils/cache',[],function(require){'use strict';let __exports={};const Cache=__exports.Cache=class Cache{constructor(getValue,getKey){this.cache={};this.getKey=getKey;this.getValue=getValue;}
_getCacheAndKey(...path){let cache=this.cache;let key;if(this.getKey){key=this.getKey(...path);}else{for(let i=0;i<path.length-1;i++){cache=cache[path[i]]=cache[path[i]]||{};}
key=path[path.length-1];}
return{cache,key};}
clear(...path){const{cache,key}=this._getCacheAndKey(...path);delete cache[key];}
invalidate(){this.cache={};}
read(...path){const{cache,key}=this._getCacheAndKey(...path);if(!(key in cache)){cache[key]=this.getValue(...path);}
return cache[key];}}
return __exports;});;

/* /web/static/src/core/utils/classname.js */
odoo.define('@web/core/utils/classname',[],function(require){'use strict';let __exports={};__exports.addClassesToElement=addClassesToElement;function addClassesToElement(el,...classes){for(const classDefinition of classes){const classObj=toClassObj(classDefinition);for(const className in classObj){if(classObj[className]){el.classList.add(className.trim());}}}}
__exports.mergeClasses=mergeClasses;function mergeClasses(...classes){const classObj={};for(const classDefinition of classes){Object.assign(classObj,toClassObj(classDefinition));}
return classObj;}
function toClassObj(classDefinition){if(!classDefinition){return{};}else if(typeof classDefinition==="object"){return classDefinition;}else if(typeof classDefinition==="string"){const classObj={};classDefinition.trim().split(/\s+/).forEach((s)=>{classObj[s]=true;});return classObj;}else{console.warn(`toClassObj only supports strings, objects and undefined className (got ${typeof classProp})`);return{};}}
return __exports;});;

/* /web/static/src/core/utils/colors.js */
odoo.define('@web/core/utils/colors',[],function(require){'use strict';let __exports={};__exports.convertRgbToHsl=convertRgbToHsl;function convertRgbToHsl(r,g,b){if(typeof(r)!=='number'||isNaN(r)||r<0||r>255||typeof(g)!=='number'||isNaN(g)||g<0||g>255||typeof(b)!=='number'||isNaN(b)||b<0||b>255){return false;}
var red=r/255;var green=g/255;var blue=b/255;var maxColor=Math.max(red,green,blue);var minColor=Math.min(red,green,blue);var delta=maxColor-minColor;var hue=0;var saturation=0;var lightness=(maxColor+minColor)/2;if(delta){if(maxColor===red){hue=(green-blue)/delta;}
if(maxColor===green){hue=2+(blue-red)/delta;}
if(maxColor===blue){hue=4+(red-green)/delta;}
if(maxColor){saturation=delta/(1-Math.abs(2*lightness-1));}}
hue=60*hue;return{hue:hue<0?hue+360:hue,saturation:saturation*100,lightness:lightness*100,};};__exports.convertHslToRgb=convertHslToRgb;function convertHslToRgb(h,s,l){if(typeof(h)!=='number'||isNaN(h)||h<0||h>360||typeof(s)!=='number'||isNaN(s)||s<0||s>100||typeof(l)!=='number'||isNaN(l)||l<0||l>100){return false;}
var huePrime=h/60;var saturation=s/100;var lightness=l/100;var chroma=saturation*(1-Math.abs(2*lightness-1));var secondComponent=chroma*(1-Math.abs(huePrime%2-1));var lightnessAdjustment=lightness-chroma/2;var precision=255;chroma=Math.round((chroma+lightnessAdjustment)*precision);secondComponent=Math.round((secondComponent+lightnessAdjustment)*precision);lightnessAdjustment=Math.round((lightnessAdjustment)*precision);if(huePrime>=0&&huePrime<1){return{red:chroma,green:secondComponent,blue:lightnessAdjustment,};}
if(huePrime>=1&&huePrime<2){return{red:secondComponent,green:chroma,blue:lightnessAdjustment,};}
if(huePrime>=2&&huePrime<3){return{red:lightnessAdjustment,green:chroma,blue:secondComponent,};}
if(huePrime>=3&&huePrime<4){return{red:lightnessAdjustment,green:secondComponent,blue:chroma,};}
if(huePrime>=4&&huePrime<5){return{red:secondComponent,green:lightnessAdjustment,blue:chroma,};}
if(huePrime>=5&&huePrime<=6){return{red:chroma,green:lightnessAdjustment,blue:secondComponent,};}
return false;};__exports.convertRgbaToCSSColor=convertRgbaToCSSColor;function convertRgbaToCSSColor(r,g,b,a){if(typeof(r)!=='number'||isNaN(r)||r<0||r>255||typeof(g)!=='number'||isNaN(g)||g<0||g>255||typeof(b)!=='number'||isNaN(b)||b<0||b>255){return false;}
if(typeof(a)!=='number'||isNaN(a)||a<0||Math.abs(a-100)<Number.EPSILON){const rr=r<16?'0'+r.toString(16):r.toString(16);const gg=g<16?'0'+g.toString(16):g.toString(16);const bb=b<16?'0'+b.toString(16):b.toString(16);return(`#${rr}${gg}${bb}`).toUpperCase();}
return`rgba(${r}, ${g}, ${b}, ${parseFloat((a / 100.0).toFixed(3))})`;};__exports.convertCSSColorToRgba=convertCSSColorToRgba;function convertCSSColorToRgba(cssColor){const rgba=cssColor.match(/^rgba?\((\d+),\s*(\d+),\s*(\d+)(?:,\s*(\d+(?:\.\d+)?))?\)$/);if(rgba){if(rgba[4]===undefined){rgba[4]=1;}
return{red:parseInt(rgba[1]),green:parseInt(rgba[2]),blue:parseInt(rgba[3]),opacity:Math.round(parseFloat(rgba[4])*100),};}
if(/^#([0-9A-F]{6}|[0-9A-F]{8})$/i.test(cssColor)){return{red:parseInt(cssColor.substr(1,2),16),green:parseInt(cssColor.substr(3,2),16),blue:parseInt(cssColor.substr(5,2),16),opacity:(cssColor.length===9?(parseInt(cssColor.substr(7,2),16)/255):1)*100,};}
if(/color\(.+\)/.test(cssColor)){const canvasEl=document.createElement("canvas");canvasEl.height=1;canvasEl.width=1;const ctx=canvasEl.getContext("2d");ctx.fillStyle=cssColor;ctx.fillRect(0,0,1,1);const data=ctx.getImageData(0,0,1,1).data;return{red:data[0],green:data[1],blue:data[2],opacity:data[3]/2.55,};}
return false;};__exports.normalizeCSSColor=normalizeCSSColor;function normalizeCSSColor(cssColor){const rgba=convertCSSColorToRgba(cssColor);if(!rgba){return cssColor;}
return convertRgbaToCSSColor(rgba.red,rgba.green,rgba.blue,rgba.opacity);};__exports.isCSSColor=isCSSColor;function isCSSColor(cssColor){return convertCSSColorToRgba(cssColor)!==false;};__exports.mixCssColors=mixCssColors;function mixCssColors(cssColor1,cssColor2,weight){const rgba1=convertCSSColorToRgba(cssColor1);const rgba2=convertCSSColorToRgba(cssColor2);const rgb1=[rgba1.red,rgba1.green,rgba1.blue];const rgb2=[rgba2.red,rgba2.green,rgba2.blue];const[r,g,b]=rgb1.map((_,idx)=>Math.round(rgb2[idx]+(rgb1[idx]-rgb2[idx])*weight));return convertRgbaToCSSColor(r,g,b);};return __exports;});;

/* /web/static/src/core/utils/components.js */
odoo.define('@web/core/utils/components',['@odoo/owl'],function(require){'use strict';let __exports={};const{Component,onError,xml}=require("@odoo/owl");const ErrorHandler=__exports.ErrorHandler=class ErrorHandler extends Component{static template=xml`<t t-slot="default" />`;static props=["onError","slots"];setup(){onError((error)=>{this.props.onError(error);});}}
return __exports;});;

/* /web/static/src/core/utils/concurrency.js */
odoo.define('@web/core/utils/concurrency',[],function(require){'use strict';let __exports={};__exports.delay=delay;function delay(wait){return new Promise(function(resolve){setTimeout(resolve,wait);});}
const KeepLast=__exports.KeepLast=class KeepLast{constructor(){this._id=0;}
add(promise){this._id++;const currentId=this._id;return new Promise((resolve,reject)=>{promise.then((value)=>{if(this._id===currentId){resolve(value);}}).catch((reason)=>{if(this._id===currentId){reject(reason);}});});}}
const Mutex=__exports.Mutex=class Mutex{constructor(){this._lock=Promise.resolve();this._queueSize=0;this._unlockedProm=undefined;this._unlock=undefined;}
async exec(action){this._queueSize++;if(!this._unlockedProm){this._unlockedProm=new Promise((resolve)=>{this._unlock=()=>{resolve();this._unlockedProm=undefined;};});}
const always=()=>{return Promise.resolve(action()).finally(()=>{if(--this._queueSize===0){this._unlock();}});};this._lock=this._lock.then(always,always);return this._lock;}
getUnlockedDef(){return this._unlockedProm||Promise.resolve();}}
const Race=__exports.Race=class Race{constructor(){this.currentProm=null;this.currentPromResolver=null;this.currentPromRejecter=null;}
add(promise){if(!this.currentProm){this.currentProm=new Promise((resolve,reject)=>{this.currentPromResolver=(value)=>{this.currentProm=null;this.currentPromResolver=null;this.currentPromRejecter=null;resolve(value);};this.currentPromRejecter=(error)=>{this.currentProm=null;this.currentPromResolver=null;this.currentPromRejecter=null;reject(error);};});}
promise.then(this.currentPromResolver).catch(this.currentPromRejecter);return this.currentProm;}
getCurrentProm(){return this.currentProm;}}
const Deferred=__exports.Deferred=class Deferred extends Promise{constructor(){let resolve;let reject;const prom=new Promise((res,rej)=>{resolve=res;reject=rej;});return Object.assign(prom,{resolve,reject});}}
return __exports;});;

/* /web/static/src/core/utils/draggable.js */
odoo.define('@web/core/utils/draggable',['@web/core/utils/draggable_hook_builder_owl','@web/core/utils/objects'],function(require){'use strict';let __exports={};const{makeDraggableHook}=require("@web/core/utils/draggable_hook_builder_owl");const{pick}=require("@web/core/utils/objects");const useDraggable=__exports.useDraggable=makeDraggableHook({name:"useDraggable",onWillStartDrag:({ctx})=>pick(ctx.current,"element"),onDragStart:({ctx})=>pick(ctx.current,"element"),onDrag:({ctx})=>pick(ctx.current,"element"),onDragEnd:({ctx})=>pick(ctx.current,"element"),onDrop:({ctx})=>pick(ctx.current,"element"),});return __exports;});;

/* /web/static/src/core/utils/draggable_hook_builder.js */
odoo.define('@web/core/utils/draggable_hook_builder',['@web/core/utils/numbers','@web/core/utils/objects','@web/core/utils/scrolling','@web/core/utils/timing','@web/core/browser/browser','@web/core/browser/feature_detection'],function(require){'use strict';let __exports={};const{clamp}=require("@web/core/utils/numbers");const{omit}=require("@web/core/utils/objects");const{closestScrollableX,closestScrollableY}=require("@web/core/utils/scrolling");const{setRecurringAnimationFrame}=require("@web/core/utils/timing");const{browser}=require("@web/core/browser/browser");const{hasTouch,isBrowserFirefox,isIOS}=require("@web/core/browser/feature_detection");const DRAGGABLE_CLASS="o_draggable";const DRAGGED_CLASS=__exports.DRAGGED_CLASS="o_dragged";const DEFAULT_ACCEPTED_PARAMS={enable:[Boolean,Function],preventDrag:[Function],ref:[Object],elements:[String],handle:[String,Function],ignore:[String,Function],cursor:[String],edgeScrolling:[Object,Function],delay:[Number],tolerance:[Number],touchDelay:[Number],iframeWindow:[Object,Function],};const DEFAULT_DEFAULT_PARAMS={elements:`.${DRAGGABLE_CLASS}`,enable:true,preventDrag:()=>false,edgeScrolling:{speed:10,threshold:30,},delay:0,tolerance:10,touchDelay:300,};const LEFT_CLICK=0;const MANDATORY_PARAMS=["ref"];const WHITE_LISTED_KEYS=["Alt","Control","Meta","Shift"];const elCache={};function camelToKebab(str){return str.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase();}
function getReturnValue(valueOrFn){if(typeof valueOrFn==="function"){return valueOrFn();}
return valueOrFn;}
function getScrollParents(el){return[closestScrollableX(el),closestScrollableY(el)];}
function makeCleanupManager(defaultCleanupFn){const add=(cleanupFn)=>typeof cleanupFn==="function"&&cleanups.push(cleanupFn);const cleanup=()=>{while(cleanups.length){cleanups.pop()();}
add(defaultCleanupFn);};const cleanups=[];add(defaultCleanupFn);return{add,cleanup};}
function makeDOMHelpers(cleanup){const addClass=(el,...classNames)=>{if(!el||!classNames.length){return;}
cleanup.add(()=>el.classList.remove(...classNames));el.classList.add(...classNames);};const addListener=(el,event,callback,options={})=>{if(!el||!event||!callback){return;}
const{noAddedStyle}=options;delete options.noAddedStyle;el.addEventListener(event,callback,options);if(!noAddedStyle&&/mouse|pointer|touch/.test(event)){addStyle(el,{pointerEvents:"auto"});}
cleanup.add(()=>el.removeEventListener(event,callback,options));};const addStyle=(el,style)=>{if(!el||!style||!Object.keys(style).length){return;}
cleanup.add(saveAttribute(el,"style"));for(const key in style){const[value,priority]=String(style[key]).split(/\s*!\s*/);el.style.setProperty(camelToKebab(key),value,priority);}};const getRect=(el,options={})=>{if(!el){return{};}
const rect=el.getBoundingClientRect();if(options.adjust){const style=getComputedStyle(el);const[pl,pr,pt,pb]=["padding-left","padding-right","padding-top","padding-bottom",].map((prop)=>pixelValueToNumber(style.getPropertyValue(prop)));rect.x+=pl;rect.y+=pt;rect.width-=pl+pr;rect.height-=pt+pb;}
return rect;};const removeAttribute=(el,attribute)=>{if(!el||!attribute){return;}
cleanup.add(saveAttribute(el,attribute));el.removeAttribute(attribute);};const removeClass=(el,...classNames)=>{if(!el||!classNames.length){return;}
cleanup.add(saveAttribute(el,"class"));el.classList.remove(...classNames);};const removeStyle=(el,...properties)=>{if(!el||!properties.length){return;}
cleanup.add(saveAttribute(el,"style"));for(const key of properties){el.style.removeProperty(camelToKebab(key));}};const setAttribute=(el,attribute,value)=>{if(!el||!attribute){return;}
cleanup.add(saveAttribute(el,attribute));el.setAttribute(attribute,String(value));};return{addClass,addListener,addStyle,getRect,removeAttribute,removeClass,removeStyle,setAttribute,};}
function pixelValueToNumber(val){return Number(val.endsWith("px")?val.slice(0,-2):val);}
function safePrevent(ev,{stop}={}){if(ev.cancelable){ev.preventDefault();if(stop){ev.stopPropagation();}}}
function saveAttribute(el,attribute){const restoreAttribute=()=>{cache.delete(el);if(hasAttribute){el.setAttribute(attribute,originalValue);}else{el.removeAttribute(attribute);}};if(!(attribute in elCache)){elCache[attribute]=new Set();}
const cache=elCache[attribute];if(cache.has(el)){return;}
cache.add(el);const hasAttribute=el.hasAttribute(attribute);const originalValue=el.getAttribute(attribute);return restoreAttribute;}
function toFunction(value){return typeof value==="function"?value:()=>value;}
__exports.makeDraggableHook=makeDraggableHook;function makeDraggableHook(hookParams){hookParams=getReturnValue(hookParams);const hookName=hookParams.name||"useAnonymousDraggable";const{setupHooks}=hookParams;const allAcceptedParams={...DEFAULT_ACCEPTED_PARAMS,...hookParams.acceptedParams};const defaultParams={...DEFAULT_DEFAULT_PARAMS,...hookParams.defaultParams};const computeParams=(params)=>{const computedParams={enable:()=>true};for(const prop in allAcceptedParams){if(prop in params){if(prop==="enable"){computedParams[prop]=toFunction(params[prop]);}else if(allAcceptedParams[prop].length===1&&allAcceptedParams[prop][0]===Function){computedParams[prop]=params[prop];}else{computedParams[prop]=getReturnValue(params[prop]);}}}
return Object.entries(computedParams);};const makeError=(reason)=>new Error(`Error in hook ${hookName}: ${reason}.`);let preventClick=false;return{[hookName](params){const callBuildHandler=(hookHandlerName,arg)=>{if(typeof hookParams[hookHandlerName]!=="function"){return;}
const returnValue=hookParams[hookHandlerName]({ctx,...helpers,...arg});if(returnValue){callHandler(hookHandlerName,returnValue);}};const callHandler=(handlerName,arg)=>{if(typeof params[handlerName]!=="function"){return;}
try{params[handlerName]({...dom,...ctx.pointer,...arg});}catch(err){dragEnd(null,true);throw err;}};const canStartDrag=()=>{const{pointer,current:{initialPosition},}=ctx;return(!ctx.tolerance||Math.hypot(pointer.x-initialPosition.x,pointer.y-initialPosition.y)>=ctx.tolerance);};const dragStart=()=>{state.dragging=true;state.willDrag=false;const isDocumentScrollingElement=ctx.current.container===ctx.current.container.ownerDocument.scrollingElement;[ctx.current.scrollParentX,ctx.current.scrollParentY]=isDocumentScrollingElement?[ctx.current.container,ctx.current.container]:getScrollParents(ctx.current.container);updateRects();const{x,y,width,height}=ctx.current.elementRect;ctx.current.offset={x:ctx.current.initialPosition.x-x,y:ctx.current.initialPosition.y-y,};if(ctx.followCursor){dom.addStyle(ctx.current.element,{width:`${width}px`,height:`${height}px`,position:"fixed !important",});updateElementPosition();}
dom.addClass(document.body,"pe-none","user-select-none");if(params.iframeWindow){for(const iframe of document.getElementsByTagName("iframe")){if(iframe.contentWindow===params.iframeWindow){dom.addClass(iframe,"pe-none","user-select-none");}}}
if(ctx.cursor){dom.addStyle(document.body,{cursor:ctx.cursor});}
if((ctx.current.scrollParentX||ctx.current.scrollParentY)&&ctx.edgeScrolling.enabled){const cleanupFn=setRecurringAnimationFrame(handleEdgeScrolling);cleanup.add(cleanupFn);}
dom.addClass(ctx.current.element,DRAGGED_CLASS);callBuildHandler("onDragStart");};const dragEnd=(target,inErrorState)=>{if(state.dragging){preventClick=true;if(!inErrorState){if(target){callBuildHandler("onDrop",{target});}
callBuildHandler("onDragEnd");}}
cleanup.cleanup();};const handleEdgeScrolling=(deltaTime)=>{updateRects();const{x:pointerX,y:pointerY}=ctx.pointer;const xRect=ctx.current.scrollParentXRect;const yRect=ctx.current.scrollParentYRect;const scrollParentYEl=ctx.current.scrollParentY;if(scrollParentYEl===ctx.current.container.ownerDocument.scrollingElement){yRect.y+=scrollParentYEl.scrollTop;}
const{direction,speed,threshold}=ctx.edgeScrolling;const correctedSpeed=(speed/16)*deltaTime;const diff={};ctx.current.scrollingEdge=null;if(xRect){const maxWidth=xRect.x+xRect.width;if(pointerX-xRect.x<threshold){diff.x=[pointerX-xRect.x,-1];ctx.current.scrollingEdge="left";}else if(maxWidth-pointerX<threshold){diff.x=[maxWidth-pointerX,1];ctx.current.scrollingEdge="right";}}
if(yRect){const maxHeight=yRect.y+yRect.height;if(pointerY-yRect.y<threshold){diff.y=[pointerY-yRect.y,-1];ctx.current.scrollingEdge="top";}else if(maxHeight-pointerY<threshold){diff.y=[maxHeight-pointerY,1];ctx.current.scrollingEdge="bottom";}}
const diffToScroll=([delta,sign])=>(1-Math.max(delta,0)/threshold)*correctedSpeed*sign;if((!direction||direction==="vertical")&&diff.y){ctx.current.scrollParentY.scrollBy({top:diffToScroll(diff.y)});}
if((!direction||direction==="horizontal")&&diff.x){ctx.current.scrollParentX.scrollBy({left:diffToScroll(diff.x)});}
callBuildHandler("onDrag");};const onClick=(ev)=>{if(preventClick){safePrevent(ev,{stop:true});}};const onKeyDown=(ev)=>{if(!state.dragging||!ctx.enable()){return;}
if(!WHITE_LISTED_KEYS.includes(ev.key)){safePrevent(ev,{stop:true});dragEnd(null);}};const onPointerCancel=()=>{dragEnd(null);};const onPointerDown=(ev)=>{preventClick=false;updatePointerPosition(ev);const initiationDelay=ev.pointerType==="touch"?ctx.touchDelay:ctx.delay;dragEnd(null);const fullSelectorEl=ev.target.closest(ctx.fullSelector);if(ev.button!==LEFT_CLICK||!ctx.enable()||!fullSelectorEl||(ctx.ignoreSelector&&ev.target.closest(ctx.ignoreSelector))||ctx.preventDrag(fullSelectorEl)){return;}
safePrevent(ev);let activeElement=document.activeElement;while(activeElement?.nodeName==="IFRAME"){activeElement=activeElement.contentDocument?.activeElement;}
if(activeElement&&!activeElement.contains(ev.target)){activeElement.blur();}
const{currentTarget,pointerId,target}=ev;ctx.current.initialPosition={...ctx.pointer};if(target.hasPointerCapture(pointerId)){target.releasePointerCapture(pointerId);}
if(initiationDelay){if(hasTouch()){if(ev.pointerType==="touch"){dom.addClass(target.closest(ctx.elementSelector),"o_touch_bounce");}
if(isBrowserFirefox()){const links=[...currentTarget.querySelectorAll("[href]")];if(currentTarget.hasAttribute("href")){links.unshift(currentTarget);}
for(const link of links){dom.removeAttribute(link,"href");}}
if(isIOS()){for(const image of currentTarget.getElementsByTagName("img")){dom.setAttribute(image,"draggable",false);}}}
ctx.current.timeout=browser.setTimeout(()=>{ctx.current.initialPosition={...ctx.pointer};willStartDrag(target);const{x:px,y:py}=ctx.pointer;const{x,y,width,height}=dom.getRect(ctx.current.element);if(px<x||x+width<px||py<y||y+height<py){dragEnd(null);}},initiationDelay);cleanup.add(()=>browser.clearTimeout(ctx.current.timeout));}else{willStartDrag(target);}};const onPointerMove=(ev)=>{updatePointerPosition(ev);if(!ctx.current.element||!ctx.enable()){return;}
safePrevent(ev);if(!state.dragging){if(!canStartDrag()){return;}
dragStart();}
if(ctx.followCursor){updateElementPosition();}
callBuildHandler("onDrag");};const onPointerUp=(ev)=>{updatePointerPosition(ev);dragEnd(ev.target);};const updateElementPosition=()=>{const{containerRect,element,elementRect,offset}=ctx.current;const{width:ew,height:eh}=elementRect;const{x:cx,y:cy,width:cw,height:ch}=containerRect;dom.addStyle(element,{left:`${clamp(ctx.pointer.x - offset.x, cx, cx + cw - ew)}px`,top:`${clamp(ctx.pointer.y - offset.y, cy, cy + ch - eh)}px`,});};const updatePointerPosition=(ev)=>{ctx.pointer.x=ev.clientX;ctx.pointer.y=ev.clientY;};const updateRects=()=>{const{current}=ctx;const{container,element,scrollParentX,scrollParentY}=current;current.containerRect=dom.getRect(container,{adjust:true});let iframeOffsetX=0;let iframeOffsetY=0;const iframeEl=container.ownerDocument.defaultView.frameElement;if(iframeEl&&!iframeEl.contentDocument?.contains(element)){const{x,y}=dom.getRect(iframeEl);iframeOffsetX=x;iframeOffsetY=y;current.containerRect.x+=iframeOffsetX;current.containerRect.y+=iframeOffsetY;}
current.containerRect.width=container.scrollWidth;current.containerRect.height=container.scrollHeight;current.scrollParentXRect=null;current.scrollParentYRect=null;if(ctx.edgeScrolling.enabled){if(scrollParentX){current.scrollParentXRect=dom.getRect(scrollParentX,{adjust:true});current.scrollParentXRect.x+=iframeOffsetX;current.scrollParentXRect.y+=iframeOffsetY;const right=Math.min(current.containerRect.left+container.scrollWidth,current.scrollParentXRect.right);current.containerRect.x=Math.max(current.containerRect.x,current.scrollParentXRect.x);current.containerRect.width=right-current.containerRect.x;}
if(scrollParentY){current.scrollParentYRect=dom.getRect(scrollParentY,{adjust:true});current.scrollParentYRect.x+=iframeOffsetX;current.scrollParentYRect.y+=iframeOffsetY;const bottom=Math.min(current.containerRect.top+container.scrollHeight,current.scrollParentYRect.bottom);current.containerRect.y=Math.max(current.containerRect.y,current.scrollParentYRect.y);current.containerRect.height=bottom-current.containerRect.y;}}
ctx.current.elementRect=dom.getRect(element);};const willStartDrag=(target)=>{ctx.current.element=target.closest(ctx.elementSelector);ctx.current.container=ctx.ref.el;cleanup.add(()=>(ctx.current={}));state.willDrag=true;callBuildHandler("onWillStartDrag");if(hasTouch()){dom.addListener(window,"touchmove",safePrevent,{passive:false,noAddedStyle:true,});if(params.iframeWindow){dom.addListener(params.iframeWindow,"touchmove",safePrevent,{passive:false,noAddedStyle:true,});}}};const cleanup=makeCleanupManager(()=>(state.dragging=false));const effectCleanup=makeCleanupManager();const dom=makeDOMHelpers(cleanup);const helpers={...dom,addCleanup:cleanup.add,addEffectCleanup:effectCleanup.add,callHandler,};const state=setupHooks.wrapState({dragging:false});for(const prop in allAcceptedParams){const type=typeof params[prop];const acceptedTypes=allAcceptedParams[prop].map((t)=>t.name.toLowerCase());if(params[prop]){if(!acceptedTypes.includes(type)){throw makeError(`invalid type for property "${prop}" in parameters: expected { ${acceptedTypes.join(
                                ", "
                            )} } and got ${type}`);}}else if(MANDATORY_PARAMS.includes(prop)&&!defaultParams[prop]){throw makeError(`missing required property "${prop}" in parameters`);}}
const ctx={enable:()=>false,preventDrag:()=>false,ref:params.ref,ignoreSelector:null,fullSelector:null,followCursor:true,cursor:null,pointer:{x:0,y:0},edgeScrolling:{enabled:true},get dragging(){return state.dragging;},get willDrag(){return state.willDrag;},current:{},};setupHooks.setup((...deps)=>{const params=Object.fromEntries(deps);const actualParams={...defaultParams,...omit(params,"edgeScrolling")};if(params.edgeScrolling){actualParams.edgeScrolling={...actualParams.edgeScrolling,...params.edgeScrolling,};}
if(!ctx.ref.el){return;}
ctx.enable=actualParams.enable;if(actualParams.preventDrag){ctx.preventDrag=actualParams.preventDrag;}
ctx.elementSelector=actualParams.elements;if(!ctx.elementSelector){throw makeError(`no value found by "elements" selector: ${ctx.elementSelector}`);}
const allSelectors=[ctx.elementSelector];ctx.cursor=actualParams.cursor||null;if(actualParams.handle){allSelectors.push(actualParams.handle);}
if(actualParams.ignore){ctx.ignoreSelector=actualParams.ignore;}
ctx.fullSelector=allSelectors.join(" ");Object.assign(ctx.edgeScrolling,actualParams.edgeScrolling);ctx.delay=actualParams.delay;ctx.touchDelay=actualParams.delay||actualParams.touchDelay;ctx.tolerance=actualParams.tolerance;callBuildHandler("onComputeParams",{params:actualParams});return effectCleanup.cleanup;},()=>computeParams(params));const useMouseEvents=isBrowserFirefox()&&!hasTouch()&&params.iframeWindow;setupHooks.setup((el)=>{if(el){const{add,cleanup}=makeCleanupManager();const{addListener}=makeDOMHelpers({add});const event=useMouseEvents?"mousedown":"pointerdown";addListener(el,event,onPointerDown,{noAddedStyle:true});addListener(el,"click",onClick);if(hasTouch()){addListener(el,"contextmenu",safePrevent);addListener(el,"touchstart",()=>{},{passive:false,noAddedStyle:true,});}
return cleanup;}},()=>[ctx.ref.el]);const addWindowListener=(type,listener,options)=>{if(params.iframeWindow){setupHooks.addListener(params.iframeWindow,type,listener,options);}
setupHooks.addListener(window,type,listener,options);};const throttledOnPointerMove=setupHooks.throttle(onPointerMove);addWindowListener(useMouseEvents?"mousemove":"pointermove",throttledOnPointerMove,{passive:false});addWindowListener(useMouseEvents?"mouseup":"pointerup",onPointerUp);addWindowListener("pointercancel",onPointerCancel);addWindowListener("keydown",onKeyDown,{capture:true});setupHooks.teardown(()=>dragEnd(null));return state;},}[hookName];}
return __exports;});;

/* /web/static/src/core/utils/draggable_hook_builder_owl.js */
odoo.define('@web/core/utils/draggable_hook_builder_owl',['@odoo/owl','@web/core/utils/timing','@web/core/utils/draggable_hook_builder'],function(require){'use strict';let __exports={};const{onWillUnmount,reactive,useEffect,useExternalListener}=require("@odoo/owl");const{useThrottleForAnimation}=require("@web/core/utils/timing");const{makeDraggableHook:nativeMakeDraggableHook}=require("@web/core/utils/draggable_hook_builder");__exports.makeDraggableHook=makeDraggableHook;function makeDraggableHook(params){return nativeMakeDraggableHook({...params,setupHooks:{addListener:useExternalListener,setup:useEffect,teardown:onWillUnmount,throttle:useThrottleForAnimation,wrapState:reactive,},});}
return __exports;});;

/* /web/static/src/core/utils/files.js */
odoo.define('@web/core/utils/files',['@web/core/utils/numbers','@web/core/utils/hooks','@web/session','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{humanNumber}=require("@web/core/utils/numbers");const{useService}=require("@web/core/utils/hooks");const{session}=require("@web/session");const{_t}=require("@web/core/l10n/translation");const DEFAULT_MAX_FILE_SIZE=__exports.DEFAULT_MAX_FILE_SIZE=128*1024*1024;__exports.checkFileSize=checkFileSize;function checkFileSize(fileSize,notificationService){const maxUploadSize=session.max_file_upload_size||DEFAULT_MAX_FILE_SIZE;if(fileSize>maxUploadSize){notificationService.add(_t("The selected file (%(size)sB) is larger than the maximum allowed file size (%(maxSize)sB).",{size:humanNumber(fileSize),maxSize:humanNumber(maxUploadSize)}),{type:"danger",});return false;}
return true;}
__exports.useFileUploader=useFileUploader;function useFileUploader(){const http=useService("http");const notification=useService("notification");return async(route,params)=>{if((params.ufile&&params.ufile.length)||params.file){const fileSize=(params.ufile&&params.ufile[0].size)||params.file.size;if(!checkFileSize(fileSize,notification)){return null;}}
const fileData=await http.post(route,params,"text");const parsedFileData=JSON.parse(fileData);if(parsedFileData.error){throw new Error(parsedFileData.error);}
return parsedFileData;};}
return __exports;});;

/* /web/static/src/core/utils/functions.js */
odoo.define('@web/core/utils/functions',[],function(require){'use strict';let __exports={};__exports.memoize=memoize;function memoize(func){const cache=new Map();const funcName=func.name?func.name+" (memoized)":"memoized";return{[funcName](...args){if(!cache.has(args[0])){cache.set(args[0],func(...args));}
return cache.get(...args);},}[funcName];}
__exports.uniqueId=uniqueId;function uniqueId(prefix=""){return`${prefix}${++uniqueId.nextId}`;}
uniqueId.nextId=0;return __exports;});;

/* /web/static/src/core/utils/hooks.js */
odoo.define('@web/core/utils/hooks',['@web/core/browser/feature_detection','@odoo/owl'],function(require){'use strict';let __exports={};const{hasTouch,isMobileOS}=require("@web/core/browser/feature_detection");const{status,useComponent,useEffect,useRef,onWillUnmount}=require("@odoo/owl");__exports.useAutofocus=useAutofocus;function useAutofocus({refName,selectAll,mobile}={}){const ref=useRef(refName||"autofocus");const uiService=useService("ui");if(!mobile&&hasTouch()){return ref;}
if(!mobile&&isMobileOS()){return ref;}
useEffect((el)=>{if(el&&(!uiService.activeElement||uiService.activeElement.contains(el))){el.focus();if(["INPUT","TEXTAREA"].includes(el.tagName)&&el.type!=="number"){el.selectionEnd=el.value.length;el.selectionStart=selectAll?0:el.value.length;}}},()=>[ref.el]);return ref;}
__exports.useBus=useBus;function useBus(bus,eventName,callback){const component=useComponent();useEffect(()=>{const listener=callback.bind(component);bus.addEventListener(eventName,listener);return()=>bus.removeEventListener(eventName,listener);},()=>[]);}
const useServiceProtectMethodHandling=__exports.useServiceProtectMethodHandling={fn(){return this.original();},mocked(){return new Promise(()=>{});},original(){return Promise.reject(new Error("Component is destroyed"));},};function _protectMethod(component,fn){return function(...args){if(status(component)==="destroyed"){return useServiceProtectMethodHandling.fn();}
const prom=Promise.resolve(fn.call(this,...args));const protectedProm=prom.then((result)=>status(component)==="destroyed"?new Promise(()=>{}):result);return Object.assign(protectedProm,{abort:prom.abort,cancel:prom.cancel,});};}
const SERVICES_METADATA=__exports.SERVICES_METADATA={};__exports.useService=useService;function useService(serviceName){const component=useComponent();const{services}=component.env;if(!(serviceName in services)){throw new Error(`Service ${serviceName} is not available`);}
const service=services[serviceName];if(serviceName in SERVICES_METADATA){if(service instanceof Function){return _protectMethod(component,service);}else{const methods=SERVICES_METADATA[serviceName];const result=Object.create(service);for(const method of methods){result[method]=_protectMethod(component,service[method]);}
return result;}}
return service;}
__exports.useSpellCheck=useSpellCheck;function useSpellCheck({refName}={}){const elements=[];const ref=useRef(refName||"spellcheck");function toggleSpellcheck(ev){ev.target.spellcheck=document.activeElement===ev.target;}
useEffect((el)=>{if(el){const inputs=["INPUT","TEXTAREA"].includes(el.nodeName)||el.isContentEditable?[el]:el.querySelectorAll("input, textarea, [contenteditable=true]");inputs.forEach((input)=>{if(input.spellcheck!==false){elements.push(input);input.addEventListener("focus",toggleSpellcheck);input.addEventListener("blur",toggleSpellcheck);}});}
return()=>{elements.forEach((input)=>{input.removeEventListener("focus",toggleSpellcheck);input.removeEventListener("blur",toggleSpellcheck);});};},()=>[ref.el]);}
__exports.useChildRef=useChildRef;function useChildRef(){let defined=false;let value;return function ref(v){value=v;if(defined){return;}
Object.defineProperty(ref,"el",{get(){return value.el;},});defined=true;};}
__exports.useForwardRefToParent=useForwardRefToParent;function useForwardRefToParent(refName){const component=useComponent();const ref=useRef(refName);if(component.props[refName]){component.props[refName](ref);}
return ref;}
__exports.useOwnedDialogs=useOwnedDialogs;function useOwnedDialogs(){const dialogService=useService("dialog");const cbs=[];onWillUnmount(()=>{cbs.forEach((cb)=>cb());});const addDialog=(...args)=>{const close=dialogService.add(...args);cbs.push(close);return close;};return addDialog;}
__exports.useRefListener=useRefListener;function useRefListener(ref,...listener){useEffect((el)=>{el?.addEventListener(...listener);return()=>el?.removeEventListener(...listener);},()=>[ref.el]);}
return __exports;});;

/* /web/static/src/core/utils/misc.js */
odoo.define('@web/core/utils/misc',[],function(require){'use strict';let __exports={};const eventHandledWeakMap=new WeakMap();__exports.isEventHandled=isEventHandled;function isEventHandled(ev,markName){if(!eventHandledWeakMap.get(ev)){return false;}
return eventHandledWeakMap.get(ev).includes(markName);}
__exports.markEventHandled=markEventHandled;function markEventHandled(ev,markName){if(!eventHandledWeakMap.get(ev)){eventHandledWeakMap.set(ev,[]);}
eventHandledWeakMap.get(ev).push(markName);}
return __exports;});;

/* /web/static/src/core/utils/nested_sortable.js */
odoo.define('@web/core/utils/nested_sortable',['@web/core/l10n/localization','@web/core/utils/draggable_hook_builder_owl'],function(require){'use strict';let __exports={};const{localization}=require("@web/core/l10n/localization");const{makeDraggableHook}=require("@web/core/utils/draggable_hook_builder_owl");const useNestedSortable=__exports.useNestedSortable=makeDraggableHook({name:"useNestedSortable",acceptedParams:{groups:[String,Function],connectGroups:[Boolean,Function],nest:[Boolean],listTagName:[String],nestInterval:[Number],maxLevels:[Number],isAllowed:[Function],useElementSize:[Boolean],},defaultParams:{connectGroups:false,currentGroup:null,cursor:"grabbing",edgeScrolling:{speed:20,threshold:60},elements:"li",groupSelector:null,nest:false,listTagName:"ul",nestInterval:15,maxLevels:0,isAllowed:(ctx)=>true,useElementSize:false,},onComputeParams({ctx,params}){ctx.groupSelector=params.groups||null;if(ctx.groupSelector){ctx.fullSelector=[ctx.groupSelector,ctx.fullSelector].join(" ");}
ctx.connectGroups=params.connectGroups;ctx.nest=params.nest;ctx.listTagName=params.listTagName;ctx.nestInterval=params.nestInterval;ctx.isRTL=localization.direction==="rtl";ctx.maxLevels=params.maxLevels||0;ctx.isAllowed=params.isAllowed??(()=>true);ctx.useElementSize=params.useElementSize;},onWillStartDrag({ctx,addCleanup}){if(ctx.groupSelector){ctx.currentGroup=ctx.current.element.closest(ctx.groupSelector);if(!ctx.connectGroups){ctx.current.container=ctx.currentGroup;}}
if(ctx.nest){ctx.prevNestX=ctx.pointer.x;}
ctx.current.placeHolder=ctx.current.element.cloneNode(false);ctx.current.placeHolder.removeAttribute("id");ctx.current.placeHolder.classList.add("w-100","d-block");if(ctx.useElementSize){ctx.current.placeHolder.style.height=getComputedStyle(ctx.current.element).height;ctx.current.placeHolder.classList.add("o_nested_sortable_placeholder_realsize");}else{ctx.current.placeHolder.classList.add("o_nested_sortable_placeholder");}
addCleanup(()=>ctx.current.placeHolder.remove());},onDragStart({ctx,addStyle}){ctx.selectorX=ctx.isRTL?ctx.current.elementRect.left+1:ctx.current.elementRect.right-1;ctx.current.element.after(ctx.current.placeHolder);addStyle(ctx.current.element,{opacity:0.5});addStyle(document.body,{"pointer-events":"auto"});addStyle(document.querySelector(".o_navbar"),{"pointer-events":"none"});addStyle(document.querySelector(".o_action_manager"),{"pointer-events":"none"});addStyle(ctx.current.container,{"pointer-events":"auto"});return{element:ctx.current.element,group:ctx.currentGroup,};},_getDeepestChildLevel(ctx,node,depth=0){let result=0;const childSelector=`${ctx.listTagName} ${ctx.elementSelector}`;for(const childNode of node.querySelectorAll(childSelector)){result=Math.max(this._getDeepestChildLevel(ctx,childNode,depth+1),result);}
return depth?result+1:result;},_hasReachMaxAllowedLevel(ctx){if(!ctx.nest||ctx.maxLevels<1){return false;}
let level=this._getDeepestChildLevel(ctx,ctx.current.element);let list=ctx.current.placeHolder.closest(ctx.listTagName);while(list){level++;list=list.parentNode.closest(ctx.listTagName);}
return level>ctx.maxLevels;},_isAllowedNodeMove(ctx){return(!this._hasReachMaxAllowedLevel(ctx)&&ctx.isAllowed(ctx.current,ctx.elementSelector));},onDrag({ctx,callHandler}){const onMove=(prevPos)=>{if(!this._isAllowedNodeMove(ctx)){ctx.current.placeHolder.classList.add("d-none");return;}
ctx.current.placeHolder.classList.remove("d-none");callHandler("onMove",{element:ctx.current.element,previous:ctx.current.placeHolder.previousElementSibling,next:ctx.current.placeHolder.nextElementSibling,parent:ctx.nest?ctx.current.placeHolder.parentElement.closest(ctx.elementSelector):false,group:ctx.currentGroup,newGroup:ctx.connectGroups?ctx.current.placeHolder.closest(ctx.groupSelector):ctx.currentGroup,prevPos,placeholder:ctx.current.placeHolder,});};const getChildList=(el)=>{let list=el.querySelector(ctx.listTagName);if(!list){list=document.createElement(ctx.listTagName);el.appendChild(list);}
return list;};const getPosition=(el)=>{return{previous:el.previousElementSibling,next:el.nextElementSibling,parent:el.parentElement?.closest(ctx.elementSelector)||null,group:ctx.groupSelector?el.closest(ctx.groupSelector):false,};};const position=getPosition(ctx.current.placeHolder);if(ctx.nest){const xInterval=ctx.prevNestX-ctx.pointer.x;if(ctx.nestInterval-(-1)**ctx.isRTL*xInterval<1){let nextElement=position.next;if(nextElement===ctx.current.element){nextElement=nextElement.nextElementSibling;}
if(!nextElement){const newSibling=position.parent;if(newSibling){newSibling.after(ctx.current.placeHolder);onMove(position);}}
ctx.prevNestX=ctx.pointer.x;return;}else if(ctx.nestInterval+(-1)**ctx.isRTL*xInterval<1){let parent=position.previous;if(parent===ctx.current.element){parent=parent.previousElementSibling;}
if(parent&&parent.matches(ctx.elementSelector)){getChildList(parent).appendChild(ctx.current.placeHolder);onMove(position);}
ctx.prevNestX=ctx.pointer.x;return;}}
const currentTop=ctx.pointer.y-ctx.current.offset.y;const closestEl=document.elementFromPoint(ctx.selectorX,currentTop);if(!closestEl){return;}
const element=closestEl.closest(ctx.elementSelector);if(element&&element!==ctx.current.placeHolder){const elementPosition=getPosition(element);const eRect=element.getBoundingClientRect();const pos=ctx.current.placeHolder.compareDocumentPosition(element);if(currentTop-eRect.y<10){if(pos&Node.DOCUMENT_POSITION_PRECEDING&&(ctx.nest||elementPosition.parent===position.parent)){element.before(ctx.current.placeHolder);onMove(position);ctx.prevNestX=ctx.pointer.x;}}else if(currentTop-eRect.y>15&&pos===Node.DOCUMENT_POSITION_FOLLOWING){if(ctx.nest){const elementChildList=getChildList(element);if(elementChildList.querySelector(ctx.elementSelector)){elementChildList.prepend(ctx.current.placeHolder);onMove(position);}else{element.after(ctx.current.placeHolder);onMove(position);}
ctx.prevNestX=ctx.pointer.x;}else if(elementPosition.parent===position.parent){element.after(ctx.current.placeHolder);onMove(position);}}}else{const group=closestEl.closest(ctx.groupSelector);if(group&&group!==position.group&&(ctx.nest||!position.parent)){if(group.compareDocumentPosition(position.group)===Node.DOCUMENT_POSITION_PRECEDING){getChildList(group).prepend(ctx.current.placeHolder);onMove(position);}else{getChildList(group).appendChild(ctx.current.placeHolder);onMove(position);}
ctx.prevNestX=ctx.pointer.x;callHandler("onGroupEnter",{group,placeholder:ctx.current.placeHolder});callHandler("onGroupLeave",{group:position.group,placeholder:ctx.current.placeHolder,});}}},onDrop({ctx}){if(!this._isAllowedNodeMove(ctx)){return;}
const previous=ctx.current.placeHolder.previousElementSibling;const next=ctx.current.placeHolder.nextElementSibling;if(previous!==ctx.current.element&&next!==ctx.current.element){return{element:ctx.current.element,group:ctx.currentGroup,previous,next,newGroup:ctx.groupSelector&&ctx.current.placeHolder.closest(ctx.groupSelector),parent:ctx.current.placeHolder.parentElement.closest(ctx.elementSelector),placeholder:ctx.current.placeHolder,};}},onDragEnd({ctx}){return{element:ctx.current.element,group:ctx.currentGroup,};},});return __exports;});;

/* /web/static/src/core/utils/numbers.js */
odoo.define('@web/core/utils/numbers',['@web/core/l10n/localization','@web/core/l10n/translation','@web/core/utils/strings'],function(require){'use strict';let __exports={};const{localization:l10n}=require("@web/core/l10n/localization");const{_t}=require("@web/core/l10n/translation");const{intersperse}=require("@web/core/utils/strings");__exports.clamp=clamp;function clamp(num,min,max){return Math.max(Math.min(num,max),min);}
__exports.range=range;function range(start,stop,step=1){const array=[];const nsteps=Math.floor((stop-start)/step);for(let i=0;i<nsteps;i++){array.push(start+step*i);}
return array;}
__exports.roundPrecision=roundPrecision;function roundPrecision(value,precision,method="HALF-UP"){if(!value){return 0;}else if(!precision||precision<0){precision=1;}
let roundingFactor=precision;let normalize=(val)=>val/roundingFactor;let denormalize=(val)=>val*roundingFactor;if(roundingFactor<1){roundingFactor=invertFloat(roundingFactor);[normalize,denormalize]=[denormalize,normalize];}
const normalizedValue=normalize(value);const sign=Math.sign(normalizedValue);const epsilonMagnitude=Math.log2(Math.abs(normalizedValue));const epsilon=Math.pow(2,epsilonMagnitude-50);let roundedValue;switch(method){case"DOWN":{roundedValue=Math.trunc(normalizedValue+sign*epsilon);break;}
case"HALF-DOWN":{roundedValue=Math.round(normalizedValue-sign*epsilon);break;}
case"HALF-UP":{roundedValue=Math.round(normalizedValue+sign*epsilon);break;}
case"HALF-EVEN":{const integral=Math.floor(normalizedValue);const remainder=Math.abs(normalizedValue-integral);const isHalf=Math.abs(0.5-remainder)<epsilon;roundedValue=isHalf?integral+(integral&1):Math.round(normalizedValue);break;}
case"UP":{roundedValue=Math.trunc(normalizedValue+sign*(1-epsilon));break;}
default:{throw new Error(`Unknown rounding method: ${method}`);}}
return denormalize(roundedValue);}
__exports.roundDecimals=roundDecimals;function roundDecimals(value,decimals){return roundPrecision(value,parseFloat("1e"+-decimals));}
__exports.floatIsZero=floatIsZero;function floatIsZero(value,decimals){return value===0||roundDecimals(value,decimals)===0;}
__exports.insertThousandsSep=insertThousandsSep;function insertThousandsSep(number,thousandsSep=",",grouping=[]){const negative=number[0]==="-";number=negative?number.slice(1):number;return(negative?"-":"")+intersperse(number,grouping,thousandsSep);}
__exports.humanNumber=humanNumber;function humanNumber(number,options={decimals:0,minDigits:1}){const decimals=options.decimals||0;const minDigits=options.minDigits||1;const d2=Math.pow(10,decimals);const numberMagnitude=+number.toExponential().split("e+")[1];number=Math.round(number*d2)/d2;if(numberMagnitude>=21){number=Math.round(number*Math.pow(10,decimals-numberMagnitude))/d2;return`${number}e+${numberMagnitude}`;}
const unitSymbols=_t("kMGTPE").toString();const sign=Math.sign(number);number=Math.abs(number);let symbol="";for(let i=unitSymbols.length;i>0;i--){const s=Math.pow(10,i*3);if(s<=number/Math.pow(10,minDigits-1)){number=Math.round((number*d2)/s)/d2;symbol=unitSymbols[i-1];break;}}
const{decimalPoint,grouping,thousandsSep}=l10n;const decimalsToKeep=number>=1000?0:decimals;number=sign*number;const[integerPart,decimalPart]=number.toFixed(decimalsToKeep).split(".");const int=insertThousandsSep(integerPart,thousandsSep,grouping);if(!decimalPart){return int+symbol;}
return int+decimalPoint+decimalPart+symbol;}
__exports.formatFloat=formatFloat;function formatFloat(value,options={}){if(options.humanReadable){return humanNumber(value,options);}
const grouping=options.grouping||l10n.grouping;const thousandsSep="thousandsSep"in options?options.thousandsSep:l10n.thousandsSep;const decimalPoint="decimalPoint"in options?options.decimalPoint:l10n.decimalPoint;let precision;if(options.digits&&options.digits[1]!==undefined){precision=options.digits[1];}else{precision=2;}
const formatted=value.toFixed(precision).split(".");formatted[0]=insertThousandsSep(formatted[0],thousandsSep,grouping);if(options.trailingZeros===false&&formatted[1]){formatted[1]=formatted[1].replace(/0+$/,"");}
return formatted[1]?formatted.join(decimalPoint):formatted[0];}
const _INVERTDICT=Object.freeze({1e-1:1e+1,1e-2:1e+2,1e-3:1e+3,1e-4:1e+4,1e-5:1e+5,1e-6:1e+6,1e-7:1e+7,1e-8:1e+8,1e-9:1e+9,1e-10:1e+10,2e-1:5e+0,2e-2:5e+1,2e-3:5e+2,2e-4:5e+3,2e-5:5e+4,2e-6:5e+5,2e-7:5e+6,2e-8:5e+7,2e-9:5e+8,2e-10:5e+9,5e-1:2e+0,5e-2:2e+1,5e-3:2e+2,5e-4:2e+3,5e-5:2e+4,5e-6:2e+5,5e-7:2e+6,5e-8:2e+7,5e-9:2e+8,5e-10:2e+9,});__exports.invertFloat=invertFloat;function invertFloat(value){let res=_INVERTDICT[value];if(res===undefined){const[coeff,expt]=value.toExponential().split("e").map(Number.parseFloat);res=Number.parseFloat(`${coeff}e${-expt}`)/Math.pow(coeff,2);}
return res;}
return __exports;});;

/* /web/static/src/core/utils/objects.js */
odoo.define('@web/core/utils/objects',[],function(require){'use strict';let __exports={};__exports.shallowEqual=shallowEqual;function shallowEqual(obj1,obj2,comparisonFn=(a,b)=>a===b){if(!isObject(obj1)||!isObject(obj2)){return obj1===obj2;}
const obj1Keys=Reflect.ownKeys(obj1);return(obj1Keys.length===Reflect.ownKeys(obj2).length&&obj1Keys.every((key)=>comparisonFn(obj1[key],obj2[key])));}
const deepEqual=__exports.deepEqual=(obj1,obj2)=>shallowEqual(obj1,obj2,deepEqual);__exports.deepCopy=deepCopy;function deepCopy(object){return object&&JSON.parse(JSON.stringify(object));}
__exports.isObject=isObject;function isObject(object){return!!object&&(typeof object==="object"||typeof object==="function");}
__exports.omit=omit;function omit(object,...properties){const result={};const propertiesSet=new Set(properties);for(const key in object){if(!propertiesSet.has(key)){result[key]=object[key];}}
return result;}
__exports.pick=pick;function pick(object,...properties){return Object.fromEntries(properties.filter((prop)=>prop in object).map((prop)=>[prop,object[prop]]));}
__exports.deepMerge=deepMerge;function deepMerge(target,extension){if(!isObject(target)&&!isObject(extension)){return;}
target=target||{};const output=Object.assign({},target);if(isObject(extension)){for(const key of Reflect.ownKeys(extension)){if(key in target&&isObject(extension[key])&&!Array.isArray(extension[key])&&typeof extension[key]!=="function"){output[key]=deepMerge(target[key],extension[key]);}else{Object.assign(output,{[key]:extension[key]});}}}
return output;}
return __exports;});;

/* /web/static/src/core/utils/patch.js */
odoo.define('@web/core/utils/patch',[],function(require){'use strict';let __exports={};const patchDescriptions=new WeakMap();function getPatchDescription(objToPatch){if(!patchDescriptions.has(objToPatch)){patchDescriptions.set(objToPatch,{originalProperties:new Map(),skeleton:Object.create(Object.getPrototypeOf(objToPatch)),extensions:new Set(),});}
return patchDescriptions.get(objToPatch);}
function isClassPrototype(objToPatch){return(Object.hasOwn(objToPatch,"constructor")&&objToPatch.constructor?.prototype===objToPatch);}
function findAncestorPropertyDescriptor(objToPatch,key){let descriptor=null;let prototype=objToPatch;do{descriptor=Object.getOwnPropertyDescriptor(prototype,key);prototype=Object.getPrototypeOf(prototype);}while(!descriptor&&prototype);return descriptor;}
__exports.patch=patch;function patch(objToPatch,extension){if(typeof extension==="string"){throw new Error(`Patch "${extension}": Second argument is not the patch name anymore, it should be the object containing the patched properties`);}
const description=getPatchDescription(objToPatch);description.extensions.add(extension);const properties=Object.getOwnPropertyDescriptors(extension);for(const[key,newProperty]of Object.entries(properties)){const oldProperty=Object.getOwnPropertyDescriptor(objToPatch,key);if(oldProperty){Object.defineProperty(description.skeleton,key,oldProperty);}
if(!description.originalProperties.has(key)){description.originalProperties.set(key,oldProperty);}
if(isClassPrototype(objToPatch)){newProperty.enumerable=false;}
if((newProperty.get&&1)^(newProperty.set&&1)){const ancestorProperty=findAncestorPropertyDescriptor(objToPatch,key);newProperty.get=newProperty.get??ancestorProperty?.get;newProperty.set=newProperty.set??ancestorProperty?.set;}
Object.defineProperty(objToPatch,key,newProperty);}
description.skeleton=Object.setPrototypeOf(extension,description.skeleton);return()=>{patchDescriptions.delete(objToPatch);for(const[key,property]of description.originalProperties){if(property){Object.defineProperty(objToPatch,key,property);}else{delete objToPatch[key];}}
description.extensions.delete(extension);for(const extension of description.extensions){patch(objToPatch,extension);}};}
return __exports;});;

/* /web/static/src/core/utils/reactive.js */
odoo.define('@web/core/utils/reactive',['@odoo/owl'],function(require){'use strict';let __exports={};const{reactive}=require("@odoo/owl");const Reactive=__exports.Reactive=class Reactive{constructor(){return reactive(this);}}
__exports.effect=effect;function effect(cb,deps){const reactiveDeps=reactive(deps,()=>{cb(...reactiveDeps);});cb(...reactiveDeps);}
__exports.withComputedProperties=withComputedProperties;function withComputedProperties(obj,sources,descriptor){for(const[key,compute]of Object.entries(descriptor)){effect((obj,sources)=>{obj[key]=compute.call(obj,...sources);},[obj,sources]);}
return obj;}
return __exports;});;

/* /web/static/src/core/utils/render.js */
odoo.define('@web/core/utils/render',['@odoo/owl','@web/core/templates','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{App,blockDom,Component,markup}=require("@odoo/owl");const{getTemplate}=require("@web/core/templates");const{_t}=require("@web/core/l10n/translation");__exports.renderToElement=renderToElement;function renderToElement(template,context={}){const el=render(template,context).firstElementChild;if(el?.nextElementSibling){throw new Error(`The rendered template '${template}' contains multiple root `+`nodes that will be ignored using renderToElement, you should `+`consider using renderToFragment or refactoring the template.`);}
el?.remove();return el;}
__exports.renderToFragment=renderToFragment;function renderToFragment(template,context={}){const frag=document.createDocumentFragment();for(const el of[...render(template,context).children]){frag.appendChild(el);}
return frag;}
__exports.renderToString=renderToString;function renderToString(template,context={}){return render(template,context).innerHTML;}
let app;Object.defineProperty(renderToString,"app",{get:()=>{if(!app){app=new App(Component,{name:"renderToString",getTemplate,translatableAttributes:["data-tooltip"],translateFn:_t,});}
return app;},});function render(template,context={}){const app=renderToString.app;const templateFn=app.getTemplate(template);const bdom=templateFn(context,{});const div=document.createElement("div");blockDom.mount(bdom,div);return div;}
__exports.renderToMarkup=renderToMarkup;function renderToMarkup(template,context={}){return markup(renderToString(template,context));}
return __exports;});;

/* /web/static/src/core/utils/scrolling.js */
odoo.define('@web/core/utils/scrolling',[],function(require){'use strict';let __exports={};__exports.isScrollableX=isScrollableX;function isScrollableX(el){if(el.scrollWidth>el.clientWidth&&el.clientWidth>0){return couldBeScrollableX(el);}
return false;}
__exports.couldBeScrollableX=couldBeScrollableX;function couldBeScrollableX(el){if(el){const overflow=getComputedStyle(el).getPropertyValue("overflow-x");if(/\bauto\b|\bscroll\b/.test(overflow)){return true;}}
return false;}
__exports.closestScrollableX=closestScrollableX;function closestScrollableX(el){if(!el){return null;}
if(isScrollableX(el)){return el;}
return closestScrollableX(el.parentElement);}
__exports.isScrollableY=isScrollableY;function isScrollableY(el){if(el&&el.scrollHeight>el.clientHeight&&el.clientHeight>0){return couldBeScrollableY(el);}
return false;}
__exports.couldBeScrollableY=couldBeScrollableY;function couldBeScrollableY(el){if(el){const overflow=getComputedStyle(el).getPropertyValue("overflow-y");if(/\bauto\b|\bscroll\b/.test(overflow)){return true;}}
return false;}
__exports.closestScrollableY=closestScrollableY;function closestScrollableY(el){if(!el){return null;}
if(isScrollableY(el)){return el;}
return closestScrollableY(el.parentElement);}
__exports.scrollTo=scrollTo;function scrollTo(element,options={}){const{behavior="auto",isAnchor=false,offset=0}=options;const scrollable=closestScrollableY(options.scrollable||element.parentElement);if(!scrollable){return;}
const scrollBottom=scrollable.getBoundingClientRect().bottom;const scrollTop=scrollable.getBoundingClientRect().top;const elementBottom=element.getBoundingClientRect().bottom;const elementTop=element.getBoundingClientRect().top;const scrollPromises=[];if(elementBottom>scrollBottom&&!isAnchor){scrollPromises.push(new Promise((resolve)=>{scrollable.addEventListener("scrollend",()=>resolve(),{once:true});}));scrollable.scrollTo({top:scrollable.scrollTop+
elementTop-
scrollBottom+
Math.ceil(element.getBoundingClientRect().height)+
offset,behavior,});}else if(elementTop<scrollTop||isAnchor){scrollPromises.push(new Promise((resolve)=>{scrollable.addEventListener("scrollend",()=>resolve(),{once:true});}));scrollable.scrollTo({top:scrollable.scrollTop-scrollTop+elementTop+offset,behavior,});if(options.isAnchor){const parentScrollable=closestScrollableY(scrollable.parentElement);if(parentScrollable){scrollPromises.push(scrollTo(scrollable,{behavior,isAnchor:true,scrollable:parentScrollable,}));}}}
return Promise.all(scrollPromises);}
__exports.compensateScrollbar=compensateScrollbar;function compensateScrollbar(el,add=true,isScrollElement=true,cssProperty="padding-right"){if(!el){return;}
const scrollableEl=isScrollElement?el:closestScrollableY(el.parentElement);if(!scrollableEl){return;}
const isRTL=scrollableEl.classList.contains(".o_rtl");if(isRTL){cssProperty=cssProperty.replace("right","left");}
el.style.removeProperty(cssProperty);if(!add){return;}
const style=window.getComputedStyle(el);const borderLeftWidth=Math.ceil(parseFloat(style.borderLeftWidth.replace("px","")));const borderRightWidth=Math.ceil(parseFloat(style.borderRightWidth.replace("px","")));const bordersWidth=borderLeftWidth+borderRightWidth;const newValue=parseInt(style[cssProperty])+
scrollableEl.offsetWidth-
scrollableEl.clientWidth-
bordersWidth;el.style.setProperty(cssProperty,`${newValue}px`,"important");}
__exports.getScrollingElement=getScrollingElement;function getScrollingElement(document=window.document){const baseScrollingElement=document.scrollingElement;if(isScrollableY(baseScrollingElement)){return baseScrollingElement;}
const bodyHeight=window.getComputedStyle(document.body).height;for(const el of document.body.children){if(bodyHeight-el.scrollHeight>1.5){continue;}
if(isScrollableY(el)){return el;}}
return baseScrollingElement;}
return __exports;});;

/* /web/static/src/core/utils/search.js */
odoo.define('@web/core/utils/search',['@web/core/utils/strings'],function(require){'use strict';let __exports={};const{unaccent}=require("@web/core/utils/strings");function match(pattern,strs){if(!Array.isArray(strs)){strs=[strs];}
let globalScore=0;for(const str of strs){globalScore=Math.max(globalScore,_match(pattern,str));}
return globalScore;}
function _match(pattern,str){let totalScore=0;let currentScore=0;const len=str.length;let patternIndex=0;pattern=unaccent(pattern,false);str=unaccent(str,false);for(let i=0;i<len;i++){if(str[i]===pattern[patternIndex]){patternIndex++;currentScore+=100+currentScore-i/200;}else{currentScore=0;}
totalScore=totalScore+currentScore;}
return patternIndex===pattern.length?totalScore:0;}
__exports.fuzzyLookup=fuzzyLookup;function fuzzyLookup(pattern,list,fn){const results=[];list.forEach((data)=>{const score=match(pattern,fn(data));if(score>0){results.push({score,elem:data});}});results.sort((a,b)=>b.score-a.score);return results.map((r)=>r.elem);}
__exports.fuzzyTest=fuzzyTest;function fuzzyTest(pattern,string){return _match(pattern,string)!==0;}
return __exports;});;

/* /web/static/src/core/utils/sortable.js */
odoo.define('@web/core/utils/sortable',['@web/core/utils/draggable_hook_builder','@web/core/utils/objects'],function(require){'use strict';let __exports={};const{DRAGGED_CLASS,makeDraggableHook:nativeMakeDraggableHook,}=require("@web/core/utils/draggable_hook_builder");const{pick}=require("@web/core/utils/objects");const hookParams={name:"useSortable",acceptedParams:{groups:[String,Function],connectGroups:[Boolean,Function],clone:[Boolean],placeholderClasses:[Object],applyChangeOnDrop:[Boolean],followingElementClasses:[Object],},defaultParams:{connectGroups:false,edgeScrolling:{speed:20,threshold:60},groupSelector:null,clone:true,placeholderClasses:[],applyChangeOnDrop:false,followingElementClasses:[],},onComputeParams({ctx,params}){ctx.groupSelector=params.groups||null;if(ctx.groupSelector){ctx.fullSelector=[ctx.groupSelector,ctx.fullSelector].join(" ");}
ctx.connectGroups=params.connectGroups;ctx.placeholderClone=params.clone;ctx.placeholderClasses=params.placeholderClasses;ctx.applyChangeOnDrop=params.applyChangeOnDrop;ctx.followingElementClasses=params.followingElementClasses;},onDragStart({ctx,addListener,addStyle,callHandler}){const onElementPointerEnter=(ev)=>{const element=ev.currentTarget;if(connectGroups||!groupSelector||current.group===element.closest(groupSelector)){const pos=current.placeHolder.compareDocumentPosition(element);if(pos===Node.DOCUMENT_POSITION_PRECEDING){element.before(current.placeHolder);}else if(pos===Node.DOCUMENT_POSITION_FOLLOWING){element.after(current.placeHolder);}}
callHandler("onElementEnter",{element});};const onElementPointerLeave=(ev)=>{const element=ev.currentTarget;callHandler("onElementLeave",{element});};const onElementComplexPointerEnter=(ev)=>{if(ctx.haveAlreadyChanged){return;}
const element=ev.currentTarget;const siblingArray=[...element.parentElement.children].filter((el)=>el===current.placeHolder||(el.matches(elementSelector)&&!el.classList.contains(DRAGGED_CLASS)));const elementIndex=siblingArray.indexOf(element);const placeholderIndex=siblingArray.indexOf(current.placeHolder);const isDirectSibling=Math.abs(elementIndex-placeholderIndex)===1;if(connectGroups||!groupSelector||current.group===element.closest(groupSelector)){const pos=current.placeHolder.compareDocumentPosition(element);if(isDirectSibling){if(pos===Node.DOCUMENT_POSITION_PRECEDING){element.before(current.placeHolder);ctx.haveAlreadyChanged=true;}else if(pos===Node.DOCUMENT_POSITION_FOLLOWING){element.after(current.placeHolder);ctx.haveAlreadyChanged=true;}}else{if(pos===Node.DOCUMENT_POSITION_FOLLOWING){element.before(current.placeHolder);ctx.haveAlreadyChanged=true;}else if(pos===Node.DOCUMENT_POSITION_PRECEDING){element.after(current.placeHolder);ctx.haveAlreadyChanged=true;}}}
callHandler("onElementEnter",{element});};const onElementComplexPointerLeave=(ev)=>{if(ctx.haveAlreadyChanged){return;}
const element=ev.currentTarget;const elementRect=element.getBoundingClientRect();const relatedElement=ev.relatedTarget;const relatedElementRect=element.getBoundingClientRect();const siblingArray=[...element.parentElement.children].filter((el)=>el===current.placeHolder||(el.matches(elementSelector)&&!el.classList.contains(DRAGGED_CLASS)));const pointerOnSiblings=siblingArray.indexOf(relatedElement)>-1;const elementIndex=siblingArray.indexOf(element);const isFirst=elementIndex===0;const isAbove=relatedElementRect.top<=elementRect.top;const isLast=elementIndex===siblingArray.length-1;const isBelow=relatedElementRect.bottom>=elementRect.bottom;const pos=current.placeHolder.compareDocumentPosition(element);if(!pointerOnSiblings){if(isFirst&&isAbove&&pos===Node.DOCUMENT_POSITION_PRECEDING){element.before(current.placeHolder);ctx.haveAlreadyChanged=true;}else if(isLast&&isBelow&&pos===Node.DOCUMENT_POSITION_FOLLOWING){element.after(current.placeHolder);ctx.haveAlreadyChanged=true;}}
callHandler("onElementLeave",{element});};const onGroupPointerEnter=(ev)=>{const group=ev.currentTarget;group.appendChild(current.placeHolder);callHandler("onGroupEnter",{group});};const onGroupPointerLeave=(ev)=>{const group=ev.currentTarget;callHandler("onGroupLeave",{group});};const{connectGroups,current,elementSelector,groupSelector,ref}=ctx;if(ctx.placeholderClone){const{width,height}=current.elementRect;addStyle(current.placeHolder,{visibility:"hidden",display:"block",width:`${width}px`,height:`${height}px`,});}
if(connectGroups&&groupSelector){for(const siblingGroup of ref.el.querySelectorAll(groupSelector)){addListener(siblingGroup,"pointerenter",onGroupPointerEnter);addListener(siblingGroup,"pointerleave",onGroupPointerLeave);}}
for(const siblingEl of ref.el.querySelectorAll(elementSelector)){if(siblingEl!==current.element&&siblingEl!==current.placeHolder){if(ctx.placeholderClone){addListener(siblingEl,"pointerenter",onElementPointerEnter);addListener(siblingEl,"pointerleave",onElementPointerLeave);}else{addListener(siblingEl,"pointerenter",onElementComplexPointerEnter);addListener(siblingEl,"pointerleave",onElementComplexPointerLeave);}}}
current.element.after(current.placeHolder);return pick(current,"element","group");},onDrag({ctx}){ctx.haveAlreadyChanged=false;},onDragEnd({ctx}){return pick(ctx.current,"element","group");},onDrop({ctx}){const{current,groupSelector}=ctx;const previous=current.placeHolder.previousElementSibling;const next=current.placeHolder.nextElementSibling;if(previous!==current.element&&next!==current.element){const element=current.element;if(ctx.applyChangeOnDrop){if(previous){previous.after(element);}else if(next){next.before(element);}}
return{element,group:current.group,previous,next,parent:groupSelector&&current.placeHolder.closest(groupSelector),};}},onWillStartDrag({ctx,addCleanup}){const{connectGroups,current,groupSelector}=ctx;if(groupSelector){current.group=current.element.closest(groupSelector);if(!connectGroups){current.container=current.group;}}
if(ctx.placeholderClone){current.placeHolder=current.element.cloneNode(false);}else{current.placeHolder=document.createElement("div");}
current.placeHolder.classList.add(...ctx.placeholderClasses);current.element.classList.add(...ctx.followingElementClasses);addCleanup(()=>current.element.classList.remove(...ctx.followingElementClasses));addCleanup(()=>current.placeHolder.remove());return pick(current,"element","group");},};const useSortable=__exports.useSortable=(sortableParams)=>{const{setupHooks}=sortableParams;delete sortableParams.setupHooks;return nativeMakeDraggableHook({...hookParams,setupHooks})(sortableParams);};return __exports;});;

/* /web/static/src/core/utils/sortable_owl.js */
odoo.define('@web/core/utils/sortable_owl',['@odoo/owl','@web/core/utils/timing','@web/core/utils/sortable'],function(require){'use strict';let __exports={};const{onWillUnmount,reactive,useEffect,useExternalListener}=require("@odoo/owl");const{useThrottleForAnimation}=require("@web/core/utils/timing");const{useSortable:nativeUseSortable}=require("@web/core/utils/sortable");__exports.useSortable=useSortable;function useSortable(params){return nativeUseSortable({...params,setupHooks:{addListener:useExternalListener,setup:useEffect,teardown:onWillUnmount,throttle:useThrottleForAnimation,wrapState:reactive,},});}
return __exports;});;

/* /web/static/src/core/utils/sortable_service.js */
odoo.define('@web/core/utils/sortable_service',['@web/core/registry','@web/core/utils/sortable','@web/core/utils/timing','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{useSortable}=require("@web/core/utils/sortable");const{throttleForAnimation}=require("@web/core/utils/timing");const{reactive}=require("@odoo/owl");const DEFAULT_SORTABLE_ID=Symbol.for("defaultSortable");const sortableService=__exports.sortableService={start(){const boundElements=new Map();return{create:(hookParams)=>{const element=hookParams.ref.el;const sortableId=hookParams.sortableId??DEFAULT_SORTABLE_ID;if(boundElements.has(element)){const boundElement=boundElements.get(element);if(sortableId in boundElement){return{enable(){return{cleanup:boundElement[sortableId],};},};}}
const setupFunctions=new Map();const cleanupFunctions=[];const cleanup=()=>{const boundElement=boundElements.get(element);if(sortableId in boundElement){delete boundElement[sortableId];if(boundElement.length===0){boundElements.delete(element);}}
cleanupFunctions.forEach((fn)=>fn());};const setupHooks={wrapState:reactive,throttle:throttleForAnimation,addListener:(el,type,listener)=>{el.addEventListener(type,listener);cleanupFunctions.push(()=>el.removeEventListener(type,listener));},setup:(setupFn,dependenciesFn)=>setupFunctions.set(setupFn,dependenciesFn),teardown:(fn)=>cleanupFunctions.push(fn),};useSortable({setupHooks,...hookParams});const boundElement=boundElements.get(element);if(boundElement){boundElement[sortableId]=cleanup;}else{boundElements.set(element,{[sortableId]:cleanup});}
return{enable(){setupFunctions.forEach((dependenciesFn,setupFn)=>setupFn(...dependenciesFn()));return{cleanup,};},};},};},};registry.category("services").add("sortable",sortableService);return __exports;});;

/* /web/static/src/core/utils/strings.js */
odoo.define('@web/core/utils/strings',[],function(require){'use strict';let __exports={};const nbsp=__exports.nbsp="\u00a0";__exports.escape=escape;function escape(str){if(str===undefined){return"";}
if(typeof str==="number"){return String(str);}
[["&","&amp;"],["<","&lt;"],[">","&gt;"],["'","&#x27;"],['"',"&quot;"],["`","&#x60;"],].forEach((pairs)=>{str=String(str).replaceAll(pairs[0],pairs[1]);});return str;}
__exports.escapeRegExp=escapeRegExp;function escapeRegExp(str){return str.replace(/[.*+?^${}()|[\]\\]/g,"\\$&");}
__exports.intersperse=intersperse;function intersperse(str,indices,separator=""){separator=separator||"";const result=[];let last=str.length;for(let i=0;i<indices.length;++i){let section=indices[i];if(section===-1||last<=0){break;}else if(section===0&&i===0){break;}else if(section===0){section=indices[--i];}
result.push(str.substring(last-section,last));last-=section;}
const s=str.substring(0,last);if(s){result.push(s);}
return result.reverse().join(separator);}
__exports.sprintf=sprintf;function sprintf(s,...values){if(values.length===1&&Object.prototype.toString.call(values[0])==="[object Object]"){const valuesDict=values[0];s=s.replace(/%\(([^)]+)\)s/g,(match,value)=>valuesDict[value]);}else if(values.length>0){s=s.replace(/%s/g,()=>values.shift());}
return s;}
__exports.capitalize=capitalize;function capitalize(s){return s?s[0].toUpperCase()+s.slice(1):"";}
const diacriticsMap={'\u0041':'A','\u24B6':'A','\uFF21':'A','\u00C0':'A','\u00C1':'A','\u00C2':'A','\u1EA6':'A','\u1EA4':'A','\u1EAA':'A','\u1EA8':'A','\u00C3':'A','\u0100':'A','\u0102':'A','\u1EB0':'A','\u1EAE':'A','\u1EB4':'A','\u1EB2':'A','\u0226':'A','\u01E0':'A','\u00C4':'A','\u01DE':'A','\u1EA2':'A','\u00C5':'A','\u01FA':'A','\u01CD':'A','\u0200':'A','\u0202':'A','\u1EA0':'A','\u1EAC':'A','\u1EB6':'A','\u1E00':'A','\u0104':'A','\u023A':'A','\u2C6F':'A','\uA732':'AA','\u00C6':'AE','\u01FC':'AE','\u01E2':'AE','\uA734':'AO','\uA736':'AU','\uA738':'AV','\uA73A':'AV','\uA73C':'AY','\u0042':'B','\u24B7':'B','\uFF22':'B','\u1E02':'B','\u1E04':'B','\u1E06':'B','\u0243':'B','\u0182':'B','\u0181':'B','\u0043':'C','\u24B8':'C','\uFF23':'C','\u0106':'C','\u0108':'C','\u010A':'C','\u010C':'C','\u00C7':'C','\u1E08':'C','\u0187':'C','\u023B':'C','\uA73E':'C','\u0044':'D','\u24B9':'D','\uFF24':'D','\u1E0A':'D','\u010E':'D','\u1E0C':'D','\u1E10':'D','\u1E12':'D','\u1E0E':'D','\u0110':'D','\u018B':'D','\u018A':'D','\u0189':'D','\uA779':'D','\u01F1':'DZ','\u01C4':'DZ','\u01F2':'Dz','\u01C5':'Dz','\u0045':'E','\u24BA':'E','\uFF25':'E','\u00C8':'E','\u00C9':'E','\u00CA':'E','\u1EC0':'E','\u1EBE':'E','\u1EC4':'E','\u1EC2':'E','\u1EBC':'E','\u0112':'E','\u1E14':'E','\u1E16':'E','\u0114':'E','\u0116':'E','\u00CB':'E','\u1EBA':'E','\u011A':'E','\u0204':'E','\u0206':'E','\u1EB8':'E','\u1EC6':'E','\u0228':'E','\u1E1C':'E','\u0118':'E','\u1E18':'E','\u1E1A':'E','\u0190':'E','\u018E':'E','\u0046':'F','\u24BB':'F','\uFF26':'F','\u1E1E':'F','\u0191':'F','\uA77B':'F','\u0047':'G','\u24BC':'G','\uFF27':'G','\u01F4':'G','\u011C':'G','\u1E20':'G','\u011E':'G','\u0120':'G','\u01E6':'G','\u0122':'G','\u01E4':'G','\u0193':'G','\uA7A0':'G','\uA77D':'G','\uA77E':'G','\u0048':'H','\u24BD':'H','\uFF28':'H','\u0124':'H','\u1E22':'H','\u1E26':'H','\u021E':'H','\u1E24':'H','\u1E28':'H','\u1E2A':'H','\u0126':'H','\u2C67':'H','\u2C75':'H','\uA78D':'H','\u0049':'I','\u24BE':'I','\uFF29':'I','\u00CC':'I','\u00CD':'I','\u00CE':'I','\u0128':'I','\u012A':'I','\u012C':'I','\u0130':'I','\u00CF':'I','\u1E2E':'I','\u1EC8':'I','\u01CF':'I','\u0208':'I','\u020A':'I','\u1ECA':'I','\u012E':'I','\u1E2C':'I','\u0197':'I','\u004A':'J','\u24BF':'J','\uFF2A':'J','\u0134':'J','\u0248':'J','\u004B':'K','\u24C0':'K','\uFF2B':'K','\u1E30':'K','\u01E8':'K','\u1E32':'K','\u0136':'K','\u1E34':'K','\u0198':'K','\u2C69':'K','\uA740':'K','\uA742':'K','\uA744':'K','\uA7A2':'K','\u004C':'L','\u24C1':'L','\uFF2C':'L','\u013F':'L','\u0139':'L','\u013D':'L','\u1E36':'L','\u1E38':'L','\u013B':'L','\u1E3C':'L','\u1E3A':'L','\u0141':'L','\u023D':'L','\u2C62':'L','\u2C60':'L','\uA748':'L','\uA746':'L','\uA780':'L','\u01C7':'LJ','\u01C8':'Lj','\u004D':'M','\u24C2':'M','\uFF2D':'M','\u1E3E':'M','\u1E40':'M','\u1E42':'M','\u2C6E':'M','\u019C':'M','\u004E':'N','\u24C3':'N','\uFF2E':'N','\u01F8':'N','\u0143':'N','\u00D1':'N','\u1E44':'N','\u0147':'N','\u1E46':'N','\u0145':'N','\u1E4A':'N','\u1E48':'N','\u0220':'N','\u019D':'N','\uA790':'N','\uA7A4':'N','\u01CA':'NJ','\u01CB':'Nj','\u004F':'O','\u24C4':'O','\uFF2F':'O','\u00D2':'O','\u00D3':'O','\u00D4':'O','\u1ED2':'O','\u1ED0':'O','\u1ED6':'O','\u1ED4':'O','\u00D5':'O','\u1E4C':'O','\u022C':'O','\u1E4E':'O','\u014C':'O','\u1E50':'O','\u1E52':'O','\u014E':'O','\u022E':'O','\u0230':'O','\u00D6':'O','\u022A':'O','\u1ECE':'O','\u0150':'O','\u01D1':'O','\u020C':'O','\u020E':'O','\u01A0':'O','\u1EDC':'O','\u1EDA':'O','\u1EE0':'O','\u1EDE':'O','\u1EE2':'O','\u1ECC':'O','\u1ED8':'O','\u01EA':'O','\u01EC':'O','\u00D8':'O','\u01FE':'O','\u0186':'O','\u019F':'O','\uA74A':'O','\uA74C':'O','\u01A2':'OI','\uA74E':'OO','\u0222':'OU','\u0050':'P','\u24C5':'P','\uFF30':'P','\u1E54':'P','\u1E56':'P','\u01A4':'P','\u2C63':'P','\uA750':'P','\uA752':'P','\uA754':'P','\u0051':'Q','\u24C6':'Q','\uFF31':'Q','\uA756':'Q','\uA758':'Q','\u024A':'Q','\u0052':'R','\u24C7':'R','\uFF32':'R','\u0154':'R','\u1E58':'R','\u0158':'R','\u0210':'R','\u0212':'R','\u1E5A':'R','\u1E5C':'R','\u0156':'R','\u1E5E':'R','\u024C':'R','\u2C64':'R','\uA75A':'R','\uA7A6':'R','\uA782':'R','\u0053':'S','\u24C8':'S','\uFF33':'S','\u1E9E':'S','\u015A':'S','\u1E64':'S','\u015C':'S','\u1E60':'S','\u0160':'S','\u1E66':'S','\u1E62':'S','\u1E68':'S','\u0218':'S','\u015E':'S','\u2C7E':'S','\uA7A8':'S','\uA784':'S','\u0054':'T','\u24C9':'T','\uFF34':'T','\u1E6A':'T','\u0164':'T','\u1E6C':'T','\u021A':'T','\u0162':'T','\u1E70':'T','\u1E6E':'T','\u0166':'T','\u01AC':'T','\u01AE':'T','\u023E':'T','\uA786':'T','\uA728':'TZ','\u0055':'U','\u24CA':'U','\uFF35':'U','\u00D9':'U','\u00DA':'U','\u00DB':'U','\u0168':'U','\u1E78':'U','\u016A':'U','\u1E7A':'U','\u016C':'U','\u00DC':'U','\u01DB':'U','\u01D7':'U','\u01D5':'U','\u01D9':'U','\u1EE6':'U','\u016E':'U','\u0170':'U','\u01D3':'U','\u0214':'U','\u0216':'U','\u01AF':'U','\u1EEA':'U','\u1EE8':'U','\u1EEE':'U','\u1EEC':'U','\u1EF0':'U','\u1EE4':'U','\u1E72':'U','\u0172':'U','\u1E76':'U','\u1E74':'U','\u0244':'U','\u0056':'V','\u24CB':'V','\uFF36':'V','\u1E7C':'V','\u1E7E':'V','\u01B2':'V','\uA75E':'V','\u0245':'V','\uA760':'VY','\u0057':'W','\u24CC':'W','\uFF37':'W','\u1E80':'W','\u1E82':'W','\u0174':'W','\u1E86':'W','\u1E84':'W','\u1E88':'W','\u2C72':'W','\u0058':'X','\u24CD':'X','\uFF38':'X','\u1E8A':'X','\u1E8C':'X','\u0059':'Y','\u24CE':'Y','\uFF39':'Y','\u1EF2':'Y','\u00DD':'Y','\u0176':'Y','\u1EF8':'Y','\u0232':'Y','\u1E8E':'Y','\u0178':'Y','\u1EF6':'Y','\u1EF4':'Y','\u01B3':'Y','\u024E':'Y','\u1EFE':'Y','\u005A':'Z','\u24CF':'Z','\uFF3A':'Z','\u0179':'Z','\u1E90':'Z','\u017B':'Z','\u017D':'Z','\u1E92':'Z','\u1E94':'Z','\u01B5':'Z','\u0224':'Z','\u2C7F':'Z','\u2C6B':'Z','\uA762':'Z','\u0061':'a','\u24D0':'a','\uFF41':'a','\u1E9A':'a','\u00E0':'a','\u00E1':'a','\u00E2':'a','\u1EA7':'a','\u1EA5':'a','\u1EAB':'a','\u1EA9':'a','\u00E3':'a','\u0101':'a','\u0103':'a','\u1EB1':'a','\u1EAF':'a','\u1EB5':'a','\u1EB3':'a','\u0227':'a','\u01E1':'a','\u00E4':'a','\u01DF':'a','\u1EA3':'a','\u00E5':'a','\u01FB':'a','\u01CE':'a','\u0201':'a','\u0203':'a','\u1EA1':'a','\u1EAD':'a','\u1EB7':'a','\u1E01':'a','\u0105':'a','\u2C65':'a','\u0250':'a','\uA733':'aa','\u00E6':'ae','\u01FD':'ae','\u01E3':'ae','\uA735':'ao','\uA737':'au','\uA739':'av','\uA73B':'av','\uA73D':'ay','\u0062':'b','\u24D1':'b','\uFF42':'b','\u1E03':'b','\u1E05':'b','\u1E07':'b','\u0180':'b','\u0183':'b','\u0253':'b','\u0063':'c','\u24D2':'c','\uFF43':'c','\u0107':'c','\u0109':'c','\u010B':'c','\u010D':'c','\u00E7':'c','\u1E09':'c','\u0188':'c','\u023C':'c','\uA73F':'c','\u2184':'c','\u0064':'d','\u24D3':'d','\uFF44':'d','\u1E0B':'d','\u010F':'d','\u1E0D':'d','\u1E11':'d','\u1E13':'d','\u1E0F':'d','\u0111':'d','\u018C':'d','\u0256':'d','\u0257':'d','\uA77A':'d','\u01F3':'dz','\u01C6':'dz','\u0065':'e','\u24D4':'e','\uFF45':'e','\u00E8':'e','\u00E9':'e','\u00EA':'e','\u1EC1':'e','\u1EBF':'e','\u1EC5':'e','\u1EC3':'e','\u1EBD':'e','\u0113':'e','\u1E15':'e','\u1E17':'e','\u0115':'e','\u0117':'e','\u00EB':'e','\u1EBB':'e','\u011B':'e','\u0205':'e','\u0207':'e','\u1EB9':'e','\u1EC7':'e','\u0229':'e','\u1E1D':'e','\u0119':'e','\u1E19':'e','\u1E1B':'e','\u0247':'e','\u025B':'e','\u01DD':'e','\u0066':'f','\u24D5':'f','\uFF46':'f','\u1E1F':'f','\u0192':'f','\uA77C':'f','\u0067':'g','\u24D6':'g','\uFF47':'g','\u01F5':'g','\u011D':'g','\u1E21':'g','\u011F':'g','\u0121':'g','\u01E7':'g','\u0123':'g','\u01E5':'g','\u0260':'g','\uA7A1':'g','\u1D79':'g','\uA77F':'g','\u0068':'h','\u24D7':'h','\uFF48':'h','\u0125':'h','\u1E23':'h','\u1E27':'h','\u021F':'h','\u1E25':'h','\u1E29':'h','\u1E2B':'h','\u1E96':'h','\u0127':'h','\u2C68':'h','\u2C76':'h','\u0265':'h','\u0195':'hv','\u0069':'i','\u24D8':'i','\uFF49':'i','\u00EC':'i','\u00ED':'i','\u00EE':'i','\u0129':'i','\u012B':'i','\u012D':'i','\u00EF':'i','\u1E2F':'i','\u1EC9':'i','\u01D0':'i','\u0209':'i','\u020B':'i','\u1ECB':'i','\u012F':'i','\u1E2D':'i','\u0268':'i','\u0131':'i','\u006A':'j','\u24D9':'j','\uFF4A':'j','\u0135':'j','\u01F0':'j','\u0249':'j','\u006B':'k','\u24DA':'k','\uFF4B':'k','\u1E31':'k','\u01E9':'k','\u1E33':'k','\u0137':'k','\u1E35':'k','\u0199':'k','\u2C6A':'k','\uA741':'k','\uA743':'k','\uA745':'k','\uA7A3':'k','\u006C':'l','\u24DB':'l','\uFF4C':'l','\u0140':'l','\u013A':'l','\u013E':'l','\u1E37':'l','\u1E39':'l','\u013C':'l','\u1E3D':'l','\u1E3B':'l','\u017F':'l','\u0142':'l','\u019A':'l','\u026B':'l','\u2C61':'l','\uA749':'l','\uA781':'l','\uA747':'l','\u01C9':'lj','\u006D':'m','\u24DC':'m','\uFF4D':'m','\u1E3F':'m','\u1E41':'m','\u1E43':'m','\u0271':'m','\u026F':'m','\u006E':'n','\u24DD':'n','\uFF4E':'n','\u01F9':'n','\u0144':'n','\u00F1':'n','\u1E45':'n','\u0148':'n','\u1E47':'n','\u0146':'n','\u1E4B':'n','\u1E49':'n','\u019E':'n','\u0272':'n','\u0149':'n','\uA791':'n','\uA7A5':'n','\u01CC':'nj','\u006F':'o','\u24DE':'o','\uFF4F':'o','\u00F2':'o','\u00F3':'o','\u00F4':'o','\u1ED3':'o','\u1ED1':'o','\u1ED7':'o','\u1ED5':'o','\u00F5':'o','\u1E4D':'o','\u022D':'o','\u1E4F':'o','\u014D':'o','\u1E51':'o','\u1E53':'o','\u014F':'o','\u022F':'o','\u0231':'o','\u00F6':'o','\u022B':'o','\u1ECF':'o','\u0151':'o','\u01D2':'o','\u020D':'o','\u020F':'o','\u01A1':'o','\u1EDD':'o','\u1EDB':'o','\u1EE1':'o','\u1EDF':'o','\u1EE3':'o','\u1ECD':'o','\u1ED9':'o','\u01EB':'o','\u01ED':'o','\u00F8':'o','\u01FF':'o','\u0254':'o','\uA74B':'o','\uA74D':'o','\u0275':'o','\u01A3':'oi','\u0223':'ou','\uA74F':'oo','\u0070':'p','\u24DF':'p','\uFF50':'p','\u1E55':'p','\u1E57':'p','\u01A5':'p','\u1D7D':'p','\uA751':'p','\uA753':'p','\uA755':'p','\u0071':'q','\u24E0':'q','\uFF51':'q','\u024B':'q','\uA757':'q','\uA759':'q','\u0072':'r','\u24E1':'r','\uFF52':'r','\u0155':'r','\u1E59':'r','\u0159':'r','\u0211':'r','\u0213':'r','\u1E5B':'r','\u1E5D':'r','\u0157':'r','\u1E5F':'r','\u024D':'r','\u027D':'r','\uA75B':'r','\uA7A7':'r','\uA783':'r','\u0073':'s','\u24E2':'s','\uFF53':'s','\u00DF':'s','\u015B':'s','\u1E65':'s','\u015D':'s','\u1E61':'s','\u0161':'s','\u1E67':'s','\u1E63':'s','\u1E69':'s','\u0219':'s','\u015F':'s','\u023F':'s','\uA7A9':'s','\uA785':'s','\u1E9B':'s','\u0074':'t','\u24E3':'t','\uFF54':'t','\u1E6B':'t','\u1E97':'t','\u0165':'t','\u1E6D':'t','\u021B':'t','\u0163':'t','\u1E71':'t','\u1E6F':'t','\u0167':'t','\u01AD':'t','\u0288':'t','\u2C66':'t','\uA787':'t','\uA729':'tz','\u0075':'u','\u24E4':'u','\uFF55':'u','\u00F9':'u','\u00FA':'u','\u00FB':'u','\u0169':'u','\u1E79':'u','\u016B':'u','\u1E7B':'u','\u016D':'u','\u00FC':'u','\u01DC':'u','\u01D8':'u','\u01D6':'u','\u01DA':'u','\u1EE7':'u','\u016F':'u','\u0171':'u','\u01D4':'u','\u0215':'u','\u0217':'u','\u01B0':'u','\u1EEB':'u','\u1EE9':'u','\u1EEF':'u','\u1EED':'u','\u1EF1':'u','\u1EE5':'u','\u1E73':'u','\u0173':'u','\u1E77':'u','\u1E75':'u','\u0289':'u','\u0076':'v','\u24E5':'v','\uFF56':'v','\u1E7D':'v','\u1E7F':'v','\u028B':'v','\uA75F':'v','\u028C':'v','\uA761':'vy','\u0077':'w','\u24E6':'w','\uFF57':'w','\u1E81':'w','\u1E83':'w','\u0175':'w','\u1E87':'w','\u1E85':'w','\u1E98':'w','\u1E89':'w','\u2C73':'w','\u0078':'x','\u24E7':'x','\uFF58':'x','\u1E8B':'x','\u1E8D':'x','\u0079':'y','\u24E8':'y','\uFF59':'y','\u1EF3':'y','\u00FD':'y','\u0177':'y','\u1EF9':'y','\u0233':'y','\u1E8F':'y','\u00FF':'y','\u1EF7':'y','\u1E99':'y','\u1EF5':'y','\u01B4':'y','\u024F':'y','\u1EFF':'y','\u007A':'z','\u24E9':'z','\uFF5A':'z','\u017A':'z','\u1E91':'z','\u017C':'z','\u017E':'z','\u1E93':'z','\u1E95':'z','\u01B6':'z','\u0225':'z','\u0240':'z','\u2C6C':'z','\uA763':'z',};__exports.unaccent=unaccent;function unaccent(str,caseSensitive){str=str.replace(/[^\u0000-\u007E]/g,function(accented){return diacriticsMap[accented]||accented;});return caseSensitive?str:str.toLowerCase();}
__exports.isEmail=isEmail;function isEmail(value){const re=/^(([^<>()\[\]\.,;:\s@\"]+(\.[^<>()\[\]\.,;:\s@\"]+)*)|(\".+\"))@(([^<>()[\]\.,;:\s@\"]+\.)+[^<>()[\]\.,;:\s@\"]{2,})$/i;return re.test(value);}
__exports.isNumeric=isNumeric;function isNumeric(value){return Boolean(value?.match(/^\d+$/));}
__exports.exprToBoolean=exprToBoolean;function exprToBoolean(str,trueIfEmpty=false){return str?!/^false|0$/i.test(str):trueIfEmpty;}
return __exports;});;

/* /web/static/src/core/utils/timing.js */
odoo.define('@web/core/utils/timing',['@web/core/browser/browser','@odoo/owl'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{onWillUnmount,useComponent}=require("@odoo/owl");__exports.batched=batched;function batched(callback,synchronize=()=>Promise.resolve()){let scheduled=false;return async(...args)=>{if(!scheduled){scheduled=true;await synchronize();scheduled=false;callback(...args);}};}
__exports.debounce=debounce;function debounce(func,delay,options){let handle;const funcName=func.name?func.name+" (debounce)":"debounce";const useAnimationFrame=delay==="animationFrame";const setFnName=useAnimationFrame?"requestAnimationFrame":"setTimeout";const clearFnName=useAnimationFrame?"cancelAnimationFrame":"clearTimeout";let lastArgs;let leading=false;let trailing=true;if(typeof options==="boolean"){leading=options;trailing=!options;}else if(options){leading=options.leading??leading;trailing=options.trailing??trailing;}
return Object.assign({[funcName](...args){return new Promise((resolve)=>{if(leading&&!handle){Promise.resolve(func.apply(this,args)).then(resolve);}else{lastArgs=args;}
browser[clearFnName](handle);handle=browser[setFnName](()=>{handle=null;if(trailing&&lastArgs){Promise.resolve(func.apply(this,lastArgs)).then(resolve);lastArgs=null;}},delay);});},}[funcName],{cancel(execNow=false){browser[clearFnName](handle);if(execNow&&lastArgs){func.apply(this,lastArgs);}},});}
__exports.setRecurringAnimationFrame=setRecurringAnimationFrame;function setRecurringAnimationFrame(callback){const handler=(timestamp)=>{callback(timestamp-lastTimestamp);lastTimestamp=timestamp;handle=browser.requestAnimationFrame(handler);};const stop=()=>{browser.cancelAnimationFrame(handle);};let lastTimestamp=browser.performance.now();let handle=browser.requestAnimationFrame(handler);return stop;}
__exports.throttleForAnimation=throttleForAnimation;function throttleForAnimation(func){let handle=null;const calls=new Set();const funcName=func.name?`${func.name} (throttleForAnimation)`:"throttleForAnimation";const pending=()=>{if(calls.size){handle=browser.requestAnimationFrame(pending);const{args,resolve}=[...calls].pop();calls.clear();Promise.resolve(func.apply(this,args)).then(resolve);}else{handle=null;}};return Object.assign({[funcName](...args){return new Promise((resolve)=>{const isNew=handle===null;if(isNew){handle=browser.requestAnimationFrame(pending);Promise.resolve(func.apply(this,args)).then(resolve);}else{calls.add({args,resolve});}});},}[funcName],{cancel(){browser.cancelAnimationFrame(handle);calls.clear();handle=null;},});}
__exports.useDebounced=useDebounced;function useDebounced(callback,delay,{execBeforeUnmount=false,immediate=false}={}){const component=useComponent();const debounced=debounce(callback.bind(component),delay,immediate);onWillUnmount(()=>debounced.cancel(execBeforeUnmount));return debounced;}
__exports.useThrottleForAnimation=useThrottleForAnimation;function useThrottleForAnimation(func){const component=useComponent();const throttledForAnimation=throttleForAnimation(func.bind(component));onWillUnmount(()=>throttledForAnimation.cancel());return throttledForAnimation;}
return __exports;});;

/* /web/static/src/core/utils/ui.js */
odoo.define('@web/core/utils/ui',[],function(require){'use strict';let __exports={};__exports.closest=closest;function closest(elements,targetPos){let closestEl=null;let closestDistance=Infinity;for(const el of elements){const rect=el.getBoundingClientRect();const distance=getQuadrance(rect,targetPos);if(!closestEl||distance<closestDistance){closestEl=el;closestDistance=distance;}}
return closestEl;}
__exports.isVisible=isVisible;function isVisible(el){if(el===document||el===window){return true;}
if(!el){return false;}
let _isVisible=false;if("offsetWidth"in el&&"offsetHeight"in el){_isVisible=el.offsetWidth>0&&el.offsetHeight>0;}else if("getBoundingClientRect"in el){const rect=el.getBoundingClientRect();_isVisible=rect.width>0&&rect.height>0;}
if(!_isVisible&&getComputedStyle(el).display==="contents"){for(const child of el.children){if(isVisible(child)){return true;}}}
return _isVisible;}
__exports.getQuadrance=getQuadrance;function getQuadrance(rect,pos){let q=0;if(pos.x<rect.x){q+=(rect.x-pos.x)**2;}else if(rect.x+rect.width<pos.x){q+=(pos.x-(rect.x+rect.width))**2;}
if(pos.y<rect.y){q+=(rect.y-pos.y)**2;}else if(rect.y+rect.height<pos.y){q+=(pos.y-(rect.y+rect.height))**2;}
return q;}
__exports.getVisibleElements=getVisibleElements;function getVisibleElements(activeElement,selector){const visibleElements=[];const elements=activeElement.querySelectorAll(selector);for(const el of elements){if(isVisible(el)){visibleElements.push(el);}}
return visibleElements;}
__exports.touching=touching;function touching(elements,targetRect){const r1={x:0,y:0,width:0,height:0,...targetRect};return[...elements].filter((el)=>{const r2=el.getBoundingClientRect();return(r2.x+r2.width>=r1.x&&r2.x<=r1.x+r1.width&&r2.y+r2.height>=r1.y&&r2.y<=r1.y+r1.height);});}
const TABABLE_SELECTOR=["[tabindex]","a","area","button","frame","iframe","input","object","select","textarea","details > summary:nth-child(1)",].map((sel)=>`${sel}:not([tabindex="-1"]):not(:disabled)`).join(",");__exports.getTabableElements=getTabableElements;function getTabableElements(container=document.body){const elements=[...container.querySelectorAll(TABABLE_SELECTOR)].filter(isVisible);const byTabIndex={};for(const el of[...elements]){if(!byTabIndex[el.tabIndex]){byTabIndex[el.tabIndex]=[];}
byTabIndex[el.tabIndex].push(el);}
const withTabIndexZero=byTabIndex[0]||[];delete byTabIndex[0];return[...Object.values(byTabIndex).flat(),...withTabIndexZero];}
__exports.getNextTabableElement=getNextTabableElement;function getNextTabableElement(container=document.body){const tabableElements=getTabableElements(container);const index=tabableElements.indexOf(document.activeElement);return index===-1?tabableElements[0]:tabableElements[index+1]||null;}
__exports.getPreviousTabableElement=getPreviousTabableElement;function getPreviousTabableElement(container=document.body){const tabableElements=getTabableElements(container);const index=tabableElements.indexOf(document.activeElement);return index===-1?tabableElements[tabableElements.length-1]:tabableElements[index-1]||null;}
__exports.addLoadingEffect=addLoadingEffect;function addLoadingEffect(btnEl){btnEl.classList.add("o_btn_loading","disabled","pe-none");btnEl.disabled=true;const loaderEl=document.createElement("span");loaderEl.classList.add("fa","fa-refresh","fa-spin","me-2");btnEl.prepend(loaderEl);return()=>{btnEl.classList.remove("o_btn_loading","disabled","pe-none");btnEl.disabled=false;loaderEl.remove();};}
return __exports;});;

/* /web/static/src/core/utils/urls.js */
odoo.define('@web/core/utils/urls',['@web/session','@web/core/browser/browser','@web/core/utils/objects'],function(require){'use strict';let __exports={};const{session}=require("@web/session");const{browser}=require("@web/core/browser/browser");const{shallowEqual}=require("@web/core/utils/objects");const{DateTime}=luxon;const RedirectionError=__exports.RedirectionError=class RedirectionError extends Error{}
__exports.objectToUrlEncodedString=objectToUrlEncodedString;function objectToUrlEncodedString(obj){return Object.entries(obj).map(([k,v])=>`${encodeURIComponent(k)}=${encodeURIComponent(v || "")}`).join("&");}
__exports.getOrigin=getOrigin;function getOrigin(origin){if(origin){origin=origin.replace(/\/+$/,"");}else{const{host,protocol}=browser.location;origin=`${protocol}//${host}`;}
return origin;}
__exports.url=url;function url(route,queryParams,options={}){const origin=getOrigin(options.origin??session.origin);if(!route){return origin;}
let queryString=objectToUrlEncodedString(queryParams||{});queryString=queryString.length>0?`?${queryString}`:queryString;let prefix=["http://","https://","//"].some((el)=>route.length>=el.length&&route.slice(0,el.length)===el);prefix=prefix?"":origin;return`${prefix}${route}${queryString}`;}
__exports.imageUrl=imageUrl;function imageUrl(model,id,field,{access_token,filename,height,unique,width}={}){let route=`/web/image/${model}/${id}/${field}`;if(width&&height){route=`${route}/${width}x${height}`;}
if(filename){route=`${route}/${filename}`;}
const urlParams={};if(access_token){Object.assign(urlParams,{access_token});}
if(unique){if(unique instanceof DateTime){urlParams.unique=unique.ts;}else{const dateTimeFromUnique=DateTime.fromSQL(unique);if(dateTimeFromUnique.isValid){urlParams.unique=dateTimeFromUnique.ts;}else if(typeof unique==="string"&&unique.length>0){urlParams.unique=unique;}}}
return url(route,urlParams);}
__exports.getDataURLFromFile=getDataURLFromFile;function getDataURLFromFile(file){if(!file){return Promise.reject();}
return new Promise((resolve,reject)=>{const reader=new FileReader();reader.addEventListener("load",()=>{if(reader.result==="data:"){resolve(`data:${file.type};base64,`);}else{resolve(reader.result);}});reader.addEventListener("abort",reject);reader.addEventListener("error",reject);reader.readAsDataURL(file);});}
__exports.redirect=redirect;function redirect(url){const{origin,pathname}=browser.location;const _url=new URL(url,`${origin}${pathname}`);if(_url.origin!==origin){throw new RedirectionError("Can't redirect to another origin");}
browser.location.assign(_url.href);}
__exports.compareUrls=compareUrls;function compareUrls(_url1,_url2){const url1=new URL(_url1);const url2=new URL(_url2);return(url1.origin===url2.origin&&url1.pathname===url2.pathname&&shallowEqual(Object.fromEntries(url1.searchParams),Object.fromEntries(url2.searchParams))&&url1.hash===url2.hash);}
return __exports;});;

/* /web/static/src/core/utils/xml.js */
odoo.define('@web/core/utils/xml',['@web/core/utils/arrays'],function(require){'use strict';let __exports={};const{isIterable}=require("@web/core/utils/arrays");const serializer=new XMLSerializer();const parser=new DOMParser();const xmlDocument=parser.parseFromString("<templates/>","text/xml");function hasParsingError(parsedDocument){return parsedDocument.getElementsByTagName("parsererror").length>0;}
__exports.parseXML=parseXML;function parseXML(str){const xml=parser.parseFromString(str,"text/xml");if(hasParsingError(xml)){throw new Error(`An error occured while parsing ${str}: ${xml.getElementsByTagName("parsererror")}`);}
return xml.documentElement;}
__exports.serializeXML=serializeXML;function serializeXML(xml){return serializer.serializeToString(xml);}
__exports.visitXML=visitXML;function visitXML(xml,callback){const visit=(el)=>{if(el){let didVisitChildren=false;const visitChildren=()=>{for(const child of el.children){visit(child);}
didVisitChildren=true;};const shouldVisitChildren=callback(el,visitChildren);if(shouldVisitChildren!==false&&!didVisitChildren){visitChildren();}}};const xmlDoc=typeof xml==="string"?parseXML(xml):xml;visit(xmlDoc);}
__exports.append=append;function append(parent,node){const nodes=Array.isArray(node)?node:[node];parent.append(...nodes.filter(Boolean));return parent;}
__exports.combineAttributes=combineAttributes;function combineAttributes(el,attr,parts,glue=" "){const allValues=[];if(el.hasAttribute(attr)){allValues.push(el.getAttribute(attr));}
parts=Array.isArray(parts)?parts:[parts];parts=parts.filter((part)=>!!part);allValues.push(...parts);el.setAttribute(attr,allValues.join(glue));}
__exports.createElement=createElement;function createElement(tagName,...args){const el=xmlDocument.createElement(tagName);for(const arg of args){if(!arg){continue;}
if(isIterable(arg)){el.append(...arg);}else if(typeof arg==="object"){for(const name in arg){el.setAttribute(name,arg[name]);}}}
return el;}
__exports.createTextNode=createTextNode;function createTextNode(data){return xmlDocument.createTextNode(data);}
__exports.extractAttributes=extractAttributes;function extractAttributes(el,attributes){const attrs=Object.create(null);for(const attr of attributes){attrs[attr]=el.getAttribute(attr)||"";el.removeAttribute(attr);}
return attrs;}
__exports.getTag=getTag;function getTag(node,lower=false){const tag=(node&&node.nodeName)||"";return lower?tag.toLowerCase():tag;}
__exports.setAttributes=setAttributes;function setAttributes(node,attributes){for(const[name,value]of Object.entries(attributes)){node.setAttribute(name,value);}}
return __exports;});;

/* /web/static/src/core/virtual_grid_hook.js */
odoo.define('@web/core/virtual_grid_hook',['@odoo/owl','@web/core/utils/objects','@web/core/utils/timing'],function(require){'use strict';let __exports={};const{useComponent,useEffect,useExternalListener}=require("@odoo/owl");const{pick,shallowEqual}=require("@web/core/utils/objects");const{useThrottleForAnimation}=require("@web/core/utils/timing");const BUFFER_COEFFICIENT=1;function getIndexes({sizes,start,span,prevStartIndex,bufferCoef=BUFFER_COEFFICIENT}){if(!sizes||!sizes.length){return[];}
if(sizes.at(-1)<span){return[0,sizes.length-1];}
const bufferSize=Math.round(span*bufferCoef);const bufferStart=start-bufferSize;const bufferEnd=start+span+bufferSize;let startIndex=prevStartIndex??0;while(startIndex>0&&sizes[startIndex]>bufferStart){startIndex--;}
while(startIndex<sizes.length-1&&sizes[startIndex]<=bufferStart){startIndex++;}
let endIndex=startIndex;while(endIndex<sizes.length-1&&(sizes[endIndex-1]??0)<bufferEnd){endIndex++;}
while(endIndex>startIndex&&(sizes[endIndex-1]??0)>=bufferEnd){endIndex--;}
return[startIndex,endIndex];}
__exports.useVirtualGrid=useVirtualGrid;function useVirtualGrid({scrollableRef,initialScroll,onChange,bufferCoef}){const comp=useComponent();onChange||=()=>comp.render();const current={scroll:{left:0,top:0,...initialScroll}};const computeColumnsIndexes=()=>{return getIndexes({sizes:current.summedColumnsWidths,start:Math.abs(current.scroll.left),span:window.innerWidth,prevStartIndex:current.columnsIndexes?.[0],bufferCoef,});};const computeRowsIndexes=()=>{return getIndexes({sizes:current.summedRowsHeights,start:current.scroll.top,span:window.innerHeight,prevStartIndex:current.rowsIndexes?.[0],bufferCoef,});};const throttledCompute=useThrottleForAnimation(()=>{const changed=[];const columnsVisibleIndexes=computeColumnsIndexes();if(!shallowEqual(columnsVisibleIndexes,current.columnsIndexes)){current.columnsIndexes=columnsVisibleIndexes;changed.push("columnsIndexes");}
const rowsVisibleIndexes=computeRowsIndexes();if(!shallowEqual(rowsVisibleIndexes,current.rowsIndexes)){current.rowsIndexes=rowsVisibleIndexes;changed.push("rowsIndexes");}
if(changed.length){onChange(pick(current,...changed));}});const scrollListener=(ev)=>{current.scroll.left=ev.target.scrollLeft;current.scroll.top=ev.target.scrollTop;throttledCompute();};useEffect((el)=>{el?.addEventListener("scroll",scrollListener);return()=>el?.removeEventListener("scroll",scrollListener);},()=>[scrollableRef.el]);useExternalListener(window,"resize",()=>throttledCompute());return{get columnsIndexes(){return current.columnsIndexes;},get rowsIndexes(){return current.rowsIndexes;},setColumnsWidths(widths){let acc=0;current.summedColumnsWidths=widths.map((w)=>(acc+=w));delete current.columnsIndexes;current.columnsIndexes=computeColumnsIndexes();},setRowsHeights(heights){let acc=0;current.summedRowsHeights=heights.map((h)=>(acc+=h));delete current.rowsIndexes;current.rowsIndexes=computeRowsIndexes();},};}
return __exports;});;

/* /web/static/src/views/fields/formatters.js */
odoo.define('@web/views/fields/formatters',['@web/core/l10n/dates','@web/core/l10n/localization','@web/core/l10n/translation','@web/core/registry','@web/core/utils/binary','@web/core/utils/numbers','@web/core/utils/strings','@odoo/owl','@web/core/currency'],function(require){'use strict';let __exports={};const{formatDate:_formatDate,formatDateTime:_formatDateTime}=require("@web/core/l10n/dates");const{localization:l10n}=require("@web/core/l10n/localization");const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{isBinarySize}=require("@web/core/utils/binary");const{formatFloat:formatFloatNumber,humanNumber,insertThousandsSep,}=require("@web/core/utils/numbers");const{escape,exprToBoolean}=require("@web/core/utils/strings");const{markup}=require("@odoo/owl");const{formatCurrency}=require("@web/core/currency");function humanSize(value){if(!value){return"";}
const suffix=value<1024?" "+_t("Bytes"):"b";return(humanNumber(value,{decimals:2,})+suffix);}
__exports.formatBinary=formatBinary;function formatBinary(value){if(!isBinarySize(value)){return humanSize(value.length/1.37);}
return value;}
__exports.formatBoolean=formatBoolean;function formatBoolean(value){return markup(`
        <div class="o-checkbox d-inline-block me-2">
            <input id="boolean_checkbox" type="checkbox" class="form-check-input" disabled ${
                value ? "checked" : ""
            }/>
            <label for="boolean_checkbox" class="form-check-label"/>
        </div>`);}
__exports.formatChar=formatChar;function formatChar(value,options){if(options&&options.isPassword){return"*".repeat(value?value.length:0);}
if(options&&options.escape){value=escape(value);}
return value;}
formatChar.extractOptions=({attrs})=>{return{isPassword:exprToBoolean(attrs.password),};};__exports.formatDate=formatDate;function formatDate(value,options){return _formatDate(value,options);}
formatDate.extractOptions=({options})=>{return{condensed:options.condensed};};__exports.formatDateTime=formatDateTime;function formatDateTime(value,options={}){if(options.showTime===false){return _formatDate(value,options);}
return _formatDateTime(value,options);}
formatDateTime.extractOptions=({attrs,options})=>{return{...formatDate.extractOptions({attrs,options}),showSeconds:exprToBoolean(options.show_seconds??true),showTime:exprToBoolean(options.show_time??true),};};__exports.formatFloat=formatFloat;function formatFloat(value,options={}){if(value===false){return"";}
if(!options.digits&&options.field){options.digits=options.field.digits;}
return formatFloatNumber(value,options);}
formatFloat.extractOptions=({attrs,options})=>{let digits;if(attrs.digits){digits=JSON.parse(attrs.digits);}else if(options.digits){digits=options.digits;}
const humanReadable=!!options.human_readable;const decimals=options.decimals||0;return{decimals,digits,humanReadable};};__exports.formatFloatFactor=formatFloatFactor;function formatFloatFactor(value,options={}){if(value===false){return"";}
const factor=options.factor||1;if(!options.digits&&options.field){options.digits=options.field.digits;}
return formatFloatNumber(value*factor,options);}
formatFloatFactor.extractOptions=({attrs,options})=>{return{...formatFloat.extractOptions({attrs,options}),factor:options.factor,};};__exports.formatFloatTime=formatFloatTime;function formatFloatTime(value,options={}){if(value===false){return"";}
const isNegative=value<0;value=Math.abs(value);let hour=Math.floor(value);const milliSecLeft=Math.round(value*3600000)-hour*3600000;let min=milliSecLeft/60000;if(options.displaySeconds){min=Math.floor(min);}else{min=Math.round(min);}
if(min===60){min=0;hour=hour+1;}
min=String(min).padStart(2,"0");if(!options.noLeadingZeroHour){hour=String(hour).padStart(2,"0");}
let sec="";if(options.displaySeconds){sec=":"+String(Math.floor((milliSecLeft%60000)/1000)).padStart(2,"0");}
return`${isNegative ? "-" : ""}${hour}:${min}${sec}`;}
formatFloatTime.extractOptions=({options})=>{return{displaySeconds:options.displaySeconds,};};__exports.formatInteger=formatInteger;function formatInteger(value,options={}){if(value===false||value===null){return"";}
if(options.isPassword){return"*".repeat(value.length);}
if(options.humanReadable){return humanNumber(value,options);}
const grouping=options.grouping||l10n.grouping;const thousandsSep="thousandsSep"in options?options.thousandsSep:l10n.thousandsSep;return insertThousandsSep(value.toFixed(0),thousandsSep,grouping);}
formatInteger.extractOptions=({attrs,options})=>{return{decimals:options.decimals||0,humanReadable:!!options.human_readable,isPassword:exprToBoolean(attrs.password),};};__exports.formatMany2one=formatMany2one;function formatMany2one(value,options){if(!value){value="";}else if(value[1]){value=value[1];}else{value=_t("Unnamed");}
if(options&&options.escape){value=encodeURIComponent(value);}
return value;}
__exports.formatX2many=formatX2many;function formatX2many(value){const count=value.currentIds.length;if(count===0){return _t("No records");}else if(count===1){return _t("1 record");}else{return _t("%s records",count);}}
__exports.formatMonetary=formatMonetary;function formatMonetary(value,options={}){if(value===false){return"";}
let currencyId=options.currencyId;if(!currencyId&&options.data){const currencyField=options.currencyField||(options.field&&options.field.currency_field)||"currency_id";const dataValue=options.data[currencyField];currencyId=Array.isArray(dataValue)?dataValue[0]:dataValue;}
return formatCurrency(value,currencyId,options);}
formatMonetary.extractOptions=({options})=>{return{noSymbol:options.no_symbol,currencyField:options.currency_field,};};__exports.formatPercentage=formatPercentage;function formatPercentage(value,options={}){value=value||0;options=Object.assign({trailingZeros:false,thousandsSep:""},options);if(!options.digits&&options.field){options.digits=options.field.digits;}
const formatted=formatFloatNumber(value*100,options);return`${formatted}${options.noSymbol ? "" : "%"}`;}
formatPercentage.extractOptions=formatFloat.extractOptions;function formatProperties(value,field){if(!value||!value.length){return"";}
return value.map((property)=>property["string"]).join(", ");}
__exports.formatReference=formatReference;function formatReference(value,options){return formatMany2one(value?[value.resId,value.displayName]:false,options);}
__exports.formatMany2oneReference=formatMany2oneReference;function formatMany2oneReference(value){return value?formatMany2one([value.resId,value.displayName]):"";}
__exports.formatSelection=formatSelection;function formatSelection(value,options={}){const selection=options.selection||(options.field&&options.field.selection)||[];const option=selection.find((option)=>option[0]===value);return option?option[1]:"";}
__exports.formatText=formatText;function formatText(value){return value?value.toString():"";}
__exports.formatHtml=formatHtml;function formatHtml(value){return value;}
__exports.formatJson=formatJson;function formatJson(value){return(value&&JSON.stringify(value))||"";}
registry.category("formatters").add("binary",formatBinary).add("boolean",formatBoolean).add("char",formatChar).add("date",formatDate).add("datetime",formatDateTime).add("float",formatFloat).add("float_factor",formatFloatFactor).add("float_time",formatFloatTime).add("html",formatHtml).add("integer",formatInteger).add("json",formatJson).add("many2one",formatMany2one).add("many2one_reference",formatMany2oneReference).add("one2many",formatX2many).add("many2many",formatX2many).add("monetary",formatMonetary).add("percentage",formatPercentage).add("properties",formatProperties).add("properties_definition",formatProperties).add("reference",formatReference).add("selection",formatSelection).add("text",formatText);return __exports;});;

/* /point_of_sale/static/src/utils.js */
odoo.define('@point_of_sale/utils',['@web/core/l10n/dates','@web/core/utils/numbers'],function(require){'use strict';let __exports={};const{parseDateTime}=require("@web/core/l10n/dates");const{roundDecimals,floatIsZero}=require("@web/core/utils/numbers");__exports.uuidv4=uuidv4;function uuidv4(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(c){const r=(Math.random()*16)|0,v=c=="x"?r:(r&0x3)|0x8;return v.toString(16);});}
__exports.deduceUrl=deduceUrl;function deduceUrl(url){const{protocol}=window.location;if(!url.includes("//")){url=`${protocol}//${url}`;}
if(url.indexOf(":",6)<0){url+=":"+(protocol==="https:"?443:8069);}
return url;}
__exports.constructFullProductName=constructFullProductName;function constructFullProductName(line){let attributeString="";if(line.attribute_value_ids&&line.attribute_value_ids.length>0){for(const value of line.attribute_value_ids){if(value.is_custom){const customValue=line.custom_attribute_value_ids.find((cus)=>cus.custom_product_template_attribute_value_id?.id==parseInt(value.id));if(customValue){attributeString+=`${value.attribute_id.name}: ${value.name}: ${customValue.custom_value}, `;}}else{attributeString+=`${value.name}, `;}}
attributeString=attributeString.slice(0,-2);attributeString=` (${attributeString})`;}
return`${line?.product_id?.display_name}${attributeString}`;}
__exports.random5Chars=random5Chars;function random5Chars(){let code="";while(code.length!=5){code=Math.random().toString(36).slice(2,7);}
return code;}
__exports.qrCodeSrc=qrCodeSrc;function qrCodeSrc(url,{size=200}={}){return`/report/barcode/QR/${encodeURIComponent(url)}?width=${size}&height=${size}`;}
__exports.getMax=getMax;function getMax(entries,{criterion=(x)=>x,inverted=false}={}){return entries.reduce((prev,current)=>{const res=criterion(prev)>criterion(current);return(inverted?!res:res)?prev:current;});}
__exports.getMin=getMin;function getMin(entries,options){return getMax(entries,{...options,inverted:true});}
__exports.getOnNotified=getOnNotified;function getOnNotified(bus,channel){if(!channel||typeof channel!=="string"){return()=>false;}
bus.addChannel(channel);return(notif,callback)=>bus.subscribe(`${channel}-${notif}`,callback);}
__exports.loadImage=loadImage;function loadImage(url,options={}){return new Promise((resolve,reject)=>{const img=new Image();img.addEventListener("load",()=>resolve(img));img.addEventListener("error",()=>{if(options.onError){options.onError();}
reject(new Error(`Failed to load image at ${url}`));});img.src=url;});}
__exports.loadAllImages=loadAllImages;function loadAllImages(el){if(!el){return Promise.resolve();}
const images=el.querySelectorAll("img");return Promise.all(Array.from(images).map((img)=>loadImage(img.src)));}
__exports.parseUTCString=parseUTCString;function parseUTCString(utcStr){return parseDateTime(utcStr,{format:"yyyy-MM-dd HH:mm:ss",tz:"utc"});}
__exports.floatCompare=floatCompare;function floatCompare(a,b,{decimals}={}){if(decimals===undefined){throw new Error("decimals must be provided");}
a=roundDecimals(a,decimals);b=roundDecimals(b,decimals);const delta=a-b;if(floatIsZero(delta,decimals)){return 0;}
return delta<0?-1:1;}
__exports.gte=gte;function gte(a,b,{decimals}={}){return floatCompare(a,b,{decimals})>=0;}
__exports.gt=gt;function gt(a,b,{decimals}={}){return floatCompare(a,b,{decimals})>0;}
__exports.lte=lte;function lte(a,b,{decimals}={}){return floatCompare(a,b,{decimals})<=0;}
__exports.lt=lt;function lt(a,b,{decimals}={}){return floatCompare(a,b,{decimals})<0;}
return __exports;});;

/* /bus/static/src/services/bus_service.js */
odoo.define('@bus/services/bus_service',['@web/core/browser/browser','@web/core/l10n/translation','@web/core/utils/concurrency','@web/core/registry','@web/session','@web/core/browser/feature_detection','@odoo/owl','@web/core/user'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{_t}=require("@web/core/l10n/translation");const{Deferred}=require("@web/core/utils/concurrency");const{registry}=require("@web/core/registry");const{session}=require("@web/session");const{isIosApp}=require("@web/core/browser/feature_detection");const{EventBus}=require("@odoo/owl");const{user}=require("@web/core/user");const INTERNAL_EVENTS=new Set(["initialized","outdated","log_debug","notification"]);const BACK_ONLINE_RECONNECT_DELAY=__exports.BACK_ONLINE_RECONNECT_DELAY=5000;const busService=__exports.busService={dependencies:["bus.parameters","localization","multi_tab","notification"],start(env,{multi_tab:multiTab,notification,"bus.parameters":params}){const bus=new EventBus();const notificationBus=new EventBus();const subscribeFnToWrapper=new Map();let worker;let workerState;let isActive=false;let isInitialized=false;let isUsingSharedWorker=browser.SharedWorker&&!isIosApp();let backOnlineTimeout;const startedAt=luxon.DateTime.now().set({milliseconds:0});const connectionInitializedDeferred=new Deferred();function send(action,data){if(!worker){return;}
const message={action,data};if(isUsingSharedWorker){worker.port.postMessage(message);}else{worker.postMessage(message);}}
function handleMessage(messageEv){const{type,data}=messageEv.data;switch(type){case"notification":{const notifications=data.map(({id,message})=>({id,...message}));multiTab.setSharedValue("last_notification_id",notifications.at(-1).id);for(const{id,type,payload}of notifications){notificationBus.trigger(type,{id,payload});busService._onMessage(id,type,payload);}
break;}
case"initialized":{isInitialized=true;connectionInitializedDeferred.resolve();break;}
case"worker_state_updated":workerState=data;break;case"log_debug":console.debug(...data);break;case"outdated":{multiTab.unregister();notification.add(_t("Save your work and refresh to get the latest updates and avoid potential issues."),{title:_t("The page is out of date"),type:"warning",sticky:true,buttons:[{name:_t("Refresh"),primary:true,onClick:()=>{browser.location.reload();},},],});break;}}
if(!INTERNAL_EVENTS.has(type)){bus.trigger(type,data);}}
function initializeWorkerConnection(){let uid=Array.isArray(session.user_id)?session.user_id[0]:user.userId;if(!uid&&uid!==undefined){uid=false;}
send("initialize_connection",{websocketURL:`${params.serverURL.replace("http", "ws")}/websocket?version=${
                    session.websocket_worker_version
                }`,db:session.db,debug:odoo.debug,lastNotificationId:multiTab.getSharedValue("last_notification_id",0),uid,startTs:startedAt.valueOf(),});}
function startWorker(){let workerURL=`${params.serverURL}/bus/websocket_worker_bundle?v=${session.websocket_worker_version}`;if(params.serverURL!==window.origin){const source=`importScripts("${workerURL}");`;workerURL="data:application/javascript;base64,"+window.btoa(source);}
const workerClass=isUsingSharedWorker?browser.SharedWorker:browser.Worker;worker=new workerClass(workerURL,{name:isUsingSharedWorker?"odoo:websocket_shared_worker":"odoo:websocket_worker",});worker.addEventListener("error",(e)=>{if(!isInitialized&&workerClass===browser.SharedWorker){console.warn('Error while loading "bus_service" SharedWorker, fallback on Worker.');isUsingSharedWorker=false;startWorker();}else if(!isInitialized){isInitialized=true;connectionInitializedDeferred.resolve();console.warn("Bus service failed to initialized.");}});if(isUsingSharedWorker){worker.port.start();worker.port.addEventListener("message",handleMessage);}else{worker.addEventListener("message",handleMessage);}
initializeWorkerConnection();}
browser.addEventListener("pagehide",({persisted})=>{if(!persisted){send("leave");}});browser.addEventListener("online",()=>{backOnlineTimeout=browser.setTimeout(()=>{if(isActive){send("start");}},BACK_ONLINE_RECONNECT_DELAY);},{capture:true});browser.addEventListener("offline",()=>{clearTimeout(backOnlineTimeout);send("stop");},{capture:true,});return{addEventListener:bus.addEventListener.bind(bus),addChannel:async(channel)=>{if(!worker){startWorker();}
await connectionInitializedDeferred;send("add_channel",channel);send("start");isActive=true;},deleteChannel:(channel)=>send("delete_channel",channel),forceUpdateChannels:()=>send("force_update_channels"),trigger:bus.trigger.bind(bus),removeEventListener:bus.removeEventListener.bind(bus),send:(eventName,data)=>send("send",{event_name:eventName,data}),start:async()=>{if(!worker){startWorker();}
await connectionInitializedDeferred;send("start");isActive=true;},stop:()=>{send("leave");isActive=false;},get isActive(){return isActive;},subscribe(notificationType,callback){const wrapper=({detail})=>{const{id,payload}=detail;callback(payload,{id});};subscribeFnToWrapper.set(callback,wrapper);notificationBus.addEventListener(notificationType,wrapper);},unsubscribe(notificationType,callback){notificationBus.removeEventListener(notificationType,subscribeFnToWrapper.get(callback));subscribeFnToWrapper.delete(callback);},startedAt,get workerState(){return workerState;},};},_onMessage(id,type,payload){},};registry.category("services").add("bus_service",busService);return __exports;});;

/* /bus/static/src/bus_parameters_service.js */
odoo.define('@bus/bus_parameters_service',['@web/core/registry'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const busParametersService=__exports.busParametersService={start(){return{serverURL:window.origin,};},};registry.category("services").add("bus.parameters",busParametersService);return __exports;});;

/* /bus/static/src/multi_tab_service.js */
odoo.define('@bus/multi_tab_service',['@web/core/registry','@web/core/browser/browser','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{browser}=require("@web/core/browser/browser");const{EventBus}=require("@odoo/owl");let multiTabId=0;const multiTabService=__exports.multiTabService={start(){const bus=new EventBus();const TAB_HEARTBEAT_PERIOD=10000;const MAIN_TAB_HEARTBEAT_PERIOD=1500;const HEARTBEAT_OUT_OF_DATE_PERIOD=5000;const HEARTBEAT_KILL_OLD_PERIOD=15000;const PRIVATE_LOCAL_STORAGE_KEYS=["main","heartbeat"];let _isOnMainTab=false;let lastHeartbeat=0;let heartbeatTimeout;const sanitizedOrigin=location.origin.replace(/:\/{0,2}/g,"_");const localStoragePrefix=`${this.name}.${sanitizedOrigin}.`;const now=new Date().getTime();const tabId=`${this.name}${multiTabId++}:${now}`;function generateLocalStorageKey(baseKey){return localStoragePrefix+baseKey;}
function getItemFromStorage(key,defaultValue){const item=browser.localStorage.getItem(generateLocalStorageKey(key));try{return item?JSON.parse(item):defaultValue;}catch{return item;}}
function setItemInStorage(key,value){browser.localStorage.setItem(generateLocalStorageKey(key),JSON.stringify(value));}
function startElection(){if(_isOnMainTab){return;}
const now=new Date().getTime();const lastPresenceByTab=getItemFromStorage("lastPresenceByTab",{});const heartbeatKillOld=now-HEARTBEAT_KILL_OLD_PERIOD;let newMain;for(const[tab,lastPresence]of Object.entries(lastPresenceByTab)){if(lastPresence<heartbeatKillOld){continue;}
newMain=tab;break;}
if(newMain===tabId){lastHeartbeat=now;setItemInStorage("heartbeat",lastHeartbeat);setItemInStorage("main",true);_isOnMainTab=true;bus.trigger("become_main_tab");delete lastPresenceByTab[newMain];setItemInStorage("lastPresenceByTab",lastPresenceByTab);}}
function heartbeat(){const now=new Date().getTime();let heartbeatValue=getItemFromStorage("heartbeat",0);const lastPresenceByTab=getItemFromStorage("lastPresenceByTab",{});if(heartbeatValue+HEARTBEAT_OUT_OF_DATE_PERIOD<now){startElection();heartbeatValue=getItemFromStorage("heartbeat",0);}
if(_isOnMainTab){const cleanedTabs={};for(const[tabId,lastPresence]of Object.entries(lastPresenceByTab)){if(lastPresence+HEARTBEAT_KILL_OLD_PERIOD>now){cleanedTabs[tabId]=lastPresence;}}
if(heartbeatValue!==lastHeartbeat){_isOnMainTab=false;lastHeartbeat=0;lastPresenceByTab[tabId]=now;setItemInStorage("lastPresenceByTab",lastPresenceByTab);bus.trigger("no_longer_main_tab");}else{lastHeartbeat=now;setItemInStorage("heartbeat",now);setItemInStorage("lastPresenceByTab",cleanedTabs);}}else{lastPresenceByTab[tabId]=now;setItemInStorage("lastPresenceByTab",lastPresenceByTab);}
const hbPeriod=_isOnMainTab?MAIN_TAB_HEARTBEAT_PERIOD:TAB_HEARTBEAT_PERIOD;heartbeatTimeout=browser.setTimeout(heartbeat,hbPeriod);}
function onStorage({key,newValue}){if(key===generateLocalStorageKey("main")&&!newValue){startElection();}
if(PRIVATE_LOCAL_STORAGE_KEYS.includes(key)){return;}
if(key&&key.includes(localStoragePrefix)){const baseKey=key.replace(localStoragePrefix,"");bus.trigger("shared_value_updated",{key:baseKey,newValue});}}
function unregister(){clearTimeout(heartbeatTimeout);const lastPresenceByTab=getItemFromStorage("lastPresenceByTab",{});delete lastPresenceByTab[tabId];setItemInStorage("lastPresenceByTab",lastPresenceByTab);if(_isOnMainTab){_isOnMainTab=false;bus.trigger("no_longer_main_tab");browser.localStorage.removeItem(generateLocalStorageKey("main"));}}
browser.addEventListener("pagehide",unregister);browser.addEventListener("storage",onStorage);const lastPresenceByTab=getItemFromStorage("lastPresenceByTab",{});lastPresenceByTab[tabId]=now;setItemInStorage("lastPresenceByTab",lastPresenceByTab);if(!getItemFromStorage("main")){startElection();}
heartbeat();return{bus,get currentTabId(){return tabId;},isOnMainTab(){return _isOnMainTab;},getSharedValue(key,defaultValue){return getItemFromStorage(key,defaultValue);},setSharedValue(key,value){if(value===undefined){return this.removeSharedValue(key);}
setItemInStorage(key,value);},removeSharedValue(key){browser.localStorage.removeItem(generateLocalStorageKey(key));},unregister:unregister,};},};registry.category("services").add("multi_tab",multiTabService);return __exports;});;

/* /bus/static/src/workers/websocket_worker.js */
odoo.define('@bus/workers/websocket_worker',['@bus/workers/websocket_worker_utils'],function(require){'use strict';let __exports={};const{debounce,Deferred}=require("@bus/workers/websocket_worker_utils");const WEBSOCKET_CLOSE_CODES=__exports.WEBSOCKET_CLOSE_CODES=Object.freeze({CLEAN:1000,GOING_AWAY:1001,PROTOCOL_ERROR:1002,INCORRECT_DATA:1003,ABNORMAL_CLOSURE:1006,INCONSISTENT_DATA:1007,MESSAGE_VIOLATING_POLICY:1008,MESSAGE_TOO_BIG:1009,EXTENSION_NEGOTIATION_FAILED:1010,SERVER_ERROR:1011,RESTART:1012,TRY_LATER:1013,BAD_GATEWAY:1014,SESSION_EXPIRED:4001,KEEP_ALIVE_TIMEOUT:4002,RECONNECTING:4003,});const WORKER_STATE=__exports.WORKER_STATE=Object.freeze({CONNECTED:"CONNECTED",DISCONNECTED:"DISCONNECTED",IDLE:"IDLE",CONNECTING:"CONNECTING",});const MAXIMUM_RECONNECT_DELAY=60000;const WebsocketWorker=__exports.WebsocketWorker=class WebsocketWorker{INITIAL_RECONNECT_DELAY=1000;RECONNECT_JITTER=1000;constructor(){this.newestStartTs=undefined;this.websocketURL="";this.currentUID=null;this.currentDB=null;this.isWaitingForNewUID=true;this.channelsByClient=new Map();this.connectRetryDelay=this.INITIAL_RECONNECT_DELAY;this.connectTimeout=null;this.debugModeByClient=new Map();this.isDebug=false;this.active=true;this.state=WORKER_STATE.IDLE;this.isReconnecting=false;this.lastChannelSubscription=null;this.firstSubscribeDeferred=new Deferred();this.lastNotificationId=0;this.messageWaitQueue=[];this._forceUpdateChannels=debounce(this._forceUpdateChannels,300);this._debouncedUpdateChannels=debounce(this._updateChannels,300);this._debouncedSendToServer=debounce(this._sendToServer,300);this._onWebsocketClose=this._onWebsocketClose.bind(this);this._onWebsocketError=this._onWebsocketError.bind(this);this._onWebsocketMessage=this._onWebsocketMessage.bind(this);this._onWebsocketOpen=this._onWebsocketOpen.bind(this);}
broadcast(type,data){this._logDebug("broadcast",type,data);for(const client of this.channelsByClient.keys()){client.postMessage({type,data:data?JSON.parse(JSON.stringify(data)):undefined});}}
registerClient(messagePort){messagePort.onmessage=(ev)=>{this._onClientMessage(messagePort,ev.data);};this.channelsByClient.set(messagePort,[]);}
sendToClient(client,type,data){this._logDebug("sendToClient",type,data);client.postMessage({type,data:data?JSON.parse(JSON.stringify(data)):undefined});}
_onClientMessage(client,{action,data}){this._logDebug("_onClientMessage",action,data);switch(action){case"send":{if(data["event_name"]==="update_presence"){this._debouncedSendToServer(data);}else{this._sendToServer(data);}
return;}
case"start":return this._start();case"stop":return this._stop();case"leave":return this._unregisterClient(client);case"add_channel":return this._addChannel(client,data);case"delete_channel":return this._deleteChannel(client,data);case"force_update_channels":return this._forceUpdateChannels();case"initialize_connection":return this._initializeConnection(client,data);}}
_addChannel(client,channel){const clientChannels=this.channelsByClient.get(client);if(!clientChannels.includes(channel)){clientChannels.push(channel);this.channelsByClient.set(client,clientChannels);this._debouncedUpdateChannels();}}
_deleteChannel(client,channel){const clientChannels=this.channelsByClient.get(client);if(!clientChannels){return;}
const channelIndex=clientChannels.indexOf(channel);if(channelIndex!==-1){clientChannels.splice(channelIndex,1);this._debouncedUpdateChannels();}}
_forceUpdateChannels(){this._updateChannels({force:true});}
_unregisterClient(client){this.channelsByClient.delete(client);this.debugModeByClient.delete(client);this.isDebug=[...this.debugModeByClient.values()].some(Boolean);this._debouncedUpdateChannels();}
_initializeConnection(client,{db,debug,lastNotificationId,uid,websocketURL,startTs}){if(this.newestStartTs&&this.newestStartTs>startTs){this.debugModeByClient.set(client,debug);this.isDebug=[...this.debugModeByClient.values()].some(Boolean);this.sendToClient(client,"update_state",this.state);this.sendToClient(client,"initialized");return;}
this.newestStartTs=startTs;this.websocketURL=websocketURL;this.lastNotificationId=lastNotificationId;this.debugModeByClient.set(client,debug);this.isDebug=[...this.debugModeByClient.values()].some(Boolean);const isCurrentUserKnown=uid!==undefined;if(this.isWaitingForNewUID&&isCurrentUserKnown){this.isWaitingForNewUID=false;this.currentUID=uid;}
if((this.currentUID!==uid&&isCurrentUserKnown)||this.currentDB!==db){this.currentUID=uid;this.currentDB=db;if(this.websocket){this.websocket.close(WEBSOCKET_CLOSE_CODES.CLEAN);}
this.channelsByClient.forEach((_,key)=>this.channelsByClient.set(key,[]));}
this.sendToClient(client,"update_state",this.state);this.sendToClient(client,"initialized");if(!this.active){this.sendToClient(client,"outdated");}}
_isWebsocketConnected(){return this.websocket&&this.websocket.readyState===1;}
_isWebsocketConnecting(){return this.websocket&&this.websocket.readyState===0;}
_isWebsocketClosing(){return this.websocket&&this.websocket.readyState===2;}
_onWebsocketClose({code,reason}){this._logDebug("_onWebsocketClose",code,reason);this._updateState(WORKER_STATE.DISCONNECTED);this.lastChannelSubscription=null;this.firstSubscribeDeferred=new Deferred();if(this.isReconnecting){return;}
this.broadcast("disconnect",{code,reason});if(code===WEBSOCKET_CLOSE_CODES.CLEAN){if(reason==="OUTDATED_VERSION"){console.warn("Worker deactivated due to an outdated version.");this.active=false;this.broadcast("outdated");}
return;}
this.broadcast("reconnecting",{closeCode:code});this.isReconnecting=true;if(code===WEBSOCKET_CLOSE_CODES.KEEP_ALIVE_TIMEOUT){this.connectRetryDelay=0;}
if(code===WEBSOCKET_CLOSE_CODES.SESSION_EXPIRED){this.isWaitingForNewUID=true;}
this._retryConnectionWithDelay();}
_onWebsocketError(){this._logDebug("_onWebsocketError");this._retryConnectionWithDelay();}
_onWebsocketMessage(messageEv){const notifications=JSON.parse(messageEv.data);this._logDebug("_onWebsocketMessage",notifications);this.lastNotificationId=notifications[notifications.length-1].id;this.broadcast("notification",notifications);}
_logDebug(title,...args){const clientsInDebug=[...this.debugModeByClient.keys()].filter((client)=>this.debugModeByClient.get(client));for(const client of clientsInDebug){client.postMessage({type:"log_debug",data:[`%c${new Date().toLocaleString()} - [${title}]`,"color: #c6e; font-weight: bold;",...args,],});}}
_onWebsocketOpen(){this._logDebug("_onWebsocketOpen");this._updateState(WORKER_STATE.CONNECTED);this.broadcast(this.isReconnecting?"reconnect":"connect");this._debouncedUpdateChannels();this.connectRetryDelay=this.INITIAL_RECONNECT_DELAY;this.connectTimeout=null;this.isReconnecting=false;this.firstSubscribeDeferred.then(()=>{this.messageWaitQueue.forEach((msg)=>this.websocket.send(msg));this.messageWaitQueue=[];});}
_retryConnectionWithDelay(){this.connectRetryDelay=Math.min(this.connectRetryDelay*1.5,MAXIMUM_RECONNECT_DELAY)+
this.RECONNECT_JITTER*Math.random();this._logDebug("_retryConnectionWithDelay",this.connectRetryDelay);this.connectTimeout=setTimeout(this._start.bind(this),this.connectRetryDelay);}
_sendToServer(message){this._logDebug("_sendToServer",message);const payload=JSON.stringify(message);if(!this._isWebsocketConnected()){if(message["event_name"]==="subscribe"){this.messageWaitQueue=this.messageWaitQueue.filter((msg)=>JSON.parse(msg).event_name!=="subscribe");this.messageWaitQueue.unshift(payload);}else{this.messageWaitQueue.push(payload);}}else{if(message["event_name"]==="subscribe"){this.websocket.send(payload);}else{this.firstSubscribeDeferred.then(()=>this.websocket.send(payload));}}}
_removeWebsocketListeners(){this.websocket?.removeEventListener("open",this._onWebsocketOpen);this.websocket?.removeEventListener("message",this._onWebsocketMessage);this.websocket?.removeEventListener("error",this._onWebsocketError);this.websocket?.removeEventListener("close",this._onWebsocketClose);}
_start(){this._logDebug("_start");if(!this.active||this._isWebsocketConnected()||this._isWebsocketConnecting()){return;}
this._removeWebsocketListeners();if(this._isWebsocketClosing()){this.lastChannelSubscription=null;this.broadcast("disconnect",{code:WEBSOCKET_CLOSE_CODES.ABNORMAL_CLOSURE});}
this._updateState(WORKER_STATE.CONNECTING);this.websocket=new WebSocket(this.websocketURL);this.websocket.addEventListener("open",this._onWebsocketOpen);this.websocket.addEventListener("error",this._onWebsocketError);this.websocket.addEventListener("message",this._onWebsocketMessage);this.websocket.addEventListener("close",this._onWebsocketClose);}
_stop(){this._logDebug("_stop");clearTimeout(this.connectTimeout);this.connectRetryDelay=this.INITIAL_RECONNECT_DELAY;this.isReconnecting=false;this.lastChannelSubscription=null;this.websocket?.close();this._removeWebsocketListeners();}
_updateChannels({force=false}={}){const allTabsChannels=[...new Set([].concat.apply([],[...this.channelsByClient.values()])),].sort();const allTabsChannelsString=JSON.stringify(allTabsChannels);const shouldUpdateChannelSubscription=allTabsChannelsString!==this.lastChannelSubscription;if(force||shouldUpdateChannelSubscription){this.lastChannelSubscription=allTabsChannelsString;this._sendToServer({event_name:"subscribe",data:{channels:allTabsChannels,last:this.lastNotificationId},});this.firstSubscribeDeferred.resolve();}}
_updateState(newState){this.state=newState;this.broadcast("worker_state_updated",newState);}}
return __exports;});;

/* /bus/static/src/workers/websocket_worker_script.js */
odoo.define('@bus/workers/websocket_worker_script',['@bus/workers/websocket_worker'],function(require){'use strict';let __exports={};const{WebsocketWorker}=require("@bus/workers/websocket_worker");(function(){const websocketWorker=new WebsocketWorker();if(self.name.includes("shared")){onconnect=function(ev){const currentClient=ev.ports[0];websocketWorker.registerClient(currentClient);};}else{websocketWorker.registerClient(self);}})();return __exports;});;

/* /bus/static/src/workers/websocket_worker_utils.js */
odoo.define('@bus/workers/websocket_worker_utils',[],function(require){'use strict';let __exports={};__exports.debounce=debounce;function debounce(func,wait,immediate){let timeout;return function(){const context=this;const args=arguments;function later(){timeout=null;if(!immediate){func.apply(context,args);}}
const callNow=immediate&&!timeout;clearTimeout(timeout);timeout=setTimeout(later,wait);if(callNow){func.apply(context,args);}};}
const Deferred=__exports.Deferred=class Deferred extends Promise{constructor(){let resolve;let reject;const prom=new Promise((res,rej)=>{resolve=res;reject=rej;});return Object.assign(prom,{resolve,reject});}}
return __exports;});;

/* /barcodes/static/src/barcode_service.js */
odoo.define('@barcodes/barcode_service',['@web/core/browser/feature_detection','@web/core/registry','@web/session','@odoo/owl'],function(require){'use strict';let __exports={};const{isBrowserChrome,isMobileOS}=require("@web/core/browser/feature_detection");const{registry}=require("@web/core/registry");const{session}=require("@web/session");const{EventBus,whenReady}=require("@odoo/owl");function isEditable(element){return element.matches('input,textarea,[contenteditable="true"]');}
function makeBarcodeInput(){const inputEl=document.createElement('input');inputEl.setAttribute("style","position:fixed;top:50%;transform:translateY(-50%);z-index:-1;opacity:0");inputEl.setAttribute("autocomplete","off");inputEl.setAttribute("inputmode","none");inputEl.classList.add("o-barcode-input");inputEl.setAttribute('name','barcode');return inputEl;}
const barcodeService=__exports.barcodeService={maxTimeBetweenKeysInMs:session.max_time_between_keys_in_ms||150,isMobileChrome:isMobileOS()&&isBrowserChrome(),cleanBarcode:function(barcode){return barcode.replace(/Alt|Shift|Control/g,'');},start(){const bus=new EventBus();let timeout=null;let bufferedBarcode="";let currentTarget=null;let barcodeInput=null;function handleBarcode(barcode,target){bus.trigger('barcode_scanned',{barcode,target});if(target.getAttribute('barcode_events')==="true"){const barcodeScannedEvent=new CustomEvent("barcode_scanned",{detail:{barcode,target}});target.dispatchEvent(barcodeScannedEvent);}}
function checkBarcode(ev){let str=barcodeInput?barcodeInput.value:bufferedBarcode;str=barcodeService.cleanBarcode(str);if(str.length>=3){if(ev){ev.preventDefault();}
handleBarcode(str,currentTarget);}
if(barcodeInput){barcodeInput.value="";}
bufferedBarcode="";currentTarget=null;}
function keydownHandler(ev){if(!ev.key){return;}
const isSpecialKey=!['Control','Alt'].includes(ev.key)&&(ev.key.length>1||ev.metaKey);const isEndCharacter=ev.key.match(/(Enter|Tab)/);if(isSpecialKey&&!isEndCharacter){return;}
currentTarget=ev.target;if(currentTarget!==barcodeInput&&isEditable(currentTarget)&&!currentTarget.dataset.enableBarcode&&currentTarget.getAttribute("barcode_events")!=="true"){return;}
clearTimeout(timeout);if(isEndCharacter){checkBarcode(ev);}else{bufferedBarcode+=ev.key;timeout=setTimeout(checkBarcode,barcodeService.maxTimeBetweenKeysInMs);}}
function mobileChromeHandler(ev){if(ev.key==="Unidentified"){return;}
if(document.activeElement&&!document.activeElement.matches('input:not([type]), input[type="text"], textarea, [contenteditable], '+'[type="email"], [type="number"], [type="password"], [type="tel"], [type="search"]')){barcodeInput.focus();}
keydownHandler(ev);}
whenReady(()=>{const isMobileChrome=barcodeService.isMobileChrome;if(isMobileChrome){barcodeInput=makeBarcodeInput();document.body.appendChild(barcodeInput);}
const handler=isMobileChrome?mobileChromeHandler:keydownHandler;document.body.addEventListener('keydown',handler);});return{bus,};},};registry.category("services").add("barcode",barcodeService);return __exports;});;

/* /barcodes/static/src/js/barcode_parser.js */
odoo.define('@barcodes/js/barcode_parser',[],function(require){'use strict';let __exports={};const BarcodeParser=__exports.BarcodeParser=class BarcodeParser{static barcodeNomenclatureFields=["name","rule_ids","upc_ean_conv"];static barcodeRuleFields=["name","sequence","type","encoding","pattern","alias"];static async fetchNomenclature(orm,id){const[nomenclature]=await orm.read("barcode.nomenclature",[id],this.barcodeNomenclatureFields);let rules=await orm.searchRead("barcode.rule",[["barcode_nomenclature_id","=",id]],this.barcodeRuleFields);rules=rules.sort((a,b)=>{return a.sequence-b.sequence;});nomenclature.rules=rules;return nomenclature;}
constructor(){this.setup(...arguments);}
setup({nomenclature}){this.nomenclature=nomenclature;}
get_barcode_check_digit(numericBarcode){let oddsum=0,evensum=0,total=0;const code=numericBarcode.split('').reverse();code.shift();for(let i=0;i<code.length;i++){if(i%2===0){evensum+=parseInt(code[i]);}else{oddsum+=parseInt(code[i]);}}
total=evensum*3+oddsum;return(10-total%10)%10;}
check_encoding(barcode,encoding){if(encoding==='any'){return true;}
const barcodeSizes={ean8:8,ean13:13,upca:12,};return barcode.length===barcodeSizes[encoding]&&/^\d+$/.test(barcode)&&this.get_barcode_check_digit(barcode)===parseInt(barcode[barcode.length-1]);}
sanitize_ean(ean){ean=ean.substr(0,13);ean="0".repeat(13-ean.length)+ean;return ean.substr(0,12)+this.get_barcode_check_digit(ean);}
sanitize_upc(upc){return this.sanitize_ean(upc).substr(1,12);}
match_pattern(barcode,pattern,encoding){var match={value:0,base_code:barcode,match:false,};barcode=barcode.replace("\\","\\\\").replace("{",'\{').replace("}","\}").replace(".","\.");var numerical_content=pattern.match(/[{][N]*[D]*[}]/);var base_pattern=pattern;if(numerical_content){var num_start=numerical_content.index;var num_length=numerical_content[0].length;var value_string=barcode.substr(num_start,num_length-2);var whole_part_match=numerical_content[0].match("[{][N]*[D}]");var decimal_part_match=numerical_content[0].match("[{N][D]*[}]");var whole_part=value_string.substr(0,whole_part_match.index+whole_part_match[0].length-2);var decimal_part="0."+value_string.substr(decimal_part_match.index,decimal_part_match[0].length-1);if(whole_part===''){whole_part='0';}
match.value=parseInt(whole_part)+parseFloat(decimal_part);match.base_code=barcode.substr(0,num_start);base_pattern=pattern.substr(0,num_start);for(var i=0;i<(num_length-2);i++){match.base_code+="0";base_pattern+="0";}
match.base_code+=barcode.substr(num_start+num_length-2,barcode.length-1);base_pattern+=pattern.substr(num_start+num_length,pattern.length-1);match.base_code=match.base_code.replace("\\\\","\\").replace("\{","{").replace("\}","}").replace("\.",".");var base_code=match.base_code.split('');if(encoding==='ean13'){base_code[12]=''+this.get_barcode_check_digit(match.base_code);}else if(encoding==='ean8'){base_code[7]=''+this.get_barcode_check_digit(match.base_code);}else if(encoding==='upca'){base_code[11]=''+this.get_barcode_check_digit(match.base_code);}
match.base_code=base_code.join('');}
base_pattern=base_pattern.split('|').map(part=>part.startsWith('^')?part:'^'+part).join('|');match.match=match.base_code.match(base_pattern);return match;}
parse_barcode(barcode){if(barcode.match(/^urn:/)){return this.parseURI(barcode);}
return this.parseBarcodeNomenclature(barcode);}
parseBarcodeNomenclature(barcode){const parsed_result={encoding:'',type:'error',code:barcode,base_code:barcode,value:0,};if(!this.nomenclature){return parsed_result;}
var rules=this.nomenclature.rules;for(var i=0;i<rules.length;i++){var rule=rules[i];var cur_barcode=barcode;if(rule.encoding==='ean13'&&this.check_encoding(barcode,'upca')&&this.nomenclature.upc_ean_conv in{'upc2ean':'','always':''}){cur_barcode='0'+cur_barcode;}else if(rule.encoding==='upca'&&this.check_encoding(barcode,'ean13')&&barcode[0]==='0'&&this.nomenclature.upc_ean_conv in{'ean2upc':'','always':''}){cur_barcode=cur_barcode.substr(1,12);}
if(!this.check_encoding(cur_barcode,rule.encoding)){continue;}
var match=this.match_pattern(cur_barcode,rules[i].pattern,rule.encoding);if(match.match){if(rules[i].type==='alias'){barcode=rules[i].alias;parsed_result.code=barcode;parsed_result.type='alias';}
else{parsed_result.encoding=rules[i].encoding;parsed_result.type=rules[i].type;parsed_result.value=match.value;parsed_result.code=cur_barcode;if(rules[i].encoding==="ean13"){parsed_result.base_code=this.sanitize_ean(match.base_code);}
else{parsed_result.base_code=match.base_code;}
return parsed_result;}}}
return parsed_result;}
parseURI(barcode){const uriParts=barcode.split(":").map(v=>v.trim());const identifier=uriParts[3];const data=uriParts[4].split(".");if(identifier==="lgtin"||identifier==="sgtin"){return this.convertURIGTINDataIntoProductAndTrackingNumber(barcode,data);}else if(identifier==="sgtin-96"||identifier==="sgtin-198"){return this.convertURIGTINDataIntoProductAndTrackingNumber(barcode,data.slice(1));}else if(identifier==="sscc"){return this.convertURISSCCDataIntoPackage(barcode,data);}else if(identifier==="sscc-96"){return this.convertURISSCCDataIntoPackage(barcode,data.slice(1));}
return barcode;}
convertURIGTINDataIntoProductAndTrackingNumber(base_code,data){const[gs1CompanyPrefix,itemRefAndIndicator,trackingNumber]=data;const indicator=itemRefAndIndicator[0];const itemRef=itemRefAndIndicator.slice(1);let productBarcode=indicator+gs1CompanyPrefix+itemRef;productBarcode+=this.get_barcode_check_digit(productBarcode+"0");return[{base_code,code:productBarcode,string_value:productBarcode,type:"product",value:productBarcode,},{base_code,code:trackingNumber,string_value:trackingNumber,type:"lot",value:trackingNumber,}];}
convertURISSCCDataIntoPackage(base_code,data){const[gs1CompanyPrefix,serialReference]=data;const extension=serialReference[0];const serialRef=serialReference.slice(1);let sscc=extension+gs1CompanyPrefix+serialRef;sscc+=this.get_barcode_check_digit(sscc+"0");return[{base_code,code:sscc,string_value:sscc,type:"package",value:sscc,}];}}
return __exports;});;

/* /barcodes_gs1_nomenclature/static/src/js/barcode_parser.js */
odoo.define('@barcodes_gs1_nomenclature/js/barcode_parser',['@web/core/utils/patch','@barcodes/js/barcode_parser','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{patch}=require("@web/core/utils/patch");const{BarcodeParser}=require("@barcodes/js/barcode_parser");const{_t}=require("@web/core/l10n/translation");const GS1BarcodeError=__exports.GS1BarcodeError=class GS1BarcodeError extends Error{};const FNC1_CHAR=__exports.FNC1_CHAR=String.fromCharCode(29);patch(BarcodeParser,{barcodeNomenclatureFields:[...BarcodeParser.barcodeNomenclatureFields,"is_gs1_nomenclature","gs1_separator_fnc1",],barcodeRuleFields:[...BarcodeParser.barcodeRuleFields,"gs1_content_type","gs1_decimal_usage","associated_uom_id",],});patch(BarcodeParser.prototype,{setup(attributes){super.setup(...arguments);const nomenclatureSeparator=this.nomenclature&&this.nomenclature.gs1_separator_fnc1;this.gs1SeparatorRegex=new RegExp(nomenclatureSeparator||'.^','g');},gs1_date_to_date(gs1Date){const now=new Date();const substractYear=parseInt(gs1Date.slice(0,2))-(now.getFullYear()%100);let century=Math.floor(now.getFullYear()/100);if(51<=substractYear&&substractYear<=99){century--;}else if(-99<=substractYear&&substractYear<=-50){century++;}
const year=century*100+parseInt(gs1Date.slice(0,2));const date=new Date(year,parseInt(gs1Date.slice(2,4)-1));if(gs1Date.slice(-2)==='00'){date.setDate(new Date(year,parseInt(gs1Date.slice(2,4)),0).getDate());}else{date.setDate(parseInt(gs1Date.slice(-2)));}
return date;},parse_gs1_rule_pattern(match,rule){const result={rule:Object.assign({},rule),ai:match[1],string_value:match[2],code:match[2],base_code:match[2],type:rule.type};if(rule.gs1_content_type==='measure'){let decimalPosition=0;if(rule.gs1_decimal_usage){decimalPosition=parseInt(match[1][match[1].length-1]);}
if(decimalPosition>0){const integral=match[2].slice(0,match[2].length-decimalPosition);const decimal=match[2].slice(match[2].length-decimalPosition);result.value=parseFloat(integral+"."+decimal);}else{result.value=parseInt(match[2]);}}else if(rule.gs1_content_type==='identifier'){if(parseInt(match[2][match[2].length-1])!==this.get_barcode_check_digit("0".repeat(18-match[2].length)+match[2])){throw new Error(_t("Invalid barcode: the check digit is incorrect"));}
result.value=match[2];}else if(rule.gs1_content_type==='date'){if(match[2].length!==6){throw new Error(_t("Invalid barcode: can't be formated as date"));}
result.value=this.gs1_date_to_date(match[2]);}else{result.value=match[2];}
return result;},gs1_decompose_extanded(barcode){const results=[];const rules=this.nomenclature.rules.filter(rule=>rule.encoding==='gs1-128');const separatorReg=`(?:${FNC1_CHAR}+)?`;barcode=this._convertGS1Separators(barcode);barcode=this.cleanBarcode(barcode);while(barcode.length>0){const barcodeLength=barcode.length;for(const rule of rules){const match=barcode.match("^"+rule.pattern+separatorReg);if(match&&match.length>=3){const res=this.parse_gs1_rule_pattern(match,rule);if(res){barcode=barcode.slice(match.index+match[0].length);results.push(res);if(barcode.length===0){return results;}}else{throw new GS1BarcodeError(_t("This barcode can't be parsed by any barcode rules."));}}}
if(barcodeLength===barcode.length){throw new GS1BarcodeError(_t("This barcode can't be partially or fully parsed."));}}
return results;},parseBarcodeNomenclature(barcode){if(this.nomenclature&&this.nomenclature.is_gs1_nomenclature){return this.gs1_decompose_extanded(barcode);}
return super.parseBarcodeNomenclature(...arguments);},cleanBarcode(barcode){if(barcode[0]===FNC1_CHAR){barcode=barcode.slice(1);}
return barcode;},_convertGS1Separators:function(barcode){barcode=barcode.replace(this.gs1SeparatorRegex,FNC1_CHAR);return barcode;},});return __exports;});;

/* /barcodes_gs1_nomenclature/static/src/js/barcode_service.js */
odoo.define('@barcodes_gs1_nomenclature/js/barcode_service',['@web/session','@web/core/utils/patch','@barcodes/barcode_service','@barcodes_gs1_nomenclature/js/barcode_parser'],function(require){'use strict';let __exports={};const{session}=require("@web/session");const{patch}=require("@web/core/utils/patch");const{barcodeService}=require('@barcodes/barcode_service');const{FNC1_CHAR}=require("@barcodes_gs1_nomenclature/js/barcode_parser");patch(barcodeService,{gs1SeparatorRegex:new RegExp(session.gs1_group_separator_encodings||'.^','g'),cleanBarcode(barcode){barcode=barcode.replace(barcodeService.gs1SeparatorRegex,FNC1_CHAR);return super.cleanBarcode(barcode);},});return __exports;});;

/* /web/static/src/views/fields/parsers.js */
odoo.define('@web/views/fields/parsers',['@web/core/l10n/dates','@web/core/l10n/localization','@web/core/py_js/py','@web/core/registry','@web/core/utils/strings'],function(require){'use strict';let __exports={};const{parseDate,parseDateTime}=require("@web/core/l10n/dates");const{localization}=require("@web/core/l10n/localization");const{evaluateExpr}=require("@web/core/py_js/py");const{registry}=require("@web/core/registry");const{escapeRegExp}=require("@web/core/utils/strings");function evaluateMathematicalExpression(expr,context={}){var val=expr.replace(new RegExp(/( )/g),"");var safeEvalString="";for(let v of val.split(new RegExp(/([-+*/()^])/g))){if(!["+","-","*","/","(",")","^"].includes(v)&&v.length){v=parseFloat(v);}
if(v==="^"){v="**";}
safeEvalString+=v;}
return evaluateExpr(safeEvalString,context);}
function parseNumber(value,options={}){if(value.startsWith("=")){value=evaluateMathematicalExpression(value.substring(1));if(options.truncate){value=Math.trunc(value);}}else{const thousandsSepRegex=options.thousandsSep.match(/\s+/)?/\s+/g:new RegExp(escapeRegExp(options.thousandsSep),"g")||",";value=value.replaceAll(thousandsSepRegex,"");value=value.replace(new RegExp(escapeRegExp(options.decimalPoint),"g")||".",".");}
return Number(value);}
const InvalidNumberError=__exports.InvalidNumberError=class InvalidNumberError extends Error{}
__exports.parseFloat=parseFloat;function parseFloat(value){const thousandsSepRegex=localization.thousandsSep||"";const decimalPointRegex=localization.decimalPoint;let parsed=parseNumber(value,{thousandsSep:thousandsSepRegex,decimalPoint:decimalPointRegex,});if(isNaN(parsed)){parsed=parseNumber(value,{thousandsSep:",",decimalPoint:".",});if(isNaN(parsed)){throw new InvalidNumberError(`"${value}" is not a correct number`);}}
return parsed;}
__exports.parseFloatTime=parseFloatTime;function parseFloatTime(value){let sign=1;if(value[0]==="-"){value=value.slice(1);sign=-1;}
const values=value.split(":");if(values.length>2){throw new InvalidNumberError(`"${value}" is not a correct number`);}
if(values.length===1){return sign*parseFloat(value);}
const hours=parseInteger(values[0]);const minutes=parseInteger(values[1]);return sign*(hours+minutes/60);}
__exports.parseInteger=parseInteger;function parseInteger(value){const thousandsSepRegex=localization.thousandsSep||"";const decimalPointRegex=localization.decimalPoint;let parsed=parseNumber(value,{thousandsSep:thousandsSepRegex,decimalPoint:decimalPointRegex,truncate:true,});if(!Number.isInteger(parsed)){parsed=parseNumber(value,{thousandsSep:",",decimalPoint:".",truncate:true,});if(!Number.isInteger(parsed)){throw new InvalidNumberError(`"${value}" is not a correct number`);}}
if(parsed<-2147483648||parsed>2147483647){throw new InvalidNumberError(`"${value}" is out of bounds (integers should be between -2,147,483,648 and 2,147,483,647)`);}
return parsed;}
__exports.parsePercentage=parsePercentage;function parsePercentage(value){if(value[value.length-1]==="%"){value=value.slice(0,value.length-1);}
return parseFloat(value)/100;}
__exports.parseMonetary=parseMonetary;function parseMonetary(value){value=value.trim();const startMatch=value.match(new RegExp(`[\\d\\-+=]|${escapeRegExp(localization.decimalPoint)}`));if(startMatch){value=value.substring(startMatch.index);}
value=value.replace(/\D*$/,"");return parseFloat(value);}
registry.category("parsers").add("date",parseDate).add("datetime",parseDateTime).add("float",parseFloat).add("float_time",parseFloatTime).add("integer",parseInteger).add("many2one_reference",parseInteger).add("monetary",parseMonetary).add("percentage",parsePercentage);return __exports;});;

/* /web/static/src/webclient/actions/reports/utils.js */
odoo.define('@web/webclient/actions/reports/utils',['@web/core/l10n/translation','@web/core/network/download'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{download}=require("@web/core/network/download");__exports.getReportUrl=getReportUrl;function getReportUrl(action,type,userContext){let url=`/report/${type}/${action.report_name}`;const actionContext=action.context||{};if(action.data&&JSON.stringify(action.data)!=="{}"){const options=encodeURIComponent(JSON.stringify(action.data));const context=encodeURIComponent(JSON.stringify(actionContext));url+=`?options=${options}&context=${context}`;}else{if(actionContext.active_ids){url+=`/${actionContext.active_ids.join(",")}`;}
if(type==="html"){const context=encodeURIComponent(JSON.stringify(userContext));url+=`?context=${context}`;}}
return url;}
function getWKHTMLTOPDF_MESSAGES(status){const link='<br><br><a href="http://wkhtmltopdf.org/" target="_blank">wkhtmltopdf.org</a>';const _status={broken:_t("Your installation of Wkhtmltopdf seems to be broken. The report will be shown in html.%(link)s",{link}),install:_t("Unable to find Wkhtmltopdf on this system. The report will be shown in html.%(link)s",{link}),upgrade:_t("You should upgrade your version of Wkhtmltopdf to at least 0.12.0 in order to get a correct display of headers and footers as well as support for table-breaking between pages.%(link)s",{link}),workers:_t("You need to start Odoo with at least two workers to print a pdf version of the reports."),};return _status[status];}
__exports.downloadReport=downloadReport;async function downloadReport(rpc,action,type,userContext){let message;if(type==="pdf"){downloadReport.wkhtmltopdfStatusProm||=rpc("/report/check_wkhtmltopdf");const status=await downloadReport.wkhtmltopdfStatusProm;message=getWKHTMLTOPDF_MESSAGES(status);if(!["upgrade","ok"].includes(status)){return{success:false,message};}}
const url=getReportUrl(action,type);await download({url:"/report/download",data:{data:JSON.stringify([url,action.report_type]),context:JSON.stringify(userContext),},});return{success:true,message};}
return __exports;});;

/* /point_of_sale/static/src/app/barcode/barcode_reader_hook.js */
odoo.define('@point_of_sale/app/barcode/barcode_reader_hook',['@web/core/utils/hooks','@odoo/owl'],function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{useComponent,useEffect}=require("@odoo/owl");__exports.useBarcodeReader=useBarcodeReader;function useBarcodeReader(callbackMap,exclusive=false){const current=useComponent();const barcodeReader=useService("barcode_reader");if(barcodeReader){for(const[key,callback]of Object.entries(callbackMap)){callbackMap[key]=callback.bind(current);}
useEffect(()=>barcodeReader.register(callbackMap,exclusive),()=>[]);}}
return __exports;});;

/* /point_of_sale/static/src/app/barcode/barcode_reader_service.js */
odoo.define('@point_of_sale/app/barcode/barcode_reader_service',['@web/core/l10n/translation','@web/core/registry','@web/core/utils/concurrency','@web/session','@web/core/confirmation_dialog/confirmation_dialog','@barcodes/js/barcode_parser','@barcodes_gs1_nomenclature/js/barcode_parser'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{Mutex}=require("@web/core/utils/concurrency");const{session}=require("@web/session");const{AlertDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{BarcodeParser}=require("@barcodes/js/barcode_parser");const{GS1BarcodeError}=require("@barcodes_gs1_nomenclature/js/barcode_parser");const BarcodeReader=__exports.BarcodeReader=class BarcodeReader{static serviceDependencies=["dialog","hardware_proxy","notification","action","orm"];constructor(parser,{dialog,hardware_proxy,notification,action,orm}){this.parser=parser;this.dialog=dialog;this.action=action;this.orm=orm;this.hardwareProxy=hardware_proxy;this.notification=notification;this.setup();}
setup(){this.mutex=new Mutex();this.cbMaps=new Set();this.exclusiveCbMap=null;this.remoteScanning=false;this.remoteActive=0;}
register(cbMap,exclusive){if(exclusive){this.exclusiveCbMap=cbMap;}else{this.cbMaps.add(cbMap);}
return()=>{if(exclusive){this.exclusiveCbMap=null;}else{this.cbMaps.delete(cbMap);}};}
scan(code){return this.mutex.exec(()=>this._scan(code));}
async _scan(code){if(!code){return;}
const cbMaps=this.exclusiveCbMap?[this.exclusiveCbMap]:[...this.cbMaps];let parseBarcode;try{parseBarcode=this.parser.parse_barcode(code);if(Array.isArray(parseBarcode)&&!parseBarcode.some((element)=>element.type==="product")){throw new GS1BarcodeError("The GS1 barcode must contain a product.");}}catch(error){if(this.fallbackParser&&error instanceof GS1BarcodeError){parseBarcode=this.fallbackParser.parse_barcode(code);}else{throw error;}}
if(Array.isArray(parseBarcode)){cbMaps.map((cb)=>cb.gs1?.(parseBarcode));}else{const cbs=cbMaps.map((cbMap)=>cbMap[parseBarcode.type]).filter(Boolean);if(cbs.length===0){this.showNotFoundNotification(parseBarcode);}
for(const cb of cbs){await cb(parseBarcode);}}}
showNotFoundNotification(code){this.notification.add(_t("The Point of Sale could not find any product, customer, employee or action associated with the scanned barcode."),{type:"warning",title:_t(`Unknown Barcode`)+" "+this.codeRepr(code),});}
codeRepr(parsedBarcode){if(parsedBarcode.code.length>32){return parsedBarcode.code.substring(0,29)+"...";}else{return parsedBarcode.code;}}
connectToProxy(){this.remoteScanning=true;if(this.remoteActive>=1){return;}
this.remoteActive=1;this.waitForBarcode();}
async waitForBarcode(){const barcode=await this.hardwareProxy.message("scanner").catch(()=>{});if(!this.remoteScanning){this.remoteActive=0;return;}
this.scan(barcode);this.waitForBarcode();}
disconnectFromProxy(){this.remoteScanning=false;}}
const barcodeReaderService=__exports.barcodeReaderService={dependencies:[...BarcodeReader.serviceDependencies,"dialog","barcode","orm"],async start(env,deps){const{dialog,barcode,orm}=deps;let barcodeReader=null;if(session.nomenclature_id){const nomenclature=await BarcodeParser.fetchNomenclature(orm,session.nomenclature_id);const parser=new BarcodeParser({nomenclature});barcodeReader=new BarcodeReader(parser,deps);}
if(session.fallback_nomenclature_id&&barcodeReader){const fallbackNomenclature=await BarcodeParser.fetchNomenclature(orm,session.fallback_nomenclature_id);barcodeReader.fallbackParser=new BarcodeParser({nomenclature:fallbackNomenclature,});}
barcode.bus.addEventListener("barcode_scanned",(ev)=>{if(barcodeReader){barcodeReader.scan(ev.detail.barcode);}else{dialog.add(AlertDialog,{title:_t("Unable to parse barcode"),body:_t("No barcode nomenclature has been configured. This can be changed in the configuration settings."),});}});return barcodeReader;},};registry.category("services").add("barcode_reader",barcodeReaderService);return __exports;});;

/* /point_of_sale/static/src/app/components/order_tabs/order_tabs.js */
odoo.define('@point_of_sale/app/components/order_tabs/order_tabs',['@point_of_sale/app/store/pos_hook','@web/core/utils/hooks','@odoo/owl','@point_of_sale/app/generic_components/list_container/list_container'],function(require){'use strict';let __exports={};const{usePos}=require("@point_of_sale/app/store/pos_hook");const{useService}=require("@web/core/utils/hooks");const{Component,useState}=require("@odoo/owl");const{ListContainer}=require("@point_of_sale/app/generic_components/list_container/list_container");const OrderTabs=__exports.OrderTabs=class OrderTabs extends Component{static template="point_of_sale.OrderTabs";static components={ListContainer,};static props={orders:Array,class:{type:String,optional:true},};static defaultProps={class:"",};setup(){this.pos=usePos();this.ui=useState(useService("ui"));this.dialog=useService("dialog");}
newFloatingOrder(){this.pos.selectedTable=null;const order=this.pos.add_new_order();this.pos.showScreen("ProductScreen");this.dialog.closeAll();return order;}
selectFloatingOrder(order){this.pos.set_order(order);this.pos.selectedTable=null;const previousOrderScreen=order.get_screen_data();const props={};if(previousOrderScreen?.name==="PaymentScreen"){props.orderUuid=order.uuid;}
this.pos.showScreen(previousOrderScreen?.name||"ProductScreen",props);this.dialog.closeAll();}
get orders(){return this.props.orders.sort((a,b)=>{const noteA=a.floating_order_name||"";const noteB=b.floating_order_name||"";if(noteA&&noteB){const timePattern=/^\d{1,2}:\d{2}/;const aMatch=noteA.match(timePattern);const bMatch=noteB.match(timePattern);if(aMatch&&bMatch){const aTime=aMatch[0];const bTime=bMatch[0];const[aHour,aMinute]=aTime.split(":");const[bHour,bMinute]=bTime.split(":");const formattedATime=aHour.padStart(2,"0")+aMinute.padStart(2,"0");const formattedBTime=bHour.padStart(2,"0")+bMinute.padStart(2,"0");return formattedATime.localeCompare(formattedBTime);}else if((aMatch&&!bMatch)||(bMatch&&!aMatch)){return aMatch?-1:1;}
return noteA.localeCompare(noteB);}else if(noteA||noteB){return noteA?-1:1;}else{return a.tracking_number>b.tracking_number?1:-1;}});}}
return __exports;});;

/* /point_of_sale/static/src/app/components/payment_method_breakdown/payment_method_breakdown.js */
odoo.define('@point_of_sale/app/components/payment_method_breakdown/payment_method_breakdown',['@odoo/owl','@point_of_sale/app/generic_components/accordion_item/accordion_item'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{AccordionItem}=require("@point_of_sale/app/generic_components/accordion_item/accordion_item");const PaymentMethodBreakdown=__exports.PaymentMethodBreakdown=class PaymentMethodBreakdown extends Component{static components={AccordionItem};static template="point_of_sale.PaymentMethodBreakdown";static props={title:String,total_amount:Number,transactions:{type:Array,optional:true},};static defaultProps={transactions:[],};}
return __exports;});;

/* /point_of_sale/static/src/app/components/product_info_banner/product_info_banner.js */
odoo.define('@point_of_sale/app/components/product_info_banner/product_info_banner',['@odoo/owl','@point_of_sale/app/store/pos_hook','@point_of_sale/app/utils/hooks','@web/core/utils/hooks','@point_of_sale/app/generic_components/accordion_item/accordion_item','@web/core/utils/timing'],function(require){'use strict';let __exports={};const{Component,useEffect,useState}=require("@odoo/owl");const{usePos}=require("@point_of_sale/app/store/pos_hook");const{useTrackedAsync}=require("@point_of_sale/app/utils/hooks");const{useService}=require("@web/core/utils/hooks");const{AccordionItem}=require("@point_of_sale/app/generic_components/accordion_item/accordion_item");const{debounce}=require("@web/core/utils/timing");const ProductInfoBanner=__exports.ProductInfoBanner=class ProductInfoBanner extends Component{static template="point_of_sale.ProductInfoBanner";static components={AccordionItem,};static props={product:Object,info:{type:Object,optional:true},};setup(){this.pos=usePos();this.fetchStock=useTrackedAsync((p)=>this.pos.getProductInfo(p,1),{keepLast:true});this.ui=useState(useService("ui"));this.state=useState({other_warehouses:[],available_quantity:0,price_with_tax:0,price_without_tax:0,tax_name:"",tax_amount:0,});const debouncedFetchStocks=debounce(async(product)=>{let result={};if(!this.props.info){await this.fetchStock.call(product);if(this.fetchStock.status==="error"){throw this.fetchStock.result;}
result=this.fetchStock.result;}else{result=this.props.info;}
if(result){const productInfo=result.productInfo;this.state.other_warehouses=productInfo.warehouses.slice(1);this.state.available_quantity=productInfo.warehouses[0]?.available_quantity;this.state.price_with_tax=productInfo.all_prices.price_with_tax;this.state.price_without_tax=productInfo.all_prices.price_without_tax;this.state.tax_name=productInfo.all_prices.tax_details[0]?.name||"";this.state.tax_amount=productInfo.all_prices.tax_details[0]?.amount||0;}},500);useEffect(()=>{debouncedFetchStocks(this.props.product);},()=>[this.props.product]);}
get bannerBackground(){if(!this.props.product.is_storable||this.state.available_quantity>10){return"bg-info";}
return this.state.available_quantity<5?"bg-danger":"bg-warning";}
get bannerClass(){return this.bannerBackground;}}
return __exports;});;

/* /point_of_sale/static/src/app/components/tour_selector_popup/tour_selector_popup.js */
odoo.define('@point_of_sale/app/components/tour_selector_popup/tour_selector_popup',['@web/core/dialog/dialog','@odoo/owl','@point_of_sale/app/store/pos_hook','@web/core/registry'],function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{Component,useState}=require("@odoo/owl");const{usePos}=require("@point_of_sale/app/store/pos_hook");const{registry}=require("@web/core/registry");const TourSelectorPopup=__exports.TourSelectorPopup=class TourSelectorPopup extends Component{static components={Dialog};static template="point_of_sale.TourSelectorPopup";static props=["close","getPayload"];setup(){this.pos=usePos();this.state=useState({selectedTours:new Set(),});}
get tours(){const tourNames=Object.keys(registry.subRegistries["web_tour.tours"].content);return tourNames.filter((name)=>name.includes("PoSFakeTour"));}
onCheck(ev){return ev.target.checked?this.state.selectedTours.add(ev.target.id):this.state.selectedTours.delete(ev.target.id);}
confirm(){this.props.getPayload([...this.state.selectedTours]);this.props.close();}}
return __exports;});;

/* /point_of_sale/static/src/app/debug/debug_service.js */
odoo.define('@point_of_sale/app/debug/debug_service',['@odoo/owl','@web/core/registry','@web/core/utils/reactive','@point_of_sale/app/debug/debug_widget'],function(require){'use strict';let __exports={};const{reactive}=require("@odoo/owl");const{registry}=require("@web/core/registry");const{withComputedProperties}=require("@web/core/utils/reactive");const{DebugWidget}=require("@point_of_sale/app/debug/debug_widget");const debugService=__exports.debugService={start(env){const internalState=reactive({widgetOpen:false});const state=withComputedProperties(reactive({}),[internalState],{showWidget(internalState){return env.debug?internalState.widgetOpen:false;},});registry.category("main_components").add("DebugWidget",{Component:DebugWidget,props:{state},});return{toggleWidget(){internalState.widgetOpen=!internalState.widgetOpen;},};},};registry.category("services").add("debug",debugService);return __exports;});;

/* /point_of_sale/static/src/app/debug/debug_widget.js */
odoo.define('@point_of_sale/app/debug/debug_widget',['@web/core/l10n/translation','@web/views/fields/parsers','@web/core/transition','@web/core/utils/hooks','@odoo/owl','@point_of_sale/app/store/pos_hook','@web/core/l10n/dates','@web/core/confirmation_dialog/confirmation_dialog','@web/core/utils/draggable_hook_builder_owl','@web/core/utils/objects'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{parseFloat}=require("@web/views/fields/parsers");const{Transition}=require("@web/core/transition");const{useBus,useService}=require("@web/core/utils/hooks");const{useRef,useState,Component}=require("@odoo/owl");const{usePos}=require("@point_of_sale/app/store/pos_hook");const{serializeDateTime}=require("@web/core/l10n/dates");const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{makeDraggableHook}=require("@web/core/utils/draggable_hook_builder_owl");const{pick}=require("@web/core/utils/objects");const{DateTime}=luxon;const useDialogDraggable=makeDraggableHook({name:"useDialogDraggable",onWillStartDrag({ctx,addCleanup,addStyle,getRect}){ctx.current.container=document.createElement("div");const{height}=getRect(ctx.current.element);addStyle(ctx.current.container,{position:"fixed",top:"0",bottom:`${height}px`,left:"0",right:"0",});ctx.current.element.after(ctx.current.container);addCleanup(()=>ctx.current.container.remove());},onDrop:({ctx,getRect})=>pick(getRect(ctx.current.element),"left","top"),});const DebugWidget=__exports.DebugWidget=class DebugWidget extends Component{static components={Transition};static template="point_of_sale.DebugWidget";static props={state:{type:Object,shape:{showWidget:Boolean}}};setup(){this.pos=usePos();this.debug=useService("debug");this.barcodeReader=useService("barcode_reader");this.hardwareProxy=useService("hardware_proxy");this.notification=useService("notification");const numberBuffer=useService("number_buffer");this.dialog=useService("dialog");useBus(numberBuffer,"buffer-update",this._onBufferUpdate);this.state=useState({barcodeInput:"",weightInput:"",buffer:numberBuffer.get(),});this.root=useRef("root");this.position=useState({left:null,top:null});useDialogDraggable({ref:this.root,elements:".debug-widget",handle:".drag-handle",onDrop:({left,top})=>{this.position.left=left;this.position.top=top;},});for(const eventName of["open_cashbox","print_receipt","scale_read"]){const ref=useRef(eventName);let animation;useBus(this.hardwareProxy,`send_message:${eventName}`,()=>{animation?.cancel();animation=ref.el?.animate({backgroundColor:["#6CD11D","#1E1E1E"]},2000);});}}
toggleWidget(){this.state.isShown=!this.state.isShown;}
setWeight(){var weightInKg=parseFloat(this.state.weightInput);if(!isNaN(weightInKg)){this.hardwareProxy.setDebugWeight(weightInKg);}}
resetWeight(){this.state.weightInput="";this.hardwareProxy.resetDebugWeight();}
async barcodeScan(){if(!this.barcodeReader){return;}
await this.barcodeReader.scan(this.state.barcodeInput);}
async barcodeScanEAN(){if(!this.barcodeReader){return;}
const ean=this.barcodeReader.parser.sanitize_ean(this.state.barcodeInput||"0");this.state.barcodeInput=ean;await this.barcodeReader.scan(ean);}
_createBlob(contents){if(typeof contents!=="string"){contents=JSON.stringify(contents,null,2);}
return new Blob([contents]);}
deleteOrders({paid=true}={}){this.dialog.add(ConfirmationDialog,{title:_t("Delete Orders?"),body:_t(`This operation will destroy all ${
                    paid ? "paid" : "unpaid"
                } orders in the browser. You will lose all the data. This operation cannot be undone.`),confirm:()=>{this.pos.data.resetUnsyncQueue();const orders=this.pos.models["pos.order"].filter((order)=>order.finalized===paid);for(const order of orders){this.pos.data.localDeleteCascade(order,!paid);}
if(!this.pos.get_order()){this.pos.add_new_order();}},});}
exportOrders({paid=true}={}){const orders=this.pos.models["pos.order"].filter((order)=>order.finalized===paid).map((o)=>o.serialize({orm:true}));const blob=this._createBlob(orders);const url=URL.createObjectURL(blob);const a=document.createElement("a");const fileName=`${paid ? "paid" : "unpaid"}_orders_${serializeDateTime(
            DateTime.now()
        ).replace(/:|\s/gi, "-")}.json`;a.href=url;a.download=fileName;a.click();}
async importOrders(event){const file=event.target.files[0];if(file){const jsonData=JSON.parse(await file.text());const data={"pos.order":[],};const manyRel=Object.values(this.pos.data.relations["pos.order"]).filter((rel)=>["one2many","many2many"].includes(rel.type));for(const order of jsonData){for(const rel of manyRel){const model=this.pos.models[rel.relation];if(!model){continue;}
if(!order[rel.name]&&(rel.local||rel.related||rel.compute)){order[rel.name]=[];}
const existingRecords=model.getAllBy("id");const records=order[rel.name].filter((rel)=>!existingRecords[rel[2]]).map((rel)=>rel[2]);if(!data[rel.relation]){data[rel.relation]=[];}
data[rel.relation].push(...records);}
data["pos.order"].push(order);}
const missing=await this.pos.data.missingRecursive(data);this.pos.data.models.loadData(missing,[],true);this.notification.add(_t("%s orders imported",data["pos.order"].length));}}
refreshDisplay(){this.hardwareProxy.message("display_refresh",{});}
_onBufferUpdate({detail:value}){this.state.buffer=value;}
get bufferRepr(){return`"${this.state.buffer}"`;}
get style(){const{left,top}=this.position;return top===null?"":`position: absolute; left: ${left}px; top: ${top}px;`;}}
return __exports;});;

/* /point_of_sale/static/src/app/errors/error_handlers.js */
odoo.define('@point_of_sale/app/errors/error_handlers',['@web/core/registry','@web/core/errors/error_dialogs','@web/core/network/rpc','@web/core/confirmation_dialog/confirmation_dialog','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{odooExceptionTitleMap,ErrorDialog}=require("@web/core/errors/error_dialogs");const{ConnectionLostError,RPCError}=require("@web/core/network/rpc");const{AlertDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{_t}=require("@web/core/l10n/translation");__exports.handleRPCError=handleRPCError;function handleRPCError(error,dialog){const{data}=error;if(odooExceptionTitleMap.has(error.exceptionName)){const title=odooExceptionTitleMap.get(error.exceptionName).toString();dialog.add(AlertDialog,{title,body:data.message});}else{if(odoo.debug==="assets"){dialog.add(ErrorDialog,{traceback:data.message+"\n"+data.debug+"\n",});}else{dialog.add(AlertDialog,{title:_t("Odoo Server Error"),body:data.message,});}}}
function rpcErrorHandler(env,error,originalError){if(originalError instanceof RPCError){handleRPCError(originalError,env.services.dialog);return true;}}
registry.category("error_handlers").add("rpcErrorHandler",rpcErrorHandler);function offlineErrorHandler(env,error,originalError){if(originalError instanceof ConnectionLostError){if(!env.services.pos.data.network.warningTriggered){env.services.dialog.add(AlertDialog,{title:_t("Connection Lost"),body:_t("Until the connection is reestablished, Odoo Point of Sale will operate with limited functionality."),confirmLabel:_t("Continue with limited functionality"),});env.services.pos.data.network.warningTriggered=true;}
return true;}}
registry.category("error_handlers").add("offlineErrorHandler",offlineErrorHandler);function defaultErrorHandler(env,error,originalError){if(error instanceof Error){env.services.dialog.add(ErrorDialog,{traceback:error.traceback,});}else{env.services.dialog.add(AlertDialog,{title:_t("Unknown Error"),body:_t("Unable to show information about this error."),});}
return true;}
registry.category("error_handlers").add("defaultErrorHandler",defaultErrorHandler,{sequence:99});return __exports;});;

/* /point_of_sale/static/src/app/generic_components/accordion_item/accordion_item.js */
odoo.define('@point_of_sale/app/generic_components/accordion_item/accordion_item',['@odoo/owl'],function(require){'use strict';let __exports={};const{Component,useState,useRef,useEffect,onMounted}=require("@odoo/owl");const AccordionItem=__exports.AccordionItem=class AccordionItem extends Component{static template="pos_hr.AccordionItem";static props={disabled:{type:Boolean,optional:true},slots:Object,};static defaultProps={disabled:false,};setup(){this.content=useRef("content_container");this.state=useState({open:false,});onMounted(()=>{this.contentHeight=this.calculateFullHeight();});useEffect(()=>{this.contentHeight=this.calculateFullHeight();},()=>[this.props.slots.content]);}
toggle(){if(this.props.disabled){return;}
this.state.open=!this.state.open;}
calculateFullHeight(){const children=Array.from(this.content.el.getElementsByClassName("accordion-content"));const fullHeight=children.reduce((accumulator,child)=>{return accumulator+Math.min(this.getHiddenHeight(child),100);},0);return fullHeight;}
getHiddenHeight(el){if(!el?.cloneNode){return 0;}
const clone=el.cloneNode(true);Object.assign(clone.style,{overflow:"visible",height:"auto",maxHeight:"none",opacity:"0",visibility:"hidden",display:"block",});el.after(clone);const height=clone.offsetHeight;clone.remove();return height;}}
return __exports;});;

/* /point_of_sale/static/src/app/generic_components/alert_service.js */
odoo.define('@point_of_sale/app/generic_components/alert_service',['@odoo/owl','@web/core/registry'],function(require){'use strict';let __exports={};const{Component,xml}=require("@odoo/owl");const{registry}=require("@web/core/registry");class Alert extends Component{static template=xml`
        <div t-attf-class="alert navbar-height fixed-top p-1 rounded-0 alert-{{props.type}} fade show d-flex align-items-center justify-content-center" role="alert">
            <strong class="flex-grow-1 text-center" t-esc="props.message" />
        </div>
    `;static props={message:String,type:{type:String,optional:true,validate:(type)=>["info","warning","danger","success"].includes(type),},};static defaultProps={type:"info",};}
const alertService=__exports.alertService={dependencies:["overlay"],start(env,{overlay}){let dismiss=undefined;const add=(message,options={},overlayOptions={})=>{dismiss?.();dismiss=overlay.add(Alert,{message,...options,},overlayOptions);};return{add,dismiss:()=>dismiss?.()};},};registry.category("services").add("alert",alertService);return __exports;});;

/* /point_of_sale/static/src/app/generic_components/category_selector/category_selector.js */
odoo.define('@point_of_sale/app/generic_components/category_selector/category_selector',['@odoo/owl','@web/core/utils/hooks'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{useService}=require("@web/core/utils/hooks");const CategorySelector=__exports.CategorySelector=class CategorySelector extends Component{static template="point_of_sale.CategorySelector";static props={categories:{type:Array,element:Object,shape:{id:Number,name:{type:String,optional:true},color:{type:Number,optional:true},imgSrc:String,icon:{type:String,optional:true},showSeparator:{type:Boolean,optional:true},isSelected:{type:Boolean,optional:true},isChildren:{type:Boolean,optional:true},},},class:{type:String,optional:true},style:{type:String,optional:true},onClick:{type:Function},};static defaultProps={class:"",style:"",};setup(){this.ui=useService("ui");}}
return __exports;});;

/* /point_of_sale/static/src/app/generic_components/centered_icon/centered_icon.js */
odoo.define('@point_of_sale/app/generic_components/centered_icon/centered_icon',['@odoo/owl'],function(require){'use strict';let __exports={};const{Component,xml}=require("@odoo/owl");const CenteredIcon=__exports.CenteredIcon=class CenteredIcon extends Component{static props={icon:String,text:{type:String,optional:true},class:{type:String,optional:true},};static defaultProps={class:"",};static template=xml`
        <div t-attf-class="{{props.class}} d-flex flex-column align-items-center justify-content-center">
            <i t-attf-class="fa {{props.icon}}" role="img" />
            <h3 t-if="props.text" t-esc="props.text" class="w-75 mt-2 text-center"/>
        </div>
    `;}
return __exports;});;

/* /point_of_sale/static/src/app/generic_components/inputs/input/input.js */
odoo.define('@point_of_sale/app/generic_components/inputs/input/input',['@odoo/owl','@web/core/utils/hooks','@web/core/utils/timing','@point_of_sale/app/generic_components/inputs/t_model_input'],function(require){'use strict';let __exports={};const{useRef,useState,onPatched}=require("@odoo/owl");const{useAutofocus}=require("@web/core/utils/hooks");const{debounce}=require("@web/core/utils/timing");const{TModelInput}=require("@point_of_sale/app/generic_components/inputs/t_model_input");const Input=__exports.Input=class Input extends TModelInput{static template="point_of_sale.input";static props={...super.props,isSmall:{type:Boolean,optional:true},debounceMillis:{type:Number,optional:true},icon:{type:Object,optional:true,shape:{type:String,value:String},},getRef:{type:Function,optional:true},autofocus:{type:Boolean,optional:true},autofocusMobile:{type:Boolean,optional:true},iconOnLeftSide:{type:Boolean,optional:true},isValid:{type:Function,optional:true},placeholder:{type:String,optional:true},class:{type:String,optional:true},callback:{type:Function,optional:true},};static defaultProps={class:"",isSmall:false,debounceMillis:0,icon:{},placeholder:"",autofocus:false,autofocusMobile:false,iconOnLeftSide:true,isValid:()=>true,};setup(){this.state=useState({isOpen:false});this.setValue=debounce(this.setValue.bind(this),this.props.debounceMillis);const ref=(this.props.autofocus&&useAutofocus({refName:"input",mobile:this.props.autofocusMobile}))||useRef("input");this.props.getRef?.(ref);onPatched(()=>{this.setValue.cancel(true);});}
setValue(newValue,tModel=this.props.tModel){super.setValue(newValue,tModel);this.props.callback?.(newValue);}}
return __exports;});;

/* /point_of_sale/static/src/app/generic_components/inputs/numeric_input/numeric_input.js */
odoo.define('@point_of_sale/app/generic_components/inputs/numeric_input/numeric_input',['@point_of_sale/app/generic_components/inputs/t_model_input'],function(require){'use strict';let __exports={};const{TModelInput}=require("@point_of_sale/app/generic_components/inputs/t_model_input");const NumericInput=__exports.NumericInput=class NumericInput extends TModelInput{static template="point_of_sale.NumericInput";static props={...super.props,class:{type:String,optional:true},min:{type:Number,optional:true},};static defaultProps={class:""};parseInt(value){return parseInt(value);}}
return __exports;});;

/* /point_of_sale/static/src/app/generic_components/inputs/t_model_input.js */
odoo.define('@point_of_sale/app/generic_components/inputs/t_model_input',['@odoo/owl'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const TModelInput=__exports.TModelInput=class TModelInput extends Component{static template="";static props={tModel:Array};getValue(tModel=this.props.tModel){const[obj,key]=tModel;return obj[key];}
setValue(newValue,tModel=this.props.tModel){const[obj,key]=tModel;obj[key]=newValue;}}
return __exports;});;

/* /point_of_sale/static/src/app/generic_components/list_container/list_container.js */
odoo.define('@point_of_sale/app/generic_components/list_container/list_container',['@odoo/owl','@point_of_sale/app/utils/hooks','@web/core/utils/hooks','@web/core/dialog/dialog'],function(require){'use strict';let __exports={};const{Component,useEffect,useRef,xml}=require("@odoo/owl");const{useIsChildLarger}=require("@point_of_sale/app/utils/hooks");const{useService}=require("@web/core/utils/hooks");const{Dialog}=require("@web/core/dialog/dialog");class ListContainerDialog extends Component{static components={Dialog};static props={items:Array,slots:{type:Object},close:Function,};static template=xml`
        <Dialog title.translate="Choose an order" footer="false">
            <div class="list-container-items d-flex p-2 flex-wrap" style="gap: 0.5rem;">
                <t t-foreach="props.items" t-as="item" t-key="item_index">
                    <t t-slot="default" item="item" />
                </t>
            </div>
        </Dialog>
    `;}
const ListContainer=__exports.ListContainer=class ListContainer extends Component{static props={items:Array,onClickPlus:{type:Function,optional:true},slots:{type:Object},class:{type:String,optional:true},forceSmall:{type:Boolean,optional:true},};static defaultProps={class:"",};static template=xml`
        <div class="overflow-hidden d-flex flex-grow-1" t-attf-class="{{props.class}}">
            <button t-if="props.onClickPlus" class="list-plus-btn btn btn-secondary btn-lg me-1" t-on-click="props.onClickPlus">
                <i class="fa fa-fw fa-plus-circle" aria-hidden="true"/>
            </button>
            <button t-if="this.sizing.isLarger or props.forceSmall" t-on-click="toggle"
                class="btn btn-secondary mx-1 fa fa-caret-down" />
            <div class="overflow-hidden w-100 position-relative">
                <div t-ref="container" class="list-container-items d-flex w-100">
                    <div t-if="!props.forceSmall" t-foreach="props.items" t-as="item" t-key="item_index" t-att-class="{'invisible': shouldBeInvisible(item_index)}">
                        <t t-slot="default" item="item"/>
                    </div>
                </div>
            </div>
        </div>
    `;setup(){this.container=useRef("container");this.sizing=useIsChildLarger(this.container);this.ui=useService("ui");this.dialog=useService("dialog");useEffect(()=>{this.sizing.reload();},()=>[this.props.items]);}
shouldBeInvisible(itemIndex){return itemIndex>=this.sizing.maxItems;}
toggle(){this.dialog.add(ListContainerDialog,{items:this.props.items,slots:this.props.slots,});}}
return __exports;});;

/* /point_of_sale/static/src/app/generic_components/numpad/numpad.js */
odoo.define('@point_of_sale/app/generic_components/numpad/numpad',['@web/core/utils/hooks','@odoo/owl','@web/core/l10n/localization'],function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{Component}=require("@odoo/owl");const{localization}=require("@web/core/l10n/localization");const buttonsType=__exports.buttonsType={type:Array,element:[{type:Object,shape:{value:String,text:{type:String,optional:true},class:{type:String,optional:true},disabled:{type:Boolean,optional:true},},},Number,String,],};const DECIMAL=__exports.DECIMAL={get value(){return localization.decimalPoint;},};const BACKSPACE=__exports.BACKSPACE={value:"Backspace",text:"⌫"};const ZERO=__exports.ZERO={value:"0"};const DEFAULT_LAST_ROW=__exports.DEFAULT_LAST_ROW=[{value:"-",text:"+/-"},ZERO,DECIMAL];const EMPTY=__exports.EMPTY={value:""};__exports.getButtons=getButtons;function getButtons(lastRow,rightColumn){return[{value:"1"},{value:"2"},{value:"3"},...(rightColumn?[rightColumn[0]]:[]),{value:"4"},{value:"5"},{value:"6"},...(rightColumn?[rightColumn[1]]:[]),{value:"7"},{value:"8"},{value:"9"},...(rightColumn?[rightColumn[2]]:[]),...lastRow,...(rightColumn?[rightColumn[3]]:[]),];}
__exports.enhancedButtons=enhancedButtons;function enhancedButtons(){return getButtons(DEFAULT_LAST_ROW,[{value:"+10"},{value:"+20"},{value:"+50"},BACKSPACE,]);}
const Numpad=__exports.Numpad=class Numpad extends Component{static template="point_of_sale.Numpad";static props={class:{type:String,optional:true},onClick:{type:Function,optional:true},buttons:{type:buttonsType,optional:true},};static defaultProps={class:"numpad",};get buttons(){return this.props.buttons||getButtons([DECIMAL,ZERO,BACKSPACE]);}
setup(){if(!this.props.onClick){this.numberBuffer=useService("number_buffer");this.onClick=(buttonValue)=>this.numberBuffer.sendKey(buttonValue);}else{this.onClick=this.props.onClick;}}}
return __exports;});;

/* /point_of_sale/static/src/app/generic_components/odoo_logo/odoo_logo.js */
odoo.define('@point_of_sale/app/generic_components/odoo_logo/odoo_logo',['@odoo/owl'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const OdooLogo=__exports.OdooLogo=class OdooLogo extends Component{static template="point_of_sale.OdooLogo";static props={class:{type:String,optional:true},style:{type:String,optional:true},monochrome:{type:Boolean,optional:true},};static defaultProps={class:"",style:"",monochrome:false,};}
return __exports;});;

/* /point_of_sale/static/src/app/generic_components/order_widget/order_widget.js */
odoo.define('@point_of_sale/app/generic_components/order_widget/order_widget',['@odoo/owl','@point_of_sale/app/generic_components/centered_icon/centered_icon','@web/core/l10n/translation','@point_of_sale/app/generic_components/orderline/orderline','@web/views/fields/formatters'],function(require){'use strict';let __exports={};const{Component,useEffect,useRef}=require("@odoo/owl");const{CenteredIcon}=require("@point_of_sale/app/generic_components/centered_icon/centered_icon");const{_t}=require("@web/core/l10n/translation");const{Orderline}=require("@point_of_sale/app/generic_components/orderline/orderline");const{formatMonetary}=require("@web/views/fields/formatters");const OrderWidget=__exports.OrderWidget=class OrderWidget extends Component{static template="point_of_sale.OrderWidget";static props={lines:{type:Array,element:Object,optional:true},slots:{type:Object,optional:true},taxTotals:{type:Object,optional:true},style:{type:String,optional:true},class:{type:String,optional:true},generalNote:{type:String,optional:true},screenName:{type:String,optional:true},};static defaultProps={style:"",class:"",};static components={CenteredIcon,Orderline};setup(){this.scrollableRef=useRef("scrollable");this.formatMonetary=formatMonetary;useEffect(()=>{this.scrollableRef.el?.querySelector(".orderline.selected")?.scrollIntoView({behavior:"smooth",block:"start"});});}
emptyCartText(){return _t("Start adding products");}}
return __exports;});;

/* /point_of_sale/static/src/app/generic_components/orderline/orderline.js */
odoo.define('@point_of_sale/app/generic_components/orderline/orderline',['@odoo/owl'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const Orderline=__exports.Orderline=class Orderline extends Component{static template="point_of_sale.Orderline";static props={class:{type:Object,optional:true},line:{type:Object,shape:{isSelected:{type:Boolean,optional:true},productName:String,price:String,qty:String,unit:{type:String,optional:true},unitPrice:String,discount:{type:String,optional:true},comboParent:{type:String,optional:true},oldUnitPrice:{type:String,optional:true},customerNote:{type:String,optional:true},internalNote:{type:String,optional:true},imageSrc:{type:String,optional:true},packLotLines:{type:Array,optional:true},price_without_discount:{type:String,optional:true},taxGroupLabels:{type:String,optional:true},},},showTaxGroupLabels:{type:Boolean,optional:true},slots:{type:Object,optional:true},basic_receipt:{type:Boolean,optional:true},};static defaultProps={class:{},showTaxGroupLabels:false,basic_receipt:false,};}
return __exports;});;

/* /point_of_sale/static/src/app/generic_components/product_card/product_card.js */
odoo.define('@point_of_sale/app/generic_components/product_card/product_card',['@odoo/owl'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const ProductCard=__exports.ProductCard=class ProductCard extends Component{static template="point_of_sale.ProductCard";static props={class:{String,optional:true},name:String,product:Object,productId:Number|String,price:String,color:{type:[Number,undefined],optional:true},imageUrl:[String,Boolean],productInfo:{Boolean,optional:true},onClick:{type:Function,optional:true},onProductInfoClick:{type:Function,optional:true},showWarning:{type:Boolean,optional:true},productCartQty:{type:[Number,undefined],optional:true},};static defaultProps={onClick:()=>{},onProductInfoClick:()=>{},class:"",showWarning:false,};}
return __exports;});;

/* /point_of_sale/static/src/app/hardware_proxy/hardware_proxy_service.js */
odoo.define('@point_of_sale/app/hardware_proxy/hardware_proxy_service',['@point_of_sale/app/printer/hw_printer','@odoo/owl','@web/core/browser/browser','@web/core/network/rpc','@web/core/registry','@point_of_sale/utils','@web/core/utils/reactive'],function(require){'use strict';let __exports={};const{HWPrinter}=require("@point_of_sale/app/printer/hw_printer");const{EventBus,reactive}=require("@odoo/owl");const{browser}=require("@web/core/browser/browser");const{rpc}=require("@web/core/network/rpc");const{registry}=require("@web/core/registry");const{deduceUrl}=require("@point_of_sale/utils");const{effect}=require("@web/core/utils/reactive");const HardwareProxy=__exports.HardwareProxy=class HardwareProxy extends EventBus{static serviceDependencies=[];constructor(){super();this.setup(...arguments);}
setup(){this.debugWeight=0;this.useDebugWeight=false;this.host="";this.keptalive=false;this.connectionInfo=reactive({status:"init",drivers:{}});effect((info)=>{if(info.status==="connected"&&this.printer){this.printer.printReceipt();}},[this.connectionInfo]);}
setConnectionInfo(info){Object.assign(this.connectionInfo,info);if(!info.drivers&&this.connectionInfo.status==="disconnected"){this.connectionInfo.drivers={};}}
disconnect(){if(this.connectionInfo.status!=="disconnected"){this.host=null;this.setConnectionInfo({status:"disconnected"});}}
async connect(){if(this.pos.config.iface_print_via_proxy){this.connectToPrinter();}
try{if(await this.message("handshake")){this.setConnectionInfo({status:"connected"});localStorage.hw_proxy_url=this.host;this.keepalive();}else{this.setConnectionInfo({status:"disconnected"});console.error("Connection refused by the Proxy");}}catch{this.setConnectionInfo({status:"disconnected"});console.error("Could not connect to the Proxy");}}
connectToPrinter(){this.printer=new HWPrinter({url:this.host});}
async autoconnect(options){this.setConnectionInfo({status:"connecting",drivers:{}});let url=options.force_ip||localStorage.hw_proxy_url;if(!url){return new Promise(()=>{});}
url=deduceUrl(url);if(await this.checkProxyAvailability(url)){this.host=url;return this.connect(url);}}
keepalive(){const status=()=>{const always=()=>setTimeout(status,5000);const xhr=new browser.XMLHttpRequest();xhr.timeout=2500;rpc(`${this.host}/hw_proxy/status_json`,{},{silent:true,xhr}).then((drivers)=>this.setConnectionInfo({status:"connected",drivers}),()=>{if(this.connectionInfo.status!=="connecting"){this.setConnectionInfo({status:"disconnected"});}}).then(always,always);};if(!this.keptalive){this.keptalive=true;status();}}
message(name,params){this.dispatchEvent(new CustomEvent(`send_message:${name}`));if(this.connectionInfo.status==="disconnected"){return Promise.reject();}
return rpc(`${this.host}/hw_proxy/${name}`,params,{silent:true});}
async checkProxyAvailability(url){this.setConnectionInfo({status:"connecting"});const maxRetries=3;for(let i=0;i<=maxRetries;i++){const timeoutController=new AbortController();setTimeout(()=>timeoutController.abort(),1000);const response=await browser.fetch(`${url}/hw_proxy/hello`,{signal:timeoutController.signal,}).catch(()=>({}));if(response.ok){return true;}}
this.setConnectionInfo({status:"disconnected"});return false;}
readScale(){if(this.useDebugWeight){return this.debugWeight;}
return this.message("scale_read").then(({weight})=>weight).catch(()=>0);}
setDebugWeight(weight){this.useDebugWeight=true;this.debugWeight=weight;}
resetDebugWeight(){this.useDebugWeight=false;this.debugWeight=0;}
log(){return this.message("log",{arguments:[...arguments]});}
async openCashbox(action=false){if(this.pos.config.iface_cashdrawer&&this.printer&&["connected","init"].includes(this.connectionInfo.status)){this.printer.openCashbox();if(action){this.pos.logEmployeeMessage(action,"CASH_DRAWER_ACTION");}}}}
const hardwareProxyService=__exports.hardwareProxyService={dependencies:HardwareProxy.serviceDependencies,start(env,deps){return new HardwareProxy(deps);},};registry.category("services").add("hardware_proxy",hardwareProxyService);return __exports;});;

/* /point_of_sale/static/src/app/hooks/use_tours.js */
odoo.define('@point_of_sale/app/hooks/use_tours',['@web_tour/tour_service/tour_state','@point_of_sale/app/components/tour_selector_popup/tour_selector_popup','@point_of_sale/app/store/make_awaitable_dialog','@web/core/utils/hooks'],function(require){'use strict';let __exports={};const{tourState}=require("@web_tour/tour_service/tour_state");const{TourSelectorPopup}=require("@point_of_sale/app/components/tour_selector_popup/tour_selector_popup");const{makeAwaitable}=require("@point_of_sale/app/store/make_awaitable_dialog");const{useService}=require("@web/core/utils/hooks");__exports[Symbol.for("default")]=useTours;function useTours(){const tour=useService("tour_service");const dialog=useService("dialog");const states={selectedTours:new Set(),running:false,index:0,};let fakeTourInterval=null;tourState.clear();const toggle=async()=>{states.index=0;states.running=!states.running;clearInterval(fakeTourInterval);if(!states.running){tourState.clear();return;}
const tours=await makeAwaitable(dialog,TourSelectorPopup,{});if(!tours||!tours.length){tourState.clear();states.running=false;return;}
states.selectedTours=tours;fakeTourInterval=setInterval(()=>{const state=tourState.getCurrentTour();if(!state){runTour();}},500);};const runTour=async()=>{try{if(states.index>=states.selectedTours.length){states.index=0;}
await tour.startTour(states.selectedTours[states.index],{stepDelay:150,throw:false,});states.index++;}catch(error){console.warn("Error in tour",error);}};return{toggle};}
return __exports;});;

/* /point_of_sale/static/src/app/loader/loader.js */
odoo.define('@point_of_sale/app/loader/loader',['@odoo/owl'],function(require){'use strict';let __exports={};const{Component,useEffect}=require("@odoo/owl");const Loader=__exports.Loader=class Loader extends Component{static template="point_of_sale.Loader";static props={loader:{type:Object,shape:{isShown:Boolean}}};setup(){useEffect((isShown)=>{if(!isShown){setTimeout(()=>{this.__owl__.app.destroy();},1000);}},()=>[this.props.loader.isShown]);}}
return __exports;});;

/* /point_of_sale/static/src/app/missing_fields.js */
odoo.define('@point_of_sale/app/missing_fields',['@odoo/owl','@web/core/registry'],function(require){'use strict';let __exports={};const{Component,xml}=require("@odoo/owl");const{registry}=require("@web/core/registry");class DefaultField extends Component{static template=xml``;static props=["*"];}
registry.category("fields").add("list.many2one_avatar_user",{component:DefaultField});registry.category("fields").add("list.list_activity",{component:DefaultField});return __exports;});;

/* /point_of_sale/static/src/app/models/account_tax.js */
odoo.define('@point_of_sale/app/models/account_tax',['@web/core/registry','@point_of_sale/app/models/related_models'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{Base}=require("@point_of_sale/app/models/related_models");const AccountTax=__exports.AccountTax=class AccountTax extends Base{static pythonModel="account.tax";get sum_repartition_factor(){if(this.amount_type!=="group"){const factorSum=this.repartition_line_ids.reduce((sum,line)=>sum+line.factor_percent,0);return factorSum/100;}else{return undefined;}}}
registry.category("pos_available_models").add(AccountTax.pythonModel,AccountTax);return __exports;});;

/* /point_of_sale/static/src/app/models/data_service.js */
odoo.define('@point_of_sale/app/models/data_service',['@web/core/utils/reactive','@point_of_sale/app/models/related_models','@web/core/registry','@web/core/utils/concurrency','@odoo/owl','@web/core/utils/timing','@point_of_sale/app/models/utils/indexed_db','@point_of_sale/app/models/data_service_options','@point_of_sale/utils','@web/core/browser/browser','@web/core/network/rpc','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{Reactive,effect}=require("@web/core/utils/reactive");const{createRelatedModels}=require("@point_of_sale/app/models/related_models");const{registry}=require("@web/core/registry");const{Mutex}=require("@web/core/utils/concurrency");const{markRaw}=require("@odoo/owl");const{batched}=require("@web/core/utils/timing");const IndexedDB=require("@point_of_sale/app/models/utils/indexed_db")[Symbol.for("default")];const{DataServiceOptions}=require("@point_of_sale/app/models/data_service_options");const{getOnNotified,uuidv4}=require("@point_of_sale/utils");const{browser}=require("@web/core/browser/browser");const{ConnectionLostError,RPCError}=require("@web/core/network/rpc");const{_t}=require("@web/core/l10n/translation");const{DateTime}=luxon;const INDEXED_DB_VERSION=1;const PosData=__exports.PosData=class PosData extends Reactive{static modelToLoad=[];static serviceDependencies=["orm","bus_service"];constructor(){super();this.ready=this.setup(...arguments).then(()=>this);}
async setup(env,{orm,bus_service}){this.orm=orm;this.bus=bus_service;this.relations=[];this.custom={};this.syncInProgress=false;this.mutex=markRaw(new Mutex());this.records={};this.opts=new DataServiceOptions();this.channels=[];this.network={warningTriggered:false,offline:false,loading:true,unsyncData:[],};this.intializeWebsocket();this.initIndexedDB();await this.initData();effect(batched((records)=>{this.syncDataWithIndexedDB(records);}),[this.records]);browser.addEventListener("online",()=>{if(this.network.offline){this.network.offline=false;this.network.warningTriggered=false;}
this.syncData();});browser.addEventListener("offline",()=>{this.network.offline=true;});this.bus.addEventListener("connect",this.reconnectWebSocket.bind(this));}
intializeWebsocket(){this.onNotified=getOnNotified(this.bus,odoo.access_token);}
reconnectWebSocket(){this.intializeWebsocket();const channels=[...this.channels];this.channels=[];while(channels.length){const channel=channels.pop();this.connectWebSocket(channel.channel,channel.method);console.warn("Reconnecting to channel",channel.channel);}}
connectWebSocket(channel,method){this.channels.push({channel,method,});this.onNotified(channel,method);}
async resetIndexedDB(){await this.indexedDB.reset();}
get databaseName(){return`config-id_${odoo.pos_config_id}_${odoo.access_token}`;}
initIndexedDB(){const models=Object.entries(this.opts.databaseTable).map(([name,data])=>[data.key,name,]);this.indexedDB=new IndexedDB(this.databaseName,INDEXED_DB_VERSION,models);}
deleteDataIndexedDB(model,uuid){this.indexedDB.delete(model,[{uuid}]);}
syncDataWithIndexedDB(records){const dataSorter=(records,isFinalized,key)=>records.reduce((acc,record)=>{const finalizedState=isFinalized(record);if(finalizedState===undefined||finalizedState===true){if(record[key]){acc.remove.push(record[key]);}}else{acc.put.push(dataFormatter(record));}
return acc;},{put:[],remove:[]});const dataFormatter=(record)=>{const serializedData=record.serialize();const uiState=typeof record.uiState==="object"?record.serializeState():"{}";return{...serializedData,JSONuiState:JSON.stringify(uiState),id:record.id};};const dataToDelete={};for(const[model,params]of Object.entries(this.opts.databaseTable)){const modelRecords=Array.from(records[model].values());if(!modelRecords.length){continue;}
const data=dataSorter(modelRecords,params.condition,params.key);this.indexedDB.create(model,data.put);dataToDelete[model]=data.remove;}
this.indexedDB.readAll(Object.keys(this.opts.databaseTable)).then((data)=>{if(!data){return;}
for(const[model,records]of Object.entries(data)){const key=this.opts.databaseTable[model].key;let keysToDelete=[];if(dataToDelete[model]){const keysInIndexedDB=new Set(records.map((record)=>record[key]));keysToDelete=dataToDelete[model].filter((key)=>keysInIndexedDB.has(key));}
for(const record of records){const localRecord=this.models[model].get(record.id);if(!localRecord){keysToDelete.push(record[key]);}}
if(keysToDelete.length){this.indexedDB.delete(model,keysToDelete);}}});}
async preLoadData(data){return data;}
async loadIndexedDBData(){const data=await this.indexedDB.readAll();if(!data){return;}
const newData={};for(const model of Object.keys(this.opts.databaseTable)){const rawRec=data[model];if(rawRec){newData[model]=rawRec.filter((r)=>!this.models[model].get(r.id));}}
if(data["product.product"]){data["product.product"]=data["product.product"].filter((p)=>!this.models["product.product"].get(p.id));}
const preLoadData=await this.preLoadData(data);const missing=await this.missingRecursive(preLoadData);const results=this.models.loadData(missing,[],true,true);for(const[model,data]of Object.entries(results)){for(const record of data){if(record.raw.JSONuiState){const loadedRecords=this.models[model].find((r)=>r.uuid===record.uuid);if(loadedRecords){loadedRecords.setupState(JSON.parse(record.raw.JSONuiState));}}}}
return results;}
resetUnsyncQueue(){this.network.unsyncData=[];}
async loadInitialData(){try{return await this.orm.call("pos.session","load_data",[odoo.pos_session_id,PosData.modelToLoad,]);}catch(error){let message=_t("An error occurred while loading the Point of Sale: \n");if(error instanceof RPCError){message+=error.data.message;}else{message+=error.message;}
window.alert(message);}}
async initData(){const modelClasses={};const relations={};const fields={};const data={};const response=await this.loadInitialData();for(const[model,values]of Object.entries(response)){relations[model]=values.relations;fields[model]=values.fields;data[model]=values.data;}
for(const posModel of registry.category("pos_available_models").getAll()){const pythonModel=posModel.pythonModel;const extraFields=posModel.extraFields||{};modelClasses[pythonModel]=posModel;relations[pythonModel]={...relations[pythonModel],...extraFields,};}
const{models,records,indexedRecords}=createRelatedModels(relations,modelClasses,this.opts);this.records=records;this.indexedRecords=indexedRecords;this.fields=fields;this.relations=relations;this.models=models;const order=data["pos.order"]||[];const orderlines=data["pos.order.line"]||[];delete data["pos.order"];delete data["pos.order.line"];this.models.loadData(data,this.modelToLoad);this.models.loadData({"pos.order":order,"pos.order.line":orderlines});const dbData=await this.loadIndexedDBData();if(dbData&&dbData["pos.order"]?.length){const ids=dbData["pos.order"].map((o)=>o.id).filter((id)=>typeof id==="number");if(ids.length){const result=await this.read("pos.order",ids);const serverIds=result.map((r)=>r.id);for(const id of ids){if(!serverIds.includes(id)){this.localDeleteCascade(this.models["pos.order"].get(id));}}}}
this.loadedIndexedDBProducts=dbData?dbData["product.product"]:[];this.network.loading=false;}
async execute({type,model,ids,values,method,queue,args=[],kwargs={},fields=[],options=[],uuid="",}){this.network.loading=true;try{if(this.network.offline){throw new ConnectionLostError();}
let result=true;let limitedFields=false;if(fields.length===0){fields=this.fields[model]||[];}
if(this.fields[model]&&fields.sort().join(",")!==this.fields[model].sort().join(",")){limitedFields=true;}
switch(type){case"write":result=await this.orm.write(model,ids,values);break;case"delete":result=await this.orm.unlink(model,ids);break;case"call":result=await this.orm.call(model,method,args,kwargs);break;case"read":queue=false;result=await this.orm.read(model,ids,fields,{...options,load:false,});break;case"search_read":queue=false;result=await this.orm.searchRead(model,args,fields,{...options,load:false,});}
if(type==="create"){const response=await this.orm.create(model,values);values[0].id=response[0];result=values;}
const nonExistentRecords=[];if(limitedFields){const X2MANY_TYPES=new Set(["many2many","one2many"]);for(const record of result){const localRecord=this.models[model].get(record.id);if(localRecord){const formattedForUpdate={};for(const[field,value]of Object.entries(record)){const fieldsParams=this.relations[model][field];if(!fieldsParams){console.info("Warning, attempt to load a non-existent field.");continue;}
if(X2MANY_TYPES.has(fieldsParams.type)){formattedForUpdate[field]=value.filter((id)=>this.models[fieldsParams.relation].get(id)).map((id)=>["link",this.models[fieldsParams.relation].get(id),]);}else if(fieldsParams.type==="many2one"){if(this.models[fieldsParams.relation].get(value)){formattedForUpdate[field]=["link",this.models[fieldsParams.relation].get(value),];}}else{formattedForUpdate[field]=value;}}
localRecord.update(formattedForUpdate);}else{nonExistentRecords.push(record);}}
if(nonExistentRecords.length){console.warn("Warning, attempt to load a non-existent record with limited fields.");result=nonExistentRecords;}}
if(this.models[model]&&this.opts.autoLoadedOrmMethods.includes(type)&&(!limitedFields||nonExistentRecords.length)){const data=await this.missingRecursive({[model]:result});const results=this.models.loadData(data);result=results[model];}
if(result===null||result===undefined){return true;}
return result;}catch(error){let throwErr=true;const uuids=this.network.unsyncData.map((d)=>d.uuid);if(queue&&!uuids.includes(uuid)&&method!=="sync_from_ui"&&error instanceof ConnectionLostError){this.network.unsyncData.push({args:[...arguments],date:DateTime.now(),try:1,uuid:uuidv4(),});throwErr=false;}
if(throwErr){throw error;}}finally{this.network.loading=false;}}
async missingRecursive(recordMap,idsMap={},acc={}){const missingRecords={};const recordInMapByModelIds=Object.entries(recordMap).reduce((acc,[model,records])=>{acc[model]=new Set(records.map((r)=>r.id));return acc;},{});for(const[model,records]of Object.entries(recordMap)){if(!acc[model]){acc[model]=records;}else{acc[model]=acc[model].concat(records);}
if(!this.relations[model]){continue;}
const relations=Object.entries(this.relations[model]).filter(([,rel])=>rel.relation&&rel.type&&this.models[rel.relation]);for(const[,rel]of relations){if(this.opts.pohibitedAutoLoadedModels.includes(rel.relation)){continue;}
const values=records.map((record)=>record[rel.name]).flat();const missing=values.filter((value)=>{if(!value||typeof value!=="number"||idsMap[rel.relation]?.has(value)){return false;}
const record=this.models[rel.relation].get(value);return((!record||!record.id)&&!recordInMapByModelIds[rel.relation]?.has(value));});if(missing.length>0){if(!missingRecords[rel.relation]){missingRecords[rel.relation]=new Set(missing);}else{missingRecords[rel.relation]=new Set([...missingRecords[rel.relation],...missing,]);}}}}
const newRecordMap={};for(const[model,ids]of Object.entries(missingRecords)){if(!idsMap[model]){idsMap[model]=new Set(ids);}else{idsMap[model]=idsMap[model]=new Set([...idsMap[model],...ids]);}
const data=await this.orm.read(model,Array.from(ids),this.fields[model],{load:false,});newRecordMap[model]=data;}
if(Object.keys(newRecordMap).length>0){return await this.missingRecursive(newRecordMap,idsMap,acc);}else{return acc;}}
async syncData(){this.syncInProgress=true;await this.mutex.exec(async()=>{while(this.network.unsyncData.length>0){const data=this.network.unsyncData[0];const result=await this.execute({...data.args[0],uuid:data.uuid});if(result){this.network.unsyncData.shift();}else{this.network.unsyncData[0].try+=1;break;}}});this.syncInProgress=false;}
write(model,ids,vals){const records=[];for(const id of ids){const record=this.models[model].get(id);delete vals.id;record.update(vals);const dataToUpdate={};const keysToUpdate=Object.keys(vals);for(const key of keysToUpdate){dataToUpdate[key]=vals[key];}
records.push(record);this.ormWrite(model,[record.id],dataToUpdate);}
return records;}
delete(model,ids){const deleted=[];for(const id of ids){const record=this.models[model].get(id);deleted.push(id);record.delete();}
this.ormDelete(model,ids);return deleted;}
async searchRead(model,domain=[],fields=[],options={},queue=false){return await this.execute({type:"search_read",model,args:domain,fields,options,queue,});}
async read(model,ids,fields=[],options=[],queue=false){return await this.execute({type:"read",model,ids,fields,options,queue});}
async call(model,method,args=[],kwargs={},queue=false){return await this.execute({type:"call",model,method,args,kwargs,queue});}
async silentCall(model,method,args=[],kwargs={},queue=false){try{return await this.execute({type:"call",model,method,args,kwargs,queue});}catch(e){console.warn("Silent call failed:",e);return false;}}
async callRelated(model,method,args=[],kwargs={},queue=true){const data=await this.execute({type:"call",model,method,args,kwargs,queue});this.deviceSync.dispatch(data);const results=this.models.loadData(data,[],true);return results;}
async create(model,values,queue=true){return await this.execute({type:"create",model,values,queue});}
async ormWrite(model,ids,values,queue=true){const result=await this.execute({type:"write",model,ids,values,queue});this.deviceSync.dispatch({[model]:ids.map((id)=>({id}))});return result;}
async ormDelete(model,ids,queue=true){return await this.execute({type:"delete",model,ids,queue});}
localDeleteCascade(record,removeFromServer=false){const recordModel=record.constructor.pythonModel;const relationsToDelete=Object.values(this.relations[recordModel]).filter((rel)=>this.opts.cascadeDeleteModels.includes(rel.relation)).map((rel)=>rel.name);const recordsToDelete=Object.entries(record).filter(([idx,values])=>relationsToDelete.includes(idx)&&values).map(([idx,values])=>values).flat();this.indexedDB.delete(recordModel,[record.uuid]);for(const item of recordsToDelete){this.indexedDB.delete(item.model.modelName,[item.uuid]);item.delete({silent:!removeFromServer});}
const result=record.delete({silent:!removeFromServer});return result;}
deleteUnsyncData(uuid){this.network.unsyncData=this.network.unsyncData.filter((d)=>d.uuid!==uuid);}}
const PosDataService=__exports.PosDataService={dependencies:PosData.serviceDependencies,async start(env,deps){return new PosData(env,deps).ready;},};registry.category("services").add("pos_data",PosDataService);return __exports;});;

/* /point_of_sale/static/src/app/models/data_service_options.js */
odoo.define('@point_of_sale/app/models/data_service_options',[],function(require){'use strict';let __exports={};const DataServiceOptions=__exports.DataServiceOptions=class DataServiceOptions{get databaseTable(){return{"pos.order":{key:"uuid",condition:(record)=>record.finalized&&typeof record.id==="number",},"pos.order.line":{key:"uuid",condition:(record)=>record.order_id?.finalized&&typeof record.order_id.id==="number",},"pos.payment":{key:"uuid",condition:(record)=>record.pos_order_id?.finalized&&typeof record.pos_order_id.id==="number",},"pos.pack.operation.lot":{key:"id",condition:(record)=>record.pos_order_line_id?.order_id?.finalized&&typeof record.pos_order_line_id.order_id.id==="number",},"product.attribute.custom.value":{key:"id",condition:(record)=>record.models["pos.order.line"].find((l)=>{const customAttrIds=l.custom_attribute_value_ids.map((v)=>v.id);return customAttrIds.includes(record.id);}),},};}
get dynamicModels(){return["pos.order","pos.order.line","pos.payment","pos.pack.operation.lot","product.attribute.custom.value",];}
get databaseIndex(){const databaseTable=this.databaseTable;const indexes={"pos.order":["uuid"],"pos.order.line":["uuid"],"product.product":["barcode","pos_categ_ids","write_date"],"account.fiscal.position":["tax_ids"],"product.packaging":["barcode"],"pos.payment":["uuid"],"loyalty.program":["trigger_product_ids"],"calendar.event":["appointment_resource_ids"],"res.partner":["barcode"],};for(const model in databaseTable){if(!indexes[model]){indexes[model]=[databaseTable[model].key];}else if(!indexes[model].includes(databaseTable[model].key)){indexes[model].push(databaseTable[model].key);}}
return indexes;}
get autoLoadedOrmMethods(){return["read","search_read","create"];}
get pohibitedAutoLoadedModels(){return["pos.session","pos.config","res.users","pos.order","account.tax",];}
get cascadeDeleteModels(){return["pos.order.line","pos.payment","product.attribute.custom.value","pos.pack.operation.lot",];}}
return __exports;});;

/* /point_of_sale/static/src/app/models/pos_category.js */
odoo.define('@point_of_sale/app/models/pos_category',['@web/core/registry','@point_of_sale/app/models/related_models'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{Base}=require("@point_of_sale/app/models/related_models");const PosCategory=__exports.PosCategory=class PosCategory extends Base{static pythonModel="pos.category";getAllChildren(){const children=[this];if(this.child_ids.length===0){return children;}
for(const child of this.child_ids){children.push(...child.getAllChildren());}
return children;}
get allParents(){const parents=[];let parent=this.parent_id;if(!parent){return parents;}
while(parent){parents.unshift(parent);parent=parent.parent_id;}
return parents.reverse();}}
registry.category("pos_available_models").add(PosCategory.pythonModel,PosCategory);return __exports;});;

/* /point_of_sale/static/src/app/models/pos_order.js */
odoo.define('@point_of_sale/app/models/pos_order',['@web/core/registry','@point_of_sale/app/models/related_models','@web/core/l10n/translation','@web/core/l10n/dates','@web/core/utils/objects','@point_of_sale/utils','@web/core/utils/numbers','@point_of_sale/app/models/utils/compute_combo_items','@account/helpers/account_tax'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{Base}=require("@point_of_sale/app/models/related_models");const{_t}=require("@web/core/l10n/translation");const{formatDate,formatDateTime,serializeDateTime}=require("@web/core/l10n/dates");const{omit}=require("@web/core/utils/objects");const{parseUTCString,qrCodeSrc,random5Chars,uuidv4,gte,lt}=require("@point_of_sale/utils");const{floatIsZero,roundPrecision}=require("@web/core/utils/numbers");const{computeComboItems}=require("@point_of_sale/app/models/utils/compute_combo_items");const{accountTaxHelpers}=require("@account/helpers/account_tax");const{DateTime}=luxon;const formatCurrency=registry.subRegistries.formatters.content.monetary[1];const PosOrder=__exports.PosOrder=class PosOrder extends Base{static pythonModel="pos.order";setup(vals){super.setup(vals);if(!this.session_id&&(!this.finalized||typeof this.id!=="number")){this.update({session_id:this.session});}
this.date_order=vals.date_order||serializeDateTime(luxon.DateTime.now());this.nb_print=vals.nb_print||0;this.to_invoice=vals.to_invoice||false;this.shipping_date=vals.shipping_date||false;this.state=vals.state||"draft";this.uuid=vals.uuid?vals.uuid:uuidv4();this.last_order_preparation_change=vals.last_order_preparation_change?JSON.parse(vals.last_order_preparation_change):{lines:{},generalNote:"",sittingMode:"dine in",};this.general_note=vals.general_note||"";this.tracking_number=vals.tracking_number&&!isNaN(parseInt(vals.tracking_number))?vals.tracking_number:((this.session?.id%10)*100+(this.sequence_number%100)).toString();if(!vals.lines){this.lines=[];}
if(!this.uiState){this.uiState={lineToRefund:{},displayed:true,booked:false,screen_data:{},selected_orderline_uuid:undefined,selected_paymentline_uuid:undefined,locked:this.state!=="draft",TipScreen:{inputTipAmount:"",},};}}
get user(){return this.models["res.users"].getFirst();}
get company(){return this.models["res.company"].getFirst();}
get config(){return this.models["pos.config"].getFirst();}
get currency(){return this.config.currency_id;}
get pickingType(){return this.models["stock.picking.type"].getFirst();}
get session(){return this.models["pos.session"].getFirst();}
get finalized(){return this.state!=="draft";}
get totalQuantity(){return this.lines.reduce((sum,line)=>sum+line.get_quantity(),0);}
get isUnsyncedPaid(){return this.finalized&&typeof this.id==="string";}
get originalSplittedOrder(){return this.models["pos.order"].find((o)=>o.uuid===this.uiState.splittedOrderUuid);}
getEmailItems(){return[_t("the receipt")].concat(this.is_to_invoice()?[_t("the invoice")]:[]);}
get taxTotals(){const currency=this.config.currency_id;const company=this.company;const orderLines=this.lines;const documentSign=this.lines.length===0||!this.lines.every((l)=>lt(l.qty,0,{decimals:currency.decimal_places}))?1:-1;const baseLines=orderLines.map((line)=>{return accountTaxHelpers.prepare_base_line_for_taxes_computation(line,line.prepareBaseLineForTaxesComputationExtraValues({quantity:documentSign*line.qty,}));});accountTaxHelpers.add_tax_details_in_base_lines(baseLines,company);accountTaxHelpers.round_base_lines_tax_details(baseLines,company);const cashRounding=!this.config.only_round_cash_method&&this.config.cash_rounding?this.config.rounding_method:null;const taxTotals=accountTaxHelpers.get_tax_totals_summary(baseLines,currency,company,{cash_rounding:cashRounding,});taxTotals.order_sign=documentSign;taxTotals.order_total=taxTotals.total_amount_currency-(taxTotals.cash_rounding_base_amount_currency||0.0);let order_rounding=0;let remaining=taxTotals.order_total;const validPayments=this.payment_ids.filter((p)=>p.is_done()&&!p.is_change);for(const[payment,isLast]of validPayments.map((p,i)=>[p,i===validPayments.length-1,])){const paymentAmount=documentSign*payment.get_amount();if(isLast){if(this.config.cash_rounding){const roundedRemaining=this.getRoundedRemaining(this.config.rounding_method,remaining);if(!floatIsZero(paymentAmount-remaining,this.currency.decimal_places)){order_rounding=roundedRemaining-remaining;}}}
remaining-=paymentAmount;}
taxTotals.order_rounding=order_rounding;taxTotals.order_remaining=remaining;const remaining_with_rounding=remaining+order_rounding;if(floatIsZero(remaining_with_rounding,currency.decimal_places)){taxTotals.order_has_zero_remaining=true;}else{taxTotals.order_has_zero_remaining=false;}
return taxTotals;}
shouldRound(paymentMethod){return(this.config.cash_rounding&&(!this.config.only_round_cash_method||paymentMethod.is_cash_count));}
getDefaultAmountDueToPayIn(paymentMethod){const{order_remaining,order_sign}=this.taxTotals;const amount=this.shouldRound(paymentMethod)?this.getRoundedRemaining(this.config.rounding_method,order_remaining):order_remaining;return order_sign*amount;}
getRoundedRemaining(roundingMethod,remaining){let{rounding_method:method,rounding}=roundingMethod;if(lt(remaining,0,{decimals:this.currency.decimal_places,})){method=method==="UP"?"DOWN":method==="DOWN"?"UP":method==="HALF-UP"?"HALF-DOWN":method==="HALF-DOWN"?"HALF-UP":method;}
if(floatIsZero(remaining,this.currency.decimal_places)){return 0;}
return roundPrecision(remaining,rounding,method);}
export_for_printing(baseUrl,headerData){const paymentlines=this.payment_ids.filter((p)=>!p.is_change).map((p)=>p.export_for_printing());const taxTotals=this.taxTotals;const order_rounding=taxTotals.order_rounding;const order_change=this.get_change();return{orderlines:this.getSortedOrderlines().map((l)=>omit(l.getDisplayData(),"internalNote")),taxTotals:taxTotals,label_total:_t("TOTAL"),label_rounding:_t("Rounding"),label_change:_t("CHANGE"),label_discounts:_t("Discounts"),show_rounding:!floatIsZero(order_rounding,this.currency.decimal_places),order_rounding:order_rounding,show_change:!floatIsZero(order_change,this.currency.decimal_places),order_change:order_change,paymentlines,amount_total:this.get_total_with_tax(),total_without_tax:this.get_total_without_tax(),amount_tax:this.get_total_tax(),total_paid:this.get_total_paid(),total_discount:this.get_total_discount(),tax_details:this.get_tax_details(),change:this.amount_return,name:this.pos_reference,generalNote:this.general_note||"",invoice_id:null,cashier:this.getCashierName(),date:formatDateTime(parseUTCString(this.date_order)),pos_qr_code:this.company.point_of_sale_use_ticket_qr_code&&this.finalized&&qrCodeSrc(`${baseUrl}/pos/ticket/`),ticket_code:this.ticket_code,base_url:baseUrl,footer:this.config.receipt_footer,shippingDate:this.shipping_date&&formatDate(DateTime.fromSQL(this.shipping_date)),headerData:{...headerData,trackingNumber:this.tracking_number,},screenName:"ReceiptScreen",};}
getCashierName(){return this.user_id?.name;}
canPay(){return this.lines.length;}
recomputeOrderData(){this.amount_paid=this.get_total_paid();this.amount_tax=this.get_total_tax();this.amount_total=this.get_total_with_tax();this.amount_return=this.get_change();this.lines.forEach((line)=>{line.setLinePrice();});}
get isBooked(){return Boolean(this.uiState.booked||!this.is_empty()||typeof this.id==="number");}
get hasChange(){return this.lines.some((l)=>l.uiState.hasChange);}
updateLastOrderChange(){const orderlineIdx=[];this.lines.forEach((line)=>{if(!line.skip_change){orderlineIdx.push(line.preparationKey);if(this.last_order_preparation_change.lines[line.preparationKey]){this.last_order_preparation_change.lines[line.preparationKey]["quantity"]=line.get_quantity();}else{this.last_order_preparation_change.lines[line.preparationKey]={attribute_value_ids:line.attribute_value_ids.map((a)=>({...a.serialize({orm:true}),name:a.name,})),uuid:line.uuid,isCombo:line.combo_item_id?.id,product_id:line.get_product().id,name:line.get_full_product_name(),basic_name:line.get_product().name,display_name:line.get_product().name,note:line.getNote(),quantity:line.get_quantity(),};}
line.setHasChange(false);line.saved_quantity=line.get_quantity();}});for(const[key,change]of Object.entries(this.last_order_preparation_change.lines)){const orderline=this.models["pos.order.line"].getBy("uuid",change.uuid);const lineNote=orderline?.note;const changeNote=change?.note;if(!orderline||(lineNote&&changeNote&&changeNote.trim()!==lineNote.trim())){delete this.last_order_preparation_change.lines[key];}}
this.last_order_preparation_change.sittingMode=this.takeaway?"takeaway":"dine in";this.last_order_preparation_change.generalNote=this.general_note;}
hasSkippedChanges(){return this.lines.find((orderline)=>orderline.skip_change)?true:false;}
is_empty(){return this.lines.length===0;}
generate_unique_id(){function zero_pad(num,size){var s=""+num;while(s.length<size){s="0"+s;}
return s;}
return(zero_pad(this.session.id,5)+"-"+
zero_pad(this.session.login_number,3)+"-"+
zero_pad(this.sequence_number,4));}
updateSavedQuantity(){this.lines.forEach((line)=>line.updateSavedQuantity());}
assert_editable(){if(this.finalized){throw new Error("Finalized Order cannot be modified");}
return true;}
get_orderline(id){const orderlines=this.lines;for(let i=0;i<orderlines.length;i++){if(orderlines[i].id===id){return orderlines[i];}}
return null;}
get_orderlines_grouped_by_tax_ids(){const orderlines_by_tax_group={};const lines=this.get_orderlines();for(const line of lines){const tax_group=this._get_tax_group_key(line);if(!(tax_group in orderlines_by_tax_group)){orderlines_by_tax_group[tax_group]=[];}
orderlines_by_tax_group[tax_group].push(line);}
return orderlines_by_tax_group;}
_get_tax_group_key(line){return line._getProductTaxesAfterFiscalPosition().map((tax)=>tax.id).join(",");}
calculate_base_amount(lines){const base_amount=lines.reduce((sum,line)=>sum+
line.get_all_prices().priceWithTax-
line.get_all_prices().taxesData.filter((taxData)=>!taxData.tax.price_include).reduce((sum,taxData)=>(sum+=taxData.tax_amount_currency),0),0);return base_amount;}
get_last_orderline(){const orderlines=this.lines;return this.lines.at(orderlines.length-1);}
get_tip(){const tip_product=this.config.tip_product_id;const lines=this.lines;if(!tip_product){return 0;}else{for(const line of lines){if(line.get_product()===tip_product){return line.get_unit_price();}}
return 0;}}
set_pricelist(pricelist){if(pricelist){this.update({pricelist_id:pricelist});}else{this.update({pricelist_id:false});}
const lines_to_recompute=this.lines.filter((line)=>line.price_type==="original"&&!(line.combo_line_ids?.length||line.combo_parent_id));for(const line of lines_to_recompute){const newPrice=line.product_id.get_price(pricelist,line.get_quantity(),line.get_price_extra());line.set_unit_price(newPrice);}
const attributes_prices={};const combo_parent_lines=this.lines.filter((line)=>line.price_type==="original"&&line.combo_line_ids?.length);for(const pLine of combo_parent_lines){attributes_prices[pLine.id]=computeComboItems(pLine.product_id,pLine.combo_line_ids.map((cLine)=>{if(cLine.attribute_value_ids){return{combo_item_id:cLine.combo_item_id,configuration:{attribute_value_ids:cLine.attribute_value_ids,},};}else{return{combo_item_id:cLine.combo_item_id};}}),pricelist,this.models["decimal.precision"].getAll(),this.models["product.template.attribute.value"].getAllBy("id"));}
const combo_children_lines=this.lines.filter((line)=>line.price_type==="original"&&line.combo_parent_id);combo_children_lines.forEach((line)=>{line.set_unit_price(attributes_prices[line.combo_parent_id.id].find((item)=>item.combo_item_id.id===line.combo_item_id.id).price_unit);});}
removeOrderline(line){const linesToRemove=line.getAllLinesInCombo();for(const lineToRemove of linesToRemove){if(lineToRemove.refunded_orderline_id?.uuid in this.uiState.lineToRefund){delete this.uiState.lineToRefund[lineToRemove.refunded_orderline_id.uuid];}
if(this.assert_editable()){lineToRemove.delete();}}
if(!this.lines.length){this.general_note="";}
this.select_orderline(this.get_last_orderline());return true;}
_isRefundOrder(){if(this.lines.length>0&&this.lines[0].refunded_orderline_id){return true;}
return false;}
doNotAllowRefundAndSales(){return false;}
get_selected_orderline(){return this.lines.find((line)=>line.uuid===this.uiState.selected_orderline_uuid);}
get_selected_paymentline(){return this.payment_ids.find((line)=>line.uuid===this.uiState.selected_paymentline_uuid);}
select_orderline(line){if(line){this.uiState.selected_orderline_uuid=line.uuid;}else{this.uiState.selected_orderline_uuid=undefined;}}
deselect_orderline(){if(this.uiState.selected_orderline_uuid){this.uiState.selected_orderline_uuid=undefined;}}
add_paymentline(payment_method){this.assert_editable();if(this.electronic_payment_in_progress()){return false;}else{const totalAmountDue=this.getDefaultAmountDueToPayIn(payment_method);const newPaymentline=this.models["pos.payment"].create({pos_order_id:this,payment_method_id:payment_method,});this.select_paymentline(newPaymentline);newPaymentline.set_amount(totalAmountDue);if(payment_method.payment_terminal||payment_method.payment_method_type==="qr_code"){newPaymentline.set_payment_status("pending");}
return newPaymentline;}}
get_paymentline_by_uuid(uuid){var lines=this.payment_ids;return lines.find(function(line){return line.uuid===uuid;});}
remove_paymentline(line){this.assert_editable();if(this.get_selected_paymentline()===line){this.select_paymentline(undefined);}
line.delete({backend:true});}
clean_empty_paymentlines(){const lines=this.payment_ids;const empty=[];for(const line of lines){if(!line.get_amount()){empty.push(line);}}
for(const em of empty){this.remove_paymentline(em);}}
select_paymentline(line){if(line){this.uiState.selected_paymentline_uuid=line?.uuid;}else{this.uiState.selected_paymentline_uuid=undefined;}}
electronic_payment_in_progress(){return this.payment_ids.some(function(pl){if(pl.payment_status){return!["done","reversed"].includes(pl.payment_status);}else{return false;}});}
stop_electronic_payment(){const lines=this.payment_ids;const line=lines.find(function(line){var status=line.get_payment_status();return(status&&!["done","reversed","reversing","pending","retry"].includes(status));});if(line){line.set_payment_status("waitingCancel");line.payment_method_id.payment_terminal.send_payment_cancel(this,line.uuid).finally(function(){line.set_payment_status("retry");});}}
get_subtotal(){return roundPrecision(this.lines.reduce(function(sum,orderLine){return sum+orderLine.get_display_price();},0),this.currency.rounding);}
get_total_with_tax_of_lines(lines){return this.get_total_without_tax_of_lines(lines)+this.get_total_tax_of_lines(lines);}
get_total_without_tax_of_lines(lines){return roundPrecision(lines.reduce(function(sum,line){return sum+line.get_price_without_tax();},0),this.currency.rounding);}
get_total_with_tax(){return this.taxTotals.order_sign*this.taxTotals.order_total;}
get_total_without_tax(){const base_amount=this.taxTotals.base_amount_currency+
(this.taxTotals.cash_rounding_base_amount_currency||0.0);return this.taxTotals.order_sign*base_amount;}
_get_ignored_product_ids_total_discount(){return[];}
_reduce_total_discount_callback(sum,orderLine){let discountUnitPrice=orderLine.getUnitDisplayPriceBeforeDiscount()*(orderLine.get_discount()/100);if(orderLine.display_discount_policy()==="without_discount"){discountUnitPrice+=orderLine.get_taxed_lst_unit_price()-
orderLine.getUnitDisplayPriceBeforeDiscount();}
return sum+discountUnitPrice*orderLine.get_quantity();}
get_total_discount(){const ignored_product_ids=this._get_ignored_product_ids_total_discount();return roundPrecision(this.lines.reduce((sum,orderLine)=>{if(!ignored_product_ids.includes(orderLine.product_id.id)){sum+=orderLine.get_all_prices().priceWithTaxBeforeDiscount-
orderLine.get_all_prices().priceWithTax;if(orderLine.display_discount_policy()==="without_discount"&&!(orderLine.price_type==="manual")){sum+=(orderLine.get_taxed_lst_unit_price()-
orderLine.getUnitDisplayPriceBeforeDiscount())*orderLine.get_quantity();}}
return sum;},0),this.currency.rounding);}
get_total_tax(){return this.taxTotals.order_sign*this.taxTotals.tax_amount_currency;}
get_total_tax_of_lines(lines){if(this.company.tax_calculation_rounding_method==="round_globally"){const groupTaxes={};lines.forEach(function(line){const taxDetails=line.get_tax_details();const taxIds=Object.keys(taxDetails);for(const taxId of taxIds){if(!(taxId in groupTaxes)){groupTaxes[taxId]=0;}
groupTaxes[taxId]+=taxDetails[taxId].amount;}});let sum=0;const taxIds=Object.keys(groupTaxes);for(var j=0;j<taxIds.length;j++){var taxAmount=groupTaxes[taxIds[j]];sum+=roundPrecision(taxAmount,this.currency.rounding);}
return sum;}else{return roundPrecision(lines.reduce(function(sum,orderLine){return sum+orderLine.get_tax();},0),this.currency.rounding);}}
get_total_paid(){return roundPrecision(this.payment_ids.reduce(function(sum,paymentLine){if(paymentLine.is_done()){sum+=paymentLine.get_amount();}
return sum;},0),this.currency.rounding);}
getTotalDue(){return this.taxTotals.order_sign*this.taxTotals.order_total;}
get_tax_details(){return this.get_tax_details_of_lines(this.lines);}
get_tax_details_of_lines(lines){const taxDetails={};for(const line of lines){for(const taxData of line.get_all_prices().taxesData){const taxId=taxData.id;if(!taxDetails[taxId]){taxDetails[taxId]=Object.assign({},taxData,{amount:0.0,base:0.0,tax_percentage:taxData.tax.amount,});}
taxDetails[taxId].base+=taxData.base_amount_currency;taxDetails[taxId].amount+=taxData.tax_amount_currency;}}
return Object.values(taxDetails);}
get_total_for_taxes(tax_id){let total=0;if(!(tax_id instanceof Array)){tax_id=[tax_id];}
const tax_set={};for(var i=0;i<tax_id.length;i++){tax_set[tax_id[i]]=true;}
this.lines.forEach((line)=>{var taxes_ids=this.tax_ids||line.get_product().taxes_id;for(var i=0;i<taxes_ids.length;i++){if(tax_set[taxes_ids[i]]){total+=line.get_price_with_tax();return;}}});return total;}
hasRemainingAmount(){const{order_has_zero_remaining,order_remaining}=this.taxTotals;return(order_has_zero_remaining||gte(order_remaining,0,{decimals:this.currency.decimal_places}));}
get_change(){let{order_sign,order_remaining:remaining}=this.taxTotals;if(this.config.cash_rounding){remaining=this.getRoundedRemaining(this.config.rounding_method,remaining);}
return-order_sign*remaining;}
get_due(){return(this.taxTotals.order_sign*roundPrecision(this.taxTotals.order_remaining,this.currency.rounding));}
get_rounding_applied(){return this.taxTotals.order_sign*(this.taxTotals.order_rounding||0.0);}
is_paid(){const{order_has_zero_remaining,order_remaining}=this.taxTotals;return(order_has_zero_remaining||lt(order_remaining,0,{decimals:this.currency.decimal_places}));}
is_paid_with_cash(){return!!this.payment_ids.find(function(pl){return pl.payment_method_id.is_cash_count;});}
get_total_cost(){return this.lines.reduce(function(sum,orderLine){return sum+orderLine.get_total_cost();},0);}
set_to_invoice(to_invoice){this.assert_editable();this.to_invoice=to_invoice;}
is_to_invoice(){return this.to_invoice;}
set_partner(partner){this.assert_editable();this.update({partner_id:partner});this.updatePricelistAndFiscalPosition(partner);}
get_partner(){return this.partner_id;}
get_partner_name(){return this.partner_id?this.partner_id.name:"";}
get_cardholder_name(){const card_payment_line=this.payment_ids.find((pl)=>pl.cardholder_name);return card_payment_line?card_payment_line.cardholder_name:"";}
set_screen_data(value){this.uiState.screen_data["value"]=value;}
get_current_screen_data(){return this.uiState.screen_data["value"]??{name:"ProductScreen"};}
get_screen_data(){const screen=this.uiState?.screen_data?.["value"];if(!screen){if(!this.finalized&&this.payment_ids.length>0){return{name:"PaymentScreen"};}else if(!this.finalized){return{name:"ProductScreen"};}}
if(!this.finalized&&this.payment_ids.length>0){return{name:"PaymentScreen"};}
return screen||{name:""};}
wait_for_push_order(){return false;}
updatePricelistAndFiscalPosition(newPartner){let newPartnerPricelist,newPartnerFiscalPosition;const defaultFiscalPosition=this.models["account.fiscal.position"].find((position)=>position.id===this.config.default_fiscal_position_id?.id);if(newPartner){newPartnerFiscalPosition=newPartner.property_account_position_id?this.models["account.fiscal.position"].find((position)=>position.id===newPartner.property_account_position_id?.id):defaultFiscalPosition;newPartnerPricelist=this.models["product.pricelist"].find((pricelist)=>pricelist.id===newPartner.property_product_pricelist?.id)||this.config.pricelist_id;}else{newPartnerFiscalPosition=defaultFiscalPosition;newPartnerPricelist=this.config.pricelist_id;}
this.set_pricelist(newPartnerPricelist);this.update({fiscal_position_id:newPartnerFiscalPosition});}
setShippingDate(shippingDate){this.shipping_date=shippingDate;}
getShippingDate(){return this.shipping_date;}
getHasRefundLines(){for(const line of this.lines){if(line.refunded_orderline_id){return true;}}
return false;}
_isValidEmptyOrder(){if(this.lines.length==0){return this.payment_ids.length!=0;}else{return true;}}
_generateTicketCode(){return random5Chars();}
get_orderlines(){return this.lines;}
serialize(){const data=super.serialize(...arguments);if(data.last_order_preparation_change&&typeof data.last_order_preparation_change==="object"){data.last_order_preparation_change=JSON.stringify(data.last_order_preparation_change);}
return data;}
getCustomerDisplayData(){return{lines:this.getSortedOrderlines().map((l)=>({...l.getDisplayData(),isSelected:l.isSelected(),imageSrc:`/web/image/product.product/${l.product_id.id}/image_128`,})),finalized:this.finalized,amount:formatCurrency(this.get_total_with_tax()||0),paymentLines:this.payment_ids.map((pl)=>({name:pl.payment_method_id.name,amount:formatCurrency(pl.get_amount()),})),change:this.get_change()&&formatCurrency(this.get_change()),generalNote:this.general_note||"",};}
getFloatingOrderName(){return this.floating_order_name||this.tracking_number.toString()||"";}
sortBySequenceAndCategory(a,b){const seqA=a.product_id?.pos_categ_ids[0]?.sequence??0;const seqB=b.product_id?.pos_categ_ids[0]?.sequence??0;const pos_categ_id_A=a.product_id?.pos_categ_ids[0]?.id??0;const pos_categ_id_B=b.product_id?.pos_categ_ids[0]?.id??0;if(seqA!==seqB){return seqA-seqB;}
return pos_categ_id_A-pos_categ_id_B;}
getSortedOrderlines(){if(this.config.orderlines_sequence_in_cart_by_category&&this.lines.length){const linesToSort=[...this.lines];linesToSort.sort(this.sortBySequenceAndCategory);const resultLines=[];linesToSort.forEach((line)=>{if(line.combo_line_ids?.length>0){resultLines.push(line);const sortedChildLines=line.combo_line_ids.sort(this.sortBySequenceAndCategory);resultLines.push(...sortedChildLines);}else if(!line.combo_parent_id){resultLines.push(line);}});return resultLines;}else{return this.lines;}}
getName(){return this.getFloatingOrderName()||"";}
get hasItemsOrPayLater(){return(this.lines.length>0||this.payment_ids.some((p)=>p.payment_method_id.type==="pay_later"));}}
registry.category("pos_available_models").add(PosOrder.pythonModel,PosOrder);return __exports;});;

/* /point_of_sale/static/src/app/models/pos_order_line.js */
odoo.define('@point_of_sale/app/models/pos_order_line',['@web/core/registry','@point_of_sale/utils','@point_of_sale/app/models/related_models','@web/views/fields/parsers','@web/core/utils/numbers','@point_of_sale/app/models/utils/currency','@web/core/l10n/translation','@point_of_sale/app/models/utils/tax_utils','@account/helpers/account_tax'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{constructFullProductName,uuidv4}=require("@point_of_sale/utils");const{Base}=require("@point_of_sale/app/models/related_models");const{parseFloat}=require("@web/views/fields/parsers");const{formatFloat,roundDecimals,roundPrecision,floatIsZero}=require("@web/core/utils/numbers");const{roundCurrency,formatCurrency}=require("@point_of_sale/app/models/utils/currency");const{_t}=require("@web/core/l10n/translation");const{getTaxesAfterFiscalPosition}=require("@point_of_sale/app/models/utils/tax_utils");const{accountTaxHelpers}=require("@account/helpers/account_tax");const PosOrderline=__exports.PosOrderline=class PosOrderline extends Base{static pythonModel="pos.order.line";setup(vals){super.setup(vals);if(!this.product_id){this.delete();return;}
this.uuid=vals.uuid?vals.uuid:uuidv4();this.skip_change=vals.skip_change||false;this.set_full_product_name();this.uiState={hasChange:true,};this.saved_quantity=0;}
set_full_product_name(){this.full_product_name=constructFullProductName(this);}
setOptions(options){if(options.uiState){this.uiState={...this.uiState,...options.uiState};}
if(options.code){const code=options.code;const blockMerge=["weight","quantity","discount"];const product_packaging_by_barcode=this.models["product.packaging"].getAllBy("barcode");if(blockMerge.includes(code.type)){this.set_quantity(code.value);}else if(code.type==="price"){this.set_unit_price(code.value);this.price_type="manual";}
if(product_packaging_by_barcode[code.code]){this.set_quantity(product_packaging_by_barcode[code.code].qty);}}
this.set_unit_price(this.price_unit);}
get preparationKey(){const note=this.getNote();return`${this.uuid} - ${note}`;}
get quantityStr(){let qtyStr="";const unit=this.product_id.uom_id;if(unit){if(unit.rounding){const decimals=this.models["decimal.precision"].find((dp)=>dp.name==="Product Unit of Measure").digits;qtyStr=formatFloat(this.qty,{digits:[69,decimals],});}else{qtyStr=this.qty.toFixed(0);}}else{qtyStr=""+this.qty;}
return qtyStr;}
get company(){return this.models["res.company"].getFirst();}
get config(){return this.models["pos.config"].getFirst();}
get session(){return this.models["pos.session"].getFirst();}
get currency(){return this.order_id.currency;}
get pickingType(){return this.models["stock.picking.type"].getFirst();}
getDisplayClasses(){return{};}
getPackLotLinesToEdit(isAllowOnlyOneLot){const currentPackLotLines=this.pack_lot_ids;let nExtraLines=Math.abs(this.qty)-currentPackLotLines.length;nExtraLines=Math.ceil(nExtraLines);nExtraLines=nExtraLines>0?nExtraLines:1;const tempLines=currentPackLotLines.map((lotLine)=>({id:lotLine.id,text:lotLine.lot_name,})).concat(Array.from(Array(nExtraLines)).map((_)=>({text:"",})));return isAllowOnlyOneLot?[tempLines[0]]:tempLines;}
async editPackLotLines(editedPackLotLines){if(!editedPackLotLines){return;}
this.setPackLotLines(editedPackLotLines);this.order_id.select_orderline(this);}
setPackLotLines({modifiedPackLotLines,newPackLotLines,setQuantity=true}){const lotLinesToRemove=[];for(const lotLine of this.pack_lot_ids){const modifiedLotName=modifiedPackLotLines[lotLine.id];if(modifiedLotName){lotLine.lot_name=modifiedLotName;}else{lotLinesToRemove.push(lotLine);}}
for(const lotLine of lotLinesToRemove){this.pack_lot_ids=this.pack_lot_ids.filter((pll)=>pll.id!==lotLine.id);}
for(const newLotLine of newPackLotLines){this.models["pos.pack.operation.lot"].create({lot_name:newLotLine.lot_name,pos_order_line_id:this,});}
if(!this.product_id.to_weight&&setQuantity){this.set_quantity_by_lot();}
this.setDirty();}
set_product_lot(product){this.has_product_lot=product.tracking!=="none";this.pack_lot_ids=this.has_product_lot&&[];this.setDirty();}
set_discount(discount){const parsed_discount=typeof discount==="number"?discount:isNaN(parseFloat(discount))?0:parseFloat(""+discount);const disc=Math.min(Math.max(parsed_discount||0,0),100);this.discount=disc;this.order_id.recomputeOrderData();this.setDirty();}
setLinePrice(){const prices=this.get_all_prices();if(this.price_subtotal!==prices.priceWithoutTax){this.price_subtotal=prices.priceWithoutTax;}
if(this.price_subtotal_incl!==prices.priceWithTax){this.price_subtotal_incl=prices.priceWithTax;}}
set_quantity(quantity,keep_price){this.order_id.assert_editable();const quant=typeof quantity==="number"?quantity:parseFloat(""+(quantity?quantity:0));const allLineToRefundUuids=this.models["pos.order"].reduce((acc,order)=>{Object.assign(acc,order.uiState.lineToRefund);return acc;},{});if(this.refunded_orderline_id?.uuid in allLineToRefundUuids){const refundDetails=allLineToRefundUuids[this.refunded_orderline_id.uuid];const maxQtyToRefund=refundDetails.line.qty-refundDetails.line.refunded_qty;if(quant>0){return{title:_t("Positive quantity not allowed"),body:_t("Only a negative quantity is allowed for this refund line. Click on +/- to modify the quantity to be refunded."),};}else if(quant==0){refundDetails.qty=0;}else if(-quant<=maxQtyToRefund){refundDetails.qty=-quant;}else{return{title:_t("Greater than allowed"),body:_t("The requested quantity to be refunded is higher than the refundable quantity."),};}}
const unit=this.product_id.uom_id;if(unit){if(unit.rounding){const decimals=this.models["decimal.precision"].find((dp)=>dp.name==="Product Unit of Measure").digits;const rounding=Math.max(unit.rounding,Math.pow(10,-decimals));this.qty=roundPrecision(quant,rounding);}else{this.qty=roundPrecision(quant,1);}}else{this.qty=quant;}
if(!keep_price&&this.price_type==="original"){this.set_unit_price(this.product_id.get_price(this.order_id.pricelist_id,this.get_quantity(),this.get_price_extra()));}
this.setDirty();return true;}
get_quantity_str_with_unit(){const unit=this.product_id.uom_id;if(this.is_pos_groupable()){return this.quantityStr+" "+unit.name;}else{return this.quantityStr;}}
get_required_number_of_lots(){var lots_required=1;if(this.product_id.tracking=="serial"){lots_required=Math.abs(this.qty);}
return lots_required;}
set_quantity_by_lot(){var valid_lots_quantity=this.get_valid_lots().length;if(this.qty<0){valid_lots_quantity=-valid_lots_quantity;}
this.set_quantity(valid_lots_quantity);}
has_valid_product_lot(){if(this.pack_lot_ids.length>0){return true;}
const valid_product_lot=this.get_valid_lots();return this.get_required_number_of_lots()===valid_product_lot.length;}
can_be_merged_with(orderline){const productPriceUnit=this.models["decimal.precision"].find((dp)=>dp.name==="Product Price").digits;const price=window.parseFloat(roundDecimals(this.price_unit||0,productPriceUnit).toFixed(productPriceUnit));let order_line_price=orderline.get_product().get_price(orderline.order_id.pricelist_id,this.get_quantity());order_line_price=roundDecimals(order_line_price,this.currency.decimal_places);const isSameCustomerNote=(Boolean(orderline.get_customer_note())===false&&Boolean(this.get_customer_note())===false)||orderline.get_customer_note()===this.get_customer_note();return(!this.skip_change&&orderline.getNote()===this.getNote()&&this.get_product().id===orderline.get_product().id&&this.is_pos_groupable()&&this.get_discount()===0&&floatIsZero(price-order_line_price-orderline.get_price_extra(),this.currency)&&!this.isLotTracked()&&this.full_product_name===orderline.full_product_name&&isSameCustomerNote&&!this.refunded_orderline_id&&!orderline.isPartOfCombo());}
isLotTracked(){return(this.product_id.tracking==="lot"&&(this.pickingType.use_create_lots||this.pickingType.use_existing_lots));}
is_pos_groupable(){const unit_groupable=this.product_id.uom_id?this.product_id.uom_id.is_pos_groupable:false;return unit_groupable&&!this.isPartOfCombo();}
merge(orderline){this.order_id.assert_editable();this.set_quantity(this.get_quantity()+orderline.get_quantity());this.update({pack_lot_ids:[["link",...orderline.pack_lot_ids]],});}
prepareBaseLineForTaxesComputationExtraValues(customValues={}){const order=this.order_id;const currency=order.config.currency_id;const extraValues={currency_id:currency};const product=this.get_product();const priceUnit=this.get_unit_price();const discount=this.get_discount();const values={...extraValues,quantity:this.qty,price_unit:priceUnit,discount:discount,tax_ids:this.tax_ids,product_id:accountTaxHelpers.eval_taxes_computation_prepare_product_values(this.config._product_default_values,product),...customValues,};if(order.fiscal_position_id){values.tax_ids=getTaxesAfterFiscalPosition(values.tax_ids,order.fiscal_position_id,order.models);}
return values;}
set_unit_price(price){const parsed_price=!isNaN(price)?price:isNaN(parseFloat(price))?0:parseFloat(""+price);this.price_unit=roundDecimals(parsed_price||0,this.models["decimal.precision"].find((dp)=>dp.name==="Product Price").digits);this.setDirty();}
get_unit_price(){const digits=this.models["decimal.precision"].find((dp)=>dp.name==="Product Price").digits;return window.parseFloat(roundDecimals(this.price_unit||0,digits).toFixed(digits));}
get_unit_display_price(){if(this.config.iface_tax_included==="total"){return this.get_all_prices(1).priceWithTax;}else{return this.get_all_prices(1).priceWithoutTax;}}
getUnitDisplayPriceBeforeDiscount(){if(this.config.iface_tax_included==="total"){return this.get_all_prices(1).priceWithTaxBeforeDiscount;}else{return this.get_all_prices(1).priceWithoutTaxBeforeDiscount;}}
get_base_price(){const rounding=this.currency.rounding;return roundPrecision(this.get_unit_price()*this.get_quantity()*(1-this.get_discount()/100),rounding);}
get_display_price(){if(this.config.iface_tax_included==="total"){return this.get_price_with_tax();}else{return this.get_price_without_tax();}}
get_taxed_lst_unit_price(){const company=this.company;const product=this.get_product();const baseLine=accountTaxHelpers.prepare_base_line_for_taxes_computation(this,this.prepareBaseLineForTaxesComputationExtraValues({price_unit:this.get_lst_price(),quantity:1,tax_ids:product.taxes_id,}));accountTaxHelpers.add_tax_details_in_base_line(baseLine,company);accountTaxHelpers.round_base_lines_tax_details([baseLine],company);const taxDetails=baseLine.tax_details;if(this.config.iface_tax_included==="total"){return taxDetails.total_included_currency;}else{return taxDetails.total_excluded_currency;}}
get_price_without_tax(){return this.get_all_prices().priceWithoutTax;}
get_price_with_tax(){return this.get_all_prices().priceWithTax;}
get_price_with_tax_before_discount(){return this.get_all_prices().priceWithTaxBeforeDiscount;}
get_tax(){return this.get_all_prices().tax;}
get_tax_details(){return this.get_all_prices().taxDetails;}
get_total_taxes_included_in_price(){const productTaxes=this._getProductTaxesAfterFiscalPosition();const taxDetails=this.get_tax_details();return productTaxes.filter((tax)=>tax.price_include).reduce((sum,tax)=>sum+taxDetails[tax.id].amount,0);}
_getProductTaxesAfterFiscalPosition(){const baseLineValues=this.prepareBaseLineForTaxesComputationExtraValues();return baseLineValues.tax_ids;}
get_all_prices(qty=this.get_quantity()){const company=this.company;const product=this.get_product();const taxes=this.tax_ids||product.taxes_id;const baseLine=accountTaxHelpers.prepare_base_line_for_taxes_computation(this,this.prepareBaseLineForTaxesComputationExtraValues({quantity:qty,tax_ids:taxes,}));accountTaxHelpers.add_tax_details_in_base_line(baseLine,company);accountTaxHelpers.round_base_lines_tax_details([baseLine],company);const baseLineNoDiscount=accountTaxHelpers.prepare_base_line_for_taxes_computation(this,this.prepareBaseLineForTaxesComputationExtraValues({quantity:qty,tax_ids:taxes,discount:0.0,}));accountTaxHelpers.add_tax_details_in_base_line(baseLineNoDiscount,company);accountTaxHelpers.round_base_lines_tax_details([baseLineNoDiscount],company);const taxDetails={};for(const taxData of baseLine.tax_details.taxes_data){taxDetails[taxData.tax.id]={amount:taxData.tax_amount_currency,base:taxData.base_amount_currency,};}
return{priceWithTax:baseLine.tax_details.total_included_currency,priceWithoutTax:baseLine.tax_details.total_excluded_currency,priceWithTaxBeforeDiscount:baseLineNoDiscount.tax_details.total_included_currency,priceWithoutTaxBeforeDiscount:baseLineNoDiscount.tax_details.total_excluded_currency,tax:baseLine.tax_details.total_included_currency-
baseLine.tax_details.total_excluded_currency,taxDetails:taxDetails,taxesData:baseLine.tax_details.taxes_data,};}
display_discount_policy(){const pricelistRule=this.product_id.getPricelistRule(this.order_id.pricelist_id,this.get_quantity());if(pricelistRule&&pricelistRule.compute_price==="percentage"){return"without_discount";}
return"with_discount";}
get_lst_price(){return this.product_id.get_price(this.config.pricelist_id,1,this.price_extra);}
is_last_line(){const order=this.order_id;const orderlines=order.lines;const last_id=orderlines[orderlines.length-1].uuid;const selectedLine=order?order.get_selected_orderline():null;return!selectedLine?false:last_id===selectedLine.uuid;}
set_customer_note(note){this.customer_note=note||"";this.setDirty();}
get_customer_note(){return this.customer_note;}
get_total_cost(){return this.product_id.standard_price*this.qty;}
isTipLine(){const tipProduct=this.config.tip_product_id;return tipProduct&&this.product_id.id===tipProduct.id;}
getAllLinesInCombo(){if(this.combo_parent_id){return this.combo_parent_id.getAllLinesInCombo();}
const lines=[];const stack=[this];while(stack.length){const n=stack.pop();lines.push(n);if(n.combo_line_ids){stack.push(...n.combo_line_ids);}}
return lines;}
isPartOfCombo(){return Boolean(this.combo_parent_id||this.combo_line_ids?.length);}
getComboTotalPrice(){const allLines=this.getAllLinesInCombo();return allLines.reduce((total,line)=>total+line.get_all_prices(1).priceWithTax,0);}
getComboTotalPriceWithoutTax(){const allLines=this.getAllLinesInCombo();return allLines.reduce((total,line)=>total+line.get_base_price()/line.qty,0);}
get_old_unit_display_price(){return(this.display_discount_policy()==="without_discount"&&roundCurrency(this.get_unit_display_price(),this.currency)<roundCurrency(this.get_taxed_lst_unit_price(),this.currency)&&this.get_taxed_lst_unit_price());}
getPriceString(){return this.get_discount_str()==="100"?_t("Free"):this.combo_line_ids.length>0?"":formatCurrency(this.get_display_price(),this.currency);}
getDisplayData(){return{productName:this.get_full_product_name(),price:this.getPriceString(),qty:this.get_quantity_str(),unit:this.product_id.uom_id?this.product_id.uom_id.name:"",unitPrice:formatCurrency(this.get_unit_display_price(),this.currency),oldUnitPrice:this.get_old_unit_display_price()?formatCurrency(this.get_old_unit_display_price(),this.currency):"",discount:this.get_discount_str(),customerNote:this.get_customer_note()||"",internalNote:this.getNote(),comboParent:this.combo_parent_id?.get_full_product_name?.()||"",packLotLines:this.pack_lot_ids.map((l)=>`${l.pos_order_line_id.product_id.tracking == "lot" ? "Lot Number" : "SN"} ${
                        l.lot_name
                    }`),price_without_discount:formatCurrency(this.getUnitDisplayPriceBeforeDiscount(),this.currency),taxGroupLabels:[...new Set(this.product_id.taxes_id?.map((tax)=>tax.tax_group_id.pos_receipt_label).filter((label)=>label)),].join(" "),};}
get_discount(){return this.discount||0;}
get_valid_lots(){return this.pack_lot_ids.filter((item)=>{return item.lot_name;});}
updateSavedQuantity(){this.saved_quantity=this.qty;}
get_price_extra(){return this.price_extra;}
set_price_extra(price_extra){this.price_extra=parseFloat(price_extra)||0.0;}
getNote(){return this.note||"";}
setNote(note){this.setDirty();this.note=note;}
setHasChange(isChange){this.uiState.hasChange=isChange;}
get_discount_str(){return this.discount?this.discount.toString():"";}
get_quantity(){return this.qty;}
get_quantity_str(){return this.quantityStr;}
get_unit(){return this.product_id.uom_id;}
get_product(){return this.product_id;}
get_full_product_name(){return this.full_product_name||this.product_id.display_name;}
isSelected(){return this.order_id?.uiState?.selected_orderline_uuid===this.uuid;}}
registry.category("pos_available_models").add(PosOrderline.pythonModel,PosOrderline);return __exports;});;

/* /point_of_sale/static/src/app/models/pos_order_line_refund.js */
odoo.define('@point_of_sale/app/models/pos_order_line_refund',['@point_of_sale/utils'],function(require){'use strict';let __exports={};const{uuidv4}=require("@point_of_sale/utils");const PosOrderLineRefund=__exports.PosOrderLineRefund=class PosOrderLineRefund{constructor(){this.setup(...arguments);}
setup(vals,models){this.uuid=vals.uuid||uuidv4();this.line_uuid=vals.line_uuid||false;this.destination_order_uuid=vals.destination_order_uuid||false;this.qty=vals.qty||0;this.models=models;}
get line(){if(!this.line_uuid){return false;}
return this.models["pos.order.line"].find((l)=>l.uuid===this.line_uuid);}
get destination_order(){if(!this.destination_order_uuid){return false;}
return this.models["pos.order"].find((o)=>o.uuid===this.destination_order_uuid);}
get maxQty(){if(!this.line){return 0;}
const line=this.line;return line.qty-this.refunded_qty;}}
return __exports;});;

/* /point_of_sale/static/src/app/models/pos_payment.js */
odoo.define('@point_of_sale/app/models/pos_payment',['@web/core/registry','@point_of_sale/app/models/related_models','@web/core/l10n/dates','@web/core/utils/numbers','@point_of_sale/utils'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{Base}=require("@point_of_sale/app/models/related_models");const{serializeDateTime}=require("@web/core/l10n/dates");const{roundDecimals}=require("@web/core/utils/numbers");const{uuidv4}=require("@point_of_sale/utils");const{DateTime}=luxon;const PosPayment=__exports.PosPayment=class PosPayment extends Base{static pythonModel="pos.payment";setup(vals){super.setup(...arguments);this.payment_date=serializeDateTime(DateTime.now());this.uuid=vals.uuid?vals.uuid:uuidv4();this.amount=vals.amount||0;this.ticket=vals.ticket||"";}
isSelected(){return this.pos_order_id?.uiState?.selected_paymentline_uuid===this.uuid;}
set_amount(value){this.pos_order_id.assert_editable();this.update({amount:roundDecimals(parseFloat(value)||0,this.pos_order_id.currency.decimal_places),});}
get_amount(){return this.amount||0;}
get_payment_status(){return this.payment_status;}
set_payment_status(value){this.update({payment_status:value});}
is_done(){return this.get_payment_status()?this.get_payment_status()==="done"||this.get_payment_status()==="reversed":true;}
set_cashier_receipt(value){this.cashier_receipt=value;}
set_receipt_info(value){this.ticket+=value;}
export_for_printing(){return{amount:this.get_amount(),name:this.payment_method_id.name,ticket:this.ticket,};}
is_electronic(){return Boolean(this.get_payment_status());}
async pay(){this.set_payment_status("waiting");return this.handle_payment_response(await this.payment_method_id.payment_terminal.send_payment_request(this.uuid));}
handle_payment_response(isPaymentSuccessful){if(isPaymentSuccessful){this.set_payment_status("done");if(this.payment_method_id.payment_method_type!=="qr_code"){this.can_be_reversed=this.payment_method_id.payment_terminal.supports_reversals;}}else{this.set_payment_status("retry");}
return isPaymentSuccessful;}}
registry.category("pos_available_models").add(PosPayment.pythonModel,PosPayment);return __exports;});;

/* /point_of_sale/static/src/app/models/product_product.js */
odoo.define('@point_of_sale/app/models/product_product',['@web/core/registry','@point_of_sale/app/models/related_models','@web/core/l10n/translation','@web/core/utils/numbers'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{Base}=require("@point_of_sale/app/models/related_models");const{_t}=require("@web/core/l10n/translation");const{roundPrecision}=require("@web/core/utils/numbers");const ProductProduct=__exports.ProductProduct=class ProductProduct extends Base{static pythonModel="product.product";constructor(){super(...arguments);this.cachedPricelistRules={};}
isAllowOnlyOneLot(){const productUnit=this.uom_id;return this.tracking==="lot"||!productUnit||!productUnit.is_pos_groupable;}
isTracked(){const pickingType=this.models["stock.picking.type"].readAll()[0];return(["serial","lot"].includes(this.tracking)&&(pickingType.use_create_lots||pickingType.use_existing_lots));}
async _onScaleNotAvailable(){}
isConfigurable(){return this.attribute_line_ids.map((a)=>a.product_template_value_ids).flat().length>1;}
needToConfigure(){return(this.isConfigurable()&&this.attribute_line_ids.length>0&&!this.attribute_line_ids.every((l)=>l.attribute_id.create_variant==="always"));}
isCombo(){return this.combo_ids.length;}
get isScaleAvailable(){return true;}
get parentCategories(){const categories=[];let category=this.categ_id;while(category){categories.push(category.id);category=category.parent_id;}
return categories;}
get parentPosCategIds(){const current=[];const categories=this.pos_categ_ids;const getParent=(categ)=>{if(categ.parent_id){current.push(categ.parent_id.id);getParent(categ.parent_id);}};for(const category of categories){current.push(category.id);getParent(category);}
return current;}
getApplicablePricelistRules(pricelistRules){const applicableRules={};for(const pricelistId in pricelistRules){applicableRules[pricelistId]=[];const rules=pricelistRules[pricelistId];if(rules.productItems[this.id]){applicableRules[pricelistId].push(...rules.productItems[this.id]);if(!rules.productItems[this.id][0].min_quantity){continue;}}
const productTmplId=this.raw.product_tmpl_id;if(rules.productTmlpItems[productTmplId]){applicableRules[pricelistId].push(...rules.productTmlpItems[productTmplId]);if(!rules.productTmlpItems[productTmplId][0].min_quantity){continue;}}
for(const category of this.parentCategories){if(rules.categoryItems[category]){applicableRules[pricelistId].push(...rules.categoryItems[category]);if(!rules.categoryItems[category][0].min_quantity){break;}}}
applicableRules[pricelistId].push(...rules.globalItems);}
return applicableRules;}
get_price(pricelist,quantity,price_extra=0,recurring=false,list_price=false){if(recurring&&!pricelist){alert(_t("An error occurred when loading product prices. "+"Make sure all pricelists are available in the POS."));}
let price=(list_price||this.lst_price)+(price_extra||0);const rule=this.getPricelistRule(pricelist,quantity);if(!rule){return price;}
if(rule.base==="pricelist"){if(rule.base_pricelist_id){price=this.get_price(rule.base_pricelist_id,quantity,0,true,list_price);}}else if(rule.base==="standard_price"){price=this.standard_price;}
if(rule.compute_price==="fixed"){price=rule.fixed_price;}else if(rule.compute_price==="percentage"){price=price-price*(rule.percent_price/100);}else{var price_limit=price;price-=price*(rule.price_discount/100);if(rule.price_round){price=roundPrecision(price,rule.price_round);}
if(rule.price_surcharge){price+=rule.price_surcharge;}
if(rule.price_min_margin){price=Math.max(price,price_limit+rule.price_min_margin);}
if(rule.price_max_margin){price=Math.min(price,price_limit+rule.price_max_margin);}}
return price;}
getPricelistRule(pricelist,quantity){const rules=!pricelist?[]:this.cachedPricelistRules[pricelist?.id]||[];return rules.find((rule)=>!rule.min_quantity||quantity>=rule.min_quantity);}
getImageUrl(){return((this.image_128&&`/web/image?model=product.product&field=image_128&id=${this.id}&unique=${this.write_date}`)||"");}
getTemplateImageUrl(){return((this.image_128&&`/web/image?model=product.template&field=image_128&id=${this.raw.product_tmpl_id}&unique=${this.write_date}`)||"");}
get searchString(){const fields=["display_name"];return fields.map((field)=>this[field]||"").filter(Boolean).join(" ");}
exactMatch(searchWord){const fields=["barcode","default_code"];return fields.some((field)=>this[field]&&this[field].toLowerCase()==searchWord);}
_isArchivedCombination(attributeValueIds){if(!this._archived_combinations){return false;}
const excludedPTAV=new Set();let isCombinationArchived=false;for(const archivedCombination of this._archived_combinations){const ptavCommon=archivedCombination.filter((ptav)=>attributeValueIds.includes(ptav));if(ptavCommon.length===attributeValueIds.length){archivedCombination.forEach((ptav)=>excludedPTAV.add(ptav));}else if(ptavCommon.length===attributeValueIds.length-1){const disablePTAV=archivedCombination.find((ptav)=>!attributeValueIds.includes(ptav));excludedPTAV.add(disablePTAV);}
if(ptavCommon.length===attributeValueIds.length){isCombinationArchived=true;}}
this.attribute_line_ids.forEach((attribute_line)=>{attribute_line.product_template_value_ids.forEach((ptav)=>{ptav["excluded"]=excludedPTAV.has(ptav.id);});});return isCombinationArchived;}
get productDisplayName(){return this.default_code?`[${this.default_code}] ${this.name}`:this.name;}
get canBeDisplayed(){return this.active&&this.available_in_pos;}}
registry.category("pos_available_models").add(ProductProduct.pythonModel,ProductProduct);return __exports;});;

/* /point_of_sale/static/src/app/models/related_models.js */
odoo.define('@point_of_sale/app/models/related_models',['@odoo/owl','@point_of_sale/utils'],function(require){'use strict';let __exports={};const{reactive,toRaw}=require("@odoo/owl");const{uuidv4}=require("@point_of_sale/utils");const ID_CONTAINER={};function uuid(model){if(!(model in ID_CONTAINER)){ID_CONTAINER[model]=1;}
return`${model}_${ID_CONTAINER[model]++}`;}
function getBackRef(model,fieldName){return`<-${model}.${fieldName}`;}
function clone(obj){return JSON.parse(JSON.stringify(obj));}
function mapObj(obj,fn){return Object.fromEntries(Object.entries(obj).map(([k,v],i)=>[k,fn(k,v,i)]));}
const RELATION_TYPES=new Set(["many2many","many2one","one2many"]);const X2MANY_TYPES=new Set(["many2many","one2many"]);const AVAILABLE_EVENT=["create","update","delete"];function processModelDefs(modelDefs){modelDefs=clone(modelDefs);const inverseMap=new Map();const many2oneFields=[];const baseData={};for(const model in modelDefs){const fields=modelDefs[model];if(!baseData[model]){baseData[model]={};}
for(const fieldName in fields){const field=fields[fieldName];if(field.name){if(fieldName!==field.name){throw new Error(`Field name mismatch: ${fieldName} !== ${field.name}`);}}else{field.name=fieldName;}
if(!RELATION_TYPES.has(field.type)){continue;}
if(inverseMap.has(field)){continue;}
const comodel=modelDefs[field.relation];if(!comodel){continue;}
if(field.type==="many2many"){let[inverseField,...others]=Object.values(comodel).filter((f)=>model===f.relation&&f.relation_table===field.relation_table&&field.name!==f.name);if(others.length>0){throw new Error("Many2many relation must have only one inverse");}
if(!inverseField){const backRefName=getBackRef(model,field.name);inverseField={name:backRefName,type:"many2many",relation:model,inverse_name:field.name,dummy:true,};comodel[backRefName]=inverseField;}
inverseMap.set(field,inverseField);inverseMap.set(inverseField,field);}else if(field.type==="one2many"){let inverseField=Object.values(comodel).find((f)=>f.relation===model&&f.name===field.inverse_name);if(!inverseField){const backRefName=getBackRef(model,field.name);inverseField={name:backRefName,type:"many2one",relation:model,inverse_name:field.name,dummy:true,};comodel[backRefName]=inverseField;}
inverseMap.set(field,inverseField);inverseMap.set(inverseField,field);}else if(field.type==="many2one"){many2oneFields.push([model,field]);}}}
for(const[model,field]of many2oneFields){if(inverseMap.has(field)){continue;}
const comodel=modelDefs[field.relation];if(!comodel){continue;}
const dummyName=getBackRef(model,field.name);const dummyField={name:dummyName,type:"one2many",relation:model,inverse_name:field.name,dummy:true,};comodel[dummyName]=dummyField;inverseMap.set(field,dummyField);inverseMap.set(dummyField,field);}
return[inverseMap,modelDefs,baseData];}
const Base=__exports.Base=class Base{constructor({models,records,model,dynamicModels,baseData}){this.models=models;this.records=records;this.model=model;this._dynamicModels=dynamicModels;this.baseData=baseData;}
setup(_vals){for(const[key,val]of Object.entries(_vals)){if(key in this.model.modelFields){continue;}
if(key.startsWith("_")&&!key.startsWith("__")){this[key]=val;}}}
setDirty(){if(typeof this.id==="number"){this.models.commands[this.model.modelName].update.add(this.id);}}
setupState(vals){this.uiState=vals;}
serializeState(){return{...this.uiState};}
update(vals,opts={}){this.model.update(this,vals,opts);}
delete(opts={}){return this.model.delete(this,opts);}
serialize(options={}){const orm=options.orm??false;const clear=options.clear??false;const serializedData=this.model.serialize(this,{orm});if(orm){const fields=this.model.modelFields;const serializedDataOrm={};for(const[name,params]of Object.entries(fields)){if(params.dummy){continue;}
if(params.local||params.related||params.compute){continue;}
if(X2MANY_TYPES.has(params.type)){serializedDataOrm[name]=serializedData[name].map((id)=>{let serData=false;let data={};if(!this._dynamicModels.includes(params.relation)&&typeof id==="number"){return[4,id];}else if(!this._dynamicModels.includes(params.relation)){throw new Error("Trying to create a non serializable record"+params.relation);}
if(params.relation!==params.model){data=this.records[params.relation].get(id).serialize(options);data.id=typeof id==="number"?id:parseInt(id.split("_")[1]);}else{return typeof id==="number"?id:parseInt(id.split("_")[1]);}
if(typeof id==="number"&&this.models.commands[params.relation].update.has(id)){serData=[1,id,data];if(clear){this.models.commands[params.relation].update.delete(id);}}else if(typeof id!=="number"){serData=[0,0,data];}
if(serData){for(const[key,value]of Object.entries(serData[2])){if(this.models[params.relation].modelFields[key]?.relation&&typeof value==="string"){serData[2][key]=parseInt(value.split("_")[1]);}}}
return serData;}).filter((s)=>s);if(this.models.commands[params.model].unlink.has(name)||this.models.commands[params.model].delete.has(name)){const unlinks=this.models.commands[params.model].unlink.get(name);const deletes=this.models.commands[params.model].delete.get(name);for(const id of unlinks||[]){serializedDataOrm[name].push([3,id]);}
for(const id of deletes||[]){serializedDataOrm[name].push([2,id]);}
if(clear){this.models.commands[params.model].unlink.delete(name);this.models.commands[params.model].delete.delete(name);}}}else{let value=serializedData[name];if(name==="id"&&typeof value==="string"){value=serializedData[name].split("_")[1];}
serializedDataOrm[name]=value!==undefined?value:false;}}
return serializedDataOrm;}
return serializedData;}
getCacheMap(fieldName){const cacheName=`_${fieldName}`;if(!(cacheName in this)){this[cacheName]=new Map();}
return this[cacheName];}
get raw(){return this.baseData[this.id];}}
__exports.createRelatedModels=createRelatedModels;function createRelatedModels(modelDefs,modelClasses={},opts={}){const indexes=opts.databaseIndex||{};const database=opts.databaseTable||{};const[inverseMap,processedModelDefs,baseData]=processModelDefs(modelDefs);const records=mapObj(processedModelDefs,()=>reactive(new Map()));const callbacks=mapObj(processedModelDefs,()=>[]);const commands=mapObj(processedModelDefs,()=>({delete:new Map(),unlink:new Map(),update:new Set(),}));const missingFields={};const indexedRecords=mapObj(processedModelDefs,(model)=>{const container=reactive({});if(!indexes[model]){indexes[model]=["id"];}else{indexes[model].push("id");}
for(const key of indexes[model]||[]){container[key]=reactive({});}
return container;});function getFields(model){return processedModelDefs[model];}
function removeItem(record,fieldName,item){if(typeof record!=="object"){return;}
const cacheMap=record.getCacheMap(fieldName);const key=database[item.model.modelName]?.key||"id";const keyVal=item[key];if(cacheMap.has(keyVal)){cacheMap.delete(keyVal);const index=record[fieldName].findIndex((r)=>r[key]===keyVal);record[fieldName].splice(index,1);}}
function addItem(record,fieldName,item){const cacheMap=record.getCacheMap(fieldName);const key=database[item.model.modelName]?.key||"id";const keyVal=item[key];if(!keyVal){console.warn(`Key ${key} not found in ${item.model.modelName}`);}
if(!cacheMap.has(keyVal)){cacheMap.set(keyVal,item);record[fieldName].push(item);}else{const index=record[fieldName].findIndex((r)=>r[key]===keyVal);record[fieldName].splice(index,1,item);}}
function connect(field,ownerRecord,recordToConnect){const inverse=inverseMap.get(field);if(typeof ownerRecord!=="object"){const model=field.model;ownerRecord=records[model].get(ownerRecord);}
if(typeof recordToConnect!=="object"){const model=field.relation;recordToConnect=records[model].get(recordToConnect);}
if(field.type==="many2one"){const prevConnectedRecord=ownerRecord[field.name];if(toRaw(prevConnectedRecord)===toRaw(recordToConnect)){return;}
if(recordToConnect&&inverse.name in recordToConnect){addItem(recordToConnect,inverse.name,ownerRecord);}
if(prevConnectedRecord){removeItem(prevConnectedRecord,inverse.name,ownerRecord);}
ownerRecord[field.name]=recordToConnect;}else if(field.type==="one2many"){recordToConnect[inverse.name]=ownerRecord;addItem(ownerRecord,field.name,recordToConnect);}else if(field.type==="many2many"){addItem(ownerRecord,field.name,recordToConnect);addItem(recordToConnect,inverse.name,ownerRecord);}}
function disconnect(field,ownerRecord,recordToDisconnect){if(!recordToDisconnect){throw new Error("recordToDisconnect is undefined");}
const inverse=inverseMap.get(field);if(field.type==="many2one"){const prevConnectedRecord=ownerRecord[field.name];if(prevConnectedRecord===recordToDisconnect){ownerRecord[field.name]=undefined;removeItem(recordToDisconnect,inverse.name,ownerRecord);}}else if(field.type==="one2many"){removeItem(ownerRecord,field.name,recordToDisconnect);const prevConnectedRecord=recordToDisconnect[inverse.name];if(prevConnectedRecord===ownerRecord){recordToDisconnect[inverse.name]=undefined;}}else if(field.type==="many2many"){removeItem(ownerRecord,field.name,recordToDisconnect);removeItem(recordToDisconnect,inverse.name,ownerRecord);}}
function exists(model,id){return model in records&&records[model].has(id);}
function create(model,vals,ignoreRelations=false,fromSerialized=false,delayedSetup=false){if(!("id"in vals)){vals["id"]=uuid(model);}
const Model=modelClasses[model]||Base;const record=reactive(new Model({models,records,model:models[model],dynamicModels:opts.dynamicModels,baseData:baseData[model],}));const id=vals["id"];record.id=id;if(!vals.uuid&&database[model]?.key==="uuid"){record.uuid=uuidv4();vals.uuid=record.uuid;}
baseData[model][id]=vals;records[model].set(id,record);const fields=getFields(model);for(const name in fields){if(name==="id"){continue;}
const field=fields[name];if(field.required&&!(name in vals)){throw new Error(`'${name}' field is required when creating '${model}' record.`);}
if(RELATION_TYPES.has(field.type)){if(X2MANY_TYPES.has(field.type)){record[name]=[];}else if(field.type==="many2one"){record[name]=undefined;}
if(ignoreRelations){continue;}
const comodelName=field.relation;if(!(name in vals)||!vals[name]){continue;}
if(X2MANY_TYPES.has(field.type)){if(fromSerialized){const ids=vals[name];for(const id of ids){if(exists(comodelName,id)){connect(field,record,records[comodelName].get(id));}}}else{for(const[command,...items]of vals[name]){if(command==="create"){const newRecords=items.map((_vals)=>{const result=create(comodelName,_vals);makeRecordsAvailable({[comodelName]:[result]},{[comodelName]:[_vals]});return result;});for(const record2 of newRecords){connect(field,record,record2);}}else if(command==="link"){const existingRecords=items.filter((record)=>exists(comodelName,record.id));for(const record2 of existingRecords){connect(field,record,record2);}}}}}else if(field.type==="many2one"){const val=vals[name];if(fromSerialized){if(exists(comodelName,val)){connect(field,record,records[comodelName].get(val));}}else{if(val instanceof Base){if(exists(comodelName,val.id)){connect(field,record,val);}}else if(models[field.relation]&&typeof val==="object"){const newRecord=create(comodelName,val);connect(field,record,newRecord);}else{record[name]=val;}}}}else{record[name]=vals[name];}}
if(!delayedSetup){record.setup(vals);}
return record;}
function deserialize(model,vals){return create(model,vals,false,true);}
function update(model,record,vals,opts={}){const fields=getFields(model);Object.assign(baseData[model][record.id],vals);for(const name in vals){if(!(name in fields)&&name!=="id"){continue;}else if(name==="id"&&vals[name]!==record.id){records[model].delete(record.id);for(const key of indexes[model]||[]){const keyVal=record.raw[key];if(Array.isArray(keyVal)){for(const val of keyVal){indexedRecords[model][key][val].delete(record.id);}}}
delete baseData[model][record.id];record.id=vals[name];records[model].set(record.id,record);baseData[model][record.id]=vals;continue;}else if(name==="id"){continue;}
const field=fields[name];const comodelName=field.relation;if(X2MANY_TYPES.has(field.type)&&comodelName in models){for(const command of vals[name]){const[type,...items]=command;if(type==="unlink"){for(const record2 of items){disconnect(field,record,record2);}}else if(type==="clear"){const linkedRecs=record[name];for(const record2 of[...linkedRecs]){disconnect(field,record,record2);}}else if(type==="create"){const newRecords=items.map((vals)=>create(comodelName,vals));for(const record2 of newRecords){connect(field,record,record2);}}else if(type==="link"){const existingRecords=items.filter((record)=>exists(comodelName,record.id));for(const record2 of existingRecords){connect(field,record,record2);}}else if(type==="set"){const linkedRecs=record[name];const existingRecords=items.filter((record)=>exists(comodelName,record.id));for(const record2 of[...linkedRecs]){disconnect(field,record,record2);}
for(const record2 of existingRecords){connect(field,record,record2);}}
baseData[model][record.id][name]=items.filter((r)=>typeof r.id==="number").map((r)=>r.id);}}else if(field.type==="many2one"&&comodelName in models){if(vals[name]){const id=vals[name]?.id||vals[name];const exist=exists(comodelName,id);if(exist){connect(field,record,vals[name]);}else if(models[field.relation]&&typeof vals[name]==="object"){const newRecord=create(comodelName,vals[name]);connect(field,record,newRecord);}else{record[name]=vals[name];}}else if(record[name]){const linkedRec=record[name];disconnect(field,record,linkedRec);}}
if(!RELATION_TYPES.has(field.type)){record[name]=vals[name];}}
if(typeof record.id==="number"&&!opts.silent){commands[model].update.add(record.id);}}
function delete_(model,record,opts={}){const id=record.id;const fields=getFields(model);const handleCommand=(inverse,field,record,backend=false)=>{if(inverse&&!inverse.dummy&&!opts.silent&&typeof id==="number"){const modelCommands=commands[field.relation];const map=backend?modelCommands.delete:modelCommands.unlink;const oldVal=map.get(inverse.name);map.set(inverse.name,[...(oldVal||[]),record.id]);}};for(const name in fields){const field=fields[name];const inverse=inverseMap.get(field);if(X2MANY_TYPES.has(field.type)){for(const record2 of[...record[name]]){handleCommand(inverse,field,record,opts.backend);disconnect(field,record,record2);}}else if(field.type==="many2one"&&typeof record[name]==="object"){handleCommand(inverse,field,record,opts.backend);disconnect(field,record,record[name]);}}
records[model].delete(id);for(const key of indexes[model]||[]){const keyVal=record.raw[key];if(Array.isArray(keyVal)){for(const val of keyVal){indexedRecords[model][key][val].delete(record.id);}}else{delete indexedRecords[model][key][keyVal];}}
return id;}
function createCRUD(model,fields){return{get records(){return records;},get orderedRecords(){return Array.from(records[model].values());},get indexedRecords(){return indexedRecords;},get indexes(){return indexes;},get modelName(){return model;},get modelFields(){return getFields(this.modelName);},create(vals,ignoreRelations=false,fromSerialized=false,delayedSetup=false){const record=create(model,vals,ignoreRelations,fromSerialized,delayedSetup);makeRecordsAvailable({[model]:[record]},{[model]:[vals]});return record;},deserialize(vals){return deserialize(model,vals);},createMany(valsList){const result=[];for(const vals of valsList){result.push(create(model,vals));}
return result;},update(record,vals,opts={}){return update(model,record,vals,opts);},delete(record,opts={}){return delete_(model,record,opts);},deleteMany(records,opts={}){const result=[];records.forEach((record)=>{result.push(delete_(model,record,opts));});return result;},read(value){const id=/^\d+$/.test(value)?parseInt(value):value;if(!this.records[model].has(id)){return;}
return this.records[model].get(id);},readFirst(){if(!(model in this.records)){return;}
return this.orderedRecords[0];},readBy(key,val){if(!indexes[model].includes(key)){throw new Error(`Unable to get record by '${key}'`);}
const result=this.indexedRecords[model][key][val];if(result instanceof Map){return Array.from(result.values());}
return result;},readAll(){return this.orderedRecords;},readAllBy(key){if(!this.indexes[model].includes(key)){throw new Error(`Unable to get record by '${key}'`);}
const record=this.indexedRecords[model][key];if(record[Object.keys(record)[0]]instanceof Map){return Object.fromEntries(Object.entries(record).map(([key,value])=>[key,Array.from(value.values()),]));}
return record;},readMany(ids){if(!(model in records)){return[];}
return ids.map((value)=>this.read(value));},serialize(record,options={}){const orm=options.orm??false;const result={};for(const name in fields){const field=fields[name];if((orm&&field.local)||(orm&&field.related)||(orm&&field.compute)){continue;}
if(field.type==="many2one"){result[name]=record[name]?.id||record.raw[name]||false;}else if(X2MANY_TYPES.has(field.type)){const ids=[...record[name]].map((record)=>record.id).filter(Boolean);result[name]=ids.length?ids:(!orm&&record.raw[name])||[];}else if(typeof record[name]==="object"){result[name]=JSON.stringify(record[name]);}else{result[name]=record[name]!==undefined?record[name]:false;}}
return result;},getAllBy(){return this.readAllBy(...arguments);},getAll(){return this.readAll(...arguments);},getBy(){return this.readBy(...arguments);},get(){return this.read(...arguments);},getFirst(){return this.readFirst(...arguments);},map(fn){return this.orderedRecords.map(fn);},reduce(fn,initialValue){return this.orderedRecords.reduce(fn,initialValue);},flatMap(fn){return this.orderedRecords.flatMap(fn);},forEach(fn){return this.orderedRecords.forEach(fn);},some(fn){return this.orderedRecords.some(fn);},every(fn){return this.orderedRecords.every(fn);},find(fn){return this.orderedRecords.find(fn);},filter(fn){return this.orderedRecords.filter(fn);},sort(fn){return this.orderedRecords.sort(fn);},indexOf(record){return this.orderedRecords.indexOf(record);},get length(){return this.records[model].size;},addEventListener(event,callback){if(!AVAILABLE_EVENT.includes(event)){throw new Error(`Event '${event}' is not available`);}
if(!(event in callbacks[model])){callbacks[model][event]=[];}
callbacks[model][event].push(callback);},triggerEvents(event,data){if(!(event in callbacks[model])||callbacks[model][event].length===0||!data){return;}
for(const callback of callbacks[model][event]){callback(data);}},};}
const models=mapObj(processedModelDefs,(model,fields)=>createCRUD(model,fields));function loadData(rawData,load=[],fromSerialized=false){const results={};const oldStates={};const ignoreConnection={};for(const model in rawData){ignoreConnection[model]=[];const modelKey=database[model]?.key||"id";if(!oldStates[model]){oldStates[model]={};}
if(!load.includes(model)&&load.length!==0){continue;}else if(!results[model]){results[model]=[];}
const _records=rawData[model];for(const record of _records){if(fromSerialized&&typeof record.id==="string"){const data=record.id.split("_");const id=parseInt(data[1]);const model=data[0];if(id>=ID_CONTAINER[model]||!ID_CONTAINER[model]){ID_CONTAINER[model]=id+1;}}
const oldRecord=indexedRecords[model][modelKey][record[modelKey]];if(oldRecord){oldStates[model][oldRecord[modelKey]]=oldRecord.serializeState();for(const[f,p]of Object.entries(modelClasses[model]?.extraFields||{})){if(X2MANY_TYPES.has(p.type)){record[f]=oldRecord[f]?.map((r)=>r.id)||[];continue;}
record[f]=oldRecord[f]?.id||false;}}
if(oldRecord){const raw={};for(const[field,value]of Object.entries(record)){const params=getFields(model)[field];if(field==="id"||!params){continue;}
if(X2MANY_TYPES.has(params.type)){value.push(...oldRecord[field].filter((r)=>typeof r.id==="string").map((r)=>r.id));const existingRecords=value.map((r)=>models[params.relation]?.get(r)).filter(Boolean);if(existingRecords.length){record[field]=[["set",...existingRecords]];}else{record[field]=[];}
raw[field]=value.filter((id)=>typeof id==="number");}else if(params.type==="many2one"&&value&&!exists(params.relation,value)){const key=`${params.relation}_${value}`;if(!missingFields[key]){missingFields[key]=[[oldRecord,params]];}else{missingFields[key].push([oldRecord,params]);}}}
oldRecord.update(record,{silent:true});oldRecord.setup(record);ignoreConnection[model].push(record.id);results[model].push(oldRecord);Object.assign(baseData[model][record.id],raw);continue;}
const result=create(model,record,true,false,true);if(oldRecord&&oldRecord.id!==result.id){oldRecord.delete();}
if(!(model in results)){results[model]=[];}
results[model].push(result);}}
const alreadyLinkedSet=new Set();const modelToSetup=[];for(const model in rawData){if(alreadyLinkedSet.has(model)||(!load.includes(model)&&load.length!==0)){continue;}
const rawRecords=rawData[model];const fields=getFields(model);for(const rawRec of rawRecords){const recorded=records[model].get(rawRec.id);const key=`${model}_${rawRec.id}`;if(missingFields[key]){for(const[record,field]of missingFields[key]){connect(field,record,recorded);}
delete missingFields[key];}
if(ignoreConnection[model].includes(rawRec.id)){continue;}
for(const name in fields){const field=fields[name];alreadyLinkedSet.add(field);if(X2MANY_TYPES.has(field.type)){if(name in rawRec){for(const id of rawRec[name]){if(field.relation in records){const toConnect=records[field.relation].get(id);if(toConnect){connect(field,recorded,toConnect);}else{const key=`${field.relation}_${id}`;if(!missingFields[key]){missingFields[key]=[[recorded,field]];}else{missingFields[key].push([recorded,field]);}}}}}}else if(field.type==="many2one"&&rawRec[name]){if(field.relation in records){const id=rawRec[name];const toConnect=records[field.relation].get(id);if(toConnect){connect(field,recorded,toConnect);}else{const key=`${field.relation}_${id}`;if(!missingFields[key]){missingFields[key]=[[recorded,field]];}else{missingFields[key].push([recorded,field]);}}}}}
modelToSetup.push({raw:rawRec,record:recorded});}}
for(const{raw,record}of modelToSetup){record.setup(raw);const model=record.model.modelName;const modelKey=database[model]?.key||"id";const states=oldStates[model][record[modelKey]];if(states){record.setupState(states);}}
makeRecordsAvailable(results,rawData);return results;}
function makeRecordsAvailable(results,rawData){const indexRecord=(model,records)=>{for(const key of indexes[model]||[]){for(const record of records){const keyVal=record[key];if(!keyVal){continue;}
if(Array.isArray(keyVal)){for(const keyV of keyVal){if(!indexedRecords[model][key][keyV.id]){indexedRecords[model][key][keyV.id]=new Map();}
indexedRecords[model][key][keyV.id].set(record.id,record);}}else{indexedRecords[model][key][keyVal]=record;}}}};for(const[model,values]of Object.entries(results)){indexRecord(model,values);models[model].triggerEvents("create",{ids:values.map((v)=>v.id),model:model,});}}
models.loadData=loadData;models.commands=commands;return{models,records,indexedRecords};}
return __exports;});;

/* /point_of_sale/static/src/app/models/res_partner.js */
odoo.define('@point_of_sale/app/models/res_partner',['@web/core/registry','@point_of_sale/app/models/related_models'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{Base}=require("@point_of_sale/app/models/related_models");const ResPartner=__exports.ResPartner=class ResPartner extends Base{static pythonModel="res.partner";get searchString(){const fields=["name","barcode","phone","mobile","email","vat","parent_name","contact_address",];return fields.map((field)=>{if((field==="phone"||field==="mobile")&&this[field]){return this[field].split(" ").join("");}
return this[field]||"";}).filter(Boolean).join(" ");}
exactMatch(searchWord){const fields=["barcode"];return fields.some((field)=>this[field]&&this[field].toLowerCase()===searchWord);}}
registry.category("pos_available_models").add(ResPartner.pythonModel,ResPartner);return __exports;});;

/* /point_of_sale/static/src/app/models/utils/compute_combo_items.js */
odoo.define('@point_of_sale/app/models/utils/compute_combo_items',['@web/core/utils/numbers'],function(require){'use strict';let __exports={};const{roundDecimals}=require("@web/core/utils/numbers");const computeComboItems=__exports.computeComboItems=(parentProduct,childLineConf,pricelist,decimalPrecision,productTemplateAttributeValueById)=>{const comboItems=[];const parentLstPrice=parentProduct.get_price(pricelist,1);const originalTotal=childLineConf.reduce((acc,conf)=>{const originalPrice=conf.combo_item_id.combo_id.base_price;return acc+originalPrice;},0);let remainingTotal=parentLstPrice;for(const conf of childLineConf){const comboItem=conf.combo_item_id;const combo=comboItem.combo_id;let priceUnit=roundDecimals((combo.base_price*parentLstPrice)/originalTotal,decimalPrecision.find((dp)=>dp.name==="Product Price").digits);remainingTotal-=priceUnit;if(comboItem.id==childLineConf[childLineConf.length-1].combo_item_id.id){priceUnit+=remainingTotal;}
const attribute_value_ids=conf.configuration?.attribute_value_ids.map((id)=>productTemplateAttributeValueById[id]);const attributesPriceExtra=(attribute_value_ids??[]).map((attr)=>attr?.price_extra||0).reduce((acc,price)=>acc+price,0);const totalPriceExtra=priceUnit+attributesPriceExtra+comboItem.extra_price;comboItems.push({combo_item_id:comboItem,price_unit:totalPriceExtra,attribute_value_ids,attribute_custom_values:conf.configuration?.attribute_custom_values||{},});}
return comboItems;};return __exports;});;

/* /point_of_sale/static/src/app/models/utils/currency.js */
odoo.define('@point_of_sale/app/models/utils/currency',['@web/views/fields/formatters','@web/core/utils/numbers'],function(require){'use strict';let __exports={};const{formatMonetary}=require("@web/views/fields/formatters");const{roundDecimals}=require("@web/core/utils/numbers");const formatCurrency=__exports.formatCurrency=(value,currency,hasSymbol=true)=>{return formatMonetary(value,{currencyId:currency.id,noSymbol:!hasSymbol,});};const roundCurrency=__exports.roundCurrency=(value,currency)=>{return roundDecimals(value,currency.decimal_places);};return __exports;});;

/* /point_of_sale/static/src/app/models/utils/indexed_db.js */
odoo.define('@point_of_sale/app/models/utils/indexed_db',['@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{DateTime}=luxon;const IndexedDB=__exports[Symbol.for("default")]=class IndexedDB{constructor(dbName,dbVersion,dbStores){this.db=null;this.dbName=dbName;this.dbVersion=dbVersion;this.dbStores=dbStores;this.dbInstance=null;this.databaseEventListener();}
databaseEventListener(){const indexedDB=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB;if(!indexedDB){console.error(_t("Warning: Your browser doesn't support IndexedDB. The data won't be saved. Please use a modern browser."));}
this.dbInstance=indexedDB;const dbInstance=indexedDB.open(this.dbName,this.dbVersion);dbInstance.onerror=(event)=>{console.error("Database error: "+event.target.errorCode);};dbInstance.onsuccess=(event)=>{this.db=event.target.result;console.info(`IndexedDB ${this.dbVersion} Ready`);};dbInstance.onupgradeneeded=(event)=>{for(const[id,storeName]of this.dbStores){if(!event.target.result.objectStoreNames.contains(storeName)){event.target.result.createObjectStore(storeName,{keyPath:id});}}};}
async promises(storeName,arrData,method){if(method!=="delete"){const data=await this.readAll([storeName]);const storeData=data[storeName];if(storeData?.length>0){for(const idx in arrData){const data={...arrData[idx]};delete data.JSONuiState;delete data.date_order;delete data.write_date;let alreadyExists=storeData.find((item)=>item.uuid===data.uuid);if(alreadyExists){alreadyExists={...alreadyExists};delete alreadyExists.JSONuiState;delete alreadyExists.date_order;delete alreadyExists.write_date;}
if(!alreadyExists||JSON.stringify(alreadyExists)!==JSON.stringify(data)){arrData[idx].write_date=DateTime.now().toFormat("yyyy-MM-dd HH:mm:ss");}else{delete arrData[idx];}}}}
const transaction=this.getNewTransaction([storeName],"readwrite");if(!transaction){return false;}
const promises=arrData.map((data)=>{data=JSON.parse(JSON.stringify(data));return new Promise((resolve,reject)=>{const request=transaction.objectStore(storeName)[method](data);request.onsuccess=()=>resolve();request.onerror=()=>reject();});});return Promise.allSettled(promises).then((results)=>{return results;});}
getNewTransaction(dbStore){try{if(!this.db){return false;}
return this.db.transaction(dbStore,"readwrite");}catch(e){console.info("DATABASE is not ready yet",e);return false;}}
reset(){if(!this.dbInstance){return;}
this.dbInstance.deleteDatabase(this.dbName);}
create(storeName,arrData){return this.promises(storeName,arrData,"put");}
readAll(storeName=[],retry=0){const storeNames=storeName.length>0?storeName:this.dbStores.map((store)=>store[1]);const transaction=this.getNewTransaction(storeNames,"readonly");if(!transaction&&retry<5){return this.readAll(storeName,retry+1);}else if(!transaction){return new Promise((reject)=>reject(false));}
const promises=storeNames.map((store)=>new Promise((resolve,reject)=>{const objectStore=transaction.objectStore(store);const request=objectStore.getAll();request.onerror=()=>{console.warn("Internal error reading data from the indexed database.");reject();};request.onsuccess=(event)=>{const result=event.target.result;resolve({[store]:result});};}));return Promise.allSettled(promises).then((results)=>{return results.reduce((acc,result)=>{if(result.status==="fulfilled"){return{...acc,...result.value};}else{return acc;}},{});});}
delete(storeName,uuids){return this.promises(storeName,uuids,"delete");}}
return __exports;});;

/* /point_of_sale/static/src/app/models/utils/order_change.js */
odoo.define('@point_of_sale/app/models/utils/order_change',[],function(require){'use strict';let __exports={};const changesToOrder=__exports.changesToOrder=(order,skipped=false,orderPreparationCategories,cancelled=false)=>{const toAdd=[];const toRemove=[];const orderChanges=getOrderChanges(order,skipped,orderPreparationCategories);const linesChanges=!cancelled?Object.values(orderChanges.orderlines):Object.values(order.last_order_preparation_change.lines);for(const lineChange of linesChanges){if(lineChange["quantity"]>0&&!cancelled){toAdd.push(lineChange);}else{lineChange["quantity"]=Math.abs(lineChange["quantity"]);toRemove.push(lineChange);}}
return{new:toAdd,cancelled:toRemove,noteUpdated:Object.values(orderChanges.noteUpdated),generalNote:orderChanges.generalNote,modeUpdate:orderChanges.modeUpdate,};};const getOrderChanges=__exports.getOrderChanges=(order,skipped=false,orderPreparationCategories)=>{const prepaCategoryIds=orderPreparationCategories;const oldChanges=order.last_order_preparation_change.lines;const changes={};const noteupdated={};let changesCount=0;let changeAbsCount=0;let skipCount=0;for(const orderline of order.get_orderlines()){const product=orderline.get_product();const note=orderline.getNote();const lineKey=`${orderline.uuid} - ${note}`;const productCategoryIds=product.parentPosCategIds.filter((id)=>prepaCategoryIds.has(id));if(prepaCategoryIds.size===0||productCategoryIds.length>0){const key=Object.keys(order.last_order_preparation_change.lines).find((k)=>k.startsWith(orderline.uuid));const quantity=orderline.get_quantity();const relatedKey=key!==lineKey?key:lineKey;const quantityDiff=(oldChanges[relatedKey]?quantity-oldChanges[relatedKey].quantity:quantity)||0;const lineDetails={uuid:orderline.uuid,name:orderline.get_full_product_name(),basic_name:orderline.product_id.name,isCombo:orderline.combo_item_id?.id,product_id:product.id,attribute_value_ids:orderline.attribute_value_ids,quantity:quantityDiff,note:note,pos_categ_id:product.pos_categ_ids[0]?.id??0,pos_categ_sequence:product.pos_categ_ids[0]?.sequence??0,display_name:product.display_name,};if(quantityDiff&&orderline.skip_change===skipped){changes[lineKey]=lineDetails;changesCount+=quantityDiff;changeAbsCount+=Math.abs(quantityDiff);if(oldChanges[relatedKey]&&oldChanges[relatedKey].note!==note){lineDetails.quantity=oldChanges[relatedKey].quantity||0;noteupdated[lineKey]=lineDetails;}
if(!orderline.skip_change){orderline.setHasChange(true);}}else{if(quantityDiff){skipCount+=quantityDiff;orderline.setHasChange(false);}else{if(oldChanges[relatedKey]&&oldChanges[relatedKey].note!==note){lineDetails.quantity=orderline.qty;noteupdated[lineKey]=lineDetails;orderline.setHasChange(true);changesCount+=1;}else{orderline.setHasChange(false);}}}}else{orderline.setHasChange(false);}}
for(const[lineKey,lineResume]of Object.entries(order.last_order_preparation_change.lines)){if(!order.models["pos.order.line"].getBy("uuid",lineResume["uuid"])){const quantity=isNaN(lineResume["quantity"])?0:lineResume["quantity"];if(!changes[lineKey]){changes[lineKey]={uuid:lineResume["uuid"],product_id:lineResume["product_id"],name:lineResume["name"],basic_name:lineResume["basic_name"],display_name:lineResume["display_name"],isCombo:lineResume["isCombo"],note:lineResume["note"],attribute_value_ids:lineResume["attribute_value_ids"],quantity:-quantity,};changeAbsCount+=Math.abs(quantity);changesCount+=quantity;}else{changes[lineKey]["quantity"]-=quantity;}}}
const result={nbrOfSkipped:skipCount,nbrOfChanges:changeAbsCount,noteUpdated:noteupdated,orderlines:changes,count:changesCount,};const lastGeneralNote=order.last_order_preparation_change.generalNote;if(lastGeneralNote!==order.general_note){result.generalNote=order.general_note;}
const sittingMode=order.last_order_preparation_change.sittingMode;if((sittingMode!=="dine in"&&!order.takeaway)||(sittingMode!=="takeaway"&&order.takeaway)){result.modeUpdate=true;}
return result;};return __exports;});;

/* /point_of_sale/static/src/app/models/utils/tax_utils.js */
odoo.define('@point_of_sale/app/models/utils/tax_utils',['@account/helpers/account_tax'],function(require){'use strict';let __exports={};const{accountTaxHelpers}=require("@account/helpers/account_tax");const compute_price_force_price_include=__exports.compute_price_force_price_include=(tax_ids,price,product,product_default_values,company,currency,models)=>{const tax_res=getTaxesValues(tax_ids,price,1,product,product_default_values,company,currency,"total_included");let new_price=tax_res.total_excluded;new_price+=tax_res.taxes_data.filter((tax)=>models["account.tax"].get(tax.id).price_include).reduce((sum,tax)=>(sum+=tax.tax_amount),0);return new_price;};const getTaxesValues=__exports.getTaxesValues=(taxes,priceUnit,quantity,product,productDefaultValues,company,currency,special_mode=null)=>{const baseLine=accountTaxHelpers.prepare_base_line_for_taxes_computation({},{product_id:accountTaxHelpers.eval_taxes_computation_prepare_product_values(productDefaultValues,product),tax_ids:taxes,price_unit:priceUnit,quantity:quantity,currency_id:currency,special_mode:special_mode,});accountTaxHelpers.add_tax_details_in_base_line(baseLine,company);accountTaxHelpers.round_base_lines_tax_details([baseLine],company);const results=baseLine.tax_details;for(const taxData of results.taxes_data){Object.assign(taxData,taxData.tax);}
return results;};const getTaxesAfterFiscalPosition=__exports.getTaxesAfterFiscalPosition=(taxes,fiscalPosition,models)=>{if(!fiscalPosition){return taxes;}
const newTaxIds=[];for(const tax of taxes){if(fiscalPosition.tax_map[tax.id]){for(const mapTaxId of fiscalPosition.tax_map[tax.id]){newTaxIds.push(mapTaxId);}}else{newTaxIds.push(tax.id);}}
return models["account.tax"].filter((tax)=>newTaxIds.includes(tax.id));};return __exports;});;

/* /point_of_sale/static/src/app/models/utils/unique_by.js */
odoo.define('@point_of_sale/app/models/utils/unique_by',[],function(require){'use strict';let __exports={};__exports.uniqueBy=uniqueBy;function uniqueBy(array,agg){const map=new Map();for(const item of array){const key=agg(item);if(!map.has(key)){map.set(key,item);}}
return[...map.values()];}
return __exports;});;

/* /point_of_sale/static/src/app/navbar/cash_move_popup/cash_move_popup.js */
odoo.define('@point_of_sale/app/navbar/cash_move_popup/cash_move_popup',['@web/core/l10n/translation','@web/core/utils/hooks','@web/views/fields/parsers','@odoo/owl','@point_of_sale/app/store/pos_hook','@point_of_sale/app/navbar/cash_move_popup/cash_move_receipt/cash_move_receipt','@web/core/dialog/dialog','@point_of_sale/app/utils/hooks','@point_of_sale/app/generic_components/inputs/input/input'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{useService}=require("@web/core/utils/hooks");const{parseFloat}=require("@web/views/fields/parsers");const{Component,useState}=require("@odoo/owl");const{usePos}=require("@point_of_sale/app/store/pos_hook");const{CashMoveReceipt}=require("@point_of_sale/app/navbar/cash_move_popup/cash_move_receipt/cash_move_receipt");const{Dialog}=require("@web/core/dialog/dialog");const{useAsyncLockedMethod}=require("@point_of_sale/app/utils/hooks");const{Input}=require("@point_of_sale/app/generic_components/inputs/input/input");const CashMovePopup=__exports.CashMovePopup=class CashMovePopup extends Component{static template="point_of_sale.CashMovePopup";static components={Input,Dialog};static props=["confirmKey?","close","getPayload?"];setup(){super.setup();this.notification=useService("notification");this.pos=usePos();this.dialog=useService("dialog");this.hardwareProxy=useService("hardware_proxy");this.printer=useService("printer");this.state=useState({type:"out",amount:"",reason:"",});this.confirm=useAsyncLockedMethod(this.confirm);this.ui=useService("ui");}
async confirm(){const amount=parseFloat(this.state.amount);const formattedAmount=this.env.utils.formatCurrency(amount);if(!amount){this.notification.add(_t("Cash in/out of %s is ignored.",formattedAmount));return this.props.close();}
const type=this.state.type;const translatedType=_t(type);const extras={formattedAmount,translatedType};const reason=this.state.reason.trim();await this.pos.data.call("pos.session","try_cash_in_out",this._prepare_try_cash_in_out_payload(type,amount,reason,extras),{},true);await this.pos.logEmployeeMessage(`${_t("Cash")} ${translatedType} - ${_t("Amount")}: ${formattedAmount}`,"CASH_DRAWER_ACTION");await this.printer.print(CashMoveReceipt,{reason,translatedType,formattedAmount,headerData:this.pos.getReceiptHeaderData(),date:new Date().toLocaleString(),});this.props.close();this.notification.add(_t("Successfully made a cash %s of %s.",type,formattedAmount),3000);}
_onWindowKeyup(event){if(event.key===this.props.confirmKey&&!["TEXTAREA"].includes(event.target.tagName)){this.confirm();}else{super._onWindowKeyup(...arguments);}}
onClickButton(type){this.state.type=type;this.inputRef.el.focus();}
format(value){return this.env.utils.isValidFloat(value)?this.env.utils.formatCurrency(parseFloat(value)):"";}
_prepare_try_cash_in_out_payload(type,amount,reason,extras){return[[this.pos.session.id],type,amount,reason,extras];}
isValidCashMove(){return this.env.utils.isValidFloat(this.state.amount)&&this.state.reason.trim()!=="";}}
return __exports;});;

/* /point_of_sale/static/src/app/navbar/cash_move_popup/cash_move_receipt/cash_move_receipt.js */
odoo.define('@point_of_sale/app/navbar/cash_move_popup/cash_move_receipt/cash_move_receipt',['@odoo/owl','@point_of_sale/app/screens/receipt_screen/receipt/receipt_header/receipt_header'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{ReceiptHeader}=require("@point_of_sale/app/screens/receipt_screen/receipt/receipt_header/receipt_header");const CashMoveReceipt=__exports.CashMoveReceipt=class CashMoveReceipt extends Component{static template="point_of_sale.CashMoveReceipt";static components={ReceiptHeader};static props={reason:String,translatedType:String,formattedAmount:String,headerData:Object,date:String,};}
return __exports;});;

/* /point_of_sale/static/src/app/navbar/cashier_name/cashier_name.js */
odoo.define('@point_of_sale/app/navbar/cashier_name/cashier_name',['@odoo/owl','@point_of_sale/app/store/pos_hook','@web/core/utils/hooks'],function(require){'use strict';let __exports={};const{Component,useState}=require("@odoo/owl");const{usePos}=require("@point_of_sale/app/store/pos_hook");const{useService}=require("@web/core/utils/hooks");const CashierName=__exports.CashierName=class CashierName extends Component{static template="point_of_sale.CashierName";static props={};setup(){this.pos=usePos();this.ui=useState(useService("ui"));}
get username(){const cashier=this.pos.get_cashier();return cashier?cashier.name:"";}
get avatar(){const user_id=this.pos.get_cashier_user_id();const id=user_id?user_id:-1;return`/web/image/res.users/${id}/avatar_128`;}
get cssClass(){return{"not-clickable pe-none":true};}}
return __exports;});;

/* /point_of_sale/static/src/app/navbar/closing_popup/closing_popup.js */
odoo.define('@point_of_sale/app/navbar/closing_popup/closing_popup',['@web/core/dialog/dialog','@point_of_sale/app/navbar/sale_details_button/sale_details_button','@web/core/confirmation_dialog/confirmation_dialog','@point_of_sale/app/utils/money_details_popup/money_details_popup','@web/core/utils/hooks','@odoo/owl','@web/core/network/rpc','@web/core/l10n/translation','@point_of_sale/app/store/pos_hook','@web/views/fields/parsers','@point_of_sale/app/generic_components/inputs/input/input','@point_of_sale/app/utils/hooks','@point_of_sale/app/store/make_awaitable_dialog','@point_of_sale/utils','@web/views/view_dialogs/form_view_dialog','@point_of_sale/app/components/payment_method_breakdown/payment_method_breakdown'],function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{SaleDetailsButton}=require("@point_of_sale/app/navbar/sale_details_button/sale_details_button");const{ConfirmationDialog,AlertDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{MoneyDetailsPopup}=require("@point_of_sale/app/utils/money_details_popup/money_details_popup");const{useService}=require("@web/core/utils/hooks");const{Component,useState}=require("@odoo/owl");const{ConnectionLostError}=require("@web/core/network/rpc");const{_t}=require("@web/core/l10n/translation");const{usePos}=require("@point_of_sale/app/store/pos_hook");const{parseFloat}=require("@web/views/fields/parsers");const{Input}=require("@point_of_sale/app/generic_components/inputs/input/input");const{useAsyncLockedMethod}=require("@point_of_sale/app/utils/hooks");const{ask}=require("@point_of_sale/app/store/make_awaitable_dialog");const{deduceUrl}=require("@point_of_sale/utils");const{FormViewDialog}=require("@web/views/view_dialogs/form_view_dialog");const{PaymentMethodBreakdown}=require("@point_of_sale/app/components/payment_method_breakdown/payment_method_breakdown");const ClosePosPopup=__exports.ClosePosPopup=class ClosePosPopup extends Component{static components={SaleDetailsButton,Input,Dialog,PaymentMethodBreakdown};static template="point_of_sale.ClosePosPopup";static props=["orders_details","opening_notes","default_cash_details","non_cash_payment_methods","is_manager","amount_authorized_diff","close",];setup(){this.pos=usePos();this.report=useService("report");this.hardwareProxy=useService("hardware_proxy");this.dialog=useService("dialog");this.ui=useState(useService("ui"));this.state=useState(this.getInitialState());this.confirm=useAsyncLockedMethod(this.confirm);}
autoFillCashCount(){const count=this.props.default_cash_details.amount;this.state.payments[this.props.default_cash_details.id].counted=this.env.utils.formatCurrency(count,false);this.setManualCashInput(count);}
get cashMoveData(){const{total,moves}=this.props.default_cash_details.moves.reduce((acc,move,i)=>{acc.total+=move.amount;acc.moves.push({id:i,name:move.name,amount:move.amount,});return acc;},{total:0,moves:[]});return{total,moves};}
async cashMove(){await this.pos.cashMove();this.dialog.closeAll();this.pos.closeSession();}
getInitialState(){const initialState={notes:"",payments:{}};if(this.pos.config.cash_control){initialState.payments[this.props.default_cash_details.id]={counted:"0",};}
this.props.non_cash_payment_methods.forEach((pm)=>{if(pm.type==="bank"){initialState.payments[pm.id]={counted:this.env.utils.formatCurrency(pm.amount,false),};}});return initialState;}
async confirm(){if(!this.pos.config.cash_control||this.env.utils.floatIsZero(this.getMaxDifference())){await this.closeSession();return;}
if(this.hasUserAuthority()){const response=await ask(this.dialog,{title:_t("Payments Difference"),body:_t("The money counted doesn't match what we expected. Want to log the difference for the books?"),confirmLabel:_t("Proceed Anyway"),cancelLabel:_t("Discard"),});if(response){return this.closeSession();}
return;}
this.dialog.add(ConfirmationDialog,{title:_t("Payments Difference"),body:_t("The maximum difference allowed is %s.\nPlease contact your manager to accept the closing difference.",this.env.utils.formatCurrency(this.props.amount_authorized_diff)),});}
async cancel(){if(this.canCancel()){this.props.close();}}
canConfirm(){return Object.values(this.state.payments).map((v)=>v.counted).every(this.env.utils.isValidFloat);}
async openDetailsPopup(){const action=_t("Cash control - closing");this.hardwareProxy.openCashbox(action);this.dialog.add(MoneyDetailsPopup,{moneyDetails:this.moneyDetails,action:action,getPayload:(payload)=>{const{total,moneyDetailsNotes,moneyDetails}=payload;this.state.payments[this.props.default_cash_details.id].counted=this.env.utils.formatCurrency(total,false);if(moneyDetailsNotes){this.state.notes=moneyDetailsNotes;}
this.moneyDetails=moneyDetails;},context:"Closing",});}
async downloadSalesReport(){return this.report.doAction("point_of_sale.sale_details_report",[this.pos.session.id]);}
setManualCashInput(amount){if(this.env.utils.isValidFloat(amount)&&this.moneyDetails){this.state.notes="";this.moneyDetails=null;}}
getDifference(paymentId){const counted=this.state.payments[paymentId].counted;if(!this.env.utils.isValidFloat(counted)){return NaN;}
const expectedAmount=paymentId===this.props.default_cash_details?.id?this.props.default_cash_details.amount:this.props.non_cash_payment_methods.find((pm)=>pm.id===paymentId).amount;return parseFloat(counted)-expectedAmount;}
getMaxDifference(){return Math.max(...Object.keys(this.state.payments).map((id)=>Math.abs(this.getDifference(parseInt(id)))));}
hasUserAuthority(){return(this.props.is_manager||this.props.amount_authorized_diff==null||this.getMaxDifference()<=this.props.amount_authorized_diff);}
canCancel(){return true;}
async closeSession(){this.pos._resetConnectedCashier();if(this.pos.config.customer_display_type==="proxy"){const proxyIP=this.pos.getDisplayDeviceIP();fetch(`${deduceUrl(proxyIP)}/hw_proxy/customer_facing_display`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",},body:JSON.stringify({params:{action:"close"}}),}).catch(()=>{console.log("Failed to send data to customer display");});}
const syncSuccess=await this.pos.push_orders_with_closing_popup();if(!syncSuccess){return;}
if(this.pos.config.cash_control){const response=await this.pos.data.call("pos.session","post_closing_cash_details",[this.pos.session.id],{counted_cash:parseFloat(this.state.payments[this.props.default_cash_details.id].counted),});if(!response.successful){return this.handleClosingError(response);}}
try{await this.pos.data.call("pos.session","update_closing_control_state_session",[this.pos.session.id,this.state.notes,]);}catch(error){if(!error.data&&error.data.message!=="This session is already closed."){throw error;}}
try{const bankPaymentMethodDiffPairs=this.props.non_cash_payment_methods.filter((pm)=>pm.type=="bank").map((pm)=>[pm.id,this.getDifference(pm.id)]);const response=await this.pos.data.call("pos.session","close_session_from_ui",[this.pos.session.id,bankPaymentMethodDiffPairs],{context:{login_number:odoo.login_number,},});if(!response.successful){return this.handleClosingError(response);}
localStorage.removeItem(`pos.session.${odoo.pos_config_id}`);location.reload();}catch(error){if(error instanceof ConnectionLostError){throw error;}else{await this.handleClosingControlError();}}}
async handleClosingControlError(){this.dialog.add(AlertDialog,{title:_t("Closing session error"),body:_t("An error has occurred when trying to close the session.\n"+"You will be redirected to the back-end to manually close the session."),},{onClose:()=>{this.dialog.add(FormViewDialog,{resModel:"pos.session",resId:this.pos.session.id,},{onClose:async()=>{const session=await this.pos.data.read("pos.session",[this.pos.session.id,]);if(session[0]&&session[0].state==="closed"){location.reload();}else{this.pos.redirectToBackend();}},});},});}
async handleClosingError(response){this.dialog.add(ConfirmationDialog,{title:response.title||"Error",body:response.message,confirmLabel:_t("Review Orders"),cancelLabel:_t("Cancel Orders"),confirm:()=>{if(!response.redirect){this.props.close();this.pos.showScreen("TicketScreen");}},cancel:async()=>{if(!response.redirect){const ordersDraft=this.pos.models["pos.order"].filter((o)=>!o.finalized);await this.pos.deleteOrders(ordersDraft,response.open_order_ids);this.closeSession();}},dismiss:async()=>{},});if(response.redirect){window.location.reload();}}
getMovesTotalAmount(){const amounts=this.props.default_cash_details.moves.map((move)=>move.amount);return amounts.reduce((acc,x)=>acc+x,0);}}
return __exports;});;

/* /point_of_sale/static/src/app/navbar/navbar.js */
odoo.define('@point_of_sale/app/navbar/navbar',['@point_of_sale/app/store/pos_hook','@web/core/utils/hooks','@web/core/browser/feature_detection','@point_of_sale/app/navbar/cashier_name/cashier_name','@point_of_sale/app/navbar/proxy_status/proxy_status','@point_of_sale/app/navbar/sync_popup/sync_popup','@point_of_sale/app/navbar/sale_details_button/sale_details_button','@odoo/owl','@point_of_sale/app/screens/product_screen/product_screen','@point_of_sale/app/generic_components/inputs/input/input','@web/core/barcode/barcode_video_scanner','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@point_of_sale/utils','@web/core/user','@point_of_sale/app/components/order_tabs/order_tabs'],function(require){'use strict';let __exports={};const{usePos}=require("@point_of_sale/app/store/pos_hook");const{useService}=require("@web/core/utils/hooks");const{isDisplayStandalone,isMobileOS}=require("@web/core/browser/feature_detection");const{CashierName}=require("@point_of_sale/app/navbar/cashier_name/cashier_name");const{ProxyStatus}=require("@point_of_sale/app/navbar/proxy_status/proxy_status");const{SyncPopup}=require("@point_of_sale/app/navbar/sync_popup/sync_popup");const{SaleDetailsButton,handleSaleDetails,}=require("@point_of_sale/app/navbar/sale_details_button/sale_details_button");const{Component,onMounted,useState}=require("@odoo/owl");const{ProductScreen}=require("@point_of_sale/app/screens/product_screen/product_screen");const{Input}=require("@point_of_sale/app/generic_components/inputs/input/input");const{isBarcodeScannerSupported}=require("@web/core/barcode/barcode_video_scanner");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{deduceUrl}=require("@point_of_sale/utils");const{user}=require("@web/core/user");const{OrderTabs}=require("@point_of_sale/app/components/order_tabs/order_tabs");const Navbar=__exports.Navbar=class Navbar extends Component{static template="point_of_sale.Navbar";static components={CashierName,ProxyStatus,SaleDetailsButton,Input,Dropdown,DropdownItem,SyncPopup,OrderTabs,};static props={};setup(){this.pos=usePos();this.ui=useState(useService("ui"));this.debug=useService("debug");this.dialog=useService("dialog");this.notification=useService("notification");this.hardwareProxy=useService("hardware_proxy");this.isDisplayStandalone=isDisplayStandalone();this.isBarcodeScannerSupported=isBarcodeScannerSupported;onMounted(async()=>{this.isSystemUser=await user.hasGroup("base.group_system");});}
onClickScan(){if(!this.pos.scanning){this.pos.showScreen("ProductScreen");this.pos.mobile_pane="right";}
this.pos.scanning=!this.pos.scanning;}
get customerFacingDisplayButtonIsShown(){return this.pos.config.customer_display_type!=="none"&&!isMobileOS();}
get showCashMoveButton(){return Boolean(this.pos.config.cash_control&&this.pos.session._has_cash_move_perm);}
async clearCache(){await this.pos.data.resetIndexedDB();const items={...localStorage};for(const key in items){localStorage.removeItem(key);}
window.location.reload();}
getOrderTabs(){return this.pos.get_open_orders().filter((order)=>!order.table_id);}
get orderCount(){return this.pos.get_open_orders().length;}
get appUrl(){return`/scoped_app?app_id=point_of_sale&app_name=${encodeURIComponent(
            this.pos.config.display_name
        )}&path=${encodeURIComponent(`pos/ui?config_id=${this.pos.config.id}`)}`;}
toggleProductView(){const newView=this.pos.productListView==="grid"?"list":"grid";window.localStorage.setItem("productListView",newView);this.pos.productListView=this.pos.productListView==="grid"?"list":"grid";}
get showToggleProductView(){return this.pos.mainScreen.component===ProductScreen&&this.ui.isSmall;}
openCustomerDisplay(){if(this.pos.config.customer_display_type==="local"){window.open(`/pos_customer_display/${this.pos.config.id}/${this.pos.config.access_token}`,"newWindow","width=800,height=600,left=200,top=200");this.notification.add("Connected");}
if(this.pos.config.customer_display_type==="remote"){this.notification.add("Navigate to your POS Customer Display on the other computer");}
if(this.pos.config.customer_display_type==="proxy"){this.notification.add("Connecting to the IoT Box");const proxyIP=this.pos.getDisplayDeviceIP();fetch(`${deduceUrl(proxyIP)}/hw_proxy/customer_facing_display`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",},body:JSON.stringify({params:{action:"open",access_token:this.pos.config.access_token,pos_id:this.pos.config.id,},}),}).then(()=>{this.notification.add("Connection successful",{type:"success"});}).catch(()=>{this.notification.add("Connection failed",{type:"danger"});});}}
get showCreateProductButton(){return this.isSystemUser;}
async showSaleDetails(){await handleSaleDetails(this.pos,this.hardwareProxy,this.dialog);}
onSyncNotificationClick(){if(this.pos.data.network.offline){this.pos.data.network.warningTriggered=false;}
if(this.pos.data.network.unsyncData.length>0){this.dialog.add(SyncPopup,{confirm:()=>this.pos.data.syncData(),});}}}
return __exports;});;

/* /point_of_sale/static/src/app/navbar/proxy_status/proxy_status.js */
odoo.define('@point_of_sale/app/navbar/proxy_status/proxy_status',['@odoo/owl','@point_of_sale/app/store/pos_hook','@web/core/utils/hooks','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{Component,useState}=require("@odoo/owl");const{usePos}=require("@point_of_sale/app/store/pos_hook");const{useService}=require("@web/core/utils/hooks");const{_t}=require("@web/core/l10n/translation");const ProxyStatus=__exports.ProxyStatus=class ProxyStatus extends Component{static template="point_of_sale.ProxyStatus";static props={};setup(){this.pos=usePos();this.ui=useState(useService("ui"));const hardwareProxy=useService("hardware_proxy");this.connectionInfo=useState(hardwareProxy.connectionInfo);}
get message(){if(this.connectionInfo.status==="connected"){const{drivers}=this.connectionInfo;const{iface_scan_via_proxy,iface_print_via_proxy,iface_cashdrawer,iface_electronic_scale,}=this.pos.config;const devices=[{name:_t("Scanner"),driver:drivers.scanner,enabled:iface_scan_via_proxy,},{name:_t("Printer"),driver:drivers.printer,enabled:iface_print_via_proxy||iface_cashdrawer,},{name:_t("Scale"),driver:drivers.scale,enabled:iface_electronic_scale,},];const disconnectedDevices=devices.filter(({enabled,driver})=>{return enabled&&!["connected","connecting"].includes(driver?.status);});if(disconnectedDevices.length){return`${disconnectedDevices.map((d) => d.name).join(" & ")} ${_t("Offline")}`;}
return"";}
return this.connectionInfo.message||"";}}
return __exports;});;

/* /point_of_sale/static/src/app/navbar/sale_details_button/sale_details_button.js */
odoo.define('@point_of_sale/app/navbar/sale_details_button/sale_details_button',['@web/core/utils/hooks','@web/core/utils/render','@web/core/confirmation_dialog/confirmation_dialog','@odoo/owl','@point_of_sale/app/store/pos_hook'],function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{renderToElement}=require("@web/core/utils/render");const{AlertDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{Component}=require("@odoo/owl");const{usePos}=require("@point_of_sale/app/store/pos_hook");__exports.handleSaleDetails=handleSaleDetails;async function handleSaleDetails(pos,hardwareProxy,dialog){const saleDetails=await pos.data.call("report.point_of_sale.report_saledetails","get_sale_details",[false,false,false,[pos.session.id]]);const report=renderToElement("point_of_sale.SaleDetailsReport",Object.assign({},saleDetails,{date:new Date().toLocaleString(),pos:pos,formatCurrency:pos.env.utils.formatCurrency,}));const{successful,message}=await hardwareProxy.printer.printReceipt(report);if(!successful){dialog.add(AlertDialog,{title:message.title,body:message.body,});}}
const SaleDetailsButton=__exports.SaleDetailsButton=class SaleDetailsButton extends Component{static template="point_of_sale.SaleDetailsButton";static props={isHeaderButton:{type:Boolean,optional:true},};setup(){super.setup(...arguments);this.pos=usePos();this.dialog=useService("dialog");this.hardwareProxy=useService("hardware_proxy");}
async onClick(){await handleSaleDetails(this.pos,this.hardwareProxy,this.dialog);}}
return __exports;});;

/* /point_of_sale/static/src/app/navbar/sync_popup/sync_popup.js */
odoo.define('@point_of_sale/app/navbar/sync_popup/sync_popup',['@web/core/dialog/dialog','@point_of_sale/app/navbar/sale_details_button/sale_details_button','@odoo/owl','@point_of_sale/app/store/pos_hook','@point_of_sale/app/generic_components/inputs/input/input','@web/core/utils/hooks','@web/core/confirmation_dialog/confirmation_dialog','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{SaleDetailsButton}=require("@point_of_sale/app/navbar/sale_details_button/sale_details_button");const{Component}=require("@odoo/owl");const{usePos}=require("@point_of_sale/app/store/pos_hook");const{Input}=require("@point_of_sale/app/generic_components/inputs/input/input");const{useService}=require("@web/core/utils/hooks");const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{_t}=require("@web/core/l10n/translation");const SyncPopup=__exports.SyncPopup=class SyncPopup extends Component{static components={SaleDetailsButton,Input,Dialog};static template="point_of_sale.SyncPopup";static props=["close","confirm"];setup(){this.pos=usePos();this.dialog=useService("dialog");}
getCount(data){return data.values?1:data.args.length;}
delete(uuid){this.dialog.add(ConfirmationDialog,{title:_t("Delete pending record?"),body:_t("Please note that this operation will result in the loss of any data not saved on the server."),confirm:()=>{this.pos.data.deleteUnsyncData(uuid);},});}
async confirm(){this.props.confirm();this.props.close();}}
return __exports;});;

/* /point_of_sale/static/src/app/payment/payment_interface.js */
odoo.define('@point_of_sale/app/payment/payment_interface',[],function(require){'use strict';let __exports={};const PaymentInterface=__exports.PaymentInterface=class PaymentInterface{constructor(pos,payment_method_id){this.setup(pos,payment_method_id);}
setup(pos,payment_method_id){this.env=pos.env;this.pos=pos;this.payment_method_id=payment_method_id;this.supports_reversals=false;}
enable_reversals(){this.supports_reversals=true;}
send_payment_request(uuid){}
send_payment_cancel(order,uuid){}
send_payment_reversal(uuid){}
close(){}}
return __exports;});;

/* /point_of_sale/static/src/app/pos_app.js */
odoo.define('@point_of_sale/app/pos_app',['@web/core/transition','@web/core/main_components_container','@point_of_sale/app/navbar/navbar','@point_of_sale/app/store/pos_hook','@odoo/owl','@web/core/utils/reactive','@web/core/utils/timing','@point_of_sale/utils','@web/core/debug/debug_context','@point_of_sale/app/utils/use_idle_timer','@point_of_sale/app/hooks/use_tours'],function(require){'use strict';let __exports={};const{Transition}=require("@web/core/transition");const{MainComponentsContainer}=require("@web/core/main_components_container");const{Navbar}=require("@point_of_sale/app/navbar/navbar");const{usePos}=require("@point_of_sale/app/store/pos_hook");const{reactive,Component,onMounted,onWillStart}=require("@odoo/owl");const{effect}=require("@web/core/utils/reactive");const{batched}=require("@web/core/utils/timing");const{deduceUrl}=require("@point_of_sale/utils");const{useOwnDebugContext}=require("@web/core/debug/debug_context");const{useIdleTimer}=require("@point_of_sale/app/utils/use_idle_timer");const useTours=require("@point_of_sale/app/hooks/use_tours")[Symbol.for("default")];const Chrome=__exports.Chrome=class Chrome extends Component{static template="point_of_sale.Chrome";static components={Transition,MainComponentsContainer,Navbar};static props={disableLoader:Function};setup(){this.pos=usePos();useIdleTimer(this.pos.idleTimeout,()=>this.pos.showScreen(this.pos.firstScreen));const reactivePos=reactive(this.pos);window.posmodel=reactivePos;useOwnDebugContext();if(odoo.use_pos_fake_tours){window.pos_fake_tour=useTours();}
document.addEventListener("keydown",(ev)=>{if(ev.key==="Backspace"&&!ev.target.matches("input, textarea")){ev.preventDefault();}});if(this.pos.config.iface_big_scrollbars){const body=document.getElementsByTagName("body")[0];body.classList.add("big-scrollbars");}
onWillStart(this.pos._loadFonts);onMounted(this.props.disableLoader);if(this.pos.config.customer_display_type==="none"){return;}
this.customerDisplayChannel=new BroadcastChannel("UPDATE_CUSTOMER_DISPLAY");effect(batched(({selectedOrder,scaleData,scaleWeight,scaleTare,totalPriceOnScale,isScaleScreenVisible,})=>{if(selectedOrder){const allScaleData={...scaleData,weight:scaleWeight,tare:scaleTare,totalPriceOnScale,isScaleScreenVisible,};this.sendOrderToCustomerDisplay(selectedOrder,allScaleData);}}),[this.pos]);}
sendOrderToCustomerDisplay(selectedOrder,scaleData){const customerDisplayData=selectedOrder.getCustomerDisplayData();customerDisplayData.isScaleScreenVisible=scaleData.isScaleScreenVisible;if(scaleData){customerDisplayData.scaleData={productName:scaleData.productName,uomName:scaleData.uomName,uomRounding:scaleData.uomRounding,productPrice:scaleData.productPrice,};}
customerDisplayData.weight=scaleData.weight;customerDisplayData.tare=scaleData.tare;customerDisplayData.totalPriceOnScale=scaleData.totalPriceOnScale;if(this.pos.config.customer_display_type==="local"){this.customerDisplayChannel.postMessage(customerDisplayData);}
if(this.pos.config.customer_display_type==="remote"){this.pos.data.call("pos.config","update_customer_display",[[this.pos.config.id],customerDisplayData,this.pos.config.access_token,]);}
if(this.pos.config.customer_display_type==="proxy"){const proxyIP=this.pos.getDisplayDeviceIP();fetch(`${deduceUrl(proxyIP)}/hw_proxy/customer_facing_display`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",},body:JSON.stringify({params:{action:"set",data:customerDisplayData,},}),}).catch(()=>{console.log("Failed to send data to customer display");});}}
get showCashMoveButton(){return Boolean(this.pos.config.cash_control);}}
return __exports;});;

/* /point_of_sale/static/src/app/printer/base_printer.js */
odoo.define('@point_of_sale/app/printer/base_printer',['@web/core/l10n/translation','@point_of_sale/app/printer/render_service'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{htmlToCanvas}=require("@point_of_sale/app/printer/render_service");const BasePrinter=__exports.BasePrinter=class BasePrinter{constructor(){this.setup(...arguments);}
setup(){this.receiptQueue=[];}
async printReceipt(receipt){if(receipt){this.receiptQueue.push(receipt);}
let image,printResult;while(this.receiptQueue.length>0){receipt=this.receiptQueue.shift();image=this.processCanvas(await htmlToCanvas(receipt,{addClass:"pos-receipt-print"}));try{printResult=await this.sendPrintingJob(image);}catch{this.receiptQueue.length=0;return this.getActionError();}
if(!printResult||printResult.result===false){this.receiptQueue.length=0;return this.getResultsError(printResult);}}
return{successful:true};}
async sendPrintingJob(){throw new Error("Not implemented");}
openCashbox(){throw new Error("Not implemented");}
processCanvas(canvas){return canvas.toDataURL("image/jpeg").replace("data:image/jpeg;base64,","");}
getActionError(){return{successful:false,message:{title:_t("Connection to IoT Box failed"),body:_t("Please check if the IoT Box is still connected."),},};}
getResultsError(_printResult){return{successful:false,message:{title:_t("Connection to the printer failed"),body:_t("Please check if the printer is still connected. \n"+"Some browsers don't allow HTTP calls from websites to devices in the network (for security reasons). "+"If it is the case, you will need to follow Odoo's documentation for "+"'Self-signed certificate for ePOS printers' and 'Secure connection (HTTPS)' to solve the issue. "),},};}}
return __exports;});;

/* /point_of_sale/static/src/app/printer/hw_printer.js */
odoo.define('@point_of_sale/app/printer/hw_printer',['@web/core/network/rpc','@point_of_sale/app/printer/base_printer'],function(require){'use strict';let __exports={};const{rpc}=require("@web/core/network/rpc");const{BasePrinter}=require("@point_of_sale/app/printer/base_printer");const HWPrinter=__exports.HWPrinter=class HWPrinter extends BasePrinter{setup(params){super.setup(...arguments);this.url=params.url;}
sendAction(data){return rpc(`${this.url}/hw_proxy/default_printer_action`,{data});}
openCashbox(){return this.sendAction({action:"cashbox"});}
sendPrintingJob(img){return this.sendAction({action:"print_receipt",receipt:img});}}
return __exports;});;

/* /point_of_sale/static/src/app/printer/pos_printer_service.js */
odoo.define('@point_of_sale/app/printer/pos_printer_service',['@web/core/l10n/translation','@web/core/registry','@point_of_sale/app/printer/printer_service','@web/core/confirmation_dialog/confirmation_dialog','@point_of_sale/app/store/make_awaitable_dialog'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{PrinterService}=require("@point_of_sale/app/printer/printer_service");const{AlertDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{ask}=require("@point_of_sale/app/store/make_awaitable_dialog");const posPrinterService=__exports.posPrinterService={dependencies:["hardware_proxy","dialog","renderer"],start(env,{hardware_proxy,dialog,renderer}){return new PosPrinterService(env,{hardware_proxy,dialog,renderer});},};const PosPrinterService=__exports.PosPrinterService=class PosPrinterService extends PrinterService{constructor(...args){super(...args);this.setup(...args);}
setup(env,{hardware_proxy,dialog,renderer}){super.setup(...arguments);this.renderer=renderer;this.hardware_proxy=hardware_proxy;this.dialog=dialog;this.device=hardware_proxy.printer;}
printWeb(){try{return super.printWeb(...arguments);}catch{this.dialog.add(AlertDialog,{title:_t("Printing is not supported on some browsers"),body:_t("It is possible to print your tickets by making use of an IoT Box."),});return false;}}
async printHtml(){this.setPrinter(this.hardware_proxy.printer);try{return await super.printHtml(...arguments);}catch(error){return this.printHtmlAlternative(error,...arguments);}}
async printHtmlAlternative(error,...printArguments){if(error.body===undefined){console.error("An unknown error occured in printHtml:",error);}
const confirmed=await ask(this.dialog,{title:error.title||_t("Printing error"),body:(error.body??"")+_t("Do you want to print using the web printer? "),});if(confirmed){await new Promise(requestAnimationFrame);this.printWeb(...printArguments);}}}
registry.category("services").add("printer",posPrinterService);return __exports;});;

/* /point_of_sale/static/src/app/printer/printer_service.js */
odoo.define('@point_of_sale/app/printer/printer_service',['@point_of_sale/utils','@web/core/utils/reactive'],function(require){'use strict';let __exports={};const{loadAllImages}=require("@point_of_sale/utils");const{Reactive}=require("@web/core/utils/reactive");const printerService=__exports.printerService={dependencies:["renderer"],start(env,{renderer}){return new PrinterService(env,{renderer});},};const PrinterService=__exports.PrinterService=class PrinterService extends Reactive{constructor(...args){super(...args);this.setup(...args);}
setup(env,{renderer}){this.renderer=renderer;this.device=null;this.state={isPrinting:false};}
setPrinter(newDevice){this.device=newDevice;}
printWeb(el){this.renderer.whenMounted({el,callback:window.print});return true;}
async printHtml(el,{webPrintFallback=false}={}){if(!this.device){return webPrintFallback&&this.printWeb(el);}
const printResult=await this.device.printReceipt(el);if(printResult.successful){return true;}
throw{title:printResult.message.title||"Error",body:printResult.message.body,errorCode:printResult.errorCode,};}
async print(component,props,options){this.state.isPrinting=true;const el=await this.renderer.toHtml(component,props);try{await loadAllImages(el);}catch(e){console.error("Images could not be loaded correctly",e);}
try{return await this.printHtml(el,options);}finally{this.state.isPrinting=false;}}
is=()=>Boolean(this.device?.printReceipt);}
return __exports;});;

/* /point_of_sale/static/src/app/printer/render_service.js */
odoo.define('@point_of_sale/app/printer/render_service',['@web/core/registry','@odoo/owl','@point_of_sale/app/utils/html-to-image'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{Component,onRendered,reactive,useRef,xml}=require("@odoo/owl");const{toCanvas}=require("@point_of_sale/app/utils/html-to-image");const RenderContainer=__exports.RenderContainer=class RenderContainer extends Component{static props=["comp","onRendered"];static template=xml`
        <div class="render-container-parent" style="left: -1000px; position: fixed;">
            <div t-ref="ref">
                <t t-if="props.comp.component" t-component="props.comp.component" t-props="props.comp.props"/>
            </div>
            <div class="render-container" />
        </div>`;setup(){this.ref=useRef("ref");onRendered(async()=>{await new Promise((r)=>setTimeout(r,100));this.props.onRendered(this.ref?.el?.firstChild);});}}
const renderService={dependencies:[],start(){const toBeRenderedComponentData=reactive({});let elem,resolver;registry.category("main_components").add("RenderContainer",{Component:RenderContainer,props:{comp:toBeRenderedComponentData,onRendered:(el)=>{elem=el;resolver?.();toBeRenderedComponentData.component=null;},},});const toHtml=async(component,props)=>{Object.assign(toBeRenderedComponentData,{component,props});await new Promise((r)=>(resolver=r));return elem;};const toCanvas=async(component,props,options)=>{return htmlToCanvas(await toHtml(component,props),options);};const toJpeg=async(component,props,options)=>{const canvas=await toCanvas(component,props,options);return canvas.toDataURL("image/jpeg").replace("data:image/jpeg;base64,","");};const whenMounted=async({el,container,callback})=>{container||=document.querySelector(".render-container");container.innerHTML="";return await applyWhenMounted({el,container,callback});};return{toHtml,toCanvas,toJpeg,whenMounted};},};registry.category("services").add("renderer",renderService);const applyWhenMounted=async({el,container,callback})=>{const elClone=el.cloneNode(true);const sameClassElements=container.querySelectorAll(`.${[...el.classList].join(".")}`);sameClassElements.forEach((element)=>{element.remove();});container.appendChild(elClone);const res=await callback(elClone);return res;};const htmlToCanvas=__exports.htmlToCanvas=async(el,options)=>{if(options.addClass){el.classList.add(...options.addClass.split(" "));}
return await applyWhenMounted({el,container:document.querySelector(".render-container"),callback:async(el)=>{return toCanvas(el,{backgroundColor:"#ffffff",height:Math.ceil(el.clientHeight),width:Math.ceil(el.clientWidth),pixelRatio:1,});},});};return __exports;});;

/* /point_of_sale/static/src/app/screens/action_screen.js */
odoo.define('@point_of_sale/app/screens/action_screen',['@odoo/owl','@web/core/registry','@web/webclient/actions/action_container'],function(require){'use strict';let __exports={};const{Component,xml}=require("@odoo/owl");const{registry}=require("@web/core/registry");const{ActionContainer}=require("@web/webclient/actions/action_container");const ActionScreen=__exports.ActionScreen=class ActionScreen extends Component{static components={ActionContainer};static props={actionName:String,};static storeOnOrder=false;static template=xml`
        <div class="o_web_client">
            <ActionContainer/>
        </div>
    `;}
registry.category("pos_screens").add("ActionScreen",ActionScreen);return __exports;});;

/* /point_of_sale/static/src/app/screens/login_screen/login_screen.js */
odoo.define('@point_of_sale/app/screens/login_screen/login_screen',['@web/core/registry','@point_of_sale/app/store/pos_hook','@odoo/owl','@web/core/utils/hooks','@point_of_sale/app/utils/time_hook','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{usePos}=require("@point_of_sale/app/store/pos_hook");const{Component,useState}=require("@odoo/owl");const{useService}=require("@web/core/utils/hooks");const{useTime}=require("@point_of_sale/app/utils/time_hook");const{_t}=require("@web/core/l10n/translation");const LoginScreen=__exports.LoginScreen=class LoginScreen extends Component{static template="point_of_sale.LoginScreen";static props={};static storeOnOrder=false;setup(){this.pos=usePos();this.dialog=useService("dialog");this.ui=useState(useService("ui"));this.time=useTime();}
openRegister(){this.selectUser();}
selectUser(){this.selectOneCashier(this.pos.user);}
cashierLogIn(){const selectedScreen=this.pos.previousScreen&&this.pos.previousScreen!=="LoginScreen"?this.pos.previousScreen:this.pos.firstScreen;this.pos.showScreen(selectedScreen);this.pos.hasLoggedIn=true;}
selectOneCashier(cashier){this.pos.set_cashier(cashier);this.cashierLogIn();}
get backBtnName(){return _t("Backend");}
clickBack(){this.pos.closePos();}}
registry.category("pos_screens").add("LoginScreen",LoginScreen);return __exports;});;

/* /point_of_sale/static/src/app/screens/partner_list/partner_line/partner_line.js */
odoo.define('@point_of_sale/app/screens/partner_list/partner_line/partner_line',['@odoo/owl','@web/core/utils/hooks','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{useService}=require("@web/core/utils/hooks");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const PartnerLine=__exports.PartnerLine=class PartnerLine extends Component{static template="point_of_sale.PartnerLine";static components={Dropdown,DropdownItem};static props=["close","partner","isSelected","isBalanceDisplayed","onClickEdit","onClickUnselect","onClickPartner","onClickOrders",];setup(){this.ui=useService("ui");}}
return __exports;});;

/* /point_of_sale/static/src/app/screens/partner_list/partner_list.js */
odoo.define('@point_of_sale/app/screens/partner_list/partner_list',['@web/core/l10n/translation','@web/core/utils/hooks','@web/core/dialog/dialog','@point_of_sale/app/screens/partner_list/partner_line/partner_line','@point_of_sale/app/store/pos_hook','@point_of_sale/app/generic_components/inputs/input/input','@odoo/owl','@web/core/hotkeys/hotkey_hook','@web/core/utils/strings'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{useService}=require("@web/core/utils/hooks");const{Dialog}=require("@web/core/dialog/dialog");const{PartnerLine}=require("@point_of_sale/app/screens/partner_list/partner_line/partner_line");const{usePos}=require("@point_of_sale/app/store/pos_hook");const{Input}=require("@point_of_sale/app/generic_components/inputs/input/input");const{Component,useState}=require("@odoo/owl");const{useHotkey}=require("@web/core/hotkeys/hotkey_hook");const{unaccent}=require("@web/core/utils/strings");const PartnerList=__exports.PartnerList=class PartnerList extends Component{static components={PartnerLine,Dialog,Input};static template="point_of_sale.PartnerList";static props={partner:{optional:true,type:[{value:null},Object],},getPayload:{type:Function},close:{type:Function},};setup(){this.pos=usePos();this.ui=useState(useService("ui"));this.notification=useService("notification");this.dialog=useService("dialog");this.state=useState({query:null,previousQuery:"",currentOffset:0,});useHotkey("enter",()=>this.onEnter());}
async editPartner(p=false){const partner=await this.pos.editPartner(p);if(partner){this.clickPartner(partner);}}
async onEnter(){if(!this.state.query){return;}
const result=await this.searchPartner();if(result.length>0){this.notification.add(_t('%s customer(s) found for "%s".',result.length,this.state.query),3000);}else{this.notification.add(_t('No more customer found for "%s".',this.state.query));}}
goToOrders(partner){this.props.close();const partnerHasActiveOrders=this.pos.get_open_orders().some((order)=>order.partner?.id===partner.id);const stateOverride={search:{fieldName:"PARTNER",searchTerm:partner.name,},filter:partnerHasActiveOrders?"":"SYNCED",};this.pos.showScreen("TicketScreen",{stateOverride});}
confirm(){this.props.resolve({confirmed:true,payload:this.state.selectedPartner});this.pos.closeTempScreen();}
getPartners(){const searchWord=unaccent((this.state.query||"").trim(),false).toLowerCase();const partners=this.pos.models["res.partner"].getAll();const exactMatches=partners.filter((partner)=>partner.exactMatch(searchWord));if(exactMatches.length>0){return exactMatches;}
const availablePartners=searchWord?partners.filter((p)=>unaccent(p.searchString,false).toLowerCase().includes(searchWord)):partners.slice(0,1000).toSorted((a,b)=>this.props.partner?.id===a.id?-1:this.props.partner?.id===b.id?1:(a.name||"").localeCompare(b.name||""));return availablePartners;}
get isBalanceDisplayed(){return false;}
clickPartner(partner){this.props.getPayload(partner);this.props.close();}
async searchPartner(){if(this.state.previousQuery!=this.state.query){this.state.currentOffset=0;}
const partner=await this.getNewPartners();if(this.state.previousQuery==this.state.query){this.state.currentOffset+=partner.length;}else{this.state.previousQuery=this.state.query;this.state.currentOffset=partner.length;}
return partner;}
async getNewPartners(){let domain=[];const limit=30;if(this.state.query){const search_fields=["name","parent_name","phone_mobile_search","email","barcode","street","zip","city","state_id","country_id","vat",];domain=[...Array(search_fields.length-1).fill("|"),...search_fields.map((field)=>[field,"ilike",this.state.query+"%"]),];}
const result=await this.pos.data.searchRead("res.partner",domain,[],{limit:limit,offset:this.state.currentOffset,});return result;}}
return __exports;});;

/* /point_of_sale/static/src/app/screens/payment_screen/payment_lines/payment_lines.js */
odoo.define('@point_of_sale/app/screens/payment_screen/payment_lines/payment_lines',['@web/core/l10n/translation','@point_of_sale/app/utils/input_popups/number_popup','@web/core/utils/hooks','@odoo/owl','@point_of_sale/app/store/pos_hook','@web/views/fields/parsers','@point_of_sale/app/generic_components/numpad/numpad'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{NumberPopup}=require("@point_of_sale/app/utils/input_popups/number_popup");const{useService}=require("@web/core/utils/hooks");const{Component,useState}=require("@odoo/owl");const{usePos}=require("@point_of_sale/app/store/pos_hook");const{parseFloat}=require("@web/views/fields/parsers");const{enhancedButtons}=require("@point_of_sale/app/generic_components/numpad/numpad");const PaymentScreenPaymentLines=__exports.PaymentScreenPaymentLines=class PaymentScreenPaymentLines extends Component{static template="point_of_sale.PaymentScreenPaymentLines";static props={paymentLines:{type:Array,optional:true},deleteLine:Function,selectLine:Function,sendForceDone:Function,sendPaymentCancel:Function,sendPaymentRequest:Function,sendPaymentReverse:Function,updateSelectedPaymentline:Function,};setup(){this.ui=useState(useService("ui"));this.pos=usePos();this.dialog=useService("dialog");}
selectedLineClass(line){return{"payment-terminal":line.get_payment_status()};}
unselectedLineClass(line){return{};}
async selectLine(paymentline){this.props.selectLine(paymentline.uuid);if(this.ui.isSmall){this.dialog.add(NumberPopup,{title:_t("New amount"),buttons:enhancedButtons(),startingValue:this.env.utils.formatCurrency(paymentline.get_amount(),false),getPayload:(num)=>{this.props.updateSelectedPaymentline(parseFloat(num));},});}}}
return __exports;});;

/* /point_of_sale/static/src/app/screens/payment_screen/payment_screen.js */
odoo.define('@point_of_sale/app/screens/payment_screen/payment_screen',['@web/core/l10n/translation','@web/views/fields/parsers','@point_of_sale/app/utils/hooks','@web/core/registry','@web/core/utils/hooks','@web/core/confirmation_dialog/confirmation_dialog','@point_of_sale/app/utils/input_popups/number_popup','@point_of_sale/app/utils/date_picker_popup/date_picker_popup','@web/core/network/rpc','@point_of_sale/app/screens/payment_screen/payment_lines/payment_lines','@point_of_sale/app/screens/payment_screen/payment_status/payment_status','@point_of_sale/app/store/pos_hook','@odoo/owl','@point_of_sale/app/generic_components/numpad/numpad','@web/core/utils/numbers','@point_of_sale/app/store/make_awaitable_dialog','@point_of_sale/app/errors/error_handlers','@web/core/utils/strings','@web/core/l10n/dates'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{parseFloat}=require("@web/views/fields/parsers");const{useErrorHandlers,useAsyncLockedMethod}=require("@point_of_sale/app/utils/hooks");const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{AlertDialog,ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{NumberPopup}=require("@point_of_sale/app/utils/input_popups/number_popup");const{DatePickerPopup}=require("@point_of_sale/app/utils/date_picker_popup/date_picker_popup");const{ConnectionLostError,RPCError}=require("@web/core/network/rpc");const{PaymentScreenPaymentLines}=require("@point_of_sale/app/screens/payment_screen/payment_lines/payment_lines");const{PaymentScreenStatus}=require("@point_of_sale/app/screens/payment_screen/payment_status/payment_status");const{usePos}=require("@point_of_sale/app/store/pos_hook");const{Component,useState,onMounted}=require("@odoo/owl");const{Numpad,enhancedButtons}=require("@point_of_sale/app/generic_components/numpad/numpad");const{floatIsZero,roundPrecision}=require("@web/core/utils/numbers");const{ask}=require("@point_of_sale/app/store/make_awaitable_dialog");const{handleRPCError}=require("@point_of_sale/app/errors/error_handlers");const{sprintf}=require("@web/core/utils/strings");const{serializeDateTime}=require("@web/core/l10n/dates");const PaymentScreen=__exports.PaymentScreen=class PaymentScreen extends Component{static template="point_of_sale.PaymentScreen";static components={Numpad,PaymentScreenPaymentLines,PaymentScreenStatus,};static props={orderUuid:String,};setup(){this.pos=usePos();this.ui=useState(useService("ui"));this.dialog=useService("dialog");this.invoiceService=useService("account_move");this.notification=useService("notification");this.hardwareProxy=useService("hardware_proxy");this.printer=useService("printer");this.payment_methods_from_config=this.pos.config.payment_method_ids.slice().sort((a,b)=>a.sequence-b.sequence);this.numberBuffer=useService("number_buffer");this.numberBuffer.use(this._getNumberBufferConfig);useErrorHandlers();this.payment_interface=null;this.error=false;this.validateOrder=useAsyncLockedMethod(this.validateOrder);onMounted(this.onMounted);}
onMounted(){const order=this.pos.get_order();this.pos.addPendingOrder([order.id]);for(const payment of order.payment_ids){const pmid=payment.payment_method_id.id;if(!this.pos.config.payment_method_ids.map((pm)=>pm.id).includes(pmid)){payment.delete({backend:true});}}
if(this.payment_methods_from_config.length==1&&this.paymentLines.length==0){this.addNewPaymentLine(this.payment_methods_from_config[0]);}}
getNumpadButtons(){const colorClassMap={[this.env.services.localization.decimalPoint]:"o_colorlist_item_color_transparent_6",Backspace:"o_colorlist_item_color_transparent_1","+10":"o_colorlist_item_color_transparent_10","+20":"o_colorlist_item_color_transparent_10","+50":"o_colorlist_item_color_transparent_10","-":"o_colorlist_item_color_transparent_3",};return enhancedButtons().map((button)=>({...button,class:`${colorClassMap[button.value] || ""}`,}));}
showMaxValueError(){this.dialog.add(AlertDialog,{title:_t("Maximum value reached"),body:_t("The amount cannot be higher than the due amount if you don't have a cash payment method configured."),});}
get _getNumberBufferConfig(){const config={triggerAtInput:()=>this.updateSelectedPaymentline(),useWithBarcode:true,};return config;}
get currentOrder(){return this.pos.models["pos.order"].getBy("uuid",this.props.orderUuid);}
get paymentLines(){return this.currentOrder.payment_ids;}
get selectedPaymentLine(){return this.currentOrder.get_selected_paymentline();}
async addNewPaymentLine(paymentMethod){if(paymentMethod.type==="pay_later"&&(!this.currentOrder.to_invoice||this.pos.models["ir.module.module"].find((m)=>m.name==="pos_settle_due")?.state!=="installed")){this.notification.add(_t("To ensure due balance follow-up, generate an invoice or download the accounting application. "),{autocloseDelay:7000,title:_t("Warning")});}
if(this.pos.paymentTerminalInProgress&&paymentMethod.use_payment_terminal){this.dialog.add(AlertDialog,{title:_t("Error"),body:_t("There is already an electronic payment in progress."),});return;}
const result=this.currentOrder.add_paymentline(paymentMethod);if(!this.check_cash_rounding_has_been_well_applied()){return;}
if(result){this.numberBuffer.reset();if(paymentMethod.use_payment_terminal){const newPaymentLine=this.paymentLines.at(-1);this.sendPaymentRequest(newPaymentLine);}
return true;}else{this.dialog.add(AlertDialog,{title:_t("Error"),body:_t("There is already an electronic payment in progress."),});return false;}}
updateSelectedPaymentline(amount=false){if(this.paymentLines.every((line)=>line.paid)){this.currentOrder.add_paymentline(this.payment_methods_from_config[0]);}
if(!this.selectedPaymentLine){return;}
if(amount===false){if(this.numberBuffer.get()===null){amount=null;}else if(this.numberBuffer.get()===""){amount=0;}else{amount=this.numberBuffer.getFloat();}}
const payment_terminal=this.selectedPaymentLine.payment_method_id.payment_terminal;const hasCashPaymentMethod=this.payment_methods_from_config.some((method)=>method.type==="cash");if(!hasCashPaymentMethod&&amount>this.currentOrder.get_due()+this.selectedPaymentLine.amount){this.selectedPaymentLine.set_amount(0);this.numberBuffer.set(this.currentOrder.get_due().toString());amount=this.currentOrder.get_due();this.showMaxValueError();}
if(payment_terminal&&!["pending","retry"].includes(this.selectedPaymentLine.get_payment_status())){return;}
if(amount===null){this.deletePaymentLine(this.selectedPaymentLine.uuid);}else{this.selectedPaymentLine.set_amount(amount);}}
toggleIsToInvoice(){this.currentOrder.set_to_invoice(!this.currentOrder.is_to_invoice());}
openCashbox(){this.hardwareProxy.openCashbox();}
async addTip(){const tip=this.currentOrder.get_tip();const change=this.currentOrder.get_change();const value=tip===0&&change>0?change:tip;this.dialog.add(NumberPopup,{title:tip?_t("Change Tip"):_t("Add Tip"),startingValue:this.env.utils.formatCurrency(value,false),formatDisplayedValue:(x)=>`${this.pos.currency.symbol} ${x}`,getPayload:async(num)=>{await this.pos.set_tip(parseFloat(num??""));},});}
async toggleShippingDatePicker(){if(!this.currentOrder.getShippingDate()){this.dialog.add(DatePickerPopup,{title:_t("Select the shipping date"),getPayload:(shippingDate)=>{this.currentOrder.setShippingDate(shippingDate);},});}else{this.currentOrder.setShippingDate(false);}}
deletePaymentLine(uuid){const line=this.paymentLines.find((line)=>line.uuid===uuid);if(line.payment_method_id.payment_method_type==="qr_code"){this.currentOrder.remove_paymentline(line);this.numberBuffer.reset();return;}
if(["waiting","waitingCard","timeout"].includes(line.get_payment_status())){line.set_payment_status("waitingCancel");line.payment_method_id.payment_terminal.send_payment_cancel(this.currentOrder,uuid).then(()=>{this.currentOrder.remove_paymentline(line);this.numberBuffer.reset();});}else if(line.get_payment_status()!=="waitingCancel"){this.currentOrder.remove_paymentline(line);this.numberBuffer.reset();}}
selectPaymentLine(uuid){const line=this.paymentLines.find((line)=>line.uuid===uuid);this.currentOrder.select_paymentline(line);this.numberBuffer.reset();}
async validateOrder(isForceValidate){this.numberBuffer.capture();if(!this.check_cash_rounding_has_been_well_applied()){return;}
const linesToRemove=this.currentOrder.lines.filter((line)=>{const rounding=line.product_id.uom_id.rounding;const decimals=Math.max(0,Math.ceil(-Math.log10(rounding)));return floatIsZero(line.qty,decimals);});for(const line of linesToRemove){this.currentOrder.removeOrderline(line);}
if(await this._isOrderValid(isForceValidate)){const toRemove=[];for(const line of this.paymentLines){if(!line.is_done()||line.amount===0){toRemove.push(line);}}
for(const line of toRemove){this.currentOrder.remove_paymentline(line);}
await this._finalizeValidation();}}
async _finalizeValidation(){if(this.currentOrder.is_paid_with_cash()||this.currentOrder.get_change()){this.hardwareProxy.openCashbox();}
this.currentOrder.date_order=serializeDateTime(luxon.DateTime.now());for(const line of this.paymentLines){if(!line.amount===0){this.currentOrder.remove_paymentline(line);}}
this.pos.addPendingOrder([this.currentOrder.id]);this.currentOrder.state="paid";this.env.services.ui.block();let syncOrderResult;try{syncOrderResult=await this.pos.syncAllOrders({throw:true});if(!syncOrderResult){return;}
if(this.shouldDownloadInvoice()&&this.currentOrder.is_to_invoice()){if(this.currentOrder.raw.account_move){await this.invoiceService.downloadPdf(this.currentOrder.raw.account_move);}else{throw{code:401,message:"Backend Invoice",data:{order:this.currentOrder},};}}}catch(error){if(error instanceof ConnectionLostError){this.pos.showScreen(this.nextScreen);Promise.reject(error);}else if(error instanceof RPCError){this.currentOrder.state="draft";handleRPCError(error,this.dialog);}else{throw error;}
return error;}finally{this.env.services.ui.unblock();}
const postPushOrders=syncOrderResult.filter((order)=>order.wait_for_push_order());if(postPushOrders.length>0){await this.postPushOrderResolve(postPushOrders.map((order)=>order.id));}
await this.afterOrderValidation(!!syncOrderResult&&syncOrderResult.length>0);}
async postPushOrderResolve(ordersServerId){const postPushResult=await this._postPushOrderResolve(this.currentOrder,ordersServerId);if(!postPushResult){this.dialog.add(AlertDialog,{title:_t("Error: no internet connection."),body:_t("Some, if not all, post-processing after syncing order failed."),});}}
async afterOrderValidation(){let nextScreen=this.nextScreen;let switchScreen=false;if(nextScreen==="ReceiptScreen"&&this.currentOrder.nb_print===0&&this.pos.config.iface_print_auto){const invoiced_finalized=this.currentOrder.is_to_invoice()?this.currentOrder.finalized:true;if(invoiced_finalized){this.pos.printReceipt(this.currentOrder);if(this.pos.config.iface_print_skip_screen){this.currentOrder.set_screen_data({name:""});this.currentOrder.uiState.locked=true;switchScreen=this.currentOrder.uuid===this.pos.selectedOrderUuid;nextScreen="ProductScreen";if(switchScreen){this.selectNextOrder();}}}}else{switchScreen=true;}
if(switchScreen){this.pos.showScreen(nextScreen);}}
selectNextOrder(){if(this.currentOrder.originalSplittedOrder){this.pos.selectedOrderUuid=this.currentOrder.originalSplittedOrder.uuid;}else{this.pos.add_new_order();}}
shouldDownloadInvoice(){return true;}
get nextScreen(){return!this.error?"ReceiptScreen":"ProductScreen";}
paymentMethodImage(id){if(this.paymentMethod.image){return`/web/image/pos.payment.method/${id}/image`;}else if(this.paymentMethod.type==="cash"){return"/point_of_sale/static/src/img/money.png";}else if(this.paymentMethod.type==="pay_later"){return"/point_of_sale/static/src/img/pay-later.png";}else{return"/point_of_sale/static/src/img/card-bank.png";}}
async _askForCustomerIfRequired(){const splitPayments=this.paymentLines.filter((payment)=>payment.payment_method_id.split_transactions);if(splitPayments.length&&!this.currentOrder.get_partner()){const paymentMethod=splitPayments[0].payment_method_id;const confirmed=await ask(this.dialog,{title:_t("Customer Required"),body:_t("Customer is required for %s payment method.",paymentMethod.name),});if(confirmed){this.pos.selectPartner();}
return false;}}
async _isOrderValid(isForceValidate){if(this.currentOrder.get_orderlines().length===0&&this.currentOrder.is_to_invoice()){this.dialog.add(AlertDialog,{title:_t("Empty Order"),body:_t("There must be at least one product in your order before it can be validated and invoiced."),});return false;}
if((await this._askForCustomerIfRequired())===false){return false;}
if((this.currentOrder.is_to_invoice()||this.currentOrder.getShippingDate())&&!this.currentOrder.get_partner()){const confirmed=await ask(this.dialog,{title:_t("Please select the Customer"),body:_t("You need to select the customer before you can invoice or ship an order."),});if(confirmed){this.pos.selectPartner();}
return false;}
const partner=this.currentOrder.get_partner();if(this.currentOrder.getShippingDate()&&!(partner.name&&partner.street&&partner.city&&partner.country_id)){this.dialog.add(AlertDialog,{title:_t("Incorrect address for shipping"),body:_t("The selected customer needs an address."),});return false;}
if(!floatIsZero(this.currentOrder.get_total_with_tax(),this.pos.currency.decimal_places)&&this.currentOrder.payment_ids.length===0){this.notification.add(_t("Select a payment method to validate the order."));return false;}
if(!this.currentOrder.is_paid()||this.invoicing){return false;}
if(Math.abs(this.currentOrder.get_total_with_tax()-
this.currentOrder.get_total_paid()+
this.currentOrder.get_rounding_applied())>0.00001){if(!this.pos.models["pos.payment.method"].some((pm)=>pm.is_cash_count)){this.dialog.add(AlertDialog,{title:_t("Cannot return change without a cash payment method"),body:_t("There is no cash payment method available in this point of sale to handle the change.\n\n Please pay the exact amount or add a cash payment method in the point of sale configuration"),});return false;}}
if(!isForceValidate&&this.currentOrder.get_total_with_tax()>0&&this.currentOrder.get_total_with_tax()*1000<this.currentOrder.get_total_paid()){this.dialog.add(ConfirmationDialog,{title:_t("Please Confirm Large Amount"),body:_t("Are you sure that the customer wants to  pay")+" "+
this.env.utils.formatCurrency(this.currentOrder.get_total_paid())+" "+
_t("for an order of")+" "+
this.env.utils.formatCurrency(this.currentOrder.get_total_with_tax())+" "+
_t('? Clicking "Confirm" will validate the payment.'),confirm:()=>this.validateOrder(true),});return false;}
if(!this.currentOrder._isValidEmptyOrder()){return false;}
return true;}
async _postPushOrderResolve(order,order_server_ids){return true;}
async sendPaymentRequest(line){this.pos.paymentTerminalInProgress=true;this.numberBuffer.capture();this.paymentLines.forEach(function(line){line.can_be_reversed=false;});let isPaymentSuccessful=false;if(line.payment_method_id.payment_method_type==="qr_code"){const resp=await this.pos.showQR(line);isPaymentSuccessful=line.handle_payment_response(resp);}else{isPaymentSuccessful=await line.pay();}
this.pos.paymentTerminalInProgress=false;const config=this.pos.config;const currency=this.pos.currency;const currentOrder=line.pos_order_id;if(isPaymentSuccessful&&currentOrder.is_paid()&&floatIsZero(currentOrder.get_due(),currency.decimal_places)&&config.auto_validate_terminal_payment){this.validateOrder(false);}}
async sendPaymentCancel(line){const payment_terminal=line.payment_method_id.payment_terminal;line.set_payment_status("waitingCancel");const isCancelSuccessful=await payment_terminal.send_payment_cancel(this.currentOrder,line.uuid);if(isCancelSuccessful){line.set_payment_status("retry");this.pos.paymentTerminalInProgress=false;}else{line.set_payment_status("waitingCard");}}
async sendPaymentReverse(line){const payment_terminal=line.payment_method_id.payment_terminal;line.set_payment_status("reversing");const isReversalSuccessful=await payment_terminal.send_payment_reversal(line.uuid);if(isReversalSuccessful){line.set_amount(0);line.set_payment_status("reversed");}else{line.can_be_reversed=false;line.set_payment_status("done");}}
async sendForceDone(line){line.set_payment_status("done");}
check_cash_rounding_has_been_well_applied(){const cashRounding=this.pos.config.rounding_method;if(!cashRounding){return true;}
const order=this.pos.get_order();const currency=this.pos.currency;for(const payment of order.payment_ids){if(!payment.payment_method_id.is_cash_count){continue;}
const amountPaid=payment.get_amount();const expectedAmountPaid=roundPrecision(amountPaid,cashRounding.rounding,cashRounding.rounding_method);if(floatIsZero(expectedAmountPaid-amountPaid,currency.decimal_places)){continue;}
this.dialog.add(AlertDialog,{title:_t("Rounding error in payment lines"),body:sprintf(_t("The amount of your payment lines must be rounded to validate the transaction.\n"+"The rounding precision is %s so you should set %s as payment amount instead of %s."),cashRounding.rounding.toFixed(this.pos.currency.decimal_places),expectedAmountPaid.toFixed(this.pos.currency.decimal_places),amountPaid.toFixed(this.pos.currency.decimal_places)),});return false;}
return true;}}
registry.category("pos_screens").add("PaymentScreen",PaymentScreen);return __exports;});;

/* /point_of_sale/static/src/app/screens/payment_screen/payment_status/payment_status.js */
odoo.define('@point_of_sale/app/screens/payment_screen/payment_status/payment_status',['@odoo/owl'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const PaymentScreenStatus=__exports.PaymentScreenStatus=class PaymentScreenStatus extends Component{static template="point_of_sale.PaymentScreenStatus";static props={order:Object,};get changeText(){return this.env.utils.formatCurrency(this.props.order.get_change());}
get remainingText(){const{order_has_zero_remaining,order_remaining,order_sign}=this.props.order.taxTotals;if(order_has_zero_remaining){return this.env.utils.formatCurrency(0);}
return this.env.utils.formatCurrency(order_sign*order_remaining);}}
return __exports;});;

/* /point_of_sale/static/src/app/screens/product_screen/action_pad/action_pad.js */
odoo.define('@point_of_sale/app/screens/product_screen/action_pad/action_pad',['@point_of_sale/app/store/pos_hook','@odoo/owl','@point_of_sale/app/screens/product_screen/control_buttons/select_partner_button/select_partner_button','@web/core/utils/hooks','@point_of_sale/app/screens/product_screen/action_pad/back_button/back_button'],function(require){'use strict';let __exports={};const{usePos}=require("@point_of_sale/app/store/pos_hook");const{Component,useState}=require("@odoo/owl");const{SelectPartnerButton}=require("@point_of_sale/app/screens/product_screen/control_buttons/select_partner_button/select_partner_button");const{useService}=require("@web/core/utils/hooks");const{BackButton}=require("@point_of_sale/app/screens/product_screen/action_pad/back_button/back_button");const ActionpadWidget=__exports.ActionpadWidget=class ActionpadWidget extends Component{static template="point_of_sale.ActionpadWidget";static components={SelectPartnerButton,BackButton};static props={partner:{type:[Object,{value:null}],optional:true},onClickMore:{type:Function,optional:true},actionName:String,actionToTrigger:Function,showActionButton:{type:Boolean,optional:true},};static defaultProps={showActionButton:true,};setup(){this.pos=usePos();this.ui=useState(useService("ui"));}}
return __exports;});;

/* /point_of_sale/static/src/app/screens/product_screen/action_pad/back_button/back_button.js */
odoo.define('@point_of_sale/app/screens/product_screen/action_pad/back_button/back_button',['@odoo/owl'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const BackButton=__exports.BackButton=class BackButton extends Component{static template="point_of_sale.BackButton";static props={onClick:{type:Function},};}
return __exports;});;

/* /point_of_sale/static/src/app/screens/product_screen/camera_barcode_scanner.js */
odoo.define('@point_of_sale/app/screens/product_screen/camera_barcode_scanner',['@web/core/utils/hooks','@web/core/barcode/barcode_video_scanner'],function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{BarcodeVideoScanner}=require("@web/core/barcode/barcode_video_scanner");const CameraBarcodeScanner=__exports.CameraBarcodeScanner=class CameraBarcodeScanner extends BarcodeVideoScanner{static props=[];setup(){super.setup();this.barcodeScanner=useService("barcode_reader");this.sound=useService("mail.sound_effects");this.props={...this.props,facingMode:"environment",onResult:(result)=>this.onResult(result),onError:console.error,delayBetweenScan:2000,};}
onResult(result){this.barcodeScanner.scan(result);this.sound.play("beep");}}
return __exports;});;

/* /point_of_sale/static/src/app/screens/product_screen/control_buttons/control_buttons.js */
odoo.define('@point_of_sale/app/screens/product_screen/control_buttons/control_buttons',['@odoo/owl','@web/core/utils/hooks','@web/core/dialog/dialog','@point_of_sale/app/utils/input_popups/selection_popup','@point_of_sale/app/screens/product_screen/control_buttons/customer_note_button/customer_note_button','@point_of_sale/app/store/pos_hook','@web/core/l10n/translation','@point_of_sale/app/store/make_awaitable_dialog','@point_of_sale/app/screens/product_screen/control_buttons/select_partner_button/select_partner_button'],function(require){'use strict';let __exports={};const{Component,useState,xml}=require("@odoo/owl");const{useService}=require("@web/core/utils/hooks");const{Dialog}=require("@web/core/dialog/dialog");const{SelectionPopup}=require("@point_of_sale/app/utils/input_popups/selection_popup");const{OrderlineNoteButton}=require("@point_of_sale/app/screens/product_screen/control_buttons/customer_note_button/customer_note_button");const{usePos}=require("@point_of_sale/app/store/pos_hook");const{_t}=require("@web/core/l10n/translation");const{makeAwaitable}=require("@point_of_sale/app/store/make_awaitable_dialog");const{SelectPartnerButton}=require("@point_of_sale/app/screens/product_screen/control_buttons/select_partner_button/select_partner_button");const ControlButtons=__exports.ControlButtons=class ControlButtons extends Component{static template="point_of_sale.ControlButtons";static components={OrderlineNoteButton,SelectPartnerButton};static props={showRemainingButtons:{type:Boolean,optional:true},onClickMore:{type:Function,optional:true},close:{type:Function,optional:true},};static defaultProps={showRemainingButtons:false,};setup(){this.pos=usePos();this.ui=useState(useService("ui"));this.dialog=useService("dialog");this.notification=useService("notification");}
get partner(){return this.pos.get_order()?.get_partner();}
get currentOrder(){return this.pos.get_order();}
async clickFiscalPosition(){const currentFiscalPosition=this.currentOrder.fiscal_position_id;const fiscalPosList=[{id:-1,label:this.pos.config.module_pos_restaurant?_t("Dine in"):_t("Original Tax"),isSelected:false,item:"none",},];for(const fiscalPos of this.pos.models["account.fiscal.position"].getAll()){fiscalPosList.push({id:fiscalPos.id,label:fiscalPos.name,isSelected:currentFiscalPosition?fiscalPos.id===currentFiscalPosition.id:false,item:fiscalPos,});}
const selectedFiscalPosition=await makeAwaitable(this.dialog,SelectionPopup,{list:fiscalPosList,title:_t("Please register the voucher number"),});if(!selectedFiscalPosition){return;}
if(selectedFiscalPosition==="none"){this.currentOrder.update({fiscal_position_id:false,});return;}
this.currentOrder.update({fiscal_position_id:selectedFiscalPosition?selectedFiscalPosition.id:false,});}
async clickPricelist(){const selectionList=this.pos.models["product.pricelist"].map((pricelist)=>({id:pricelist.id,label:pricelist.name,isSelected:this.currentOrder.pricelist_id&&pricelist.id===this.currentOrder.pricelist_id.id,item:pricelist,}));if(!this.pos.config.pricelist_id){selectionList.push({id:null,label:_t("Default Price"),isSelected:!this.currentOrder.pricelist_id,item:null,});}
const payload=await makeAwaitable(this.dialog,SelectionPopup,{title:_t("Select the pricelist"),list:selectionList,});if(payload){this.pos.selectPricelist(payload);}}
clickRefund(){const order=this.pos.get_order();const partner=order.get_partner();const searchDetails=partner?{fieldName:"PARTNER",searchTerm:partner.name}:{};this.pos.showScreen("TicketScreen",{stateOverride:{filter:"SYNCED",search:searchDetails,destinationOrder:order,},});}
internalNoteLabel(order){if(order){return _t("General Note");}
return this.pos.config.module_pos_restaurant?_t("Kitchen Note"):_t("Internal Note");}
get buttonClass(){return this.props.showRemainingButtons?"btn btn-secondary btn-lg py-5":"btn btn-light btn-lg lh-lg";}}
const ControlButtonsPopup=__exports.ControlButtonsPopup=class ControlButtonsPopup extends Component{static components={Dialog,ControlButtons};static template=xml`
        <Dialog bodyClass="'d-flex flex-column'" footer="false" title="'Actions'" t-on-click="props.close">
            <ControlButtons showRemainingButtons="true" close="props.close"/>
        </Dialog>
    `;static props={close:Function,};}
return __exports;});;

/* /point_of_sale/static/src/app/screens/product_screen/control_buttons/customer_note_button/customer_note_button.js */
odoo.define('@point_of_sale/app/screens/product_screen/control_buttons/customer_note_button/customer_note_button',['@web/core/l10n/translation','@odoo/owl','@point_of_sale/app/store/pos_hook','@point_of_sale/app/utils/input_popups/text_input_popup','@web/core/utils/hooks','@point_of_sale/app/store/make_awaitable_dialog'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{Component}=require("@odoo/owl");const{usePos}=require("@point_of_sale/app/store/pos_hook");const{TextInputPopup}=require("@point_of_sale/app/utils/input_popups/text_input_popup");const{useService}=require("@web/core/utils/hooks");const{makeAwaitable}=require("@point_of_sale/app/store/make_awaitable_dialog");const OrderlineNoteButton=__exports.OrderlineNoteButton=class OrderlineNoteButton extends Component{static template="point_of_sale.OrderlineNoteButton";static props={icon:{type:String,optional:true},label:{type:String,optional:true},getter:{type:Function,optional:true},setter:{type:Function,optional:true},class:{type:String,optional:true},};static defaultProps={label:_t("Customer Note"),getter:(orderline)=>orderline.get_customer_note(),setter:(orderline,note)=>orderline.set_customer_note(note),class:"",};setup(){this.pos=usePos();this.dialog=useService("dialog");}
onClick(){return this.props.label==_t("General Note")?this.addGeneralNote():this.addLineNotes();}
async addLineNotes(){const selectedOrderline=this.pos.get_order().get_selected_orderline();const selectedNote=this.props.getter(selectedOrderline);const oldNote=selectedOrderline.getNote();const payload=await this.openTextInput(selectedNote);var quantity_with_note=0;const changes=this.pos.getOrderChanges();for(const key in changes.orderlines){if(changes.orderlines[key].uuid==selectedOrderline.uuid){quantity_with_note=changes.orderlines[key].quantity;break;}}
const saved_quantity=selectedOrderline.qty-quantity_with_note;if(saved_quantity>0&&quantity_with_note>0){await this.pos.addLineToCurrentOrder({product_id:selectedOrderline.product_id,qty:quantity_with_note,note:payload,});selectedOrderline.qty=saved_quantity;}else{this.props.setter(selectedOrderline,payload);}
return{confirmed:typeof payload==="string",inputNote:payload,oldNote};}
async addGeneralNote(){const selectedOrder=this.pos.get_order();const selectedNote=selectedOrder.general_note||"";const payload=await this.openTextInput(selectedNote);selectedOrder.general_note=payload;return{confirmed:typeof payload==="string",inputNote:payload};}
async openTextInput(selectedNote){let buttons=[];if(this._isInternalNote()||this.props.label==_t("General Note")){buttons=this.pos.models["pos.note"].getAll().map((note)=>({label:note.name,isSelected:selectedNote.split("\n").includes(note.name),}));}
return await makeAwaitable(this.dialog,TextInputPopup,{title:_t("Add %s",this.props.label),buttons,rows:4,startingValue:selectedNote,});}
_isInternalNote(){if(this.pos.config.module_pos_restaurant){return this.props.label==_t("Kitchen Note");}
return this.props.label==_t("Internal Note");}}
return __exports;});;

/* /point_of_sale/static/src/app/screens/product_screen/control_buttons/select_partner_button/select_partner_button.js */
odoo.define('@point_of_sale/app/screens/product_screen/control_buttons/select_partner_button/select_partner_button',['@odoo/owl','@point_of_sale/app/store/pos_hook','@web/core/utils/hooks'],function(require){'use strict';let __exports={};const{Component,useState}=require("@odoo/owl");const{usePos}=require("@point_of_sale/app/store/pos_hook");const{useService}=require("@web/core/utils/hooks");const SelectPartnerButton=__exports.SelectPartnerButton=class SelectPartnerButton extends Component{static template="point_of_sale.SelectPartnerButton";static props=["partner?"];setup(){this.pos=usePos();this.ui=useState(useService("ui"));}}
return __exports;});;

/* /point_of_sale/static/src/app/screens/product_screen/order_summary/order_summary.js */
odoo.define('@point_of_sale/app/screens/product_screen/order_summary/order_summary',['@point_of_sale/app/store/pos_hook','@odoo/owl','@point_of_sale/app/generic_components/orderline/orderline','@point_of_sale/app/generic_components/order_widget/order_widget','@web/core/utils/hooks','@web/core/confirmation_dialog/confirmation_dialog','@web/core/l10n/translation','@point_of_sale/app/store/make_awaitable_dialog','@point_of_sale/app/utils/input_popups/number_popup','@web/views/fields/parsers'],function(require){'use strict';let __exports={};const{usePos}=require("@point_of_sale/app/store/pos_hook");const{Component}=require("@odoo/owl");const{Orderline}=require("@point_of_sale/app/generic_components/orderline/orderline");const{OrderWidget}=require("@point_of_sale/app/generic_components/order_widget/order_widget");const{useService}=require("@web/core/utils/hooks");const{AlertDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{_t}=require("@web/core/l10n/translation");const{makeAwaitable}=require("@point_of_sale/app/store/make_awaitable_dialog");const{NumberPopup}=require("@point_of_sale/app/utils/input_popups/number_popup");const{parseFloat}=require("@web/views/fields/parsers");const OrderSummary=__exports.OrderSummary=class OrderSummary extends Component{static template="point_of_sale.OrderSummary";static components={Orderline,OrderWidget,};static props={};setup(){super.setup();this.numberBuffer=useService("number_buffer");this.dialog=useService("dialog");this.pos=usePos();this.numberBuffer.use({triggerAtInput:(...args)=>this.updateSelectedOrderline(...args),useWithBarcode:true,});}
get currentOrder(){return this.pos.get_order();}
async editPackLotLines(line){const isAllowOnlyOneLot=line.product_id.isAllowOnlyOneLot();const editedPackLotLines=await this.pos.editLots(line.product_id,line.getPackLotLinesToEdit(isAllowOnlyOneLot));line.editPackLotLines(editedPackLotLines);}
clickLine(ev,orderline){if(ev.detail===2){clearTimeout(this.singleClick);return;}
this.numberBuffer.reset();if(!orderline.isSelected()){this.pos.selectOrderLine(this.currentOrder,orderline);}else{this.singleClick=setTimeout(()=>{this.pos.get_order().uiState.selected_orderline_uuid=null;},300);}}
async updateSelectedOrderline({buffer,key}){const order=this.pos.get_order();const selectedLine=order.get_selected_orderline();if(buffer==="-0"&&key=="-"){if(this.pos.numpadMode==="quantity"&&!selectedLine.refunded_orderline_id){buffer=selectedLine.get_quantity()*-1;}else if(this.pos.numpadMode==="discount"){buffer=selectedLine.get_discount()*-1;}else if(this.pos.numpadMode==="price"){buffer=selectedLine.get_unit_price()*-1;}
this.numberBuffer.state.buffer=buffer.toString();}
if(selectedLine&&selectedLine.isTipLine()&&this.pos.numpadMode!=="price"){this.numberBuffer.reset();if(key==="Backspace"){this._setValue("remove");}else{this.dialog.add(AlertDialog,{title:_t("Cannot modify a tip"),body:_t("Customer tips, cannot be modified directly"),});}
return;}
if(selectedLine&&this.pos.numpadMode==="quantity"&&this.pos.disallowLineQuantityChange()){const orderlines=order.lines;const lastId=orderlines.length!==0&&orderlines.at(orderlines.length-1).uuid;const currentQuantity=this.pos.get_order().get_selected_orderline().get_quantity();if(selectedLine.noDecrease){this.dialog.add(AlertDialog,{title:_t("Invalid action"),body:_t("You are not allowed to change this quantity"),});return;}
const parsedInput=(buffer&&parseFloat(buffer))||0;if(lastId!=selectedLine.uuid){this._showDecreaseQuantityPopup();}else if(currentQuantity<parsedInput){this._setValue(buffer);}else if(parsedInput<currentQuantity){this._showDecreaseQuantityPopup();}
return;}else if(selectedLine&&this.pos.numpadMode==="discount"&&this.pos.restrictLineDiscountChange()){this.numberBuffer.reset();const inputNumber=await makeAwaitable(this.dialog,NumberPopup,{startingValue:selectedLine.get_discount()||10,title:_t("Set the new discount"),});if(inputNumber){await this.pos.setDiscountFromUI(selectedLine,inputNumber);}
return;}else if(selectedLine&&this.pos.numpadMode==="price"&&this.pos.restrictLinePriceChange()){this.numberBuffer.reset();const inputNumber=await makeAwaitable(this.dialog,NumberPopup,{startingValue:selectedLine.get_unit_price(),title:_t("Set the new price"),});if(inputNumber){await this.setLinePrice(selectedLine,inputNumber);}
return;}
const val=buffer===null?"remove":buffer;this._setValue(val);if(val=="remove"){this.numberBuffer.reset();this.pos.numpadMode="quantity";}}
_setValue(val){const{numpadMode}=this.pos;let selectedLine=this.currentOrder.get_selected_orderline();if(selectedLine){if(numpadMode==="quantity"){if(selectedLine.combo_parent_id){selectedLine=selectedLine.combo_parent_id;}
if(val==="remove"){this.currentOrder.removeOrderline(selectedLine);}else{const result=selectedLine.set_quantity(val,Boolean(selectedLine.combo_line_ids?.length));for(const line of selectedLine.combo_line_ids){line.set_quantity(val,true);}
if(result!==true){this.dialog.add(AlertDialog,result);this.numberBuffer.reset();}}}else if(numpadMode==="discount"&&val!=="remove"){this.pos.setDiscountFromUI(selectedLine,val);}else if(numpadMode==="price"&&val!=="remove"){this.setLinePrice(selectedLine,val);}}}
async setLinePrice(line,price){line.price_type="manual";line.set_unit_price(price);}
async _showDecreaseQuantityPopup(){this.numberBuffer.reset();const inputNumber=await makeAwaitable(this.dialog,NumberPopup,{title:_t("Set the new quantity"),});if(inputNumber){const newQuantity=inputNumber&&inputNumber!==""?parseFloat(inputNumber):null;return await this.updateQuantityNumber(newQuantity);}}
async updateQuantityNumber(newQuantity){if(newQuantity!==null){const selectedLine=this.currentOrder.get_selected_orderline();const currentQuantity=selectedLine.get_quantity();if(newQuantity>=currentQuantity){selectedLine.set_quantity(newQuantity);}else if(newQuantity>=selectedLine.saved_quantity){await this.handleDecreaseUnsavedLine(newQuantity);}else{await this.handleDecreaseLine(newQuantity);}
return true;}
return false;}
async handleDecreaseUnsavedLine(newQuantity){const selectedLine=this.currentOrder.get_selected_orderline();const decreaseQuantity=selectedLine.get_quantity()-newQuantity;selectedLine.set_quantity(newQuantity);if(newQuantity==0){selectedLine.delete();}
return decreaseQuantity;}
async handleDecreaseLine(newQuantity){const selectedLine=this.currentOrder.get_selected_orderline();let current_saved_quantity=0;for(const line of this.currentOrder.lines){if(line===selectedLine){current_saved_quantity+=line.saved_quantity;}else if(line.product_id.id===selectedLine.product_id.id&&line.get_unit_price()===selectedLine.get_unit_price()){current_saved_quantity+=line.qty;}}
const newLine=this.getNewLine();const decreasedQuantity=current_saved_quantity-newQuantity;if(decreasedQuantity!=0){newLine.set_quantity(-decreasedQuantity+newLine.get_quantity(),true);}
if(newLine!==selectedLine&&selectedLine.saved_quantity!=0){selectedLine.set_quantity(selectedLine.saved_quantity);}
return decreasedQuantity;}
getNewLine(){const selectedLine=this.currentOrder.get_selected_orderline();const sign=selectedLine.get_quantity()>0?1:-1;let newLine=selectedLine;if(selectedLine.saved_quantity!=0){for(const line of selectedLine.order_id.lines){if(line.product_id.id===selectedLine.product_id.id&&line.get_unit_price()===selectedLine.get_unit_price()&&line.get_quantity()*sign<0&&line!==selectedLine){return line;}}
const data=selectedLine.serialize();delete data.uuid;newLine=this.pos.models["pos.order.line"].create({...data,refunded_orderline_id:selectedLine.refunded_orderline_id,},false,true);newLine.set_quantity(0);}
return newLine;}}
return __exports;});;

/* /point_of_sale/static/src/app/screens/product_screen/product_info_popup/product_info_popup.js */
odoo.define('@point_of_sale/app/screens/product_screen/product_info_popup/product_info_popup',['@web/core/dialog/dialog','@point_of_sale/app/store/pos_hook','@odoo/owl','@point_of_sale/app/components/product_info_banner/product_info_banner'],function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{usePos}=require("@point_of_sale/app/store/pos_hook");const{Component}=require("@odoo/owl");const{ProductInfoBanner}=require("@point_of_sale/app/components/product_info_banner/product_info_banner");const ProductInfoPopup=__exports.ProductInfoPopup=class ProductInfoPopup extends Component{static template="point_of_sale.ProductInfoPopup";static components={Dialog,ProductInfoBanner};static props=["info","product","close"];setup(){this.pos=usePos();}
searchProduct(productName){this.pos.setSelectedCategory(0);this.pos.searchProductWord=productName;this.props.close();}
_hasMarginsCostsAccessRights(){const isAccessibleToEveryUser=this.pos.config.is_margins_costs_accessible_to_every_user;const isCashierManager=this.pos.get_cashier().role==="manager";return isAccessibleToEveryUser||isCashierManager;}
editProduct(){this.pos.editProduct(this.props.product);this.props.close();}
get isVariant(){return this.pos.isProductVariant(this.props.product);}
get allowProductEdition(){return true;}}
return __exports;});;

/* /point_of_sale/static/src/app/screens/product_screen/product_screen.js */
odoo.define('@point_of_sale/app/screens/product_screen/product_screen',['@web/core/registry','@web/core/utils/hooks','@point_of_sale/app/barcode/barcode_reader_hook','@web/core/l10n/translation','@point_of_sale/app/store/pos_hook','@odoo/owl','@point_of_sale/app/generic_components/category_selector/category_selector','@point_of_sale/app/generic_components/inputs/input/input','@point_of_sale/app/generic_components/numpad/numpad','@point_of_sale/app/screens/product_screen/action_pad/action_pad','@point_of_sale/app/generic_components/orderline/orderline','@point_of_sale/app/generic_components/order_widget/order_widget','@point_of_sale/app/screens/product_screen/order_summary/order_summary','@point_of_sale/app/screens/product_screen/product_info_popup/product_info_popup','@point_of_sale/app/generic_components/product_card/product_card','@point_of_sale/app/screens/product_screen/control_buttons/control_buttons','@web/core/utils/objects','@web/core/utils/strings','@point_of_sale/app/screens/product_screen/camera_barcode_scanner'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{useBarcodeReader}=require("@point_of_sale/app/barcode/barcode_reader_hook");const{_t}=require("@web/core/l10n/translation");const{usePos}=require("@point_of_sale/app/store/pos_hook");const{Component,onMounted,useEffect,useState,reactive,onWillRender}=require("@odoo/owl");const{CategorySelector}=require("@point_of_sale/app/generic_components/category_selector/category_selector");const{Input}=require("@point_of_sale/app/generic_components/inputs/input/input");const{BACKSPACE,Numpad,getButtons,DEFAULT_LAST_ROW,}=require("@point_of_sale/app/generic_components/numpad/numpad");const{ActionpadWidget}=require("@point_of_sale/app/screens/product_screen/action_pad/action_pad");const{Orderline}=require("@point_of_sale/app/generic_components/orderline/orderline");const{OrderWidget}=require("@point_of_sale/app/generic_components/order_widget/order_widget");const{OrderSummary}=require("@point_of_sale/app/screens/product_screen/order_summary/order_summary");const{ProductInfoPopup}=require("@point_of_sale/app/screens/product_screen/product_info_popup/product_info_popup");const{ProductCard}=require("@point_of_sale/app/generic_components/product_card/product_card");const{ControlButtons,ControlButtonsPopup,}=require("@point_of_sale/app/screens/product_screen/control_buttons/control_buttons");const{pick}=require("@web/core/utils/objects");const{unaccent}=require("@web/core/utils/strings");const{CameraBarcodeScanner}=require("@point_of_sale/app/screens/product_screen/camera_barcode_scanner");const ProductScreen=__exports.ProductScreen=class ProductScreen extends Component{static template="point_of_sale.ProductScreen";static components={ActionpadWidget,Numpad,Orderline,OrderWidget,CategorySelector,Input,ControlButtons,OrderSummary,ProductCard,CameraBarcodeScanner,};static props={};setup(){super.setup();this.pos=usePos();this.ui=useState(useService("ui"));this.dialog=useService("dialog");this.notification=useService("notification");this.numberBuffer=useService("number_buffer");this.state=useState({previousSearchWord:"",currentOffset:0,quantityByProductTmplId:{},});this._searchTriggered=false;onMounted(()=>{this.pos.openOpeningControl();this.pos.addPendingOrder([this.currentOrder.id]);this.numberBuffer.reset();});onWillRender(()=>{if(this.currentOrder?.state!=="draft"){this.pos.add_new_order();}});this.barcodeReader=useService("barcode_reader");useBarcodeReader({product:this._barcodeProductAction,quantity:this._barcodeProductAction,weight:this._barcodeProductAction,price:this._barcodeProductAction,client:this._barcodePartnerAction,discount:this._barcodeDiscountAction,gs1:this._barcodeGS1Action,});this.numberBuffer.use({useWithBarcode:true,});useEffect(()=>{this.state.quantityByProductTmplId=this.currentOrder?.lines?.reduce((acc,ol)=>{acc[ol.product_id.raw.product_tmpl_id]?(acc[ol.product_id.raw.product_tmpl_id]+=ol.qty):(acc[ol.product_id.raw.product_tmpl_id]=ol.qty);return acc;},{});},()=>[this.currentOrder,this.currentOrder.totalQuantity]);}
getAncestorsAndCurrent(){const selectedCategory=this.pos.selectedCategory;return selectedCategory?[undefined,...selectedCategory.allParents,selectedCategory]:[selectedCategory];}
getChildCategories(selectedCategory){return selectedCategory?[...selectedCategory.child_ids]:this.pos.models["pos.category"].filter((category)=>!category.parent_id);}
getCategoriesList(list,allParents,depth){return list.map((category)=>{if(category.id===allParents[depth]?.id&&category.child_ids?.length){return[category,this.getCategoriesList(category.child_ids,allParents,depth+1),];}
return category;});}
getCategoriesAndSub(){const rootCategories=this.pos.models["pos.category"].filter((category)=>!category.parent_id);const selected=this.pos.selectedCategory?[this.pos.selectedCategory]:[];const allParents=selected.concat(this.pos.selectedCategory?.allParents||[]).reverse();return this.getCategoriesList(rootCategories,allParents,0).flat(Infinity).map(this.getChildCategoriesInfo,this);}
getChildCategoriesInfo(category){return{...pick(category,"id","name","color"),imgSrc:this.pos.config.show_category_images&&category.has_image?`/web/image?model=pos.category&field=image_128&id=${category.id}`:undefined,isSelected:this.getAncestorsAndCurrent().includes(category),isChildren:this.getChildCategories(this.pos.selectedCategory).includes(category),};}
getNumpadButtons(){const colorClassMap={[this.env.services.localization.decimalPoint]:"o_colorlist_item_color_transparent_6",Backspace:"o_colorlist_item_color_transparent_1","-":"o_colorlist_item_color_transparent_3",};return getButtons(DEFAULT_LAST_ROW,[{value:"quantity",text:_t("Qty")},{value:"discount",text:_t("%"),disabled:!this.pos.config.manual_discount},{value:"price",text:_t("Price"),disabled:!this.pos.cashierHasPriceControlRights(),},BACKSPACE,]).map((button)=>({...button,class:`
                ${colorClassMap[button.value] || ""}
                ${this.pos.numpadMode === button.value ? "active" : ""}
                ${button.value === "quantity" ? "numpad-qty rounded-0 rounded-top mb-0" : ""}
                ${button.value === "price" ? "numpad-price rounded-0 rounded-bottom mt-0" : ""}
                ${
                    button.value === "discount"
                        ? "numpad-discount my-0 rounded-0 border-top border-bottom"
                        : ""
                }
            `,}));}
onNumpadClick(buttonValue){if(["quantity","discount","price"].includes(buttonValue)){this.numberBuffer.capture();this.numberBuffer.reset();this.pos.numpadMode=buttonValue;return;}
this.numberBuffer.sendKey(buttonValue);}
get currentOrder(){return this.pos.get_order();}
get total(){return this.env.utils.formatCurrency(this.currentOrder?.get_total_with_tax()??0);}
get items(){return this.currentOrder.lines?.reduce((items,line)=>items+line.qty,0)??0;}
getProductName(product){const productTmplValIds=product.attribute_line_ids.map((l)=>l.product_template_value_ids).flat();return productTmplValIds.length>1?product.name:product.display_name;}
async _getProductByBarcode(code){let product=this.pos.models["product.product"].getBy("barcode",code.base_code);if(!product){const productPackaging=this.pos.models["product.packaging"].getBy("barcode",code.base_code);product=productPackaging&&productPackaging.product_id;}
if(!product){const records=await this.pos.data.callRelated("pos.session","find_product_by_barcode",[odoo.pos_session_id,code.base_code,this.pos.config.id]);await this.pos.processProductAttributes();if(records&&records["product.product"].length>0){product=records["product.product"][0];await this.pos._loadMissingPricelistItems([product]);}}
return product;}
async _barcodeProductAction(code){const product=await this._getProductByBarcode(code);if(!product){this.barcodeReader.showNotFoundNotification(code);return;}
await this.pos.addLineToCurrentOrder({product_id:product},{code},product.needToConfigure());this.numberBuffer.reset();}
async _getPartnerByBarcode(code){let partner=this.pos.models["res.partner"].getBy("barcode",code.code);if(!partner){partner=await this.pos.data.searchRead("res.partner",[["barcode","=",code.code]]);partner=partner.length>0&&partner[0];}
return partner;}
async _barcodePartnerAction(code){const partner=await this._getPartnerByBarcode(code);if(partner){if(this.currentOrder.get_partner()!==partner){this.currentOrder.set_partner(partner);}
return;}
this.barcodeReader.showNotFoundNotification(code);}
_barcodeDiscountAction(code){var last_orderline=this.currentOrder.get_last_orderline();if(last_orderline){this.pos.setDiscountFromUI(last_orderline,code.value);}}
async _barcodeGS1Action(parsed_results){const productBarcode=parsed_results.find((element)=>element.type==="product");const lotBarcode=parsed_results.find((element)=>element.type==="lot");const product=await this._getProductByBarcode(productBarcode);if(!product){this.barcodeReader.showNotFoundNotification(parsed_results.find((element)=>element.type==="product"));return;}
await this.pos.addLineToCurrentOrder({product_id:product},{code:lotBarcode});this.numberBuffer.reset();}
displayAllControlPopup(){this.dialog.add(ControlButtonsPopup);}
get selectedOrderlineQuantity(){return this.currentOrder.get_selected_orderline()?.get_quantity_str();}
get selectedOrderlineDisplayName(){return this.currentOrder.get_selected_orderline()?.get_full_product_name();}
get selectedOrderlineTotal(){return this.env.utils.formatCurrency(this.currentOrder.get_selected_orderline()?.get_display_price());}
get animationKey(){return[this.currentOrder.get_selected_orderline()?.uuid,this.selectedOrderlineQuantity,this.selectedOrderlineDisplayName,this.selectedOrderlineTotal,].join(",");}
switchPane(){this.pos.scanning=false;this.pos.switchPane();}
getProductPrice(product){return this.pos.getProductPriceFormatted(product);}
getProductImage(product){return product.getTemplateImageUrl();}
get searchWord(){return this.pos.searchProductWord.trim();}
get products(){return this.pos.models["product.product"].getAll();}
get productsToDisplay(){let list=[];if(this.searchWord!==""){if(!this._searchTriggered){this.pos.setSelectedCategory(0);this._searchTriggered=true;}
list=this.addMainProductsToDisplay(this.getProductsBySearchWord(this.searchWord));}else{this._searchTriggered=false;if(this.pos.selectedCategory?.id){list=this.getProductsByCategory(this.pos.selectedCategory);}else{list=this.products;}}
if(!list||list.length===0){return[];}
const excludedProductIds=[this.pos.config.tip_product_id?.id,...this.pos.hiddenProductIds,...this.pos.session._pos_special_products_ids,];const filteredList=[];for(const product of list){if(filteredList.length>=100){break;}
if(!excludedProductIds.includes(product.id)&&product.canBeDisplayed){filteredList.push(product);}}
return this.searchWord!==""?filteredList:filteredList.sort((a,b)=>a.display_name.localeCompare(b.display_name));}
getProductsBySearchWord(searchWord){const words=searchWord.toLowerCase();const products=this.pos.selectedCategory?.id?this.getProductsByCategory(this.pos.selectedCategory):this.products;const exactMatches=products.filter((product)=>product.exactMatch(words));if(exactMatches.length>0&&words.length>2){return exactMatches;}
const matches=products.filter((p)=>unaccent(p.searchString,false).toLowerCase().includes(words));return Array.from(new Set([...exactMatches,...matches]));}
addMainProductsToDisplay(products){const uniqueProductsMap=new Map();for(const product of products){if(product.id in this.pos.mainProductVariant){const mainProduct=this.pos.mainProductVariant[product.id];uniqueProductsMap.set(mainProduct.id,mainProduct);}else{uniqueProductsMap.set(product.id,product);}}
return Array.from(uniqueProductsMap.values());}
getProductsByCategory(category){const allCategoryIds=category.getAllChildren().map((cat)=>cat.id);const products=allCategoryIds.flatMap((catId)=>this.pos.models["product.product"].getBy("pos_categ_ids",catId)||[]);return Array.from(new Set(products));}
async onPressEnterKey(){const{searchProductWord}=this.pos;if(!searchProductWord){return;}
if(this.state.previousSearchWord!==searchProductWord){this.state.currentOffset=0;}
const result=await this.loadProductFromDB();if(result.length>0){this.notification.add(_t('%s product(s) found for "%s".',result.length,searchProductWord),3000);}else{this.notification.add(_t('No more product found for "%s".',searchProductWord));}
if(this.state.previousSearchWord===searchProductWord){this.state.currentOffset+=result.length;}else{this.state.previousSearchWord=searchProductWord;this.state.currentOffset=result.length;}}
async loadProductFromDB(){const{searchProductWord}=this.pos;if(!searchProductWord){return;}
this.pos.setSelectedCategory(0);const domain=["|","|",["name","ilike",searchProductWord],["default_code","ilike",searchProductWord],["barcode","ilike",searchProductWord],["available_in_pos","=",true],["sale_ok","=",true],];const{limit_categories,iface_available_categ_ids}=this.pos.config;if(limit_categories&&iface_available_categ_ids.length>0){const categIds=iface_available_categ_ids.map((categ)=>categ.id);domain.push(["pos_categ_ids","in",categIds]);}
const product=await this.pos.data.searchRead("product.product",domain,this.pos.data.fields["product.product"],{context:{display_default_code:false},offset:this.state.currentOffset,limit:30,});await this.pos.processProductAttributes();return product;}
async addProductToOrder(product){await reactive(this.pos).addLineToCurrentOrder({product_id:product},{});}
async onProductInfoClick(product){const info=await reactive(this.pos).getProductInfo(product,1);this.dialog.add(ProductInfoPopup,{info:info,product:product});}}
registry.category("pos_screens").add("ProductScreen",ProductScreen);return __exports;});;

/* /point_of_sale/static/src/app/screens/receipt_screen/receipt/order_receipt.js */
odoo.define('@point_of_sale/app/screens/receipt_screen/receipt/order_receipt',['@odoo/owl','@point_of_sale/app/generic_components/orderline/orderline','@point_of_sale/app/generic_components/order_widget/order_widget','@point_of_sale/app/screens/receipt_screen/receipt/receipt_header/receipt_header','@web/core/utils/objects'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{Orderline}=require("@point_of_sale/app/generic_components/orderline/orderline");const{OrderWidget}=require("@point_of_sale/app/generic_components/order_widget/order_widget");const{ReceiptHeader}=require("@point_of_sale/app/screens/receipt_screen/receipt/receipt_header/receipt_header");const{omit}=require("@web/core/utils/objects");const OrderReceipt=__exports.OrderReceipt=class OrderReceipt extends Component{static template="point_of_sale.OrderReceipt";static components={Orderline,OrderWidget,ReceiptHeader,};static props={data:Object,formatCurrency:Function,basic_receipt:{type:Boolean,optional:true},};static defaultProps={basic_receipt:false,};omit(...args){return omit(...args);}
doesAnyOrderlineHaveTaxLabel(){return this.props.data.orderlines.some((line)=>line.taxGroupLabels);}
getPortalURL(){return`${this.props.data.base_url}/pos/ticket`;}}
return __exports;});;

/* /point_of_sale/static/src/app/screens/receipt_screen/receipt/receipt_header/receipt_header.js */
odoo.define('@point_of_sale/app/screens/receipt_screen/receipt/receipt_header/receipt_header',['@web/core/l10n/translation','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{Component}=require("@odoo/owl");const ReceiptHeader=__exports.ReceiptHeader=class ReceiptHeader extends Component{static template="point_of_sale.ReceiptHeader";static props={data:{type:Object,shape:{company:Object,header:{type:[String,{value:false}],optional:true},cashier:{type:String,optional:true},"*":true,},},};get vatText(){if(this.props.data.company.country_id?.vat_label){return _t("%(vatLabel)s: %(vatId)s",{vatLabel:this.props.data.company.country_id.vat_label,vatId:this.props.data.company.vat,});}
return _t("Tax ID: %(vatId)s",{vatId:this.props.data.company.vat});}}
return __exports;});;

/* /point_of_sale/static/src/app/screens/receipt_screen/receipt_screen.js */
odoo.define('@point_of_sale/app/screens/receipt_screen/receipt_screen',['@web/core/l10n/translation','@point_of_sale/app/utils/hooks','@web/core/registry','@point_of_sale/app/screens/receipt_screen/receipt/order_receipt','@odoo/owl','@point_of_sale/app/store/pos_hook','@web/core/utils/hooks','@web/core/confirmation_dialog/confirmation_dialog'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{useErrorHandlers,useTrackedAsync}=require("@point_of_sale/app/utils/hooks");const{registry}=require("@web/core/registry");const{OrderReceipt}=require("@point_of_sale/app/screens/receipt_screen/receipt/order_receipt");const{useState,Component,onMounted}=require("@odoo/owl");const{usePos}=require("@point_of_sale/app/store/pos_hook");const{useService}=require("@web/core/utils/hooks");const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const ReceiptScreen=__exports.ReceiptScreen=class ReceiptScreen extends Component{static template="point_of_sale.ReceiptScreen";static components={OrderReceipt};static props={};setup(){super.setup();this.pos=usePos();useErrorHandlers();this.ui=useState(useService("ui"));this.renderer=useService("renderer");this.notification=useService("notification");this.dialog=useService("dialog");const partner=this.currentOrder.get_partner();this.state=useState({email:partner?.email||"",phone:partner?.mobile||"",});this.sendReceipt=useTrackedAsync(this._sendReceiptToCustomer.bind(this));this.doFullPrint=useTrackedAsync(()=>this.pos.printReceipt());this.doBasicPrint=useTrackedAsync(()=>this.pos.printReceipt({basic:true}));onMounted(()=>{const order=this.pos.get_order();this.currentOrder.uiState.locked=true;if(!this.pos.config.module_pos_restaurant){this.pos.sendOrderInPreparation(order);}});}
_addNewOrder(){this.pos.add_new_order();}
actionSendReceiptOnEmail(){this.sendReceipt.call({action:"action_send_receipt",destination:this.state.email,name:"Email",});}
get currentOrder(){return this.pos.get_order();}
get orderAmountPlusTip(){const order=this.currentOrder;const orderTotalAmount=order.get_total_with_tax();const tip_product_id=this.pos.config.tip_product_id?.id;const tipLine=order.get_orderlines().find((line)=>tip_product_id&&line.product_id.id===tip_product_id);const tipAmount=tipLine?tipLine.get_all_prices().priceWithTax:0;const orderAmountStr=this.env.utils.formatCurrency(orderTotalAmount-tipAmount);if(!tipAmount){return orderAmountStr;}
const tipAmountStr=this.env.utils.formatCurrency(tipAmount);return`${orderAmountStr} + ${tipAmountStr} tip`;}
get nextScreen(){return{name:"ProductScreen"};}
get ticketScreen(){return{name:"TicketScreen"};}
get isValidEmail(){return this.state.email&&/^.+@.+$/.test(this.state.email);}
get isValidPhone(){return this.state.phone&&/^\+?[()\d\s-.]{8,18}$/.test(this.state.phone);}
showPhoneInput(){return false;}
orderDone(){this.currentOrder.uiState.screen_data.value="";this.currentOrder.uiState.locked=true;this._addNewOrder();this.pos.searchProductWord="";const{name,props}=this.nextScreen;this.pos.showScreen(name,props);}
generateTicketImage=async(isBasicReceipt=false)=>await this.renderer.toJpeg(OrderReceipt,{data:this.pos.orderExportForPrinting(this.pos.get_order()),formatCurrency:this.env.utils.formatCurrency,basic_receipt:isBasicReceipt,},{addClass:"pos-receipt-print p-3"});async _sendReceiptToCustomer({action,destination}){const order=this.currentOrder;if(typeof order.id!=="number"){this.dialog.add(ConfirmationDialog,{title:_t("Unsynced order"),body:_t("This order is not yet synced to server. Make sure it is synced then try again."),});return Promise.reject();}
const fullTicketImage=await this.generateTicketImage();const basicTicketImage=await this.generateTicketImage(true);await this.pos.data.call("pos.order",action,[[order.id],destination,fullTicketImage,this.pos.config.basic_receipt?basicTicketImage:null,]);}}
registry.category("pos_screens").add("ReceiptScreen",ReceiptScreen);return __exports;});;

/* /point_of_sale/static/src/app/screens/saver_screen/saver_screen.js */
odoo.define('@point_of_sale/app/screens/saver_screen/saver_screen',['@web/core/registry','@odoo/owl','@point_of_sale/app/utils/time_hook'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{Component}=require("@odoo/owl");const{useTime}=require("@point_of_sale/app/utils/time_hook");const SaverScreen=__exports.SaverScreen=class SaverScreen extends Component{static template="point_of_sale.SaverScreen";static storeOnOrder=false;static updatePreviousScreen=false;static props=[];setup(){this.time=useTime();}}
registry.category("pos_screens").add("SaverScreen",SaverScreen);return __exports;});;

/* /point_of_sale/static/src/app/screens/scale_screen/scale_screen.js */
odoo.define('@point_of_sale/app/screens/scale_screen/scale_screen',['@web/core/utils/numbers','@point_of_sale/app/store/pos_hook','@odoo/owl','@web/core/dialog/dialog','@web/core/utils/hooks'],function(require){'use strict';let __exports={};const{roundPrecision:round_pr}=require("@web/core/utils/numbers");const{usePos}=require("@point_of_sale/app/store/pos_hook");const{Component,onMounted,onWillUnmount,useState}=require("@odoo/owl");const{Dialog}=require("@web/core/dialog/dialog");const{useService}=require("@web/core/utils/hooks");const ScaleScreen=__exports.ScaleScreen=class ScaleScreen extends Component{static template="point_of_sale.ScaleScreen";static components={Dialog};static props={getPayload:Function,productName:String,uomName:String,uomRounding:Number,productPrice:Number,close:Function,};setup(){this.pos=usePos();this.hardwareProxy=useService("hardware_proxy");this.state=useState({weight:0,tare:0,tareLoading:false});onMounted(this.onMounted);onWillUnmount(this.onWillUnmount);}
onMounted(){this._readScale();}
onWillUnmount(){this.shouldRead=false;}
confirm(){this.props.getPayload(this.netWeight);this.props.close();}
_readScale(){this.shouldRead=true;this._setWeight();}
async _setWeight(){if(!this.shouldRead){return;}
this.state.weight=await this.hardwareProxy.readScale();this.pos.setScaleWeight(this.state.weight);setTimeout(()=>this._setWeight(),500);}
get netWeight(){const weight=round_pr(this.state.weight||0,this.props.uomRounding);const weightRound=weight.toFixed(Math.ceil(Math.log(1.0/this.props.uomRounding)/Math.log(10)));return weightRound-parseFloat(this.state.tare);}
get productWeightString(){const defaultstr=(this.state.weight||0).toFixed(3)+" Kg";const uom=this.props.uomName;if(!uom){return defaultstr;}
const weight=round_pr(this.state.weight||0,this.props.uomRounding);let weightstr=weight.toFixed(Math.ceil(Math.log(1.0/this.props.uomRounding)/Math.log(10)));weightstr+=" "+this.props.uomName;return weightstr;}
get computedPriceString(){const priceString=this.env.utils.formatCurrency(this.netWeight*this.props.productPrice);this.pos.totalPriceOnScale=priceString;return priceString;}
async handleTareButtonClick(){this.state.tareLoading=true;const tareWeight=await this.hardwareProxy.readScale();this.state.tare=tareWeight;this.pos.setScaleTare(this.state.tare);setTimeout(()=>{this.state.tareLoading=false;},3000);}
handleInputChange(ev){this.pos.setScaleTare(ev.target.value);}}
return __exports;});;

/* /point_of_sale/static/src/app/screens/ticket_screen/invoice_button/invoice_button.js */
odoo.define('@point_of_sale/app/screens/ticket_screen/invoice_button/invoice_button',['@web/core/l10n/translation','@web/core/utils/hooks','@web/core/confirmation_dialog/confirmation_dialog','@point_of_sale/app/store/pos_hook','@odoo/owl','@point_of_sale/app/store/make_awaitable_dialog','@point_of_sale/app/screens/partner_list/partner_list'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{useService}=require("@web/core/utils/hooks");const{AlertDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{usePos}=require("@point_of_sale/app/store/pos_hook");const{Component}=require("@odoo/owl");const{ask,makeAwaitable}=require("@point_of_sale/app/store/make_awaitable_dialog");const{PartnerList}=require("@point_of_sale/app/screens/partner_list/partner_list");const InvoiceButton=__exports.InvoiceButton=class InvoiceButton extends Component{static template="point_of_sale.InvoiceButton";static props={order:Object,onInvoiceOrder:Function,};setup(){this.pos=usePos();this.dialog=useService("dialog");this.invoiceService=useService("account_move");this.lock=false;}
get isAlreadyInvoiced(){if(!this.props.order){return false;}
return Boolean(this.props.order.raw.account_move);}
get commandName(){if(!this.props.order){return _t("Invoice");}else{return this.isAlreadyInvoiced?_t("Reprint Invoice"):_t("Invoice");}}
async _downloadInvoice(orderId){try{const orderWithInvoice=await this.pos.data.read("pos.order",[orderId],[],{load:false,});const order=orderWithInvoice[0];const accountMoveId=order.raw.account_move;if(accountMoveId){await this.invoiceService.downloadPdf(accountMoveId);}}catch(error){if(error instanceof Error){throw error;}else{this.dialog.add(AlertDialog,{title:_t("Network Error"),body:_t("Unable to download invoice."),});}}}
async onWillInvoiceOrder(order,partner){return true;}
async _invoiceOrder(){const order=this.props.order;if(!order){return;}
const orderId=order.id;if(this.isAlreadyInvoiced){await this._downloadInvoice(orderId);this.props.onInvoiceOrder(orderId);return;}
let partner=order.get_partner();if(!partner){const _confirmed=await ask(this.dialog,{title:_t("Need customer to invoice"),body:_t("Do you want to open the customer list to select customer?"),});if(!_confirmed){return;}
partner=await makeAwaitable(this.dialog,PartnerList);if(!partner){return;}
await this.pos.data.ormWrite("pos.order",[orderId],{partner_id:partner.id});}
const confirmed=await this.onWillInvoiceOrder(order,partner);if(!confirmed){return;}
await this.pos.data.silentCall("pos.order","action_pos_order_invoice",[orderId]);await this._downloadInvoice(orderId);this.props.onInvoiceOrder(orderId);}
async click(){if(this.lock){return;}
this.lock=true;try{await this._invoiceOrder();}finally{this.lock=false;}}}
return __exports;});;

/* /point_of_sale/static/src/app/screens/ticket_screen/search_bar/search_bar.js */
odoo.define('@point_of_sale/app/screens/ticket_screen/search_bar/search_bar',['@odoo/owl','@web/core/utils/hooks'],function(require){'use strict';let __exports={};const{Component,useExternalListener,useState}=require("@odoo/owl");const{useAutofocus,useService}=require("@web/core/utils/hooks");const SearchBar=__exports.SearchBar=class SearchBar extends Component{static template="point_of_sale.SearchBar";static props={config:Object,placeholder:String,onSearch:Function,onFilterSelected:Function,};setup(){this.ui=useState(useService("ui"));useAutofocus();useExternalListener(window,"click",this._hideOptions);this.filterOptionsList=[...this.props.config.filter.options.keys()];this.searchFieldsList=[...this.props.config.searchFields.keys()];const defaultSearchFieldId=this.searchFieldsList.indexOf(this.props.config.defaultSearchDetails.fieldName);this.state=useState({searchInput:this.props.config.defaultSearchDetails.searchTerm||"",selectedSearchFieldId:defaultSearchFieldId==-1?0:defaultSearchFieldId,showSearchFields:false,showFilterOptions:false,selectedFilter:this.props.config.defaultFilter||this.filterOptionsList[0],});}
_onSelectFilter(key){this.state.selectedFilter=key;this.props.onFilterSelected(this.state.selectedFilter);}
onSearchInputKeydown(event){if(["ArrowUp","ArrowDown"].includes(event.key)){event.preventDefault();}}
onSearchInputKeyup(event){if(["ArrowUp","ArrowDown"].includes(event.key)){this.state.selectedSearchFieldId=this._fieldIdToSelect(event.key);}else if(event.key==="Enter"||this.state.searchInput==""){this._onClickSearchField(this.searchFieldsList[this.state.selectedSearchFieldId]);}else{if(this.state.selectedSearchFieldId===-1&&this.searchFieldsList.length){this.state.selectedSearchFieldId=0;}
this.state.showSearchFields=true;}}
_onClickSearchField(fieldName){this.state.showSearchFields=false;this.props.onSearch({fieldName,searchTerm:this.state.searchInput});}
_fieldIdToSelect(key){const length=this.searchFieldsList.length;if(!length){return null;}
if(this.state.selectedSearchFieldId===-1){return 0;}
const current=this.state.selectedSearchFieldId||length;return(current+(key==="ArrowDown"?1:-1))%length;}
_hideOptions(){this.state.showFilterOptions=false;this.state.showSearchFields=false;}}
return __exports;});;

/* /point_of_sale/static/src/app/screens/ticket_screen/ticket_screen.js */
odoo.define('@point_of_sale/app/screens/ticket_screen/ticket_screen',['@web/core/registry','@web/core/utils/hooks','@web/core/l10n/dates','@web/views/fields/parsers','@web/core/l10n/translation','@web/core/confirmation_dialog/confirmation_dialog','@point_of_sale/app/screens/product_screen/action_pad/action_pad','@point_of_sale/app/screens/product_screen/action_pad/back_button/back_button','@point_of_sale/app/screens/ticket_screen/invoice_button/invoice_button','@point_of_sale/app/generic_components/orderline/orderline','@point_of_sale/app/generic_components/order_widget/order_widget','@point_of_sale/app/generic_components/centered_icon/centered_icon','@point_of_sale/app/screens/ticket_screen/search_bar/search_bar','@point_of_sale/app/store/pos_hook','@odoo/owl','@point_of_sale/app/generic_components/numpad/numpad','@point_of_sale/app/models/pos_order_line_refund','@web/core/utils/search','@point_of_sale/utils','@point_of_sale/app/utils/hooks','@web/core/network/rpc'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{formatDateTime,parseDateTime}=require("@web/core/l10n/dates");const{parseFloat}=require("@web/views/fields/parsers");const{_t}=require("@web/core/l10n/translation");const{AlertDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{ActionpadWidget}=require("@point_of_sale/app/screens/product_screen/action_pad/action_pad");const{BackButton}=require("@point_of_sale/app/screens/product_screen/action_pad/back_button/back_button");const{InvoiceButton}=require("@point_of_sale/app/screens/ticket_screen/invoice_button/invoice_button");const{Orderline}=require("@point_of_sale/app/generic_components/orderline/orderline");const{OrderWidget}=require("@point_of_sale/app/generic_components/order_widget/order_widget");const{CenteredIcon}=require("@point_of_sale/app/generic_components/centered_icon/centered_icon");const{SearchBar}=require("@point_of_sale/app/screens/ticket_screen/search_bar/search_bar");const{usePos}=require("@point_of_sale/app/store/pos_hook");const{Component,onMounted,onWillStart,useState}=require("@odoo/owl");const{BACKSPACE,Numpad,getButtons,ZERO,DECIMAL,}=require("@point_of_sale/app/generic_components/numpad/numpad");const{PosOrderLineRefund}=require("@point_of_sale/app/models/pos_order_line_refund");const{fuzzyLookup}=require("@web/core/utils/search");const{parseUTCString}=require("@point_of_sale/utils");const{useTrackedAsync}=require("@point_of_sale/app/utils/hooks");const{ConnectionLostError}=require("@web/core/network/rpc");const NBR_BY_PAGE=30;const TicketScreen=__exports.TicketScreen=class TicketScreen extends Component{static storeOnOrder=false;static template="point_of_sale.TicketScreen";static components={ActionpadWidget,InvoiceButton,Orderline,OrderWidget,CenteredIcon,SearchBar,Numpad,BackButton,};static props={destinationOrder:{type:Object,optional:true},reuseSavedUIState:{type:Boolean,optional:true},stateOverride:{type:Object,optional:true},};static defaultProps={destinationOrder:null,reuseSavedUIState:false,ui:{},};setup(){this.pos=usePos();this.ui=useState(useService("ui"));this.dialog=useService("dialog");this.numberBuffer=useService("number_buffer");this.doPrint=useTrackedAsync((_selectedSyncedOrder)=>this.print(_selectedSyncedOrder));this.numberBuffer.use({triggerAtInput:(event)=>this._onUpdateSelectedOrderline(event),});this.state=useState({page:1,nbrPage:1,filter:null,search:this.pos.getDefaultSearchDetails(),selectedOrderUuid:this.pos.get_order()?.uuid||null,selectedOrderlineIds:{},});Object.assign(this.state,this.props.stateOverride||{});onMounted(this.onMounted);onWillStart(async()=>{if(this.pos._shouldLoadOrders()&&!this.pos.loadingOrderState){try{this.pos.setLoadingOrderState(true);await this.pos.getServerOrders();}catch(error){if(error instanceof ConnectionLostError){Promise.reject(error);return error;}
throw error;}finally{this.pos.setLoadingOrderState(false);}}});}
onMounted(){setTimeout(()=>{this.onFilterSelected(this.state.filter);});}
async print(order){await this.pos.printReceipt({order:order});}
async onFilterSelected(selectedFilter){this.state.filter=selectedFilter;if(this.state.filter=="SYNCED"){await this._fetchSyncedOrders();}}
getNumpadButtons(){return getButtons([{value:"-",text:"+/-",disabled:true},ZERO,DECIMAL],[{value:"quantity",text:_t("Qty"),class:"active border-primary"},{value:"discount",text:_t("% Disc"),disabled:true},{value:"price",text:_t("Price"),disabled:true},BACKSPACE,]);}
async onSearch(search){this.state.search=search;this.state.page=1;if(this.state.filter=="SYNCED"){await this._fetchSyncedOrders();}}
onClickOrder(clickedOrder){this.setSelectedOrder(clickedOrder);this.numberBuffer.reset();if((!clickedOrder||clickedOrder.uiState.locked)&&!this.getSelectedOrderlineId()){const firstLine=this.getSelectedOrder().get_orderlines()[0];if(firstLine){this.state.selectedOrderlineIds[clickedOrder.id]=firstLine.id;}}}
async onNextPage(){if(this.state.page<this.getNbrPages()){this.state.page+=1;await this._fetchSyncedOrders();}}
async onPrevPage(){if(this.state.page>1){this.state.page-=1;await this._fetchSyncedOrders();}}
async onInvoiceOrder(orderId){const order=this.pos.models["pos.order"].get(orderId);this.setSelectedOrder(order);}
onClickOrderline(orderline){if(this.getSelectedOrder()?.uiState.locked){const order=this.getSelectedOrder();this.state.selectedOrderlineIds[order.id]=orderline.id;this.numberBuffer.reset();}}
onClickRefundOrderUid(orderUuid){const refundOrder=this.pos.models["pos.order"].find((order)=>order.uuid==orderUuid);if(refundOrder){this._setOrder(refundOrder);}}
_onUpdateSelectedOrderline({key,buffer}){const order=this.getSelectedOrder();if(!order){return this.numberBuffer.reset();}
const selectedOrderlineId=this.getSelectedOrderlineId();const orderline=order.lines.find((line)=>line.id==selectedOrderlineId);if(!orderline){return this.numberBuffer.reset();}
const toRefundDetails=orderline.getAllLinesInCombo().map((line)=>this.getToRefundDetail(line));for(const toRefundDetail of toRefundDetails){if(toRefundDetail.destionation_order_id){return this.numberBuffer.reset();}
const refundableQty=toRefundDetail.line.qty-toRefundDetail.line.refunded_qty;if(refundableQty<=0){return this.numberBuffer.reset();}
if(buffer==null||buffer==""){toRefundDetail.qty=0;}else{const quantity=Math.abs(parseFloat(buffer));if(quantity>refundableQty){this.numberBuffer.reset();if(!toRefundDetail.line.combo_parent_id){this.dialog.add(AlertDialog,{title:_t("Maximum Exceeded"),body:_t("The requested quantity to be refunded is higher than the ordered quantity. %s is requested while only %s can be refunded.",quantity,refundableQty),});}}else{toRefundDetail.qty=quantity;}}}}
async addAdditionalRefundInfo(order,destinationOrder){return Promise.resolve();}
async onDoRefund(){const order=this.getSelectedOrder();if(order&&this._doesOrderHaveSoleItem(order)){if(!this._prepareAutoRefundOnOrder(order)){return;}}
if(!order||!this.getHasItemsToRefund()){return;}
const partner=order.get_partner();const destinationOrder=this.props.destinationOrder&&this.props.destinationOrder.lines.every((l)=>l.quantity>=0||order.lines.some((ol)=>ol.id===l.refunded_orderline_id))&&partner===this.props.destinationOrder.get_partner()&&!this.pos.doNotAllowRefundAndSales()?this.props.destinationOrder:this._getEmptyOrder(partner);destinationOrder.takeaway=order.takeaway;const lines=[];for(const refundDetail of this._getRefundableDetails(partner,order)){const refundLine=refundDetail.line;const line=this.pos.models["pos.order.line"].create({qty:-refundDetail.qty,price_unit:refundLine.price_unit,product_id:refundLine.product_id,order_id:destinationOrder,discount:refundLine.discount,tax_ids:refundLine.tax_ids.map((tax)=>["link",tax]),refunded_orderline_id:refundLine,pack_lot_ids:refundLine.pack_lot_ids.map((packLot)=>["create",{lot_name:packLot.lot_name},]),price_type:"automatic",});lines.push(line);refundDetail.destination_order_uuid=destinationOrder.uuid;}
const refundComboParentLines=lines.filter((l)=>l.refunded_orderline_id.combo_line_ids.length>0);for(const refundComboParent of refundComboParentLines){const children=refundComboParent.refunded_orderline_id.combo_line_ids.map((l)=>l.refund_orderline_ids).flat();refundComboParent.update({combo_line_ids:[["link",...children]],});}
if(order.fiscal_position_not_found){this.dialog.add(AlertDialog,{title:_t("Fiscal Position not found"),body:_t("The fiscal position used in the original order is not loaded. Make sure it is loaded by adding it in the pos configuration."),});return;}
if(order.fiscal_position_id){destinationOrder.update({fiscal_position_id:order.fiscal_position_id});}
this.setPartnerToRefundOrder(partner,destinationOrder);if(this.pos.get_order().uuid!==destinationOrder.uuid){this.pos.set_order(destinationOrder);}
await this.addAdditionalRefundInfo(order,destinationOrder);this.postRefund(destinationOrder);this.closeTicketScreen();}
postRefund(destinationOrder){}
setPartnerToRefundOrder(partner,destinationOrder){if(partner&&!destinationOrder.get_partner()){destinationOrder.set_partner(partner);}}
setSelectedOrder(order){this.state.selectedOrderUuid=order?.uuid||null;}
getSelectedOrder(){return this.pos.models["pos.order"].getBy("uuid",this.state.selectedOrderUuid)||null;}
getSelectedOrderlineId(){if(this.getSelectedOrder()){return this.state.selectedOrderlineIds[this.getSelectedOrder().id];}}
get isOrderSynced(){return(this.getSelectedOrder()?.uiState.locked&&(this.getSelectedOrder().get_screen_data().name===""||this.state.filter==="SYNCED"));}
activeOrderFilter(o){const screen=["ReceiptScreen","TipScreen"];const oScreen=o.get_screen_data();return(!o.finalized||screen.includes(oScreen.name))&&o.uiState.displayed;}
getFilteredOrderList(){const orderModel=this.pos.models["pos.order"];let orders=this.state.filter==="SYNCED"?orderModel.filter((o)=>o.finalized&&o.uiState.displayed):orderModel.filter(this.activeOrderFilter);if(this.state.filter&&!["ACTIVE_ORDERS","SYNCED"].includes(this.state.filter)){orders=orders.filter((order)=>{const screen=order.get_screen_data();return this._getScreenToStatusMap()[screen.name]===this.state.filter;});}
if(this.state.search.searchTerm){const repr=this._getSearchFields()[this.state.search.fieldName].repr;orders=fuzzyLookup(this.state.search.searchTerm,orders,repr);}
const sortOrders=(orders,ascending=false)=>orders.sort((a,b)=>{const dateA=parseUTCString(a.date_order,"yyyy-MM-dd HH:mm:ss");const dateB=parseUTCString(b.date_order,"yyyy-MM-dd HH:mm:ss");if(a.date_order!==b.date_order){return ascending?dateA-dateB:dateB-dateA;}else{const nameA=parseInt(a.name.replace(/\D/g,""))||0;const nameB=parseInt(b.name.replace(/\D/g,""))||0;return ascending?nameA-nameB:nameB-nameA;}});if(this.state.filter==="SYNCED"){return sortOrders(orders).slice((this.state.page-1)*NBR_BY_PAGE,this.state.page*NBR_BY_PAGE);}else{return sortOrders(orders,true);}}
getDate(order){return formatDateTime(parseUTCString(order.date_order));}
getTotal(order){return this.env.utils.formatCurrency(order.get_total_with_tax());}
getPartner(order){return order.get_partner_name();}
getCardholderName(order){return order.get_cardholder_name();}
getCashier(order){return order.employee_id?order.employee_id.name:"";}
getStatus(order){if(order.uiState?.locked&&(order.get_screen_data().name===""||this.state.filter==="SYNCED")){return _t("Paid");}else{const screen=order.get_screen_data();return this._getOrderStates().get(this._getScreenToStatusMap()[screen.name])?.text;}}
isDefaultOrderEmpty(order){const status=this._getScreenToStatusMap()[order.get_screen_data().name];const productScreenStatus=this._getScreenToStatusMap().ProductScreen;return(order.get_orderlines().length===0&&this.pos.get_open_orders().length===1&&status===productScreenStatus&&order.payment_ids.length===0);}
shouldHideDeleteButton(order){const orders=this.pos.models["pos.order"].filter((o)=>!o.finalized);return((orders.length===1&&orders[0].lines.length===0)||(this.ui.isSmall&&order!=this.getSelectedOrder())||this.isDefaultOrderEmpty(order)||order.finalized||order.payment_ids.some((payment)=>payment.is_electronic()&&payment.get_payment_status()==="done")||order.finalized);}
isHighlighted(order){const selectedOrder=this.getSelectedOrder();return selectedOrder?order.id&&order.id==selectedOrder.id:false;}
showCardholderName(){return this.pos.models["pos.payment.method"].some((method)=>method.use_payment_terminal);}
getSearchBarConfig(){return{searchFields:new Map(Object.entries(this._getSearchFields()).map(([key,val])=>[key,val.displayName])),filter:{show:true,options:this._getFilterOptions()},defaultSearchDetails:this.state.search,defaultFilter:this.state.filter,};}
getNbrPages(){return Math.ceil(this.pos.ticketScreenState.totalCount/NBR_BY_PAGE);}
getPageNumber(){if(!this.pos.ticketScreenState.totalCount){return`1/1`;}else{return`${this.state.page}/${this.getNbrPages()}`;}}
getHasItemsToRefund(){const order=this.getSelectedOrder();if(!order){return false;}
if(this._doesOrderHaveSoleItem(order)){return true;}
const total=Object.values(order.uiState.lineToRefund).reduce((acc,val)=>{acc+=val.qty;return acc;},0);return!this.pos.isProductQtyZero(total);}
switchPane(){this.pos.switchPaneTicketScreen();}
closeTicketScreen(){this.pos.ticket_screen_mobile_pane="left";this.pos.closeScreen();}
_getEmptyOrder(partner){let emptyOrderForPartner=null;let emptyOrder=null;for(const order of this.pos.models["pos.order"].filter((order)=>!order.finalized)){if(order.get_orderlines().length===0&&order.payment_ids.length===0){if(order.get_partner()===partner){emptyOrderForPartner=order;break;}else if(!order.get_partner()&&emptyOrder===null){emptyOrder=order;}}}
return emptyOrderForPartner||emptyOrder||this.pos.add_new_order();}
_doesOrderHaveSoleItem(order){const orderlines=order.get_orderlines();if(orderlines.length!==1){return false;}
const theOrderline=orderlines[0];const refundableQty=theOrderline.get_quantity()-theOrderline.refunded_qty;return this.pos.isProductQtyZero(refundableQty-1);}
_prepareAutoRefundOnOrder(order){const selectedOrderlineId=this.getSelectedOrderlineId();const orderline=order.lines.find((line)=>line.id==selectedOrderlineId);if(!orderline){return false;}
const toRefundDetail=this.getToRefundDetail(orderline);if(this.pos.isProductQtyZero(toRefundDetail.maxQty-1)&&toRefundDetail.qty===0){toRefundDetail.qty=1;}
return true;}
getToRefundDetail(orderline){const lineToRefund=orderline.order_id.uiState.lineToRefund;if(orderline.uuid in lineToRefund){return lineToRefund[orderline.uuid];}
const newToRefundDetail=new PosOrderLineRefund({line_uuid:orderline.uuid,qty:0,},this.pos.models);lineToRefund[orderline.uuid]=newToRefundDetail;return newToRefundDetail;}
_getRefundableDetails(partner,order){return Object.values(this.pos.linesToRefund).filter((refund)=>!this.pos.isProductQtyZero(refund.qty)&&refund.line.order_id.uuid===order.uuid&&(partner?refund.line.order_id.partner_id?.id===partner.id:true)&&!refund.destination_order_id);}
async _setOrder(order){if(this.pos.isOpenOrderShareable()){await this.pos.syncAllOrders();}
this.pos.set_order(order);this.closeTicketScreen();}
_getOrderList(){return this.pos.models["pos.order"].getAll();}
_getFilterOptions(){const orderStates=this._getOrderStates();orderStates.set("SYNCED",{text:_t("Paid")});return orderStates;}
_getSearchFields(){const fields={TRACKING_NUMBER:{repr:(order)=>order.tracking_number,displayName:_t("Order Number"),modelField:"tracking_number",},RECEIPT_NUMBER:{repr:(order)=>order.pos_reference,displayName:_t("Receipt Number"),modelField:"pos_reference",},DATE:{repr:(order)=>this.getDate(order),displayName:_t("Date"),modelField:"date_order",formatSearch:(searchTerm)=>{const includesTime=searchTerm.includes(":");let parsedDateTime;try{parsedDateTime=parseDateTime(searchTerm);}catch{return searchTerm;}
if(includesTime){return parsedDateTime.toUTC().toFormat("yyyy-MM-dd HH:mm:ss");}else{return parsedDateTime.toFormat("yyyy-MM-dd");}},},PARTNER:{repr:(order)=>order.get_partner_name(),displayName:_t("Customer"),modelField:"partner_id.complete_name",},};if(this.showCardholderName()){fields.CARDHOLDER_NAME={repr:(order)=>order.get_cardholder_name(),displayName:_t("Cardholder Name"),modelField:"payment_ids.cardholder_name",};}
return fields;}
_getScreenToStatusMap(){return{ProductScreen:"ONGOING",PaymentScreen:"PAYMENT",ReceiptScreen:"RECEIPT",};}
_getOrderStates(){const states=new Map();states.set("ACTIVE_ORDERS",{text:_t("All active orders"),});states.set("ONGOING",{text:_t("Ongoing"),indented:true,});states.set("PAYMENT",{text:_t("Payment"),indented:true,});states.set("RECEIPT",{text:_t("Receipt"),indented:true,});return states;}
_computeSyncedOrdersDomain(){let{fieldName,searchTerm}=this.state.search;if(!searchTerm){return[];}
const searchField=this._getSearchFields()[fieldName];if(searchField&&searchField.modelField&&searchField.modelField!==null){if(searchField.formatSearch){searchTerm=searchField.formatSearch(searchTerm);}
return[[searchField.modelField,"ilike",`%${searchTerm}%`]];}else{return[];}}
async _fetchSyncedOrders(){const screenState=this.pos.ticketScreenState;const domain=this._computeSyncedOrdersDomain();const offset=screenState.offsetByDomain[JSON.stringify(domain)]||0;const config_id=this.pos.config.id;const{ordersInfo,totalCount}=await this.pos.data.call("pos.order","search_paid_order_ids",[],{config_id,domain,limit:30,offset,});if(!screenState.offsetByDomain[JSON.stringify(domain)]){screenState.offsetByDomain[JSON.stringify(domain)]=0;}
screenState.offsetByDomain[JSON.stringify(domain)]+=ordersInfo.length;screenState.totalCount=totalCount;const idsNotInCacheOrOutdated=ordersInfo.filter((orderInfo)=>{const order=this.pos.models["pos.order"].get(orderInfo[0]);if(order&&parseUTCString(orderInfo[1])>parseUTCString(order.date_order)){return true;}
return!order;}).map((info)=>info[0]);if(idsNotInCacheOrOutdated.length>0){await this.pos.data.read("pos.order",Array.from(new Set(idsNotInCacheOrOutdated)));}}}
registry.category("pos_screens").add("TicketScreen",TicketScreen);return __exports;});;

/* /point_of_sale/static/src/app/store/combo_configurator_popup/combo_configurator_popup.js */
odoo.define('@point_of_sale/app/store/combo_configurator_popup/combo_configurator_popup',['@web/core/dialog/dialog','@odoo/owl','@point_of_sale/app/store/pos_hook','@point_of_sale/app/generic_components/product_card/product_card','@web/core/utils/numbers'],function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{Component,useState,onMounted}=require("@odoo/owl");const{usePos}=require("@point_of_sale/app/store/pos_hook");const{ProductCard}=require("@point_of_sale/app/generic_components/product_card/product_card");const{floatIsZero}=require("@web/core/utils/numbers");const ComboConfiguratorPopup=__exports.ComboConfiguratorPopup=class ComboConfiguratorPopup extends Component{static template="point_of_sale.ComboConfiguratorPopup";static components={ProductCard,Dialog};static props={product:Object,getPayload:Function,close:Function,};setup(){this.pos=usePos();this.state=useState({combo:Object.fromEntries(this.props.product.combo_ids.map((combo)=>[combo.id,0])),configuration:{},});onMounted(()=>{this.autoSelectSingleChoices();if(!this.hasMultipleChoices()){this.confirm();}});}
shouldShowCombo(combo){return(combo.combo_item_ids.length>0&&(combo.combo_item_ids.length>1||combo.combo_item_ids[0].product_id.isConfigurable()));}
autoSelectSingleChoices(){this.props.product.combo_ids.forEach((combo)=>{if(combo.combo_item_ids.length===1&&!combo.combo_item_ids[0].product_id.isConfigurable()){this.state.combo[combo.id]=combo.combo_item_ids[0].id;}});}
hasMultipleChoices(){return this.props.product.combo_ids.some((combo)=>this.shouldShowCombo(combo));}
areAllCombosSelected(){return Object.values(this.state.combo).every((x)=>Boolean(x));}
formattedComboPrice(comboItem){const extra_price=comboItem.extra_price;if(floatIsZero(extra_price)){return"";}else{const product=comboItem.product_id;const price=this.pos.getProductPrice(product,extra_price);return this.env.utils.formatCurrency(price);}}
getSelectedComboItems(){return Object.values(this.state.combo).filter((x)=>x).map((x)=>{const combo_item_id=this.pos.models["product.combo.item"].get(x);return{combo_item_id:combo_item_id,configuration:this.state.configuration[combo_item_id.id],};});}
async onClickProduct({product,combo_item},ev){if(product.isConfigurable()&&product.product_template_variant_value_ids.length===0){const payload=await this.pos.openConfigurator(product);if(payload){this.state.configuration[combo_item.id]=payload;}else{this.state.combo[combo_item.combo_id.id]=0;}}}
isArchived(comboItem){const product=comboItem.product_id;const archivedCombinations=product._archived_combinations;if(!archivedCombinations){return false;}
const productCombination=product.product_template_variant_value_ids.map((ptav)=>ptav.id);return archivedCombinations.some((archivedCombination)=>JSON.stringify(archivedCombination)===JSON.stringify(productCombination));}
isArchivedProductSelected(){return this.getSelectedComboItems().some((comboItem)=>this.isArchived(comboItem.combo_item_id));}
confirm(){this.props.getPayload(this.getSelectedComboItems());this.props.close();}}
return __exports;});;

/* /point_of_sale/static/src/app/store/devices_synchronisation.js */
odoo.define('@point_of_sale/app/store/devices_synchronisation',['@web/core/domain'],function(require){'use strict';let __exports={};const{Domain}=require("@web/core/domain");const{DateTime}=luxon;const DevicesSynchronisation=__exports[Symbol.for("default")]=class DevicesSynchronisation{constructor(dynamicModels,staticModels,posStore){this.setup(dynamicModels,staticModels,posStore);}
setup(dynamicModels,staticModels,posStore){this.dynamicModels=new Set(dynamicModels);this.staticModels=new Set(staticModels);this.pos=posStore;this.models=posStore.models;this.pos.data.connectWebSocket("SYNCHRONISATION",this.collect.bind(this));}
async dispatch(data){const recordIds=Object.entries(data).reduce((acc,[model,records])=>{if(!this.staticModels.has(model)){return acc;}
acc[model]=records.map((record)=>record.id);return acc;},{});await this.pos.data.call("pos.config","notify_synchronisation",[odoo.pos_config_id,odoo.pos_session_id,odoo.login_number,recordIds,]);}
async collect(data){const{static_records,session_id,login_number}=data;if(odoo.debug==="assets"){console.info("Incoming synchronisation",data);console.info("Login number",odoo.login_number,login_number);console.info("Session Ids",odoo.pos_session_id,session_id);}
if(login_number==odoo.login_number||session_id!=odoo.pos_session_id){return;}
if(Object.keys(static_records).length){this.processStaticRecords(static_records);}
return await this.readDataFromServer();}
async readDataFromServer(){const serverOpenOrders=this.pos.get_open_orders().filter((o)=>typeof o.id==="number");const recordIds=this.getDynamicRecordServerIds();const domain=this.constructOrdersDomain(serverOpenOrders);const response=await this.pos.data.call("pos.config","read_config_open_orders",[odoo.pos_config_id,domain,recordIds,]);if(Object.keys(response.dynamic_records).length){const missing=await this.pos.data.missingRecursive(response.dynamic_records);const{dynamicR,staticR}=Object.entries(missing).reduce((acc,[model,records])=>{if(this.dynamicModels.has(model)){acc.dynamicR[model]=records;}else if(this.staticModels.has(model)){acc.staticR[model]=records;}
return acc;},{dynamicR:{},staticR:{}});this.processStaticRecords(staticR);this.processDynamicRecords(dynamicR);}
if(Object.keys(response.deleted_record_ids).length){this.processDeletedRecords(response.deleted_record_ids);}}
processStaticRecords(staticRecords){return this.models.loadData(staticRecords,[],false);}
processDynamicRecords(dynamicRecords){return this.models.loadData(dynamicRecords,[],false);}
processDeletedRecords(deletedRecords){for(const[model,ids]of Object.entries(deletedRecords)){const records=this.models[model].readMany(ids);this.models[model].deleteMany(records,{silent:true});}}
constructOrdersDomain(serverOpenOrders){const localDomain=serverOpenOrders.map((o)=>{const dateTime=DateTime.fromSQL(o.write_date);const newDateTime=dateTime.plus({seconds:1});return new Domain(["&",["id","=",o.id],"|",["write_date",">",newDateTime.toFormat("yyyy-MM-dd HH:mm:ss",{numberingSystem:"latn"}),],["state","!=",o.state],]);});const localIds=serverOpenOrders.map((o)=>o.id);let domain=new Domain(["&",["state","=","draft"],["id","not in",localIds]]);domain=Domain.or([domain,...localDomain]);domain=Domain.and([domain,new Domain([["config_id","=",odoo.pos_config_id]])]);return domain.toList();}
getDynamicRecordServerIds(){const recordIds={};const databaseTable=this.pos.data.opts.databaseTable;this.dynamicModels.forEach((model)=>{recordIds[model]=this.models[model].filter((r)=>typeof r.id==="number"&&!databaseTable[model]?.condition(r)).map((r)=>r.id);});return recordIds;}}
return __exports;});;

/* /point_of_sale/static/src/app/store/make_awaitable_dialog.js */
odoo.define('@point_of_sale/app/store/make_awaitable_dialog',['@web/core/confirmation_dialog/confirmation_dialog'],function(require){'use strict';let __exports={};const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");__exports.makeAwaitable=makeAwaitable;function makeAwaitable(dialog,comp,props,options){return new Promise((resolve)=>{dialog.add(comp,{...props,getPayload:(response)=>{resolve(response);},},{...options,onClose:()=>resolve(),});});}
__exports.makeActionAwaitable=makeActionAwaitable;function makeActionAwaitable(action,config,additionalArgs){return new Promise((resolve)=>{action.doAction(config,{...additionalArgs,props:{...additionalArgs?.props,onSave:(record)=>{action.doAction({type:"ir.actions.act_window_close",});resolve(record);},},});});}
__exports.ask=ask;function ask(dialog,props,options,comp=ConfirmationDialog){return new Promise((resolve)=>{dialog.add(comp,{...props,confirm:()=>resolve(true),cancel:()=>resolve(false),},{...options,onClose:()=>resolve(false),});});}
return __exports;});;

/* /point_of_sale/static/src/app/store/models/product_custom_attribute.js */
odoo.define('@point_of_sale/app/store/models/product_custom_attribute',['@web/core/utils/reactive'],function(require){'use strict';let __exports={};const{Reactive}=require("@web/core/utils/reactive");const ProductCustomAttribute=__exports.ProductCustomAttribute=class ProductCustomAttribute extends Reactive{constructor(){super();this.setup(...arguments);}
setup({id,name,custom_value,custom_product_template_attribute_value_id}){this.id=id;this.name=name;this.custom_value=custom_value;this.custom_product_template_attribute_value_id=custom_product_template_attribute_value_id;}
get value(){return this.custom_value;}}
return __exports;});;

/* /point_of_sale/static/src/app/store/opening_control_popup/opening_control_popup.js */
odoo.define('@point_of_sale/app/store/opening_control_popup/opening_control_popup',['@web/core/utils/hooks','@point_of_sale/app/store/pos_hook','@point_of_sale/app/utils/money_details_popup/money_details_popup','@odoo/owl','@web/core/l10n/translation','@point_of_sale/app/generic_components/inputs/input/input','@web/views/fields/parsers','@web/core/dialog/dialog'],function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{usePos}=require("@point_of_sale/app/store/pos_hook");const{MoneyDetailsPopup}=require("@point_of_sale/app/utils/money_details_popup/money_details_popup");const{Component,useState}=require("@odoo/owl");const{_t}=require("@web/core/l10n/translation");const{Input}=require("@point_of_sale/app/generic_components/inputs/input/input");const{parseFloat}=require("@web/views/fields/parsers");const{Dialog}=require("@web/core/dialog/dialog");class CustomDialog extends Dialog{onEscape(){}}
const OpeningControlPopup=__exports.OpeningControlPopup=class OpeningControlPopup extends Component{static template="point_of_sale.OpeningControlPopup";static components={Input,Dialog:CustomDialog};static props={close:Function,};setup(){this.moneyDetails=null;this.pos=usePos();this.dialog=useService("dialog");this.state=useState({notes:"",openingCash:this.env.utils.formatCurrency(this.pos.session.cash_register_balance_start||0,false),});this.hardwareProxy=useService("hardware_proxy");this.ui=useService("ui");}
async confirm(){await this.pos.data.call("pos.session","set_opening_control",[this.pos.session.id,parseFloat(this.state.openingCash),this.state.notes],{},true);this.pos.session.state="opened";this.props.close();}
async openDetailsPopup(){const action=_t("Cash control - opening");this.hardwareProxy.openCashbox(action);this.dialog.add(MoneyDetailsPopup,{moneyDetails:this.moneyDetails,action:action,getPayload:(payload)=>{if(payload){const{total,moneyDetails,moneyDetailsNotes}=payload;this.state.openingCash=this.env.utils.formatCurrency(total,false);if(moneyDetailsNotes){this.state.notes=moneyDetailsNotes;}
this.moneyDetails=moneyDetails;}},context:"Opening",});}
handleInputChange(){if(!this.env.utils.isValidFloat(this.state.openingCash)){return;}
this.state.notes="";}
get cashMethodCount(){return this.pos.config.payment_method_ids.filter((pm)=>pm.is_cash_count).length;}}
return __exports;});;

/* /point_of_sale/static/src/app/store/pos_hook.js */
odoo.define('@point_of_sale/app/store/pos_hook',['@odoo/owl','@web/core/utils/hooks'],function(require){'use strict';let __exports={};const{useState}=require("@odoo/owl");const{useService}=require("@web/core/utils/hooks");__exports.usePos=usePos;function usePos(){return useState(useService("pos"));}
return __exports;});;

/* /point_of_sale/static/src/app/store/pos_store.js */
odoo.define('@point_of_sale/app/store/pos_store',['@web/core/utils/concurrency','@odoo/owl','@web/core/utils/numbers','@web/core/utils/render','@web/core/registry','@web/core/confirmation_dialog/confirmation_dialog','@point_of_sale/utils','@web/core/utils/reactive','@point_of_sale/app/printer/hw_printer','@web/core/network/rpc','@point_of_sale/app/screens/receipt_screen/receipt/order_receipt','@web/core/l10n/translation','@point_of_sale/app/store/opening_control_popup/opening_control_popup','@point_of_sale/app/screens/product_screen/product_screen','@point_of_sale/app/screens/ticket_screen/ticket_screen','@point_of_sale/app/screens/payment_screen/payment_screen','@point_of_sale/app/store/select_lot_popup/select_lot_popup','@point_of_sale/app/store/product_configurator_popup/product_configurator_popup','@point_of_sale/app/store/combo_configurator_popup/combo_configurator_popup','@point_of_sale/app/store/make_awaitable_dialog','@web/core/l10n/dates','@point_of_sale/app/screens/partner_list/partner_list','@point_of_sale/app/screens/scale_screen/scale_screen','@point_of_sale/app/models/utils/compute_combo_items','@point_of_sale/app/models/utils/order_change','@point_of_sale/app/models/utils/tax_utils','@account/helpers/account_tax','@point_of_sale/app/utils/qr_code_popup/qr_code_popup','@point_of_sale/app/screens/action_screen','@web/views/view_dialogs/form_view_dialog','@point_of_sale/app/navbar/cash_move_popup/cash_move_popup','@point_of_sale/app/navbar/closing_popup/closing_popup','@web/core/user','@web/core/utils/timing','@point_of_sale/app/store/devices_synchronisation'],function(require){'use strict';let __exports={};const{Mutex}=require("@web/core/utils/concurrency");const{markRaw}=require("@odoo/owl");const{floatIsZero}=require("@web/core/utils/numbers");const{renderToElement}=require("@web/core/utils/render");const{registry}=require("@web/core/registry");const{AlertDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{deduceUrl,lte,random5Chars,uuidv4}=require("@point_of_sale/utils");const{Reactive}=require("@web/core/utils/reactive");const{HWPrinter}=require("@point_of_sale/app/printer/hw_printer");const{ConnectionLostError}=require("@web/core/network/rpc");const{OrderReceipt}=require("@point_of_sale/app/screens/receipt_screen/receipt/order_receipt");const{_t}=require("@web/core/l10n/translation");const{OpeningControlPopup}=require("@point_of_sale/app/store/opening_control_popup/opening_control_popup");const{ProductScreen}=require("@point_of_sale/app/screens/product_screen/product_screen");const{TicketScreen}=require("@point_of_sale/app/screens/ticket_screen/ticket_screen");const{PaymentScreen}=require("@point_of_sale/app/screens/payment_screen/payment_screen");const{EditListPopup}=require("@point_of_sale/app/store/select_lot_popup/select_lot_popup");const{ProductConfiguratorPopup}=require("@point_of_sale/app/store/product_configurator_popup/product_configurator_popup");const{ComboConfiguratorPopup}=require("@point_of_sale/app/store/combo_configurator_popup/combo_configurator_popup");const{makeAwaitable,ask,makeActionAwaitable,}=require("@point_of_sale/app/store/make_awaitable_dialog");const{deserializeDate}=require("@web/core/l10n/dates");const{PartnerList}=require("@point_of_sale/app/screens/partner_list/partner_list");const{ScaleScreen}=require("@point_of_sale/app/screens/scale_screen/scale_screen");const{computeComboItems}=require("@point_of_sale/app/models/utils/compute_combo_items");const{changesToOrder,getOrderChanges}=require("@point_of_sale/app/models/utils/order_change");const{getTaxesAfterFiscalPosition}=require("@point_of_sale/app/models/utils/tax_utils");const{accountTaxHelpers}=require("@account/helpers/account_tax");const{QRPopup}=require("@point_of_sale/app/utils/qr_code_popup/qr_code_popup");const{ActionScreen}=require("@point_of_sale/app/screens/action_screen");const{FormViewDialog}=require("@web/views/view_dialogs/form_view_dialog");const{CashMovePopup}=require("@point_of_sale/app/navbar/cash_move_popup/cash_move_popup");const{ClosePosPopup}=require("@point_of_sale/app/navbar/closing_popup/closing_popup");const{user}=require("@web/core/user");const{debounce}=require("@web/core/utils/timing");const DevicesSynchronisation=require("@point_of_sale/app/store/devices_synchronisation")[Symbol.for("default")];const{DateTime}=luxon;const PosStore=__exports.PosStore=class PosStore extends Reactive{loadingSkipButtonIsShown=false;mainScreen={name:null,component:null};static serviceDependencies=["bus_service","number_buffer","barcode_reader","hardware_proxy","ui","pos_data","dialog","notification","printer","action","alert","mail.sound_effects",];constructor(){super();this.ready=this.setup(...arguments).then(()=>this);}
async setup(env,{number_buffer,hardware_proxy,barcode_reader,ui,dialog,notification,printer,bus_service,pos_data,action,alert,}){this.env=env;this.numberBuffer=number_buffer;this.barcodeReader=barcode_reader;this.ui=ui;this.dialog=dialog;this.printer=printer;this.bus=bus_service;this.data=pos_data;this.action=action;this.alert=alert;this.sound=env.services["mail.sound_effects"];this.notification=notification;this.unwatched=markRaw({});this.pushOrderMutex=new Mutex();this.company_logo=null;this.company_logo_base64="";this.order_sequence=1;this.printers_category_ids_set=new Set();this.validated_orders_name_server_id_map={};this.numpadMode="quantity";this.mobile_pane="right";this.ticket_screen_mobile_pane="left";this.productListView=window.localStorage.getItem("productListView")||"grid";this.ticketScreenState={offsetByDomain:{},totalCount:0,};this.loadingOrderState=false;this.pendingOrder={write:new Set(),delete:new Set(),create:new Set(),};this.hardwareProxy=hardware_proxy;this.hiddenProductIds=new Set();this.selectedOrderUuid=null;this.selectedPartner=null;this.selectedCategory=null;this.searchProductWord="";this.mainProductVariant={};this.ready=new Promise((resolve)=>{this.markReady=resolve;});this.isScaleScreenVisible=false;this.scaleData=null;this.scaleWeight=0;this.scaleTare=0;this.totalPriceOnScale=0;this.hardwareProxy.pos=this;this.syncingOrders=new Set();await this.initServerData();if(this.useProxy()){await this.connectToProxy();}
this.closeOtherTabs();this.syncAllOrdersDebounced=debounce(this.syncAllOrders,100);}
get firstScreen(){if(odoo.from_backend){const url=new URL(window.location.href);url.searchParams.delete("from_backend");window.history.replaceState({},"",url);if(!this.config.module_pos_hr){this.set_cashier(this.user);}}
return!this.cashier?"LoginScreen":"ProductScreen";}
get idleTimeout(){return[{timeout:300000,action:()=>this.mainScreen.component.name!=="PaymentScreen"&&this.showScreen("SaverScreen"),},{timeout:120000,action:()=>this.mainScreen.component.name==="LoginScreen"&&this.showScreen("SaverScreen"),},];}
async showLoginScreen(){this.reset_cashier();this.showScreen("LoginScreen");this.dialog.closeAll();}
reset_cashier(){this.cashier=false;this._resetConnectedCashier();}
checkPreviousLoggedCashier(){const savedCashier=this._getConnectedCashier();if(savedCashier){this.set_cashier(savedCashier);}}
set_cashier(user){if(!user){return;}
this.cashier=user;this._storeConnectedCashier(user);}
_getConnectedCashier(){const cashier_id=Number(sessionStorage.getItem(`connected_cashier_${this.config.id}`));if(cashier_id&&this.models["res.users"].get(cashier_id)){return this.models["res.users"].get(cashier_id);}
return false;}
_storeConnectedCashier(user){sessionStorage.setItem(`connected_cashier_${this.config.id}`,user.id);}
_resetConnectedCashier(){sessionStorage.removeItem(`connected_cashier_${this.config.id}`);}
useProxy(){return(this.config.is_posbox&&(this.config.iface_electronic_scale||this.config.iface_print_via_proxy||this.config.iface_scan_via_proxy||this.config.iface_customer_facing_display_via_proxy));}
async initServerData(){await this.processServerData();this.data.connectWebSocket("CLOSING_SESSION",this.closingSessionNotification.bind(this));return await this.afterProcessServerData();}
async closingSessionNotification(data){if(data.login_number==this.session.login_number){return;}
try{const paidOrderNotSynced=this.models["pos.order"].filter((order)=>order.state==="paid"&&order.id!=="number");this.addPendingOrder(paidOrderNotSynced.map((o)=>o.id));await this.syncAllOrders({throw:true});this.dialog.add(AlertDialog,{title:_t("Closing Session"),body:_t("The session is being closed by another user. The page will be reloaded."),});}catch{this.dialog.add(AlertDialog,{title:_t("Error"),body:_t("An error occurred while closing the session. Unsynced orders will be available in the next session. The page will be reloaded."),});}finally{const orders=this.models["pos.order"].filter((o)=>typeof o.id!=="number");for(const order of orders){if(!order.finalized){order.state="cancel";}}}
setTimeout(()=>{window.location.reload();},3000);}
get session(){return this.data.models["pos.session"].getFirst();}
async processServerData(){this.config=this.data.models["pos.config"].getFirst();this.company=this.data.models["res.company"].getFirst();this.user=this.data.models["res.users"].getFirst();this.currency=this.config.currency_id;this.pickingType=this.data.models["stock.picking.type"].getFirst();this.models=this.data.models;this.models["pos.session"].getFirst().login_number=parseInt(odoo.login_number);const models=Object.keys(this.models);const dynamicModels=this.data.opts.dynamicModels;const staticModels=models.filter((model)=>!dynamicModels.includes(model));const deviceSync=new DevicesSynchronisation(dynamicModels,staticModels,this);this.deviceSync=deviceSync;this.data.deviceSync=deviceSync;this.checkPreviousLoggedCashier();for(const pm of this.models["pos.payment.method"].getAll()){const PaymentInterface=this.electronic_payment_interfaces[pm.use_payment_terminal];if(PaymentInterface){pm.payment_terminal=new PaymentInterface(this,pm);}}
this.unwatched.printers=[];for(const relPrinter of this.models["pos.printer"].getAll()){const printer=relPrinter.serialize();const HWPrinter=this.create_printer(printer);HWPrinter.config=printer;this.unwatched.printers.push(HWPrinter);for(const id of printer.product_categories_ids){this.printers_category_ids_set.add(id);}}
this.config.iface_printers=!!this.unwatched.printers.length;["product.product","product.pricelist.item"].forEach((model)=>{["create","update"].forEach((event)=>{this.models[model].addEventListener(event,this.computeProductPricelistCache.bind(this));});});if(this.data.loadedIndexedDBProducts&&this.data.loadedIndexedDBProducts.length>0){await this._loadMissingPricelistItems(this.data.loadedIndexedDBProducts);delete this.data.loadedIndexedDBProducts;}
this.computeProductPricelistCache();await this.processProductAttributes();}
cashMove(){this.hardwareProxy.openCashbox(_t("Cash in / out"));return makeAwaitable(this.dialog,CashMovePopup);}
async closeSession(){const info=await this.getClosePosInfo();if(info){this.dialog.add(ClosePosPopup,info);}}
async processProductAttributes(){const productIds=new Set();const productTmplIds=new Set();const productByTmplId={};for(const product of this.models["product.product"].getAll()){if(product.product_template_variant_value_ids.length>0){productTmplIds.add(product.raw.product_tmpl_id);productIds.add(product.id);if(!productByTmplId[product.raw.product_tmpl_id]){productByTmplId[product.raw.product_tmpl_id]=[];}
productByTmplId[product.raw.product_tmpl_id].push(product);}}
if(productIds.size>0){await this.data.searchRead("product.product",["&",["id","not in",[...productIds]],["product_tmpl_id","in",[...productTmplIds]],]);}
for(const product of this.models["product.product"].filter((p)=>!productIds.has(p.id)&&p.product_template_variant_value_ids.length>0)){productByTmplId[product.raw.product_tmpl_id].push(product);}
for(const products of Object.values(productByTmplId)){const nbrProduct=products.length;for(let i=0;i<nbrProduct-1;i++){products[i].available_in_pos=false;this.mainProductVariant[products[i].id]=products[nbrProduct-1];}}}
async onDeleteOrder(order){if(order.get_orderlines().length>0){const confirmed=await ask(this.dialog,{title:_t("Existing orderlines"),body:_t("%s has a total amount of %s, are you sure you want to delete this order?",order.pos_reference,this.env.utils.formatCurrency(order.get_total_with_tax())),});if(!confirmed){return false;}}
const orderIsDeleted=await this.deleteOrders([order]);if(orderIsDeleted){order.uiState.displayed=false;this.afterOrderDeletion();}
return orderIsDeleted;}
afterOrderDeletion(){this.set_order(this.get_open_orders().at(-1)||this.createNewOrder());}
async deleteOrders(orders,serverIds=[]){const ids=new Set();for(const order of orders){if(order&&(await this._onBeforeDeleteOrder(order))){if(typeof order.id==="number"&&Object.keys(order.last_order_preparation_change.lines).length>0){await this.sendOrderInPreparation(order,true);}
const cancelled=this.removeOrder(order,false);this.removePendingOrder(order);if(!cancelled){return false;}else if(typeof order.id==="number"){ids.add(order.id);}}else{return false;}}
if(serverIds.length>0){for(const id of serverIds){if(typeof id!=="number"){continue;}
ids.add(id);}}
if(ids.size>0){await this.data.callRelated("pos.order","action_pos_order_cancel",[Array.from(ids)]);return true;}
return true;}
async _onBeforeDeleteOrder(order){return true;}
computeProductPricelistCache(data){if(data){data=this.models[data.model].readMany(data.ids);}
const date=DateTime.now();let pricelistItems=this.models["product.pricelist.item"].getAll();let products=this.models["product.product"].getAll();if(data&&data.length>0){if(data[0].model.modelName==="product.product"){products=data;}
if(data[0].model.modelName==="product.pricelist.item"){pricelistItems=data;const productTmplIds=new Set(data.map((item)=>item.raw.product_tmpl_id));const productIds=new Set(data.map((item)=>item.raw.product_id));products=products.filter((product)=>productTmplIds.has(product.raw.product_tmpl_id)||productIds.has(product.id));}}
const pushItem=(targetArray,key,item)=>{if(!targetArray[key]){targetArray[key]=[];}
targetArray[key].push(item);};const pricelistRules={};for(const item of pricelistItems){if((item.date_start&&deserializeDate(item.date_start,{zone:"utc"})>date)||(item.date_end&&deserializeDate(item.date_end,{zone:"utc"})<date)){continue;}
const pricelistId=item.pricelist_id.id;if(!pricelistRules[pricelistId]){pricelistRules[pricelistId]={productItems:{},productTmlpItems:{},categoryItems:{},globalItems:[],};}
const productId=item.raw.product_id;if(productId){pushItem(pricelistRules[pricelistId].productItems,productId,item);continue;}
const productTmplId=item.raw.product_tmpl_id;if(productTmplId){pushItem(pricelistRules[pricelistId].productTmlpItems,productTmplId,item);continue;}
const categId=item.raw.categ_id;if(categId){pushItem(pricelistRules[pricelistId].categoryItems,categId,item);}else{pricelistRules[pricelistId].globalItems.push(item);}}
for(const product of products){const applicableRules=product.getApplicablePricelistRules(pricelistRules);for(const pricelistId in applicableRules){if(product.cachedPricelistRules[pricelistId]){const existingRuleIds=product.cachedPricelistRules[pricelistId].map((rule)=>rule.id);const newRules=applicableRules[pricelistId].filter((rule)=>!existingRuleIds.includes(rule.id));product.cachedPricelistRules[pricelistId]=[...newRules,...product.cachedPricelistRules[pricelistId],];}else{product.cachedPricelistRules[pricelistId]=applicableRules[pricelistId];}}}
if(data&&data.length>0&&data[0].model.modelName==="product.product"){this._loadMissingPricelistItems(products);}}
async _loadMissingPricelistItems(products){const validProducts=products.filter((product)=>typeof product.id==="number");if(!validProducts.length){return;}
const product_tmpl_ids=validProducts.map((product)=>product.raw.product_tmpl_id);const product_ids=validProducts.map((product)=>product.id);await this.data.callRelated("pos.session","get_pos_ui_product_pricelist_item_by_product",[odoo.pos_session_id,product_tmpl_ids,product_ids,this.config.id,]);}
async afterProcessServerData(){const paidUnsyncedOrderIds=this.models["pos.order"].filter((order)=>order.isUnsyncedPaid).map((order)=>order.id);if(paidUnsyncedOrderIds.length>0){this.addPendingOrder(paidUnsyncedOrderIds);}
const openOrders=this.data.models["pos.order"].filter((order)=>!order.finalized);this.syncAllOrders();if(!this.config.module_pos_restaurant){this.selectedOrderUuid=openOrders.length?openOrders[openOrders.length-1].uuid:this.add_new_order().uuid;}
this.markReady();this.showScreen(this.firstScreen);await this.deviceSync.readDataFromServer();}
get productListViewMode(){const viewMode=this.productListView&&this.ui.isSmall?this.productListView:"grid";if(viewMode==="grid"){return"d-grid gap-2";}else{return"";}}
get productViewMode(){const viewMode=this.productListView&&this.ui.isSmall?this.productListView:"grid";if(viewMode==="grid"){return"flex-column";}else{return"flex-row-reverse justify-content-between m-1";}}
getProductPriceFormatted(product){const formattedUnitPrice=this.env.utils.formatCurrency(this.getProductPrice(product));if(product.to_weight){return`${formattedUnitPrice}/${product.uom_id.name}`;}else{return formattedUnitPrice;}}
async openConfigurator(product){const attrById=this.models["product.attribute"].getAllBy("id");const attributeLines=product.attribute_line_ids.filter((attr)=>attr.attribute_id?.id in attrById);const attributeLinesValues=attributeLines.map((attr)=>attr.product_template_value_ids);if(attributeLinesValues.some((values)=>values.length>1||values[0].is_custom)){return await makeAwaitable(this.dialog,ProductConfiguratorPopup,{product:product,});}
return{attribute_value_ids:attributeLinesValues.map((values)=>values[0].id),attribute_custom_values:[],price_extra:attributeLinesValues.filter((attr)=>attr[0].attribute_id.create_variant!=="always").reduce((acc,values)=>acc+values[0].price_extra,0),quantity:1,};}
getDefaultSearchDetails(){return{fieldName:"RECEIPT_NUMBER",searchTerm:"",};}
async setDiscountFromUI(line,val){line.set_discount(val);}
getDefaultPricelist(){const current_order=this.get_order();if(current_order){return current_order.pricelist_id;}
return this.config.pricelist_id;}
async set_tip(tip){const currentOrder=this.get_order();const tipProduct=this.config.tip_product_id;let line=currentOrder.lines.find((line)=>line.product_id.id===tipProduct.id);if(line){line.set_unit_price(tip);}else{line=await this.addLineToCurrentOrder({product_id:tipProduct,price_unit:tip},{});}
currentOrder.is_tipped=true;currentOrder.tip_amount=tip;return line;}
selectOrderLine(order,line){order.select_orderline(line);this.numpadMode="quantity";}
async addLineToCurrentOrder(vals,opts={},configure=true){let order=this.get_order();if(!order){order=this.add_new_order();}
this.addPendingOrder([order.id]);return await this.addLineToOrder(vals,order,opts,configure);}
async addLineToOrder(vals,order,opts={},configure=true){let merge=true;order.assert_editable();const options={...opts,};if("price_unit"in vals){merge=false;}
if(typeof vals.product_id=="number"){vals.product_id=this.data.models["product.product"].get(vals.product_id);}
const product=vals.product_id;const values={price_type:"price_unit"in vals?"manual":"original",price_extra:0,price_unit:0,order_id:this.get_order(),qty:1,tax_ids:product.taxes_id.map((tax)=>["link",tax]),...vals,};if(order.doNotAllowRefundAndSales()&&order._isRefundOrder()&&(!values.qty||values.qty>0)){this.dialog.add(AlertDialog,{title:_t("Refund and Sales not allowed"),body:_t("It is not allowed to mix refunds and sales"),});return;}
if(values.product_id.isConfigurable()&&configure){const payload=await this.openConfigurator(values.product_id);if(payload){const productFound=this.models["product.product"].filter((p)=>p.raw?.product_template_variant_value_ids?.length>0).find((p)=>p.raw.product_template_variant_value_ids.every((v)=>payload.attribute_value_ids.includes(v)));Object.assign(values,{attribute_value_ids:payload.attribute_value_ids.filter((a)=>{if(productFound){const attr=this.data.models["product.template.attribute.value"].get(a);return(attr.is_custom||attr.attribute_id.create_variant!=="always");}
return true;}).map((id)=>["link",this.data.models["product.template.attribute.value"].get(id),]),custom_attribute_value_ids:Object.entries(payload.attribute_custom_values).map(([id,cus])=>["create",{custom_product_template_attribute_value_id:this.data.models["product.template.attribute.value"].get(id),custom_value:cus,},]),price_extra:values.price_extra+payload.price_extra,qty:payload.qty||values.qty,product_id:productFound||values.product_id,});}else{return;}}else if(values.product_id.product_template_variant_value_ids.length>0){const priceExtra=values.product_id.product_template_variant_value_ids.filter((attr)=>attr.attribute_id.create_variant!=="always").reduce((acc,attr)=>acc+attr.price_extra,0);values.price_extra+=priceExtra;}
if(values.product_id.isCombo()&&configure){const payload=await makeAwaitable(this.dialog,ComboConfiguratorPopup,{product:values.product_id,});if(!payload){return;}
const comboPrices=computeComboItems(values.product_id,payload,order.pricelist_id,this.data.models["decimal.precision"].getAll(),this.data.models["product.template.attribute.value"].getAllBy("id"));values.combo_line_ids=comboPrices.map((comboItem)=>["create",{product_id:comboItem.combo_item_id.product_id,tax_ids:comboItem.combo_item_id.product_id.taxes_id.map((tax)=>["link",tax,]),combo_item_id:comboItem.combo_item_id,price_unit:comboItem.price_unit,order_id:order,qty:1,attribute_value_ids:comboItem.attribute_value_ids?.map((attr)=>["link",attr,]),custom_attribute_value_ids:Object.entries(comboItem.attribute_custom_values).map(([id,cus])=>["create",{custom_product_template_attribute_value_id:this.data.models["product.template.attribute.value"].get(id),custom_value:cus,},]),},]);}
const code=opts.code;if(values.product_id.isTracked()&&(configure||code)){let pack_lot_ids={};const packLotLinesToEdit=(!values.product_id.isAllowOnlyOneLot()&&this.get_order().get_orderlines().filter((line)=>!line.get_discount()).find((line)=>line.product_id.id===values.product_id.id)?.getPackLotLinesToEdit())||[];if(code&&code.type==="lot"){const modifiedPackLotLines=Object.fromEntries(packLotLinesToEdit.filter((item)=>item.id).map((item)=>[item.id,item.text]));const newPackLotLines=[{lot_name:code.code}];pack_lot_ids={modifiedPackLotLines,newPackLotLines};}else{pack_lot_ids=await this.editLots(values.product_id,packLotLinesToEdit);}
if(!pack_lot_ids){return;}else{const packLotLine=pack_lot_ids.newPackLotLines;values.pack_lot_ids=packLotLine.map((lot)=>["create",lot]);}}
if(values.product_id.to_weight&&this.config.iface_electronic_scale&&configure){if(values.product_id.isScaleAvailable){this.isScaleScreenVisible=true;this.scaleData={productName:values.product_id?.display_name,uomName:values.product_id.uom_id?.name,uomRounding:values.product_id.uom_id?.rounding,productPrice:this.getProductPrice(values.product_id),};const weight=await makeAwaitable(this.env.services.dialog,ScaleScreen,this.scaleData);if(weight){values.qty=weight;}
this.isScaleScreenVisible=false;this.scaleWeight=0;this.scaleTare=0;this.totalPriceOnScale=0;}else{await values.product_id._onScaleNotAvailable();}}
if(!values.product_id.isCombo()&&vals.price_unit===undefined){values.price_unit=values.product_id.get_price(order.pricelist_id,values.qty);}
const isScannedProduct=opts.code&&opts.code.type==="product";if(values.price_extra&&!isScannedProduct){const price=values.product_id.get_price(order.pricelist_id,values.qty,values.price_extra);values.price_unit=price;}
const line=this.data.models["pos.order.line"].create({...values,order_id:order});line.setOptions(options);this.selectOrderLine(order,line);if(configure){this.numberBuffer.reset();}
const selectedOrderline=order.get_selected_orderline();if(options.draftPackLotLines&&configure){selectedOrderline.setPackLotLines({...options.draftPackLotLines,setQuantity:options.quantity===undefined,});}
let to_merge_orderline;for(const curLine of order.lines){if(curLine.id!==line.id){if(curLine.can_be_merged_with(line)&&merge!==false){to_merge_orderline=curLine;}}}
if(to_merge_orderline){to_merge_orderline.merge(line);line.delete();this.selectOrderLine(order,to_merge_orderline);}else if(!selectedOrderline){this.selectOrderLine(order,order.get_last_orderline());}
if(configure){this.numberBuffer.reset();}
order.recomputeOrderData();if(configure){this.numberBuffer.reset();}
this.hasJustAddedProduct=true;clearTimeout(this.productReminderTimeout);this.productReminderTimeout=setTimeout(()=>{this.hasJustAddedProduct=false;},3000);return line;}
create_printer(config){const url=deduceUrl(config.proxy_ip||"");return new HWPrinter({url});}
async _loadFonts(){return new Promise(function(resolve,reject){waitForWebfonts(["Lato","Inconsolata"],function(){resolve();});setTimeout(resolve,5000);});}
setSelectedCategory(categoryId){if(categoryId===this.selectedCategory?.id){if(this.selectedCategory.parent_id){this.selectedCategory=this.selectedCategory.parent_id;}else{this.selectedCategory=this.models["pos.category"].get(0);}}else{this.selectedCategory=this.models["pos.category"].get(categoryId);}}
setScaleWeight(weight){this.scaleWeight=weight;}
setScaleTare(tare){this.scaleTare=tare;}
removeOrder(order,removeFromServer=true){if(this.isOpenOrderShareable()||removeFromServer){if(typeof order.id==="number"&&!order.finalized){this.addPendingOrder([order.id],true);this.syncAllOrdersDebounced();}}
if(typeof order.id==="string"&&order.finalized){this.addPendingOrder([order.id]);return;}
return this.data.localDeleteCascade(order);}
get_cashier(){this.user.role=this.user.raw.role;return this.user;}
get_cashier_user_id(){return this.user.id;}
get orderPreparationCategories(){if(this.printers_category_ids_set){return new Set([...this.printers_category_ids_set]);}
return new Set();}
cashierHasPriceControlRights(){return!this.config.restrict_price_control||this.get_cashier()._role=="manager";}
get currentSequenceNumber(){return this._sequenceNumber||1;}
getNextSequenceNumber(){const sessionId=this.session.id;const configId=this.config.id;const storedData=localStorage.getItem("pos.sequenceNumbers")||"{}";const cache=JSON.parse(storedData);if(!cache[configId]){cache[configId]={};}
for(const sid in cache[configId]){if(sid!==String(sessionId)){delete cache[configId][sid];}}
if(!cache[configId][sessionId]){cache[configId][sessionId]=0;}
cache[configId][sessionId]+=1;this._sequenceNumber=cache[configId][sessionId];localStorage.setItem("pos.sequenceNumbers",JSON.stringify(cache));return this._sequenceNumber;}
generate_unique_id(){function zero_pad(num,size){var s=""+num;while(s.length<size){s="0"+s;}
return s;}
return(zero_pad(this.session.id,5)+"-"+
zero_pad(this.session.login_number,3)+"-"+
zero_pad(this.getNextSequenceNumber(),4));}
createNewOrder(data={}){const fiscalPosition=this.models["account.fiscal.position"].find((fp)=>fp.id===this.config.default_fiscal_position_id?.id);const uniqId=this.generate_unique_id();const order=this.models["pos.order"].create({session_id:this.session,company_id:this.company,config_id:this.config,picking_type_id:this.pickingType,user_id:this.user,sequence_number:this.currentSequenceNumber,access_token:uuidv4(),ticket_code:random5Chars(),fiscal_position_id:fiscalPosition,name:_t("Order %s",uniqId),pos_reference:uniqId,...data,});order.set_pricelist(this.config.pricelist_id);return order;}
add_new_order(data={}){if(this.get_order()){this.get_order().updateSavedQuantity();}
const order=this.createNewOrder(data);this.selectedOrderUuid=order.uuid;this.searchProductWord="";return order;}
selectNextOrder(){const orders=this.models["pos.order"].filter((order)=>!order.finalized);if(orders.length>0){this.selectedOrderUuid=orders[0].uuid;}else{this.add_new_order();}}
addPendingOrder(orderIds,remove=false){if(remove){for(const id of orderIds){this.pendingOrder["create"].delete(id);this.pendingOrder["write"].delete(id);}
this.pendingOrder["delete"].add(...orderIds);return true;}
for(const id of orderIds){if(typeof id==="number"){this.pendingOrder["write"].add(id);}else{this.pendingOrder["create"].add(id);}}
return true;}
getPendingOrder(){const orderToCreate=this.models["pos.order"].filter((order)=>this.pendingOrder.create.has(order.id)&&order.hasItemsOrPayLater);const orderToUpdate=this.models["pos.order"].readMany(Array.from(this.pendingOrder.write));const orderToDelele=this.models["pos.order"].readMany(Array.from(this.pendingOrder.delete));return{orderToDelele,orderToCreate,orderToUpdate,};}
getOrderIdsToDelete(){return[...this.pendingOrder.delete];}
removePendingOrder(order){this.pendingOrder["create"].delete(order.id);this.pendingOrder["write"].delete(order.id);this.pendingOrder["delete"].delete(order.id);return true;}
clearPendingOrder(){this.pendingOrder={create:new Set(),write:new Set(),delete:new Set(),};}
getSyncAllOrdersContext(orders,options={}){return{config_id:this.config.id,login_number:this.session.login_number,...(options.context||{}),};}
async preSyncAllOrders(orders){}
postSyncAllOrders(orders){}
async syncAllOrders(options={}){const{orderToCreate,orderToUpdate}=this.getPendingOrder();let orders=options.orders||[...orderToCreate,...orderToUpdate];orders=orders.filter((order)=>!this.syncingOrders.has(order.id));try{const orderIdsToDelete=this.getOrderIdsToDelete();if(orderIdsToDelete.length>0){await this.deleteOrders([],orderIdsToDelete);}
const context=this.getSyncAllOrdersContext(orders,options);await this.preSyncAllOrders(orders);if(orders.length===0){return;}
orders.forEach((order)=>this.syncingOrders.add(order.id));for(const order of orders){order.recomputeOrderData();}
const serializedOrder=orders.map((order)=>order.serialize({orm:true,clear:true}));const data=await this.data.call("pos.order","sync_from_ui",[serializedOrder],{context,});const missingRecords=await this.data.missingRecursive(data);const newData=this.models.loadData(missingRecords,[],false);for(const line of newData["pos.order.line"]){const refundedOrderLine=line.refunded_orderline_id;if(refundedOrderLine){const order=refundedOrderLine.order_id;if(order){delete order.uiState.lineToRefund[refundedOrderLine.uuid];}
refundedOrderLine.refunded_qty+=Math.abs(line.qty);}}
this.postSyncAllOrders(newData["pos.order"]);if(data["pos.session"].length>0){const session=this.models["pos.session"].sort((a,b)=>a.id-b.id)[0];session.delete();this.models["pos.order"].getAll().filter((order)=>order.state==="draft").forEach((order)=>(order.session_id=this.session));}
this.clearPendingOrder();return newData["pos.order"];}catch(error){if(options.throw){throw error;}
console.warn("Offline mode active, order will be synced later");return error;}finally{orders.forEach((order)=>this.syncingOrders.delete(order.id));}}
push_single_order(order){return this.pushOrderMutex.exec(()=>this.syncAllOrders(order));}
setLoadingOrderState(bool){this.loadingOrderState=bool;}
async pay(){const currentOrder=this.get_order();if(!currentOrder.canPay()){return;}
if(currentOrder.lines.some((line)=>line.get_product().tracking!=="none"&&!line.has_valid_product_lot())&&(this.pickingType.use_create_lots||this.pickingType.use_existing_lots)){const confirmed=await ask(this.env.services.dialog,{title:_t("Some Serial/Lot Numbers are missing"),body:_t("You are trying to sell products with serial/lot numbers, but some of them are not set.\nWould you like to proceed anyway?"),});if(confirmed){this.mobile_pane="right";this.env.services.pos.showScreen("PaymentScreen",{orderUuid:this.selectedOrderUuid,});}}else{this.mobile_pane="right";this.env.services.pos.showScreen("PaymentScreen",{orderUuid:this.selectedOrderUuid,});}}
async getServerOrders(){return await this.loadServerOrders([["config_id","in",[...this.config.raw.trusted_config_ids,this.config.id]],["state","=","draft"],]);}
async loadServerOrders(domain){const orders=await this.data.searchRead("pos.order",domain);for(const order of orders){order.update({config_id:this.config,session_id:this.session,});}
return orders;}
async getProductInfo(product,quantity,priceExtra=0){const order=this.get_order();const productInfo=await this.data.call("product.product","get_product_info_pos",[[product.id],product.get_price(order.pricelist_id,quantity,priceExtra),quantity,this.config.id,]);const priceWithoutTax=productInfo["all_prices"]["price_without_tax"];const margin=priceWithoutTax-product.standard_price;const orderPriceWithoutTax=order.get_total_without_tax();const orderCost=order.get_total_cost();const orderMargin=orderPriceWithoutTax-orderCost;const costCurrency=this.env.utils.formatCurrency(product.standard_price);const marginCurrency=this.env.utils.formatCurrency(margin);const marginPercent=priceWithoutTax?Math.round((margin/priceWithoutTax)*10000)/100:0;const orderPriceWithoutTaxCurrency=this.env.utils.formatCurrency(orderPriceWithoutTax);const orderCostCurrency=this.env.utils.formatCurrency(orderCost);const orderMarginCurrency=this.env.utils.formatCurrency(orderMargin);const orderMarginPercent=orderPriceWithoutTax?Math.round((orderMargin/orderPriceWithoutTax)*10000)/100:0;return{costCurrency,marginCurrency,marginPercent,orderPriceWithoutTaxCurrency,orderCostCurrency,orderMarginCurrency,orderMarginPercent,productInfo,};}
async getClosePosInfo(){return await this.data.call("pos.session","get_closing_control_data",[[this.session.id]]);}
get_order(){if(!this.selectedOrderUuid){return undefined;}
return this.models["pos.order"].getBy("uuid",this.selectedOrderUuid);}
get selectedOrder(){return this.get_order();}
set_order(order,options){if(this.get_order()){this.get_order().updateSavedQuantity();}
this.selectedOrderUuid=order?.uuid;}
get_open_orders(){return this.models["pos.order"].filter((o)=>!o.finalized&&o.uiState.displayed);}
async push_orders_with_closing_popup(opts={}){try{await this.syncAllOrders(opts);return true;}catch(error){console.warn(error);const reason=this.failed?_t("Some orders could not be submitted to "+"the server due to configuration errors. "+"You can exit the Point of Sale, but do "+"not close the session before the issue "+"has been resolved."):_t("Some orders could not be submitted to "+"the server due to internet connection issues. "+"You can exit the Point of Sale, but do "+"not close the session before the issue "+"has been resolved.");await ask(this.dialog,{title:_t("Offline Orders"),body:reason,});return false;}}
prepareProductBaseLineForTaxesComputationExtraValues(product,p=false){const currency=this.config.currency_id;const extraValues={currency_id:currency};const priceList=this.getDefaultPricelist();const priceUnit=p===false?product.get_price(priceList,1):p;let taxes=product.taxes_id;const order=this.get_order();if(order&&order.fiscal_position_id){taxes=getTaxesAfterFiscalPosition(taxes,order.fiscal_position_id,this.models);}
return{...extraValues,product_id:accountTaxHelpers.eval_taxes_computation_prepare_product_values(this.config._product_default_values,product),quantity:1,price_unit:priceUnit,tax_ids:taxes,};}
getProducePriceDetails(product,p=false){const company=this.company;const baseLine=accountTaxHelpers.prepare_base_line_for_taxes_computation({},this.prepareProductBaseLineForTaxesComputationExtraValues(product,p));accountTaxHelpers.add_tax_details_in_base_line(baseLine,company);accountTaxHelpers.round_base_lines_tax_details([baseLine],company);const results=baseLine.tax_details;for(const taxData of results.taxes_data){Object.assign(taxData,taxData.tax);}
return results;}
getProductPrice(product,p=false){const taxesData=this.getProducePriceDetails(product,p);if(this.config.iface_tax_included==="total"){return taxesData.total_included;}else{return taxesData.total_excluded;}}
getPendingPaymentLine(terminalName){for(const order of this.models["pos.order"].getAll()){const paymentLine=order.payment_ids.find((paymentLine)=>paymentLine.payment_method_id.use_payment_terminal===terminalName&&!paymentLine.is_done());if(paymentLine){return paymentLine;}}}
get linesToRefund(){return this.models["pos.order"].reduce((acc,order)=>{acc.push(...Object.values(order.uiState.lineToRefund));return acc;},[]);}
isProductQtyZero(qty){const dp=this.models["decimal.precision"].find((dp)=>dp.name==="Product Unit of Measure");return floatIsZero(qty,dp.digits);}
disallowLineQuantityChange(){return false;}
restrictLineDiscountChange(){return false;}
restrictLinePriceChange(){return false;}
getCurrencySymbol(){return this.currency?this.currency.symbol:"$";}
isOpenOrderShareable(){return this.config.raw.trusted_config_ids.length>0;}
switchPane(){this.mobile_pane=this.mobile_pane==="left"?"right":"left";}
switchPaneTicketScreen(){this.ticket_screen_mobile_pane=this.ticket_screen_mobile_pane==="left"?"right":"left";}
async logEmployeeMessage(action,message){await this.data.call("pos.session","log_partner_message",[this.session.id,this.user.partner_id.id,action,message],{},true);}
showScreen(name,props){if(name==="PaymentScreen"&&!props.orderUuid){name="ProductScreen";}
if(name==="ProductScreen"){this.get_order()?.deselect_orderline();}
const component=registry.category("pos_screens").get(name);if((component.updatePreviousScreen??true)&&(this.mainScreen.component?.updatePreviousScreen??true)){this.previousScreen=this.mainScreen.component?.name;}
this.mainScreen={component,props};if(component.storeOnOrder??true){this.get_order()?.set_screen_data({name,props});}}
orderExportForPrinting(order){const headerData=this.getReceiptHeaderData(order);const baseUrl=this.session._base_url;return order.export_for_printing(baseUrl,headerData);}
async printReceipt({basic=false,order=this.get_order(),printBillActionTriggered=false,}={}){const result=await this.printer.print(OrderReceipt,{data:this.orderExportForPrinting(order),formatCurrency:this.env.utils.formatCurrency,basic_receipt:basic,},{webPrintFallback:true});if(!printBillActionTriggered){order.nb_print+=1;if(typeof order.id==="number"&&result){await this.data.write("pos.order",[order.id],{nb_print:order.nb_print});}}
return true;}
getOrderChanges(skipped=false,order=this.get_order()){return getOrderChanges(order,skipped,this.orderPreparationCategories);}
async sendOrderInPreparation(order,cancelled=false){if(this.printers_category_ids_set.size){try{const orderChange=changesToOrder(order,false,this.orderPreparationCategories,cancelled);this.printChanges(order,orderChange);}catch(e){console.info("Failed in printing the changes in the order",e);}}
order.updateLastOrderChange();}
async sendOrderInPreparationUpdateLastChange(o,cancelled=false){if(this.data.network.offline){this.data.network.warningTriggered=false;throw new ConnectionLostError();}
await this.sendOrderInPreparation(o,cancelled);}
async printChanges(order,orderChange){const unsuccedPrints=[];orderChange.new.sort((a,b)=>{const sequenceA=a.pos_categ_sequence;const sequenceB=b.pos_categ_sequence;if(sequenceA===0&&sequenceB===0){return a.pos_categ_id-b.pos_categ_id;}
return sequenceA-sequenceB;});for(const printer of this.unwatched.printers){const changes=this._getPrintingCategoriesChanges(printer.config.product_categories_ids,orderChange);const anyChangesToPrint=Object.values(changes).some((change)=>change.length);const diningModeUpdate=orderChange.modeUpdate;if(diningModeUpdate||anyChangesToPrint){const printed=await this.printReceipts(order,printer,"New",changes.new,true,diningModeUpdate);if(!printed){unsuccedPrints.push("Detailed Receipt");}}else{const toPrintArray=this.preparePrintingData(order,changes);for(const[key,value]of Object.entries(toPrintArray)){const printed=await this.printReceipts(order,printer,key,value,false);if(!printed){unsuccedPrints.push(key);}}
if(orderChange.generalNote){const printed=await this.printReceipts(order,printer,"Message",[]);if(!printed){unsuccedPrints.push("General Message");}}}}
if(unsuccedPrints.length){const failedReceipts=unsuccedPrints.join(", ");this.dialog.add(AlertDialog,{title:_t("Printing failed"),body:_t("Failed in printing %s changes of the order",failedReceipts),});}}
async getRenderedReceipt(order,title,lines,fullReceipt=false,diningModeUpdate){const time=DateTime.now().toFormat("HH:mm");const printingChanges={table_name:order.table_id?order.table_id.table_number:"",config_name:order.config.name,time:time,tracking_number:order.tracking_number,takeaway:order.config.takeaway&&order.takeaway,employee_name:order.employee_id?.name||order.user_id?.name,order_note:order.general_note,diningModeUpdate:diningModeUpdate,};const receipt=renderToElement("point_of_sale.OrderChangeReceipt",{operational_title:title,changes:printingChanges,changedlines:lines,fullReceipt:fullReceipt,});return receipt;}
async printReceipts(order,printer,title,lines,fullReceipt=false,diningModeUpdate){const receipt=await this.getRenderedReceipt(order,title,lines,fullReceipt,diningModeUpdate);const result=await printer.printReceipt(receipt);return result.successful;}
preparePrintingData(order,changes){const order_modifications={};const pdisChangedLines=order.last_order_preparation_change.lines;if(changes["new"].length){order_modifications["New"]=changes["new"];}
if(changes["noteUpdated"].length){order_modifications["Note"]=changes["noteUpdated"];}
if(changes["cancelled"].length){if(changes["new"].length){order_modifications["Cancelled"]=changes["cancelled"];}else{const allCancelled=changes["cancelled"].every((line)=>{const pdisLine=pdisChangedLines[line.uuid+" - "+line.note];return!pdisLine||pdisLine.quantity<=line.quantity;});if(allCancelled&&Object.keys(pdisChangedLines).length==changes["cancelled"].length){order_modifications["Cancel"]=changes["cancelled"];}else{order_modifications["Cancelled"]=changes["cancelled"];}}}
return order_modifications;}
_getPrintingCategoriesChanges(categories,currentOrderChange){const filterFn=(change)=>{const product=this.models["product.product"].get(change["product_id"]);const categoryIds=product.parentPosCategIds;for(const categoryId of categoryIds){if(categories.includes(categoryId)){return true;}}};return{new:currentOrderChange["new"].filter(filterFn),cancelled:currentOrderChange["cancelled"].filter(filterFn),noteUpdated:currentOrderChange["noteUpdated"].filter(filterFn),};}
closeScreen(){this.addOrderIfEmpty();const{name:screenName}=this.get_order().get_screen_data();const props={};if(screenName==="PaymentScreen"){props.orderUuid=this.selectedOrderUuid;}
this.showScreen(screenName,props);}
addOrderIfEmpty(){if(!this.get_order()){this.add_new_order();}}
connectToProxy(){return new Promise((resolve,reject)=>{this.barcodeReader?.disconnectFromProxy();this.loadingSkipButtonIsShown=true;this.hardwareProxy.autoconnect({force_ip:this.config.proxy_ip}).then(()=>{if(this.config.iface_scan_via_proxy){this.barcodeReader?.connectToProxy();}
resolve();},(statusText,url)=>{if(statusText=="error"&&window.location.protocol=="https:"){reject({title:_t("HTTPS connection to IoT Box failed"),body:_t("Make sure you are using IoT Box v18.12 or higher. Navigate to %s to accept the certificate of your IoT Box.",url),popup:"alert",});}else{resolve();}});});}
async editPartner(partner){const record=await makeActionAwaitable(this.action,"point_of_sale.res_partner_action_edit_pos",{props:{resId:partner?.id},});const newPartner=await this.data.read("res.partner",record.config.resIds);return newPartner[0];}
async editProduct(product){this.action.doAction(product?"point_of_sale.product_product_action_edit_pos":"point_of_sale.product_product_action_add_pos",{props:{resId:product?.id,onSave:(record)=>{this.data.read("product.product",[record.evalContext.id]);this.action.doAction({type:"ir.actions.act_window_close",});},},});}
async allowProductCreation(){return await user.hasGroup("base.group_system");}
async orderDetails(order){this.dialog.add(FormViewDialog,{resModel:"pos.order",resId:order.id,onRecordSaved:async(record)=>{await this.data.read("pos.order",[record.evalContext.id]);await this.data.read("pos.payment",order.payment_ids.map((p)=>p.id));this.action.doAction({type:"ir.actions.act_window_close",});},});}
async closePos(){this._resetConnectedCashier();if(!this){this.redirectToBackend();}
if(this.session.state==="opening_control"){const data=await this.data.call("pos.session","delete_opening_control_session",[this.session.id,]);if(data.status==="success"){this.redirectToBackend();}}
const syncSuccess=await this.push_orders_with_closing_popup();if(syncSuccess){this.redirectToBackend();}}
async selectPricelist(pricelist){await this.get_order().set_pricelist(pricelist);}
async selectPartner(){const currentOrder=this.get_order();if(!currentOrder){return false;}
const currentPartner=currentOrder.get_partner();if(currentPartner&&currentOrder.getHasRefundLines()){this.dialog.add(AlertDialog,{title:_t("Can't change customer"),body:_t("This order already has refund lines for %s. We can't change the customer associated to it. Create a new order for the new customer.",currentPartner.name),});return currentPartner;}
const payload=await makeAwaitable(this.dialog,PartnerList,{partner:currentPartner,getPayload:(newPartner)=>currentOrder.set_partner(newPartner),});if(payload){currentOrder.set_partner(payload);}else{currentOrder.set_partner(false);}
return currentPartner;}
async editLots(product,packLotLinesToEdit){const isAllowOnlyOneLot=product.isAllowOnlyOneLot();let canCreateLots=this.pickingType.use_create_lots||!this.pickingType.use_existing_lots;let existingLots=[];try{existingLots=await this.data.call("pos.order.line","get_existing_lots",[this.company.id,product.id],{context:{config_id:this.config.id,},});if(!canCreateLots&&(!existingLots||existingLots.length===0)){this.dialog.add(AlertDialog,{title:_t("No existing serial/lot number"),body:_t("There is no serial/lot number for the selected product, and their creation is not allowed from the Point of Sale app."),});return null;}}catch(ex){console.error("Collecting existing lots failed: ",ex);const confirmed=await ask(this.dialog,{title:_t("Server communication problem"),body:_t("The existing serial/lot numbers could not be retrieved. \nContinue without checking the validity of serial/lot numbers ?"),confirmLabel:_t("Yes"),cancelLabel:_t("No"),});if(!confirmed){return null;}
canCreateLots=true;}
const usedLotsQty=this.models["pos.pack.operation.lot"].filter((lot)=>lot.pos_order_line_id?.product_id?.id===product.id&&lot.pos_order_line_id?.order_id?.state==="draft").reduce((acc,lot)=>{if(!acc[lot.lot_name]){acc[lot.lot_name]={total:0,currentOrderCount:0};}
acc[lot.lot_name].total+=lot.pos_order_line_id?.qty||0;if(lot.pos_order_line_id?.order_id?.id===this.selectedOrder.id){acc[lot.lot_name].currentOrderCount+=lot.pos_order_line_id?.qty||0;}
return acc;},{});existingLots=existingLots.filter((lot)=>lot.product_qty>(usedLotsQty[lot.name]?.total||0));const isLotNameUsed=(itemValue)=>{const totalQty=existingLots.find((lt)=>lt.name==itemValue)?.product_qty||0;const usedQty=usedLotsQty[itemValue]?usedLotsQty[itemValue].total-usedLotsQty[itemValue].currentOrderCount:0;return usedQty?usedQty>=totalQty:false;};const existingLotsName=existingLots.map((l)=>l.name);const payload=await makeAwaitable(this.dialog,EditListPopup,{title:_t("Lot/Serial Number(s) Required"),name:product.display_name,isSingleItem:isAllowOnlyOneLot,array:packLotLinesToEdit,options:existingLotsName,customInput:canCreateLots,uniqueValues:product.tracking==="serial",isLotNameUsed:isLotNameUsed,});if(payload){const modifiedPackLotLines=Object.fromEntries(payload.filter((item)=>item.id).map((item)=>[item.id,item.text]));const newPackLotLines=payload.filter((item)=>!item.id).map((item)=>({lot_name:item.text}));return{modifiedPackLotLines,newPackLotLines};}else{return null;}}
openOpeningControl(){if(this.shouldShowOpeningControl()){this.dialog.add(OpeningControlPopup,{},{onClose:()=>{if(this.session.state!=="opened"&&this.mainScreen.component===ProductScreen){this.closePos();}},});}}
shouldShowOpeningControl(){return this.session.state=="opening_control";}
closeOtherTabs(){localStorage["message"]="";localStorage["message"]=JSON.stringify({message:"close_tabs",session:this.session.id,});window.addEventListener("storage",(event)=>{if(event.key==="message"&&event.newValue){const msg=JSON.parse(event.newValue);if(msg.message==="close_tabs"&&msg.session==this.session.id){console.info("POS / Session opened in another window. EXITING POS");this.closePos();}}},false);}
showBackButton(){return((this.ui.isSmall&&this.mainScreen.component!==ProductScreen)||(this.mobile_pane==="left"&&this.mainScreen.component===ProductScreen));}
async onClickBackButton(){if(this.mainScreen.component===TicketScreen){if(this.ticket_screen_mobile_pane=="left"){this.closeScreen();}else{this.ticket_screen_mobile_pane="left";}}else if(this.mobile_pane=="left"||[PaymentScreen,ActionScreen].includes(this.mainScreen.component)){this.mobile_pane=this.mainScreen.component===PaymentScreen?"left":"right";this.showScreen("ProductScreen");}}
showSearchButton(){if(this.mainScreen.component===ProductScreen){return this.ui.isSmall?this.mobile_pane==="right":true;}
return false;}
doNotAllowRefundAndSales(){return false;}
getReceiptHeaderData(order){return{company:this.company,cashier:_t("Served by %s",order?.getCashierName()||this.get_cashier()?.name),header:this.config.receipt_header,};}
async showQR(payment){let qr;try{qr=await this.data.call("pos.payment.method","get_qr_code",[[payment.payment_method_id.id],payment.amount,payment.pos_order_id.name+" "+payment.pos_order_id.tracking_number,"",this.currency.id,payment.pos_order_id.partner_id?.id,]);}catch(error){qr=payment.payment_method_id.default_qr;if(!qr){let message;if(error instanceof ConnectionLostError){message=_t("Connection to the server has been lost. Please check your internet connection.");}else{message=error.data.message;}
this.env.services.dialog.add(AlertDialog,{title:_t("Failure to generate Payment QR Code"),body:message,});return false;}}
return await ask(this.env.services.dialog,{title:payment.name,line:payment,order:payment.pos_order_id,qrCode:qr,},{},QRPopup);}
get isTicketScreenShown(){return this.mainScreen.component===TicketScreen;}
_shouldLoadOrders(){return this.config.raw.trusted_config_ids.length>0;}
redirectToBackend(){window.location="/odoo/action-point_of_sale.action_client_pos_menu";}
getDisplayDeviceIP(){return this.config.proxy_ip;}
isProductVariant(product){return(this.models["product.product"].filter((p)=>p.raw.product_tmpl_id===product.raw.product_tmpl_id).length>1);}
getPaymentMethodDisplayText(pm,order){const{cash_rounding,only_round_cash_method}=this.config;const amount=order.getDefaultAmountDueToPayIn(pm);const fmtAmount=this.env.utils.formatCurrency(amount,false);if(lte(amount,0,{decimals:this.currency.decimal_places})||!cash_rounding||(only_round_cash_method&&pm.type!=="cash")){return pm.name;}else{return`${pm.name} (${fmtAmount})`;}}}
PosStore.prototype.electronic_payment_interfaces={};__exports.register_payment_method=register_payment_method;function register_payment_method(use_payment_terminal,ImplementedPaymentInterface){PosStore.prototype.electronic_payment_interfaces[use_payment_terminal]=ImplementedPaymentInterface;}
const posService=__exports.posService={dependencies:PosStore.serviceDependencies,async start(env,deps){return new PosStore(env,deps).ready;},};registry.category("services").add("pos",posService);return __exports;});;

/* /point_of_sale/static/src/app/store/product_configurator_popup/product_configurator_popup.js */
odoo.define('@point_of_sale/app/store/product_configurator_popup/product_configurator_popup',['@web/core/dialog/dialog','@odoo/owl','@point_of_sale/app/store/pos_hook','@web/core/utils/hooks','@point_of_sale/app/components/product_info_banner/product_info_banner'],function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{Component,onMounted,useRef,useState,useSubEnv}=require("@odoo/owl");const{usePos}=require("@point_of_sale/app/store/pos_hook");const{useRefListener,useService}=require("@web/core/utils/hooks");const{ProductInfoBanner}=require("@point_of_sale/app/components/product_info_banner/product_info_banner");const BaseProductAttribute=__exports.BaseProductAttribute=class BaseProductAttribute extends Component{static template="";static props=["attributeLine"];setup(){this.attributeLine=this.props.attributeLine;this.values=this.attributeLine.product_template_value_ids;this.state=useState({attribute_value_ids:this.values[0].id.toString(),custom_value:"",});onMounted(()=>{this.env.attribute_components.push(this);this.env.computeProductProduct();});}
getValue(){const attribute_value_ids=this.attributeLine.attribute_id.display_type==="multi"?this.values.filter((val)=>this.state.attribute_value_ids[val.id]):[this.values.find((val)=>val.id===parseInt(this.state.attribute_value_ids))];const extra=attribute_value_ids.reduce((acc,val)=>acc+val.price_extra,0);const valueIds=attribute_value_ids.map((val)=>val.id);const value=attribute_value_ids.map((val)=>{if(val.is_custom&&this.state.custom_value){return`${val.name}: ${this.state.custom_value}`;}
return val.name;}).join(", ");const hasCustom=attribute_value_ids.some((val)=>val.is_custom);return{value,valueIds,custom_value:this.state.custom_value,extra,hasCustom,};}
getFormatPriceExtra(val){const sign=val<0?"- ":"+ ";return sign+this.env.utils.formatCurrency(Math.abs(val));}}
const RadioProductAttribute=__exports.RadioProductAttribute=class RadioProductAttribute extends BaseProductAttribute{static template="point_of_sale.RadioProductAttribute";setup(){super.setup();this.root=useRef("root");onMounted(this.onMounted);}
onMounted(){this.root.el.querySelector("input[type=radio]").checked=true;}}
const PillsProductAttribute=__exports.PillsProductAttribute=class PillsProductAttribute extends BaseProductAttribute{static template="point_of_sale.PillsProductAttribute";}
const SelectProductAttribute=__exports.SelectProductAttribute=class SelectProductAttribute extends BaseProductAttribute{static template="point_of_sale.SelectProductAttribute";}
const ColorProductAttribute=__exports.ColorProductAttribute=class ColorProductAttribute extends BaseProductAttribute{static template="point_of_sale.ColorProductAttribute";}
const MultiProductAttribute=__exports.MultiProductAttribute=class MultiProductAttribute extends BaseProductAttribute{static template="point_of_sale.MultiProductAttribute";setup(){super.setup();this.state=useState({attribute_value_ids:{},custom_value:"",});this.initAttribute();}
initAttribute(){for(const value of this.values){this.state.attribute_value_ids[value.id]=false;}}}
const ProductConfiguratorPopup=__exports.ProductConfiguratorPopup=class ProductConfiguratorPopup extends Component{static template="point_of_sale.ProductConfiguratorPopup";static components={RadioProductAttribute,ProductInfoBanner,PillsProductAttribute,SelectProductAttribute,ColorProductAttribute,MultiProductAttribute,Dialog,};static props=["product","getPayload","close"];setup(){useSubEnv({attribute_components:[],computeProductProduct:this.computeProductProduct.bind(this),});this.pos=usePos();this.ui=useState(useService("ui"));this.inputArea=useRef("input-area");this.state=useState({product:this.props.product,payload:this.env.attribute_components,});useRefListener(this.inputArea,"touchend",this.computeProductProduct.bind(this));useRefListener(this.inputArea,"click",this.computeProductProduct.bind(this));}
computePayload(){const attribute_custom_values=[];let attribute_value_ids=[];var price_extra=0.0;this.state.payload.forEach((attribute_component)=>{const{valueIds,extra,custom_value,hasCustom}=attribute_component.getValue();attribute_value_ids.push(valueIds);if(hasCustom){attribute_custom_values[valueIds[0]]=custom_value;}
const attr=this.pos.data.models["product.template.attribute.value"].get(valueIds[0]);if(attr&&attr.attribute_id.create_variant!=="always"){price_extra+=extra;}});attribute_value_ids=attribute_value_ids.flat();return{attribute_value_ids,attribute_custom_values,price_extra,};}
computeProductProduct(){let product=this.props.product;const formattedPayload=this.computePayload();const alwaysVariants=this.props.product.attribute_line_ids.every((line)=>line.attribute_id.create_variant==="always");if(alwaysVariants){const newProduct=this.pos.models["product.product"].filter((p)=>p.raw?.product_template_variant_value_ids?.length>0).find((p)=>p.raw.product_template_variant_value_ids.every((v)=>formattedPayload.attribute_value_ids.includes(v)));if(newProduct){product=newProduct;}}
this.state.product=product;}
get imageUrl(){const product=this.props.product;return`/web/image?model=product.product&field=image_128&id=${product.id}&unique=${product.write_date}`;}
get unitPrice(){return this.env.utils.formatCurrency(this.props.product.lst_price);}
close(){this.props.close();}
confirm(){this.props.getPayload(this.computePayload());this.props.close();}
isArchivedCombination(){const variantAttributeValueIds=this.getVariantAttributeValueIds();if(variantAttributeValueIds.length===0){return false;}
return this.props.product._isArchivedCombination(variantAttributeValueIds);}
getVariantAttributeValueIds(){const attribute_value_ids=[];this.state.payload.forEach((att_component)=>{const{valueIds}=att_component.getValue();if(att_component.attributeLine.attribute_id.create_variant==="always"){attribute_value_ids.push(valueIds);}});return attribute_value_ids.flat();}}
return __exports;});;

/* /point_of_sale/static/src/app/store/router.js */
odoo.define('@point_of_sale/app/store/router',['@web/core/browser/router','@web/core/utils/patch'],function(require){'use strict';let __exports={};const{router}=require("@web/core/browser/router");const{patch}=require("@web/core/utils/patch");patch(router,{pushState:()=>{},replaceState:()=>{},cancelPushes:()=>{},addLockedKey:()=>{},});return __exports;});;

/* /point_of_sale/static/src/app/store/select_lot_popup/edit_list_input/edit_list_input.js */
odoo.define('@point_of_sale/app/store/select_lot_popup/edit_list_input/edit_list_input',['@odoo/owl'],function(require){'use strict';let __exports={};const{Component,useState,useRef,useEffect}=require("@odoo/owl");const EditListInput=__exports.EditListInput=class EditListInput extends Component{static template="point_of_sale.EditListInput";static props={item:Object,deletable:Boolean,createNewItem:Function,onInputChange:Function,removeItem:Function,getOptions:Function,shouldShowOptions:Boolean,hasInvalidValue:Boolean,customInput:Boolean,onSelectItem:Function,onUnselectItem:Function,};setup(){super.setup();this.state=useState({selectedOptionValue:null,hideOptions:false,});const optionsDropdownRef=useRef("options-dropdown");useEffect((el)=>{this.setupOptionsDropdown(el);},()=>[optionsDropdownRef.el]);}
get displayedOptions(){const options=this.props.getOptions();if(!this.props.customInput||this.props.hasInvalidValue){return options;}
return options.filter((o)=>o.includes(this.props.item.text));}
onKeyup(event){if(event.key==="Enter"){if(this.state.selectedOptionValue){this.onSelectOption(this.state.selectedOptionValue);}else if(event.target.value.trim()!==""){this.props.createNewItem();}}}
onKeydown(event){let optionSelectionRelativeMove=0;if(event.key==="ArrowDown"){optionSelectionRelativeMove=1;}else if(event.key==="ArrowUp"){optionSelectionRelativeMove=-1;}
if(optionSelectionRelativeMove!==0){event.preventDefault();if(this.displayedOptions&&this.displayedOptions.length>0){const curSelectedOptionValue=this.state.selectedOptionValue;const curSelectedOptionIndex=curSelectedOptionValue?this.displayedOptions.findIndex((o)=>o===curSelectedOptionValue):null;let nextSelectedOptionIndex;if(curSelectedOptionIndex!==null){nextSelectedOptionIndex=(curSelectedOptionIndex+optionSelectionRelativeMove)%this.displayedOptions.length;if(nextSelectedOptionIndex<0){nextSelectedOptionIndex=this.displayedOptions.length-1;}}else{nextSelectedOptionIndex=0;}
this.state.selectedOptionValue=this.displayedOptions[nextSelectedOptionIndex];const optionsEl=document.querySelectorAll(".options-dropdown .option");if(optionsEl?.length>nextSelectedOptionIndex){const nextSelectedOptionEl=optionsEl[nextSelectedOptionIndex];if(nextSelectedOptionEl){nextSelectedOptionEl.scrollIntoView({behavior:"smooth",block:"center",});}}}}}
onClick(event){this.resetOptionsDropdown();}
onInput(event){this.props.onInputChange(this.props.item._id,event.target.value);this.resetOptionsDropdown();}
onFocus(event){this.props.onSelectItem(this.props.item._id);this.resetOptionsDropdown();}
setupOptionsDropdown(optionsDropdownEl){const inputEl=optionsDropdownEl?.parentElement;if(!inputEl){return;}
const inputRect=inputEl.getBoundingClientRect();optionsDropdownEl.style.left=inputRect.left+"px";optionsDropdownEl.style.top=inputRect.top+inputRect.height+"px";optionsDropdownEl.style.width=inputRect.width+"px";}
resetOptionsDropdown(){if(this.state.hideOptions){this.state.hideOptions=false;}
this.state.selectedOptionValue=null;}
onBlur(event){this.props.onUnselectItem(this.props.item._id);this.state.selectedOptionValue=null;}
onSelectOption(optionValue){this.props.onInputChange(this.props.item._id,optionValue);this.state.selectedOptionValue=null;this.state.hideOptions=!this.props.customInput;}}
return __exports;});;

/* /point_of_sale/static/src/app/store/select_lot_popup/select_lot_popup.js */
odoo.define('@point_of_sale/app/store/select_lot_popup/select_lot_popup',['@web/core/dialog/dialog','@point_of_sale/app/utils/hooks','@odoo/owl','@point_of_sale/app/store/select_lot_popup/edit_list_input/edit_list_input'],function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{useAutoFocusToLast}=require("@point_of_sale/app/utils/hooks");const{Component,useState,useRef}=require("@odoo/owl");const{EditListInput}=require("@point_of_sale/app/store/select_lot_popup/edit_list_input/edit_list_input");const EditListPopup=__exports.EditListPopup=class EditListPopup extends Component{static components={EditListInput,Dialog};static template="point_of_sale.EditListPopup";static props={array:Array,isSingleItem:Boolean,title:String,name:String,getPayload:Function,close:Function,options:{type:Array,optional:true},customInput:{type:Boolean,optional:true},uniqueValues:{type:Boolean,optional:true},isLotNameUsed:{type:Function,optional:true},};static defaultProps={options:[],customInput:true,uniqueValues:true,isLotNameUsed:()=>false,};setup(){this._id=0;this.state=useState({array:this._initialize(this.props.array),selectedItemId:null,});useAutoFocusToLast();this.editListRef=useRef("edit-list-inputs");if(new Set(this.props.options).size!==this.props.options.length){throw new Error("EditListPopup options must be unique.");}}
_nextId(){return this._id++;}
_emptyItem(){return{text:"",_id:this._nextId(),};}
_initialize(array){if(array.length===0){return[this._emptyItem()];}
return array.map((item)=>Object.assign({},{_id:this._nextId()},typeof item==="object"?item:{text:item}));}
_hasMoreThanOneItem(){return this.state.array.length>1;}
removeItem(itemId){this.state.array.splice(this.state.array.findIndex((item)=>item._id==itemId),1);}
getRemainingOptions(){const usedValues=new Set(this.state.array.map((e)=>e.text));return this.props.options.filter((o)=>!usedValues.has(o));}
shouldShowOptionsForItem(item){return(item._id===this.state.selectedItemId&&(this.state.scrolledWithSelectedItemId!==item._id||this.state.scrolledWithSelectedItemValue!==item.text)&&(!item.text||!this.props.customInput||!this.hasValidValue(item._id,item.text)||!this.props.options.includes(item.text)));}
hasValidValue(itemId,text){return(!this.props.isLotNameUsed(text)&&(this.props.customInput||this.props.options.includes(text))&&(!this.props.uniqueValues||!this.state.array.some((elem)=>elem._id!==itemId&&elem.text===text)));}
onInputChange(itemId,text){const item=this.state.array.find((elem)=>elem._id===itemId);item.text=text;this.resetScrollInfo();}
onScroll(){const listEl=this.editListRef.el;if(!listEl){return;}
const curScrollPos=listEl.scrollTop;if(this.lastScrollPos&&curScrollPos!==this.lastScrollPos&&this.state.selectedItemId){this.state.scrolledWithSelectedItemId=this.state.selectedItemId;const item=this.state.array.find((elem)=>elem._id===this.state.selectedItemId);this.state.scrolledWithSelectedItemValue=item.text;}
this.lastScrollPos=curScrollPos;}
resetScrollInfo(){this.state.scrolledWithSelectedItemId=null;this.state.scrolledWithSelectedItemValue=null;this.lastScrollPos=null;}
onSelectItem(itemId){this.state.selectedItemId=itemId;this.resetScrollInfo();if(this.toUnselectItemTimeoutId){clearTimeout(this.toUnselectItemTimeoutId);}}
onUnselectItem(itemId){this.toUnselectItemTimeoutId=setTimeout(()=>{if(this.state.selectedItemId===itemId){this.state.selectedItemId=null;this.toUnselectItemTimeoutId=null;this.resetScrollInfo();}},300);}
createNewItem(){if(this.props.isSingleItem){return;}
this.state.array.push(this._emptyItem());}
confirm(){const finalValues=new Set();this.props.getPayload(this.state.array.filter((item)=>{const itemValue=item.text.trim();const isValidValue=itemValue!==""&&!this.props.isLotNameUsed(itemValue)&&(this.props.customInput||this.props.options.includes(itemValue));if(!isValidValue){return false;}
if(this.props.uniqueValues){const isDuplicateValue=finalValues.has(itemValue);if(!isDuplicateValue){finalValues.add(itemValue);}
return!isDuplicateValue;}
return true;}).map((item)=>Object.assign({},item)));this.props.close();}}
return __exports;});;

/* /point_of_sale/static/src/app/utils/contextual_utils_service.js */
odoo.define('@point_of_sale/app/utils/contextual_utils_service',['@web/core/currency','@web/core/utils/numbers','@web/core/utils/strings','@web/core/registry','@web/views/fields/parsers'],function(require){'use strict';let __exports={};const{formatCurrency:webFormatCurrency}=require("@web/core/currency");const{formatFloat,roundDecimals,floatIsZero:genericFloatIsZero,}=require("@web/core/utils/numbers");const{escapeRegExp}=require("@web/core/utils/strings");const{registry}=require("@web/core/registry");const{parseFloat}=require("@web/views/fields/parsers");const contextualUtilsService=__exports.contextualUtilsService={dependencies:["pos","localization"],start(env,{pos,localization}){const res_currency=pos.currency;const productUoMDecimals=pos.data.models["decimal.precision"].find((dp)=>dp.name==="Product Unit of Measure").digits;const decimalPoint=localization.decimalPoint;const thousandsSep=localization.thousandsSep;const escapedDecimalPoint=escapeRegExp(decimalPoint);let floatRegex;if(thousandsSep){const escapedThousandsSep=escapeRegExp(thousandsSep);floatRegex=new RegExp(`^-?(?:\\d+(${escapedThousandsSep}\\d+)*)?(?:${escapedDecimalPoint}\\d*)?$`);}else{floatRegex=new RegExp(`^-?(?:\\d+)?(?:${escapedDecimalPoint}\\d*)?$`);}
const formatProductQty=(qty,trailingZeros=true)=>{return formatFloat(qty,{digits:[true,productUoMDecimals],trailingZeros:trailingZeros,});};const formatCurrency=(value,hasSymbol=true)=>{return webFormatCurrency(value,res_currency.id,{noSymbol:!hasSymbol,});};const floatIsZero=(value)=>{return genericFloatIsZero(value,res_currency.decimal_places);};const roundCurrency=(value)=>{return roundDecimals(value,res_currency.decimal_places);};const isValidFloat=(inputValue)=>{return![decimalPoint,"-"].includes(inputValue)&&floatRegex.test(inputValue);};const parseValidFloat=(inputValue)=>{return isValidFloat(inputValue)?parseFloat(inputValue):0;};env.utils={formatCurrency,roundCurrency,formatProductQty,isValidFloat,parseValidFloat,floatIsZero,};},};registry.category("services").add("contextual_utils_service",contextualUtilsService);return __exports;});;

/* /point_of_sale/static/src/app/utils/date_picker_popup/date_picker_popup.js */
odoo.define('@point_of_sale/app/utils/date_picker_popup/date_picker_popup',['@web/core/dialog/dialog','@web/core/l10n/translation','@odoo/owl'],function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{_t}=require("@web/core/l10n/translation");const{Component,onMounted,useRef,useState}=require("@odoo/owl");const DatePickerPopup=__exports.DatePickerPopup=class DatePickerPopup extends Component{static template="point_of_sale.DatePickerPopup";static components={Dialog};static props={title:{type:String,optional:true},confirmLabel:{type:String,optional:true},getPayload:Function,close:Function,};static defaultProps={confirmLabel:_t("Confirm"),title:_t("DatePicker"),};setup(){super.setup();this.state=useState({shippingDate:this._today()});this.inputRef=useRef("input");onMounted(()=>this.inputRef.el.focus());}
confirm(){this.props.getPayload(this.state.shippingDate<this._today()?this._today():this.state.shippingDate);this.props.close();}
_today(){return new Date().toISOString().split("T")[0];}}
return __exports;});;

/* /point_of_sale/static/src/app/utils/debug.js */
odoo.define('@point_of_sale/app/utils/debug',[],function(require){'use strict';let __exports={};function buildRepresentativeObject(obj,depth=0,maxDepth=2){if(depth>maxDepth||obj===null||typeof obj!=="object"){return obj;}
const result=Array.isArray(obj)?[]:{};for(const key in obj){if(Object.hasOwn(obj,key)){try{const value=obj[key];if(typeof value==="object"&&value!==null){result[key]=buildRepresentativeObject(value,depth+1,maxDepth);}else{result[key]=value;}}catch(error){result[key]=`Error: ${error.message}`;}}}
return result;}
function log(obj,depth=0,maxDepth=2){return console.log(buildRepresentativeObject(obj,depth,maxDepth));}
function compareObjects(obj1,obj2,visited=new Map(),depth=0,maxDepth=10){if(depth>maxDepth){return{error:"Profondeur de comparaison maximale atteinte."};}
if(visited.has(obj1)||visited.has(obj2)){return visited.get(obj1)===visited.get(obj2)?{}:{error:"Référence circulaire détectée."};}
visited.set(obj1,depth);visited.set(obj2,depth);const differences={};const allKeys=new Set([...Object.keys(obj1),...Object.keys(obj2)]);allKeys.forEach((key)=>{const val1=obj1[key];const val2=obj2[key];if(typeof val1!==typeof val2||val1!==val2){if(val1&&val2&&typeof val1==="object"&&typeof val2==="object"){const subDiff=compareObjects(val1,val2,visited,depth+1,maxDepth);if(Object.keys(subDiff).length>0){differences[key]=subDiff;}}else{differences[key]={obj1:val1,obj2:val2};}}});return buildRepresentativeObject(differences);}
const debug=__exports.debug={compareObjects,buildRepresentativeObject,log,};return __exports;});;

/* /point_of_sale/static/src/app/utils/hooks.js */
odoo.define('@point_of_sale/app/utils/hooks',['@web/core/l10n/translation','@web/core/confirmation_dialog/confirmation_dialog','@web/core/errors/error_dialogs','@odoo/owl','@web/core/utils/concurrency','@web/core/utils/hooks','@web/core/dropdown/dropdown_hooks'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{ConfirmationDialog,AlertDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{ErrorDialog}=require("@web/core/errors/error_dialogs");const{useEnv,onMounted,onPatched,useComponent,useRef,useState,onWillUnmount,useExternalListener,}=require("@odoo/owl");const{KeepLast}=require("@web/core/utils/concurrency");const{useService}=require("@web/core/utils/hooks");const{useDropdownState}=require("@web/core/dropdown/dropdown_hooks");__exports.useErrorHandlers=useErrorHandlers;function useErrorHandlers(){const component=useComponent();const dialog=useEnv().services.dialog;component._handlePushOrderError=async function(error){if(error.message==="Backend Invoice"){dialog.add(ConfirmationDialog,{title:_t("Please print the invoice from the backend"),body:_t("The order has been synchronized earlier. Please make the invoice from the backend for the order: ")+error.data.order.name,});}else if(error.code<0){dialog.add(ConfirmationDialog,{title:_t("Unable to sync order"),body:_t("Check the internet connection then try to sync again by clicking on the red wifi button (upper right of the screen)."),});}else if(error.code===200){dialog.add(ErrorDialog,{traceback:error.data.debug.status.message_body||_t("The server encountered an error while receiving your order."),});}else{await dialog.add(AlertDialog,{title:_t("Unknown Error"),body:_t("The order could not be sent to the server due to an unknown error"),});}};}
__exports.useAutoFocusToLast=useAutoFocusToLast;function useAutoFocusToLast(){const root=useRef("root");let target=null;function autofocus(){const prevTarget=target;const allInputs=root.el.querySelectorAll("input");target=allInputs[allInputs.length-1];if(target&&target!==prevTarget){target.focus();target.selectionStart=target.selectionEnd=target.value.length;}}
onMounted(autofocus);onPatched(autofocus);}
__exports.useAsyncLockedMethod=useAsyncLockedMethod;function useAsyncLockedMethod(method){const component=useComponent();let called=false;return async(...args)=>{if(called){return;}
try{called=true;return await method.call(component,...args);}finally{called=false;}};}
__exports.useTrackedAsync=useTrackedAsync;function useTrackedAsync(asyncFn,options={}){const state=useState({status:"idle",result:null,lastArgs:null,});const{keepLast=false}=options;const baseMethod=async(...args)=>{state.status="loading";state.result=null;state.lastArgs=args;try{const result=await asyncFn(...args);state.status="success";state.result=result;}catch(error){state.status="error";state.result=error;}};let call;if(keepLast){const keepLastInstance=new KeepLast();call=(...args)=>keepLastInstance.add(baseMethod(...args));}else{call=useAsyncLockedMethod(baseMethod);}
return{get status(){return state.status;},get result(){return state.result;},get lastArgs(){return state.lastArgs;},call,};}
__exports.useIsChildLarger=useIsChildLarger;function useIsChildLarger(container){const state=useState({isLarger:false,maxItems:0,});const computeSize=()=>{if(!container.el||!container.el.children.length){return;}
let acc=0;let nbrItems=0;let isLarger=false;const oldLargerState=state.isLarger;const containerWidth=container.el.clientWidth-10;for(const child of container.el.children){acc+=child.clientWidth;if(acc<containerWidth){nbrItems++;}else{isLarger=true;break;}}
state.isLarger=isLarger;state.maxItems=nbrItems;if(!oldLargerState&&state.isLarger){state.maxItems--;}};useExternalListener(window,"resize",()=>{computeSize();});return{get isLarger(){return state.isLarger;},get maxItems(){return state.maxItems;},reload:()=>{computeSize();},};}
__exports.useReactivePopover=useReactivePopover;function useReactivePopover(component,options={}){const popoverService=useService("popover");const owner=useComponent();const newOptions=Object.create(options);newOptions.onClose=()=>{if(status(owner)!=="destroyed"){options.onClose?.();}};let removeFn=null;const state=useDropdownState();function close(){state.close();removeFn?.();}
const popover={open(target,props){close();state.open();const newOptions=Object.create(options);newOptions.onClose=()=>{removeFn=null;state.close();options.onClose?.();};removeFn=popoverService.add(target,component,props,newOptions);},close,get isOpen(){return state.isOpen;},};onWillUnmount(popover.close);return popover;}
return __exports;});;

/* /point_of_sale/static/src/app/utils/html-to-image.js */
odoo.define('@point_of_sale/app/utils/html-to-image',[],function(require){'use strict';let __exports={};function resolveUrl(url,baseUrl){if(url.match(/^[a-z]+:\/\//i)){return url;}
if(url.match(/^\/\//)){return window.location.protocol+url;}
if(url.match(/^[a-z]+:/i)){return url;}
const doc=document.implementation.createHTMLDocument();const base=doc.createElement("base");const a=doc.createElement("a");doc.head.appendChild(base);doc.body.appendChild(a);if(baseUrl){base.href=baseUrl;}
a.href=url;return a.href;}
const uuid=(()=>{let counter=0;const random=()=>`0000${((Math.random() * 36 ** 4) << 0).toString(36)}`.slice(-4);return()=>{counter+=1;return`u${random()}${counter}`;};})();function toArray(arrayLike){const arr=[];for(let i=0,l=arrayLike.length;i<l;i++){arr.push(arrayLike[i]);}
return arr;}
function px(node,styleProperty){const win=node.ownerDocument.defaultView||window;const val=win.getComputedStyle(node).getPropertyValue(styleProperty);return val?parseFloat(val.replace("px","")):0;}
function getNodeWidth(node){const leftBorder=px(node,"border-left-width");const rightBorder=px(node,"border-right-width");return node.clientWidth+leftBorder+rightBorder;}
function getNodeHeight(node){const topBorder=px(node,"border-top-width");const bottomBorder=px(node,"border-bottom-width");return node.clientHeight+topBorder+bottomBorder;}
function getImageSize(targetNode,options={}){const width=options.width||getNodeWidth(targetNode);const height=options.height||getNodeHeight(targetNode);return{width,height};}
function getPixelRatio(){let ratio;let FINAL_PROCESS;try{FINAL_PROCESS=process;}catch{}
const val=FINAL_PROCESS&&FINAL_PROCESS.env?FINAL_PROCESS.env.devicePixelRatio:null;if(val){ratio=parseInt(val,10);if(Number.isNaN(ratio)){ratio=1;}}
return ratio||window.devicePixelRatio||1;}
const canvasDimensionLimit=16384;function checkCanvasDimensions(canvas){if(canvas.width>canvasDimensionLimit||canvas.height>canvasDimensionLimit){if(canvas.width>canvasDimensionLimit&&canvas.height>canvasDimensionLimit){if(canvas.width>canvas.height){canvas.height*=canvasDimensionLimit/canvas.width;canvas.width=canvasDimensionLimit;}else{canvas.width*=canvasDimensionLimit/canvas.height;canvas.height=canvasDimensionLimit;}}else if(canvas.width>canvasDimensionLimit){canvas.height*=canvasDimensionLimit/canvas.width;canvas.width=canvasDimensionLimit;}else{canvas.width*=canvasDimensionLimit/canvas.height;canvas.height=canvasDimensionLimit;}}}
function canvasToBlob(canvas,options={}){if(canvas.toBlob){return new Promise((resolve)=>{canvas.toBlob(resolve,options.type?options.type:"image/png",options.quality?options.quality:1);});}
return new Promise((resolve)=>{const binaryString=window.atob(canvas.toDataURL(options.type?options.type:undefined,options.quality?options.quality:undefined).split(",")[1]);const len=binaryString.length;const binaryArray=new Uint8Array(len);for(let i=0;i<len;i+=1){binaryArray[i]=binaryString.charCodeAt(i);}
resolve(new Blob([binaryArray],{type:options.type?options.type:"image/png",}));});}
function createImage(url){return new Promise((resolve,reject)=>{const img=new Image();img.onload=()=>{img.decode().then(()=>{requestAnimationFrame(()=>resolve(img));});};img.onerror=reject;img.crossOrigin="anonymous";img.decoding="async";img.src=url;});}
async function svgToDataURL(svg){return Promise.resolve().then(()=>new XMLSerializer().serializeToString(svg)).then(encodeURIComponent).then((html)=>`data:image/svg+xml;charset=utf-8,${html}`);}
async function nodeToDataURL(node,width,height){const xmlns="http://www.w3.org/2000/svg";const svg=document.createElementNS(xmlns,"svg");const foreignObject=document.createElementNS(xmlns,"foreignObject");svg.setAttribute("width",`${width}`);svg.setAttribute("height",`${height}`);svg.setAttribute("viewBox",`0 0 ${width} ${height}`);foreignObject.setAttribute("width","100%");foreignObject.setAttribute("height","100%");foreignObject.setAttribute("x","0");foreignObject.setAttribute("y","0");foreignObject.setAttribute("externalResourcesRequired","true");svg.appendChild(foreignObject);foreignObject.appendChild(node);return svgToDataURL(svg);}
const isInstanceOfElement=(node,instance)=>{if(node instanceof instance){return true;}
const nodePrototype=Object.getPrototypeOf(node);if(nodePrototype===null){return false;}
return(nodePrototype.constructor.name===instance.name||isInstanceOfElement(nodePrototype,instance));};function formatCSSText(style){const content=style.getPropertyValue("content");return`${style.cssText} content: '${content.replace(/'|"/g, "")}';`;}
function formatCSSProperties(style){return toArray(style).map((name)=>{const value=style.getPropertyValue(name);const priority=style.getPropertyPriority(name);return`${name}: ${value}${priority ? " !important" : ""};`;}).join(" ");}
function getPseudoElementStyle(className,pseudo,style){const selector=`.${className}:${pseudo}`;const cssText=style.cssText?formatCSSText(style):formatCSSProperties(style);return document.createTextNode(`${selector}{${cssText}}`);}
function clonePseudoElement(nativeNode,clonedNode,pseudo){const style=window.getComputedStyle(nativeNode,pseudo);const content=style.getPropertyValue("content");if(content===""||content==="none"){return;}
const className=uuid();try{clonedNode.className=`${clonedNode.className} ${className}`;}catch{return;}
const styleElement=document.createElement("style");styleElement.appendChild(getPseudoElementStyle(className,pseudo,style));clonedNode.appendChild(styleElement);}
function clonePseudoElements(nativeNode,clonedNode){clonePseudoElement(nativeNode,clonedNode,":before");clonePseudoElement(nativeNode,clonedNode,":after");}
const WOFF="application/font-woff";const JPEG="image/jpeg";const mimes={woff:WOFF,woff2:WOFF,ttf:"application/font-truetype",eot:"application/vnd.ms-fontobject",png:"image/png",jpg:JPEG,jpeg:JPEG,gif:"image/gif",tiff:"image/tiff",svg:"image/svg+xml",webp:"image/webp",};function getExtension(url){const match=/\.([^./]*?)$/g.exec(url);return match?match[1]:"";}
function getMimeType(url){const extension=getExtension(url).toLowerCase();return mimes[extension]||"";}
function getContentFromDataUrl(dataURL){return dataURL.split(/,/)[1];}
function isDataUrl(url){return url.search(/^(data:)/)!==-1;}
function makeDataUrl(content,mimeType){return`data:${mimeType};base64,${content}`;}
async function fetchAsDataURL(url,init,process){const res=await fetch(url,{...init,mode:"no-cors"});if(res.status===404){throw new Error(`Resource "${res.url}" not found`);}
const blob=await res.blob();return new Promise((resolve,reject)=>{const reader=new FileReader();reader.onerror=reject;reader.onloadend=()=>{try{resolve(process({res,result:reader.result}));}catch(error){reject(error);}};reader.readAsDataURL(blob);});}
const cache={};function getCacheKey(url,contentType,includeQueryParams){let key=url.replace(/\?.*/,"");if(includeQueryParams){key=url;}
if(/ttf|otf|eot|woff2?/i.test(key)){key=key.replace(/.*\//,"");}
return contentType?`[${contentType}]${key}`:key;}
async function resourceToDataURL(resourceUrl,contentType,options){const cacheKey=getCacheKey(resourceUrl,contentType,options.includeQueryParams);if(cache[cacheKey]!=null){return cache[cacheKey];}
if(options.cacheBust){resourceUrl+=(/\?/.test(resourceUrl)?"&":"?")+new Date().getTime();}
let dataURL;try{const content=await fetchAsDataURL(resourceUrl,options.fetchRequestInit,({res,result})=>{if(!contentType){contentType=res.headers.get("Content-Type")||"";}
return getContentFromDataUrl(result);});dataURL=makeDataUrl(content,contentType);}catch(error){dataURL=options.imagePlaceholder||"";let msg=`Failed to fetch resource: ${resourceUrl}`;if(error){msg=typeof error==="string"?error:error.message;}
if(msg){console.warn(msg);}}
cache[cacheKey]=dataURL;return dataURL;}
async function cloneCanvasElement(canvas){const dataURL=canvas.toDataURL();if(dataURL==="data:,"){return canvas.cloneNode(false);}
return createImage(dataURL);}
async function cloneVideoElement(video,options){if(video.currentSrc){const canvas=document.createElement("canvas");const ctx=canvas.getContext("2d");canvas.width=video.clientWidth;canvas.height=video.clientHeight;ctx?.drawImage(video,0,0,canvas.width,canvas.height);const dataURL=canvas.toDataURL();return createImage(dataURL);}
const poster=video.poster;const contentType=getMimeType(poster);const dataURL=await resourceToDataURL(poster,contentType,options);return createImage(dataURL);}
async function cloneIFrameElement(iframe){try{if(iframe?.contentDocument?.body){return await cloneNode(iframe.contentDocument.body,{},true);}}catch{}
return iframe.cloneNode(false);}
async function cloneSingleNode(node,options){if(isInstanceOfElement(node,HTMLCanvasElement)){return cloneCanvasElement(node);}
if(isInstanceOfElement(node,HTMLVideoElement)){return cloneVideoElement(node,options);}
if(isInstanceOfElement(node,HTMLIFrameElement)){return cloneIFrameElement(node);}
return node.cloneNode(false);}
const isSlotElement=(node)=>node.tagName!=null&&node.tagName.toUpperCase()==="SLOT";async function cloneChildren(nativeNode,clonedNode,options){let children=[];if(isSlotElement(nativeNode)&&nativeNode.assignedNodes){children=toArray(nativeNode.assignedNodes());}else if(isInstanceOfElement(nativeNode,HTMLIFrameElement)&&nativeNode.contentDocument?.body){children=toArray(nativeNode.contentDocument.body.childNodes);}else{children=toArray((nativeNode.shadowRoot??nativeNode).childNodes);}
if(children.length===0||isInstanceOfElement(nativeNode,HTMLVideoElement)){return clonedNode;}
await children.reduce((deferred,child)=>deferred.then(()=>cloneNode(child,options)).then((clonedChild)=>{if(clonedChild){clonedNode.appendChild(clonedChild);}}),Promise.resolve());return clonedNode;}
function cloneCSSStyle(nativeNode,clonedNode){const targetStyle=clonedNode.style;if(!targetStyle){return;}
const sourceStyle=window.getComputedStyle(nativeNode);if(sourceStyle.cssText){targetStyle.cssText=sourceStyle.cssText;targetStyle.transformOrigin=sourceStyle.transformOrigin;}else{toArray(sourceStyle).forEach((name)=>{let value=sourceStyle.getPropertyValue(name);if(name==="font-size"&&value.endsWith("px")){const reducedFont=Math.floor(parseFloat(value.substring(0,value.length-2)))-0.1;value=`${reducedFont}px`;}
if(isInstanceOfElement(nativeNode,HTMLIFrameElement)&&name==="display"&&value==="inline"){value="block";}
if(name==="d"&&clonedNode.getAttribute("d")){value=`path(${clonedNode.getAttribute("d")})`;}
targetStyle.setProperty(name,value,sourceStyle.getPropertyPriority(name));});}}
function cloneInputValue(nativeNode,clonedNode){if(isInstanceOfElement(nativeNode,HTMLTextAreaElement)){clonedNode.innerHTML=nativeNode.value;}
if(isInstanceOfElement(nativeNode,HTMLInputElement)){clonedNode.setAttribute("value",nativeNode.value);}}
function cloneSelectValue(nativeNode,clonedNode){if(isInstanceOfElement(nativeNode,HTMLSelectElement)){const clonedSelect=clonedNode;const selectedOption=Array.from(clonedSelect.children).find((child)=>nativeNode.value===child.getAttribute("value"));if(selectedOption){selectedOption.setAttribute("selected","");}}}
function decorate(nativeNode,clonedNode){if(isInstanceOfElement(clonedNode,Element)){cloneCSSStyle(nativeNode,clonedNode);clonePseudoElements(nativeNode,clonedNode);cloneInputValue(nativeNode,clonedNode);cloneSelectValue(nativeNode,clonedNode);}
return clonedNode;}
async function ensureSVGSymbols(clone,options){const uses=clone.querySelectorAll?clone.querySelectorAll("use"):[];if(uses.length===0){return clone;}
const processedDefs={};for(let i=0;i<uses.length;i++){const use=uses[i];const id=use.getAttribute("xlink:href");if(id){const exist=clone.querySelector(id);const definition=document.querySelector(id);if(!exist&&definition&&!processedDefs[id]){processedDefs[id]=await cloneNode(definition,options,true);}}}
const nodes=Object.values(processedDefs);if(nodes.length){const ns="http://www.w3.org/1999/xhtml";const svg=document.createElementNS(ns,"svg");svg.setAttribute("xmlns",ns);svg.style.position="absolute";svg.style.width="0";svg.style.height="0";svg.style.overflow="hidden";svg.style.display="none";const defs=document.createElementNS(ns,"defs");svg.appendChild(defs);for(let i=0;i<nodes.length;i++){defs.appendChild(nodes[i]);}
clone.appendChild(svg);}
return clone;}
async function cloneNode(node,options,isRoot){if(!isRoot&&options.filter&&!options.filter(node)){return null;}
return Promise.resolve(node).then((clonedNode)=>cloneSingleNode(clonedNode,options)).then((clonedNode)=>cloneChildren(node,clonedNode,options)).then((clonedNode)=>decorate(node,clonedNode)).then((clonedNode)=>ensureSVGSymbols(clonedNode,options));}
const URL_REGEX=/url\((['"]?)([^'"]+?)\1\)/g;const URL_WITH_FORMAT_REGEX=/url\([^)]+\)\s*format\((["']?)([^"']+)\1\)/g;const FONT_SRC_REGEX=/src:\s*(?:url\([^)]+\)\s*format\([^)]+\)[,;]\s*)+/g;function toRegex(url){const escaped=url.replace(/([.*+?^${}()|\[\]\/\\])/g,"\\$1");return new RegExp(`(url\\(['"]?)(${escaped})(['"]?\\))`,"g");}
function parseURLs(cssText){const urls=[];cssText.replace(URL_REGEX,(raw,quotation,url)=>{urls.push(url);return raw;});return urls.filter((url)=>!isDataUrl(url));}
async function embed(cssText,resourceURL,baseURL,options,getContentFromUrl){try{const resolvedURL=baseURL?resolveUrl(resourceURL,baseURL):resourceURL;const contentType=getMimeType(resourceURL);let dataURL;if(getContentFromUrl){const content=await getContentFromUrl(resolvedURL);dataURL=makeDataUrl(content,contentType);}else{dataURL=await resourceToDataURL(resolvedURL,contentType,options);}
return cssText.replace(toRegex(resourceURL),`$1${dataURL}$3`);}catch{}
return cssText;}
function filterPreferredFontFormat(str,{preferredFontFormat}){return!preferredFontFormat?str:str.replace(FONT_SRC_REGEX,(match)=>{while(true){const[src,,format]=URL_WITH_FORMAT_REGEX.exec(match)||[];if(!format){return"";}
if(format===preferredFontFormat){return`src: ${src};`;}}});}
function shouldEmbed(url){return url.search(URL_REGEX)!==-1;}
async function embedResources(cssText,baseUrl,options){if(!shouldEmbed(cssText)){return cssText;}
const filteredCSSText=filterPreferredFontFormat(cssText,options);const urls=parseURLs(filteredCSSText);return urls.reduce((deferred,url)=>deferred.then((css)=>embed(css,url,baseUrl,options)),Promise.resolve(filteredCSSText));}
async function embedProp(propName,node,options){const propValue=node.style?.getPropertyValue(propName);if(propValue){const cssString=await embedResources(propValue,null,options);node.style.setProperty(propName,cssString,node.style.getPropertyPriority(propName));return true;}
return false;}
async function embedBackground(clonedNode,options){if(!(await embedProp("background",clonedNode,options))){await embedProp("background-image",clonedNode,options);}
if(!(await embedProp("mask",clonedNode,options))){await embedProp("mask-image",clonedNode,options);}}
async function embedImageNode(clonedNode,options){const isImageElement=isInstanceOfElement(clonedNode,HTMLImageElement);if(!(isImageElement&&!isDataUrl(clonedNode.src))&&!(isInstanceOfElement(clonedNode,SVGImageElement)&&!isDataUrl(clonedNode.href.baseVal))){return;}
const url=isImageElement?clonedNode.src:clonedNode.href.baseVal;const dataURL=await resourceToDataURL(url,getMimeType(url),options);await new Promise((resolve,reject)=>{clonedNode.onload=resolve;clonedNode.onerror=reject;const image=clonedNode;if(image.decode){image.decode=resolve;}
if(image.loading==="lazy"){image.loading="eager";}
if(isImageElement){clonedNode.srcset="";clonedNode.src=dataURL;}else{clonedNode.href.baseVal=dataURL;}});}
async function embedChildren(clonedNode,options){const children=toArray(clonedNode.childNodes);const deferreds=children.map((child)=>embedImages(child,options));await Promise.all(deferreds).then(()=>clonedNode);}
async function embedImages(clonedNode,options){if(isInstanceOfElement(clonedNode,Element)){await embedBackground(clonedNode,options);await embedImageNode(clonedNode,options);await embedChildren(clonedNode,options);}}
function applyStyle(node,options){const{style}=node;if(options.backgroundColor){style.backgroundColor=options.backgroundColor;}
if(options.width){style.width=`${options.width}px`;}
if(options.height){style.height=`${options.height}px`;}
const manual=options.style;if(manual!=null){Object.keys(manual).forEach((key)=>{style[key]=manual[key];});}
return node;}
const cssFetchCache={};async function fetchCSS(url){let cache=cssFetchCache[url];if(cache!=null){return cache;}
const res=await fetch(url);const cssText=await res.text();cache={url,cssText};cssFetchCache[url]=cache;return cache;}
async function embedFonts(data,options){let cssText=data.cssText;const regexUrl=/url\(["']?([^"')]+)["']?\)/g;const fontLocs=cssText.match(/url\([^)]+\)/g)||[];const loadFonts=fontLocs.map(async(loc)=>{let url=loc.replace(regexUrl,"$1");if(!url.startsWith("https://")){url=new URL(url,data.url).href;}
return fetchAsDataURL(url,options.fetchRequestInit,({result})=>{cssText=cssText.replace(loc,`url(${result})`);return[loc,result];});});return Promise.all(loadFonts).then(()=>cssText);}
function parseCSS(source){if(source==null){return[];}
const result=[];const commentsRegex=/(\/\*[\s\S]*?\*\/)/gi;let cssText=source.replace(commentsRegex,"");const keyframesRegex=new RegExp("((@.*?keyframes [\\s\\S]*?){([\\s\\S]*?}\\s*?)})","gi");while(true){const matches=keyframesRegex.exec(cssText);if(matches===null){break;}
result.push(matches[0]);}
cssText=cssText.replace(keyframesRegex,"");const importRegex=/@import[\s\S]*?url\([^)]*\)[\s\S]*?;/gi;const combinedCSSRegex="((\\s*?(?:\\/\\*[\\s\\S]*?\\*\\/)?\\s*?@media[\\s\\S]"+"*?){([\\s\\S]*?)}\\s*?})|(([\\s\\S]*?){([\\s\\S]*?)})";const unifiedRegex=new RegExp(combinedCSSRegex,"gi");while(true){let matches=importRegex.exec(cssText);if(matches===null){matches=unifiedRegex.exec(cssText);if(matches===null){break;}else{importRegex.lastIndex=unifiedRegex.lastIndex;}}else{unifiedRegex.lastIndex=importRegex.lastIndex;}
result.push(matches[0]);}
return result;}
async function getCSSRules(styleSheets,options){const ret=[];const deferreds=[];styleSheets.forEach((sheet)=>{if("cssRules"in sheet){try{toArray(sheet.cssRules||[]).forEach((item,index)=>{if(item.type===CSSRule.IMPORT_RULE){let importIndex=index+1;const url=item.href;const deferred=fetchCSS(url).then((metadata)=>embedFonts(metadata,options)).then((cssText)=>parseCSS(cssText).forEach((rule)=>{try{sheet.insertRule(rule,rule.startsWith("@import")?(importIndex+=1):sheet.cssRules.length);}catch(error){console.error("Error inserting rule from remote css",{rule,error,});}})).catch((e)=>{console.error("Error loading remote css",e.toString());});deferreds.push(deferred);}});}catch(e){const inline=styleSheets.find((a)=>a.href==null)||document.styleSheets[0];if(sheet.href!=null){deferreds.push(fetchCSS(sheet.href).then((metadata)=>embedFonts(metadata,options)).then((cssText)=>parseCSS(cssText).forEach((rule)=>{inline.insertRule(rule,sheet.cssRules.length);})).catch((err)=>{console.error("Error loading remote stylesheet",err);}));}
console.error("Error inlining remote css file",e);}}});return Promise.all(deferreds).then(()=>{styleSheets.forEach((sheet)=>{if("cssRules"in sheet){try{toArray(sheet.cssRules||[]).forEach((item)=>{ret.push(item);});}catch(e){console.error(`Error while reading CSS rules from ${sheet.href}`,e);}}});return ret;});}
function getWebFontRules(cssRules){return cssRules.filter((rule)=>rule.type===CSSRule.FONT_FACE_RULE).filter((rule)=>shouldEmbed(rule.style.getPropertyValue("src")));}
async function parseWebFontRules(node,options){if(node.ownerDocument==null){throw new Error("Provided element is not within a Document");}
const styleSheets=toArray(node.ownerDocument.styleSheets);const cssRules=await getCSSRules(styleSheets,options);return getWebFontRules(cssRules);}
async function getWebFontCSS(node,options){const rules=await parseWebFontRules(node,options);const cssTexts=await Promise.all(rules.map((rule)=>{const baseUrl=rule.parentStyleSheet?rule.parentStyleSheet.href:null;return embedResources(rule.cssText,baseUrl,options);}));return cssTexts.join("\n");}
async function embedWebFonts(clonedNode,options){const cssText=options.fontEmbedCSS!=null?options.fontEmbedCSS:options.skipFonts?null:await getWebFontCSS(clonedNode,options);if(cssText){const styleNode=document.createElement("style");const sytleContent=document.createTextNode(cssText);styleNode.appendChild(sytleContent);if(clonedNode.firstChild){clonedNode.insertBefore(styleNode,clonedNode.firstChild);}else{clonedNode.appendChild(styleNode);}}}
async function toSvg(node,options={}){const{width,height}=getImageSize(node,options);const clonedNode=await cloneNode(node,options,true);await embedWebFonts(clonedNode,options);await embedImages(clonedNode,options);applyStyle(clonedNode,options);const datauri=await nodeToDataURL(clonedNode,width,height);return datauri;}
async function toCanvas(node,options={}){const{width,height}=getImageSize(node,options);const svg=await toSvg(node,options);const img=await createImage(svg);const canvas=document.createElement("canvas");const context=canvas.getContext("2d");const ratio=options.pixelRatio||getPixelRatio();const canvasWidth=options.canvasWidth||width;const canvasHeight=options.canvasHeight||height;canvas.width=canvasWidth*ratio;canvas.height=canvasHeight*ratio;if(!options.skipAutoScale){checkCanvasDimensions(canvas);}
canvas.style.width=`${canvasWidth}`;canvas.style.height=`${canvasHeight}`;if(options.backgroundColor){context.fillStyle=options.backgroundColor;context.fillRect(0,0,canvas.width,canvas.height);}
context.drawImage(img,0,0,canvas.width,canvas.height);return canvas;}
async function toPixelData(node,options={}){const{width,height}=getImageSize(node,options);const canvas=await toCanvas(node,options);const ctx=canvas.getContext("2d");return ctx.getImageData(0,0,width,height).data;}
async function toPng(node,options={}){const canvas=await toCanvas(node,options);return canvas.toDataURL();}
async function toJpeg(node,options={}){const canvas=await toCanvas(node,options);return canvas.toDataURL("image/jpeg",options.quality||1);}
async function toBlob(node,options={}){const canvas=await toCanvas(node,options);const blob=await canvasToBlob(canvas);return blob;}
async function getFontEmbedCSS(node,options={}){return getWebFontCSS(node,options);}
Object.assign(__exports,{getFontEmbedCSS,toBlob,toCanvas,toJpeg,toPixelData,toPng,toSvg});return __exports;});;

/* /point_of_sale/static/src/app/utils/input_popups/number_popup.js */
odoo.define('@point_of_sale/app/utils/input_popups/number_popup',['@web/core/l10n/translation','@web/core/utils/hooks','@odoo/owl','@web/core/dialog/dialog','@point_of_sale/app/generic_components/numpad/numpad'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{useBus,useService}=require("@web/core/utils/hooks");const{Component,useState}=require("@odoo/owl");const{Dialog}=require("@web/core/dialog/dialog");const{Numpad,buttonsType}=require("@point_of_sale/app/generic_components/numpad/numpad");const NumberPopup=__exports.NumberPopup=class NumberPopup extends Component{static template="point_of_sale.NumberPopup";static components={Numpad,Dialog};static props={title:{type:String,optional:true},subtitle:{type:String,optional:true},buttons:{type:buttonsType,optional:true},startingValue:{type:[Number,String],optional:true},feedback:{type:Function,optional:true},formatDisplayedValue:{type:Function,optional:true},placeholder:{type:String,optional:true},isValid:{type:Function,optional:true},confirmButtonLabel:{type:String,optional:true},getPayload:Function,close:Function,};static defaultProps={title:_t("Confirm?"),startingValue:"",isValid:()=>true,formatDisplayedValue:(x)=>x,feedback:()=>false,};setup(){this.numberBuffer=useService("number_buffer");this.numberBuffer.use({triggerAtEnter:()=>this.confirm(),triggerAtEscape:()=>this.cancel(),});this.state=useState({buffer:this.props.startingValue,});useBus(this.numberBuffer,"buffer-update",({detail:value})=>{this.state.buffer=value;});}
confirm(){this.props.getPayload(this.state.buffer);this.props.close();}
cancel(){this.props.close();}}
return __exports;});;

/* /point_of_sale/static/src/app/utils/input_popups/selection_popup.js */
odoo.define('@point_of_sale/app/utils/input_popups/selection_popup',['@web/core/l10n/translation','@odoo/owl','@web/core/dialog/dialog'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{Component,useState}=require("@odoo/owl");const{Dialog}=require("@web/core/dialog/dialog");const SelectionPopup=__exports.SelectionPopup=class SelectionPopup extends Component{static template="point_of_sale.SelectionPopup";static components={Dialog};static props={title:{type:String,optional:true},list:{type:Array,optional:true},getPayload:Function,close:Function,};static defaultProps={title:_t("Select"),list:[],};setup(){this.state=useState({selectedId:this.props.list.find((item)=>item.isSelected)});}
selectItem(itemId){this.state.selectedId=itemId;this.confirm();}
computePayload(){const selected=this.props.list.find((item)=>this.state.selectedId===item.id);return selected&&selected.item;}
confirm(){this.props.getPayload(this.computePayload());this.props.close();}}
return __exports;});;

/* /point_of_sale/static/src/app/utils/input_popups/text_input_popup.js */
odoo.define('@point_of_sale/app/utils/input_popups/text_input_popup',['@odoo/owl','@web/core/dialog/dialog'],function(require){'use strict';let __exports={};const{Component,onMounted,useRef,useState}=require("@odoo/owl");const{Dialog}=require("@web/core/dialog/dialog");const TextInputPopup=__exports.TextInputPopup=class TextInputPopup extends Component{static template="point_of_sale.TextInputPopup";static components={Dialog};static props={title:String,buttons:{type:Array,optional:true},startingValue:{type:String,optional:true},placeholder:{type:String,optional:true},rows:{type:Number,optional:true},getPayload:Function,close:Function,};static defaultProps={startingValue:"",placeholder:"",rows:1,buttons:[],};setup(){this.state=useState({inputValue:this.props.startingValue});this.inputRef=useRef("input");onMounted(this.onMounted);}
onMounted(){this.inputRef.el.focus();this.inputRef.el.select();}
confirm(){this.props.getPayload(this.state.inputValue);this.props.close();}
close(){this.props.close();}
buttonClick(button){const lines=this.state.inputValue.split("\n").filter((line)=>line!=="");if(lines.includes(button.label)){this.state.inputValue=lines.filter((line)=>line!==button.label).join("\n");button.isSelected=false;}else{this.state.inputValue=lines.join("\n");this.state.inputValue+=(lines.length>0?"\n":"")+button.label;button.isSelected=true;}}
onKeydown(ev){if(this.props.rows===1&&ev.key.toUpperCase()==="ENTER"){this.confirm();}}}
return __exports;});;

/* /point_of_sale/static/src/app/utils/money_details_popup/money_details_popup.js */
odoo.define('@point_of_sale/app/utils/money_details_popup/money_details_popup',['@web/core/dialog/dialog','@odoo/owl','@point_of_sale/app/store/pos_hook','@web/core/utils/numbers','@point_of_sale/app/generic_components/inputs/numeric_input/numeric_input','@web/core/l10n/translation','@web/core/utils/hooks'],function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{Component,useState}=require("@odoo/owl");const{usePos}=require("@point_of_sale/app/store/pos_hook");const{floatIsZero}=require("@web/core/utils/numbers");const{NumericInput}=require("@point_of_sale/app/generic_components/inputs/numeric_input/numeric_input");const{_t}=require("@web/core/l10n/translation");const{useService}=require("@web/core/utils/hooks");const MoneyDetailsPopup=__exports.MoneyDetailsPopup=class MoneyDetailsPopup extends Component{static template="point_of_sale.MoneyDetailsPopup";static components={NumericInput,Dialog};static props={moneyDetails:{type:[Object,{value:null}],optional:true},action:String,getPayload:Function,close:Function,context:{type:String,optional:true},};static defaultProps={moneyDetails:null,};setup(){super.setup();this.pos=usePos();this.ui=useService("ui");this.currency=this.pos.currency;this.state=useState({moneyDetails:this.props.moneyDetails?{...this.props.moneyDetails}:Object.fromEntries(this.pos.models["pos.bill"].map((bill)=>[bill.value,0])),});this.env.dialogData.dismiss=()=>{if(this.pos.config.iface_cashdrawer&&this.pos.hardwareProxy.connectionInfo.status==="connected"){this.pos.logEmployeeMessage(this.props.action,"ACTION_CANCELLED");}};}
computeTotal(moneyDetails=this.state.moneyDetails){return Object.entries(moneyDetails).reduce((total,[value,inputQty])=>{const quantity=isNaN(inputQty)?0:inputQty;return total+parseFloat(value)*quantity;},0);}
confirm(){let moneyDetailsNotes=!floatIsZero(this.computeTotal(),this.currency.decimal_places)?this.props.context+" details: \n":null;this.pos.models["pos.bill"].forEach((bill)=>{if(this.state.moneyDetails[bill.value]){moneyDetailsNotes+="\t"+`${this.state.moneyDetails[bill.value]} x ${this.env.utils.formatCurrency(
                        bill.value
                    )}\n`;}});if(moneyDetailsNotes){moneyDetailsNotes+=_t("Total: %s",this.env.utils.formatCurrency(this.computeTotal()));}
this.props.getPayload({total:this.computeTotal(),moneyDetailsNotes,moneyDetails:{...this.state.moneyDetails},action:this.props.action,});this.props.close();}
_parseFloat(value){return parseFloat(value);}}
return __exports;});;

/* /point_of_sale/static/src/app/utils/number_buffer_service.js */
odoo.define('@point_of_sale/app/utils/number_buffer_service',['@web/views/fields/parsers','@barcodes/barcode_service','@web/core/registry','@web/session','@odoo/owl'],function(require){'use strict';let __exports={};const{parseFloat:oParseFloat}=require("@web/views/fields/parsers");const{barcodeService}=require("@barcodes/barcode_service");const{registry}=require("@web/core/registry");const{session}=require("@web/session");const{EventBus,onWillDestroy,useComponent}=require("@odoo/owl");const INPUT_KEYS=new Set(["Delete","Backspace","+1","+2","+5","+10","+20","+50"].concat("0123456789+-.,".split("")));const CONTROL_KEYS=new Set(["Enter","Esc"]);const ALLOWED_KEYS=new Set([...INPUT_KEYS,...CONTROL_KEYS]);const getDefaultConfig=()=>({decimalPoint:false,triggerAtEnter:false,triggerAtEsc:false,triggerAtInput:false,useWithBarcode:false,});class NumberBuffer extends EventBus{static serviceDependencies=["mail.sound_effects","localization"];constructor(){super();this.setup(...arguments);}
setup(services){this.isReset=false;this.bufferHolderStack=[];this.sound=services["mail.sound_effects"];this.defaultDecimalPoint=services.localization.decimalPoint;window.addEventListener("keyup",this._onKeyboardInput.bind(this));}
get(){return this.state?this.state.buffer:null;}
set(val){this.state.buffer=!isNaN(parseFloat(val))?val:"";this.trigger("buffer-update",this.state.buffer);}
reset(){this.isReset=true;this.state.buffer="";this.trigger("buffer-update",this.state.buffer);}
capture(){if(this.handler){clearTimeout(this._timeout);this.handler(true);delete this.handler;}}
getFloat(){return oParseFloat(this.get());}
use(config){this.eventsBuffer=[];const currentComponent=useComponent();config=Object.assign(getDefaultConfig(),config);this.bufferHolderStack.push({component:currentComponent,state:config.state?config.state:{buffer:"",toStartOver:false},config,});this._setUp();onWillDestroy(()=>{const currentComponentName=currentComponent.constructor.name;const indexComponent=this.bufferHolderStack.findIndex((stack)=>stack.component.constructor.name===currentComponentName);this.bufferHolderStack.splice(indexComponent,1);this._setUp();});}
get _currentBufferHolder(){return this.bufferHolderStack[this.bufferHolderStack.length-1];}
_setUp(){if(!this._currentBufferHolder){return;}
const{component,state,config}=this._currentBufferHolder;this.component=component;this.state=state;this.config=config;this.decimalPoint=config.decimalPoint||this.defaultDecimalPoint;this.maxTimeBetweenKeys=this.config.useWithBarcode?barcodeService.maxTimeBetweenKeysInMs:0;}
_onKeyboardInput(event){return(this._currentBufferHolder&&this._bufferEvents(this._onInput((event)=>event.key))(event));}
sendKey(key){const event=new CustomEvent("",{detail:{key:key,},});Object.defineProperty(event,"target",{value:{}});return this._bufferEvents(this._onInput((event)=>event.detail.key))(event);}
_bufferEvents(handler){return(event)=>{if(["INPUT","TEXTAREA"].includes(event.target.tagName)||!this.eventsBuffer){return;}
clearTimeout(this._timeout);this.eventsBuffer.push(event);this._timeout=setTimeout(handler,this.maxTimeBetweenKeys);this.handler=handler;};}
_onInput(keyAccessor){return(manualCapture=false)=>{if(manualCapture||session.test_mode||(!manualCapture&&this.eventsBuffer.length<=2)){for(const event of this.eventsBuffer){if(!ALLOWED_KEYS.has(keyAccessor(event))){this.eventsBuffer=[];return;}}
for(const event of this.eventsBuffer){this._handleInput(keyAccessor(event));event.preventDefault();event.stopPropagation();}}
this.eventsBuffer=[];};}
_handleInput(key){if(key==="Enter"&&this.config.triggerAtEnter){this.config.triggerAtEnter(this.state);}else if(key==="Esc"&&this.config.triggerAtEsc){this.config.triggerAtEsc(this.state);}else if(INPUT_KEYS.has(key)){this._updateBuffer(key);if(this.config.triggerAtInput){this.config.triggerAtInput({buffer:this.state.buffer,key,});}}}
_updateBuffer(input){const isEmpty=(val)=>{return val===""||val===null;};if(input===undefined||input===null){return;}
const isFirstInput=isEmpty(this.state.buffer);if(input===","||input==="."){if(this.state.toStartOver){this.state.buffer="";}
if(isFirstInput){this.state.buffer="0"+this.decimalPoint;}else if(!this.state.buffer.length||this.state.buffer==="-"){this.state.buffer+="0"+this.decimalPoint;}else if(this.state.buffer.indexOf(this.decimalPoint)<0){this.state.buffer=this.state.buffer+this.decimalPoint;}}else if(input==="Delete"){if(this.isReset){this.state.buffer="";this.isReset=false;return;}
this.state.buffer=isEmpty(this.state.buffer)?null:"";}else if(input==="Backspace"){if(this.isReset){this.state.buffer="";this.isReset=false;return;}
if(this.state.toStartOver){this.state.buffer="";}
const buffer=this.state.buffer;if(isEmpty(buffer)){this.state.buffer=null;}else{const nCharToRemove=buffer[buffer.length-1]===this.decimalPoint?2:1;this.state.buffer=buffer.substring(0,buffer.length-nCharToRemove);}}else if(input==="+"){if(this.state.buffer[0]==="-"){this.state.buffer=this.state.buffer.substring(1,this.state.buffer.length);}}else if(input==="-"){if(isFirstInput){this.state.buffer="-0";}else if(this.state.buffer[0]==="-"){this.state.buffer=this.state.buffer.substring(1,this.state.buffer.length);}else{this.state.buffer="-"+this.state.buffer;}}else if(input[0]==="+"&&!isNaN(parseFloat(input))){const inputValue=oParseFloat(input.slice(1));const currentBufferValue=this.state.buffer?oParseFloat(this.state.buffer):0;this.state.buffer=this.component.env.utils.formatCurrency(inputValue+currentBufferValue,false);}else if(!isNaN(parseInt(input,10))){if(this.state.toStartOver){this.state.buffer="";}
if(isFirstInput){this.state.buffer=""+input;}else if(this.state.buffer.length>12){this.sound.play("bell");}else{this.state.buffer+=input;}}
if(this.state.buffer==="-"){this.state.buffer="";}
this.isReset=false;this.state.toStartOver=false;this.trigger("buffer-update",this.state.buffer);}}
const numberBufferService=__exports.numberBufferService={dependencies:NumberBuffer.serviceDependencies,start(env,deps){return new NumberBuffer(deps);},};registry.category("services").add("number_buffer",numberBufferService);return __exports;});;

/* /point_of_sale/static/src/app/utils/qr_code_popup/qr_code_popup.js */
odoo.define('@point_of_sale/app/utils/qr_code_popup/qr_code_popup',['@web/core/confirmation_dialog/confirmation_dialog','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{_t}=require("@web/core/l10n/translation");const QRPopup=__exports.QRPopup=class QRPopup extends ConfirmationDialog{static template="point_of_sale.QRConfirmationDialog";static props={...ConfirmationDialog.props,line:Object,order:Object,qrCode:String,};static defaultProps={...ConfirmationDialog.defaultProps,confirmLabel:_t("Confirm Payment"),cancelLabel:_t("Cancel Payment"),title:_t("QR Code Payment"),};setup(){super.setup();this.props.body=_t("Please scan the QR code with %s",this.props.title);this.amount=this.env.utils.formatCurrency(this.props.line.amount);this.showCustomerScreen();}
showCustomerScreen(){this.props.order.uiState["PaymentScreen"]={qrPaymentData:{name:this.props.title,amount:this.amount,qrCode:this.props.qrCode,},};}
async execButton(callback){delete this.props.order.uiState.PaymentScreen.qrPaymentData;return super.execButton(callback);}}
return __exports;});;

/* /point_of_sale/static/src/app/utils/report_service.js */
odoo.define('@point_of_sale/app/utils/report_service',['@web/core/network/rpc','@web/core/registry','@web/core/user','@web/webclient/actions/reports/utils'],function(require){'use strict';let __exports={};const{rpc}=require("@web/core/network/rpc");const{registry}=require("@web/core/registry");const{user}=require("@web/core/user");const{downloadReport}=require("@web/webclient/actions/reports/utils");const reportService=__exports.reportService={dependencies:["ui","orm","pos"],start(env,{ui,orm,pos}){const reportActionsCache={};return{async doAction(reportXmlId,active_ids){ui.block();try{reportActionsCache[reportXmlId]||=rpc("/web/action/load",{action_id:reportXmlId,});const reportAction=await reportActionsCache[reportXmlId];await downloadReport(rpc,{...reportAction,context:{active_ids}},"pdf",user.context);}finally{ui.unblock();}},};},};registry.category("services").add("report",reportService);return __exports;});;

/* /point_of_sale/static/src/app/utils/time_hook.js */
odoo.define('@point_of_sale/app/utils/time_hook',['@odoo/owl','@web/core/l10n/localization'],function(require){'use strict';let __exports={};const{useState,useEffect}=require("@odoo/owl");const{localization}=require("@web/core/l10n/localization");const{DateTime}=luxon;__exports.useTime=useTime;function useTime(){const state=useState({hours:"",day:"",date:""});const timeFormat=localization.timeFormat;const dateFormat=localization.dateFormat.replace(/MM/g,"LLLL").replace(/\/yy$/,"/yyyy").replace(/[^a-zA-Z]+/g,", ");function setTime(){const dateNow=DateTime.now();state.hours=dateNow.toFormat(timeFormat);state.day=dateNow.toFormat("cccc");state.date=dateNow.toFormat(dateFormat);}
useEffect(()=>{const interval=setInterval(()=>setTime(),500);return()=>{clearInterval(interval);};},()=>[]);setTime();return state;}
return __exports;});;

/* /point_of_sale/static/src/app/utils/use_idle_timer.js */
odoo.define('@point_of_sale/app/utils/use_idle_timer',['@odoo/owl'],function(require){'use strict';let __exports={};const{useExternalListener,useState}=require("@odoo/owl");const UserPresenceEvents=["mousemove","mousedown","touchstart","touchend","touchmove","click","scroll","keypress",];__exports.useIdleTimer=useIdleTimer;function useIdleTimer(steps,onAlive){const state=useState({timeout:new Set(steps.map((s)=>s.timeout)),idle:false,time:0,});const checkSteps=()=>{for(const step of steps){if(step.timeout===state.time*1000){state.idle=true;step.action();}}};const onMove=()=>{if(state.idle){state.idle=false;onAlive();}
state.time=0;};for(const event of UserPresenceEvents){useExternalListener(window,event,onMove);}
setInterval(()=>{state.time++;if(state.timeout.has(state.time*1000)){checkSteps();}},1000);return state;}
return __exports;});;

/* /point_of_sale/static/src/overrides/action_service.js */
odoo.define('@point_of_sale/overrides/action_service',['@web/core/utils/patch','@web/webclient/actions/action_service'],function(require){'use strict';let __exports={};const{patch}=require("@web/core/utils/patch");const{actionService}=require("@web/webclient/actions/action_service");patch(actionService,{start(env){const superReturn=super.start(env);return{...superReturn,doAction:async(actionRequest,options={})=>{if(document.body.classList.contains("modal-open")&&typeof actionRequest==="object"){actionRequest.target="new";}
return superReturn.doAction(actionRequest,options);},};},});return __exports;});;

/* /point_of_sale/static/src/overrides/sound_effects_service.js */
odoo.define('@point_of_sale/overrides/sound_effects_service',['@mail/core/common/sound_effects_service','@web/core/utils/patch'],function(require){'use strict';let __exports={};const{SoundEffects}=require("@mail/core/common/sound_effects_service");const{patch}=require("@web/core/utils/patch");patch(SoundEffects.prototype,{play(){this.soundEffects={...this.soundEffects,error:{path:"/point_of_sale/static/src/sounds/error"},bell:{path:"/point_of_sale/static/src/sounds/bell"},notification:{path:"/point_of_sale/static/src/sounds/notification"},beep:{path:"/point_of_sale/static/src/sounds/beep"},};super.play(...arguments);},});return __exports;});;

/* /point_of_sale/static/src/overrides/ui_service.js */
odoo.define('@point_of_sale/overrides/ui_service',['@web/core/ui/ui_service','@web/core/utils/patch'],function(require){'use strict';let __exports={};const{SIZES,utils}=require("@web/core/ui/ui_service");const{patch}=require("@web/core/utils/patch");patch(utils,{isSmall(ui={}){return(ui.size||utils.getSize())<=SIZES.MD;},});return __exports;});;

/* /point_of_sale/static/src/services/account_move_services.js */
odoo.define('@point_of_sale/services/account_move_services',['@account/services/account_move_service','@web/core/browser/feature_detection','@web/core/utils/patch'],function(require){'use strict';let __exports={};const{AccountMoveService}=require("@account/services/account_move_service");const{isIosApp,isIOS}=require("@web/core/browser/feature_detection");const{patch}=require("@web/core/utils/patch");patch(AccountMoveService.prototype,{async downloadPdf(accountMoveId){if(isIosApp()||isIOS()){return await this.action.doAction({type:"ir.actions.act_url",url:`/account/download_invoice_documents/${accountMoveId}/pdf`,});}
return super.downloadPdf(accountMoveId);},});return __exports;});;

/* /web/static/lib/hoot-dom/helpers/dom.js */
odoo.define('@web/../lib/hoot-dom/helpers/dom',['@web/../lib/hoot-dom/hoot_dom_utils','@web/../lib/hoot-dom/helpers/time'],function(require){'use strict';let __exports={};const{HootDomError,getTag,isFirefox,isIterable,parseRegExp}=require("@web/../lib/hoot-dom/hoot_dom_utils");const{waitUntil}=require("@web/../lib/hoot-dom/helpers/time");const{Boolean,document,DOMParser,innerWidth,innerHeight,Map,MutationObserver,Number:{isInteger:$isInteger,isNaN:$isNaN,parseInt:$parseInt,parseFloat:$parseFloat},Object:{keys:$keys,values:$values},RegExp,Set,}=globalThis;const and=(values)=>{const last=values.pop();if(values.length){return[values.join(", "),last].join(" and ");}else{return last;}};const compilePseudoClassRegex=()=>{const customKeys=[...customPseudoClasses.keys()].filter((k)=>k!=="has"&&k!=="not");return new RegExp(`:(${customKeys.join("|")})`);};const elementsMatch=(elements,selector)=>{if(!elements.length){return false;}
return parseSelector(selector).some((selectorParts)=>{const[baseSelector,...filters]=selectorParts.at(-1);for(let i=0;i<elements.length;i++){if(baseSelector&&!elements[i].matches(baseSelector)){return false;}
if(!filters.every((filter)=>matchFilter(filter,elements,i))){return false;}}
return true;});};const ensureElement=(node)=>{if(node){if(isDocument(node)){return node.documentElement;}
if(isWindow(node)){return node.document.documentElement;}
if(isElement(node)){return node;}}
return null;};const extractLayers=(nodes,level,keepInlineTextNodes)=>{const layers=[];for(const node of nodes){if(node.nodeType===Node.COMMENT_NODE){continue;}
if(node.nodeType===Node.TEXT_NODE){const textContent=node.nodeValue.replaceAll(/\n/g,"");const trimmedTextContent=textContent.trim();if(trimmedTextContent){const inline=textContent===trimmedTextContent;layers.push({inline,level,value:{textContent:trimmedTextContent}});}
continue;}
const[open,close]=node.outerHTML.replace(`>${node.innerHTML}<`,">\n<").split("\n");const layer={inline:false,level,value:{open,close}};layers.push(layer);const childLayers=extractLayers(node.childNodes,level+1,false);if(keepInlineTextNodes&&childLayers.length===1&&childLayers[0].inline){layer.value.textContent=childLayers[0].value.textContent;}else{layers.push(...childLayers);}}
return layers;};const filterUniqueNodes=(nodesToFilter)=>{const nodes=[];for(const node of nodesToFilter){if(isQueryableNode(node)&&!nodes.includes(node)){nodes.push(node);}}
return nodes;};const generateStringFromLayers=(layers,tabSize)=>{const result=[];let layerIndex=0;while(layers.length>0){const layer=layers[layerIndex];const{level,value}=layer;const pad=" ".repeat(tabSize*level);let nextLayerIndex=layerIndex+1;if(value.open){if(value.textContent){result.push(`${pad}${value.open}${value.textContent}${value.close}`);layers.splice(layerIndex,1);nextLayerIndex--;}else{result.push(`${pad}${value.open}`);delete value.open;}}else{if(value.close){result.push(`${pad}${value.close}`);}else if(value.textContent){result.push(`${pad}${value.textContent}`);}
layers.splice(layerIndex,1);nextLayerIndex--;}
if(nextLayerIndex>=layers.length){layerIndex=nextLayerIndex-1;continue;}
const nextLayer=layers[nextLayerIndex];if(nextLayerIndex===0||nextLayer.level>layers[nextLayerIndex-1].level){layerIndex=nextLayerIndex;}else{layerIndex=nextLayerIndex-1;}}
return result.join("\n");};const getNodeContent=(node)=>{switch(getTag(node)){case"input":case"option":case"textarea":return getNodeValue(node);case"select":return[...node.selectedOptions].map(getNodeValue).join(",");}
return getNodeText(node);};const getStringContent=(string)=>string.match(R_QUOTE_CONTENT)?.[2]||string;const isChar=(char)=>Boolean(char)&&R_CHAR.test(char);const isDocument=(object)=>object?.nodeType===Node.DOCUMENT_NODE;const isElement=(object)=>object?.nodeType===Node.ELEMENT_NODE;const isQueryableNode=(node)=>QUERYABLE_NODE_TYPES.includes(node.nodeType);const isRootElement=(el)=>el&&R_ROOT_ELEMENT.test(el.nodeName||"");const isShadowRoot=(el)=>el.nodeType===Node.DOCUMENT_FRAGMENT_NODE&&Boolean(el.host);const isWindow=(object)=>object?.window===object&&object.constructor.name==="Window";const isWhiteSpace=(char)=>Boolean(char)&&R_HORIZONTAL_WHITESPACE.test(char);const makePatternBasedPseudoClass=(pseudoClass,getContent)=>{return(content)=>{let regex;try{regex=parseRegExp(content);}catch(err){throw selectorError(pseudoClass,err.message);}
if(regex instanceof RegExp){return function containsRegExp(node){return regex.test(String(getContent(node)));};}else{const lowerContent=content.toLowerCase();return function containsString(node){return getStringContent(String(getContent(node))).toLowerCase().includes(lowerContent);};}};};const matchFilter=(filter,nodes,index)=>{const node=nodes[index];if(typeof filter==="function"){return filter(node,index,nodes);}else{return node.matches?.(String(filter));}};const matchesQuery=(query,width,height)=>query.toLowerCase().split(/\s*,\s*/).some((orPart)=>orPart.split(/\s*\band\b\s*/).every((andPart)=>matchesQueryPart(andPart,width,height)));const matchesQueryPart=(query,width,height)=>{const[,key,value]=query.match(/\(\s*([\w-]+)\s*:\s*(.+)\s*\)/)||[];let result=false;if(key){switch(key){case"display-mode":{result=value===mockedMatchMedia.DISPLAY_MODE;break;}
case"max-height":{result=height<=$parseFloat(value);break;}
case"max-width":{result=width<=$parseFloat(value);break;}
case"min-height":{result=height>=$parseFloat(value);break;}
case"min-width":{result=width>=$parseFloat(value);break;}
case"orientation":{result=value==="landscape"?width>height:width<height;break;}
case"pointer":{switch(value){case"coarse":{result=globalThis.ontouchstart!==undefined;break;}
case"fine":{result=globalThis.ontouchstart===undefined;break;}}
break;}
case"prefers-color-scheme":{result=value===mockedMatchMedia.COLOR_SCHEME;break;}
case"prefers-reduced-motion":{result=value===mockedMatchMedia.REDUCED_MOTION;break;}}}
return query.startsWith("not")?!result:result;};const parseNumberTuple=(value,propsA,propsB)=>{let result=[];if(value&&typeof value==="object"){if(isIterable(value)){[result[0],result[1]]=[...value];}else{for(const prop of propsA){result[0]??=value[prop];}
for(const prop of propsB){result[1]??=value[prop];}}}else{result=[value,value];}
return result.map($parseFloat);};const parseSelector=(selector)=>{const addToSelector=(selector)=>{registerChar=false;const index=currentPart.length-1;if(typeof currentPart[index]==="string"){currentPart[index]+=selector;}else{currentPart.push(selector);}};const firstPart=[""];const firstGroup=[firstPart];const groups=[firstGroup];const parens=[0,0];let currentGroup=groups.at(-1);let currentPart=currentGroup.at(-1);let currentPseudo=null;let currentQuote=null;let registerChar=true;for(let i=0;i<selector.length;i++){const char=selector[i];registerChar=true;switch(char){case",":{if(!currentQuote&&!currentPseudo){groups.push([[""]]);currentGroup=groups.at(-1);currentPart=currentGroup.at(-1);registerChar=false;}
break;}
case" ":case"\t":case"\n":case"\r":case"\f":case"\v":{if(!currentQuote&&!currentPseudo){if(currentPart[0]||currentPart.length>1){currentGroup.push([""]);currentPart=currentGroup.at(-1);}
registerChar=false;}
break;}
case`'`:case`"`:{if(char===currentQuote){currentQuote=null;}else if(!currentQuote){currentQuote=char;}
break;}
case">":case"+":case"~":{if(!currentQuote&&!currentPseudo){while(isWhiteSpace(selector[i+1])){i++;}
addToSelector(char);}
break;}
case":":{if(!currentQuote&&!currentPseudo){let pseudo="";while(isChar(selector[i+1])){pseudo+=selector[++i];}
if(customPseudoClasses.has(pseudo)){if(selector[i+1]==="("){parens[0]++;i++;registerChar=false;}
currentPseudo=[pseudo,""];}else{addToSelector(char+pseudo);}}
break;}
case"(":{if(!currentQuote){parens[0]++;}
break;}
case")":{if(!currentQuote){parens[1]++;}
break;}}
if(currentPseudo){if(parens[0]===parens[1]){const[pseudo,content]=currentPseudo;const makeFilter=customPseudoClasses.get(pseudo);if(pseudo==="iframe"&&!currentPart[0].startsWith("iframe")){currentPart[0]=`iframe${currentPart[0]}`;}
currentPart.push(makeFilter(getStringContent(content)));currentPseudo=null;}else if(registerChar){currentPseudo[1]+=selector[i];}}else if(registerChar){addToSelector(selector[i]);}}
return groups;};const parseXml=(xmlString,type)=>{const wrapperTag=type==="html"?"body":"templates";const document=parser.parseFromString(`<${wrapperTag}>${xmlString}</${wrapperTag}>`,`text/${type}`);if(document.getElementsByTagName("parsererror").length){const trimmed=xmlString.length>80?xmlString.slice(0,80)+"…":xmlString;throw new HootDomError(`error while parsing ${trimmed}: ${getNodeText(
                document.getElementsByTagName("parsererror")[0]
            )}`);}
return document.getElementsByTagName(wrapperTag)[0].childNodes;};const pixelValueToNumber=(val)=>$parseFloat(val.endsWith("px")?val.slice(0,-2):val);const queryWithCustomSelector=(nodes,selector)=>{const selectorGroups=parseSelector(selector);const foundNodes=[];for(const selectorParts of selectorGroups){let groupNodes=nodes;for(const[partSelector,...filters]of selectorParts){let baseSelector=partSelector;let nodeGetter;switch(baseSelector[0]){case"+":{nodeGetter=NEXT_SIBLING;break;}
case">":{nodeGetter=DIRECT_CHILDREN;break;}
case"~":{nodeGetter=NEXT_SIBLINGS;break;}}
if(nodeGetter){baseSelector=baseSelector.slice(1);}
const getNodes=nodeGetter||DESCENDANTS;let currentGroupNodes=groupNodes.flatMap((node)=>getNodes(node,baseSelector));const pseudosReturningNode=new Set();for(const filter of filters){const filteredGroupNodes=[];for(let i=0;i<currentGroupNodes.length;i++){const result=matchFilter(filter,currentGroupNodes,i);if(result===true){filteredGroupNodes.push(currentGroupNodes[i]);}else if(result){filteredGroupNodes.push(result);pseudosReturningNode.add(filter.name);}}
if(pseudosReturningNode.size>1){const pseudoList=[...pseudosReturningNode];throw selectorError(pseudoList[0],`cannot use multiple pseudo-classes returning nodes (${and(pseudoList)})`);}
currentGroupNodes=filteredGroupNodes;}
groupNodes=currentGroupNodes;}
foundNodes.push(...groupNodes);}
return filterUniqueNodes(foundNodes);};const selectorError=(pseudoClass,message)=>new HootDomError(`invalid selector \`:${pseudoClass}\`: ${message}`);const R_CHAR=/[\w-]/;const R_QUOTE_CONTENT=/^\s*(['"])?([^]*?)\1\s*$/;const R_ROOT_ELEMENT=/^(HTML|HEAD|BODY)$/;const R_HORIZONTAL_WHITESPACE=/[\r\t\f \u00a0\u1680\u2000-\u200a\u2028\u2029\u202f\u205f\u3000\ufeff]+/g;const QUERYABLE_NODE_TYPES=[Node.ELEMENT_NODE,Node.DOCUMENT_NODE,Node.DOCUMENT_FRAGMENT_NODE];const parser=new DOMParser();const DIRECT_CHILDREN=(node,selector)=>{const children=[];for(const childNode of node.childNodes){if(childNode.matches?.(selector)){children.push(childNode);}}
return children;};const DESCENDANTS=(node,selector)=>[...(node.querySelectorAll?.(selector||"*")||[])];const NEXT_SIBLING=(node,selector)=>{const sibling=node.nextElementSibling;return sibling?.matches?.(selector)?[sibling]:[];};const NEXT_SIBLINGS=(node,selector)=>{const siblings=[];while((node=node.nextElementSibling)){if(node.matches?.(selector)){siblings.push(node);}}
return siblings;};const observers=new Map();const currentDimensions={width:innerWidth,height:innerHeight,};let getDefaultRoot=()=>document;const customPseudoClasses=new Map();customPseudoClasses.set("contains",makePatternBasedPseudoClass("contains",getNodeText)).set("displayed",()=>{return function displayed(node){return isNodeDisplayed(node);};}).set("empty",()=>{return function empty(node){return isEmpty(node);};}).set("eq",(content)=>{const index=$parseInt(content);if(!$isInteger(index)){throw selectorError("eq",`expected index to be an integer (got ${content})`);}
return function eq(node,i,nodes){return index<0?i===nodes.length+index:i===index;};}).set("first",()=>{return function first(node,i){return i===0;};}).set("focusable",()=>{return function focusable(node){return isNodeFocusable(node);};}).set("has",(content)=>{return function has(node){return Boolean(queryAll(content,{root:node}).length);};}).set("hidden",()=>{return function hidden(node){return!isNodeVisible(node);};}).set("iframe",()=>{return function iframe(node){const doc=node.contentDocument;return doc&&doc.readyState!=="loading"?doc:false;};}).set("last",()=>{return function last(node,i,nodes){return i===nodes.length-1;};}).set("not",(content)=>{return function not(node){return!matches(node,content);};}).set("only",()=>{return function only(node,i,nodes){return nodes.length===1;};}).set("scrollable",()=>{return function scrollable(node){return isNodeScrollable(node);};}).set("selected",()=>{return function selected(node){return Boolean(node.selected);};}).set("shadow",()=>{return function shadow(node){return node.shadowRoot||false;};}).set("value",makePatternBasedPseudoClass("value",getNodeValue)).set("visible",()=>{return function visible(node){return isNodeVisible(node);};});const rCustomPseudoClass=compilePseudoClassRegex();__exports.cleanupDOM=cleanupDOM;function cleanupDOM(){currentDimensions.width=innerWidth;currentDimensions.height=innerHeight;const remainingObservers=observers.size;if(remainingObservers){for(const{observer}of observers.values()){observer.disconnect();}
observers.clear();}}
__exports.defineRootNode=defineRootNode;function defineRootNode(node){if(typeof node==="function"){getDefaultRoot=node;}else if(node){getDefaultRoot=()=>node;}else{getDefaultRoot=()=>document;}}
__exports.getCurrentDimensions=getCurrentDimensions;function getCurrentDimensions(){return currentDimensions;}
__exports.getDefaultRootNode=getDefaultRootNode;function getDefaultRootNode(){return getDefaultRoot();}
__exports.getDocument=getDocument;function getDocument(node){node||=getDefaultRoot();return isDocument(node)?node:node.ownerDocument||document;}
__exports.getNodeAttribute=getNodeAttribute;function getNodeAttribute(node,attribute){return node.getAttribute?.(attribute)??null;}
__exports.getNodeValue=getNodeValue;function getNodeValue(node){switch(node.type){case"checkbox":case"radio":return node.checked;case"file":return[...node.files];case"number":case"range":return node.valueAsNumber;case"date":case"datetime-local":case"month":case"time":case"week":return node.valueAsDate.toISOString();}
return node.value;}
__exports.getNodeRect=getNodeRect;function getNodeRect(node,options){if(!isElement(node)){return new DOMRect();}
const rect=node.getBoundingClientRect();const parentFrame=getParentFrame(node);if(parentFrame){const parentRect=getNodeRect(parentFrame);rect.x-=parentRect.x;rect.y-=parentRect.y;}
if(!options?.trimPadding){return rect;}
const style=getStyle(node);const{x,y,width,height}=rect;const[pl,pr,pt,pb]=["left","right","top","bottom"].map((side)=>pixelValueToNumber(style.getPropertyValue(`padding-${side}`)));return new DOMRect(x+pl,y+pt,width-(pl+pr),height-(pt+pb));}
__exports.getNodeText=getNodeText;function getNodeText(node,options){let content;if(typeof node.innerText==="string"){content=node.innerText;}else{content=node.textContent;}
if(options?.raw){return content;}
return content.replace(R_HORIZONTAL_WHITESPACE," ").trim();}
__exports.getStyle=getStyle;function getStyle(node){return isElement(node)?getComputedStyle(node):null;}
__exports.getWindow=getWindow;function getWindow(node){return getDocument(node).defaultView;}
__exports.isCheckable=isCheckable;function isCheckable(node){switch(getTag(node)){case"input":return node.type==="checkbox"||node.type==="radio";case"label":return isCheckable(node.control);default:return false;}}
__exports.isEmpty=isEmpty;function isEmpty(value){if(!value){return true;}
if(typeof value==="object"){if(isNode(value)){return isEmpty(getNodeContent(value));}
if(!isIterable(value)){value=$keys(value);}
return[...value].length===0;}
return false;}
__exports.isEventTarget=isEventTarget;function isEventTarget(object){return object&&typeof object.addEventListener==="function";}
__exports.isNode=isNode;function isNode(object){return object&&typeof object.nodeType==="number"&&typeof object.nodeName==="string";}
__exports.isNodeCssVisible=isNodeCssVisible;function isNodeCssVisible(node){const element=ensureElement(node);if(element===getDefaultRoot()||isRootElement(element)){return true;}
const style=getStyle(element);if(style?.visibility==="hidden"||style?.opacity==="0"){return false;}
const parent=element.parentNode;return!parent||isNodeCssVisible(isShadowRoot(parent)?parent.host:parent);}
__exports.isNodeDisplayed=isNodeDisplayed;function isNodeDisplayed(node){const element=ensureElement(node);if(!isInDOM(element)){return false;}
if(isRootElement(element)||element.offsetParent||element.closest("svg")){return true;}
return!isFirefox()&&getStyle(element)?.position==="fixed";}
__exports.isNodeFocusable=isNodeFocusable;function isNodeFocusable(node,options){return(isNodeDisplayed(node)&&node.matches?.(FOCUSABLE_SELECTOR)&&(!options?.tabbable||node.tabIndex>=0));}
__exports.isNodeInViewPort=isNodeInViewPort;function isNodeInViewPort(node){const element=ensureElement(node);const{x,y}=getNodeRect(element);return y>0&&y<currentDimensions.height&&x>0&&x<currentDimensions.width;}
__exports.isNodeScrollable=isNodeScrollable;function isNodeScrollable(node,axis){if(!isElement(node)){return false;}
const[scrollProp,sizeProp]=axis==="x"?["scrollWidth","clientWidth"]:["scrollHeight","clientHeight"];if(node[scrollProp]>node[sizeProp]){const overflow=getStyle(node).getPropertyValue("overflow");if(/\bauto\b|\bscroll\b/.test(overflow)){return true;}}
return false;}
__exports.isNodeVisible=isNodeVisible;function isNodeVisible(node){const element=ensureElement(node);if(!isNodeDisplayed(element)||!isNodeCssVisible(element)){return false;}
let visible=false;const{width,height}=getNodeRect(element);visible=width>0&&height>0;if(!visible&&getStyle(element)?.display==="contents"){for(const child of element.childNodes){if(isNodeVisible(child)){return true;}}}
return visible;}
__exports.mockedMatchMedia=mockedMatchMedia;function mockedMatchMedia(query){let onchange=null;return{addEventListener:(type,callback)=>window.addEventListener("resize",callback),get matches(){return matchesQuery(query,window.innerWidth,window.innerHeight);},media:query,get onchange(){return onchange;},set onchange(value){value||=null;if(value){window.addEventListener("resize",value);}else{window.removeEventListener("resize",onchange);}
onchange=value;},removeEventListener:(type,callback)=>window.removeEventListener("resize",callback),};}
mockedMatchMedia.COLOR_SCHEME="light";mockedMatchMedia.DISPLAY_MODE="browser";mockedMatchMedia.REDUCED_MOTION="reduce";__exports.parseDimensions=parseDimensions;function parseDimensions(dimensions){return parseNumberTuple(dimensions,["width","w"],["height","h"]);}
__exports.parsePosition=parsePosition;function parsePosition(position){return parseNumberTuple(position,["x","left","clientX","pageX","screenX"],["y","top","clientY","pageY","screenY"]);}
__exports.setDimensions=setDimensions;function setDimensions(width,height){const defaultRoot=getDefaultRoot();if(!$isNaN(width)){currentDimensions.width=width;defaultRoot.style?.setProperty("width",`${width}px`,"important");}
if(!$isNaN(height)){currentDimensions.height=height;defaultRoot.style?.setProperty("height",`${height}px`,"important");}}
__exports.toSelector=toSelector;function toSelector(node,options){const parts={tag:node.nodeName.toLowerCase(),};if(node.id){parts.id=`#${node.id}`;}
if(node.classList?.length){parts.class=`.${[...node.classList].join(".")}`;}
return options?.object?parts:$values(parts).join("");}
const FOCUSABLE_SELECTOR=__exports.FOCUSABLE_SELECTOR=["a[href]","area[href]","button:enabled","details > summary:first-of-type","iframe","input:enabled","select:enabled","textarea:enabled","[tabindex]","[contenteditable=true]",].join(",");__exports.formatXml=formatXml;function formatXml(value,options){const nodes=parseXml(value,options?.type||"xml");const layers=extractLayers(nodes,0,options?.keepInlineTextNodes??false);return generateStringFromLayers(layers,options?.tabSize??4);}
__exports.getActiveElement=getActiveElement;function getActiveElement(node){const{activeElement}=getDocument(node);if(activeElement.contentDocument){return getActiveElement(activeElement.contentDocument);}
if(activeElement.shadowRoot){return activeElement.shadowRoot.activeElement;}
return activeElement;}
__exports.getFocusableElements=getFocusableElements;function getFocusableElements(options){const parent=queryOne(options?.root||getDefaultRoot());if(typeof parent.querySelectorAll!=="function"){return[];}
const byTabIndex={};for(const element of parent.querySelectorAll(FOCUSABLE_SELECTOR)){const{tabIndex}=element;if((options?.tabbable&&tabIndex<0)||!isNodeDisplayed(element)){continue;}
if(!byTabIndex[tabIndex]){byTabIndex[tabIndex]=[];}
byTabIndex[tabIndex].push(element);}
const withTabIndexZero=byTabIndex[0]||[];delete byTabIndex[0];return[...$values(byTabIndex).flat(),...withTabIndexZero];}
__exports.getNextFocusableElement=getNextFocusableElement;function getNextFocusableElement(options){const parent=queryOne(options?.root||getDefaultRoot());const focusableEls=getFocusableElements({...options,parent});const index=focusableEls.indexOf(getActiveElement(parent));return focusableEls[index+1]||null;}
__exports.getParentFrame=getParentFrame;function getParentFrame(node){const nodeDocument=node.ownerDocument;const view=nodeDocument.defaultView;if(view!==view.parent){for(const iframe of view.parent.document.getElementsByTagName("iframe")){if(iframe.contentDocument===nodeDocument){return iframe;}}}
return null;}
__exports.getPreviousFocusableElement=getPreviousFocusableElement;function getPreviousFocusableElement(options){const parent=queryOne(options?.root||getDefaultRoot());const focusableEls=getFocusableElements({...options,parent});const index=focusableEls.indexOf(getActiveElement(parent));return index<0?focusableEls.at(-1):focusableEls[index-1]||null;}
__exports.isDisplayed=isDisplayed;function isDisplayed(target){return queryAll(target,{displayed:true}).length>0;}
__exports.isEditable=isEditable;function isEditable(node){return(isElement(node)&&!node.matches?.(":disabled")&&["input","textarea"].includes(getTag(node)));}
__exports.isFocusable=isFocusable;function isFocusable(target,options){const nodes=queryAll(...arguments);return nodes.length&&nodes.every((node)=>isNodeFocusable(node,options));}
__exports.isInDOM=isInDOM;function isInDOM(target){return ensureElement(target)?.isConnected;}
__exports.isInViewPort=isInViewPort;function isInViewPort(target){return queryAll(target,{viewPort:true}).length>0;}
__exports.isScrollable=isScrollable;function isScrollable(target,axis){const nodes=queryAll(target);return nodes.length&&nodes.every((node)=>isNodeScrollable(node,axis));}
__exports.isVisible=isVisible;function isVisible(target){return queryAll(target,{visible:true}).length>0;}
__exports.matches=matches;function matches(target,selector){return elementsMatch(queryAll(target),selector);}
__exports.observe=observe;function observe(target,callback){if(observers.has(target)){observers.get(target).callbacks.add(callback);}else{const callbacks=new Set([callback]);const observer=new MutationObserver((mutations,observer)=>{for(const callback of callbacks){callback(mutations,observer);}});observer.observe(target,{attributes:true,characterData:true,childList:true,subtree:true,});observers.set(target,{callbacks,observer});}
return function disconnect(){if(!observers.has(target)){return;}
const{callbacks,observer}=observers.get(target);callbacks.delete(callback);if(!callbacks.size){observer.disconnect();observers.delete(target);}};}
__exports.queryAll=queryAll;function queryAll(target,options){if(!target){return[];}
if(target.raw){return queryAll(String.raw(...arguments));}
const{exact,displayed,root,viewPort,visible}=options||{};let nodes=[];let selector;if(typeof target==="string"){nodes=root?queryAll(root):[getDefaultRoot()];selector=target.trim();}else if(isIterable(target)&&!isNode(target)){nodes=filterUniqueNodes(target);}else{nodes=filterUniqueNodes([target]);}
if(selector&&nodes.length){if(rCustomPseudoClass.test(selector)){nodes=queryWithCustomSelector(nodes,selector);}else{nodes=filterUniqueNodes(nodes.flatMap((node)=>DESCENDANTS(node,selector)));}}
let prefix,suffix;if(visible+displayed>1){throw new HootDomError(`cannot use more than one visibility modifier ('visible' implies 'displayed')`);}
if(viewPort){nodes=nodes.filter(isNodeInViewPort);suffix="in viewport";}else if(visible){nodes=nodes.filter(isNodeVisible);prefix="visible";}else if(displayed){nodes=nodes.filter(isNodeDisplayed);prefix="displayed";}
const count=nodes.length;if($isInteger(exact)&&count!==exact){const s=count===1?"":"s";const strPrefix=prefix?`${prefix} `:"";const strSuffix=suffix?` ${suffix}`:"";const strSelector=typeof target==="string"?`(selector: "${target}")`:"";throw new HootDomError(`found ${count} ${strPrefix}node${s}${strSuffix} instead of ${exact} ${strSelector}`);}
return nodes;}
__exports.queryAttribute=queryAttribute;function queryAttribute(target,attribute,options){return getNodeAttribute(queryOne(target,options),attribute);}
__exports.queryAllAttributes=queryAllAttributes;function queryAllAttributes(target,attribute,options){return queryAll(target,options).map((node)=>getNodeAttribute(node,attribute));}
__exports.queryAllProperties=queryAllProperties;function queryAllProperties(target,property,options){return queryAll(target,options).map((node)=>node[property]);}
__exports.queryAllRects=queryAllRects;function queryAllRects(target,options){return queryAll(...arguments).map(getNodeRect);}
__exports.queryAllTexts=queryAllTexts;function queryAllTexts(target,options){return queryAll(...arguments).map((node)=>getNodeText(node,options));}
__exports.queryAllValues=queryAllValues;function queryAllValues(target,options){return queryAll(...arguments).map(getNodeValue);}
__exports.queryFirst=queryFirst;function queryFirst(target,options){return queryAll(...arguments)[0]||null;}
__exports.queryOne=queryOne;function queryOne(target,options){if(target.raw){return queryOne(String.raw(...arguments));}
if($isInteger(options?.exact)){throw new HootDomError(`cannot call \`queryOne\` with 'exact'=${options.exact}: did you mean to use \`queryAll\`?`);}
return queryAll(target,{...options,exact:1})[0];}
__exports.queryRect=queryRect;function queryRect(target,options){return getNodeRect(queryOne(...arguments),options);}
__exports.queryText=queryText;function queryText(target,options){return getNodeText(queryOne(...arguments),options);}
__exports.queryValue=queryValue;function queryValue(target,options){return getNodeValue(queryOne(...arguments));}
__exports.waitFor=waitFor;function waitFor(target,options){return waitUntil(()=>queryFirst(...arguments),{message:`Could not find elements matching "${target}" within %timeout% milliseconds`,...options,});}
__exports.waitForNone=waitForNone;function waitForNone(target,options){let count=0;return waitUntil(()=>{count=queryAll(...arguments).length;return!count;},{message:()=>`Could still find ${count} elements matching "${target}" after %timeout% milliseconds`,...options,});}
return __exports;});;

/* /web/static/lib/hoot-dom/helpers/events.js */
odoo.define('@web/../lib/hoot-dom/helpers/events',['@web/../lib/hoot-dom/hoot_dom_utils','@web/../lib/hoot-dom/helpers/dom','@web/../lib/hoot-dom/helpers/time'],function(require){'use strict';let __exports={};const{HootDomError,getTag,isFirefox,isIterable}=require("@web/../lib/hoot-dom/hoot_dom_utils");const{getActiveElement,getDocument,getNextFocusableElement,getNodeRect,getNodeValue,getPreviousFocusableElement,getWindow,isCheckable,isEditable,isEventTarget,isNode,isNodeFocusable,isNodeVisible,parseDimensions,parsePosition,queryAll,queryFirst,setDimensions,toSelector,}=require("@web/../lib/hoot-dom/helpers/dom");const{getTimeOffset,microTick}=require("@web/../lib/hoot-dom/helpers/time");const{AnimationEvent,ClipboardEvent,CompositionEvent,console:{dir:$dir,groupCollapsed:$groupCollapsed,groupEnd:$groupEnd,log:$log},DataTransfer,document,DragEvent,ErrorEvent,Event,FocusEvent,KeyboardEvent,Math:{ceil:$ceil,max:$max,min:$min},MouseEvent,Number:{isInteger:$isInteger,isNaN:$isNaN,parseFloat:$parseFloat},Object:{assign:$assign,values:$values},PointerEvent,PromiseRejectionEvent,String,SubmitEvent,Touch,TouchEvent,TypeError,WheelEvent,}=globalThis;const $createRange=document.createRange.bind(document);const $hasFocus=document.hasFocus.bind(document);const catchNextEvent=(target,type)=>new Promise((resolve)=>{target.addEventListener(type,(event)=>{getCurrentEvents().push(event);resolve(event);},{once:true});});const deleteSelection=(target)=>{const{selectionStart,selectionEnd,value}=target;return value.slice(0,selectionStart)+value.slice(selectionEnd);};const dispatchPointerEvent=async(target,eventType,eventInit,{mouse,touch})=>{const pointerEvent=await dispatch(target,eventType,eventInit);let prevented=isPrevented(pointerEvent);if(hasTouch()){if(touch&&runTime.pointerDownTarget){const[touchEventType,touchEventInit]=touch;await dispatch(runTime.pointerDownTarget,touchEventType,touchEventInit||eventInit);}}else{if(mouse&&!prevented){const[mouseEventType,mouseEventInit]=mouse;const mouseEvent=await dispatch(target,mouseEventType,mouseEventInit||eventInit);prevented=isPrevented(mouseEvent);}}
return prevented;};const dispatchRelatedEvents=async(events,eventType,eventInit)=>{for(const event of events){if(!event.target||isPrevented(event)){break;}
await dispatch(event.target,eventType,eventInit);}};const ensureArray=(value)=>(isIterable(value)?[...value]:[value]);const getCurrentEvents=()=>{const eventType=currentEventTypes.at(-1);if(!eventType){return[];}
currentEvents[eventType]||=[];return currentEvents[eventType];};const getDefaultRunTimeValue=()=>({isComposing:false,canStartDrag:false,isDragging:false,lastDragOverCancelled:false,clickCount:0,key:null,pointerDownTarget:null,pointerDownTimeout:0,pointerTarget:null,position:{},previousPointerDownTarget:null,previousPointerTarget:null,touchStartPosition:{},fileInput:null,buttons:0,modifierKeys:{altKey:false,ctrlKey:false,metaKey:false,shiftKey:false,},});const getDifferentParents=(el1,el2)=>{if(!el1&&!el2){return[];}else if(!el1&&el2){[el1,el2]=[el2,el1];}
const parents=[el2||el1];while(parents[0].parentElement){const parent=parents[0].parentElement;if(el2&&parent.contains(el1)){break;}
parents.unshift(parent);}
return parents;};const getEventConstructor=(eventType)=>{switch(eventType){case"dblclick":case"mousedown":case"mouseup":case"mousemove":case"mouseover":case"mouseout":return[MouseEvent,mapMouseEvent,BUBBLES|CANCELABLE];case"mouseenter":case"mouseleave":return[MouseEvent,mapMouseEvent];case"auxclick":case"click":case"contextmenu":case"pointerdown":case"pointerup":case"pointermove":case"pointerover":case"pointerout":return[PointerEvent,mapPointerEvent,BUBBLES|CANCELABLE];case"pointerenter":case"pointerleave":case"pointercancel":return[PointerEvent,mapPointerEvent];case"blur":case"focus":return[FocusEvent,mapEvent];case"focusin":case"focusout":return[FocusEvent,mapEvent,BUBBLES];case"cut":case"copy":case"paste":return[ClipboardEvent,mapEvent,BUBBLES];case"keydown":case"keyup":return[KeyboardEvent,mapKeyboardEvent,BUBBLES|CANCELABLE];case"drag":case"dragend":case"dragenter":case"dragstart":case"dragleave":case"dragover":case"drop":return[DragEvent,mapEvent,BUBBLES];case"beforeinput":return[InputEvent,mapInputEvent,BUBBLES|CANCELABLE];case"input":return[InputEvent,mapInputEvent,BUBBLES];case"compositionstart":case"compositionend":return[CompositionEvent,mapEvent,BUBBLES];case"select":case"selectionchange":return[Event,mapEvent,BUBBLES];case"touchstart":case"touchend":case"touchmove":return[TouchEvent,mapTouchEvent,BUBBLES|CANCELABLE];case"touchcancel":return[TouchEvent,mapTouchEvent,BUBBLES];case"resize":return[Event,mapEvent];case"submit":return[SubmitEvent,mapEvent,BUBBLES|CANCELABLE];case"wheel":return[WheelEvent,mapWheelEvent,BUBBLES];case"animationcancel":case"animationend":case"animationiteration":case"animationstart":{return[AnimationEvent,mapEvent,BUBBLES|CANCELABLE];}
case"error":return[ErrorEvent,mapEvent];case"unhandledrejection":return[PromiseRejectionEvent,mapEvent,CANCELABLE];case"beforeunload":return[Event,mapEvent,CANCELABLE];case"unload":return[Event,mapEvent];default:return[Event,mapEvent,BUBBLES];}};const getFirstCommonParent=(a,b)=>{if(!a||!b||a.ownerDocument!==b.ownerDocument){return null;}
const range=document.createRange();range.setStart(a,0);range.setEnd(b,0);if(range.collapsed){range.setStart(b,0);range.setEnd(a,0);}
return range.commonAncestorContainer;};const getPosition=(element,options)=>{const{position,relative}=options||{};const isString=typeof position==="string";const[posX,posY]=parsePosition(position);if(!isString&&!relative&&!$isNaN(posX)&&!$isNaN(posY)){return toEventPosition(posX,posY,position);}
const{x,y,width,height}=getNodeRect(element);let clientX=x;let clientY=y;if(isString){const positions=position.split("-");if(positions.includes("left")){clientX-=1;}else if(positions.includes("right")){clientX+=$ceil(width)+1;}else{clientX+=width/2;}
if(positions.includes("top")){clientY-=1;}else if(positions.includes("bottom")){clientY+=$ceil(height)+1;}else{clientY+=height/2;}}else{if($isNaN(posX)){clientX+=width/2;}else{if(relative){clientX+=posX||0;}else{clientX=posX||0;}}
if($isNaN(posY)){clientY+=height/2;}else{if(relative){clientY+=posY||0;}else{clientY=posY||0;}}}
return toEventPosition(clientX,clientY,position);};const getStringSelection=(target)=>$isInteger(target.selectionStart)&&$isInteger(target.selectionEnd)&&[target.selectionStart,target.selectionEnd].join(",");const hasTagName=(node,...tagNames)=>tagNames.includes(getTag(node));const hasTouch=()=>globalThis.ontouchstart!==undefined||globalThis.matchMedia("(pointer:coarse)").matches;const isDifferentPosition=(target,options)=>{const previous=runTime.position;const next=isNode(target)?getPosition(target,options):target;for(const key in next){if(previous[key]!==next[key]){return true;}}
return false;};const isNil=(value)=>value===null||value===undefined;const isPrevented=(event)=>event&&event.defaultPrevented;const parseKeyStrokes=(keyStrokes,options)=>(isIterable(keyStrokes)?[...keyStrokes]:[keyStrokes]).map((key)=>{const lower=key.toLowerCase();return{...options,key:lower.length===1?key:KEY_ALIASES[lower]||key,};});const redirectSubmit=(ev)=>{if(isPrevented(ev)){return;}
ev.preventDefault();const form=ev.target;globalThis.fetch(form.action,{method:form.method,body:new FormData(form,ev.submitter),});};const registerButton=(eventInit,toggle)=>{let value=0;switch(eventInit.button){case btn.LEFT:{value=1;break;}
case btn.MIDDLE:{value=4;break;}
case btn.RIGHT:{value=2;break;}
case btn.BACK:{value=8;break;}
case btn.FORWARD:{value=16;break;}}
runTime.buttons=$max(runTime.buttons+(toggle?value:-value),0);};const registerFileInput=({target})=>{if(getTag(target)==="input"&&target.type==="file"){runTime.fileInput=target;}else{runTime.fileInput=null;}};const registerForChange=async(target,initialValue,confirmAction)=>{const dispatchChange=()=>target.value!==initialValue&&dispatch(target,"change");confirmAction&&=confirmAction.toLowerCase();if(confirmAction==="auto"){confirmAction=getTag(target)==="input"?"enter":"blur";}
if(getTag(target)==="input"){changeTargetListeners.push(on(target,"keydown",(ev)=>{if(isPrevented(ev)||ev.key!=="Enter"){return;}
removeChangeTargetListeners();afterNextDispatch=dispatchChange;}));}else if(confirmAction==="enter"){throw new HootDomError(`"enter" confirm action is only supported on <input/> elements`);}
changeTargetListeners.push(on(target,"blur",()=>{removeChangeTargetListeners();dispatchChange();}),on(target,"change",removeChangeTargetListeners));switch(confirmAction){case"blur":{await _click(getDocument(target).body,{position:{x:0,y:0},});break;}
case"enter":{await _press(target,{key:"Enter"});break;}
case"tab":{await _press(target,{key:"Tab"});break;}}};const registerSpecialKey=(eventInit,toggle)=>{switch(eventInit.key){case"Alt":{runTime.modifierKeys.altKey=toggle;break;}
case"Control":{runTime.modifierKeys.ctrlKey=toggle;break;}
case"Meta":{runTime.modifierKeys.metaKey=toggle;break;}
case"Shift":{runTime.modifierKeys.shiftKey=toggle;break;}}};const removeChangeTargetListeners=()=>{while(changeTargetListeners.length){changeTargetListeners.pop()();}};const setPointerDownTarget=(target)=>{if(runTime.pointerDownTarget){runTime.previousPointerDownTarget=runTime.pointerDownTarget;}
runTime.pointerDownTarget=target;runTime.canStartDrag=false;};const setPointerTarget=async(target,options)=>{runTime.previousPointerTarget=runTime.pointerTarget;runTime.pointerTarget=target;if(runTime.pointerTarget!==runTime.previousPointerTarget&&runTime.canStartDrag){const dragStartEvent=await dispatch(runTime.previousPointerTarget,"dragstart");runTime.isDragging=!isPrevented(dragStartEvent);runTime.canStartDrag=false;}
runTime.position=target&&getPosition(target,options);};const setupEvents=(type)=>{currentEventTypes.push(type);return async()=>{const events=new EventList(getCurrentEvents());const currentType=currentEventTypes.pop();delete currentEvents[currentType];if(!allowLogs){return events;}
const groupName=[`${type}: dispatched`,events.length,`events`];$groupCollapsed(...groupName);for(const event of events){const colors=["blue"];const typeList=[event.type];if(event.key){typeList.push(event.key);}else if(event.button){typeList.push(event.button);}
[...Array(typeList.length)].forEach(()=>colors.push("orange"));const typeString=typeList.map((t)=>`%c"${t}"%c`).join(", ");let message=`%c${event.constructor.name}%c<${typeString}>`;if(event.__bubbleCount){message+=` (${event.__bubbleCount})`;}
const target=event.__originalTarget||event.target;if(isNode(target)){const targetParts=toSelector(target,{object:true});colors.push("blue");if(targetParts.id){colors.push("orange");}
if(targetParts.class){colors.push("lightBlue");}
const targetString=$values(targetParts).map((part)=>`%c${part}%c`).join("");message+=` @${targetString}`;}
const messageColors=colors.flatMap((color)=>[`color: ${LOG_COLORS[color]}; font-weight: normal`,`color: ${LOG_COLORS.reset}`,]);$groupCollapsed(message,...messageColors);$dir(event);$log(target);$groupEnd();}
$groupEnd();return events;};};const toEventPosition=(clientX,clientY,position)=>{clientX||=0;clientY||=0;return{clientX,clientY,pageX:position?.pageX??clientX,pageY:position?.pageY??clientY,screenX:position?.screenX??clientX,screenY:position?.screenY??clientY,};};const triggerClick=async(target,pointerInit)=>{if(target.disabled){return;}
const eventType=(pointerInit.button??0)===btn.LEFT?"click":"auxclick";const clickEvent=await dispatch(target,eventType,pointerInit);if(isPrevented(clickEvent)){return;}
if(isFirefox()){switch(getTag(target)){case"label":{target=target.control;if(target){await triggerClick(target,pointerInit);}
break;}
case"option":{const parent=target.parentElement;if(parent&&getTag(parent)==="select"){await dispatch(parent,"change");}
break;}}}};const triggerDrag=async(target,eventInit)=>{await dispatch(target,"drag",eventInit);const dragOverEvent=await dispatch(target,"dragover",eventInit);runTime.lastDragOverCancelled=isPrevented(dragOverEvent);};const triggerFocus=async(target)=>{const previous=getActiveElement(target);if(previous===target){return;}
if(previous!==target.ownerDocument.body){if($hasFocus()&&isNodeVisible(previous)){catchNextEvent(previous,"focusout");}
previous.blur();if(!$hasFocus()){const eventInit={relatedTarget:target};await dispatch(previous,"blur",eventInit);await dispatch(previous,"focusout",eventInit);}}
if(isNodeFocusable(target)){const previousSelection=getStringSelection(target);if($hasFocus()&&isNodeVisible(target)){catchNextEvent(target,"focusin");}
target.focus();if(!$hasFocus()){const eventInit={relatedTarget:previous};await dispatch(target,"focus",eventInit);await dispatch(target,"focusin",eventInit);}
if(previousSelection&&previousSelection===getStringSelection(target)){target.selectionStart=target.selectionEnd=target.value.length;}}};const _clear=async(target,options)=>{const initialValue=target.value;fullClear=true;await _press(target,{ctrlKey:true,key:"a"});await _press(target,{key:"Backspace"});fullClear=false;await registerForChange(target,initialValue,options?.confirm);};const _click=async(target,options)=>{await _pointerDown(target,options);await _pointerUp(target,options);};const _fill=async(target,value,options)=>{const initialValue=target.value;if(getTag(target)==="input"){switch(target.type){case"color":{target.value=String(value);await dispatch(target,"input");await dispatch(target,"change");return;}
case"file":{const dataTransfer=new DataTransfer();const files=ensureArray(value);if(files.length>1&&!target.multiple){throw new HootDomError(`input[type="file"] does not support multiple files`);}
for(const file of files){if(!(file instanceof File)){throw new TypeError(`file input only accept 'File' objects`);}
dataTransfer.items.add(file);}
target.files=dataTransfer.files;await dispatch(target,"change");return;}
case"range":{const numberValue=$parseFloat(value);if($isNaN(numberValue)){throw new TypeError(`input[type="range"] only accept 'number' values`);}
target.value=String(numberValue);await dispatch(target,"input");await dispatch(target,"change");return;}}}
if(options?.instantly){globalThis.navigator.clipboard.writeText(value).catch();await _press(target,{ctrlKey:true,key:"v"});}else{if(options?.composition){runTime.isComposing=true;await dispatch(target,"compositionstart");}
for(const char of String(value)){const key=char.toLowerCase();await _press(target,{key,shiftKey:key!==char});}
if(options?.composition){runTime.isComposing=false;await dispatch(target,"compositionend");}}
await registerForChange(target,initialValue,options?.confirm);};const _hover=async(target,options)=>{const isDifferentTarget=target!==runTime.pointerTarget;const previousPosition=runTime.position;await setPointerTarget(target,options);const{previousPointerTarget:previous,pointerTarget:current}=runTime;if(isDifferentTarget&&previous&&(!current||!previous.contains(current))){const leaveEventInit={...previousPosition,relatedTarget:current,};if(runTime.isDragging){await triggerDrag(previous,leaveEventInit);await dispatch(previous,"dragleave",leaveEventInit);}else{await dispatchPointerEvent(previous,"pointermove",leaveEventInit,{mouse:["mousemove"],touch:["touchmove"],});await dispatchPointerEvent(previous,"pointerout",leaveEventInit,{mouse:["mouseout"],});const leaveEvents=await Promise.all(getDifferentParents(current,previous).map((element)=>dispatch(element,"pointerleave",leaveEventInit)));if(!hasTouch()){await dispatchRelatedEvents(leaveEvents,"mouseleave",leaveEventInit);}}}
if(current){const enterEventInit={...runTime.position,relatedTarget:previous,};if(runTime.isDragging){if(isDifferentTarget){await dispatch(target,"dragenter",enterEventInit);}
await triggerDrag(target,enterEventInit);}else{if(isDifferentTarget){await dispatchPointerEvent(target,"pointerover",enterEventInit,{mouse:["mouseover"],});const enterEvents=await Promise.all(getDifferentParents(previous,current).map((element)=>dispatch(element,"pointerenter",enterEventInit)));if(!hasTouch()){await dispatchRelatedEvents(enterEvents,"mouseenter",enterEventInit);}}
await dispatchPointerEvent(target,"pointermove",enterEventInit,{mouse:["mousemove"],touch:["touchmove"],});}}};const _implicitHover=async(target,options)=>{if(runTime.pointerTarget!==target||isDifferentPosition(target,options)){await _hover(target,options);}};const _keyDown=async(target,eventInit)=>{registerSpecialKey(eventInit,true);const repeat=typeof eventInit.repeat==="boolean"?eventInit.repeat:runTime.key===eventInit.key;runTime.key=eventInit.key;const keyDownEvent=await dispatch(target,"keydown",{...eventInit,repeat});if(isPrevented(keyDownEvent)){return;}
const insertValue=(toInsert,type)=>{const{selectionStart,selectionEnd,value}=target;inputData=toInsert;inputType=type;if(isNil(selectionStart)&&isNil(selectionEnd)){nextValue+=toInsert;}else{nextValue=value.slice(0,selectionStart)+toInsert+value.slice(selectionEnd);if(selectionStart===selectionEnd){nextSelectionStart=nextSelectionEnd=selectionStart+1;}}};const{ctrlKey,key,shiftKey}=keyDownEvent;let inputData=null;let inputType=null;let nextSelectionEnd=null;let nextSelectionStart=null;let nextValue=target.value;if(isEditable(target)){switch(key){case"ArrowDown":case"ArrowLeft":case"ArrowUp":case"ArrowRight":{const{selectionStart,selectionEnd,value}=target;if(isNil(selectionStart)||isNil(selectionEnd)){break;}
const start=key==="ArrowLeft"||key==="ArrowUp";let selectionTarget;if(ctrlKey){selectionTarget=start?0:value.length;}else{selectionTarget=start?selectionStart-1:selectionEnd+1;}
target.selectionStart=target.selectionEnd=$max($min(selectionTarget,value.length),0);break;}
case"Backspace":{const{selectionStart,selectionEnd,value}=target;if(fullClear){nextValue="";}else if(isNil(selectionStart)||isNil(selectionEnd)){nextValue=value.slice(0,-1);}else if(selectionStart===selectionEnd){nextValue=value.slice(0,selectionStart-1)+value.slice(selectionEnd);}else{nextValue=deleteSelection(target);}
inputType="deleteContentBackward";break;}
case"Delete":{const{selectionStart,selectionEnd,value}=target;if(fullClear){nextValue="";}else if(isNil(selectionStart)||isNil(selectionEnd)){nextValue=value.slice(1);}else if(selectionStart===selectionEnd){nextValue=value.slice(0,selectionStart)+value.slice(selectionEnd+1);}else{nextValue=deleteSelection(target);}
inputType="deleteContentForward";break;}
case"Enter":{if(target.tagName==="TEXTAREA"){insertValue("\n","insertLineBreak");}
break;}
default:{if(key.length===1&&!ctrlKey){insertValue(shiftKey?key.toUpperCase():key.toLowerCase(),runTime.isComposing?"insertCompositionText":"insertText");}}}}
switch(key){case"a":{if(ctrlKey){if(isEditable(target)){await dispatch(target,"select");if(!isNil(target.selectionStart)&&!isNil(target.selectionEnd)){target.selectionStart=0;target.selectionEnd=target.value.length;}}else{const selection=globalThis.getSelection();const range=$createRange();range.selectNodeContents(target);selection.removeAllRanges();selection.addRange(range);}}
break;}
case"c":{if(ctrlKey){const text=globalThis.getSelection().toString();globalThis.navigator.clipboard.writeText(text).catch();await dispatch(target,"copy",{clipboardData:eventInit.dataTransfer||new DataTransfer(),});}
break;}
case"Enter":{const tag=getTag(target);const parentForm=target.closest("form");if(parentForm&&target.type!=="button"){await dispatch(parentForm,"submit");}else if(!keyDownEvent.repeat&&(tag==="a"||tag==="button"||(tag==="input"&&target.type==="button"))){await dispatch(target,"click",{button:btn.LEFT});}
break;}
case"Escape":{runTime.isDragging=false;break;}
case"Tab":{const next=shiftKey?getPreviousFocusableElement({tabbable:true}):getNextFocusableElement({tabbable:true});if(next){await triggerFocus(next);}
break;}
case"v":{if(ctrlKey&&isEditable(target)){try{nextValue=await globalThis.navigator.clipboard.readText();}catch(err){}
inputType="insertFromPaste";await dispatch(target,"paste",{clipboardData:eventInit.dataTransfer||new DataTransfer(),});}
break;}
case"x":{if(ctrlKey&&isEditable(target)){const text=globalThis.getSelection().toString();globalThis.navigator.clipboard.writeText(text).catch();nextValue=deleteSelection(target);inputType="deleteByCut";await dispatch(target,"cut",{clipboardData:eventInit.dataTransfer||new DataTransfer(),});}
break;}}
if(target.value!==nextValue){target.value=nextValue;if(!isNil(nextSelectionStart)){target.selectionStart=nextSelectionStart;}
if(!isNil(nextSelectionEnd)){target.selectionEnd=nextSelectionEnd;}
const inputEventInit={data:inputData,inputType,};const beforeInputEvent=await dispatch(target,"beforeinput",inputEventInit);if(!isPrevented(beforeInputEvent)){await dispatch(target,"input",inputEventInit);}}};const _keyUp=async(target,eventInit)=>{await dispatch(target,"keyup",eventInit);runTime.key=null;registerSpecialKey(eventInit,false);if(eventInit.key===" "&&getTag(target)==="input"&&target.type==="checkbox"){await triggerClick(target,{button:btn.LEFT});}};const _pointerDown=async(target,options)=>{setPointerDownTarget(target);const pointerDownTarget=runTime.pointerDownTarget;const eventInit={...runTime.position,button:options?.button||0,};registerButton(eventInit,true);if(pointerDownTarget!==runTime.previousPointerDownTarget){runTime.clickCount=0;}
runTime.touchStartPosition={...runTime.position};runTime.touchStartTimeOffset=getTimeOffset();const prevented=await dispatchPointerEvent(pointerDownTarget,"pointerdown",eventInit,{mouse:!pointerDownTarget.disabled&&["mousedown",{...eventInit,detail:runTime.clickCount+1},],touch:["touchstart"],});if(prevented){return;}
await triggerFocus(target);if(eventInit.button===btn.LEFT&&!hasTouch()&&pointerDownTarget.draggable){runTime.canStartDrag=true;}else if(eventInit.button===btn.RIGHT){await dispatch(target,"contextmenu",eventInit);}};const _pointerUp=async(target,options)=>{const isLongTap=getTimeOffset()-runTime.touchStartTimeOffset>LONG_TAP_DELAY;const pointerDownTarget=runTime.pointerDownTarget;const eventInit={...runTime.position,button:options?.button||0,};registerButton(eventInit,false);if(runTime.isDragging){runTime.isDragging=false;if(runTime.lastDragOverCancelled){await dispatch(target,"drop",eventInit);}
await dispatch(target,"dragend",eventInit);return;}
const mouseEventInit={...eventInit,detail:runTime.clickCount+1,};await dispatchPointerEvent(target,"pointerup",eventInit,{mouse:!target.disabled&&["mouseup",mouseEventInit],touch:["touchend"],});const touchStartPosition=runTime.touchStartPosition;runTime.touchStartPosition={};if(hasTouch()&&(isDifferentPosition(touchStartPosition)||isLongTap)){return;}
let actualTarget;if(hasTouch()){actualTarget=pointerDownTarget===target&&target;}else{actualTarget=getFirstCommonParent(target,pointerDownTarget);}
if(actualTarget){await triggerClick(actualTarget,mouseEventInit);if(mouseEventInit.button===btn.LEFT){runTime.clickCount++;if(!hasTouch()&&runTime.clickCount%2===0){await dispatch(actualTarget,"dblclick",mouseEventInit);}}}
setPointerDownTarget(null);if(runTime.pointerDownTimeout){globalThis.clearTimeout(runTime.pointerDownTimeout);}
runTime.pointerDownTimeout=globalThis.setTimeout(()=>{runTime.clickCount=0;runTime.pointerDownTimeout=0;},DOUBLE_CLICK_DELAY);};const _press=async(target,eventInit)=>{await _keyDown(target,eventInit);await _keyUp(target,eventInit);};const _select=async(target,value)=>{const values=ensureArray(value).map(String);let found=false;for(const option of target.options){option.selected=values.includes(option.value);found||=option.selected;}
if(!value){target.selectedIndex=-1;}else if(!found){throw new HootDomError(`error when calling \`select()\`: no option found with value "${values.join(", ")}"`);}
await dispatch(target,"change");};const btn={LEFT:0,MIDDLE:1,RIGHT:2,BACK:3,FORWARD:4,};const DEPRECATED_EVENT_PROPERTIES={keyCode:"key",which:"key",};const DEPRECATED_EVENTS={keypress:"keydown",mousewheel:"wheel",};const DOUBLE_CLICK_DELAY=500;const KEY_ALIASES={alt:"Alt",arrowdown:"ArrowDown",arrowleft:"ArrowLeft",arrowright:"ArrowRight",arrowup:"ArrowUp",backspace:"Backspace",control:"Control",delete:"Delete",enter:"Enter",escape:"Escape",meta:"Meta",shift:"Shift",tab:"Tab",caps:"Shift",cmd:"Meta",command:"Meta",ctrl:"Control",del:"Delete",down:"ArrowDown",esc:"Escape",left:"ArrowLeft",right:"ArrowRight",space:" ",up:"ArrowUp",win:"Meta",};const LOG_COLORS={blue:"#5db0d7",orange:"#f29364",lightBlue:"#9bbbdc",reset:"inherit",};const LONG_TAP_DELAY=500;const currentEvents={};const currentEventTypes=[];let afterNextDispatch=null;let allowLogs=false;let fullClear=false;const changeTargetListeners=[];const runTime=getDefaultRunTimeValue();const BUBBLES=0b001;const CANCELABLE=0b010;const mapEvent=(eventInit)=>eventInit;const mapMouseEvent=(eventInit)=>({button:-1,buttons:runTime.buttons,clientX:eventInit.clientX??eventInit.pageX??eventInit.screenX??0,clientY:eventInit.clientY??eventInit.pageY??eventInit.screenY??0,view:getWindow(),...runTime.modifierKeys,...eventInit,});const mapPointerEvent=(eventInit)=>({...mapMouseEvent(eventInit),button:btn.LEFT,pointerId:1,pointerType:hasTouch()?"touch":"mouse",...eventInit,});const mapWheelEvent=(eventInit)=>({...mapMouseEvent(eventInit),button:btn.LEFT,...eventInit,});const mapTouchEvent=(eventInit)=>{const touches=eventInit.targetTouches||eventInit.touches||[new Touch({identifier:0,...eventInit})];return{view:getWindow(),...eventInit,changedTouches:eventInit.changedTouches||touches,target:eventInit.target,targetTouches:eventInit.targetTouches||touches,touches:eventInit.touches||(eventInit.type==="touchend"?[]:touches),};};const mapInputEvent=(eventInit)=>({data:null,isComposing:Boolean(runTime.isComposing),view:getWindow(),...eventInit,});const mapKeyboardEvent=(eventInit)=>({isComposing:Boolean(runTime.isComposing),view:getWindow(),...runTime.modifierKeys,...eventInit,});__exports.check=check;async function check(target,options){const finalizeEvents=setupEvents("check");const element=queryFirst(await target,options);if(!isCheckable(element)){throw new HootDomError(`cannot call \`check()\`: target should be a checkbox or radio input`);}
const checkTarget=getTag(element)==="label"?element.control:element;if(!checkTarget.checked){await _implicitHover(element,options);await _click(element,options);if(!checkTarget.checked){throw new HootDomError(`error when calling \`check()\`: target is not checked after interaction`);}}
return finalizeEvents(options);}
__exports.clear=clear;async function clear(options){const finalizeEvents=setupEvents("clear");const element=getActiveElement();if(!hasTagName(element,"select")&&!isEditable(element)){throw new HootDomError(`cannot call \`clear()\`: target should be editable or a <select> element`);}
if(isEditable(element)){await _clear(element,options);}else{await _select(element,"");}
return finalizeEvents(options);}
__exports.click=click;async function click(target,options){const finalizeEvents=setupEvents("click");const element=queryFirst(await target,options);await _implicitHover(element,options);await _click(element,options);return finalizeEvents(options);}
__exports.dblclick=dblclick;async function dblclick(target,options){const finalizeEvents=setupEvents("dblclick");const element=queryFirst(await target,options);options={...options,button:btn.LEFT};await _implicitHover(element,options);await _click(element,options);await _click(element,options);return finalizeEvents(options);}
__exports.dispatch=dispatch;async function dispatch(target,type,eventInit){if(type in DEPRECATED_EVENTS){throw new HootDomError(`cannot dispatch "${type}" event: this event type is deprecated, use "${DEPRECATED_EVENTS[type]}" instead`);}
if(type!==type.toLowerCase()){throw new HootDomError(`cannot dispatch "${type}" event: this event type is either non-standard or deprecated`);}
if(eventInit&&typeof eventInit==="object"){for(const key in eventInit){if(key in DEPRECATED_EVENT_PROPERTIES){throw new HootDomError(`cannot dispatch "${type}" event: property "${key}" is deprecated, use "${DEPRECATED_EVENT_PROPERTIES[key]}" instead`);}}}
const[Constructor,processParams,flags]=getEventConstructor(type);const params=processParams({composed:true,...eventInit,target,type,});if(flags&BUBBLES){params.bubbles=true;}
if(flags&CANCELABLE){params.cancelable=true;}
const event=new Constructor(type,params);await Promise.resolve(target.dispatchEvent(event));getCurrentEvents().push(event);if(afterNextDispatch){const callback=afterNextDispatch;afterNextDispatch=null;await microTick().then(callback);}
return event;}
__exports.drag=drag;async function drag(target,options){const expectIsDragging=(fn,endDrag)=>{return{async[fn.name](...args){if(dragEndReason){throw new HootDomError(`cannot execute drag helper \`${fn.name}\`: drag sequence has been ended by \`${dragEndReason}\``);}
const result=await fn(...args);if(endDrag){dragEndReason=fn.name;}
return result;},}[fn.name];};const cancel=expectIsDragging(async function cancel(options){const finalizeEvents=setupEvents("drag & drop: cancel");const element=getDocument().body;runTime.buttons=0;await _press(element,{key:"Escape"});dragEvents.push(...(await finalizeEvents(options)));return dragEvents;},true);const drop=expectIsDragging(async function drop(to,options){if(to){await moveTo(to,options);}
const finalizeEvents=setupEvents("drag & drop: drop");await _pointerUp(runTime.pointerTarget,options);dragEvents.push(...(await finalizeEvents(options)));return dragEvents;},true);const moveTo=expectIsDragging(async function moveTo(to,options){const finalizeEvents=setupEvents("drag & drop: move");await _hover(queryFirst(await to),options);dragEvents.push(...(await finalizeEvents(options)));return dragHelpers;},false);const finalizeEvents=setupEvents("drag & drop: start");const dragHelpers={cancel,drop,moveTo};const element=queryFirst(await target);let dragEndReason=null;await _implicitHover(element,options);await _pointerDown(element,options);const dragEvents=await finalizeEvents(options);return dragHelpers;}
__exports.edit=edit;async function edit(value,options){const finalizeEvents=setupEvents("edit");const element=getActiveElement();if(!isEditable(element)){throw new HootDomError(`cannot call \`edit()\`: target should be editable`);}
if(getNodeValue(element)){await _clear(element);}
await _fill(element,value,options);return finalizeEvents(options);}
__exports.enableEventLogs=enableEventLogs;function enableEventLogs(toggle){allowLogs=toggle??true;}
__exports.fill=fill;async function fill(value,options){const finalizeEvents=setupEvents("fill");const element=getActiveElement();if(!isEditable(element)){throw new HootDomError(`cannot call \`fill()\`: target should be editable`);}
await _fill(element,value,options);return finalizeEvents(options);}
__exports.hover=hover;async function hover(target,options){const finalizeEvents=setupEvents("hover");const element=queryFirst(await target,options);await _hover(element,options);return finalizeEvents(options);}
__exports.keyDown=keyDown;async function keyDown(keyStrokes,options){const finalizeEvents=setupEvents("keyDown");const eventInits=parseKeyStrokes(keyStrokes,options);for(const eventInit of eventInits){await _keyDown(getActiveElement(),eventInit);}
return finalizeEvents(options);}
__exports.keyUp=keyUp;async function keyUp(keyStrokes,options){const finalizeEvents=setupEvents("keyUp");const eventInits=parseKeyStrokes(keyStrokes,options);for(const eventInit of eventInits){await _keyUp(getActiveElement(),eventInit);}
return finalizeEvents(options);}
__exports.leave=leave;async function leave(options){const finalizeEvents=setupEvents("leave");await _hover(null,options);return finalizeEvents(options);}
__exports.middleClick=middleClick;async function middleClick(target,options){const finalizeEvents=setupEvents("middleClick");const element=queryFirst(await target,options);options={...options,button:btn.MIDDLE};await _implicitHover(element,options);await _click(element,options);return finalizeEvents(options);}
__exports.on=on;function on(target,type,listener,options){const targets=isEventTarget(target)?[target]:queryAll(target);if(!targets.length){throw new HootDomError(`expected at least 1 event target, got none`);}
for(const eventTarget of targets){eventTarget.addEventListener(type,listener,options);}
return function off(){for(const eventTarget of targets){eventTarget.removeEventListener(type,listener,options);}};}
__exports.pointerDown=pointerDown;async function pointerDown(target,options){const finalizeEvents=setupEvents("pointerDown");const element=queryFirst(await target,options);await _implicitHover(element,options);await _pointerDown(element,options);return finalizeEvents(options);}
__exports.pointerUp=pointerUp;async function pointerUp(target,options){const finalizeEvents=setupEvents("pointerUp");const element=queryFirst(await target,options);await _implicitHover(element,options);await _pointerUp(element,options);return finalizeEvents(options);}
__exports.press=press;async function press(keyStrokes,options){const finalizeEvents=setupEvents("press");const eventInits=parseKeyStrokes(keyStrokes,options);const activeElement=getActiveElement();for(const eventInit of eventInits){await _keyDown(activeElement,eventInit);}
for(const eventInit of eventInits.reverse()){await _keyUp(activeElement,eventInit);}
return finalizeEvents(options);}
__exports.resize=resize;async function resize(dimensions,options){const finalizeEvents=setupEvents("resize");const[width,height]=parseDimensions(dimensions);setDimensions(width,height);await dispatch(getWindow(),"resize");return finalizeEvents(options);}
__exports.rightClick=rightClick;async function rightClick(target,options){const finalizeEvents=setupEvents("rightClick");const element=queryFirst(await target,options);options={...options,button:btn.RIGHT};await _implicitHover(element,options);await _click(element,options);return finalizeEvents(options);}
__exports.scroll=scroll;async function scroll(target,position,options){const finalizeEvents=setupEvents("scroll");const scrollOptions={};const[x,y]=parsePosition(position);if(!$isNaN(x)){scrollOptions.left=x;}
if(!$isNaN(y)){scrollOptions.top=y;}
const element=queryFirst(await target,{...options,scrollable:true});if(!hasTouch()){await dispatch(element,"wheel");}
catchNextEvent(element,"scroll");await Promise.resolve(element.scrollTo(scrollOptions));return finalizeEvents(options);}
__exports.select=select;async function select(value,options){const finalizeEvents=setupEvents("select");const element=options?.target?queryFirst(await options.target):getActiveElement();if(!hasTagName(element,"select")){throw new HootDomError(`cannot call \`select()\`: target should be a <select> element`);}
if(options?.target){await _implicitHover(element);await _pointerDown(element);}
await _select(element,value);if(options?.target){await _pointerUp(element);}
return finalizeEvents(options);}
__exports.setInputFiles=setInputFiles;async function setInputFiles(files,options){if(!runTime.fileInput){throw new HootDomError(`cannot call \`setInputFiles()\`: no file input has been interacted with`);}
const finalizeEvents=setupEvents("setInputFiles");await _fill(runTime.fileInput,files);runTime.fileInput=null;return finalizeEvents(options);}
__exports.setInputRange=setInputRange;async function setInputRange(target,value,options){const finalizeEvents=setupEvents("setInputRange");const element=queryFirst(await target,options);await _implicitHover(element,options);await _pointerDown(element,options);await _fill(element,value);await _pointerUp(element,options);return finalizeEvents(options);}
__exports.setupEventActions=setupEventActions;function setupEventActions(fixture){if(runTime.pointerDownTimeout){globalThis.clearTimeout(runTime.pointerDownTimeout);}
removeChangeTargetListeners();fixture.addEventListener("click",registerFileInput,{capture:true});fixture.addEventListener("focus",registerFileInput,{capture:true});fixture.addEventListener("submit",redirectSubmit);$assign(runTime,getDefaultRunTimeValue());}
__exports.uncheck=uncheck;async function uncheck(target,options){const finalizeEvents=setupEvents("uncheck");const element=queryFirst(await target,options);if(!isCheckable(element)){throw new HootDomError(`cannot call \`uncheck()\`: target should be a checkbox or radio input`);}
const checkTarget=getTag(element)==="label"?element.control:element;if(checkTarget.checked){await _implicitHover(element,options);await _click(element,options);if(checkTarget.checked){throw new HootDomError(`error when calling \`uncheck()\`: target is still checked after interaction`);}}
return finalizeEvents(options);}
__exports.unload=unload;async function unload(options){const finalizeEvents=setupEvents("unload");await dispatch(getWindow(),"beforeunload");return finalizeEvents(options);}
const EventList=__exports.EventList=class EventList extends Array{constructor(...args){super(...args.flat());}
get(predicate){return this.getAll(predicate)[0]||null;}
getAll(predicate){if(typeof predicate!=="function"){const type=predicate;predicate=(ev)=>ev.type===type;}
return this.filter(predicate);}}
return __exports;});;

/* /web/static/lib/hoot-dom/helpers/time.js */
odoo.define('@web/../lib/hoot-dom/helpers/time',['@web/../lib/hoot-dom/hoot_dom_utils'],function(require){'use strict';let __exports={};const{HootDomError}=require("@web/../lib/hoot-dom/hoot_dom_utils");const{cancelAnimationFrame,clearInterval,clearTimeout,Error,Math:{ceil:$ceil,floor:$floor,max:$max,min:$min},parseInt,performance,Promise,requestAnimationFrame,setInterval,setTimeout,}=globalThis;const $performanceNow=performance.now.bind(performance);const animationToId=(id)=>ID_PREFIX.animation+String(id);const getNextTimerValues=()=>{let timerValues=null;for(const[internalId,[callback,init,delay]]of timers.entries()){const timeout=init+delay;if(!timerValues||timeout<timerValues[0]){timerValues=[timeout,callback,internalId];}}
return timerValues;};const idToAnimation=(id)=>Number(id.slice(ID_PREFIX.animation.length));const idToInterval=(id)=>Number(id.slice(ID_PREFIX.interval.length));const idToTimeout=(id)=>Number(id.slice(ID_PREFIX.timeout.length));const intervalToId=(id)=>ID_PREFIX.interval+String(id);const parseNat=(value)=>{const int=parseInt(value,10);return int>0?int:0;};const now=()=>(freezed?0:$performanceNow())+timeOffset;const timeoutToId=(id)=>ID_PREFIX.timeout+String(id);const ID_PREFIX={animation:"a_",interval:"i_",timeout:"t_",};const timers=new Map();let allowTimers=false;let freezed=false;let frameDelay=1000/60;let nextDummyId=1;let timeOffset=0;__exports.advanceFrame=advanceFrame;function advanceFrame(frameCount){return advanceTime(frameDelay*parseNat(frameCount));}
__exports.advanceTime=advanceTime;function advanceTime(ms){ms=parseNat(ms);const targetTime=now()+ms;let remaining=ms;let timerValues;while((timerValues=getNextTimerValues())&&timerValues[0]<=targetTime){const[timeout,handler,id]=timerValues;const diff=timeout-now();if(diff>0){timeOffset+=$min(remaining,diff);remaining=$max(remaining-diff,0);}
if(timers.has(id)){handler(timeout);}}
if(remaining>0){timeOffset+=remaining;}
return animationFrame().then(()=>ms);}
__exports.animationFrame=animationFrame;function animationFrame(){return new Promise((resolve)=>requestAnimationFrame(()=>delay().then(resolve)));}
__exports.cancelAllTimers=cancelAllTimers;function cancelAllTimers(){for(const id of timers.keys()){if(id.startsWith(ID_PREFIX.animation)){globalThis.cancelAnimationFrame(idToAnimation(id));}else if(id.startsWith(ID_PREFIX.interval)){globalThis.clearInterval(idToInterval(id));}else if(id.startsWith(ID_PREFIX.timeout)){globalThis.clearTimeout(idToTimeout(id));}}}
__exports.cleanupTime=cleanupTime;function cleanupTime(){allowTimers=false;freezed=false;cancelAllTimers();return delay();}
__exports.delay=delay;function delay(duration){return new Promise((resolve)=>setTimeout(resolve,duration));}
__exports.freezeTime=freezeTime;function freezeTime(setFreeze){freezed=setFreeze??!freezed;}
__exports.getTimeOffset=getTimeOffset;function getTimeOffset(){return timeOffset;}
__exports.isTimeFreezed=isTimeFreezed;function isTimeFreezed(){return freezed;}
__exports.microTick=microTick;function microTick(){return new Promise(queueMicrotask);}
__exports.mockedCancelAnimationFrame=mockedCancelAnimationFrame;function mockedCancelAnimationFrame(handle){if(!freezed){cancelAnimationFrame(handle);}
timers.delete(animationToId(handle));}
__exports.mockedClearInterval=mockedClearInterval;function mockedClearInterval(intervalId){if(!freezed){clearInterval(intervalId);}
timers.delete(intervalToId(intervalId));}
__exports.mockedClearTimeout=mockedClearTimeout;function mockedClearTimeout(timeoutId){if(!freezed){clearTimeout(timeoutId);}
timers.delete(timeoutToId(timeoutId));}
__exports.mockedRequestAnimationFrame=mockedRequestAnimationFrame;function mockedRequestAnimationFrame(callback){if(!allowTimers){return 0;}
const handler=()=>{mockedCancelAnimationFrame(handle);return callback(now());};const animationValues=[handler,now(),frameDelay];const handle=freezed?nextDummyId++:requestAnimationFrame(handler);const internalId=animationToId(handle);timers.set(internalId,animationValues);return handle;}
__exports.mockedSetInterval=mockedSetInterval;function mockedSetInterval(callback,ms,...args){if(!allowTimers){return 0;}
ms=parseNat(ms);const handler=()=>{if(allowTimers){intervalValues[1]=Math.max(now(),intervalValues[1]+ms);}else{mockedClearInterval(intervalId);}
return callback(...args);};const intervalValues=[handler,now(),ms];const intervalId=freezed?nextDummyId++:setInterval(handler,ms);const internalId=intervalToId(intervalId);timers.set(internalId,intervalValues);return intervalId;}
__exports.mockedSetTimeout=mockedSetTimeout;function mockedSetTimeout(callback,ms,...args){if(!allowTimers){return 0;}
ms=parseNat(ms);const handler=()=>{mockedClearTimeout(timeoutId);return callback(...args);};const timeoutValues=[handler,now(),ms];const timeoutId=freezed?nextDummyId++:setTimeout(handler,ms);const internalId=timeoutToId(timeoutId);timers.set(internalId,timeoutValues);return timeoutId;}
__exports.resetTimeOffset=resetTimeOffset;function resetTimeOffset(){timeOffset=0;}
__exports.runAllTimers=runAllTimers;function runAllTimers(){if(!timers.size){return 0;}
const endts=$max(...[...timers.values()].map(([,init,delay])=>init+delay));return advanceTime($ceil(endts-now()));}
__exports.setFrameRate=setFrameRate;function setFrameRate(frameRate){frameRate=parseNat(frameRate);if(frameRate<1||frameRate>1000){throw new Error("frame rate must be an number between 1 and 1000");}
frameDelay=1000/frameRate;}
__exports.setupTime=setupTime;function setupTime(){allowTimers=true;}
__exports.tick=tick;function tick(){return delay();}
__exports.waitUntil=waitUntil;function waitUntil(predicate,options){const result=predicate();if(result){return Promise.resolve().then(()=>result);}
const timeout=$floor(options?.timeout??200);let handle;let timeoutId;let running=true;return new Promise((resolve,reject)=>{const runCheck=()=>{const result=predicate();if(result){resolve(result);}else if(running){handle=requestAnimationFrame(runCheck);}else{let message=options?.message||`'waitUntil' timed out after %timeout% milliseconds`;if(typeof message==="function"){message=message();}
reject(new HootDomError(message.replace("%timeout%",String(timeout))));}};handle=requestAnimationFrame(runCheck);timeoutId=setTimeout(()=>(running=false),timeout);}).finally(()=>{cancelAnimationFrame(handle);clearTimeout(timeoutId);});}
const Deferred=__exports.Deferred=class Deferred extends Promise{_resolve;_reject;constructor(executor){let _resolve,_reject;super((resolve,reject)=>{_resolve=resolve;_reject=reject;executor?.(_resolve,_reject);});this._resolve=_resolve;this._reject=_reject;}
async reject(reason){return this._reject(reason);}
async resolve(value){return this._resolve(value);}}
return __exports;});;

/* /web/static/lib/hoot-dom/hoot-dom.js */
odoo.define('@web/../lib/hoot-dom/hoot-dom',['@web/../lib/hoot-dom/helpers/dom','@web/../lib/hoot-dom/helpers/events','@web/../lib/hoot-dom/helpers/time'],function(require){'use strict';let __exports={};{const{formatXml,getActiveElement,getFocusableElements,getNextFocusableElement,getParentFrame,getPreviousFocusableElement,isDisplayed,isEditable,isFocusable,isInDOM,isInViewPort,isScrollable,isVisible,matches,observe,queryAll,queryAllAttributes,queryAllProperties,queryAllRects,queryAllTexts,queryAllValues,queryAttribute,queryFirst,queryOne,queryRect,queryText,queryValue,waitFor,waitForNone,}=require("@web/../lib/hoot-dom/helpers/dom");Object.assign(__exports,{formatXml,getActiveElement,getFocusableElements,getNextFocusableElement,getParentFrame,getPreviousFocusableElement,isDisplayed,isEditable,isFocusable,isInDOM,isInViewPort,isScrollable,isVisible,matches,observe,queryAll,queryAllAttributes,queryAllProperties,queryAllRects,queryAllTexts,queryAllValues,queryAttribute,queryFirst,queryOne,queryRect,queryText,queryValue,waitFor,waitForNone,})};{const{check,clear,click,dblclick,drag,edit,fill,hover,keyDown,keyUp,leave,dispatch,middleClick,on,pointerDown,pointerUp,press,resize,rightClick,scroll,select,setInputFiles,setInputRange,uncheck,unload,}=require("@web/../lib/hoot-dom/helpers/events");Object.assign(__exports,{check,clear,click,dblclick,drag,edit,fill,hover,keyDown,keyUp,leave,manuallyDispatchProgrammaticEvent:dispatch,middleClick,on,pointerDown,pointerUp,press,resize,rightClick,scroll,select,setInputFiles,setInputRange,uncheck,unload,})};{const{Deferred,advanceFrame,advanceTime,animationFrame,cancelAllTimers,delay,freezeTime,microTick,runAllTimers,setFrameRate,tick,waitUntil,}=require("@web/../lib/hoot-dom/helpers/time");Object.assign(__exports,{Deferred,advanceFrame,advanceTime,animationFrame,cancelAllTimers,delay,freezeTime,microTick,runAllTimers,setFrameRate,tick,waitUntil,})};return __exports;});odoo.define(`@odoo/hoot-dom`,['@web/../lib/hoot-dom/hoot-dom'],function(require){return require('@web/../lib/hoot-dom/hoot-dom');});;

/* /web/static/lib/hoot-dom/hoot_dom_utils.js */
odoo.define('@web/../lib/hoot-dom/hoot_dom_utils',[],function(require){'use strict';let __exports={};const{Boolean,navigator:{userAgent:$userAgent},RegExp,SyntaxError,}=globalThis;const R_REGEX_PATTERN=/^\/(.*)\/([dgimsuvy]+)?$/;__exports.getTag=getTag;function getTag(node){return node?.nodeName.toLowerCase()||"";}
__exports.isFirefox=isFirefox;function isFirefox(){return/firefox/i.test($userAgent);}
__exports.isIterable=isIterable;function isIterable(object){return Boolean(object&&typeof object==="object"&&object[Symbol.iterator]);}
__exports.isRegExpFilter=isRegExpFilter;function isRegExpFilter(filter){return R_REGEX_PATTERN.test(filter);}
__exports.parseRegExp=parseRegExp;function parseRegExp(value,options){const regexParams=value.match(R_REGEX_PATTERN);if(regexParams){const unified=regexParams[1].replace(/\s+/g,"\\s+");const flag=regexParams[2]||"i";try{return new RegExp(unified,flag);}catch(error){if(error instanceof SyntaxError&&options?.safe){return value;}else{throw error;}}}
return value;}
__exports.toSelector=toSelector;function toSelector(node,options){const tagName=getTag(node);const id=node.id?`#${node.id}`:"";const classNames=node.classList?[...node.classList].map((className)=>`.${className}`):[];if(options?.raw){return{tagName,id,classNames};}else{return[tagName,id,...classNames].join("");}}
const HootDomError=__exports.HootDomError=class HootDomError extends Error{name="HootDomError";}
return __exports;});;

/* /web_tour/static/src/tour_pointer/tour_pointer.js */
odoo.define('@web_tour/tour_pointer/tour_pointer',['@odoo/owl','@web/core/position/position_hook'],function(require){'use strict';let __exports={};const{Component,useEffect,useRef}=require("@odoo/owl");const{usePosition}=require("@web/core/position/position_hook");const TourPointer=__exports.TourPointer=class TourPointer extends Component{static props={pointerState:{type:Object,shape:{anchor:{type:HTMLElement,optional:true},content:{type:String,optional:true},isOpen:{type:Boolean,optional:true},isVisible:{type:Boolean,optional:true},isZone:{type:Boolean,optional:true},onClick:{type:[Function,{value:null}],optional:true},onMouseEnter:{type:[Function,{value:null}],optional:true},onMouseLeave:{type:[Function,{value:null}],optional:true},position:{type:[{value:"left"},{value:"right"},{value:"top"},{value:"bottom"},],optional:true,},rev:{type:Number,optional:true},},},bounce:{type:Boolean,optional:true},};static defaultProps={bounce:true,};static template="web_tour.TourPointer";static width=28;static height=28;setup(){const positionOptions={margin:6,onPositioned:(pointer,position)=>{const popperRect=pointer.getBoundingClientRect();const{top,left,direction}=position;if(direction==="top"){pointer.style.bottom=`${window.innerHeight - top - popperRect.height}px`;pointer.style.removeProperty("top");}else if(direction==="left"){pointer.style.right=`${window.innerWidth - left - popperRect.width}px`;pointer.style.removeProperty("left");}},};Object.defineProperty(positionOptions,"position",{get:()=>this.position,enumerable:true,});const position=usePosition("pointer",()=>this.props.pointerState.anchor,positionOptions);const rootRef=useRef("pointer");const zoneRef=useRef("zone");let dimensions=null;let lastMeasuredContent=null;let lastOpenState=this.isOpen;let lastAnchor;let[anchorX,anchorY]=[0,0];useEffect(()=>{const{el:pointer}=rootRef;const{el:zone}=zoneRef;if(pointer){const hasContentChanged=lastMeasuredContent!==this.content;const hasOpenStateChanged=lastOpenState!==this.isOpen;lastOpenState=this.isOpen;if(this.props.pointerState.isZone){const{anchor}=this.props.pointerState;let offsetLeft,offsetTop=0;if(document!==anchor.ownerDocument){const iframe=[...document.querySelectorAll("iframe")].filter((e)=>e.contentDocument===anchor.ownerDocument)[0];offsetLeft=iframe.getBoundingClientRect().left;offsetTop=iframe.getBoundingClientRect().top;}
const{left,top,width,height}=anchor.getBoundingClientRect();zone.style.minWidth=width+"px";zone.style.minHeight=height+"px";zone.style.left=left+offsetLeft+"px";zone.style.top=top+offsetTop+"px";}
if(hasContentChanged){lastMeasuredContent=this.content;pointer.style.removeProperty("width");pointer.style.removeProperty("height");dimensions=pointer.getBoundingClientRect();}
if(hasContentChanged||hasOpenStateChanged){const[width,height]=this.isOpen?[dimensions.width,dimensions.height]:[this.constructor.width,this.constructor.height];if(this.isOpen){pointer.style.removeProperty("transition");}else{pointer.style.setProperty("transition","none");}
pointer.style.setProperty("width",`${width}px`);pointer.style.setProperty("height",`${height}px`);}
if(!this.isOpen){const{anchor}=this.props.pointerState;if(anchor===lastAnchor){const{x,y,width}=anchor.getBoundingClientRect();const[lastAnchorX,lastAnchorY]=[anchorX,anchorY];[anchorX,anchorY]=[x,y];const delta=Math.sqrt(Math.pow(x-lastAnchorX,2)+Math.pow(y-lastAnchorY,2));if(delta<1){position.lock();return;}
const wouldOverflow=window.innerWidth-x-width/2<dimensions?.width;pointer.classList.toggle("o_expand_left",wouldOverflow);}
lastAnchor=anchor;pointer.style.bottom="";pointer.style.right="";position.unlock();}}else{lastMeasuredContent=null;lastOpenState=false;lastAnchor=null;dimensions=null;}});}
get content(){return this.props.pointerState.content||"";}
get isOpen(){return this.props.pointerState.isOpen&&this.content;}
get position(){return this.props.pointerState.position||"top";}}
return __exports;});;

/* /web_tour/static/src/tour_service/tour_automatic.js */
odoo.define('@web_tour/tour_service/tour_automatic',['@web_tour/tour_service/tour_state','@web/core/transition','@web_tour/tour_service/tour_step_automatic','@web/core/macro','@web/core/browser/browser','@web/../lib/hoot-dom/helpers/events','@odoo/hoot-dom'],function(require){'use strict';let __exports={};const{tourState}=require("@web_tour/tour_service/tour_state");const{config:transitionConfig}=require("@web/core/transition");const{TourStepAutomatic}=require("@web_tour/tour_service/tour_step_automatic");const{Macro}=require("@web/core/macro");const{browser}=require("@web/core/browser/browser");const{setupEventActions}=require("@web/../lib/hoot-dom/helpers/events");const hoot=require("@odoo/hoot-dom");const TourAutomatic=__exports.TourAutomatic=class TourAutomatic{mode="auto";constructor(data){Object.assign(this,data);this.steps=this.steps.map((step,index)=>new TourStepAutomatic(step,this,index));this.config=tourState.getCurrentConfig()||{};}
get currentIndex(){return tourState.getCurrentIndex();}
get currentStep(){return this.steps[this.currentIndex];}
get debugMode(){return this.config.debug!==false;}
start(){setupEventActions(document.createElement("div"));const{delayToCheckUndeterminisms,stepDelay}=this.config;const macroSteps=this.steps.filter((step)=>step.index>=this.currentIndex).flatMap((step)=>[{action:async()=>{if(this.debugMode){console.groupCollapsed(step.describeMe);console.log(step.stringify);if(step.break){debugger;}}else{console.log(step.describeMe);}
await new Promise((resolve)=>requestAnimationFrame(resolve));if(stepDelay>0){await hoot.delay(stepDelay);}},},{initialDelay:()=>(this.previousStepIsJustACheck?0:null),trigger:step.trigger?()=>step.findTrigger():null,timeout:(step.timeout||10000)+stepDelay,action:async()=>{if(delayToCheckUndeterminisms>0){await step.checkForUndeterminisms();}
this.previousStepIsJustACheck=!step.hasAction;if(this.debugMode){console.log(step.element);if(step.skipped){console.log("This step has been skipped");}else{console.log("This step has run successfully");}
console.groupEnd();}
const result=await step.doAction();if(step.pause&&this.debugMode){await this.pause();}
tourState.setCurrentIndex(step.index+1);return result;},},]);const end=()=>{delete window.hoot;transitionConfig.disabled=false;tourState.clear();window.addEventListener("error",(ev)=>{ev.preventDefault();ev.stopImmediatePropagation();},true);window.addEventListener("unhandledrejection",(ev)=>{ev.preventDefault();ev.stopImmediatePropagation();},true);};this.macro=new Macro({name:this.name,checkDelay:this.checkDelay||200,steps:macroSteps,onError:(error)=>{this.throwError([error]);end();},onComplete:()=>{browser.console.log("tour succeeded");const succeeded=`║ TOUR ${this.name} SUCCEEDED ║`;const msg=[succeeded];msg.unshift("╔"+"═".repeat(succeeded.length-2)+"╗");msg.push("╚"+"═".repeat(succeeded.length-2)+"╝");browser.console.log(`\n\n${msg.join("\n")}\n`);end();},onTimeout:(timeout)=>{this.throwError([...this.currentStep.describeWhyIFailed,`TIMEOUT: The step failed to complete within ${timeout} ms.`,]);end();},});if(this.debugMode&&this.currentIndex===0){debugger;}
transitionConfig.disabled=true;window.hoot=hoot;this.macro.start();}
get describeWhereIFailed(){const offset=3;const start=Math.max(this.currentIndex-offset,0);const end=Math.min(this.currentIndex+offset,this.steps.length-1);const result=[];for(let i=start;i<=end;i++){const step=this.steps[i];const stepString=step.stringify;const text=[stepString];if(i===this.currentIndex){const line="-".repeat(10);const failing_step=`${line} FAILED: ${step.describeMe} ${line}`;text.unshift(failing_step);text.push("-".repeat(failing_step.length));}
result.push(...text);}
return result.join("\n");}
throwError(errors=[]){console.groupEnd();tourState.setCurrentTourOnError();browser.console.error([`FAILED: ${this.currentStep.describeMe}.`,...errors].join("\n"));browser.console.dir(this.describeWhereIFailed);if(this.debugMode){debugger;}}
async pause(){const styles=["background: black; color: white; font-size: 14px","background: black; color: orange; font-size: 14px",];console.log(`%cTour is paused. Use %cplay()%c to continue.`,styles[0],styles[1],styles[0]);await new Promise((resolve)=>{window.play=()=>{resolve();delete window.play;};});}}
return __exports;});;

/* /web_tour/static/src/tour_service/tour_helpers.js */
odoo.define('@web_tour/tour_service/tour_helpers',['@odoo/hoot-dom'],function(require){'use strict';let __exports={};const hoot=require("@odoo/hoot-dom");const TourHelpers=__exports.TourHelpers=class TourHelpers{constructor(anchor){this.anchor=anchor;this.delay=20;}
async check(selector){const element=this._get_action_element(selector);await hoot.check(element);}
async clear(selector){const element=this._get_action_element(selector);await hoot.click(element);await hoot.clear();}
async click(selector){const element=this._get_action_element(selector);await hoot.click(element);}
async dblclick(selector){const element=this._get_action_element(selector);await hoot.dblclick(element);}
async drag_and_drop(selector,options){if(typeof options!=="object"){options={position:"top",relative:true};}
const dragEffectDelay=async()=>{await new Promise((resolve)=>requestAnimationFrame(resolve));await new Promise((resolve)=>setTimeout(resolve,this.delay));};const element=this.anchor;const{drop,moveTo}=await hoot.drag(element);await dragEffectDelay();await hoot.hover(element,{position:{top:20,left:20,},relative:true,});await dragEffectDelay();const target=await hoot.waitFor(selector,{visible:true,timeout:500,});await moveTo(target,options);await dragEffectDelay();await drop();await dragEffectDelay();}
async edit(text,selector){const element=this._get_action_element(selector);await hoot.click(element);await hoot.edit(text);}
async editor(text,selector){const element=this._get_action_element(selector);const InEditor=Boolean(element.closest(".odoo-editor-editable"));if(!InEditor){throw new Error("run 'editor' always on an element in an editor");}
await hoot.click(element);this._set_range(element,"start");await hoot.keyDown("_");element.textContent=text;await hoot.manuallyDispatchProgrammaticEvent(element,"input");this._set_range(element,"stop");await hoot.keyUp("_");await hoot.manuallyDispatchProgrammaticEvent(element,"change");}
async fill(value,selector){const element=this._get_action_element(selector);await hoot.click(element);await hoot.fill(value);}
async hover(selector){const element=this._get_action_element(selector);await hoot.hover(element);}
async range(value,selector){const element=this._get_action_element(selector);await hoot.click(element);await hoot.setInputRange(element,value);}
press(...args){return hoot.press(args.flatMap((arg)=>typeof arg==="string"&&arg.split("+")));}
async select(value,selector){const element=this._get_action_element(selector);await hoot.click(element);await hoot.select(value,{target:element});}
async selectByIndex(index,selector){const element=this._get_action_element(selector);await hoot.click(element);const value=hoot.queryValue(`option:eq(${index})`,{root:element});if(value){await hoot.select(value,{target:element});await hoot.manuallyDispatchProgrammaticEvent(element,"input");}}
async selectByLabel(contains,selector){const element=this._get_action_element(selector);await hoot.click(element);const values=hoot.queryAllValues(`option:contains(${contains})`,{root:element});await hoot.select(values,{target:element});}
uncheck(selector){const element=this._get_action_element(selector);hoot.uncheck(element);}
goToUrl(url){const linkEl=document.createElement("a");linkEl.href=url;linkEl.click();}
_get_action_element(selector){if(typeof selector==="string"&&selector.length){const nodes=hoot.queryAll(selector);return nodes.find(hoot.isVisible)||nodes.at(0);}else if(typeof selector==="object"&&Boolean(selector?.nodeType)){return selector;}
return this.anchor;}
_set_range(element,start_or_stop){function _node_length(node){if(node.nodeType===Node.TEXT_NODE){return node.nodeValue.length;}else{return node.childNodes.length;}}
const selection=element.ownerDocument.getSelection();selection.removeAllRanges();const range=new Range();let node=element;let length=0;if(start_or_stop==="start"){while(node.firstChild){node=node.firstChild;}}else{while(node.lastChild){node=node.lastChild;}
length=_node_length(node);}
range.setStart(node,length);range.setEnd(node,length);selection.addRange(range);}}
return __exports;});;

/* /web_tour/static/src/tour_service/tour_interactive.js */
odoo.define('@web_tour/tour_service/tour_interactive',['@web_tour/tour_service/tour_state','@web/core/utils/timing','@web_tour/tour_service/tour_utils','@odoo/hoot-dom','@web/core/ui/ui_service','@web_tour/tour_service/tour_step','@web/core/macro'],function(require){'use strict';let __exports={};const{tourState}=require("@web_tour/tour_service/tour_state");const{debounce}=require("@web/core/utils/timing");const{getScrollParent}=require("@web_tour/tour_service/tour_utils");const hoot=require("@odoo/hoot-dom");const{utils}=require("@web/core/ui/ui_service");const{TourStep}=require("@web_tour/tour_service/tour_step");const{MacroMutationObserver}=require("@web/core/macro");const TourInteractive=__exports.TourInteractive=class TourInteractive{mode="manual";currentAction;currentActionIndex;anchorEls=[];removeListeners=()=>{};constructor(data){Object.assign(this,data);this.steps=this.steps.map((step)=>new TourStep(step,this));this.actions=this.steps.flatMap((s)=>this.getSubActions(s));}
start(pointer,onTourEnd){this.pointer=pointer;this.debouncedToggleOpen=debounce(this.pointer.showContent,50,true);this.onTourEnd=onTourEnd;this.observer=new MacroMutationObserver(()=>this._onMutation());this.observer.observe(document.body);this.currentActionIndex=tourState.getCurrentIndex();this.play();}
backward(){let tempIndex=this.currentActionIndex;let tempAction,tempAnchors=[];while(!tempAnchors.length&&tempIndex>=0){tempIndex--;tempAction=this.actions.at(tempIndex);if(!tempAction.step.active){continue;}
tempAnchors=tempAction&&this.findTriggers(tempAction.anchor);}
if(tempIndex>=0){this.currentActionIndex=tempIndex;this.play();}}
findTriggers(anchor){if(!anchor){anchor=this.currentAction.anchor;}
return anchor.split(/,\s*(?![^(]*\))/).map((part)=>hoot.queryFirst(part,{visible:true})).filter((el)=>!!el).map((el)=>this.getAnchorEl(el,this.currentAction.event)).filter((el)=>!!el);}
play(){this.removeListeners();if(this.currentActionIndex===this.actions.length){this.observer.disconnect();this.onTourEnd();return;}
this.currentAction=this.actions.at(this.currentActionIndex);if(!this.currentAction.step.active||this.currentAction.event==="warn"){if(this.currentAction.event==="warn"){console.warn(`Step '${this.currentAction.anchor}' ignored.`);}
this.currentActionIndex++;this.play();return;}
console.log(this.currentAction.event,this.currentAction.anchor);tourState.setCurrentIndex(this.currentActionIndex);this.anchorEls=this.findTriggers();this.setActionListeners();this.updatePointer();}
updatePointer(){if(this.anchorEls.length){this.pointer.pointTo(this.anchorEls[0],this.currentAction.pointerInfo,this.currentAction.event==="drop");this.pointer.setState({onMouseEnter:()=>this.debouncedToggleOpen(true),onMouseLeave:()=>this.debouncedToggleOpen(false),});}}
setActionListeners(){const cleanups=this.anchorEls.flatMap((anchorEl,index)=>{const toListen={anchorEl,consumeEvents:this.getConsumeEventType(anchorEl,this.currentAction.event),onConsume:()=>{this.pointer.hide();this.currentActionIndex++;this.play();},onError:()=>{if(this.currentAction.event==="drop"){this.pointer.hide();this.currentActionIndex--;this.play();}},};if(index===0){return this.setupListeners({...toListen,onMouseEnter:()=>this.pointer.showContent(true),onMouseLeave:()=>this.pointer.showContent(false),onScroll:()=>this.updatePointer(),});}else{return this.setupListeners({...toListen,onScroll:()=>{},});}});this.removeListeners=()=>{this.anchorEls=[];while(cleanups.length){cleanups.pop()();}};}
setupListeners({anchorEl,consumeEvents,onMouseEnter,onMouseLeave,onScroll,onConsume,onError=()=>{},}){consumeEvents=consumeEvents.map((c)=>({target:c.target,type:c.name,listener:function(ev){if(!c.conditional||c.conditional(ev)){onConsume();}else{onError();}},}));for(const consume of consumeEvents){consume.target.addEventListener(consume.type,consume.listener,true);}
anchorEl.addEventListener("mouseenter",onMouseEnter);anchorEl.addEventListener("mouseleave",onMouseLeave);const cleanups=[()=>{for(const consume of consumeEvents){consume.target.removeEventListener(consume.type,consume.listener,true);}
anchorEl.removeEventListener("mouseenter",onMouseEnter);anchorEl.removeEventListener("mouseleave",onMouseLeave);},];const scrollEl=getScrollParent(anchorEl);if(scrollEl){const debouncedOnScroll=debounce(onScroll,50);scrollEl.addEventListener("scroll",debouncedOnScroll);cleanups.push(()=>scrollEl.removeEventListener("scroll",debouncedOnScroll));}
return cleanups;}
getSubActions(step){const actions=[];if(!step.run||typeof step.run==="function"){actions.push({step,event:"warn",anchor:step.trigger,});return actions;}
for(const todo of step.run.split("&&")){const m=String(todo).trim().match(/^(?<action>\w*) *\(? *(?<arguments>.*?)\)?$/);let action=m.groups?.action;const anchor=m.groups?.arguments||step.trigger;const pointerInfo={content:step.content,tooltipPosition:step.tooltipPosition,};if(action==="drag_and_drop"){actions.push({step,event:"drag",anchor:step.trigger,pointerInfo,});action="drop";}
actions.push({step,event:action,anchor:action==="edit"?step.trigger:anchor,pointerInfo,});}
return actions;}
getConsumeEventType(element,runCommand){const consumeEvents=[];if(runCommand==="click"){consumeEvents.push({name:"click",target:element,});if(element.querySelector(".o-autocomplete--input")){consumeEvents.push({name:"keydown",target:element.querySelector(".o-autocomplete--input"),conditional:(ev)=>["Tab","Enter"].includes(ev.key)&&ev.target.parentElement.querySelector(".o-autocomplete--dropdown-item .ui-state-active"),});}
if(element.closest(".o-autocomplete--dropdown-menu")){consumeEvents.push({name:"keydown",target:element.closest(".o-autocomplete").querySelector("input"),conditional:(ev)=>["Tab","Enter"].includes(ev.key),});}
if(element.tagName==="BUTTON"){consumeEvents.push({name:"keydown",target:element,conditional:(ev)=>ev.key==="Enter",});if(element.closest(".input-group")){for(const inputEl of element.parentElement.querySelectorAll("input")){consumeEvents.push({name:"keydown",target:inputEl,conditional:(ev)=>ev.key==="Enter",});}}}}
if(["fill","edit"].includes(runCommand)){if(utils.isSmall()&&element.closest(".o_field_widget")?.matches(".o_field_many2one, .o_field_many2many")){consumeEvents.push({name:"click",target:element,});}else{consumeEvents.push({name:"input",target:element,});}}
if(runCommand==="drag"){consumeEvents.push({name:"pointerdown",target:element,});}
if(runCommand==="drop"){consumeEvents.push({name:"pointerup",target:element.ownerDocument,conditional:(ev)=>element.ownerDocument.elementsFromPoint(ev.clientX,ev.clientY).includes(element),});consumeEvents.push({name:"drop",target:element.ownerDocument,conditional:(ev)=>element.ownerDocument.elementsFromPoint(ev.clientX,ev.clientY).includes(element),});}
return consumeEvents;}
getAnchorEl(el,consumeEvent){if(consumeEvent==="drag"){return el.closest(".ui-draggable, .o_draggable, .o_we_draggable, .o-draggable, [draggable='true']");}
if(consumeEvent==="input"&&!["textarea","input"].includes(el.tagName.toLowerCase())){return el.closest("[contenteditable='true']");}
if(consumeEvent==="sort"){return el.closest(".ui-sortable, .o_sortable");}
return el;}
_onMutation(){if(this.currentAction){const tempAnchors=this.findTriggers();if(tempAnchors.length&&(tempAnchors.some((a)=>!this.anchorEls.includes(a))||this.anchorEls.some((a)=>!tempAnchors.includes(a)))){this.removeListeners();this.anchorEls=tempAnchors;this.setActionListeners();}else if(!tempAnchors.length&&this.anchorEls.length){this.pointer.hide();if(!hoot.queryFirst(".o_home_menu",{visible:true})){this.backward();}
return;}
this.updatePointer();}}}
return __exports;});;

/* /web_tour/static/src/tour_service/tour_pointer_state.js */
odoo.define('@web_tour/tour_service/tour_pointer_state',['@odoo/owl','@web/core/l10n/translation','@web_tour/tour_pointer/tour_pointer','@web_tour/tour_service/tour_utils'],function(require){'use strict';let __exports={};const{reactive}=require("@odoo/owl");const{_t}=require("@web/core/l10n/translation");const{TourPointer}=require("@web_tour/tour_pointer/tour_pointer");const{getScrollParent}=require("@web_tour/tour_service/tour_utils");class Intersection{constructor(){this.currentTarget=null;this.rootBounds=null;this._targetPosition="unknown";this._observer=new IntersectionObserver((observations)=>this._handleObservations(observations));}
_handleObservations(observations){if(observations.length<1){return;}
const observation=observations[observations.length-1];this.rootBounds=observation.rootBounds;if(this.rootBounds&&this.currentTarget){if(observation.isIntersecting){this._targetPosition="in";}else{const targetBounds=this.currentTarget.getBoundingClientRect();if(targetBounds.bottom<this.rootBounds.height/2){this._targetPosition="out-above";}else if(targetBounds.top>this.rootBounds.height/2){this._targetPosition="out-below";}}}else{this._targetPosition="unknown";}}
get targetPosition(){if(!this.rootBounds){return this.currentTarget?"in":"unknown";}else{return this._targetPosition;}}
setTarget(newTarget){if(this.currentTarget!==newTarget){if(this.currentTarget){this._observer.unobserve(this.currentTarget);}
if(newTarget){this._observer.observe(newTarget);}
this.currentTarget=newTarget;}}
stop(){this._observer.disconnect();}}
__exports.createPointerState=createPointerState;function createPointerState(){const setState=(newState)=>{Object.assign(state,newState);};const pointTo=(anchor,step,isZone)=>{intersection.setTarget(anchor);if(anchor){let{tooltipPosition,content}=step;switch(intersection.targetPosition){case"unknown":{break;}
case"in":{if(document.body.contains(floatingAnchor)){floatingAnchor.remove();}
setState({anchor,content,isZone,onClick:null,position:tooltipPosition,isVisible:true,});break;}
default:{const onClick=()=>{anchor.scrollIntoView({behavior:"smooth",block:"nearest"});hide();};const scrollParent=getScrollParent(anchor);if(!scrollParent){setState({anchor,content,isZone,onClick:null,position:tooltipPosition,isVisible:true,});return;}
let{x,y,width,height}=scrollParent.getBoundingClientRect();const iframeEl=scrollParent.ownerDocument.defaultView.frameElement;if(iframeEl){const iframeOffset=iframeEl.getBoundingClientRect();x+=iframeOffset.x;y+=iframeOffset.y;}
floatingAnchor.style.left=`${x + width / 2}px`;if(intersection.targetPosition==="out-below"){tooltipPosition="top";content=_t("Scroll down to reach the next step.");floatingAnchor.style.top=`${y + height - TourPointer.height}px`;}else if(intersection.targetPosition==="out-above"){tooltipPosition="bottom";content=_t("Scroll up to reach the next step.");floatingAnchor.style.top=`${y + TourPointer.height}px`;}
if(!document.contains(floatingAnchor)){document.body.appendChild(floatingAnchor);}
setState({anchor:floatingAnchor,content,onClick,position:tooltipPosition,isZone,isVisible:true,});}}}else{hide();}};function hide(){setState({content:"",isVisible:false,isOpen:false});}
function showContent(isOpen){setState({isOpen});}
function destroy(){intersection.stop();if(document.body.contains(floatingAnchor)){floatingAnchor.remove();}}
const state=reactive({});const intersection=new Intersection();const floatingAnchor=document.createElement("div");floatingAnchor.className="position-fixed";return{state,setState,showContent,pointTo,hide,destroy};}
return __exports;});;

/* /web_tour/static/src/tour_service/tour_recorder/tour_recorder.js */
odoo.define('@web_tour/tour_service/tour_recorder/tour_recorder',['@web/core/utils/hooks','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/core/browser/browser','@odoo/hoot-dom','@odoo/owl','@web/core/l10n/translation','@web/core/orm_service','@web_tour/tour_service/tour_recorder/tour_recorder_state'],function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{browser}=require("@web/core/browser/browser");const{queryAll,queryFirst,queryOne}=require("@odoo/hoot-dom");const{Component,useState,useExternalListener}=require("@odoo/owl");const{_t}=require("@web/core/l10n/translation");const{x2ManyCommands}=require("@web/core/orm_service");const{tourRecorderState}=require("@web_tour/tour_service/tour_recorder/tour_recorder_state");const TOUR_RECORDER_ACTIVE_LOCAL_STORAGE_KEY=__exports.TOUR_RECORDER_ACTIVE_LOCAL_STORAGE_KEY="tour_recorder_active";const PRECISE_IDENTIFIERS=["data-menu-xmlid","name","contenteditable"];const ODOO_CLASS_REGEX=/^oe?(-|_)[\w-]+$/;const VALIDATING_KEYS=["Enter","Tab"];const getShortestSelector=(paths)=>{paths.reverse();let filteredPath=[];let hasOdooClass=false;for(let currentElem=paths.pop();(currentElem&&queryAll(filteredPath.join(" > ")).length!==1)||!hasOdooClass;currentElem=paths.pop()){if(currentElem.parentElement.contentEditable==="true"){continue;}
let currentPredicate=currentElem.tagName.toLowerCase();const odooClass=[...currentElem.classList].find((c)=>c.match(ODOO_CLASS_REGEX));if(odooClass){currentPredicate=`.${odooClass}`;hasOdooClass=true;}
if(["BUTTON","A"].includes(currentElem.tagName)){filteredPath=[];}
for(const identifier of PRECISE_IDENTIFIERS){const identifierValue=currentElem.getAttribute(identifier);if(identifierValue){currentPredicate+=`[${identifier}='${CSS.escape(identifierValue)}']`;}}
const siblingNodes=queryAll(":scope > "+currentPredicate,{root:currentElem.parentElement,});if(siblingNodes.length>1){currentPredicate+=`:nth-child(${
                [...currentElem.parentElement.children].indexOf(currentElem) + 1
            })`;}
filteredPath.unshift(currentPredicate);}
if(filteredPath.length>2){return reducePath(filteredPath);}
return filteredPath.join(" > ");};const reducePath=(paths)=>{const numberOfElement=paths.length-2;let currentElement="";let hasReduced=false;let path=paths.shift();for(let i=0;i<numberOfElement;i++){currentElement=paths.shift();if(queryAll(`${path} ${paths.join(" > ")}`).length===1){hasReduced=true;}else{path+=`${hasReduced ? " " : " > "}${currentElement}`;hasReduced=false;}}
path+=`${hasReduced ? " " : " > "}${paths.shift()}`;return path;};const TourRecorder=__exports.TourRecorder=class TourRecorder extends Component{static template="web_tour.TourRecorder";static components={Dropdown,DropdownItem};static props={onClose:{type:Function},};static defaultState={recording:false,url:"",editedElement:undefined,tourName:"",};setup(){this.originClickEvent=false;this.notification=useService("notification");this.orm=useService("orm");this.state=useState({...TourRecorder.defaultState,steps:[],});this.state.steps=tourRecorderState.getCurrentTourRecorder();this.state.recording=tourRecorderState.isRecording()==="1";useExternalListener(document,"pointerdown",this.setStartingEvent,{capture:true});useExternalListener(document,"pointerup",this.recordClickEvent,{capture:true});useExternalListener(document,"keydown",this.recordConfirmationKeyboardEvent,{capture:true,});useExternalListener(document,"keyup",this.recordKeyboardEvent,{capture:true});}
setStartingEvent(ev){if(!this.state.recording||ev.target.closest(".o_tour_recorder")){return;}
this.originClickEvent=ev.composedPath().filter((p)=>p instanceof Element);}
recordClickEvent(ev){if(!this.state.recording||ev.target.closest(".o_tour_recorder")){return;}
const pathElements=ev.composedPath().filter((p)=>p instanceof Element);this.addTourStep([...pathElements]);const lastStepInput=this.state.steps.at(-1);if(JSON.stringify(pathElements.map((e)=>e.tagName))!==JSON.stringify(this.originClickEvent.map((e)=>e.tagName))){lastStepInput.run=`drag_and_drop ${lastStepInput.trigger}`;lastStepInput.trigger=getShortestSelector(this.originClickEvent);}else{const lastStepInput=this.state.steps.at(-1);lastStepInput.run="click";}
tourRecorderState.setCurrentTourRecorder(this.state.steps);}
recordConfirmationKeyboardEvent(ev){if(!this.state.recording||!this.state.editedElement||ev.target.closest(".o_tour_recorder")){return;}
if([...this.state.editedElement.classList].includes("o-autocomplete--input")&&VALIDATING_KEYS.includes(ev.key)){const selectedRow=queryFirst(".ui-state-active",{root:this.state.editedElement.parentElement,});this.state.steps.push({trigger:`.o-autocomplete--dropdown-item > a:contains('${selectedRow.textContent}'), .fa-circle-o-notch`,run:"click",});this.state.editedElement=undefined;}
tourRecorderState.setCurrentTourRecorder(this.state.steps);}
recordKeyboardEvent(ev){if(!this.state.recording||VALIDATING_KEYS.includes(ev.key)||ev.target.closest(".o_tour_recorder")){return;}
if(!this.state.editedElement){if(ev.target.matches("input:not(:disabled), textarea:not(:disabled), [contenteditable=true]")){this.state.editedElement=ev.target;this.state.steps.push({trigger:getShortestSelector(ev.composedPath()),});}else{return;}}
if(!this.state.editedElement){return;}
const lastStep=this.state.steps.at(-1);if(this.state.editedElement.contentEditable==="true"){lastStep.run=`editor ${this.state.editedElement.textContent}`;}else{lastStep.run=`edit ${this.state.editedElement.value}`;}
tourRecorderState.setCurrentTourRecorder(this.state.steps);}
toggleRecording(){this.state.recording=!this.state.recording;tourRecorderState.setIsRecording(this.state.recording);this.state.editedElement=undefined;if(this.state.recording&&!this.state.url){this.state.url=browser.location.pathname+browser.location.search;}}
async saveTour(){const newTour={name:this.state.tourName.replaceAll(" ","_"),url:this.state.url,step_ids:this.state.steps.map((s)=>x2ManyCommands.create(undefined,s)),custom:true,};const result=await this.orm.create("web_tour.tour",[newTour]);if(result){this.notification.add(_t("Custom tour '%s' has been added.",newTour.name),{type:"success",});this.resetTourRecorderState();}else{this.notification.add(_t("Custom tour '%s' couldn't be saved!",newTour.name),{type:"danger",});}}
resetTourRecorderState(){Object.assign(this.state,{...TourRecorder.defaultState,steps:[]});tourRecorderState.clear();}
addTourStep(path){const shortestPath=getShortestSelector(path);const target=queryOne(shortestPath);this.state.editedElement=target.matches("input:not(:disabled), textarea:not(:disabled), [contenteditable=true]")&&target;this.state.steps.push({trigger:shortestPath,});}}
return __exports;});;

/* /web_tour/static/src/tour_service/tour_recorder/tour_recorder_state.js */
odoo.define('@web_tour/tour_service/tour_recorder/tour_recorder_state',['@web/core/browser/browser'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const CURRENT_TOUR_RECORDER_LOCAL_STORAGE="current_tour_recorder";const CURRENT_TOUR_RECORDER_RECORD_LOCAL_STORAGE="current_tour_recorder.record";const tourRecorderState=__exports.tourRecorderState={isRecording(){return browser.localStorage.getItem(CURRENT_TOUR_RECORDER_RECORD_LOCAL_STORAGE)||"0";},setIsRecording(isRecording){browser.localStorage.setItem(CURRENT_TOUR_RECORDER_RECORD_LOCAL_STORAGE,isRecording?"1":"0");},setCurrentTourRecorder(tour){tour=JSON.stringify(tour);browser.localStorage.setItem(CURRENT_TOUR_RECORDER_LOCAL_STORAGE,tour);},getCurrentTourRecorder(){const tour=browser.localStorage.getItem(CURRENT_TOUR_RECORDER_LOCAL_STORAGE)||"[]";return JSON.parse(tour);},clear(){browser.localStorage.removeItem(CURRENT_TOUR_RECORDER_LOCAL_STORAGE);browser.localStorage.removeItem(CURRENT_TOUR_RECORDER_RECORD_LOCAL_STORAGE);},};return __exports;});;

/* /web_tour/static/src/tour_service/tour_service.js */
odoo.define('@web_tour/tour_service/tour_service',['@odoo/owl','@web/core/browser/browser','@web/core/l10n/translation','@web/core/registry','@web/session','@web_tour/tour_pointer/tour_pointer','@web_tour/tour_service/tour_pointer_state','@web_tour/tour_service/tour_state','@web_tour/tour_service/tour_interactive','@web_tour/tour_service/tour_automatic','@web_tour/tour_service/tour_utils','@web_tour/tour_service/tour_recorder/tour_recorder','@web/core/utils/urls','@web_tour/tour_service/tour_recorder/tour_recorder_state'],function(require){'use strict';let __exports={};const{markup,whenReady,validate}=require("@odoo/owl");const{browser}=require("@web/core/browser/browser");const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{session}=require("@web/session");const{TourPointer}=require("@web_tour/tour_pointer/tour_pointer");const{createPointerState}=require("@web_tour/tour_service/tour_pointer_state");const{tourState}=require("@web_tour/tour_service/tour_state");const{TourInteractive}=require("@web_tour/tour_service/tour_interactive");const{TourAutomatic}=require("@web_tour/tour_service/tour_automatic");const{callWithUnloadCheck}=require("@web_tour/tour_service/tour_utils");const{TOUR_RECORDER_ACTIVE_LOCAL_STORAGE_KEY,TourRecorder,}=require("@web_tour/tour_service/tour_recorder/tour_recorder");const{redirect}=require("@web/core/utils/urls");const{tourRecorderState}=require("@web_tour/tour_service/tour_recorder/tour_recorder_state");const StepSchema={id:{type:[String],optional:true},content:{type:[String,Object],optional:true},debugHelp:{type:String,optional:true},isActive:{type:Array,element:String,optional:true},run:{type:[String,Function,Boolean],optional:true},timeout:{optional:true,validate(value){return value>=0&&value<=60000;},},tooltipPosition:{optional:true,validate(value){return["top","bottom","left","right"].includes(value);},},trigger:{type:String},pause:{type:Boolean,optional:true},break:{type:Boolean,optional:true},};const TourSchema={checkDelay:{type:Number,optional:true},name:{type:String,optional:true},steps:Function,url:{type:String,optional:true},wait_for:{type:[Function,Object],optional:true},};registry.category("web_tour.tours").addValidation(TourSchema);const userMenuRegistry=registry.category("user_menuitems");const tourService=__exports.tourService={dependencies:["orm","effect","overlay","localization"],start:async(_env,{orm,effect,overlay})=>{await whenReady();let toursEnabled=session?.tour_enabled;const tourRegistry=registry.category("web_tour.tours");const pointer=createPointerState();pointer.stop=()=>{};userMenuRegistry.add("web_tour.tour_enabled",()=>({type:"switch",id:"web_tour.tour_enabled",description:_t("Onboarding"),callback:async()=>{tourState.clear();toursEnabled=await orm.call("res.users","switch_tour_enabled",[!toursEnabled]);browser.location.reload();},isChecked:toursEnabled,sequence:30,}));function getTourFromRegistry(tourName){if(!tourRegistry.contains(tourName)){return;}
const tour=tourRegistry.get(tourName);return{...tour,steps:tour.steps(),name:tourName,wait_for:tour.wait_for||Promise.resolve(),};}
async function getTourFromDB(tourName){const tour=await orm.call("web_tour.tour","get_tour_json_by_name",[tourName]);if(!tour){throw new Error(`Tour '${tourName}' is not found in the database.`);}
if(!tour.steps.length&&tourRegistry.contains(tour.name)){tour.steps=tourRegistry.get(tour.name).steps();}
return tour;}
function validateStep(step){try{validate(step,StepSchema);}catch(error){console.error(`Error in schema for TourStep ${JSON.stringify(step, null, 4)}\n${
                        error.message
                    }`);}}
async function startTour(tourName,options={}){pointer.stop();const tourFromRegistry=getTourFromRegistry(tourName);if(!tourFromRegistry&&!options.fromDB){return;}
const tour=options.fromDB?{name:tourName,url:options.url}:tourFromRegistry;if(!session.is_public&&!toursEnabled&&options.mode==="manual"){toursEnabled=await orm.call("res.users","switch_tour_enabled",[!toursEnabled]);}
let tourConfig={delayToCheckUndeterminisms:0,stepDelay:0,keepWatchBrowser:false,mode:"auto",showPointerDuration:0,debug:false,redirect:true,};tourConfig=Object.assign(tourConfig,options);tourState.setCurrentConfig(tourConfig);tourState.setCurrentTour(tour.name);tourState.setCurrentIndex(0);const willUnload=callWithUnloadCheck(()=>{if(tour.url&&tourConfig.startUrl!=tour.url&&tourConfig.redirect){redirect(tour.url);}});if(!willUnload){resumeTour();}}
async function resumeTour(){const tourName=tourState.getCurrentTour();const tourConfig=tourState.getCurrentConfig();let tour=getTourFromRegistry(tourName);if(tourConfig.fromDB){tour=await getTourFromDB(tourName);}
if(!tour){return;}
tour.steps.forEach((step)=>validateStep(step));pointer.stop=overlay.add(TourPointer,{pointerState:pointer.state,bounce:!(tourConfig.mode==="auto"&&tourConfig.keepWatchBrowser),},{sequence:1100,});if(tourConfig.mode==="auto"){new TourAutomatic(tour).start();}else{new TourInteractive(tour).start(pointer,async()=>{pointer.stop();tourState.clear();browser.console.log("tour succeeded");let message=tourConfig.rainbowManMessage||tour.rainbowManMessage;if(message){message=window.DOMPurify.sanitize(tourConfig.rainbowManMessage);effect.add({type:"rainbow_man",message:markup(message),});}
const nextTour=await orm.call("web_tour.tour","consume",[tour.name]);if(nextTour){startTour(nextTour.name,{mode:"manual",redirect:false,rainbowManMessage:nextTour.rainbowManMessage,});}});}}
function startTourRecorder(){if(!browser.localStorage.getItem(TOUR_RECORDER_ACTIVE_LOCAL_STORAGE_KEY)){const remove=overlay.add(TourRecorder,{onClose:()=>{remove();browser.localStorage.removeItem(TOUR_RECORDER_ACTIVE_LOCAL_STORAGE_KEY);tourRecorderState.clear();},},{sequence:99999});}
browser.localStorage.setItem(TOUR_RECORDER_ACTIVE_LOCAL_STORAGE_KEY,"1");}
if(!window.frameElement){const paramsTourName=new URLSearchParams(browser.location.search).get("tour");if(paramsTourName){startTour(paramsTourName,{mode:"manual",fromDB:true});}
if(tourState.getCurrentTour()){if(tourState.getCurrentConfig().mode==="auto"||toursEnabled){resumeTour();}else{tourState.clear();}}else if(session.current_tour){startTour(session.current_tour.name,{mode:"manual",redirect:false,rainbowManMessage:session.current_tour.rainbowManMessage,});}
if(browser.localStorage.getItem(TOUR_RECORDER_ACTIVE_LOCAL_STORAGE_KEY)&&!session.is_public){const remove=overlay.add(TourRecorder,{onClose:()=>{remove();browser.localStorage.removeItem(TOUR_RECORDER_ACTIVE_LOCAL_STORAGE_KEY);tourRecorderState.clear();},},{sequence:99999});}}
odoo.startTour=startTour;odoo.isTourReady=(tourName)=>getTourFromRegistry(tourName).wait_for.then(()=>true);return{startTour,startTourRecorder,};},};registry.category("services").add("tour_service",tourService);return __exports;});;

/* /web_tour/static/src/tour_service/tour_state.js */
odoo.define('@web_tour/tour_service/tour_state',['@web/core/browser/browser'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const CURRENT_TOUR_LOCAL_STORAGE="current_tour";const CURRENT_TOUR_CONFIG_LOCAL_STORAGE="current_tour.config";const CURRENT_TOUR_INDEX_LOCAL_STORAGE="current_tour.index";const CURRENT_TOUR_ON_ERROR_LOCAL_STORAGE="current_tour.on_error";const tourState=__exports.tourState={getCurrentTour(){return browser.localStorage.getItem(CURRENT_TOUR_LOCAL_STORAGE);},setCurrentTour(tourName){browser.localStorage.setItem(CURRENT_TOUR_LOCAL_STORAGE,tourName);},getCurrentIndex(){const index=browser.localStorage.getItem(CURRENT_TOUR_INDEX_LOCAL_STORAGE,"0");return parseInt(index,10);},setCurrentIndex(index){browser.localStorage.setItem(CURRENT_TOUR_INDEX_LOCAL_STORAGE,index.toString());},getCurrentConfig(){const config=browser.localStorage.getItem(CURRENT_TOUR_CONFIG_LOCAL_STORAGE,"{}");return JSON.parse(config);},setCurrentConfig(config){config=JSON.stringify(config);browser.localStorage.setItem(CURRENT_TOUR_CONFIG_LOCAL_STORAGE,config);},getCurrentTourOnError(){return browser.localStorage.getItem(CURRENT_TOUR_ON_ERROR_LOCAL_STORAGE);},setCurrentTourOnError(){browser.localStorage.setItem(CURRENT_TOUR_ON_ERROR_LOCAL_STORAGE,"1");},clear(){browser.localStorage.removeItem(CURRENT_TOUR_ON_ERROR_LOCAL_STORAGE);browser.localStorage.removeItem(CURRENT_TOUR_CONFIG_LOCAL_STORAGE);browser.localStorage.removeItem(CURRENT_TOUR_INDEX_LOCAL_STORAGE);browser.localStorage.removeItem(CURRENT_TOUR_LOCAL_STORAGE);},};return __exports;});;

/* /web_tour/static/src/tour_service/tour_step.js */
odoo.define('@web_tour/tour_service/tour_step',['@web/session','@web/core/ui/ui_service','@odoo/hoot-dom','@web/core/utils/objects'],function(require){'use strict';let __exports={};const{session}=require("@web/session");const{utils}=require("@web/core/ui/ui_service");const hoot=require("@odoo/hoot-dom");const{pick}=require("@web/core/utils/objects");const TourStep=__exports.TourStep=class TourStep{constructor(data,tour){Object.assign(this,data);this.tour=tour;}
get active(){this.checkHasTour();const mode=this.tour.mode;const isSmall=utils.isSmall();const standardKeyWords=["enterprise","community","mobile","desktop","auto","manual"];const isActiveArray=Array.isArray(this.isActive)?this.isActive:[];if(isActiveArray.length===0){return true;}
const selectors=isActiveArray.filter((key)=>!standardKeyWords.includes(key));if(selectors.length){for(const selector of selectors){const el=hoot.queryFirst(selector);if(!el){return false;}}}
const checkMode=isActiveArray.includes(mode)||(!isActiveArray.includes("manual")&&!isActiveArray.includes("auto"));const edition=(session.server_version_info||"").at(-1)==="e"?"enterprise":"community";const checkEdition=isActiveArray.includes(edition)||(!isActiveArray.includes("enterprise")&&!isActiveArray.includes("community"));const onlyForMobile=isActiveArray.includes("mobile")&&isSmall;const onlyForDesktop=isActiveArray.includes("desktop")&&!isSmall;const checkDevice=onlyForMobile||onlyForDesktop||(!isActiveArray.includes("mobile")&&!isActiveArray.includes("desktop"));return checkEdition&&checkDevice&&checkMode;}
checkHasTour(){if(!this.tour){throw new Error(`TourStep instance must have a tour`);}}
get describeMe(){this.checkHasTour();return(`[${this.index + 1}/${this.tour.steps.length}] Tour ${this.tour.name} → Step `+
(this.content?`${this.content} (trigger: ${this.trigger})`:this.trigger));}
get stringify(){return(JSON.stringify(pick(this,"isActive","content","trigger","run","tooltipPosition","timeout"),(_key,value)=>{if(typeof value==="function"){return"[function]";}else{return value;}},2)+",");}}
return __exports;});;

/* /web_tour/static/src/tour_service/tour_step_automatic.js */
odoo.define('@web_tour/tour_service/tour_step_automatic',['@web_tour/tour_service/tour_state','@odoo/hoot-dom','@web_tour/tour_service/tour_utils','@web_tour/tour_service/tour_helpers','@web_tour/tour_service/tour_step','@web/core/utils/xml','@web/core/browser/browser'],function(require){'use strict';let __exports={};const{tourState}=require("@web_tour/tour_service/tour_state");const hoot=require("@odoo/hoot-dom");const{callWithUnloadCheck}=require("@web_tour/tour_service/tour_utils");const{TourHelpers}=require("@web_tour/tour_service/tour_helpers");const{TourStep}=require("@web_tour/tour_service/tour_step");const{getTag}=require("@web/core/utils/xml");const{browser}=require("@web/core/browser/browser");const TourStepAutomatic=__exports.TourStepAutomatic=class TourStepAutomatic extends TourStep{skipped=false;error="";constructor(data,tour,index){super(data,tour);this.index=index;this.tourConfig=tourState.getCurrentConfig();}
async checkForUndeterminisms(){const delay=this.tourConfig.delayToCheckUndeterminisms;if(delay>0&&this.element){const snapshot=this.element.cloneNode(true);return new Promise((resolve,reject)=>{browser.setTimeout(()=>{if(this.element.isEqualNode(snapshot)){resolve();}else{reject(new Error([...this.describeWhyIFailed,`UNDETERMINISM: two differents elements have been found in ${delay}ms for trigger ${this.trigger}`,].join("\n")));}},delay);});}}
get describeWhyIFailed(){const errors=[];if(this.element){errors.push(`Element has been found.`);if(this.isUIBlocked){errors.push("BUT: DOM is blocked by UI.");}
if(!this.elementIsInModal){errors.push(`BUT: It is not allowed to do action on an element that's below a modal.`);}
if(!this.elementIsEnabled){errors.push(`BUT: Element is not enabled. TIP: You can use :enable to wait the element is enabled before doing action on it.`);}}else{const checkElement=hoot.queryFirst(this.trigger);if(checkElement){errors.push(`Element has been found.`);errors.push(`BUT: Element is not visible. TIP: You can use :not(:visible) to force the search for an invisible element.`);}else{errors.push(`Element (${this.trigger}) has not been found.`);}}
return errors;}
async doAction(){let result=false;if(!this.skipped){const actionHelper=new TourHelpers(this.element);if(typeof this.run==="function"){const willUnload=await callWithUnloadCheck(async()=>{await this.run.call({anchor:this.element},actionHelper);});result=willUnload&&"will unload";}else if(typeof this.run==="string"){for(const todo of this.run.split("&&")){const m=String(todo).trim().match(/^(?<action>\w*) *\(? *(?<arguments>.*?)\)?$/);await actionHelper[m.groups?.action](m.groups?.arguments);}}}
return result;}
findTrigger(){if(!this.active){this.skipped=true;return true;}
const visible=!/:(hidden|visible)\b/.test(this.trigger);this.element=hoot.queryFirst(this.trigger,{visible});return!this.isUIBlocked&&this.elementIsEnabled&&this.elementIsInModal?this.element:false;}
get isUIBlocked(){return(document.body.classList.contains("o_ui_blocked")||document.querySelector(".o_blockUI"));}
get elementIsInModal(){if(!this.element){return false;}
if(this.hasAction){const overlays=hoot.queryFirst(".popover, .o-we-command, .o_notification");const modal=hoot.queryFirst(".modal:visible:not(.o_inactive_modal):last");if(modal&&!overlays&&!this.trigger.startsWith("body")){return(modal.contains(hoot.getParentFrame(this.element))||modal.contains(this.element));}}
return true;}
get elementIsEnabled(){const isTag=(array)=>array.includes(getTag(this.element,true));if(!this.element){return false;}
if(this.hasAction){if(isTag(["input","textarea"])){return hoot.isEditable(this.element);}else if(isTag(["button","select"])){return!this.element.disabled;}}
return true;}
get hasAction(){return["string","function"].includes(typeof this.run)&&!this.skipped;}}
return __exports;});;

/* /web_tour/static/src/tour_service/tour_utils.js */
odoo.define('@web_tour/tour_service/tour_utils',['@odoo/hoot-dom','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const hoot=require("@odoo/hoot-dom");const{_t}=require("@web/core/l10n/translation");__exports.callWithUnloadCheck=callWithUnloadCheck;function callWithUnloadCheck(func,...args){let willUnload=false;const beforeunload=()=>(willUnload=true);window.addEventListener("beforeunload",beforeunload);const result=func(...args);if(result instanceof Promise){return result.then(()=>{window.removeEventListener("beforeunload",beforeunload);return willUnload;});}else{window.removeEventListener("beforeunload",beforeunload);return willUnload;}}
__exports.getScrollParent=getScrollParent;function getScrollParent(element){if(!element){return null;}
const overflowY=window.getComputedStyle(element).overflowY;const isScrollable=overflowY==="auto"||overflowY==="scroll"||(overflowY==="visible"&&element===element.ownerDocument.scrollingElement);if(isScrollable){return element;}else{return getScrollParent(element.parentNode);}}
const stepUtils=__exports.stepUtils={_getHelpMessage(functionName,...args){return`Generated by function tour utils ${functionName}(${args.join(", ")})`;},addDebugHelp(helpMessage,step){if(typeof step.debugHelp==="string"){step.debugHelp=step.debugHelp+"\n"+helpMessage;}else{step.debugHelp=helpMessage;}
return step;},showAppsMenuItem(){return{isActive:["auto","community","desktop"],trigger:".o_navbar_apps_menu button:enabled",tooltipPosition:"bottom",run:"click",};},toggleHomeMenu(){return[{isActive:[".o_main_navbar .o_menu_toggle"],trigger:".o_main_navbar .o_menu_toggle",content:_t("Click the top left corner to navigate across apps."),tooltipPosition:"bottom",run:"click",},{isActive:["mobile"],trigger:".o_sidebar_topbar a.btn-primary",tooltipPosition:"right",run:"click",},];},autoExpandMoreButtons(isActiveMobile=false){const isActive=["auto"];if(isActiveMobile){isActive.push("mobile");}
return{isActive,content:`autoExpandMoreButtons`,trigger:".o-form-buttonbox",run(){const more=hoot.queryFirst(".o-form-buttonbox .o_button_more");if(more){hoot.click(more);}},};},goToAppSteps(dataMenuXmlid,description){return[this.showAppsMenuItem(),{isActive:["community"],trigger:`.o_app[data-menu-xmlid="${dataMenuXmlid}"]`,content:description,tooltipPosition:"right",run:"click",},{isActive:["enterprise"],trigger:`.o_app[data-menu-xmlid="${dataMenuXmlid}"]`,content:description,tooltipPosition:"bottom",run:"click",},].map((step)=>this.addDebugHelp(this._getHelpMessage("goToApp",dataMenuXmlid,description),step));},statusbarButtonsSteps(innerTextButton,description,trigger){const steps=[];if(trigger){steps.push({isActive:["auto","mobile"],trigger,});}
steps.push({isActive:["auto","mobile"],trigger:".o_cp_action_menus",run:(actions)=>{const node=hoot.queryFirst(".o_cp_action_menus .fa-cog");if(node){hoot.click(node);}},},{trigger:`.o_statusbar_buttons button:enabled:contains('${innerTextButton}'), .dropdown-item button:enabled:contains('${innerTextButton}')`,content:description,tooltipPosition:"bottom",run:"click",});return steps.map((step)=>this.addDebugHelp(this._getHelpMessage("statusbarButtonsSteps",innerTextButton,description),step));},mobileKanbanSearchMany2X(modalTitle,valueSearched){return[{isActive:["mobile"],trigger:`.modal:not(.o_inactive_modal) .o_control_panel_navigation .btn .fa-search`,tooltipPosition:"bottom",run:"click",},{isActive:["mobile"],trigger:".o_searchview_input",tooltipPosition:"bottom",run:`edit ${valueSearched}`,},{isActive:["mobile"],trigger:".dropdown-menu.o_searchview_autocomplete",},{isActive:["mobile"],trigger:".o_searchview_input",tooltipPosition:"bottom",run:"press Enter",},{isActive:["mobile"],trigger:`.o_kanban_record:contains('${valueSearched}')`,tooltipPosition:"bottom",run:"click",},].map((step)=>this.addDebugHelp(this._getHelpMessage("mobileKanbanSearchMany2X",modalTitle,valueSearched),step));},saveForm(){return[{isActive:["auto"],content:"save form",trigger:".o_form_button_save:enabled",run:"click",},{content:"wait for save completion",trigger:".o_form_readonly, .o_form_saved",},];},discardForm(){return[{isActive:["auto"],content:"discard the form",trigger:".o_form_button_cancel",run:"click",},{content:"wait for cancellation to complete",trigger:".o_view_controller.o_list_view, .o_form_view > div > div > .o_form_readonly, .o_form_view > div > div > .o_form_saved",},];},waitIframeIsReady(){return{content:"Wait until the iframe is ready",trigger:`iframe[is-ready=true]:iframe html`,};},goToUrl(url){return{isActive:["auto"],content:`Navigate to ${url}`,trigger:"body",run:`goToUrl ${url}`,};},};return __exports;});;

/* /account/static/src/helpers/account_tax.js */
odoo.define('@account/helpers/account_tax',['@web/core/utils/numbers','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{floatIsZero,roundPrecision}=require("@web/core/utils/numbers");const{_t}=require("@web/core/l10n/translation");const accountTaxHelpers=__exports.accountTaxHelpers={eval_taxes_computation_prepare_product_values(default_product_values,product){const product_values={};for(const[field_name,field_info]of Object.entries(default_product_values)){product_values[field_name]=product?product[field_name]||field_info.default_value:field_info.default_value;}
return product_values;},batch_for_taxes_computation(taxes,{special_mode=null}={}){function sort_key(taxes){return taxes.sort((t1,t2)=>t1.sequence-t2.sequence||t1.id-t2.id);}
const results={batch_per_tax:{},group_per_tax:{},sorted_taxes:[],};for(const tax of sort_key(taxes)){if(tax.amount_type==="group"){const children=sort_key(tax.children_tax_ids);for(const child of children){results.group_per_tax[child.id]=tax;results.sorted_taxes.push(child);}}else{results.sorted_taxes.push(tax);}}
let batch=[];let is_base_affected=false;for(const tax of results.sorted_taxes.toReversed()){if(batch.length>0){const same_batch=tax.amount_type===batch[0].amount_type&&(special_mode||tax.price_include===batch[0].price_include)&&tax.include_base_amount===batch[0].include_base_amount&&((tax.include_base_amount&&!is_base_affected)||!tax.include_base_amount);if(!same_batch){for(const batch_tax of batch){results.batch_per_tax[batch_tax.id]=batch;}
batch=[];}}
is_base_affected=tax.is_base_affected;batch.push(tax);}
if(batch.length!==0){for(const batch_tax of batch){results.batch_per_tax[batch_tax.id]=batch;}}
return results;},propagate_extra_taxes_base(taxes,tax,taxes_data,{special_mode=null}={}){function*get_tax_before(){for(const tax_before of taxes){if(taxes_data[tax.id].batch.includes(tax_before)){break;}
yield tax_before;}}
function*get_tax_after(){for(const tax_after of taxes.toReversed()){if(taxes_data[tax.id].batch.includes(tax_after)){break;}
yield tax_after;}}
function add_extra_base(other_tax,sign){const tax_amount=taxes_data[tax.id].tax_amount;if(!("tax_amount"in taxes_data[other_tax.id])){taxes_data[other_tax.id].extra_base_for_tax+=sign*tax_amount;}
taxes_data[other_tax.id].extra_base_for_base+=sign*tax_amount;}
if(tax.price_include){if(!special_mode||special_mode==="total_included"){if(!tax.include_base_amount){for(const other_tax of get_tax_after()){if(other_tax.price_include){add_extra_base(other_tax,-1)}}}
for(const other_tax of get_tax_before()){add_extra_base(other_tax,-1);}}else{for(const other_tax of get_tax_after()){if(!other_tax.price_include||tax.include_base_amount){add_extra_base(other_tax,1);}}}}else if(!tax.price_include){if(!special_mode||special_mode==="total_excluded"){if(tax.include_base_amount){for(const other_tax of get_tax_after()){if(other_tax.is_base_affected){add_extra_base(other_tax,1);}}}}else{if(!tax.include_base_amount){for(const other_tax of get_tax_after()){add_extra_base(other_tax,-1);}}
for(const other_tax of get_tax_before()){add_extra_base(other_tax,-1);}}}},eval_tax_amount_fixed_amount(tax,batch,raw_base,evaluation_context){if(tax.amount_type==="fixed"){return evaluation_context.quantity*tax.amount;}
return null;},eval_tax_amount_price_included(tax,batch,raw_base,evaluation_context){if(tax.amount_type==="percent"){const total_percentage=batch.reduce((sum,batch_tax)=>sum+batch_tax.amount,0)/100.0;const to_price_excluded_factor=total_percentage!==-1?1/(1+total_percentage):0.0;return(raw_base*to_price_excluded_factor*tax.amount)/100.0;}
if(tax.amount_type==="division"){return(raw_base*tax.amount)/100.0;}
return null;},eval_tax_amount_price_excluded(tax,batch,raw_base,evaluation_context){if(tax.amount_type==="percent"){return(raw_base*tax.amount)/100.0;}
if(tax.amount_type==="division"){const total_percentage=batch.reduce((sum,batch_tax)=>sum+batch_tax.amount,0)/100.0;const incl_base_multiplicator=total_percentage===1.0?1.0:1-total_percentage;return(raw_base*tax.amount)/100.0/incl_base_multiplicator;}
return null;},eval_raw_base(quantity,price_unit,evaluation_context){return quantity*price_unit;},get_tax_details(taxes,price_unit,quantity,{precision_rounding=null,rounding_method="round_per_line",product=null,special_mode=null,manual_tax_amounts=null,}={}){const self=this;function add_tax_amount_to_results(tax,tax_amount){taxes_data[tax.id].tax_amount=tax_amount;if(rounding_method==="round_per_line"){taxes_data[tax.id].tax_amount=roundPrecision(taxes_data[tax.id].tax_amount,precision_rounding);}
if(tax.has_negative_factor){reverse_charge_taxes_data[tax.id].tax_amount=-taxes_data[tax.id].tax_amount;}
self.propagate_extra_taxes_base(sorted_taxes,tax,taxes_data,{special_mode:special_mode,});}
function eval_tax_amount(tax_amount_function,tax){const is_already_computed="tax_amount"in taxes_data[tax.id];if(is_already_computed){return;}
let tax_amount=null;if(manual_tax_amounts&&tax.id in manual_tax_amounts){tax_amount=manual_tax_amounts[tax.id].tax_amount_currency;}else{tax_amount=tax_amount_function(tax,taxes_data[tax.id].batch,raw_base+taxes_data[tax.id].extra_base_for_tax,evaluation_context);}
if(tax_amount!==null){add_tax_amount_to_results(tax,tax_amount);}}
function prepare_tax_extra_data(tax,kwargs={}){let price_include;if(special_mode==="total_included"){price_include=true;}else if(special_mode==="total_excluded"){price_include=false;}else{price_include=tax.price_include;}
return{...kwargs,tax:tax,price_include:price_include,extra_base_for_tax:0.0,extra_base_for_base:0.0,};}
const batching_results=this.batch_for_taxes_computation(taxes,{special_mode:special_mode,});const sorted_taxes=batching_results.sorted_taxes;const taxes_data={};const reverse_charge_taxes_data={};for(const tax of sorted_taxes){taxes_data[tax.id]=prepare_tax_extra_data(tax,{group:batching_results.group_per_tax[tax.id],batch:batching_results.batch_per_tax[tax.id],});if(tax.has_negative_factor){reverse_charge_taxes_data[tax.id]={...taxes_data[tax.id],is_reverse_charge:true,}}}
const raw_base_evaluation_context={taxes:sorted_taxes,precision_rounding:precision_rounding,};let raw_base=this.eval_raw_base(quantity,price_unit,raw_base_evaluation_context);if(rounding_method==="round_per_line"){raw_base=roundPrecision(raw_base,precision_rounding);}
let evaluation_context={product:product||{},price_unit:price_unit,quantity:quantity,raw_base:raw_base,special_mode:special_mode,precision_rounding:precision_rounding,};for(const tax of sorted_taxes.toReversed()){eval_tax_amount(this.eval_tax_amount_fixed_amount.bind(this),tax);}
for(const tax of sorted_taxes.toReversed()){if(taxes_data[tax.id].price_include){eval_tax_amount(this.eval_tax_amount_price_included.bind(this),tax);}}
for(const tax of sorted_taxes){if(!taxes_data[tax.id].price_include){eval_tax_amount(this.eval_tax_amount_price_excluded.bind(this),tax);}}
for(const tax of sorted_taxes.toReversed()){const tax_data=taxes_data[tax.id];if(!("tax_amount"in tax_data)){continue;}
let base=null;if(manual_tax_amounts&&"base_amount_currency"in manual_tax_amounts[tax.id]){base=manual_tax_amounts[tax.id].base_amount_currency;}else{let total_tax_amount=taxes_data[tax.id].batch.reduce((sum,other_tax)=>sum+taxes_data[other_tax.id].tax_amount,0);total_tax_amount+=Object.values(taxes_data[tax.id].batch).filter(other_tax=>other_tax.has_negative_factor).reduce((sum,other_tax)=>sum+reverse_charge_taxes_data[other_tax.id].tax_amount,0);base=raw_base+taxes_data[tax.id].extra_base_for_base;if(tax_data.price_include&&(!special_mode||special_mode==="total_included")){base-=total_tax_amount;}}
tax_data.base=base;if(tax.has_negative_factor){const reverse_charge_tax_data=reverse_charge_taxes_data[tax.id];reverse_charge_tax_data.base=base;}}
const taxes_data_list=[];for(const tax of sorted_taxes){const tax_data=taxes_data[tax.id];if("tax_amount"in tax_data){taxes_data_list.push(tax_data);if(tax.has_negative_factor){taxes_data_list.push(reverse_charge_taxes_data[tax.id]);}}}
let total_excluded,total_included;if(taxes_data_list.length>0){total_excluded=taxes_data_list[0].base;const tax_amount=taxes_data_list.reduce((sum,tax_data)=>sum+tax_data.tax_amount,0);total_included=total_excluded+tax_amount;}else{total_excluded=total_included=raw_base;}
return{total_excluded:total_excluded,total_included:total_included,taxes_data:taxes_data_list.map(tax_data=>Object.assign({},{tax:tax_data.tax,group:batching_results.group_per_tax[tax_data.tax.id],batch:batching_results.batch_per_tax[tax_data.tax.id],tax_amount:tax_data.tax_amount,base_amount:tax_data.base,is_reverse_charge:tax_data.is_reverse_charge||false})),};},adapt_price_unit_to_another_taxes(price_unit,product,original_taxes,new_taxes){const original_tax_ids=new Set(original_taxes.map((x)=>x.id));const new_tax_ids=new Set(new_taxes.map((x)=>x.id));if((original_tax_ids.size===new_tax_ids.size&&[...original_tax_ids].every((value)=>new_tax_ids.has(value)))||original_taxes.some((x)=>!x.price_include)){return price_unit;}
let taxes_computation=this.get_tax_details(original_taxes,price_unit,1.0,{rounding_method:"round_globally",product:product,});price_unit=taxes_computation.total_excluded;taxes_computation=this.get_tax_details(new_taxes,price_unit,1.0,{rounding_method:"round_globally",product:product,special_mode:"total_excluded",});let delta=0.0;for(const tax_data of taxes_computation.taxes_data){if(tax_data.tax.price_include){delta+=tax_data.tax_amount;}}
return price_unit+delta;},get_base_line_field_value_from_record(record,field,extra_values,fallback){if(field in extra_values){return extra_values[field]||fallback;}
if(field in record){return record[field]||fallback;}
return fallback;},prepare_base_line_for_taxes_computation(record,kwargs={}){const load=(field,fallback)=>this.get_base_line_field_value_from_record(record,field,kwargs,fallback);const currency=(load('currency_id',null)||load('company_currency_id',null)||load('company_id',{}).currency_id||{})
return{...kwargs,record:record,id:load('id',0),product_id:load('product_id',{}),tax_ids:load('tax_ids',{}),price_unit:load('price_unit',0.0),quantity:load('quantity',0.0),discount:load('discount',0.0),currency_id:currency,sign:load('sign',1.0),special_mode:kwargs.special_mode||null,special_type:kwargs.special_type||null,rate:load("rate",1.0),manual_tax_amounts:kwargs.manual_tax_amounts||null,}},add_tax_details_in_base_line(base_line,company){const price_unit_after_discount=base_line.price_unit*(1-(base_line.discount/100.0));const currency_pd=base_line.currency_id.rounding;const company_currency_pd=company.currency_id.rounding;const taxes_computation=this.get_tax_details(base_line.tax_ids,price_unit_after_discount,base_line.quantity,{precision_rounding:currency_pd,rounding_method:company.tax_calculation_rounding_method,product:base_line.product_id,special_mode:base_line.special_mode,manual_tax_amounts:base_line.manual_tax_amounts});const rate=base_line.rate;const tax_details=base_line.tax_details={raw_total_excluded_currency:taxes_computation.total_excluded,raw_total_excluded:rate?taxes_computation.total_excluded/rate:0.0,raw_total_included_currency:taxes_computation.total_included,raw_total_included:rate?taxes_computation.total_included/rate:0.0,taxes_data:[]};if(company.tax_calculation_rounding_method==='round_per_line'){tax_details.raw_total_excluded=roundPrecision(tax_details.raw_total_excluded,currency_pd);tax_details.raw_total_included=roundPrecision(tax_details.raw_total_included,currency_pd);}
for(const tax_data of taxes_computation.taxes_data){let tax_amount=rate?tax_data.tax_amount/rate:0.0;let base_amount=rate?tax_data.base_amount/rate:0.0;if(company.tax_calculation_rounding_method==='round_per_line'){tax_amount=roundPrecision(tax_amount,company_currency_pd);base_amount=roundPrecision(base_amount,company_currency_pd);}
tax_details.taxes_data.push({...tax_data,raw_tax_amount_currency:tax_data.tax_amount,raw_tax_amount:tax_amount,raw_base_amount_currency:tax_data.base_amount,raw_base_amount:base_amount});}},add_tax_details_in_base_lines(base_lines,company){for(const base_line of base_lines){this.add_tax_details_in_base_line(base_line,company);}},round_base_lines_tax_details(base_lines,company){const total_per_tax={};const total_per_base={};for(const base_line of base_lines){const currency=base_line.currency_id;const tax_details=base_line.tax_details;tax_details.total_excluded_currency=roundPrecision(tax_details.raw_total_excluded_currency,currency.rounding);tax_details.total_excluded=roundPrecision(tax_details.raw_total_excluded,company.currency_id.rounding);tax_details.delta_total_excluded_currency=0.0;tax_details.delta_total_excluded=0.0;tax_details.total_included_currency=roundPrecision(tax_details.raw_total_included_currency,currency.rounding);tax_details.total_included=roundPrecision(tax_details.raw_total_included,company.currency_id.rounding);const taxes_data=tax_details.taxes_data;let index=0;for(const tax_data of taxes_data){const tax=tax_data.tax;tax_data.tax_amount_currency=roundPrecision(tax_data.raw_tax_amount_currency,currency.rounding);tax_data.tax_amount=roundPrecision(tax_data.raw_tax_amount,company.currency_id.rounding);tax_data.base_amount_currency=roundPrecision(tax_data.raw_base_amount_currency,currency.rounding);tax_data.base_amount=roundPrecision(tax_data.raw_base_amount,company.currency_id.rounding);const tax_rounding_key=[tax.id,currency.id,base_line.is_refund,tax_data.is_reverse_charge];if(!(tax_rounding_key in total_per_tax)){total_per_tax[tax_rounding_key]={tax:tax,is_reverse_charge:tax_data.is_reverse_charge,currency:currency,base_amount_currency:0.0,base_amount:0.0,raw_base_amount_currency:0.0,raw_base_amount:0.0,tax_amount_currency:0.0,tax_amount:0.0,raw_tax_amount_currency:0.0,raw_tax_amount:0.0,base_lines:[],};}
const tax_amounts=total_per_tax[tax_rounding_key];tax_amounts.tax_amount_currency+=tax_data.tax_amount_currency;tax_amounts.raw_tax_amount_currency+=tax_data.raw_tax_amount_currency;tax_amounts.tax_amount+=tax_data.tax_amount;tax_amounts.raw_tax_amount+=tax_data.raw_tax_amount;tax_amounts.base_amount_currency+=tax_data.base_amount_currency;tax_amounts.raw_base_amount_currency+=tax_data.raw_base_amount_currency;tax_amounts.base_amount+=tax_data.base_amount;tax_amounts.raw_base_amount+=tax_data.raw_base_amount;if(!base_line.special_type){tax_amounts.base_lines.push(base_line);}
if(index===0){const base_rounding_key=[currency.id,base_line.is_refund];if(!(base_rounding_key in total_per_base)){total_per_base[base_rounding_key]={currency:currency,base_amount_currency:0.0,base_amount:0.0,raw_base_amount_currency:0.0,raw_base_amount:0.0,base_lines:[],};}
const base_amounts=total_per_base[base_rounding_key];base_amounts.base_amount_currency+=tax_data.base_amount_currency;base_amounts.raw_base_amount_currency+=tax_data.raw_base_amount_currency;base_amounts.base_amount+=tax_data.base_amount;base_amounts.raw_base_amount+=tax_data.raw_base_amount;if(!base_line.special_type){base_amounts.base_lines.push(base_line);}}
index++;}
if(!taxes_data.length){const tax_rounding_key=[null,currency.id,base_line.is_refund,false];if(!(tax_rounding_key in total_per_tax)){total_per_tax[tax_rounding_key]={tax:null,currency:currency,base_amount_currency:0.0,base_amount:0.0,raw_base_amount_currency:0.0,raw_base_amount:0.0,tax_amount_currency:0.0,tax_amount:0.0,raw_tax_amount_currency:0.0,raw_tax_amount:0.0,base_lines:[]};}
const tax_amounts=total_per_tax[tax_rounding_key];tax_amounts.base_amount_currency+=tax_details.total_excluded_currency;tax_amounts.raw_base_amount_currency+=tax_details.raw_total_excluded_currency;tax_amounts.base_amount+=tax_details.total_excluded;tax_amounts.raw_base_amount+=tax_details.raw_total_excluded;if(!base_line.special_type){tax_amounts.base_lines.push(base_line);}
const base_rounding_key=[currency.id,base_line.is_refund];if(!(base_rounding_key in total_per_base)){total_per_base[base_rounding_key]={currency:currency,base_amount_currency:0.0,base_amount:0.0,raw_base_amount_currency:0.0,raw_base_amount:0.0,base_lines:[]};}
const base_amounts=total_per_base[base_rounding_key];base_amounts.base_amount_currency+=tax_details.total_excluded_currency;base_amounts.raw_base_amount_currency+=tax_details.raw_total_excluded_currency;base_amounts.base_amount+=tax_details.total_excluded;base_amounts.raw_base_amount+=tax_details.raw_total_excluded;if(!base_line.special_type){base_amounts.base_lines.push(base_line);}}}
for(const amounts of Object.values(total_per_tax)){amounts.raw_tax_amount_currency=roundPrecision(amounts.raw_tax_amount_currency,amounts.currency.rounding);amounts.raw_tax_amount=roundPrecision(amounts.raw_tax_amount,company.currency_id.rounding);amounts.raw_base_amount_currency=roundPrecision(amounts.raw_base_amount_currency,amounts.currency.rounding);amounts.raw_base_amount=roundPrecision(amounts.raw_base_amount,company.currency_id.rounding);}
for(const amounts of Object.values(total_per_base)){amounts.raw_base_amount_currency=roundPrecision(amounts.raw_base_amount_currency,amounts.currency.rounding);amounts.raw_base_amount=roundPrecision(amounts.raw_base_amount,company.currency_id.rounding);}
for(const tax_amounts of Object.values(total_per_tax)){if(!tax_amounts.base_lines.length){continue;}
const base_line=tax_amounts.base_lines.sort((a,b)=>a.tax_details.total_included_currency-b.tax_details.total_included_currency)[0];tax_amounts.reference_base_line=base_line;const tax=tax_amounts.tax;if(!tax){continue;}
const tax_details=base_line.tax_details;const delta_tax_amount_currency=tax_amounts.raw_tax_amount_currency-tax_amounts.tax_amount_currency;const delta_tax_amount=tax_amounts.raw_tax_amount-tax_amounts.tax_amount;const tax_data=tax_details.taxes_data.find(x=>x.tax.id===tax_amounts.tax.id&&x.is_reverse_charge===tax_amounts.is_reverse_charge);tax_amounts.reference_tax_data=tax_data;tax_data.tax_amount_currency+=delta_tax_amount_currency;tax_data.tax_amount+=delta_tax_amount;}
for(const tax_amounts of Object.values(total_per_tax)){const base_line=tax_amounts.reference_base_line;if(!base_line){continue;}
const delta_base_amount_currency=tax_amounts.raw_base_amount_currency-tax_amounts.base_amount_currency;const delta_base_amount=tax_amounts.raw_base_amount-tax_amounts.base_amount;if(floatIsZero(delta_base_amount_currency,tax_amounts.currency.decimal_places)&&floatIsZero(delta_base_amount,company.currency_id.decimal_places)){continue;}
const tax_details=base_line.tax_details;const tax_data=tax_amounts.reference_tax_data;if(tax_data){tax_data.base_amount_currency+=delta_base_amount_currency;tax_data.base_amount+=delta_base_amount;}else{tax_details.delta_total_excluded_currency+=delta_base_amount_currency;tax_details.delta_total_excluded+=delta_base_amount;const base_rounding_key=[tax_amounts.currency.id,base_line.is_refund];const base_amounts=total_per_base[base_rounding_key];base_amounts.base_amount_currency+=delta_base_amount_currency;base_amounts.base_amount+=delta_base_amount;}}
for(const base_amounts of Object.values(total_per_base)){if(!base_amounts.base_lines.length){continue;}
const base_line=base_amounts.base_lines.sort((a,b)=>a.tax_details.total_included_currency-b.tax_details.total_included_currency)[0];const tax_details=base_line.tax_details;const delta_base_amount_currency=base_amounts.raw_base_amount_currency-base_amounts.base_amount_currency;const delta_base_amount=base_amounts.raw_base_amount-base_amounts.base_amount;if(floatIsZero(delta_base_amount_currency,base_amounts.currency.decimal_places)&&floatIsZero(delta_base_amount,company.currency_id.decimal_places)){continue;}
tax_details.delta_total_excluded_currency+=delta_base_amount_currency;tax_details.delta_total_excluded+=delta_base_amount;}},get_tax_totals_summary(base_lines,currency,company,{cash_rounding=null}={}){const company_pd=company.currency_id.rounding;const tax_totals_summary={currency_id:currency.id,currency_pd:currency.rounding,company_currency_id:company.currency_id.id,company_currency_pd:company.currency_id.rounding,has_tax_groups:false,subtotals:[],base_amount_currency:0.0,base_amount:0.0,tax_amount_currency:0.0,tax_amount:0.0,};const global_grouping_function=(base_line,tax_data)=>true;let base_lines_aggregated_values=this.aggregate_base_lines_tax_details(base_lines,global_grouping_function);let values_per_grouping_key=this.aggregate_base_lines_aggregated_values(base_lines_aggregated_values);for(const values of Object.values(values_per_grouping_key)){if(values.grouping_key){tax_totals_summary.has_tax_groups=true;}
tax_totals_summary.base_amount_currency+=values.total_excluded_currency;tax_totals_summary.base_amount+=values.total_excluded;tax_totals_summary.tax_amount_currency+=values.tax_amount_currency;tax_totals_summary.tax_amount+=values.tax_amount;}
const untaxed_amount_subtotal_label=_t("Untaxed Amount");const subtotals={};const subtotal_grouping_function=(base_line,tax_data)=>tax_data.tax.tax_group_id.preceding_subtotal||untaxed_amount_subtotal_label;base_lines_aggregated_values=this.aggregate_base_lines_tax_details(base_lines,subtotal_grouping_function);values_per_grouping_key=this.aggregate_base_lines_aggregated_values(base_lines_aggregated_values);for(const values of Object.values(values_per_grouping_key)){const subtotal_label=values.grouping_key||untaxed_amount_subtotal_label;if(!(subtotal_label in subtotals)){subtotals[subtotal_label]={tax_groups:[],tax_amount_currency:0.0,tax_amount:0.0,base_amount_currency:0.0,base_amount:0.0,};}
const subtotal=subtotals[subtotal_label];subtotal.base_amount_currency+=values.total_excluded_currency;subtotal.base_amount+=values.total_excluded;subtotal.tax_amount_currency+=values.tax_amount_currency;subtotal.tax_amount+=values.tax_amount;}
const tax_group_grouping_function=(base_line,tax_data)=>{return{grouping_key:tax_data.tax.tax_group_id.id,raw_grouping_key:tax_data.tax.tax_group_id,};}
base_lines_aggregated_values=this.aggregate_base_lines_tax_details(base_lines,tax_group_grouping_function);values_per_grouping_key=this.aggregate_base_lines_aggregated_values(base_lines_aggregated_values);const sorted_total_per_tax_group=Object.values(values_per_grouping_key).filter(values=>values.grouping_key).sort((a,b)=>(a.grouping_key.sequence-b.grouping_key.sequence)||(a.grouping_key.id-b.grouping_key.id));const encountered_base_amounts=new Set();const subtotals_order={};for(const[order,values]of sorted_total_per_tax_group.entries()){const tax_group=values.grouping_key;const involved_tax_ids=new Set();const involved_amount_types=new Set();const involved_price_include=new Set();values.base_line_x_taxes_data.forEach(([base_line,taxes_data])=>{taxes_data.forEach(tax_data=>{const tax=tax_data.tax;involved_tax_ids.add(tax.id);involved_amount_types.add(tax.amount_type);involved_price_include.add(tax.price_include);});});let display_base_amount=values.base_amount;let display_base_amount_currency=values.base_amount_currency;if(involved_amount_types.size===1&&involved_amount_types.has("fixed")){display_base_amount=null;display_base_amount_currency=null;}else if(involved_amount_types.size===1&&involved_amount_types.has("division")&&involved_price_include.size===1&&involved_price_include.has(true)){values.base_line_x_taxes_data.forEach(([base_line,_taxes_data])=>{base_line.tax_details.taxes_data.forEach(tax_data=>{if(tax_data.tax.amount_type==='division'){display_base_amount_currency+=tax_data.tax_amount_currency;display_base_amount+=tax_data.tax_amount;}});});}
if(display_base_amount_currency!==null){encountered_base_amounts.add(parseFloat(display_base_amount_currency.toFixed(currency.decimal_places)));}
const preceding_subtotal=tax_group.preceding_subtotal||untaxed_amount_subtotal_label;if(!(preceding_subtotal in subtotals_order)){subtotals_order[preceding_subtotal]=order;}
subtotals[preceding_subtotal].tax_groups.push({id:tax_group.id,involved_tax_ids:Array.from(involved_tax_ids),tax_amount_currency:values.tax_amount_currency,tax_amount:values.tax_amount,base_amount_currency:values.base_amount_currency,base_amount:values.base_amount,display_base_amount_currency,display_base_amount,group_name:tax_group.name,group_label:tax_group.pos_receipt_label,});}
const cash_rounding_lines=base_lines.filter(base_line=>base_line.special_type==='cash_rounding');if(cash_rounding_lines.length){tax_totals_summary.cash_rounding_base_amount_currency=0.0;tax_totals_summary.cash_rounding_base_amount=0.0;cash_rounding_lines.forEach(base_line=>{const tax_details=base_line.tax_details;tax_totals_summary.cash_rounding_base_amount_currency+=tax_details.total_excluded_currency;tax_totals_summary.cash_rounding_base_amount+=tax_details.total_excluded;});}else if(cash_rounding!==null){const strategy=cash_rounding.strategy;const cash_rounding_pd=cash_rounding.rounding;const cash_rounding_method=cash_rounding.rounding_method;const total_amount_currency=tax_totals_summary.base_amount_currency+tax_totals_summary.tax_amount_currency;const total_amount=tax_totals_summary.base_amount+tax_totals_summary.tax_amount;const expected_total_amount_currency=roundPrecision(total_amount_currency,cash_rounding_pd,cash_rounding_method);const cash_rounding_base_amount_currency=expected_total_amount_currency-total_amount_currency;if(!floatIsZero(cash_rounding_base_amount_currency,currency.decimal_places)){const rate=total_amount?Math.abs(total_amount_currency/total_amount):0.0;const cash_rounding_base_amount=rate?roundPrecision(cash_rounding_base_amount_currency/rate,company_pd):0.0;if(strategy==='add_invoice_line'){tax_totals_summary.cash_rounding_base_amount_currency=cash_rounding_base_amount_currency;tax_totals_summary.cash_rounding_base_amount=cash_rounding_base_amount;tax_totals_summary.base_amount_currency+=cash_rounding_base_amount_currency;tax_totals_summary.base_amount+=cash_rounding_base_amount;subtotals[untaxed_amount_subtotal_label].base_amount_currency+=cash_rounding_base_amount_currency;subtotals[untaxed_amount_subtotal_label].base_amount+=cash_rounding_base_amount;}else if(strategy==='biggest_tax'){const[max_subtotal,max_tax_group]=Array.from(Object.values(subtotals)).flatMap(subtotal=>subtotal.tax_groups.map(tax_group=>[subtotal,tax_group])).reduce((a,b)=>(b[1].tax_amount_currency>a[1].tax_amount_currency?b:a));max_tax_group.tax_amount_currency+=cash_rounding_base_amount_currency;max_tax_group.tax_amount+=cash_rounding_base_amount;max_subtotal.tax_amount_currency+=cash_rounding_base_amount_currency;max_subtotal.tax_amount+=cash_rounding_base_amount;tax_totals_summary.tax_amount_currency+=cash_rounding_base_amount_currency;tax_totals_summary.tax_amount+=cash_rounding_base_amount;}}}
const ordered_subtotals=Array.from(Object.entries(subtotals)).sort((a,b)=>(subtotals_order[a[0]]||0)-(subtotals_order[b[0]]||0));ordered_subtotals.forEach(([subtotal_label,subtotal])=>{subtotal.name=subtotal_label;tax_totals_summary.subtotals.push(subtotal);});const cash_rounding_base_amount_currency=tax_totals_summary.cash_rounding_base_amount_currency||0.0;const cash_rounding_base_amount=tax_totals_summary.cash_rounding_base_amount||0.0;tax_totals_summary.base_amount_currency-=cash_rounding_base_amount_currency;tax_totals_summary.base_amount-=cash_rounding_base_amount;for(const subtotal of tax_totals_summary.subtotals){subtotal.base_amount_currency-=cash_rounding_base_amount_currency;subtotal.base_amount-=cash_rounding_base_amount;}
encountered_base_amounts.add(parseFloat(tax_totals_summary.base_amount_currency.toFixed(currency.decimal_places)));tax_totals_summary.same_tax_base=encountered_base_amounts.size===1;tax_totals_summary.total_amount_currency=tax_totals_summary.base_amount_currency+tax_totals_summary.tax_amount_currency+cash_rounding_base_amount_currency;tax_totals_summary.total_amount=tax_totals_summary.base_amount+tax_totals_summary.tax_amount+cash_rounding_base_amount;return tax_totals_summary;},aggregate_base_line_tax_details(base_line,grouping_function){const values_per_grouping_key={};const tax_details=base_line.tax_details;const taxes_data=tax_details.taxes_data;for(const tax_data of taxes_data){const generated_grouping_key=grouping_function(base_line,tax_data);let raw_grouping_key=generated_grouping_key;let grouping_key=generated_grouping_key;if(typeof raw_grouping_key==='object'&&("raw_grouping_key"in raw_grouping_key)){raw_grouping_key=generated_grouping_key.raw_grouping_key;grouping_key=generated_grouping_key.grouping_key;}
if(typeof grouping_key==='object'){grouping_key=JSON.stringify(raw_grouping_key);}
if(!(grouping_key in values_per_grouping_key)){values_per_grouping_key[grouping_key]={base_amount_currency:tax_data.base_amount_currency,base_amount:tax_data.base_amount,raw_base_amount_currency:tax_data.raw_base_amount_currency,raw_base_amount:tax_data.raw_base_amount,tax_amount_currency:0.0,tax_amount:0.0,raw_tax_amount_currency:0.0,raw_tax_amount:0.0,total_excluded_currency:tax_details.total_excluded_currency+tax_details.delta_total_excluded_currency,total_excluded:tax_details.total_excluded+tax_details.delta_total_excluded,taxes_data:[],grouping_key:raw_grouping_key};}
const values=values_per_grouping_key[grouping_key];values.taxes_data.push(tax_data);values.tax_amount_currency+=tax_data.tax_amount_currency;values.tax_amount+=tax_data.tax_amount;values.raw_tax_amount_currency+=tax_data.raw_tax_amount_currency;values.raw_tax_amount+=tax_data.raw_tax_amount;}
if(!taxes_data.length){values_per_grouping_key[null]={base_amount_currency:tax_details.total_excluded_currency+tax_details.delta_total_excluded_currency,base_amount:tax_details.total_excluded+tax_details.delta_total_excluded,raw_base_amount_currency:tax_details.raw_total_excluded_currency,raw_base_amount:tax_details.raw_total_excluded,total_excluded_currency:tax_details.total_excluded_currency+tax_details.delta_total_excluded_currency,total_excluded:tax_details.total_excluded+tax_details.delta_total_excluded,tax_amount_currency:0.0,tax_amount:0.0,raw_tax_amount_currency:0.0,raw_tax_amount:0.0,taxes_data:[],grouping_key:null};}
return values_per_grouping_key;},aggregate_base_lines_tax_details(base_lines,grouping_function){return base_lines.map(base_line=>[base_line,this.aggregate_base_line_tax_details(base_line,grouping_function)]);},aggregate_base_lines_aggregated_values(base_lines_aggregated_values){const default_float_fields=new Set(['base_amount_currency','base_amount','raw_base_amount_currency','raw_base_amount','tax_amount_currency','tax_amount','raw_tax_amount_currency','raw_tax_amount','total_excluded_currency','total_excluded']);const values_per_grouping_key={};for(const[base_line,aggregated_values]of base_lines_aggregated_values){for(const[raw_grouping_key,values]of Object.entries(aggregated_values)){const grouping_key=values.grouping_key;if(!(raw_grouping_key in values_per_grouping_key)){const initial_values=values_per_grouping_key[raw_grouping_key]={base_line_x_taxes_data:[],grouping_key:grouping_key,};default_float_fields.forEach(field=>{initial_values[field]=0.0;});}
const agg_values=values_per_grouping_key[raw_grouping_key];default_float_fields.forEach(field=>{agg_values[field]+=values[field];});agg_values.base_line_x_taxes_data.push([base_line,values.taxes_data]);}}
return values_per_grouping_key;},};return __exports;});;

/* /account/static/src/services/account_move_service.js */
odoo.define('@account/services/account_move_service',['@web/core/l10n/translation','@web/core/confirmation_dialog/confirmation_dialog','@web/core/utils/strings','@odoo/owl','@web/core/registry'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{escape}=require("@web/core/utils/strings");const{markup}=require("@odoo/owl");const{registry}=require("@web/core/registry");const AccountMoveService=__exports.AccountMoveService=class AccountMoveService{constructor(env,services){this.setup(env,services);}
setup(env,services){this.env=env;this.action=services.action;this.dialog=services.dialog;this.orm=services.orm;}
async addDeletionDialog(component,moveIds){const isMoveEndOfChain=await this.orm.call("account.move","check_move_sequence_chain",[moveIds]);if(!isMoveEndOfChain){const message=_t("This operation will create a gap in the sequence.");const confirmationDialogProps=component.deleteConfirmationDialogProps;confirmationDialogProps.body=markup(`<div class="text-danger">${escape(message)}</div>${escape(confirmationDialogProps.body)}`);this.dialog.add(ConfirmationDialog,confirmationDialogProps);return true;}
return false;}
async downloadPdf(accountMoveId){const downloadAction=await this.orm.call("account.move","action_invoice_download_pdf",[accountMoveId]);await this.action.doAction(downloadAction);}}
const accountMoveService=__exports.accountMoveService={dependencies:["action","dialog","orm"],start(env,services){return new AccountMoveService(env,services);},};registry.category("services").add("account_move",accountMoveService);return __exports;});;

/* /mail/static/src/core/common/sound_effects_service.js */
odoo.define('@mail/core/common/sound_effects_service',['@web/core/browser/browser','@web/core/registry','@web/core/utils/urls'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const{url}=require("@web/core/utils/urls");const SoundEffects=__exports.SoundEffects=class SoundEffects{constructor(env){this.soundEffects={"channel-join":{defaultVolume:0.3,path:"/mail/static/src/audio/channel_01_in"},"channel-leave":{path:"/mail/static/src/audio/channel_04_out"},deafen:{defaultVolume:0.15,path:"/mail/static/src/audio/deafen_new_01"},"incoming-call":{defaultVolume:0.15,path:"/mail/static/src/audio/call_02_in_"},"member-leave":{defaultVolume:0.5,path:"/mail/static/src/audio/channel_01_out"},mute:{defaultVolume:0.2,path:"/mail/static/src/audio/mute_1"},"new-message":{path:"/mail/static/src/audio/dm_02"},"push-to-talk-on":{defaultVolume:0.02,path:"/mail/static/src/audio/ptt_push_1"},"push-to-talk-off":{defaultVolume:0.02,path:"/mail/static/src/audio/ptt_release_1",},"screen-sharing":{defaultVolume:0.5,path:"/mail/static/src/audio/share_02"},undeafen:{defaultVolume:0.15,path:"/mail/static/src/audio/undeafen_new_01"},unmute:{defaultVolume:0.2,path:"/mail/static/src/audio/unmute_1"},};}
play(soundEffectName,{loop=false,volume}={}){if(typeof browser.Audio==="undefined"){return;}
const soundEffect=this.soundEffects[soundEffectName];if(!soundEffect){return;}
if(!soundEffect.audio){const audio=new browser.Audio();const ext=audio.canPlayType("audio/ogg; codecs=vorbis")?".ogg":".mp3";audio.src=url(soundEffect.path+ext);soundEffect.audio=audio;}
if(!soundEffect.audio.paused){soundEffect.audio.pause();}
soundEffect.audio.currentTime=0;soundEffect.audio.loop=loop;soundEffect.audio.volume=volume??soundEffect.defaultVolume??1;Promise.resolve(soundEffect.audio.play()).catch(()=>{});}
stop(soundEffectName){const soundEffect=this.soundEffects[soundEffectName];if(soundEffect){if(soundEffect.audio){soundEffect.audio.pause();soundEffect.audio.currentTime=0;}}else{for(const soundEffect of Object.values(this.soundEffects)){if(soundEffect.audio){soundEffect.audio.pause();soundEffect.audio.currentTime=0;}}}}}
const soundEffects=__exports.soundEffects={start(env){return new SoundEffects(env);},};registry.category("services").add("mail.sound_effects",soundEffects);return __exports;});;

/* /web/static/src/core/browser/router.js */
odoo.define('@web/core/browser/router',['@odoo/owl','@web/core/utils/objects','@web/core/utils/urls','@web/core/browser/browser','@web/core/browser/feature_detection','@web/core/utils/arrays','@web/core/utils/strings'],function(require){'use strict';let __exports={};const{EventBus}=require("@odoo/owl");const{omit,pick}=require("@web/core/utils/objects");const{compareUrls,objectToUrlEncodedString}=require("@web/core/utils/urls");const{browser}=require("@web/core/browser/browser");const{isDisplayStandalone}=require("@web/core/browser/feature_detection");const{slidingWindow}=require("@web/core/utils/arrays");const{isNumeric}=require("@web/core/utils/strings");const PATH_KEYS=__exports.PATH_KEYS=["resId","action","active_id","model"];const routerBus=__exports.routerBus=new EventBus();function isScopedApp(){return browser.location.href.includes("/scoped_app")&&isDisplayStandalone();}
function cast(value){return!value||isNaN(value)?value:Number(value);}
function parseString(str){const parts=str.split("&");const result={};for(const part of parts){const[key,value]=part.split("=");const decoded=decodeURIComponent(value||"");result[key]=cast(decoded);}
return result;}
function computeNextState(values,replace){const nextState=replace?pick(state,..._lockedKeys):{...state};Object.assign(nextState,values);if(nextState.actionStack?.length){Object.assign(nextState.actionStack.at(-1),pick(nextState,...PATH_KEYS));}
return sanitizeSearch(nextState);}
function sanitize(obj,valueToRemove){return Object.fromEntries(Object.entries(obj).filter(([,v])=>v!==valueToRemove).map(([k,v])=>[k,cast(v)]));}
function sanitizeSearch(search){return sanitize(search);}
function sanitizeHash(hash){return sanitize(hash,"");}
__exports.parseHash=parseHash;function parseHash(hash){return hash&&hash!=="#"?parseString(hash.slice(1)):{};}
__exports.parseSearchQuery=parseSearchQuery;function parseSearchQuery(search){return search?parseString(search.slice(1)):{};}
function pathFromActionState(state){const path=[];const{action,model,active_id,resId}=state;if(active_id&&typeof active_id==="number"){path.push(active_id);}
if(action){if(typeof action==="number"||action.includes(".")){path.push(`action-${action}`);}else{path.push(action);}}else if(model){if(model.includes(".")){path.push(model);}else{path.push(`m-${model}`);}}
if(resId&&(typeof resId==="number"||resId==="new")){path.push(resId);}
return path.join("/");}
__exports.stateToUrl=stateToUrl;function stateToUrl(state){let path="";const pathKeysToOmit=[..._hiddenKeysFromUrl];const actionStack=(state.actionStack||[state]).map((a)=>({...a}));if(actionStack.at(-1)?.action!=="menu"){for(const[prevAct,currentAct]of slidingWindow(actionStack,2).reverse()){const{action:prevAction,resId:prevResId,active_id:prevActiveId}=prevAct;const{action:currentAction,active_id:currentActiveId}=currentAct;if(currentActiveId===prevResId){delete currentAct.active_id;}
if(prevAction===currentAction&&!prevResId&&currentActiveId===prevActiveId){delete currentAct.action;delete currentAct.active_id;}}
const pathSegments=actionStack.map(pathFromActionState).filter(Boolean);if(pathSegments.length){path=`/${pathSegments.join("/")}`;}}
if(state.active_id&&typeof state.active_id!=="number"){pathKeysToOmit.splice(pathKeysToOmit.indexOf("active_id"),1);}
if(state.resId&&typeof state.resId!=="number"&&state.resId!=="new"){pathKeysToOmit.splice(pathKeysToOmit.indexOf("resId"),1);}
const search=objectToUrlEncodedString(omit(state,...pathKeysToOmit));const start_url=isScopedApp()?"scoped_app":"odoo";return`/${start_url}${path}${search ? `?${search}` : ""}`;}
__exports.urlToState=urlToState;function urlToState(urlObj){const{pathname,hash,search}=urlObj;const state=parseSearchQuery(search);if(pathname==="/web"){const sanitizedHash=sanitizeHash(parseHash(hash));if(sanitizedHash.id){sanitizedHash.resId=sanitizedHash.id;delete sanitizedHash.id;delete sanitizedHash.view_type;}else if(sanitizedHash.view_type==="form"){sanitizedHash.resId="new";delete sanitizedHash.view_type;}
Object.assign(state,sanitizedHash);const url=browser.location.origin+router.stateToUrl(state);urlObj.href=url;}
const[prefix,...splitPath]=urlObj.pathname.split("/").filter(Boolean);if(prefix==="odoo"||isScopedApp()){const actionParts=[...splitPath.entries()].filter(([_,part])=>!isNumeric(part)&&part!=="new");const actions=[];for(const[i,part]of actionParts){const action={};const[left,right]=[splitPath[i-1],splitPath[i+1]];if(isNumeric(left)){action.active_id=parseInt(left);}
if(right==="new"){action.resId="new";}else if(isNumeric(right)){action.resId=parseInt(right);}
if(part.startsWith("action-")){const actionId=part.slice(7);action.action=isNumeric(actionId)?parseInt(actionId):actionId;}else if(part.startsWith("m-")){action.model=part.slice(2);}else if(part.includes(".")){action.model=part;}else{action.action=part;}
if(action.resId&&action.action){actions.push(omit(action,"resId"));}
if(action.action||action.resId||i===splitPath.length-1){actions.push(action);}}
const activeAction=actions.at(-1);if(activeAction){Object.assign(state,activeAction);state.actionStack=actions;}}
return state;}
let state;let pushTimeout;let pushArgs;let _lockedKeys;let _hiddenKeysFromUrl=new Set();__exports.startRouter=startRouter;function startRouter(){const url=new URL(browser.location);state=router.urlToState(url);if(browser.location.pathname==="/web"){browser.history.replaceState(browser.history.state,null,url.href);}
pushTimeout=null;pushArgs={replace:false,reload:false,state:{},};_lockedKeys=new Set(["debug","lang"]);_hiddenKeysFromUrl=new Set([...PATH_KEYS,"actionStack"]);}
browser.addEventListener("popstate",(ev)=>{browser.clearTimeout(pushTimeout);if(!ev.state){browser.history.replaceState({nextState:state},"",browser.location.href);return;}
state=ev.state?.nextState||router.urlToState(new URL(browser.location));if(!ev.state?.skipRouteChange&&!router.skipLoad){routerBus.trigger("ROUTE_CHANGE");}
router.skipLoad=false;});browser.addEventListener("pageshow",(ev)=>{if(ev.persisted){browser.clearTimeout(pushTimeout);routerBus.trigger("ROUTE_CHANGE");}});browser.addEventListener("click",(ev)=>{if(ev.defaultPrevented||ev.target.closest("[contenteditable]")){return;}
const href=ev.target.closest("a")?.getAttribute("href");if(href&&!href.startsWith("#")){let url;try{url=new URL(ev.target.closest("a").href);}catch{return;}
if(browser.location.host===url.host&&browser.location.pathname.startsWith("/odoo")&&(["/web","/odoo"].includes(url.pathname)||url.pathname.startsWith("/odoo/"))&&ev.target.target!=="_blank"){ev.preventDefault();state=router.urlToState(url);if(url.pathname.startsWith("/odoo")&&url.hash){browser.history.pushState({},"",url.href);}
new Promise((res)=>setTimeout(res,0)).then(()=>routerBus.trigger("ROUTE_CHANGE"));}}});function makeDebouncedPush(mode){function doPush(){const nextState=computeNextState(pushArgs.state,pushArgs.replace);const url=browser.location.origin+router.stateToUrl(nextState);if(!compareUrls(url+browser.location.hash,browser.location.href)){if(mode==="push"){const originalTitle=document.title;document.title=pushArgs.title;browser.history.pushState({nextState},"",url);document.title=originalTitle;}else{browser.history.replaceState({nextState},"",url);}}else{browser.history.replaceState({nextState},"",browser.location.href);}
state=nextState;if(pushArgs.reload){browser.location.reload();}}
return function pushOrReplaceState(state,options={}){pushArgs.replace||=options.replace;pushArgs.reload||=options.reload;pushArgs.title=document.title;Object.assign(pushArgs.state,state);browser.clearTimeout(pushTimeout);const push=()=>{doPush();pushTimeout=null;pushArgs={replace:false,reload:false,state:{},};};if(options.sync){push();}else{pushTimeout=browser.setTimeout(()=>{push();});}};}
const router=__exports.router={get current(){return state;},stateToUrl,urlToState,pushState:makeDebouncedPush("push"),replaceState:makeDebouncedPush("replace"),cancelPushes:()=>browser.clearTimeout(pushTimeout),addLockedKey:(key)=>_lockedKeys.add(key),hideKeyFromUrl:(key)=>_hiddenKeysFromUrl.add(key),skipLoad:false,};startRouter();__exports.objectToQuery=objectToQuery;function objectToQuery(obj){const query={};Object.entries(obj).forEach(([k,v])=>{query[k]=v?String(v):v;});return query;}
return __exports;});;

/* /web/static/src/core/debug/debug_context.js */
odoo.define('@web/core/debug/debug_context',['@web/core/user','@web/core/registry','@odoo/owl'],function(require){'use strict';let __exports={};const{user}=require("@web/core/user");const{registry}=require("@web/core/registry");const{useEffect,useEnv,useSubEnv}=require("@odoo/owl");const debugRegistry=registry.category("debug");const getAccessRights=async()=>{const rightsToCheck={"ir.ui.view":"write","ir.rule":"read","ir.model.access":"read",};const proms=Object.entries(rightsToCheck).map(([model,operation])=>{return user.checkAccessRight(model,operation);});const[canEditView,canSeeRecordRules,canSeeModelAccess]=await Promise.all(proms);const accessRights={canEditView,canSeeRecordRules,canSeeModelAccess};return accessRights;};class DebugContext{constructor(defaultCategories){this.categories=new Map(defaultCategories.map((cat)=>[cat,[{}]]));}
activateCategory(category,context){const contexts=this.categories.get(category)||new Set();contexts.add(context);this.categories.set(category,contexts);return()=>{contexts.delete(context);if(contexts.size===0){this.categories.delete(category);}};}
async getItems(env){const accessRights=await getAccessRights();return[...this.categories.entries()].flatMap(([category,contexts])=>{return debugRegistry.category(category).getAll().map((factory)=>factory(Object.assign({env,accessRights},...contexts)));}).filter(Boolean).sort((x,y)=>{const xSeq=x.sequence||1000;const ySeq=y.sequence||1000;return xSeq-ySeq;});}}
const debugContextSymbol=Symbol("debugContext");__exports.createDebugContext=createDebugContext;function createDebugContext({categories=[]}={}){return{[debugContextSymbol]:new DebugContext(categories)};}
__exports.useOwnDebugContext=useOwnDebugContext;function useOwnDebugContext({categories=[]}={}){useSubEnv(createDebugContext({categories}));}
__exports.useEnvDebugContext=useEnvDebugContext;function useEnvDebugContext(){const debugContext=useEnv()[debugContextSymbol];if(!debugContext){throw new Error("There is no debug context available in the current environment.");}
return debugContext;}
__exports.useDebugCategory=useDebugCategory;function useDebugCategory(category,context={}){const env=useEnv();if(env.debug){const debugContext=useEnvDebugContext();useEffect(()=>debugContext.activateCategory(category,context),()=>[]);}}
return __exports;});;

/* /web/static/src/core/debug/debug_menu.js */
odoo.define('@web/core/debug/debug_menu',['@web/core/l10n/translation','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/core/debug/debug_menu_basic','@web/core/commands/command_hook','@web/core/utils/hooks','@web/core/debug/debug_context'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{DebugMenuBasic}=require("@web/core/debug/debug_menu_basic");const{useCommand}=require("@web/core/commands/command_hook");const{useService}=require("@web/core/utils/hooks");const{useEnvDebugContext}=require("@web/core/debug/debug_context");const DebugMenu=__exports.DebugMenu=class DebugMenu extends DebugMenuBasic{static components={Dropdown,DropdownItem};static props={};setup(){super.setup();const debugContext=useEnvDebugContext();this.command=useService("command");useCommand(_t("Debug tools..."),async()=>{const items=await debugContext.getItems(this.env);let index=0;const defaultCategories=items.filter((item)=>item.type==="separator").map(()=>(index+=1));const provider={async provide(){const categories=[...defaultCategories];let category=categories.shift();const result=[];items.forEach((item)=>{if(item.type==="item"){result.push({name:item.description.toString(),action:item.callback,category,});}else if(item.type==="separator"){category=categories.shift();}});return result;},};const configByNamespace={default:{categories:defaultCategories,emptyMessage:_t("No debug command found"),placeholder:_t("Choose a debug command..."),},};const commandPaletteConfig={configByNamespace,providers:[provider],};return commandPaletteConfig;},{category:"debug",});}}
return __exports;});;

/* /web/static/src/core/debug/debug_menu_basic.js */
odoo.define('@web/core/debug/debug_menu_basic',['@web/core/debug/debug_context','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/core/l10n/translation','@web/core/utils/arrays','@odoo/owl','@web/core/registry'],function(require){'use strict';let __exports={};const{useEnvDebugContext}=require("@web/core/debug/debug_context");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{_t}=require("@web/core/l10n/translation");const{groupBy,sortBy}=require("@web/core/utils/arrays");const{Component}=require("@odoo/owl");const{registry}=require("@web/core/registry");const debugSectionRegistry=registry.category("debug_section");debugSectionRegistry.add("record",{label:_t("Record"),sequence:10}).add("records",{label:_t("Records"),sequence:10}).add("ui",{label:_t("User Interface"),sequence:20}).add("security",{label:_t("Security"),sequence:30}).add("testing",{label:_t("Testing"),sequence:40}).add("tools",{label:_t("Tools"),sequence:50});const DebugMenuBasic=__exports.DebugMenuBasic=class DebugMenuBasic extends Component{static template="web.DebugMenu";static components={Dropdown,DropdownItem,};static props={};setup(){this.debugContext=useEnvDebugContext();}
async loadGroupedItems(){const items=await this.debugContext.getItems(this.env);const sections=groupBy(items,(item)=>item.section||"");this.sectionEntries=sortBy(Object.entries(sections),([section])=>debugSectionRegistry.get(section,{sequence:50}).sequence);}
getSectionLabel(section){return debugSectionRegistry.get(section,{label:section}).label;}}
return __exports;});;

/* /web/static/src/core/debug/debug_menu_items.js */
odoo.define('@web/core/debug/debug_menu_items',['@web/core/l10n/translation','@web/core/browser/browser','@web/core/browser/router','@web/core/registry','@web/core/user'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{browser}=require("@web/core/browser/browser");const{router}=require("@web/core/browser/router");const{registry}=require("@web/core/registry");const{user}=require("@web/core/user");function activateTestsAssetsDebugging({env}){if(String(router.current.debug).includes("tests")){return;}
return{type:"item",description:_t("Activate Test Mode"),callback:()=>{router.pushState({debug:"assets,tests"},{reload:true});},sequence:580,section:"tools",};}
__exports.regenerateAssets=regenerateAssets;function regenerateAssets({env}){return{type:"item",description:_t("Regenerate Assets"),callback:async()=>{await env.services.orm.call("ir.attachment","regenerate_assets_bundles");browser.location.reload();},sequence:550,section:"tools",};}
__exports.becomeSuperuser=becomeSuperuser;function becomeSuperuser({env}){const becomeSuperuserURL=browser.location.origin+"/web/become";if(!user.isAdmin){return false;}
return{type:"item",description:_t("Become Superuser"),href:becomeSuperuserURL,callback:()=>{browser.open(becomeSuperuserURL,"_self");},sequence:560,section:"tools",};}
function leaveDebugMode(){return{type:"item",description:_t("Leave Debug Mode"),callback:()=>{router.pushState({debug:0},{reload:true});},sequence:650,};}
registry.category("debug").category("default").add("regenerateAssets",regenerateAssets).add("becomeSuperuser",becomeSuperuser).add("activateTestsAssetsDebugging",activateTestsAssetsDebugging).add("leaveDebugMode",leaveDebugMode);return __exports;});;

/* /web/static/src/core/debug/debug_providers.js */
odoo.define('@web/core/debug/debug_providers',['@web/core/l10n/translation','@web/core/registry','@web/core/browser/browser','@web/core/browser/router'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{browser}=require("@web/core/browser/browser");const{router}=require("@web/core/browser/router");const commandProviderRegistry=registry.category("command_provider");commandProviderRegistry.add("debug",{provide:(env,options)=>{const result=[];if(env.debug){if(!env.debug.includes("assets")){result.push({action(){router.pushState({debug:"assets"},{reload:true});},category:"debug",name:_t("Activate debug mode (with assets)"),});}
result.push({action(){router.pushState({debug:0},{reload:true});},category:"debug",name:_t("Deactivate debug mode"),});result.push({action(){browser.open("/web/tests?debug=assets");},category:"debug",name:_t("Run Unit Tests"),});}else{const debugKey="debug";if(options.searchValue.toLowerCase()===debugKey){result.push({action(){router.pushState({debug:"1"},{reload:true});},category:"debug",name:`${_t("Activate debug mode")} (${debugKey})`,});result.push({action(){router.pushState({debug:"assets"},{reload:true});},category:"debug",name:`${_t("Activate debug mode (with assets)")} (${debugKey})`,});}}
return result;},});return __exports;});;

/* /web/static/src/core/debug/debug_utils.js */
odoo.define('@web/core/debug/debug_utils',[],function(require){'use strict';let __exports={};__exports.editModelDebug=editModelDebug;function editModelDebug(env,title,model,id){return env.services.action.doAction({res_model:model,res_id:id,name:title,type:"ir.actions.act_window",views:[[false,"form"]],view_mode:"form",target:"current",});}
return __exports;});;

/* /web/static/src/model/model.js */
odoo.define('@web/model/model',['@web/core/user','@web/core/utils/hooks','@web/search/action_hook','@web/search/with_search/with_search','@web/model/sample_server','@odoo/owl'],function(require){'use strict';let __exports={};const{user}=require("@web/core/user");const{useBus,useService}=require("@web/core/utils/hooks");const{useSetupAction}=require("@web/search/action_hook");const{SEARCH_KEYS}=require("@web/search/with_search/with_search");const{buildSampleORM}=require("@web/model/sample_server");const{EventBus,onWillStart,onWillUpdateProps,status,useComponent}=require("@odoo/owl");const Model=__exports.Model=class Model{constructor(env,params,services){this.env=env;this.orm=services.orm;this.bus=new EventBus();this.setup(params,services);}
setup(){}
async load(){}
hasData(){return true;}
getGroups(){return null;}
notify(){this.bus.trigger("update");}}
Model.services=[];function getSearchParams(props){const params={};for(const key of SEARCH_KEYS){params[key]=props[key];}
return params;}
__exports.useModel=useModel;function useModel(ModelClass,params,options={}){const component=useComponent();const services={};for(const key of ModelClass.services){services[key]=useService(key);}
services.orm=services.orm||useService("orm");const model=new ModelClass(component.env,params,services);onWillStart(async()=>{await options.beforeFirstLoad?.();return model.load(component.props);});onWillUpdateProps((nextProps)=>model.load(nextProps));return model;}
__exports.useModelWithSampleData=useModelWithSampleData;function useModelWithSampleData(ModelClass,params,options={}){const component=useComponent();if(!(ModelClass.prototype instanceof Model)){throw new Error(`the model class should extend Model`);}
const services={};for(const key of ModelClass.services){services[key]=useService(key);}
services.orm=services.orm||useService("orm");if(!("isAlive"in params)){params.isAlive=()=>status(component)!=="destroyed";}
const model=new ModelClass(component.env,params,services);useBus(model.bus,"update",options.onUpdate||(()=>{component.render(true);}));const globalState=component.props.globalState||{};const localState=component.props.state||{};let useSampleModel=component.props.useSampleModel&&(!("useSampleModel"in globalState)||globalState.useSampleModel);model.useSampleModel=useSampleModel;const orm=model.orm;let sampleORM=localState.sampleORM;let started=false;async function load(props){const searchParams=getSearchParams(props);await model.load(searchParams);if(useSampleModel&&!model.hasData()){sampleORM=sampleORM||buildSampleORM(component.props.resModel,component.props.fields,user);model.orm=sampleORM;await model.load(searchParams);model.orm=orm;}else{useSampleModel=false;model.useSampleModel=useSampleModel;}
if(started){model.notify();}}
onWillStart(async()=>{if(options.onWillStart){await options.onWillStart();}
await load(component.props);if(options.onWillStartAfterLoad){await options.onWillStartAfterLoad();}
started=true;});onWillUpdateProps((nextProps)=>{useSampleModel=false;load(nextProps);});useSetupAction({getGlobalState(){if(component.props.useSampleModel){return{useSampleModel};}},getLocalState:()=>{return{sampleORM};},});return model;}
__exports._makeFieldFromPropertyDefinition=_makeFieldFromPropertyDefinition;function _makeFieldFromPropertyDefinition(name,definition,relatedPropertyField){return{...definition,name,propertyName:definition.name,relation:definition.comodel,relatedPropertyField,};}
__exports.addPropertyFieldDefs=addPropertyFieldDefs;async function addPropertyFieldDefs(orm,resModel,context,fields,groupBy){const proms=[];for(const gb of groupBy){if(gb in fields){continue;}
const[fieldName]=gb.split(".");const field=fields[fieldName];if(field?.type==="properties"){proms.push(orm.call(resModel,"get_property_definition",[gb],{context,}).then((definition)=>{fields[gb]=_makeFieldFromPropertyDefinition(gb,definition,field);}).catch(()=>{fields[gb]=_makeFieldFromPropertyDefinition(gb,{},field);}));}}
return Promise.all(proms);}
return __exports;});;

/* /web/static/src/model/record.js */
odoo.define('@web/model/record',['@web/core/utils/hooks','@web/core/utils/objects','@web/model/relational_model/relational_model','@web/model/relational_model/utils','@odoo/owl'],function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{pick}=require("@web/core/utils/objects");const{RelationalModel}=require("@web/model/relational_model/relational_model");const{getFieldsSpec}=require("@web/model/relational_model/utils");const{Component,xml,onWillStart,onWillUpdateProps,useState}=require("@odoo/owl");const defaultActiveField={attrs:{},options:{},domain:"[]",string:""};class StandaloneRelationalModel extends RelationalModel{load(params={}){if(params.values){const data=params.values;const config=this._getNextConfig(this.config,params);this.root=this._createRoot(config,data);this.config=config;return;}
return super.load(params);}}
class _Record extends Component{static template=xml`<t t-slot="default" record="model.root"/>`;static props=["slots","info","fields","values?"];setup(){this.orm=useService("orm");const resModel=this.props.info.resModel;const activeFields=this.getActiveFields();const modelParams={config:{resModel,fields:this.props.fields,isMonoRecord:true,activeFields,resId:this.props.info.resId,mode:this.props.info.mode,},hooks:{onRecordSaved:this.props.info.onRecordSaved||(()=>{}),onWillSaveRecord:this.props.info.onWillSaveRecord||(()=>{}),onRecordChanged:this.props.info.onRecordChanged||(()=>{}),},};const modelServices=Object.fromEntries(StandaloneRelationalModel.services.map((servName)=>{return[servName,useService(servName)];}));modelServices.orm=this.orm;this.model=useState(new StandaloneRelationalModel(this.env,modelParams,modelServices));const prepareLoadWithValues=async(values)=>{values=pick(values,...Object.keys(modelParams.config.activeFields));const proms=[];for(const fieldName in values){if(["one2many","many2many"].includes(this.props.fields[fieldName].type)){if(values[fieldName].length&&typeof values[fieldName][0]==="number"){const resModel=this.props.fields[fieldName].relation;const resIds=values[fieldName];const activeField=modelParams.config.activeFields[fieldName];if(activeField.related){const{activeFields,fields}=activeField.related;const fieldSpec=getFieldsSpec(activeFields,fields,{});const kwargs={context:activeField.context||{},specification:fieldSpec,};proms.push(this.orm.webRead(resModel,resIds,kwargs).then((records)=>{values[fieldName]=records;}));}}}
if(this.props.fields[fieldName].type==="many2one"){const loadDisplayName=async(resId)=>{const resModel=this.props.fields[fieldName].relation;const activeField=modelParams.config.activeFields[fieldName];const kwargs={context:activeField.context||{},specification:{display_name:{}},};const records=await this.orm.webRead(resModel,[resId],kwargs);return records[0].display_name;};if(typeof values[fieldName]==="number"){const prom=loadDisplayName(values[fieldName]);prom.then((displayName)=>{values[fieldName]={id:values[fieldName],display_name:displayName,};});proms.push(prom);}else if(Array.isArray(values[fieldName])){if(values[fieldName][1]===undefined){const prom=loadDisplayName(values[fieldName][0]);prom.then((displayName)=>{values[fieldName]={id:values[fieldName][0],display_name:displayName,};});proms.push(prom);}
values[fieldName]={id:values[fieldName][0],display_name:values[fieldName][1],};}}
await Promise.all(proms);}
return values;};onWillStart(async()=>{if(this.props.values){const values=await prepareLoadWithValues(this.props.values);return this.model.load({values});}else{return this.model.load();}});onWillUpdateProps(async(nextProps)=>{const params={};if(nextProps.info.resId!==this.model.root.resId){params.resId=nextProps.info.resId;}
if(nextProps.values){params.values=await prepareLoadWithValues(nextProps.values);}
if(Object.keys(params).length){return this.model.load(params);}});}
getActiveFields(){if(this.props.info.activeFields){const activeFields={};for(const[fName,fInfo]of Object.entries(this.props.info.activeFields)){activeFields[fName]={...defaultActiveField,...fInfo};}
return activeFields;}
return Object.fromEntries(this.props.info.fieldNames.map((f)=>[f,{...defaultActiveField}]));}}
const Record=__exports.Record=class Record extends Component{static template=xml`<_Record fields="fields" slots="props.slots" values="props.values" info="props" />`;static components={_Record};static props=["slots","resModel?","fieldNames?","activeFields?","fields?","resId?","mode?","values?","onRecordChanged?","onRecordSaved?","onWillSaveRecord?",];setup(){if(this.props.fields){this.fields=this.props.fields;}else{const orm=useService("orm");onWillStart(async()=>{this.fields=await orm.call(this.props.resModel,"fields_get",[this.props.fieldNames],{});});}}}
return __exports;});;

/* /web/static/src/model/relational_model/datapoint.js */
odoo.define('@web/model/relational_model/datapoint',['@odoo/owl','@web/core/domain','@web/core/utils/reactive','@web/model/relational_model/utils'],function(require){'use strict';let __exports={};const{markRaw}=require("@odoo/owl");const{evalDomain}=require("@web/core/domain");const{Reactive}=require("@web/core/utils/reactive");const{getId}=require("@web/model/relational_model/utils");const DataPoint=__exports.DataPoint=class DataPoint extends Reactive{constructor(model,config,data,options){super(...arguments);this.id=getId("datapoint");this.model=model;markRaw(config.activeFields);markRaw(config.fields);this._config=config;this.setup(config,data,options);}
setup(){}
get activeFields(){return this.config.activeFields;}
get fields(){return this.config.fields;}
get fieldNames(){return Object.keys(this.activeFields).filter((fieldName)=>!this.fields[fieldName].relatedPropertyField);}
get resModel(){return this.config.resModel;}
get config(){return this._config;}
get context(){return this.config.context;}
get currentCompanyId(){return this.config.currentCompanyId;}
isFieldReadonly(fieldName){const activeField=this.activeFields[fieldName];const{readonly}=activeField||this.fields[fieldName];return readonly&&evalDomain(readonly,this.evalContext);}}
return __exports;});;

/* /web/static/src/model/relational_model/dynamic_group_list.js */
odoo.define('@web/model/relational_model/dynamic_group_list',['@web/core/domain','@web/model/relational_model/dynamic_list','@web/model/relational_model/utils'],function(require){'use strict';let __exports={};const{Domain}=require("@web/core/domain");const{DynamicList}=require("@web/model/relational_model/dynamic_list");const{getGroupServerValue}=require("@web/model/relational_model/utils");const DynamicGroupList=__exports.DynamicGroupList=class DynamicGroupList extends DynamicList{static type="DynamicGroupList";setup(config,data){super.setup(...arguments);this.isGrouped=true;this._nbRecordsMatchingDomain=null;this._setData(data);}
_setData(data){this.groups=data.groups.map((g)=>this._createGroupDatapoint(g));this.count=data.length;this._selectDomain(this.isDomainSelected);}
get groupBy(){return this.config.groupBy;}
get groupByField(){return this.fields[this.groupBy[0].split(":")[0]];}
get hasData(){return this.groups.some((group)=>group.hasData);}
get isRecordCountTrustable(){return this.count<=this.limit||this._nbRecordsMatchingDomain!==null;}
get records(){return this.groups.filter((group)=>!group.isFolded).map((group)=>group.records).flat();}
get recordCount(){if(this._nbRecordsMatchingDomain!==null){return this._nbRecordsMatchingDomain;}
return this.groups.reduce((acc,group)=>acc+group.count,0);}
async createGroup(groupName,foldField){if(!this.groupByField||this.groupByField.type!=="many2one"){throw new Error("Cannot create a group on a non many2one group field");}
await this.model.mutex.exec(()=>this._createGroup(groupName,foldField));}
async deleteGroups(groups){await this.model.mutex.exec(()=>this._deleteGroups(groups));}
async moveRecord(dataRecordId,dataGroupId,refId,targetGroupId){const targetGroup=this.groups.find((g)=>g.id===targetGroupId);if(dataGroupId===targetGroupId){await targetGroup.list._resequence(targetGroup.list.records,this.resModel,dataRecordId,refId);return;}
const sourceGroup=this.groups.find((g)=>g.id===dataGroupId);const recordIndex=sourceGroup.list.records.findIndex((r)=>r.id===dataRecordId);const record=sourceGroup.list.records[recordIndex];const refIndex=targetGroup.list.records.findIndex((r)=>r.id===refId);const oldIndex=sourceGroup.list.records.findIndex((r)=>r.id===dataRecordId);const sourceList=sourceGroup.list;const mustReloadSourceList=sourceList.count>sourceList.offset+sourceList.limit;sourceGroup._removeRecords([record.id]);targetGroup._addRecord(record,refIndex+1);const value=targetGroup.groupByField.type==="many2one"?[targetGroup.value,targetGroup.displayName]:targetGroup.value;const revert=()=>{targetGroup._removeRecords([record.id]);sourceGroup._addRecord(record,oldIndex);};try{const changes={[targetGroup.groupByField.name]:value};const res=await record.update(changes,{save:true});if(!res){return revert();}}catch(e){revert();throw e;}
const proms=[];if(mustReloadSourceList){const{offset,limit,orderBy,domain}=sourceGroup.list;proms.push(sourceGroup.list._load(offset,limit,orderBy,domain));}
if(!targetGroup.isFolded){const targetList=targetGroup.list;const records=targetList.records;proms.push(targetList._resequence(records,this.resModel,dataRecordId,refId));}
return Promise.all(proms);}
async resequence(movedGroupId,targetGroupId){if(!this.groupByField||this.groupByField.type!=="many2one"){throw new Error("Cannot resequence a group on a non many2one group field");}
return this.model.mutex.exec(async()=>{await this._resequence(this.groups,this.groupByField.relation,movedGroupId,targetGroupId);});}
async selectDomain(value){return this.model.mutex.exec(async()=>{await this._ensureCorrectRecordCount();this._selectDomain(value);});}
async sortBy(fieldName){if(!this.groups.length){return;}
if(this.groups.every((group)=>group.isFolded)){if(this.groupByField.name!==fieldName){if(!(fieldName in this.groups[0].aggregates)){return;}}}
return super.sortBy(fieldName);}
async _createGroup(groupName,foldField=false){const[id]=await this.model.orm.call(this.groupByField.relation,"name_create",[groupName],{context:this.context});if(foldField){await this.model.orm.write(this.groupByField.relation,[id],{[foldField]:true},{context:this.context});}
const lastGroup=this.groups.at(-1);const commonConfig={resModel:this.config.resModel,fields:this.config.fields,activeFields:this.config.activeFields,};const context={...this.context,[`default_${this.groupByField.name}`]:id,};const nextConfigGroups={...this.config.groups};const domain=Domain.and([this.domain,[[this.groupByField.name,"=",id]]]).toList();nextConfigGroups[id]={...commonConfig,context,groupByFieldName:this.groupByField.name,isFolded:Boolean(foldField),initialDomain:domain,list:{...commonConfig,context,domain:domain,groupBy:[],orderBy:this.orderBy,},};this.model._updateConfig(this.config,{groups:nextConfigGroups},{reload:false});const data={count:0,length:0,records:[],__domain:domain,[this.groupByField.name]:[id,groupName],value:id,serverValue:getGroupServerValue(this.groupByField,id),displayName:groupName,rawValue:[id,groupName],};const group=this._createGroupDatapoint(data);if(lastGroup){const groups=[...this.groups,group];await this._resequence(groups,this.groupByField.relation,group.id,lastGroup.id);this.groups=groups;}else{this.groups.push(group);}}
_createGroupDatapoint(data){return new this.model.constructor.Group(this.model,this.config.groups[data.value],data);}
async _deleteGroups(groups){const shouldReload=groups.some((g)=>g.count>0);await this._unlinkGroups(groups);const configGroups={...this.config.groups};for(const group of groups){delete configGroups[group.value];}
if(shouldReload){await this.model._updateConfig(this.config,{groups:configGroups},{commit:this._setData.bind(this)});}else{for(const group of groups){this._removeGroup(group);}
this.model._updateConfig(this.config,{groups:configGroups},{reload:false});}}
async _ensureCorrectRecordCount(){if(!this.isRecordCountTrustable){this._nbRecordsMatchingDomain=await this.model.orm.searchCount(this.resModel,this.domain,{limit:this.model.initialCountLimit});}}
_getDPresId(group){return group.value;}
_getDPFieldValue(group,handleField){return group[handleField];}
async _load(offset,limit,orderBy,domain){await this.model._updateConfig(this.config,{offset,limit,orderBy,domain},{commit:this._setData.bind(this)});if(this.isDomainSelected){await this._ensureCorrectRecordCount();}}
_removeGroup(group){const index=this.groups.findIndex((g)=>g.id===group.id);this.groups.splice(index,1);this.count--;}
_removeRecords(recordIds){const proms=[];for(const group of this.groups){proms.push(group._removeRecords(recordIds));}
return Promise.all(proms);}
_selectDomain(value){for(const group of this.groups){group.list._selectDomain(value);}
super._selectDomain(value);}
async _toggleSelection(){if(!this.records.length){if(!this.isDomainSelected){await this._ensureCorrectRecordCount();this._selectDomain(true);}else{this._selectDomain(false);}}else{super._toggleSelection();}}
_unlinkGroups(groups){const groupResIds=groups.map((g)=>g.value);return this.model.orm.unlink(this.groupByField.relation,groupResIds,{context:this.context,});}}
return __exports;});;

/* /web/static/src/model/relational_model/dynamic_list.js */
odoo.define('@web/model/relational_model/dynamic_list',['@web/core/confirmation_dialog/confirmation_dialog','@web/core/l10n/translation','@web/model/relational_model/datapoint','@web/model/relational_model/record','@web/model/relational_model/utils'],function(require){'use strict';let __exports={};const{AlertDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{_t}=require("@web/core/l10n/translation");const{DataPoint}=require("@web/model/relational_model/datapoint");const{Record}=require("@web/model/relational_model/record");const{resequence}=require("@web/model/relational_model/utils");const DEFAULT_HANDLE_FIELD="sequence";const DynamicList=__exports.DynamicList=class DynamicList extends DataPoint{setup(config){super.setup(...arguments);this.handleField=Object.keys(this.activeFields).find((fieldName)=>this.activeFields[fieldName].isHandle);if(!this.handleField&&DEFAULT_HANDLE_FIELD in this.fields){this.handleField=DEFAULT_HANDLE_FIELD;}
this.isDomainSelected=false;this.evalContext=this.context;}
get groupBy(){return[];}
get orderBy(){return this.config.orderBy;}
get domain(){return this.config.domain;}
get editedRecord(){return this.records.find((record)=>record.isInEdition);}
get isRecordCountTrustable(){return true;}
get limit(){return this.config.limit;}
get offset(){return this.config.offset;}
get selection(){return this.records.filter((record)=>record.selected);}
archive(isSelected){return this.model.mutex.exec(()=>this._toggleArchive(isSelected,true));}
canResequence(){return!!this.handleField;}
deleteRecords(records=[]){return this.model.mutex.exec(()=>this._deleteRecords(records));}
duplicateRecords(records=[]){return this.model.mutex.exec(()=>this._duplicateRecords(records));}
async enterEditMode(record){if(this.editedRecord===record){return true;}
const canProceed=await this.leaveEditMode();if(canProceed){this.model._updateConfig(record.config,{mode:"edit"},{reload:false});}
return canProceed;}
async getResIds(isSelected){let resIds;if(isSelected){if(this.isDomainSelected){resIds=await this.model.orm.search(this.resModel,this.domain,{limit:this.model.activeIdsLimit,context:this.context,});}else{resIds=this.selection.map((r)=>r.resId);}}else{resIds=this.records.map((r)=>r.resId);}
return resIds;}
async leaveEditMode({discard}={}){let editedRecord=this.editedRecord;if(editedRecord){let canProceed=true;if(discard){this._recordToDiscard=editedRecord;await editedRecord.discard();this._recordToDiscard=null;editedRecord=this.editedRecord;if(editedRecord&&editedRecord.isNew){this._removeRecords([editedRecord.id]);}}else{if(!this.model._urgentSave){await editedRecord.checkValidity();editedRecord=this.editedRecord;if(!editedRecord){return true;}}
if(editedRecord.isNew&&!editedRecord.dirty){this._removeRecords([editedRecord.id]);}else{canProceed=await editedRecord.save();}}
editedRecord=this.editedRecord;if(canProceed&&editedRecord){this.model._updateConfig(editedRecord.config,{mode:"readonly"},{reload:false});}else{return canProceed;}}
return true;}
load(params={}){const limit=params.limit===undefined?this.limit:params.limit;const offset=params.offset===undefined?this.offset:params.offset;const orderBy=params.orderBy===undefined?this.orderBy:params.orderBy;const domain=params.domain===undefined?this.domain:params.domain;return this.model.mutex.exec(()=>this._load(offset,limit,orderBy,domain));}
async multiSave(record){return this.model.mutex.exec(()=>this._multiSave(record));}
selectDomain(value){return this.model.mutex.exec(()=>this._selectDomain(value));}
sortBy(fieldName){return this.model.mutex.exec(()=>{let orderBy=[...this.orderBy];if(orderBy.length&&orderBy[0].name===fieldName){orderBy[0]={name:orderBy[0].name,asc:!orderBy[0].asc};}else{orderBy=orderBy.filter((o)=>o.name!==fieldName);orderBy.unshift({name:fieldName,asc:true,});}
return this._load(this.offset,this.limit,orderBy,this.domain);});}
toggleSelection(){return this.model.mutex.exec(()=>this._toggleSelection());}
unarchive(isSelected){return this.model.mutex.exec(()=>this._toggleArchive(isSelected,false));}
async _duplicateRecords(records){let resIds;if(records.length){resIds=records.map((r)=>r.resId);}else{resIds=await this.getResIds(true);}
const duplicated=await this.model.orm.call(this.resModel,"copy",[resIds],{context:this.context,});if(resIds.length>duplicated.length){this.model.notification.add(_t("Some records could not be duplicated"),{title:_t("Warning"),});}
return this.model.load();}
async _deleteRecords(records){let resIds;if(records.length){resIds=records.map((r)=>r.resId);}else{resIds=await this.getResIds(true);records=this.records.filter((r)=>resIds.includes(r.resId));}
const unlinked=await this.model.orm.unlink(this.resModel,resIds,{context:this.context,});if(!unlinked){return false;}
if(this.isDomainSelected&&resIds.length===this.model.activeIdsLimit&&resIds.length<this.count){const msg=_t("Only the first %(count)s records have been deleted (out of %(total)s selected)",{count:resIds.length,total:this.count});this.model.notification.add(msg,{title:_t("Warning")});}
await this.model.load();return unlinked;}
async _leaveSampleMode(){if(this.model.useSampleModel){await this._load(this.offset,this.limit,this.orderBy,this.domain);this.model.useSampleModel=false;}}
async _multiSave(record){const changes=record._getChanges();if(!Object.keys(changes).length||record===this._recordToDiscard){return;}
const validSelection=this.selection.filter((record)=>{return Object.keys(changes).every((fieldName)=>{if(record._isReadonly(fieldName)){return false;}else if(record._isRequired(fieldName)&&!changes[fieldName]){return false;}
return true;});});const canProceed=await this.model.hooks.onWillSaveMulti(record,changes,validSelection);if(canProceed===false){return false;}
if(validSelection.length===0){this.model.dialog.add(AlertDialog,{body:_t("No valid record to save"),confirm:()=>this.leaveEditMode({discard:true}),dismiss:()=>this.leaveEditMode({discard:true}),});return false;}else{const resIds=validSelection.map((r)=>r.resId);const context=this.context;try{await this.model.orm.write(this.resModel,resIds,changes,{context});}catch(e){record._discard();this.model._updateConfig(record.config,{mode:"readonly"},{reload:false});throw e;}
const records=await this.model._loadRecords({...this.config,resIds});for(const record of validSelection){const serverValues=records.find((r)=>r.id===record.resId);record._applyValues(serverValues);this.model._updateSimilarRecords(record,serverValues);}
record._discard();this.model._updateConfig(record.config,{mode:"readonly"},{reload:false});}
this.model.hooks.onSavedMulti(validSelection);return true;}
async _resequence(originalList,resModel,movedId,targetId){if(this.resModel===resModel&&!this.canResequence()){return;}
const handleField=this.resModel===resModel?this.handleField:DEFAULT_HANDLE_FIELD;const order=this.orderBy.find((o)=>o.name===handleField);const getSequence=(dp)=>dp&&this._getDPFieldValue(dp,handleField);const getResId=(dp)=>this._getDPresId(dp);const resequencedRecords=await resequence({records:originalList,resModel,movedId,targetId,fieldName:handleField,asc:order?.asc,context:this.context,orm:this.model.orm,getSequence,getResId,});if(resequencedRecords){for(const dpData of resequencedRecords){const dp=originalList.find((d)=>getResId(d)===dpData.id);if(dp instanceof Record){dp._applyValues(dpData);}else{dp[handleField]=dpData[handleField];}}}}
_selectDomain(value){this.isDomainSelected=value;}
async _toggleArchive(isSelected,state){const method=state?"action_archive":"action_unarchive";const context=this.context;const resIds=await this.getResIds(isSelected);const action=await this.model.orm.call(this.resModel,method,[resIds],{context});if(this.isDomainSelected&&resIds.length===this.model.activeIdsLimit&&resIds.length<this.count){const msg=_t("Of the %(selectedRecord)s selected records, only the first %(firstRecords)s have been archived/unarchived.",{selectedRecords:resIds.length,firstRecords:this.count,});this.model.notification.add(msg,{title:_t("Warning")});}
const reload=()=>this.model.load();if(action&&Object.keys(action).length){this.model.action.doAction(action,{onClose:reload,});}else{return reload();}}
async _toggleSelection(){if(this.selection.length===this.records.length){this.records.forEach((record)=>{record._toggleSelection(false);});this._selectDomain(false);}else{this.records.forEach((record)=>{record._toggleSelection(true);});}}}
return __exports;});;

/* /web/static/src/model/relational_model/dynamic_record_list.js */
odoo.define('@web/model/relational_model/dynamic_record_list',['@web/model/relational_model/dynamic_list'],function(require){'use strict';let __exports={};const{DynamicList}=require("@web/model/relational_model/dynamic_list");const DynamicRecordList=__exports.DynamicRecordList=class DynamicRecordList extends DynamicList{static type="DynamicRecordList";setup(config,data){super.setup(config);this._setData(data);}
_setData(data){this.records=data.records.map((r)=>this._createRecordDatapoint(r));this._updateCount(data);this._selectDomain(this.isDomainSelected);}
get hasData(){return this.count>0;}
addExistingRecord(resId,atFirstPosition){return this.model.mutex.exec(async()=>{const record=this._createRecordDatapoint({});await record._load({resId});this._addRecord(record,atFirstPosition?0:this.records.length);return record;});}
addNewRecord(atFirstPosition=false){return this.model.mutex.exec(async()=>{await this._leaveSampleMode();return this._addNewRecord(atFirstPosition);});}
async fetchCount(){this.count=await this.model._updateCount(this.config);this.hasLimitedCount=false;return this.count;}
moveRecord(dataRecordId,_dataGroupId,refId,_targetGroupId){return this.resequence(dataRecordId,refId);}
removeRecord(record){if(!record.isNew){throw new Error("removeRecord can't be called on an existing record");}
const index=this.records.findIndex((r)=>r===record);if(index<0){return;}
this.records.splice(index,1);this.count--;return record;}
async resequence(movedRecordId,targetRecordId){return this.model.mutex.exec(async()=>await this._resequence(this.records,this.resModel,movedRecordId,targetRecordId));}
async _addNewRecord(atFirstPosition){const values=await this.model._loadNewRecord({resModel:this.resModel,activeFields:this.activeFields,fields:this.fields,context:this.context,});const record=this._createRecordDatapoint(values,"edit");this._addRecord(record,atFirstPosition?0:this.records.length);return record;}
_addRecord(record,index){this.records.splice(Number.isInteger(index)?index:this.records.length,0,record);this.count++;}
_createRecordDatapoint(data,mode="readonly"){return new this.model.constructor.Record(this.model,{context:this.context,activeFields:this.activeFields,resModel:this.resModel,fields:this.fields,resId:data.id||false,resIds:data.id?[data.id]:[],isMonoRecord:true,currentCompanyId:this.currentCompanyId,mode,},data,{manuallyAdded:!data.id});}
_getDPresId(record){return record.resId;}
_getDPFieldValue(record,handleField){return record.data[handleField];}
async _load(offset,limit,orderBy,domain){await this.model._updateConfig(this.config,{offset,limit,orderBy,domain},{commit:this._setData.bind(this)});}
_removeRecords(recordIds){const keptRecords=this.records.filter((r)=>!recordIds.includes(r.id));this.count-=this.records.length-keptRecords.length;this.records=keptRecords;if(this.offset&&!this.records.length){const offset=Math.max(this.offset-this.limit,0);this.model._updateConfig(this.config,{offset},{reload:false});}}
_selectDomain(value){if(value){this.records.forEach((r)=>(r.selected=true));}
super._selectDomain(value);}
_updateCount(data){const length=data.length;if(length>=this.config.countLimit+1){this.hasLimitedCount=true;this.count=this.config.countLimit;}else{this.hasLimitedCount=false;this.count=length;}}}
return __exports;});;

/* /web/static/src/model/relational_model/errors.js */
odoo.define('@web/model/relational_model/errors',['@web/core/registry','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{_t}=require("@web/core/l10n/translation");const FetchRecordError=__exports.FetchRecordError=class FetchRecordError extends Error{constructor(resIds){super(_t("It seems the records with IDs %s cannot be found. They might have been deleted.",resIds));this.resIds=resIds;}}
function fetchRecordErrorHandler(env,error,originalError){if(originalError instanceof FetchRecordError){env.services.notification.add(originalError.message,{sticky:true,type:"danger"});return true;}}
const errorHandlerRegistry=registry.category("error_handlers");errorHandlerRegistry.add("fetchRecordErrorHandler",fetchRecordErrorHandler);return __exports;});;

/* /web/static/src/model/relational_model/group.js */
odoo.define('@web/model/relational_model/group',['@web/core/domain','@web/model/relational_model/datapoint'],function(require){'use strict';let __exports={};const{Domain}=require("@web/core/domain");const{DataPoint}=require("@web/model/relational_model/datapoint");const Group=__exports.Group=class Group extends DataPoint{static type="Group";setup(config,data){super.setup(...arguments);this.groupByField=this.fields[config.groupByFieldName];this.range=data.range;this._rawValue=data.rawValue;this.count=data.count;this.value=data.value;this.serverValue=data.serverValue;this.displayName=data.displayName;this.aggregates=data.aggregates;let List;if(config.list.groupBy.length){List=this.model.constructor.DynamicGroupList;}else{List=this.model.constructor.DynamicRecordList;}
this.list=new List(this.model,config.list,data);this._useGroupCountForList();if(config.record){config.record.context={...config.record.context,...config.context};this.record=new this.model.constructor.Record(this.model,config.record,data.values);}}
get groupDomain(){return this.config.initialDomain;}
get hasData(){return this.count>0;}
get isFolded(){return this.config.isFolded;}
get records(){return this.list.records;}
async addExistingRecord(resId,atFirstPosition=false){const record=await this.list.addExistingRecord(resId,atFirstPosition);this.count++;return record;}
async addNewRecord(_unused,atFirstPosition=false){const canProceed=await this.model.root.leaveEditMode();if(canProceed){const record=await this.list.addNewRecord(atFirstPosition);if(record){this.count++;}}}
async applyFilter(filter){if(filter){await this.list.load({domain:Domain.and([this.groupDomain,filter]).toList(),});}else{await this.list.load({domain:this.groupDomain});this.count=this.list.isGrouped?this.list.recordCount:this.list.count;}
this.model._updateConfig(this.config,{extraDomain:filter},{reload:false});}
deleteRecords(records){return this.model.mutex.exec(()=>this._deleteRecords(records));}
async toggle(){if(this.config.isFolded){await this.list.load();}
this._useGroupCountForList();this.model._updateConfig(this.config,{isFolded:!this.config.isFolded},{reload:false});}
_addRecord(record,index){this.list._addRecord(record,index);this.count++;}
async _deleteRecords(records){await this.list._deleteRecords(records);this.count-=records.length;}
_useGroupCountForList(){if(!this.list.isGrouped&&this.list.count===this.list.config.countLimit){this.list.count=this.count;}}
async _removeRecords(recordIds){const idsToRemove=recordIds.filter((id)=>this.list.records.some((r)=>r.id===id));this.list._removeRecords(idsToRemove);this.count-=idsToRemove.length;}}
return __exports;});;

/* /web/static/src/model/relational_model/record.js */
odoo.define('@web/model/relational_model/record',['@odoo/owl','@web/core/confirmation_dialog/confirmation_dialog','@web/core/l10n/dates','@web/core/l10n/translation','@web/core/orm_service','@web/core/py_js/py','@web/core/utils/strings','@web/model/relational_model/datapoint','@web/model/relational_model/utils','@web/model/relational_model/errors'],function(require){'use strict';let __exports={};const{markRaw,markup,toRaw}=require("@odoo/owl");const{AlertDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{serializeDate,serializeDateTime}=require("@web/core/l10n/dates");const{_t}=require("@web/core/l10n/translation");const{x2ManyCommands}=require("@web/core/orm_service");const{evaluateBooleanExpr}=require("@web/core/py_js/py");const{escape}=require("@web/core/utils/strings");const{DataPoint}=require("@web/model/relational_model/datapoint");const{createPropertyActiveField,getBasicEvalContext,getFieldContext,getFieldsSpec,parseServerValue,}=require("@web/model/relational_model/utils");const{FetchRecordError}=require("@web/model/relational_model/errors");const Record=__exports.Record=class Record extends DataPoint{static type="Record";setup(config,data,options={}){this._manuallyAdded=options.manuallyAdded===true;this._onUpdate=options.onUpdate||(()=>{});this._parentRecord=options.parentRecord;this.canSaveOnUpdate=!options.parentRecord;this._virtualId=options.virtualId||false;this._isEvalContextReady=false;this.dirty=false;this.selected=false;this._invalidFields=new Set();this._unsetRequiredFields=markRaw(new Set());this._closeInvalidFieldsNotification=()=>{};const parentRecord=this._parentRecord;if(parentRecord){this.evalContext={get parent(){return parentRecord.evalContext;},};this.evalContextWithVirtualIds={get parent(){return parentRecord.evalContextWithVirtualIds;},};}else{this.evalContext={};this.evalContextWithVirtualIds={};}
const missingFields=this.fieldNames.filter((fieldName)=>!(fieldName in data));data={...this._getDefaultValues(missingFields),...data};this._textValues=markRaw({});this._setData(data);}
_setData(data){this._isEvalContextReady=false;if(this.resId){this._values=this._parseServerValues(data);this._changes=markRaw({});Object.assign(this._textValues,this._getTextValues(data));}else{this._values=markRaw({});const allVals={...this._getDefaultValues(),...data};this._initialChanges=markRaw(this._parseServerValues(allVals));this._changes=markRaw({...this._initialChanges});Object.assign(this._textValues,this._getTextValues(allVals));}
this.dirty=false;this.data={...this._values,...this._changes};this._setEvalContext();this._initialTextValues={...this._textValues};this._invalidFields.clear();this._savePoint=undefined;}
get canBeAbandoned(){return this.isNew&&!this.dirty&&this._manuallyAdded;}
get hasData(){return true;}
get isActive(){if("active"in this.activeFields){return this.data.active;}else if("x_active"in this.activeFields){return this.data.x_active;}
return true;}
get isInEdition(){if(this.config.mode==="readonly"){return false;}else{return this.config.mode==="edit"||!this.resId;}}
get isNew(){return!this.resId;}
get isValid(){return!this._invalidFields.size;}
get resId(){return this.config.resId;}
get resIds(){return this.config.resIds;}
archive(){return this.model.mutex.exec(()=>this._toggleArchive(true));}
async checkValidity({displayNotification}={}){if(!this._urgentSave){await this.model._askChanges();}
return this._checkValidity({displayNotification});}
delete(){return this.model.mutex.exec(async()=>{const unlinked=await this.model.orm.unlink(this.resModel,[this.resId],{context:this.context,});if(!unlinked){return false;}
const resIds=this.resIds.slice();const index=resIds.indexOf(this.resId);resIds.splice(index,1);const resId=resIds[Math.min(index,resIds.length-1)]||false;if(resId){await this.model.load({resId,resIds});}else{this.model._updateConfig(this.config,{resId:false},{reload:false});this.dirty=false;this._changes=markRaw(this._parseServerValues(this._getDefaultValues()));this._values=markRaw({});this._textValues=markRaw({});this.data={...this._changes};this._setEvalContext();}});}
async discard(){if(this.model._closeUrgentSaveNotification){this.model._closeUrgentSaveNotification();}
await this.model._askChanges();return this.model.mutex.exec(()=>this._discard());}
duplicate(){return this.model.mutex.exec(async()=>{const kwargs={context:this.context};const index=this.resIds.indexOf(this.resId);const[resId]=await this.model.orm.call(this.resModel,"copy",[[this.resId]],kwargs);const resIds=this.resIds.slice();resIds.splice(index+1,0,resId);await this.model.load({resId,resIds,mode:"edit"});});}
async isDirty(){await this.model._askChanges();return this.dirty;}
isFieldInvalid(fieldName){return this._invalidFields.has(fieldName);}
load(){if(arguments.length>0){throw new Error("Record.load() does not accept arguments");}
return this.model.mutex.exec(()=>this._load());}
async save(options){await this.model._askChanges();return this.model.mutex.exec(()=>this._save(options));}
async setInvalidField(fieldName){this.dirty=true;return this._setInvalidField(fieldName);}
async resetFieldValidity(fieldName){this.dirty=true;return this._resetFieldValidity(fieldName);}
switchMode(mode){return this.model.mutex.exec(()=>this._switchMode(mode));}
toggleSelection(selected){return this.model.mutex.exec(()=>{this._toggleSelection(selected);});}
unarchive(){return this.model.mutex.exec(()=>this._toggleArchive(false));}
update(changes,{save}={}){if(this.model._urgentSave){return this._update(changes);}
return this.model.mutex.exec(async()=>{await this._update(changes,{withoutOnchange:save});if(save&&this.canSaveOnUpdate){return this._save();}});}
async urgentSave(){this.model._urgentSave=true;this.model.bus.trigger("WILL_SAVE_URGENTLY");const succeeded=await this._save({reload:false});this.model._urgentSave=false;return succeeded;}
_addSavePoint(){this._savePoint=markRaw({dirty:this.dirty,textValues:{...this._textValues},changes:{...this._changes},});for(const fieldName in this._changes){if(["one2many","many2many"].includes(this.fields[fieldName].type)){this._changes[fieldName]._addSavePoint();}}}
_applyChanges(changes,serverChanges={}){const initialTextValues={...this._textValues};const initialChanges={...this._changes};const initialData={...toRaw(this.data)};const invalidFields=[...toRaw(this._invalidFields)];const undoChanges=()=>{for(const fieldName of invalidFields){this.setInvalidField(fieldName);}
Object.assign(this.data,initialData);this._changes=markRaw(initialChanges);Object.assign(this._textValues,initialTextValues);this._setEvalContext();};for(const fieldName in changes){const change=changes[fieldName];this._changes[fieldName]=change;this.data[fieldName]=change;if(this.fields[fieldName].type==="html"){this._textValues[fieldName]=change===false?false:change.toString();}else if(["char","text"].includes(this.fields[fieldName].type)){this._textValues[fieldName]=change;}}
const parsedChanges=this._parseServerValues(serverChanges,this.data);for(const fieldName in parsedChanges){this._changes[fieldName]=parsedChanges[fieldName];this.data[fieldName]=parsedChanges[fieldName];}
Object.assign(this._textValues,this._getTextValues(serverChanges));this._setEvalContext();this._removeInvalidFields(Object.keys({...changes,...serverChanges}));this._checkValidity({removeInvalidOnly:true});return undoChanges;}
_applyDefaultValues(){const fieldNames=this.fieldNames.filter((fieldName)=>{return!(fieldName in this.data);});const defaultValues=this._getDefaultValues(fieldNames);if(this.isNew){this._applyChanges({},defaultValues);}else{this._applyValues(defaultValues);}}
_applyValues(values){const newValues=this._parseServerValues(values);Object.assign(this._values,newValues);for(const fieldName in newValues){if(fieldName in this._changes){if(["one2many","many2many"].includes(this.fields[fieldName].type)){this._changes[fieldName]=newValues[fieldName];}}}
Object.assign(this.data,this._values,this._changes);const textValues=this._getTextValues(values);Object.assign(this._initialTextValues,textValues);Object.assign(this._textValues,textValues,this._getTextValues(this._changes));this._setEvalContext();}
_checkValidity({silent,displayNotification,removeInvalidOnly}={}){const unsetRequiredFields=new Set();for(const fieldName in this.activeFields){const fieldType=this.fields[fieldName].type;if(this._isInvisible(fieldName)||this.fields[fieldName].relatedPropertyField){continue;}
switch(fieldType){case"boolean":case"float":case"integer":case"monetary":continue;case"html":if(this._isRequired(fieldName)&&this.data[fieldName].length===0){unsetRequiredFields.add(fieldName);}
break;case"one2many":case"many2many":{const list=this.data[fieldName];if((this._isRequired(fieldName)&&!list.count)||!list.records.every((r)=>!r.dirty||r._checkValidity({silent,removeInvalidOnly}))){unsetRequiredFields.add(fieldName);}
break;}
case"properties":{const value=this.data[fieldName];if(value){const ok=value.every((propertyDefinition)=>propertyDefinition.name&&propertyDefinition.name.length&&propertyDefinition.string&&propertyDefinition.string.length);if(!ok){unsetRequiredFields.add(fieldName);}}
break;}
case"json":{if(this._isRequired(fieldName)&&(!this.data[fieldName]||!Object.keys(this.data[fieldName]).length)){unsetRequiredFields.add(fieldName);}
break;}
default:if(!this.data[fieldName]&&this._isRequired(fieldName)){unsetRequiredFields.add(fieldName);}}}
if(silent){return!unsetRequiredFields.size;}
if(removeInvalidOnly){for(const fieldName of Array.from(this._unsetRequiredFields)){if(!unsetRequiredFields.has(fieldName)){this._unsetRequiredFields.delete(fieldName);this._invalidFields.delete(fieldName);}}}else{for(const fieldName of Array.from(this._unsetRequiredFields)){this._invalidFields.delete(fieldName);}
this._unsetRequiredFields.clear();for(const fieldName of unsetRequiredFields){this._unsetRequiredFields.add(fieldName);this._setInvalidField(fieldName);}}
const isValid=!this._invalidFields.size;if(!isValid&&displayNotification){const items=[...this._invalidFields].map((fieldName)=>{return`<li>${escape(this.fields[fieldName].string || fieldName)}</li>`;},this);this._closeInvalidFieldsNotification=this.model.notification.add(markup(`<ul>${items.join("")}</ul>`),{title:_t("Invalid fields: "),type:"danger",});}
return isValid;}
async _completeMany2OneValue(value,fieldName,resModel){const resId=value[0];const displayName=value[1];if(!resId&&!displayName){return false;}
const context=getFieldContext(this,fieldName);if(!resId&&displayName!==undefined){return this.model.orm.call(resModel,"name_create",[displayName],{context});}
if(resId&&displayName===undefined){const kwargs={context,specification:{display_name:{}},};const records=await this.model.orm.webRead(resModel,[resId],kwargs);return[resId,records[0].display_name];}
return value;}
_computeDataContext(){const dataContext={};const x2manyDataContext={withVirtualIds:{},withoutVirtualIds:{},};const data=toRaw(this.data);for(const fieldName in data){const value=data[fieldName];const field=this.fields[fieldName];if(field.relatedPropertyField){continue;}
if(["char","text","html"].includes(field.type)){dataContext[fieldName]=this._textValues[fieldName];}else if(field.type==="one2many"||field.type==="many2many"){x2manyDataContext.withVirtualIds[fieldName]=value.currentIds;x2manyDataContext.withoutVirtualIds[fieldName]=value.currentIds.filter((id)=>typeof id==="number");}else if(value&&field.type==="date"){dataContext[fieldName]=serializeDate(value);}else if(value&&field.type==="datetime"){dataContext[fieldName]=serializeDateTime(value);}else if(value&&field.type==="many2one"){dataContext[fieldName]=value[0];}else if(value&&field.type==="reference"){dataContext[fieldName]=`${value.resModel},${value.resId}`;}else if(field.type==="properties"){dataContext[fieldName]=value.filter((property)=>!property.definition_deleted!==false);}else{dataContext[fieldName]=value;}}
dataContext.id=this.resId||false;return{withVirtualIds:{...dataContext,...x2manyDataContext.withVirtualIds},withoutVirtualIds:{...dataContext,...x2manyDataContext.withoutVirtualIds},};}
_createStaticListDatapoint(data,fieldName){const{related,limit,defaultOrderBy}=this.activeFields[fieldName];const config={resModel:this.fields[fieldName].relation,activeFields:(related&&related.activeFields)||{},fields:(related&&related.fields)||{},relationField:this.fields[fieldName].relation_field||false,offset:0,resIds:data.map((r)=>r.id),orderBy:defaultOrderBy||[],limit:limit||Number.MAX_SAFE_INTEGER,currentCompanyId:this.currentCompanyId,context:{},};const options={onUpdate:({withoutOnchange}={})=>this._update({[fieldName]:[]},{withoutOnchange}),parent:this,};return new this.model.constructor.StaticList(this.model,config,data,options);}
_discard(){for(const fieldName in this._changes){if(["one2many","many2many"].includes(this.fields[fieldName].type)){this._changes[fieldName]._discard();}}
if(this._savePoint){this.dirty=this._savePoint.dirty;this._changes=markRaw({...this._savePoint.changes});this._textValues=markRaw({...this._savePoint.textValues});}else{this.dirty=false;this._changes=markRaw(this.isNew?{...this._initialChanges}:{});this._textValues=markRaw({...this._initialTextValues});}
this.data={...this._values,...this._changes};this._savePoint=undefined;this._setEvalContext();this._invalidFields.clear();this._closeInvalidFieldsNotification();this._closeInvalidFieldsNotification=()=>{};this._restoreActiveFields();}
_formatServerValue(fieldType,value){if(fieldType==="date"){return value?serializeDate(value):false;}else if(fieldType==="datetime"){return value?serializeDateTime(value):false;}else if(fieldType==="char"||fieldType==="text"){return value!==""?value:false;}else if(fieldType==="html"){return value&&value.length?value:false;}else if(fieldType==="many2one"){return value?value[0]:false;}else if(fieldType==="many2one_reference"){return value?value.resId:0;}else if(fieldType==="reference"){return value&&value.resModel&&value.resId?`${value.resModel},${value.resId}`:false;}else if(fieldType==="properties"){return value.map((property)=>{let value;if(property.type==="many2one"){value=property.value;}else if((property.type==="date"||property.type==="datetime")&&typeof property.value==="string"){value=property.value;}else{value=this._formatServerValue(property.type,property.value);}
return{...property,value,};});}
return value;}
_getChanges(changes=this._changes,{withReadonly}={}){const result={};for(const[fieldName,value]of Object.entries(changes)){const field=this.fields[fieldName];if(fieldName==="id"){continue;}
if(!withReadonly&&fieldName in this.activeFields&&this._isReadonly(fieldName)&&!this.activeFields[fieldName].forceSave){continue;}
if(field.relatedPropertyField){continue;}
if(field.type==="one2many"||field.type==="many2many"){const commands=value._getCommands({withReadonly});if(!this.isNew&&!commands.length&&!withReadonly){continue;}
result[fieldName]=commands;}else{result[fieldName]=this._formatServerValue(field.type,value);}}
return result;}
_getDefaultValues(fieldNames=this.fieldNames){const defaultValues={};for(const fieldName of fieldNames){switch(this.fields[fieldName].type){case"integer":case"float":case"monetary":defaultValues[fieldName]=fieldName==="id"?false:0;break;case"one2many":case"many2many":defaultValues[fieldName]=[];break;default:defaultValues[fieldName]=false;}}
return defaultValues;}
_getTextValues(values){const textValues={};for(const fieldName in values){if(!this.activeFields[fieldName]){continue;}
if(["char","text","html"].includes(this.fields[fieldName].type)){textValues[fieldName]=values[fieldName];}}
return textValues;}
_isInvisible(fieldName){const invisible=this.activeFields[fieldName].invisible;return invisible?evaluateBooleanExpr(invisible,this.evalContextWithVirtualIds):false;}
_isReadonly(fieldName){const readonly=this.activeFields[fieldName].readonly;return readonly?evaluateBooleanExpr(readonly,this.evalContextWithVirtualIds):false;}
_isRequired(fieldName){const required=this.activeFields[fieldName].required;return required?evaluateBooleanExpr(required,this.evalContextWithVirtualIds):false;}
async _load(nextConfig={}){if("resId"in nextConfig&&this.resId){throw new Error("Cannot change resId of a record");}
await this.model._updateConfig(this.config,nextConfig,{commit:(values)=>{if(this.resId){this.model._updateSimilarRecords(this,values);}
this._setData(values);},});}
_processProperties(properties,fieldName,parent,currentValues={}){const data={};const hasCurrentValues=Object.keys(currentValues).length>0;for(const property of properties){const propertyFieldName=`${fieldName}.${property.name}`;if(hasCurrentValues||!this.fields[propertyFieldName]){this.fields[propertyFieldName]={...property,name:propertyFieldName,relatedPropertyField:{name:fieldName,},propertyName:property.name,relation:property.comodel,};}
if(hasCurrentValues||!this.activeFields[propertyFieldName]){this.activeFields[propertyFieldName]=createPropertyActiveField(property);}
if(!this.activeFields[propertyFieldName].relatedPropertyField){this.activeFields[propertyFieldName].relatedPropertyField={name:fieldName,id:parent?.id,displayName:parent?.display_name,};}
if(property.type==="many2many"){let staticList=currentValues[propertyFieldName];if(!staticList){staticList=this._createStaticListDatapoint((property.value||[]).map((record)=>({id:record[0],display_name:record[1],})),propertyFieldName);}
data[propertyFieldName]=staticList;}else if(property.type==="many2one"){data[propertyFieldName]=property.value.length&&property.value[1]===null?[property.value[0],_t("No Access")]:property.value;}else{data[propertyFieldName]=property.value??false;}}
return data;}
_parseServerValues(serverValues,currentValues={}){const parsedValues={};if(!serverValues){return parsedValues;}
for(const fieldName in serverValues){const value=serverValues[fieldName];if(!this.activeFields[fieldName]){continue;}
const field=this.fields[fieldName];if(field.type==="one2many"||field.type==="many2many"){let staticList=currentValues[fieldName];let valueIsCommandList=true;valueIsCommandList=value.length>0&&Array.isArray(value[0]);if(!staticList){let data=valueIsCommandList?[]:value;if(data.length>0&&typeof data[0]==="number"){data=data.map((resId)=>{return{id:resId};});}
staticList=this._createStaticListDatapoint(data,fieldName);if(valueIsCommandList){staticList._applyInitialCommands(value);}}else if(valueIsCommandList){staticList._applyCommands(value);}
parsedValues[fieldName]=staticList;}else{parsedValues[fieldName]=parseServerValue(field,value);if(field.type==="properties"){const parent=serverValues[field.definition_record];Object.assign(parsedValues,this._processProperties(parsedValues[fieldName],fieldName,parent,currentValues));}}}
return parsedValues;}
async _preprocessMany2oneChanges(changes){const proms=Object.entries(changes).filter(([fieldName])=>this.fields[fieldName].type==="many2one").map(async([fieldName,value])=>{if(!value){changes[fieldName]=false;}else if(!this.activeFields[fieldName]){changes[fieldName]=value;}else{const relation=this.fields[fieldName].relation;return this._completeMany2OneValue(value,fieldName,relation).then((v)=>{changes[fieldName]=v;});}});return Promise.all(proms);}
async _preprocessMany2OneReferenceChanges(changes){const proms=Object.entries(changes).filter(([fieldName])=>this.fields[fieldName].type==="many2one_reference").map(async([fieldName,value])=>{if(!value){changes[fieldName]=false;}else if(typeof value==="number"){changes[fieldName]={resId:value};}else{const relation=this.data[this.fields[fieldName].model_field];return this._completeMany2OneValue([value.resId,value.displayName],fieldName,relation).then((v)=>{changes[fieldName]={resId:v[0],displayName:v[1]};});}});return Promise.all(proms);}
async _preprocessReferenceChanges(changes){const proms=Object.entries(changes).filter(([fieldName])=>this.fields[fieldName].type==="reference").map(async([fieldName,value])=>{if(!value){changes[fieldName]=false;}else{return this._completeMany2OneValue([value.resId,value.displayName],fieldName,value.resModel).then((v)=>{changes[fieldName]={resId:v[0],resModel:value.resModel,displayName:v[1],};});}});return Promise.all(proms);}
async _preprocessX2manyChanges(changes){for(const[fieldName,value]of Object.entries(changes)){if(this.fields[fieldName].type!=="one2many"&&this.fields[fieldName].type!=="many2many"){continue;}
const list=this.data[fieldName];for(const command of value){switch(command[0]){case x2ManyCommands.SET:await list._replaceWith(command[2]);break;default:await list._applyCommands([command]);}}
changes[fieldName]=list;}}
_preprocessPropertiesChanges(changes){for(const[fieldName,value]of Object.entries(changes)){const field=this.fields[fieldName];if(field.type==="properties"){const parent=changes[field.definition_record]||this.data[field.definition_record];Object.assign(changes,this._processProperties(value,fieldName,parent,this.data));}else if(field&&field.relatedPropertyField){const[propertyFieldName,propertyName]=field.name.split(".");const propertiesData=this.data[propertyFieldName]||[];if(!propertiesData.find((property)=>property.name===propertyName)){this.model.notification.add(_t("This record belongs to a different parent so you can not change this property."),{type:"warning"});return;}
changes[propertyFieldName]=propertiesData.map((property)=>property.name===propertyName?{...property,value}:property);}}}
_preprocessHtmlChanges(changes){for(const[fieldName,value]of Object.entries(changes)){if(this.fields[fieldName].type==="html"){changes[fieldName]=value===false?false:markup(value);}}}
_removeInvalidFields(fieldNames){for(const fieldName of fieldNames){this._invalidFields.delete(fieldName);}}
_restoreActiveFields(){if(!this._activeFieldsToRestore){return;}
this.model._updateConfig(this.config,{activeFields:{...this._activeFieldsToRestore},},{reload:false});this._activeFieldsToRestore=undefined;}
async _save({reload=true,onError,nextId}={}){if(this.model._closeUrgentSaveNotification){this.model._closeUrgentSaveNotification();}
const creation=!this.resId;if(nextId){if(creation){throw new Error("Cannot set nextId on a new record");}
reload=true;}
for(const fieldName in this.activeFields){const field=this.fields[fieldName];if(["one2many","many2many"].includes(field.type)&&!field.relatedPropertyField){this.data[fieldName]._abandonRecords();}}
if(!this._checkValidity({displayNotification:true})){return false;}
const changes=this._getChanges();delete changes.id;if(!creation&&!Object.keys(changes).length){return true;}
if(this.model._urgentSave&&this.model.useSendBeaconToSaveUrgently&&!this.model.env.inDialog){const route=`/web/dataset/call_kw/${this.resModel}/web_save`;const params={model:this.resModel,method:"web_save",args:[this.resId?[this.resId]:[],changes],kwargs:{context:this.context,specification:{}},};const data={jsonrpc:"2.0",method:"call",params};const blob=new Blob([JSON.stringify(data)],{type:"application/json"});const succeeded=navigator.sendBeacon(route,blob);if(succeeded){this._changes=markRaw({});this.dirty=false;}else{this.model._closeUrgentSaveNotification=this.model.notification.add(markup(_t(`Heads up! Your recent changes are too large to save automatically. Please click the <i class="fa fa-cloud-upload fa-fw"></i> button now to ensure your work is saved before you exit this tab.`)),{sticky:true});}
return succeeded;}
const canProceed=await this.model.hooks.onWillSaveRecord(this,changes);if(canProceed===false){return false;}
let fieldSpec={};if(reload){fieldSpec=getFieldsSpec(this.activeFields,this.fields,getBasicEvalContext(this.config));}
const kwargs={context:this.context,specification:fieldSpec,next_id:nextId,};let records=[];try{records=await this.model.orm.webSave(this.resModel,this.resId?[this.resId]:[],changes,kwargs);}catch(e){if(onError){return onError(e,{discard:()=>this._discard()});}
if(!this.isInEdition){await this._load({});}
throw e;}
if(reload&&!records.length){throw new FetchRecordError([nextId||this.resId]);}
if(creation){const resId=records[0].id;const resIds=this.resIds.concat([resId]);this.model._updateConfig(this.config,{resId,resIds},{reload:false});}
await this.model.hooks.onRecordSaved(this,changes);if(reload){if(this.resId){this.model._updateSimilarRecords(this,records[0]);}
if(nextId){this.model._updateConfig(this.config,{resId:nextId},{reload:false});}
if(this.config.isRoot){this.model.hooks.onWillLoadRoot(this.config);}
this._setData(records[0]);}else{this._values=markRaw({...this._values,...this._changes});if("id"in this.activeFields){this._values.id=records[0].id;}
for(const fieldName in this.activeFields){const field=this.fields[fieldName];if(["one2many","many2many"].includes(field.type)&&!field.relatedPropertyField){this._changes[fieldName]?._clearCommands();}}
this._changes=markRaw({});this.data={...this._values};this.dirty=false;}
return true;}
_setEvalContext(){const evalContext=getBasicEvalContext(this.config);const dataContext=this._computeDataContext();Object.assign(this.evalContext,evalContext,dataContext.withoutVirtualIds);Object.assign(this.evalContextWithVirtualIds,evalContext,dataContext.withVirtualIds);this._isEvalContextReady=true;if(!this._parentRecord||this._parentRecord._isEvalContextReady){for(const[fieldName,value]of Object.entries(toRaw(this.data))){if(["one2many","many2many"].includes(this.fields[fieldName].type)){value._updateContext(getFieldContext(this,fieldName));}}}}
async _setInvalidField(fieldName){const canProceed=this.model.hooks.onWillSetInvalidField(this,fieldName);if(canProceed===false){return;}
if(this.selected&&this.model.multiEdit&&this.model.root._recordToDiscard!==this&&!this._invalidFields.has(fieldName)){await this.model.dialog.add(AlertDialog,{body:_t("No valid record to save"),confirm:async()=>{await this.discard();this.switchMode("readonly");},});}
this._invalidFields.add(fieldName);}
_resetFieldValidity(fieldName){this._invalidFields.delete(fieldName);}
_switchMode(mode){this.model._updateConfig(this.config,{mode},{reload:false});if(mode==="readonly"){this._noUpdateParent=false;this._invalidFields.clear();}}
async _toggleArchive(state){const method=state?"action_archive":"action_unarchive";const action=await this.model.orm.call(this.resModel,method,[[this.resId]],{context:this.context,});if(action&&Object.keys(action).length){this.model.action.doAction(action,{onClose:()=>this._load()});}else{return this._load();}}
_toggleSelection(selected){if(typeof selected==="boolean"){this.selected=selected;}else{this.selected=!this.selected;}
if(!this.selected&&this.model.root.isDomainSelected){this.model.root._selectDomain(false);}}
async _getOnchangeValues(changes){const onChangeFields=Object.keys(changes).filter((fieldName)=>this.activeFields[fieldName]&&this.activeFields[fieldName].onChange);if(!onChangeFields.length){return{};}
const localChanges=this._getChanges({...this._changes,...changes},{withReadonly:true});if(this.config.relationField){const parentRecord=this._parentRecord;localChanges[this.config.relationField]=parentRecord._getChanges(parentRecord._changes,{withReadonly:true});if(!this._parentRecord.isNew){localChanges[this.config.relationField].id=this._parentRecord.resId;}}
return this.model._onchange(this.config,{changes:localChanges,fieldNames:onChangeFields,evalContext:toRaw(this.evalContext),onError:(e)=>{const undoChanges=this._applyChanges(changes);undoChanges();throw e;},});}
async _update(changes,{withoutOnchange,withoutParentUpdate}={}){this.dirty=true;const prom=Promise.all([this._preprocessMany2oneChanges(changes),this._preprocessMany2OneReferenceChanges(changes),this._preprocessReferenceChanges(changes),this._preprocessX2manyChanges(changes),this._preprocessPropertiesChanges(changes),this._preprocessHtmlChanges(changes),]);if(!this.model._urgentSave){await prom;}
if(this.selected&&this.model.multiEdit){this._applyChanges(changes);return this.model.root._multiSave(this);}
let onchangeServerValues={};if(!this.model._urgentSave&&!withoutOnchange){onchangeServerValues=await this._getOnchangeValues(changes);}
for(const fieldName in changes){if(this.fields[fieldName].type==="many2one"){const curVal=toRaw(this.data[fieldName]);const nextVal=changes[fieldName];if(curVal&&nextVal&&curVal[0]===nextVal[0]&&curVal[1]===nextVal[1]){delete changes[fieldName];}}}
const undoChanges=this._applyChanges(changes,onchangeServerValues);if(Object.keys(changes).length>0||Object.keys(onchangeServerValues).length>0){try{await this._onUpdate({withoutParentUpdate});}catch(e){undoChanges();throw e;}
await this.model.hooks.onRecordChanged(this,this._getChanges());}}}
return __exports;});;

/* /web/static/src/model/relational_model/relational_model.js */
odoo.define('@web/model/relational_model/relational_model',['@odoo/owl','@web/core/context','@web/core/domain','@web/core/errors/error_dialogs','@web/core/utils/arrays','@web/core/utils/concurrency','@web/search/utils/order_by','@web/model/model','@web/model/relational_model/dynamic_group_list','@web/model/relational_model/dynamic_record_list','@web/model/relational_model/group','@web/model/relational_model/record','@web/model/relational_model/static_list','@web/model/relational_model/utils','@web/model/relational_model/errors'],function(require){'use strict';let __exports={};const{EventBus,markRaw,toRaw}=require("@odoo/owl");const{makeContext}=require("@web/core/context");const{Domain}=require("@web/core/domain");const{WarningDialog}=require("@web/core/errors/error_dialogs");const{shallowEqual}=require("@web/core/utils/arrays");const{KeepLast,Mutex}=require("@web/core/utils/concurrency");const{orderByToString}=require("@web/search/utils/order_by");const{Model}=require("@web/model/model");const{DynamicGroupList}=require("@web/model/relational_model/dynamic_group_list");const{DynamicRecordList}=require("@web/model/relational_model/dynamic_record_list");const{Group}=require("@web/model/relational_model/group");const{Record}=require("@web/model/relational_model/record");const{StaticList}=require("@web/model/relational_model/static_list");const{extractInfoFromGroupData,getBasicEvalContext,getFieldsSpec,isRelational,makeActiveField,}=require("@web/model/relational_model/utils");const{FetchRecordError}=require("@web/model/relational_model/errors");const DEFAULT_HOOKS={onWillLoadRoot:()=>{},onRootLoaded:()=>{},onWillSaveRecord:()=>{},onRecordSaved:()=>{},onWillSaveMulti:()=>{},onSavedMulti:()=>{},onWillSetInvalidField:()=>{},onRecordChanged:()=>{},};const RelationalModel=__exports.RelationalModel=class RelationalModel extends Model{static services=["action","company","dialog","notification","orm"];static Record=Record;static Group=Group;static DynamicRecordList=DynamicRecordList;static DynamicGroupList=DynamicGroupList;static StaticList=StaticList;static DEFAULT_LIMIT=80;static DEFAULT_COUNT_LIMIT=10000;static DEFAULT_GROUP_LIMIT=80;static DEFAULT_OPEN_GROUP_LIMIT=10;static MAX_NUMBER_OPENED_GROUPS=10;setup(params,{action,company,dialog,notification}){this.action=action;this.dialog=dialog;this.notification=notification;this.bus=new EventBus();this.keepLast=markRaw(new KeepLast());this.mutex=markRaw(new Mutex());this.config={isMonoRecord:false,currentCompanyId:company.currentCompany.id,context:{},...params.config,isRoot:true,};this.hooks=Object.assign({},DEFAULT_HOOKS,params.hooks);this.initialLimit=params.limit||this.constructor.DEFAULT_LIMIT;this.initialGroupsLimit=params.groupsLimit;this.initialCountLimit=params.countLimit||this.constructor.DEFAULT_COUNT_LIMIT;this.defaultOrderBy=params.defaultOrderBy;this.defaultGroupBy=params.defaultGroupBy;this.maxGroupByDepth=params.maxGroupByDepth;this.groupByInfo=params.groupByInfo||{};this.multiEdit=params.multiEdit;this.activeIdsLimit=params.activeIdsLimit||Number.MAX_SAFE_INTEGER;this.specialDataCaches=markRaw(params.state?.specialDataCaches||{});this.useSendBeaconToSaveUrgently=params.useSendBeaconToSaveUrgently||false;this._urgentSave=false;}
exportState(){return{config:toRaw(this.config),specialDataCaches:this.specialDataCaches,};}
hasData(){return this.root.hasData;}
async load(params={}){const config=this._getNextConfig(this.config,params);this.hooks.onWillLoadRoot(config);const data=await this.keepLast.add(this._loadData(config));this.root=this._createRoot(config,data);this.config=config;return this.hooks.onRootLoaded();}
async _getPropertyDefinition(config,propertyFullName){const result=await this.orm.call(config.resModel,"get_property_definition",[propertyFullName],{context:config.context});if(!result){config.groupBy=null;}else{result.propertyName=result.name;result.name=propertyFullName;result.relatedPropertyField={fieldName:propertyFullName.split(".")[0]};result.relation=result.comodel;config.fields[propertyFullName]=result;}}
_askChanges(){const proms=[];this.bus.trigger("NEED_LOCAL_CHANGES",{proms});return Promise.all([...proms,this.mutex.getUnlockedDef()]);}
_createRoot(config,data){if(config.isMonoRecord){return new this.constructor.Record(this,config,data);}
if(config.groupBy.length){return new this.constructor.DynamicGroupList(this,config,data);}
return new this.constructor.DynamicRecordList(this,config,data);}
_getNextConfig(currentConfig,params){const currentGroupBy=currentConfig.groupBy;const config=Object.assign({},currentConfig);config.context="context"in params?params.context:config.context;if(currentConfig.isMonoRecord){config.resId="resId"in params?params.resId:config.resId;config.resIds="resIds"in params?params.resIds:config.resIds;if(!config.resIds){config.resIds=config.resId?[config.resId]:[];}
if(!config.resId&&config.mode!=="edit"){config.mode="edit";}}else{config.domain="domain"in params?params.domain:config.domain;config.comparison="comparison"in params?params.comparison:config.comparison;config.groupBy="groupBy"in params?params.groupBy:config.groupBy;if(this.defaultGroupBy&&!config.groupBy.length){config.groupBy=[this.defaultGroupBy];}
if(this.maxGroupByDepth){config.groupBy=config.groupBy.slice(0,this.maxGroupByDepth);}
config.orderBy="orderBy"in params?params.orderBy:config.orderBy;if(!config.orderBy.length){config.orderBy=currentConfig.orderBy||[];}
if(this.defaultOrderBy&&!config.orderBy.length){config.orderBy=this.defaultOrderBy;}
if(!shallowEqual(config.groupBy||[],currentGroupBy||[])){delete config.groups;}
if(!config.groupBy.length){config.orderBy=config.orderBy.filter((order)=>order.name!=="__count");}}
if(!config.isMonoRecord&&this.root&&params.domain){const resetOffset=(config)=>{config.offset=0;for(const group of Object.values(config.groups||{})){resetOffset(group.list);}};resetOffset(config);if(!!config.groupBy.length!==!!currentGroupBy.length){delete config.limit;}}
return config;}
async _loadData(config){if(config.isMonoRecord){const evalContext=getBasicEvalContext(config);if(!config.resId){return this._loadNewRecord(config,{evalContext});}
const records=await this._loadRecords({...config,resIds:[config.resId],},evalContext);return records[0];}
if(config.resIds){const resIds=config.resIds.slice(config.offset,config.offset+config.limit);return this._loadRecords({...config,resIds});}
if(config.groupBy.length){return this._loadGroupedList(config);}
Object.assign(config,{limit:config.limit||this.initialLimit,countLimit:"countLimit"in config?config.countLimit:this.initialCountLimit,offset:config.offset||0,});if(config.countLimit!==Number.MAX_SAFE_INTEGER){config.countLimit=Math.max(config.countLimit,config.offset+config.limit);}
const{records,length}=await this._loadUngroupedList({...config,context:{...config.context,current_company_id:config.currentCompanyId,},});if(config.offset&&!records.length){config.offset=0;return this._loadData(config);}
return{records,length};}
async _loadGroupedList(config){config.offset=config.offset||0;config.limit=config.limit||this.initialGroupsLimit;if(!config.limit){config.limit=config.openGroupsByDefault?this.constructor.DEFAULT_OPEN_GROUP_LIMIT:this.constructor.DEFAULT_GROUP_LIMIT;}
config.groups=config.groups||{};const firstGroupByName=config.groupBy[0].split(":")[0];if(firstGroupByName.includes(".")){if(!config.fields[firstGroupByName]){await this._getPropertyDefinition(config,firstGroupByName);}
const propertiesFieldName=firstGroupByName.split(".")[0];if(!config.activeFields[propertiesFieldName]){config.activeFields[propertiesFieldName]=makeActiveField();}}
const orderBy=config.orderBy.filter((o)=>o.name===firstGroupByName||o.name==="__count"||(o.name in config.activeFields&&config.fields[o.name].aggregator!==undefined));const response=await this._webReadGroup(config,orderBy);const{groups:groupsData,length}=response;const groupBy=config.groupBy.slice(1);const groupByField=config.fields[config.groupBy[0].split(":")[0]];const commonConfig={resModel:config.resModel,fields:config.fields,activeFields:config.activeFields,};let groupRecordConfig;const groupRecordResIds=[];if(this.groupByInfo[firstGroupByName]){groupRecordConfig={...this.groupByInfo[firstGroupByName],resModel:config.fields[firstGroupByName].relation,context:{},};}
const proms=[];let nbOpenGroups=0;const groups=[];for(const groupData of groupsData){const group=extractInfoFromGroupData(groupData,config.groupBy,config.fields);if(!config.groups[group.value]){config.groups[group.value]={...commonConfig,groupByFieldName:groupByField.name,isFolded:"__fold"in groupData?groupData.__fold:!config.openGroupsByDefault,extraDomain:false,value:group.value,list:{...commonConfig,groupBy,},};if(isRelational(config.fields[firstGroupByName])&&!group.value){config.groups[group.value].isFolded=true;}
if(groupRecordConfig){config.groups[group.value].record={...groupRecordConfig,resId:group.value??false,};}}
if(groupRecordConfig){const resId=config.groups[group.value].record.resId;if(resId){groupRecordResIds.push(resId);}}
const groupConfig=config.groups[group.value];groupConfig.list.orderBy=config.orderBy;groupConfig.initialDomain=group.domain;if(groupConfig.extraDomain){groupConfig.list.domain=Domain.and([group.domain,groupConfig.extraDomain,]).toList();}else{groupConfig.list.domain=group.domain;}
const context={...config.context,[`default_${firstGroupByName}`]:group.serverValue,};groupConfig.list.context=context;groupConfig.context=context;if(groupBy.length){group.groups=[];}else{group.records=[];}
if(!groupConfig.isFolded){nbOpenGroups++;if(nbOpenGroups>this.constructor.MAX_NUMBER_OPENED_GROUPS){groupConfig.isFolded=true;}}
if(!groupConfig.isFolded&&group.count>0){const prom=this._loadData(groupConfig.list).then((response)=>{if(groupBy.length){group.groups=response?response.groups:[];group.length=response?response.length:0;}else{group.records=response?response.records:[];}});proms.push(prom);}
groups.push(group);}
if(groupRecordConfig&&Object.keys(groupRecordConfig.activeFields).length){const prom=this._loadRecords({...groupRecordConfig,resIds:groupRecordResIds,}).then((records)=>{for(const group of groups){if(!group.value){group.values={id:false};continue;}
group.values=records.find((r)=>group.value&&r.id===group.value);}});proms.push(prom);}
await Promise.all(proms);const params=JSON.stringify([config.domain,config.groupBy,config.offset,config.limit,config.orderBy,]);if(config.currentGroups&&config.currentGroups.params===params){const currentGroups=config.currentGroups.groups;currentGroups.forEach((group,index)=>{if(config.groups[group.value]&&!groups.some((g)=>JSON.stringify(g.value)===JSON.stringify(group.value))){const aggregates=Object.assign({},group.aggregates);for(const key in aggregates){aggregates[key]=0;}
groups.splice(index,0,Object.assign({},group,{count:0,length:0,records:[],aggregates}));}});}
config.currentGroups={params,groups};return{groups,length};}
async _loadNewRecord(config,params={}){return this._onchange(config,params);}
async _loadRecords(config,evalContext=config.context){const{resModel,resIds,activeFields,fields,context}=config;if(!resIds.length){return[];}
const fieldSpec=getFieldsSpec(activeFields,fields,evalContext);if(Object.keys(fieldSpec).length>0){const kwargs={context:{bin_size:true,...context},specification:fieldSpec,};const records=await this.orm.webRead(resModel,resIds,kwargs);if(!records.length){throw new FetchRecordError(resIds);}
return records;}else{return resIds.map((resId)=>{return{id:resId};});}}
async _loadUngroupedList(config){const orderBy=config.orderBy.filter((o)=>o.name!=="__count");const kwargs={specification:getFieldsSpec(config.activeFields,config.fields,config.context),offset:config.offset,order:orderByToString(orderBy),limit:config.limit,context:{bin_size:true,...config.context},count_limit:config.countLimit!==Number.MAX_SAFE_INTEGER?config.countLimit+1:undefined,};return this.orm.webSearchRead(config.resModel,config.domain,kwargs);}
async _onchange(config,{changes={},fieldNames=[],evalContext=config.context,onError}){const{fields,activeFields,resModel,resId}=config;let context=config.context;if(fieldNames.length===1){const fieldContext=config.activeFields[fieldNames[0]].context;context=makeContext([context,fieldContext],evalContext);}
const spec=getFieldsSpec(activeFields,fields,evalContext,{withInvisible:true});const args=[resId?[resId]:[],changes,fieldNames,spec];let response;try{response=await this.orm.call(resModel,"onchange",args,{context});}catch(e){if(onError){return onError(e);}
throw e;}
if(response.warning){const{type,title,message,className,sticky}=response.warning;if(type==="dialog"){this.dialog.add(WarningDialog,{title,message});}else{this.notification.add(message,{className,sticky,title,type:"warning",});}}
return response.value;}
async _updateConfig(config,patch,{reload=true,commit}={}){const tmpConfig={...config,...patch};markRaw(tmpConfig.activeFields);markRaw(tmpConfig.fields);let data;if(reload){if(tmpConfig.isRoot){this.hooks.onWillLoadRoot(tmpConfig);}
data=await this._loadData(tmpConfig);}
Object.assign(config,tmpConfig);if(data&&commit){commit(data);}
if(reload&&config.isRoot){return this.hooks.onRootLoaded();}}
async _updateCount(config){const count=await this.keepLast.add(this.orm.searchCount(config.resModel,config.domain,{context:config.context}));config.countLimit=Number.MAX_SAFE_INTEGER;return count;}
_updateSimilarRecords(reloadedRecord,serverValues){if(this.config.isMonoRecord||!this.config.groupBy.length){return;}
for(const record of this.root.records){if(record===reloadedRecord){continue;}
if(record.resId===reloadedRecord.resId){record._applyValues(serverValues);}}}
async _webReadGroup(config,orderBy){const aggregates=Object.values(config.fields).filter((field)=>field.aggregator&&field.name in config.activeFields&&field.name!==config.groupBy[0]).map((field)=>`${field.name}:${field.aggregator}`);return this.orm.webReadGroup(config.resModel,config.domain,aggregates,[config.groupBy[0]],{orderby:orderByToString(orderBy),lazy:true,offset:config.offset,limit:config.limit,context:config.context,});}}
return __exports;});;

/* /web/static/src/model/relational_model/static_list.js */
odoo.define('@web/model/relational_model/static_list',['@web/core/orm_service','@web/core/utils/arrays','@web/core/utils/objects','@web/model/relational_model/utils','@web/model/relational_model/datapoint','@odoo/owl'],function(require){'use strict';let __exports={};const{x2ManyCommands}=require("@web/core/orm_service");const{intersection}=require("@web/core/utils/arrays");const{pick}=require("@web/core/utils/objects");const{completeActiveFields}=require("@web/model/relational_model/utils");const{DataPoint}=require("@web/model/relational_model/datapoint");const{fromUnityToServerValues,getBasicEvalContext,getId,patchActiveFields}=require("@web/model/relational_model/utils");const{markRaw}=require("@odoo/owl");function compareFieldValues(v1,v2,fieldType){if(fieldType==="many2one"){v1=v1?v1[1]:"";v2=v2?v2[1]:"";}
return v1<v2;}
function compareRecords(r1,r2,orderBy,fields){const{name,asc}=orderBy[0];function getValue(record,fieldName){return fieldName==="id"?record.resId:record.data[fieldName];}
const v1=asc?getValue(r1,name):getValue(r2,name);const v2=asc?getValue(r2,name):getValue(r1,name);if(compareFieldValues(v1,v2,fields[name].type)){return-1;}
if(compareFieldValues(v2,v1,fields[name].type)){return 1;}
if(orderBy.length>1){return compareRecords(r1,r2,orderBy.slice(1),fields);}
return 0;}
const StaticList=__exports.StaticList=class StaticList extends DataPoint{static type="StaticList";setup(config,data,options={}){this._parent=options.parent;this._onUpdate=options.onUpdate;this._cache=markRaw({});this._commands=[];this._initialCommands=[];this._savePoint=undefined;this._unknownRecordCommands={};this._currentIds=[...this.resIds];this._initialCurrentIds=[...this.currentIds];this._needsReordering=false;this._tmpIncreaseLimit=0;this._extendedRecords=new Set();this.records=data.slice(this.offset,this.limit).map((r)=>this._createRecordDatapoint(r));this.count=this.resIds.length;this.handleField=Object.keys(this.activeFields).find((fieldName)=>this.activeFields[fieldName].isHandle);}
get currentIds(){return this._currentIds;}
get editedRecord(){return this.records.find((record)=>record.isInEdition);}
get evalContext(){const evalContext=getBasicEvalContext(this.config);evalContext.parent=this._parent.evalContext;return evalContext;}
get limit(){return this.config.limit;}
get offset(){return this.config.offset;}
get orderBy(){return this.config.orderBy;}
get resIds(){return this.config.resIds;}
addNewRecord(params){return this.model.mutex.exec(async()=>{const{activeFields,context,mode,position,withoutParent}=params;const record=await this._createNewRecordDatapoint({activeFields,context,position,withoutParent,manuallyAdded:true,mode,});await this._addRecord(record,{position});await this._onUpdate({withoutOnchange:!record._checkValidity({silent:true})});return record;});}
canResequence(){return this.handleField&&this.orderBy.length&&this.orderBy[0].name===this.handleField;}
delete(record){return this.model.mutex.exec(async()=>{await this._applyCommands([[x2ManyCommands.DELETE,record.resId||record._virtualId]]);await this._onUpdate();});}
async enterEditMode(record){const canProceed=await this.leaveEditMode();if(canProceed){await record.switchMode("edit");}
return canProceed;}
extendRecord(params,record){return this.model.mutex.exec(async()=>{completeActiveFields(this.config.activeFields,params.activeFields);Object.assign(this.fields,params.fields);const activeFields={...params.activeFields};for(const fieldName in this.activeFields){if(fieldName in activeFields){patchActiveFields(activeFields[fieldName],this.activeFields[fieldName]);}else{activeFields[fieldName]=this.activeFields[fieldName];}}
if(record){record._noUpdateParent=true;record._activeFieldsToRestore={...this.config.activeFields};const config={...record.config,...params,activeFields,};if(this._extendedRecords.has(record.id)){this.model._updateConfig(record.config,config,{reload:false});record._addSavePoint();return record;}
let data={};if(!record.isNew){const evalContext=Object.assign({},record.evalContext,config.context);const resIds=[record.resId];[data]=await this.model._loadRecords({...config,resIds},evalContext);}
this.model._updateConfig(record.config,config,{reload:false});record._applyDefaultValues();for(const fieldName in record.activeFields){if(["one2many","many2many"].includes(record.fields[fieldName].type)){const list=record.data[fieldName];const patch={activeFields:activeFields[fieldName].related.activeFields,fields:activeFields[fieldName].related.fields,};for(const subRecord of Object.values(list._cache)){this.model._updateConfig(subRecord.config,patch,{reload:false,});}
this.model._updateConfig(list.config,patch,{reload:false});}}
record._applyValues(data);const commands=this._unknownRecordCommands[record.resId];delete this._unknownRecordCommands[record.resId];if(commands){this._applyCommands(commands);}
record._addSavePoint();}else{record=await this._createNewRecordDatapoint({activeFields,context:params.context,withoutParent:params.withoutParent,manuallyAdded:true,});record._activeFieldsToRestore={...this.config.activeFields};record._noUpdateParent=true;}
this._extendedRecords.add(record.id);return record;});}
forget(record){return this.model.mutex.exec(async()=>{await this._applyCommands([[x2ManyCommands.UNLINK,record.resId]]);await this._onUpdate();});}
async leaveEditMode({discard,canAbandon,validate}={}){if(this.editedRecord){await this.model._askChanges(false);}
return this.model.mutex.exec(async()=>{let editedRecord=this.editedRecord;if(editedRecord){const isValid=editedRecord._checkValidity();if(!isValid&&validate){return false;}
if(canAbandon!==false&&!validate){this._abandonRecords([editedRecord],{force:true});}
editedRecord=this.editedRecord;if(editedRecord){if(isValid&&!editedRecord.dirty&&discard){return false;}
if(isValid||(!editedRecord.dirty&&!editedRecord._manuallyAdded)){editedRecord._switchMode("readonly");}}}
return!this.editedRecord;});}
linkTo(resId,serverData){return this.model.mutex.exec(async()=>{await this._applyCommands([[x2ManyCommands.LINK,resId,serverData]]);await this._onUpdate();});}
unlinkFrom(resId,serverData){return this.model.mutex.exec(async()=>{await this._applyCommands([[x2ManyCommands.UNLINK,resId,serverData]]);await this._onUpdate();});}
load({limit,offset,orderBy}={}){return this.model.mutex.exec(async()=>{const editedRecord=this.editedRecord;if(editedRecord&&!(await editedRecord.checkValidity())){return;}
limit=limit!==undefined?limit:this.limit;offset=offset!==undefined?offset:this.offset;orderBy=orderBy!==undefined?orderBy:this.orderBy;return this._load({limit,offset,orderBy});});}
moveRecord(dataRecordId,_dataGroupId,refId,_targetGroupId){return this.resequence(dataRecordId,refId);}
sortBy(fieldName){return this.model.mutex.exec(()=>this._sortBy(fieldName));}
async addAndRemove({add,remove,reload}={}){return this.model.mutex.exec(async()=>{const commands=[...(add||[]).map((id)=>[x2ManyCommands.LINK,id]),...(remove||[]).map((id)=>[x2ManyCommands.UNLINK,id]),];await this._applyCommands(commands,{canAddOverLimit:true,reload});await this._onUpdate();});}
async resequence(movedId,targetId){return this.model.mutex.exec(()=>this._resequence(movedId,targetId));}
validateExtendedRecord(record){return this.model.mutex.exec(async()=>{if(!this._currentIds.includes(record.isNew?record._virtualId:record.resId)){await this._addRecord(record);}else if(!record.dirty){return;}
await this._onUpdate();if(this.orderBy.length){await this._sort();}
record._restoreActiveFields();record._savePoint=undefined;});}
_abandonRecords(records=this.records,{force}={}){for(const record of records){if(record.canBeAbandoned&&(force||!record._checkValidity())){const virtualId=record._virtualId;const index=this._currentIds.findIndex((id)=>id===virtualId);this._currentIds.splice(index,1);this.records.splice(this.records.findIndex((r)=>r===record),1);this._commands=this._commands.filter((c)=>c[1]!==virtualId);this.count--;if(this._tmpIncreaseLimit>0){this.model._updateConfig(this.config,{limit:this.limit-1},{reload:false});this._tmpIncreaseLimit--;}}}}
async _addRecord(record,{position}={}){const command=[x2ManyCommands.CREATE,record._virtualId];if(position==="top"){this.records.unshift(record);if(this.records.length>this.limit){this.records.pop();}
this._currentIds.splice(this.offset,0,record._virtualId);this._commands.unshift(command);}else if(position==="bottom"){this.records.push(record);this._currentIds.splice(this.offset+this.limit,0,record._virtualId);if(this.records.length>this.limit){this._tmpIncreaseLimit++;const nextLimit=this.limit+1;this.model._updateConfig(this.config,{limit:nextLimit},{reload:false});}
this._commands.push(command);}else{const currentIds=[...this._currentIds,record._virtualId];if(this.orderBy.length){await this._sort(currentIds);}else{if(this.records.length<this.limit){this.records.push(record);}}
this._currentIds=currentIds;this._commands.push(command);}
this.count++;this._needsReordering=true;}
_addSavePoint(){for(const id in this._cache){this._cache[id]._addSavePoint();}
this._savePoint=markRaw({_commands:[...this._commands],_currentIds:[...this._currentIds],count:this.count,});}
_applyCommands(commands,{canAddOverLimit,reload}={}){const{CREATE,UPDATE,DELETE,UNLINK,LINK,SET}=x2ManyCommands;let lastCommandIndex=-1;const commandsByIds={};function addOwnCommand(command){commandsByIds[command[1]]=commandsByIds[command[1]]||[];commandsByIds[command[1]].push({command,index:++lastCommandIndex});}
function getOwnCommands(id){commandsByIds[id]=commandsByIds[id]||[];return commandsByIds[id];}
for(const command of this._commands){addOwnCommand(command);}
const removedIds={};const recordsToLoad=[];for(const command of commands){switch(command[0]){case CREATE:{const virtualId=getId("virtual");const record=this._createRecordDatapoint(command[2],{virtualId});this.records.push(record);addOwnCommand([CREATE,virtualId]);const index=this.offset+this.limit+this._tmpIncreaseLimit;this._currentIds.splice(index,0,virtualId);this._tmpIncreaseLimit=Math.max(this.records.length-this.limit,0);const nextLimit=this.limit+this._tmpIncreaseLimit;this.model._updateConfig(this.config,{limit:nextLimit},{reload:false});this.count++;break;}
case UPDATE:{const existingCommand=getOwnCommands(command[1]).some((x)=>x.command[0]===CREATE||x.command[0]===UPDATE);if(!existingCommand){addOwnCommand([UPDATE,command[1]]);}
const record=this._cache[command[1]];if(!record){if(!(command[1]in this._unknownRecordCommands)){this._unknownRecordCommands[command[1]]=[];}
this._unknownRecordCommands[command[1]].push(command);}else if(command[1]in this._unknownRecordCommands){this._unknownRecordCommands[command[1]].push(command);}else{const changes={};for(const fieldName in command[2]){if(["one2many","many2many"].includes(this.fields[fieldName].type)){const invisible=record.activeFields[fieldName]?.invisible;if(invisible==="True"||invisible==="1"||!(fieldName in record.activeFields)){if(!(command[1]in this._unknownRecordCommands)){this._unknownRecordCommands[command[1]]=[];}
this._unknownRecordCommands[command[1]].push(command);continue;}}
changes[fieldName]=command[2][fieldName];}
record._applyChanges(record._parseServerValues(changes,record.data));}
break;}
case DELETE:case UNLINK:{if(command[0]===UNLINK){const firstCommand=this._commands[0];const hasReplaceWithCommand=firstCommand&&firstCommand[0]===SET;if(hasReplaceWithCommand&&firstCommand[2].includes(command[1])){firstCommand[2]=firstCommand[2].filter((id)=>id!==command[1]);break;}}
const ownCommands=getOwnCommands(command[1]);if(command[0]===DELETE){const hasCreateCommand=ownCommands.some((x)=>x.command[0]===CREATE);ownCommands.splice(0);if(!hasCreateCommand){addOwnCommand([DELETE,command[1]]);}}else{const linkToIndex=ownCommands.findIndex((x)=>x.command[0]===LINK);if(linkToIndex>=0){ownCommands.splice(linkToIndex,1);}else{addOwnCommand([UNLINK,command[1]]);}}
removedIds[command[1]]=true;break;}
case LINK:{let record;if(command[1]in this._cache){record=this._cache[command[1]];}else{record=this._createRecordDatapoint({...command[2],id:command[1]});}
if(!this.limit||this.records.length<this.limit||canAddOverLimit){if(!command[2]){recordsToLoad.push(record);}
this.records.push(record);if(this.records.length>this.limit){this._tmpIncreaseLimit=this.records.length-this.limit;const nextLimit=this.limit+this._tmpIncreaseLimit;this.model._updateConfig(this.config,{limit:nextLimit},{reload:false});}}
this._currentIds.push(record.resId);addOwnCommand([command[0],command[1]]);this.count++;break;}}}
this._commands=Object.values(commandsByIds).flat().sort((x,y)=>x.index-y.index).map((x)=>x.command);if(Object.keys(removedIds).length){let removeCommandsByIdsCopy=Object.assign({},removedIds);this.records=this.records.filter((r)=>{const id=r.resId||r._virtualId;if(removeCommandsByIdsCopy[id]){delete removeCommandsByIdsCopy[id];return false;}
return true;});const nextCurrentIds=[];removeCommandsByIdsCopy=Object.assign({},removedIds);for(const id of this._currentIds){if(removeCommandsByIdsCopy[id]){delete removeCommandsByIdsCopy[id];}else{nextCurrentIds.push(id);}}
this._currentIds=nextCurrentIds;this.count=this._currentIds.length;}
const nbMissingRecords=this.limit-this.records.length;if(nbMissingRecords>0){const lastRecordIndex=this.limit+this.offset;const firstRecordIndex=lastRecordIndex-nbMissingRecords;const nextRecordIds=this._currentIds.slice(firstRecordIndex,lastRecordIndex);for(const id of this._getResIdsToLoad(nextRecordIds)){const record=this._createRecordDatapoint({id},{dontApplyCommands:true});recordsToLoad.push(record);}
for(const id of nextRecordIds){this.records.push(this._cache[id]);}}
if(recordsToLoad.length||reload){const resIds=reload?this.records.map((r)=>r.resId):recordsToLoad.map((r)=>r.resId);return this.model._loadRecords({...this.config,resIds}).then((recordValues)=>{if(reload){for(const record of recordValues){this._createRecordDatapoint(record);}
this.records=resIds.map((id)=>this._cache[id]);return;}
for(let i=0;i<recordsToLoad.length;i++){const record=recordsToLoad[i];record._applyValues(recordValues[i]);const commands=this._unknownRecordCommands[record.resId];if(commands){delete this._unknownRecordCommands[record.resId];this._applyCommands(commands);}}});}}
_applyInitialCommands(commands){this._applyCommands(commands);this._initialCommands=[...commands];this._initialCurrentIds=[...this._currentIds];}
async _createNewRecordDatapoint(params={}){const changes={};if(!params.withoutParent&&this.config.relationField){changes[this.config.relationField]=this._parent._getChanges();if(!this._parent.isNew){changes[this.config.relationField].id=this._parent.resId;}}
const values=await this.model._loadNewRecord({resModel:this.resModel,activeFields:params.activeFields||this.activeFields,fields:this.fields,context:Object.assign({},this.context,params.context),},{changes,evalContext:this.evalContext});if(this.canResequence()&&this.records.length){const position=params.position||"bottom";const order=this.orderBy[0];const asc=!order||order.asc;let value;if(position==="top"){const isOnFirstPage=this.offset===0;value=this.records[0].data[this.handleField];if(isOnFirstPage){if(asc){value=value>0?value-1:0;}else{value=value+1;}}}else if(position==="bottom"){value=this.records[this.records.length-1].data[this.handleField];const isOnLastPage=this.limit+this.offset>=this.count;if(isOnLastPage){if(asc){value=value+1;}else{value=value>0?value-1:0;}}}
values[this.handleField]=value;}
return this._createRecordDatapoint(values,{mode:params.mode||"edit",virtualId:getId("virtual"),activeFields:params.activeFields,manuallyAdded:params.manuallyAdded,});}
_createRecordDatapoint(data,params={}){const resId=data.id||false;if(!resId&&!params.virtualId){throw new Error("You must provide a virtualId if the record has no id");}
const id=resId||params.virtualId;const config={context:this.context,activeFields:Object.assign({},params.activeFields||this.activeFields),resModel:this.resModel,fields:params.fields||this.fields,relationField:this.config.relationField,resId,resIds:resId?[resId]:[],mode:params.mode||"readonly",isMonoRecord:true,currentCompanyId:this.currentCompanyId,};const{CREATE,UPDATE}=x2ManyCommands;const options={parentRecord:this._parent,onUpdate:async({withoutParentUpdate})=>{const id=record.isNew?record._virtualId:record.resId;if(!this.currentIds.includes(id)){return;}
const hasCommand=this._commands.some((c)=>(c[0]===CREATE||c[0]===UPDATE)&&c[1]===id);if(!hasCommand){this._commands.push([UPDATE,id]);}
if(record._noUpdateParent){return;}
if(!withoutParentUpdate){await this._onUpdate({withoutOnchange:!record._checkValidity({silent:true}),});}},virtualId:params.virtualId,manuallyAdded:params.manuallyAdded,};const record=new this.model.constructor.Record(this.model,config,data,options);this._cache[id]=record;if(!params.dontApplyCommands){const commands=this._unknownRecordCommands[id];if(commands){delete this._unknownRecordCommands[id];this._applyCommands(commands);}}
return record;}
_clearCommands(){this._commands=[];this._unknownRecordCommands={};}
_discard(){for(const id in this._cache){this._cache[id]._discard();}
if(this._savePoint){this._commands=this._savePoint._commands;this._currentIds=this._savePoint._currentIds;this.count=this._savePoint.count;}else{this._commands=[];this._currentIds=[...this.resIds];this.count=this.resIds.length;}
this._unknownRecordCommands={};const limit=this.limit-this._tmpIncreaseLimit;this._tmpIncreaseLimit=0;this.model._updateConfig(this.config,{limit},{reload:false});this.records=this._currentIds.slice(this.offset,this.limit).map((resId)=>this._cache[resId]);if(!this._savePoint){this._applyCommands(this._initialCommands);}
this._savePoint=undefined;}
_getCommands({withReadonly}={}){const{CREATE,UPDATE,LINK}=x2ManyCommands;const commands=[];for(const command of this._commands){if(command[0]===UPDATE&&command[1]in this._unknownRecordCommands){const uCommands=this._unknownRecordCommands[command[1]];for(const uCommand of uCommands){const values=fromUnityToServerValues(uCommand[2],this.fields,this.activeFields,{withReadonly,context:this.context});commands.push([uCommand[0],uCommand[1],values]);}}else if(command[0]===CREATE||command[0]===UPDATE){const record=this._cache[command[1]];if(command[0]===CREATE&&record.resId){commands.push([LINK,record.resId]);}else{const values=record._getChanges(record._changes,{withReadonly});if(command[0]===CREATE||Object.keys(values).length){commands.push([command[0],command[1],values]);}}}else{commands.push(command);}}
return commands;}
_getResIdsToLoad(resIds,fieldNames=this.fieldNames){return resIds.filter((resId)=>{if(typeof resId==="string"){return false;}
const record=this._cache[resId];if(!record){return true;}
fieldNames=fieldNames.filter((fieldName)=>fieldName!=="id");return intersection(fieldNames,record.fieldNames).length!==fieldNames.length;});}
async _load({limit=this.limit,offset=this.offset,orderBy=this.orderBy,nextCurrentIds=this._currentIds,}={}){const currentIds=nextCurrentIds.slice(offset,offset+limit);const resIds=this._getResIdsToLoad(currentIds);if(resIds.length){const records=await this.model._loadRecords({...this.config,resIds},this.evalContext);for(const record of records){this._createRecordDatapoint(record);}}
this.records=currentIds.map((id)=>this._cache[id]);this._currentIds=nextCurrentIds;await this.model._updateConfig(this.config,{limit,offset,orderBy},{reload:false});}
async _replaceWith(ids,{reload=false}={}){const resIds=reload?ids:ids.filter((id)=>!this._cache[id]);if(resIds.length){const records=await this.model._loadRecords({...this.config,resIds,context:this.context,});for(const record of records){this._createRecordDatapoint(record);}}
this.records=ids.map((id)=>this._cache[id]);const updateCommandsToKeep=this._commands.filter((c)=>c[0]===x2ManyCommands.UPDATE&&ids.includes(c[1]));this._commands=[x2ManyCommands.set(ids)].concat(updateCommandsToKeep);this._currentIds=[...ids];this.count=this._currentIds.length;if(this._currentIds.length>this.limit){this._tmpIncreaseLimit=this._currentIds.length-this.limit;const nextLimit=this.limit+this._tmpIncreaseLimit;this.model._updateConfig(this.config,{limit:nextLimit},{reload:false});}}
async _resequence(movedId,targetId){const records=[...this.records];const order=this.orderBy.find((o)=>o.name===this.handleField);const asc=!order||order.asc;const fromIndex=records.findIndex((r)=>r.id===movedId);let toIndex=0;if(targetId!==null){const targetIndex=records.findIndex((r)=>r.id===targetId);toIndex=fromIndex>targetIndex?targetIndex+1:targetIndex;}
const getSequence=(rec)=>rec&&rec.data[this.handleField];const firstIndex=Math.min(fromIndex,toIndex);const lastIndex=Math.max(fromIndex,toIndex)+1;let reorderAll=false;let lastSequence=(asc?-1:1)*Infinity;for(let index=0;index<records.length;index++){const sequence=getSequence(records[index]);if((asc&&lastSequence>=sequence)||(!asc&&lastSequence<=sequence)){reorderAll=true;break;}
lastSequence=sequence;}
const[record]=records.splice(fromIndex,1);records.splice(toIndex,0,record);let toReorder=records;if(!reorderAll){toReorder=toReorder.slice(firstIndex,lastIndex).filter((r)=>r.id!==movedId);if(fromIndex<toIndex){toReorder.push(record);}else{toReorder.unshift(record);}}
if(!asc){toReorder.reverse();}
const sequences=toReorder.map(getSequence);const offset=sequences.length&&Math.min(...sequences);const proms=[];for(const[i,record]of Object.entries(toReorder)){proms.push(record._update({[this.handleField]:offset+Number(i)},{withoutParentUpdate:true}));}
await Promise.all(proms);await this._sort();await this._onUpdate();}
async _sort(currentIds=this.currentIds,orderBy=this.orderBy){const fieldNames=orderBy.map((o)=>o.name);const resIds=this._getResIdsToLoad(currentIds,fieldNames);if(resIds.length){const activeFields=pick(this.activeFields,...fieldNames);const config={...this.config,resIds,activeFields};const records=await this.model._loadRecords(config);for(const record of records){this._createRecordDatapoint(record,{activeFields});}}
const allRecords=currentIds.map((id)=>this._cache[id]);const sortedRecords=allRecords.sort((r1,r2)=>{return compareRecords(r1,r2,orderBy,this.fields);});await this._load({orderBy,nextCurrentIds:sortedRecords.map((r)=>r.resId||r._virtualId),});this._needsReordering=false;}
async _sortBy(fieldName){let orderBy=[...this.orderBy];if(fieldName){if(orderBy.length&&orderBy[0].name===fieldName){if(!this._needsReordering){orderBy[0]={name:orderBy[0].name,asc:!orderBy[0].asc};}}else{orderBy=orderBy.filter((o)=>o.name!==fieldName);orderBy.unshift({name:fieldName,asc:true,});}}
return this._sort(this._currentIds,orderBy);}
_updateContext(context){Object.assign(this.context,context);for(const record of Object.values(this._cache)){record._setEvalContext();}}}
return __exports;});;

/* /web/static/src/model/relational_model/utils.js */
odoo.define('@web/model/relational_model/utils',['@odoo/owl','@web/core/context','@web/core/domain','@web/core/l10n/dates','@web/core/orm_service','@web/core/py_js/py','@web/core/utils/concurrency','@web/core/utils/objects','@web/core/utils/reactive','@web/core/utils/timing','@web/search/utils/order_by','@web/core/network/rpc'],function(require){'use strict';let __exports={};const{markup,onWillDestroy,onWillStart,onWillUpdateProps,useComponent}=require("@odoo/owl");const{evalPartialContext,makeContext}=require("@web/core/context");const{Domain}=require("@web/core/domain");const{deserializeDate,deserializeDateTime,serializeDate,serializeDateTime,}=require("@web/core/l10n/dates");const{x2ManyCommands}=require("@web/core/orm_service");const{evaluateExpr}=require("@web/core/py_js/py");const{Deferred}=require("@web/core/utils/concurrency");const{omit}=require("@web/core/utils/objects");const{effect}=require("@web/core/utils/reactive");const{batched}=require("@web/core/utils/timing");const{orderByToString}=require("@web/search/utils/order_by");const{rpc}=require("@web/core/network/rpc");function convertBoolToPyExpr(value){if(value===true||value===false){return value?"True":"False";}
return value;}
__exports.makeActiveField=makeActiveField;function makeActiveField({context,invisible,readonly,required,onChange,forceSave,isHandle,}={}){return{context:context||"{}",invisible:convertBoolToPyExpr(invisible||false),readonly:convertBoolToPyExpr(readonly||false),required:convertBoolToPyExpr(required||false),onChange:onChange||false,forceSave:forceSave||false,isHandle:isHandle||false,};}
const AGGREGATABLE_FIELD_TYPES=["float","integer","monetary"];__exports.addFieldDependencies=addFieldDependencies;function addFieldDependencies(activeFields,fields,fieldDependencies=[]){for(const field of fieldDependencies){if(!("readonly"in field)){field.readonly=true;}
if(field.name in activeFields){patchActiveFields(activeFields[field.name],makeActiveField(field));}else{activeFields[field.name]=makeActiveField(field);}
if(!fields[field.name]){const newField=omit(field,["context","invisible","required","readonly","onChange",]);fields[field.name]=newField;if(newField.type==="selection"&&!Array.isArray(newField.selection)){newField.selection=[];}}}}
function completeActiveField(activeField,extra){if(extra.related){for(const fieldName in extra.related.activeFields){if(fieldName in activeField.related.activeFields){completeActiveField(activeField.related.activeFields[fieldName],extra.related.activeFields[fieldName]);}else{activeField.related.activeFields[fieldName]={...extra.related.activeFields[fieldName],};}}
Object.assign(activeField.related.fields,extra.related.fields);}}
__exports.completeActiveFields=completeActiveFields;function completeActiveFields(activeFields,extraActiveFields){for(const fieldName in extraActiveFields){const extraActiveField={...extraActiveFields[fieldName],invisible:"True",};if(fieldName in activeFields){completeActiveField(activeFields[fieldName],extraActiveField);}else{activeFields[fieldName]=extraActiveField;}}}
__exports.createPropertyActiveField=createPropertyActiveField;function createPropertyActiveField(property){const{type}=property;const activeField=makeActiveField();if(type==="one2many"||type==="many2many"){activeField.related={fields:{id:{name:"id",type:"integer"},display_name:{name:"display_name",type:"char"},},activeFields:{id:makeActiveField({readonly:true}),display_name:makeActiveField(),},};}
return activeField;}
__exports.combineModifiers=combineModifiers;function combineModifiers(mod1,mod2,operator){if(operator==="AND"){if(!mod1||mod1==="False"||!mod2||mod2==="False"){return"False";}
if(mod1==="True"){return mod2;}
if(mod2==="True"){return mod1;}
return"("+mod1+") and ("+mod2+")";}else if(operator==="OR"){if(mod1==="True"||mod2==="True"){return"True";}
if(!mod1||mod1==="False"){return mod2;}
if(!mod2||mod2==="False"){return mod1;}
return"("+mod1+") or ("+mod2+")";}
throw new Error(`Operator provided to "combineModifiers" must be "AND" or "OR", received ${operator}`);}
__exports.patchActiveFields=patchActiveFields;function patchActiveFields(activeField,patch){activeField.invisible=combineModifiers(activeField.invisible,patch.invisible,"AND");activeField.readonly=combineModifiers(activeField.readonly,patch.readonly,"AND");activeField.required=combineModifiers(activeField.required,patch.required,"OR");activeField.onChange=activeField.onChange||patch.onChange;activeField.forceSave=activeField.forceSave||patch.forceSave;activeField.isHandle=activeField.isHandle||patch.isHandle;if(patch.related){const related=activeField.related;for(const fieldName in patch.related.activeFields){if(fieldName in related.activeFields){patchActiveFields(related.activeFields[fieldName],patch.related.activeFields[fieldName]);}else{related.activeFields[fieldName]={...patch.related.activeFields[fieldName]};}}
Object.assign(related.fields,patch.related.fields);}
if("limit"in patch){activeField.limit=patch.limit;}
if(patch.defaultOrderBy){activeField.defaultOrderBy=patch.defaultOrderBy;}}
__exports.extractFieldsFromArchInfo=extractFieldsFromArchInfo;function extractFieldsFromArchInfo({fieldNodes,widgetNodes},fields){const activeFields={};for(const fieldNode of Object.values(fieldNodes)){const fieldName=fieldNode.name;const activeField=makeActiveField({context:fieldNode.context,invisible:combineModifiers(fieldNode.invisible,fieldNode.column_invisible,"OR"),readonly:fieldNode.readonly,required:fieldNode.required,onChange:fieldNode.onChange,forceSave:fieldNode.forceSave,isHandle:fieldNode.isHandle,});if(["one2many","many2many"].includes(fields[fieldName].type)){activeField.related={activeFields:{},fields:{},};if(fieldNode.views){const viewDescr=fieldNode.views[fieldNode.viewMode];if(viewDescr){activeField.related=extractFieldsFromArchInfo(viewDescr,viewDescr.fields);activeField.limit=viewDescr.limit;activeField.defaultOrderBy=viewDescr.defaultOrder;if(fieldNode.views.form){const formArchInfo=extractFieldsFromArchInfo(fieldNode.views.form,fieldNode.views.form.fields);completeActiveFields(activeField.related.activeFields,formArchInfo.activeFields);Object.assign(activeField.related.fields,formArchInfo.fields);}
if(fieldNode.viewMode!=="default"&&fieldNode.views.default){const defaultArchInfo=extractFieldsFromArchInfo(fieldNode.views.default,fieldNode.views.default.fields);for(const fieldName in defaultArchInfo.activeFields){if(fieldName in activeField.related.activeFields){patchActiveFields(activeField.related.activeFields[fieldName],defaultArchInfo.activeFields[fieldName]);}else{activeField.related.activeFields[fieldName]={...defaultArchInfo.activeFields[fieldName],};}}
activeField.related.fields=Object.assign({},defaultArchInfo.fields,activeField.related.fields);}}}
if(fieldNode.field?.useSubView){activeField.required="False";}}
if(fields[fieldName].type==="many2one_reference"&&fieldNode.views){const viewDescr=fieldNode.views.default;activeField.related=extractFieldsFromArchInfo(viewDescr,viewDescr.fields);}
if(fieldName in activeFields){patchActiveFields(activeFields[fieldName],activeField);}else{activeFields[fieldName]=activeField;}
if(fieldNode.field){let fieldDependencies=fieldNode.field.fieldDependencies;if(typeof fieldDependencies==="function"){fieldDependencies=fieldDependencies(fieldNode);}
addFieldDependencies(activeFields,fields,fieldDependencies);}}
for(const widgetInfo of Object.values(widgetNodes||{})){let fieldDependencies=widgetInfo.widget.fieldDependencies;if(typeof fieldDependencies==="function"){fieldDependencies=fieldDependencies(widgetInfo);}
addFieldDependencies(activeFields,fields,fieldDependencies);}
return{activeFields,fields};}
__exports.getFieldContext=getFieldContext;function getFieldContext(record,fieldName,rawContext=record.activeFields[fieldName].context){const context={};for(const key in record.context){if(!key.startsWith("default_")&&!key.startsWith("search_default_")&&!key.endsWith("_view_ref")){context[key]=record.context[key];}}
return{...context,...record.fields[fieldName].context,...makeContext([rawContext],record.evalContext),};}
__exports.getFieldDomain=getFieldDomain;function getFieldDomain(record,fieldName,domain){if(typeof domain==="function"){domain=domain();domain=typeof domain==="function"?domain():domain;}
if(domain){return domain;}
domain=record.fields[fieldName].domain;return typeof domain==="string"?new Domain(evaluateExpr(domain,record.evalContext)).toList():domain||[];}
__exports.getBasicEvalContext=getBasicEvalContext;function getBasicEvalContext(config){const{uid,allowed_company_ids}=config.context;return{context:config.context,uid,allowed_company_ids,current_company_id:config.currentCompanyId,};}
function getFieldContextForSpec(activeFields,fields,fieldName,evalContext){let context=activeFields[fieldName].context;if(!context||context==="{}"){context=fields[fieldName].context||{};}else{context=evalPartialContext(context,evalContext);}
if(Object.keys(context).length>0){return context;}}
__exports.getFieldsSpec=getFieldsSpec;function getFieldsSpec(activeFields,fields,evalContext,{withInvisible}={}){const fieldsSpec={};const properties=[];for(const fieldName in activeFields){if(fields[fieldName].relatedPropertyField){continue;}
const{related,limit,defaultOrderBy,invisible}=activeFields[fieldName];const isAlwaysInvisible=invisible==="True"||invisible==="1";fieldsSpec[fieldName]={};switch(fields[fieldName].type){case"one2many":case"many2many":{if(related&&(withInvisible||!isAlwaysInvisible)){fieldsSpec[fieldName].fields=getFieldsSpec(related.activeFields,related.fields,evalContext,{withInvisible});fieldsSpec[fieldName].context=getFieldContextForSpec(activeFields,fields,fieldName,evalContext);fieldsSpec[fieldName].limit=limit;if(defaultOrderBy){fieldsSpec[fieldName].order=orderByToString(defaultOrderBy);}}
break;}
case"many2one":case"reference":{fieldsSpec[fieldName].fields={};if(!isAlwaysInvisible){fieldsSpec[fieldName].fields.display_name={};fieldsSpec[fieldName].context=getFieldContextForSpec(activeFields,fields,fieldName,evalContext);}
break;}
case"many2one_reference":{if(related&&!isAlwaysInvisible){fieldsSpec[fieldName].fields=getFieldsSpec(related.activeFields,related.fields,evalContext);fieldsSpec[fieldName].context=getFieldContextForSpec(activeFields,fields,fieldName,evalContext);}
break;}
case"properties":{properties.push(fieldName);break;}}}
for(const fieldName of properties){const fieldSpec=fieldsSpec[fields[fieldName].definition_record];if(fieldSpec){if(!fieldSpec.fields){fieldSpec.fields={};}
fieldSpec.fields.display_name={};}}
return fieldsSpec;}
let nextId=0;__exports.getId=getId;function getId(prefix=""){return`${prefix}_${++nextId}`;}
__exports.parseServerValue=parseServerValue;function parseServerValue(field,value){switch(field.type){case"char":case"text":{return value||"";}
case"html":{return markup(value||"");}
case"date":{return value?deserializeDate(value):false;}
case"datetime":{return value?deserializeDateTime(value):false;}
case"selection":{if(value===false){const hasKey0=field.selection.find((option)=>option[0]===0);return hasKey0?0:value;}
return value;}
case"reference":{if(value===false){return false;}
return{resId:value.id.id,resModel:value.id.model,displayName:value.display_name,};}
case"many2one_reference":{if(value===0){return false;}
if(typeof value==="number"){return{resId:value};}
return{resId:value.id,displayName:value.display_name,};}
case"many2one":{if(Array.isArray(value)){return value;}
return value?[value.id,value.display_name]:false;}
case"properties":{return value?value.map((property)=>({...property,value:parseServerValue(property,property.value??false),})):[];}}
return value;}
__exports.extractInfoFromGroupData=extractInfoFromGroupData;function extractInfoFromGroupData(groupData,groupBy,fields){const info={};const groupByField=fields[groupBy[0].split(":")[0]];info.count=groupData.__count||groupData[`${groupByField.name}_count`];info.length=info.count;info.range=groupData.__range?groupData.__range[groupBy[0]]:null;info.domain=groupData.__domain;info.rawValue=groupData[groupBy[0]];info.value=getValueFromGroupData(groupByField,info.rawValue,info.range);info.displayName=getDisplayNameFromGroupData(groupByField,info.rawValue);info.serverValue=getGroupServerValue(groupByField,info.value);info.aggregates=getAggregatesFromGroupData(groupData,fields);return info;}
function getAggregatesFromGroupData(groupData,fields){const aggregates={};for(const[key,value]of Object.entries(groupData)){if(key in fields&&AGGREGATABLE_FIELD_TYPES.includes(fields[key].type)){aggregates[key]=value;}}
return aggregates;}
function getDisplayNameFromGroupData(field,rawValue){if(field.type==="selection"){return Object.fromEntries(field.selection)[rawValue];}
if(["many2one","many2many","tags"].includes(field.type)){return rawValue?rawValue[1]:false;}
return rawValue;}
__exports.getGroupServerValue=getGroupServerValue;function getGroupServerValue(field,value){switch(field.type){case"many2many":{return value?[value]:false;}
case"datetime":{return value?serializeDateTime(value):false;}
case"date":{return value?serializeDate(value):false;}
default:{return value||false;}}}
function getValueFromGroupData(field,rawValue,range){if(["date","datetime"].includes(field.type)){if(!range){return false;}
const dateValue=parseServerValue(field,range.to);return dateValue.minus({[field.type==="date"?"day":"second"]:1,});}
const value=parseServerValue(field,rawValue);if(["many2one","many2many"].includes(field.type)){return value?value[0]:false;}
return value;}
__exports.fromUnityToServerValues=fromUnityToServerValues;function fromUnityToServerValues(values,fields,activeFields,{withReadonly,context}={}){const{CREATE,UPDATE}=x2ManyCommands;const serverValues={};for(const fieldName in values){let value=values[fieldName];const field=fields[fieldName];const activeField=activeFields[fieldName];if(!withReadonly){if(field.readonly){continue;}
try{if(evaluateExpr(activeField.readonly,context)){continue;}}catch{}}
switch(fields[fieldName].type){case"one2many":case"many2many":value=value.map((c)=>{if(c[0]===CREATE||c[0]===UPDATE){const _fields=activeField.related.fields;const _activeFields=activeField.related.activeFields;return[c[0],c[1],fromUnityToServerValues(c[2],_fields,_activeFields,{withReadonly}),];}
return[c[0],c[1]];});break;case"many2one":value=value?value.id:false;break;}
serverValues[fieldName]=value;}
return serverValues;}
__exports.isRelational=isRelational;function isRelational(field){return field&&["one2many","many2many","many2one"].includes(field.type);}
__exports.useRecordObserver=useRecordObserver;function useRecordObserver(callback){const component=useComponent();let alive=true;let props=component.props;const fct=()=>{const def=new Deferred();let firstCall=true;effect((record)=>{if(firstCall){firstCall=false;return Promise.resolve(callback(record,props)).then(def.resolve).catch(def.reject);}else{return batched((record)=>{if(!alive){return;}
return Promise.resolve(callback(record,props)).then(def.resolve).catch(def.reject);},()=>new Promise((resolve)=>window.requestAnimationFrame(resolve)))(record);}},[props.record]);return def;};onWillDestroy(()=>{alive=false;});onWillStart(()=>fct());onWillUpdateProps((nextProps)=>{const currentRecordId=props.record.id;props=nextProps;if(props.record.id!==currentRecordId){return fct();}});}
__exports.resequence=resequence;async function resequence({records,resModel,orm,fieldName,movedId,targetId,asc=true,getSequence=(record)=>record[fieldName],getResId=(record)=>record.id,context,}){const fromIndex=records.findIndex((d)=>d.id===movedId);let toIndex=0;if(targetId!==null){const targetIndex=records.findIndex((d)=>d.id===targetId);toIndex=fromIndex>targetIndex?targetIndex+1:targetIndex;}
const firstIndex=Math.min(fromIndex,toIndex);const lastIndex=Math.max(fromIndex,toIndex)+1;let reorderAll=records.some((record)=>getSequence(record)===undefined);if(!reorderAll){let lastSequence=(asc?-1:1)*Infinity;for(let index=0;index<records.length;index++){const sequence=getSequence(records[index]);if((asc&&lastSequence>=sequence)||(!asc&&lastSequence<=sequence)){reorderAll=true;break;}
lastSequence=sequence;}}
const originalOrder=[...records];const record=records[fromIndex];if(fromIndex!==toIndex){records.splice(fromIndex,1);records.splice(toIndex,0,record);}
let toReorder=records;if(!reorderAll){toReorder=toReorder.slice(firstIndex,lastIndex).filter((r)=>r.id!==movedId);if(fromIndex<toIndex){toReorder.push(record);}else{toReorder.unshift(record);}}
if(!asc){toReorder.reverse();}
const resIds=toReorder.map((d)=>getResId(d)).filter((id)=>id&&!isNaN(id));const sequences=toReorder.map(getSequence);const offset=sequences.length&&Math.min(...sequences);const params={model:resModel,ids:resIds,context:context,field:fieldName,};if(offset){params.offset=offset;}
try{const wasResequenced=await rpc("/web/dataset/resequence",params);if(!wasResequenced){return;}}catch(error){records.splice(0,records.length,...originalOrder);throw error;}
const kwargs={context};return orm.read(resModel,resIds,[fieldName],kwargs);}
return __exports;});;

/* /web/static/src/model/sample_server.js */
odoo.define('@web/model/sample_server',['@web/core/l10n/dates','@web/core/orm_service','@web/core/registry','@web/core/utils/arrays','@web/model/relational_model/utils'],function(require){'use strict';let __exports={};const{deserializeDate,deserializeDateTime,parseDate,serializeDate,serializeDateTime,}=require("@web/core/l10n/dates");const{ORM}=require("@web/core/orm_service");const{registry}=require("@web/core/registry");const{cartesian,sortBy:arraySortBy}=require("@web/core/utils/arrays");const{parseServerValue}=require("@web/model/relational_model/utils");class UnimplementedRouteError extends Error{}
let searchReadNumber=0;function getSampleFromId(id,sampleTexts){return sampleTexts[(id-1)%sampleTexts.length];}
function serializeGroupDateValue(range,field){if(!range){return false;}
let dateValue=parseServerValue(field,range.to);dateValue=dateValue.minus({[field.type==="date"?"day":"second"]:1,});return field.type==="date"?serializeDate(dateValue):serializeDateTime(dateValue);}
function fieldNameRegex(...terms){return new RegExp(`\\b((\\w+)?_)?(${terms.join("|")})(_(\\w+)?)?\\b`);}
const MEASURE_SPEC_REGEX=/(?<measure>\w+):(?<aggregateFunction>\w+)(\((?<fieldName>\w+)\))?/;const DESCRIPTION_REGEX=fieldNameRegex("description","label","title","subject","message");const EMAIL_REGEX=fieldNameRegex("email");const PHONE_REGEX=fieldNameRegex("phone");const URL_REGEX=fieldNameRegex("url");const SampleServer=__exports.SampleServer=class SampleServer{constructor(modelName,fields){this.mainModel=modelName;this.data={};this.data[modelName]={fields,records:[],};for(const fieldName in fields){const field=fields[fieldName];if(["many2one","one2many","many2many"].includes(field.type)){this.data[field.relation]=this.data[field.relation]||{fields:{display_name:{type:"char"},id:{type:"integer"},color:{type:"integer"},},records:[],};}}
this.existingGroups=null;this.populated=false;this.existingGroupsPopulated=false;}
mockRpc(params){if(!(params.model in this.data)){throw new Error(`SampleServer: unknown model ${params.model}`);}
this._populateModels();switch(params.method||params.route){case"web_search_read":return this._mockWebSearchReadUnity(params);case"web_read_group":return this._mockWebReadGroup(params);case"read_group":return this._mockReadGroup(params);case"read_progress_bar":return this._mockReadProgressBar(params);case"read":return this._mockRead(params);}
const method=params.method||params.route;const mockFunction=registry.category("sample_server").get(`${params.model}/${method}`,null)||registry.category("sample_server").get(method,null);if(mockFunction){return mockFunction.call(this,params);}
console.log(`SampleServer: unimplemented route "${params.method || params.route}"`);throw new SampleServer.UnimplementedRouteError();}
setExistingGroups(groups){this.existingGroups=groups;}
_aggregateFields(measures,records){const values={};for(const{fieldName,type,aggregateFunction}of measures){if(["float","integer","monetary"].includes(type)){if(aggregateFunction==="array_agg"){values[fieldName]=(records||[]).map((r)=>r[fieldName]);}else if(records.length){let value=0;for(const record of records){value+=record[fieldName];}
values[fieldName]=this._sanitizeNumber(value);}else{values[fieldName]=null;}}
if(type==="many2one"){const ids=new Set(records.map((r)=>r[fieldName]));values.fieldName=ids.size||null;}}
return values;}
_formatValue(value,options){if(!value){return false;}
const{type,interval,relation}=options;if(["date","datetime"].includes(type)){const fmt=SampleServer.FORMATS[interval];return parseDate(value).toFormat(fmt);}else if(["many2one","many2many"].includes(type)){const rec=this.data[relation].records.find(({id})=>id===value);return[value,rec.display_name];}else{return value;}}
_generateFieldValue(modelName,fieldName,id){const field=this.data[modelName].fields[fieldName];switch(field.type){case"boolean":return fieldName==="active"?true:this._getRandomBool();case"char":case"text":if(["display_name","name"].includes(fieldName)){if(SampleServer.PEOPLE_MODELS.includes(modelName)){return getSampleFromId(id,SampleServer.SAMPLE_PEOPLE);}else if(modelName==="res.country"){return getSampleFromId(id,SampleServer.SAMPLE_COUNTRIES);}}
if(fieldName==="display_name"){return getSampleFromId(id,SampleServer.SAMPLE_TEXTS);}else if(["name","reference"].includes(fieldName)){return`REF${String(id).padStart(4, "0")}`;}else if(DESCRIPTION_REGEX.test(fieldName)){return getSampleFromId(id,SampleServer.SAMPLE_TEXTS);}else if(EMAIL_REGEX.test(fieldName)){const emailName=getSampleFromId(id,SampleServer.SAMPLE_PEOPLE).replace(/ /,".").toLowerCase();return`${emailName}@sample.demo`;}else if(PHONE_REGEX.test(fieldName)){return`+1 555 754 ${String(id).padStart(4, "0")}`;}else if(URL_REGEX.test(fieldName)){return`http://sample${id}.com`;}
return false;case"date":case"datetime":{const datetime=this._getRandomDate();return field.type==="date"?serializeDate(datetime):serializeDateTime(datetime);}
case"float":return this._getRandomFloat(SampleServer.MAX_FLOAT);case"integer":{let max=SampleServer.MAX_INTEGER;if(fieldName.includes("color")){max=this._getRandomBool()?SampleServer.MAX_COLOR_INT:0;}
return this._getRandomInt(max);}
case"monetary":return this._getRandomInt(SampleServer.MAX_MONETARY);case"many2one":if(field.relation==="res.currency"){return 1;}
if(field.relation==="ir.attachment"){return false;}
return this._getRandomSubRecordId();case"one2many":case"many2many":{const ids=[this._getRandomSubRecordId(),this._getRandomSubRecordId()];return[...new Set(ids)];}
case"selection":{return this._getRandomSelectionValue(modelName,field);}
default:return false;}}
_getRandomArrayEl(array){return array[Math.floor(Math.random()*array.length)];}
_getRandomBool(){return Math.random()<0.5;}
_getRandomDate(){const delta=Math.floor((Math.random()-Math.random())*SampleServer.DATE_DELTA);return luxon.DateTime.local().plus({hours:delta});}
_getRandomFloat(max){return this._sanitizeNumber(Math.random()*max);}
_getRandomInt(max){return Math.floor(Math.random()*max);}
_getRandomSelectionValue(modelName,field){if(field.selection.length>0){return this._getRandomArrayEl(field.selection)[0];}
return false;}
_getRandomSubRecordId(){return Math.floor(Math.random()*SampleServer.SUB_RECORDSET_SIZE)+1;}
_mockRead(params){const model=this.data[params.model];const ids=params.args[0];const fieldNames=params.args[1];const records=[];for(const r of model.records){if(!ids.includes(r.id)){continue;}
const record={id:r.id};for(const fieldName of fieldNames){const field=model.fields[fieldName];if(!field){record[fieldName]=false;}else if(field.type==="many2one"){const relModel=this.data[field.relation];const relRecord=relModel.records.find((relR)=>r[fieldName]===relR.id);record[fieldName]=relRecord?[relRecord.id,relRecord.display_name]:false;}else{record[fieldName]=r[fieldName];}}
records.push(record);}
return records;}
_mockReadGroup(params){const lazy="lazy"in params?params.lazy:true;const model=params.model;const fields=this.data[model].fields;const records=this.data[model].records;const normalizedGroupBys=[];let groupBy=[];if(params.groupBy.length){groupBy=lazy?[params.groupBy[0]]:params.groupBy;}
for(const groupBySpec of groupBy){let[fieldName,interval]=groupBySpec.split(":");interval=interval||"month";const{type,relation}=fields[fieldName];if(type){const gb={fieldName,type,interval,relation,alias:groupBySpec};normalizedGroupBys.push(gb);}}
const groupsFromRecord=(record)=>{const values=[];for(const gb of normalizedGroupBys){const{fieldName,type}=gb;let fieldVals;if(["date","datetime"].includes(type)){fieldVals=[this._formatValue(record[fieldName],gb)];}else if(type==="many2many"){fieldVals=record[fieldName].length?record[fieldName]:[false];}else{fieldVals=[record[fieldName]];}
values.push(fieldVals.map((val)=>({[fieldName]:val})));}
const cart=cartesian(...values);return cart.map((tuple)=>{if(!Array.isArray(tuple)){tuple=[tuple];}
return Object.assign({},...tuple);});};const groups={};for(const record of records){const recordGroups=groupsFromRecord(record);for(const group of recordGroups){const groupId=JSON.stringify(group);if(!(groupId in groups)){groups[groupId]=[];}
groups[groupId].push(record);}}
const measures=[];for(const measureSpec of params.fields||Object.keys(fields)){const matches=measureSpec.match(MEASURE_SPEC_REGEX);let{fieldName,aggregateFunction,measure}=(matches&&matches.groups)||{};if(!aggregateFunction&&fieldName in fields&&fields[fieldName].aggregator){aggregateFunction=fields[fieldName].aggregator;measure=fieldName;}
if(!fieldName&&!measure){continue;}
const fName=fieldName||measure;const{type}=fields[fName];if(!params.groupBy.includes(fName)&&type&&(type!=="many2one"||aggregateFunction!=="count_distinct")){measures.push({fieldName:fName,type,aggregateFunction});}}
let result=[];for(const id in groups){const records=groups[id];const group={__domain:[]};let countKey=`__count`;if(normalizedGroupBys.length&&lazy){countKey=`${normalizedGroupBys[0].fieldName}_count`;}
group[countKey]=records.length;const firstElem=records[0];const parsedId=JSON.parse(id);for(const gb of normalizedGroupBys){const{alias,fieldName,type}=gb;if(type==="many2many"){group[alias]=this._formatValue(parsedId[fieldName],gb);}else{group[alias]=this._formatValue(firstElem[fieldName],gb);if(["date","datetime"].includes(type)){group.__range={};const val=firstElem[fieldName];if(val){const deserialize=type==="date"?deserializeDate:deserializeDateTime;const serialize=type==="date"?serializeDate:serializeDateTime;const from=deserialize(val).startOf(gb.interval);const to=SampleServer.INTERVALS[gb.interval](from);group.__range[alias]={from:serialize(from),to:serialize(to)};}else{group.__range[alias]=false;}}}}
Object.assign(group,this._aggregateFields(measures,records));result.push(group);}
if(normalizedGroupBys.length>0){const{alias,interval,type}=normalizedGroupBys[0];result=arraySortBy(result,(group)=>{const val=group[alias];if(["date","datetime"].includes(type)){return parseDate(val,{format:SampleServer.FORMATS[interval]});}
return val;});}
return result;}
_mockReadProgressBar(params){const groupBy=params.group_by.split(":")[0];const progress_bar=params.progress_bar;const groupByField=this.data[params.model].fields[groupBy];const data={};for(const record of this.data[params.model].records){let groupByValue=record[groupBy];if(groupByField.type==="many2one"){const relatedRecords=this.data[groupByField.relation].records;const relatedRecord=relatedRecords.find((r)=>r.id===groupByValue);groupByValue=relatedRecord.display_name;}
if(!(groupByValue in data)){if(groupByValue===true){groupByValue="True";}else if(groupByValue===false){groupByValue="False";}}
if(!(groupByValue in data)){data[groupByValue]={};for(const key in progress_bar.colors){data[groupByValue][key]=0;}}
const fieldValue=record[progress_bar.field];if(fieldValue in data[groupByValue]){data[groupByValue][fieldValue]++;}}
return data;}
_mockWebSearchReadUnity(params){const fields=Object.keys(params.specification);let result;if(this.existingGroups){const groups=this.existingGroups;const group=groups[searchReadNumber++%groups.length];result={records:this._mockRead({model:params.model,args:[group.__recordIds,fields],}),length:group.__recordIds.length,};}else{const model=this.data[params.model];const rawRecords=model.records.slice(0,SampleServer.SEARCH_READ_LIMIT);const records=this._mockRead({model:params.model,args:[rawRecords.map((r)=>r.id),fields],});result={records,length:records.length};}
for(const fieldName in params.specification){const field=this.data[params.model].fields[fieldName];if(field.type==="many2one"){for(const record of result.records){record[fieldName]=record[fieldName]?{id:record[fieldName][0],display_name:record[fieldName][1],}:false;}}
if(field.type==="one2many"||field.type==="many2many"){const relFields=Object.keys(params.specification[fieldName].fields||{});if(relFields.length){const relIds=result.records.map((r)=>r[fieldName]).flat();const relRecords={};const _relRecords=this._mockRead({model:field.relation,args:[relIds,relFields],});for(const relRecord of _relRecords){relRecords[relRecord.id]=relRecord;}
for(const record of result.records){record[fieldName]=record[fieldName].map((resId)=>relRecords[resId]);}}}}
return result;}
_mockWebReadGroup(params){let groups;if(this.existingGroups){this._tweakExistingGroups(params);groups=this.existingGroups;}else{groups=this._mockReadGroup(params);}
return{groups,length:groups.length,};}
_populateExistingGroups(params){const groups=this.existingGroups;const groupBy=params.groupBy[0].split(":")[0];const groupByField=this.data[params.model].fields[groupBy];const groupedByM2O=groupByField.type==="many2one";if(groupedByM2O){this.data[groupByField.relation].records=groups.map((g)=>{return{id:g[groupBy][0],display_name:g[groupBy][1]};});}
for(const r of this.data[params.model].records){const group=getSampleFromId(r.id,groups);if(["date","datetime"].includes(groupByField.type)){r[groupBy]=serializeGroupDateValue(group.__range[params.groupBy[0]],groupByField);}else if(groupByField.type==="many2one"){r[groupBy]=group[params.groupBy[0]]?group[params.groupBy[0]][0]:false;}else{r[groupBy]=group[params.groupBy[0]];}}}
_populateModels(){if(!this.populated){for(const modelName in this.data){const model=this.data[modelName];const fieldNames=Object.keys(model.fields).filter((f)=>f!=="id");const size=modelName===this.mainModel?SampleServer.MAIN_RECORDSET_SIZE:SampleServer.SUB_RECORDSET_SIZE;for(let id=1;id<=size;id++){const record={id};for(const fieldName of fieldNames){record[fieldName]=this._generateFieldValue(modelName,fieldName,id);}
model.records.push(record);}}
this.populated=true;}}
_sanitizeNumber(value){return parseFloat(value.toFixed(SampleServer.FLOAT_PRECISION));}
_tweakExistingGroups(params){const groups=this.existingGroups;this._populateExistingGroups(params);const fullGroupBy=params.groupBy[0];const groupBy=fullGroupBy.split(":")[0];const groupByField=this.data[params.model].fields[groupBy];const records=this.data[params.model].records;const fields=params.fields.map((aggregate_spec)=>aggregate_spec.split(":")[0])
for(const g of groups){const recordsInGroup=records.filter((r)=>{if(["date","datetime"].includes(groupByField.type)){return(r[groupBy]===serializeGroupDateValue(g.__range[fullGroupBy],groupByField));}else if(groupByField.type==="many2one"){return(!r[groupBy]&&!g[fullGroupBy])||r[groupBy]===g[fullGroupBy][0];}
return r[groupBy]===g[fullGroupBy];});for(const field of fields){const fieldType=this.data[params.model].fields[field].type;if(["integer, float","monetary"].includes(fieldType)){g[field]=recordsInGroup.reduce((acc,r)=>acc+r[field],0);}}
g[`${groupBy}_count`]=recordsInGroup.length;g.__recordIds=recordsInGroup.map((r)=>r.id);}}}
SampleServer.FORMATS={day:"yyyy-MM-dd",week:"'W'WW kkkk",month:"MMMM yyyy",quarter:"'Q'q yyyy",year:"y",};SampleServer.INTERVALS={day:(dt)=>dt.plus({days:1}),week:(dt)=>dt.plus({weeks:1}),month:(dt)=>dt.plus({months:1}),quarter:(dt)=>dt.plus({months:3}),year:(dt)=>dt.plus({years:1}),};SampleServer.DISPLAY_FORMATS=Object.assign({},SampleServer.FORMATS,{day:"dd MMM yyyy"});SampleServer.MAIN_RECORDSET_SIZE=16;SampleServer.SUB_RECORDSET_SIZE=5;SampleServer.SEARCH_READ_LIMIT=10;SampleServer.MAX_FLOAT=100;SampleServer.MAX_INTEGER=50;SampleServer.MAX_COLOR_INT=7;SampleServer.MAX_MONETARY=100000;SampleServer.DATE_DELTA=24*60;SampleServer.FLOAT_PRECISION=2;SampleServer.SAMPLE_COUNTRIES=["Belgium","France","Portugal","Singapore","Australia"];SampleServer.SAMPLE_PEOPLE=["John Miller","Henry Campbell","Carrie Helle","Wendi Baltz","Thomas Passot",];SampleServer.SAMPLE_TEXTS=["Laoreet id","Volutpat blandit","Integer vitae","Viverra nam","In massa",];SampleServer.PEOPLE_MODELS=["res.users","res.partner","hr.employee","mail.followers","mailing.contact",];SampleServer.UnimplementedRouteError=UnimplementedRouteError;__exports.buildSampleORM=buildSampleORM;function buildSampleORM(resModel,fields,user){const sampleServer=new SampleServer(resModel,fields);const fakeRPC=async(_,params)=>{const{args,kwargs,method,model}=params;const{groupby:groupBy}=kwargs;return sampleServer.mockRpc({method,model,args,...kwargs,groupBy});};const sampleORM=new ORM(user);sampleORM.rpc=fakeRPC;sampleORM.isSample=true;sampleORM.setGroups=(groups)=>sampleServer.setExistingGroups(groups);return sampleORM;}
return __exports;});;

/* /web/static/src/views/calendar/calendar_arch_parser.js */
odoo.define('@web/views/calendar/calendar_arch_parser',['@web/core/browser/browser','@web/core/py_js/py','@web/core/utils/strings','@web/core/utils/xml','@web/views/fields/field'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{evaluateExpr}=require("@web/core/py_js/py");const{exprToBoolean}=require("@web/core/utils/strings");const{visitXML}=require("@web/core/utils/xml");const{Field}=require("@web/views/fields/field");const FIELD_ATTRIBUTE_NAMES=["date_start","date_delay","date_stop","all_day","recurrence_update","create_name_field","color",];const SCALES=["day","week","month","year"];const CalendarParseArchError=__exports.CalendarParseArchError=class CalendarParseArchError extends Error{}
const CalendarArchParser=__exports.CalendarArchParser=class CalendarArchParser{parse(arch,models,modelName){const fields=models[modelName].fields;const fieldNames=new Set(fields.display_name?["display_name"]:[]);const fieldMapping={date_start:"date_start"};let jsClass=null;let eventLimit=5;let scales=[...SCALES];const sessionScale=browser.sessionStorage.getItem("calendar-scale");let scale=sessionScale||"week";let canCreate=true;let canDelete=true;let canEdit=true;let quickCreate=true;let quickCreateViewId=null;let hasEditDialog=false;let showUnusualDays=false;let isDateHidden=false;let isTimeHidden=false;let formViewId=false;const popoverFieldNodes={};const filtersInfo={};visitXML(arch,(node)=>{switch(node.tagName){case"calendar":{if(!node.hasAttribute("date_start")){throw new CalendarParseArchError(`Calendar view has not defined "date_start" attribute.`);}
jsClass=node.getAttribute("js_class");for(const fieldAttrName of FIELD_ATTRIBUTE_NAMES){if(node.hasAttribute(fieldAttrName)){const fieldName=node.getAttribute(fieldAttrName);fieldNames.add(fieldName);fieldMapping[fieldAttrName]=fieldName;}}
if(node.hasAttribute("event_limit")){eventLimit=evaluateExpr(node.getAttribute("event_limit"));if(!Number.isInteger(eventLimit)){throw new CalendarParseArchError(`Calendar view's event limit should be a number`);}}
if(node.hasAttribute("scales")){const scalesAttr=node.getAttribute("scales");scales=scalesAttr.split(",").filter((scale)=>SCALES.includes(scale));}
if(node.hasAttribute("mode")){scale=node.getAttribute("mode");if(!scales.includes(scale)){throw new CalendarParseArchError(`Calendar view cannot display mode: ${scale}`);}}
if(node.hasAttribute("create")){canCreate=exprToBoolean(node.getAttribute("create"),true);}
if(node.hasAttribute("delete")){canDelete=exprToBoolean(node.getAttribute("delete"),true);}
if(node.hasAttribute("edit")){canEdit=exprToBoolean(node.getAttribute("edit"),true);}
if(node.hasAttribute("quick_create")){quickCreate=exprToBoolean(node.getAttribute("quick_create"),true);if(quickCreate&&node.hasAttribute("quick_create_view_id")){quickCreateViewId=parseInt(node.getAttribute("quick_create_view_id"),10);}}
if(node.hasAttribute("event_open_popup")){hasEditDialog=exprToBoolean(node.getAttribute("event_open_popup"));}
if(node.hasAttribute("show_unusual_days")){showUnusualDays=exprToBoolean(node.getAttribute("show_unusual_days"));}
if(node.hasAttribute("hide_date")){isDateHidden=exprToBoolean(node.getAttribute("hide_date"));}
if(node.hasAttribute("hide_time")){isTimeHidden=exprToBoolean(node.getAttribute("hide_time"));}
if(node.hasAttribute("form_view_id")){formViewId=parseInt(node.getAttribute("form_view_id"),10);}
break;}
case"field":{const fieldName=node.getAttribute("name");fieldNames.add(fieldName);const fieldInfo=Field.parseFieldNode(node,models,modelName,"calendar",jsClass);popoverFieldNodes[fieldName]=fieldInfo;const field=fields[fieldName];if(!node.hasAttribute("invisible")||node.hasAttribute("filters")){let filterInfo=null;if(node.hasAttribute("avatar_field")||node.hasAttribute("write_model")||node.hasAttribute("write_field")||node.hasAttribute("color")||node.hasAttribute("filters")){filtersInfo[fieldName]=filtersInfo[fieldName]||{avatarFieldName:null,colorFieldName:null,fieldName,filterFieldName:null,label:field.string,resModel:field.relation,writeFieldName:null,writeResModel:null,};filterInfo=filtersInfo[fieldName];}
if(node.hasAttribute("filter_field")){filterInfo.filterFieldName=node.getAttribute("filter_field");}
if(node.hasAttribute("avatar_field")){filterInfo.avatarFieldName=node.getAttribute("avatar_field");}
if(node.hasAttribute("write_model")){filterInfo.writeResModel=node.getAttribute("write_model");}
if(node.hasAttribute("write_field")){filterInfo.writeFieldName=node.getAttribute("write_field");}
if(node.hasAttribute("filters")){if(node.hasAttribute("color")){filterInfo.colorFieldName=node.getAttribute("color");}
if(node.hasAttribute("avatar_field")&&field.relation){if(field.relation.includes(["res.users","res.partners","hr.employee",])){filterInfo.avatarFieldName="image_128";}}}}
break;}}});return{canCreate,canDelete,canEdit,eventLimit,fieldMapping,fieldNames:[...fieldNames],filtersInfo,formViewId,hasEditDialog,quickCreate,quickCreateViewId,isDateHidden,isTimeHidden,popoverFieldNodes,scale,scales,showUnusualDays,};}}
return __exports;});;

/* /web/static/src/views/calendar/calendar_common/calendar_common_popover.js */
odoo.define('@web/views/calendar/calendar_common/calendar_common_popover',['@web/core/l10n/translation','@web/core/dialog/dialog','@web/core/py_js/py','@web/core/l10n/dates','@web/core/registry','@web/views/fields/field','@web/model/record','@web/views/calendar/utils','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{Dialog}=require("@web/core/dialog/dialog");const{evaluateBooleanExpr}=require("@web/core/py_js/py");const{is24HourFormat}=require("@web/core/l10n/dates");const{registry}=require("@web/core/registry");const{Field}=require("@web/views/fields/field");const{Record}=require("@web/model/record");const{getFormattedDateSpan}=require("@web/views/calendar/utils");const{Component,useExternalListener}=require("@odoo/owl");const CalendarCommonPopover=__exports.CalendarCommonPopover=class CalendarCommonPopover extends Component{static template="web.CalendarCommonPopover";static subTemplates={popover:"web.CalendarCommonPopover.popover",body:"web.CalendarCommonPopover.body",footer:"web.CalendarCommonPopover.footer",};static components={Dialog,Field,Record,};static props={close:Function,record:Object,model:Object,createRecord:Function,deleteRecord:Function,editRecord:Function,};setup(){this.time=null;this.timeDuration=null;this.date=null;this.dateDuration=null;useExternalListener(window,"pointerdown",(e)=>e.preventDefault(),{capture:true});this.computeDateTimeAndDuration();}
get activeFields(){return this.props.model.activeFields;}
get isEventEditable(){return true;}
get isEventDeletable(){return this.props.model.canDelete;}
get hasFooter(){return this.isEventEditable||this.isEventDeletable;}
isInvisible(fieldNode,record){return evaluateBooleanExpr(fieldNode.invisible,record.evalContextWithVirtualIds);}
getFormattedValue(fieldName,record){const fieldInfo=this.props.model.popoverFieldNodes[fieldName];const field=this.props.model.fields[fieldName];let format;const formattersRegistry=registry.category("formatters");if(fieldInfo.widget&&formattersRegistry.contains(fieldInfo.widget)){format=formattersRegistry.get(fieldInfo.widget);}else{format=formattersRegistry.get(field.type);}
return format(record.data[fieldName]);}
computeDateTimeAndDuration(){const record=this.props.record;const{start,end}=record;const isSameDay=start.hasSame(end,"day");if(!record.isTimeHidden&&!record.isAllDay&&isSameDay){const timeFormat=is24HourFormat()?"HH:mm":"hh:mm a";this.time=`${start.toFormat(timeFormat)} - ${end.toFormat(timeFormat)}`;const duration=end.diff(start,["hours","minutes"]);const formatParts=[];if(duration.hours>0){const hourString=duration.hours===1?_t("hour"):_t("hours");formatParts.push(`h '${hourString}'`);}
if(duration.minutes>0){const minuteStr=duration.minutes===1?_t("minute"):_t("minutes");formatParts.push(`m '${minuteStr}'`);}
this.timeDuration=duration.toFormat(formatParts.join(", "));}
if(!this.props.model.isDateHidden){this.date=getFormattedDateSpan(start,end);if(record.isAllDay){if(isSameDay){this.dateDuration=_t("All day");}else{const duration=end.plus({day:1}).diff(start,"days");this.dateDuration=duration.toFormat(`d '${_t("days")}'`);}}}}
onEditEvent(){this.props.editRecord(this.props.record);this.props.close();}
onDeleteEvent(){this.props.deleteRecord(this.props.record);this.props.close();}}
return __exports;});;

/* /web/static/src/views/calendar/calendar_common/calendar_common_renderer.js */
odoo.define('@web/views/calendar/calendar_common/calendar_common_renderer',['@web/core/l10n/dates','@web/core/l10n/localization','@web/core/utils/render','@web/views/calendar/colors','@web/views/calendar/hooks','@web/views/calendar/calendar_common/calendar_common_popover','@web/views/calendar/calendar_common/calendar_common_week_column','@odoo/owl','@web/core/utils/hooks'],function(require){'use strict';let __exports={};const{getLocalWeekNumber,is24HourFormat}=require("@web/core/l10n/dates");const{localization}=require("@web/core/l10n/localization");const{renderToString}=require("@web/core/utils/render");const{getColor}=require("@web/views/calendar/colors");const{useCalendarPopover,useClickHandler,useFullCalendar}=require("@web/views/calendar/hooks");const{CalendarCommonPopover}=require("@web/views/calendar/calendar_common/calendar_common_popover");const{makeWeekColumn}=require("@web/views/calendar/calendar_common/calendar_common_week_column");const{Component}=require("@odoo/owl");const{useBus}=require("@web/core/utils/hooks");const SCALE_TO_FC_VIEW={day:"timeGridDay",week:"timeGridWeek",month:"dayGridMonth",};const SCALE_TO_HEADER_FORMAT={day:"DDD",week:"EEE d",month:"EEEE",};const SHORT_SCALE_TO_HEADER_FORMAT={...SCALE_TO_HEADER_FORMAT,day:"D",month:"EEE",};const HOUR_FORMATS={12:{hour:"numeric",minute:"2-digit",omitZeroMinute:true,meridiem:"short",},24:{hour:"numeric",minute:"2-digit",hour12:false,},};const{DateTime}=luxon;const CalendarCommonRenderer=__exports.CalendarCommonRenderer=class CalendarCommonRenderer extends Component{static components={Popover:CalendarCommonPopover,};static template="web.CalendarCommonRenderer";static eventTemplate="web.CalendarCommonRenderer.event";static headerTemplate="web.CalendarCommonRendererHeader";static props={model:Object,displayName:{type:String,optional:true},isWeekendVisible:{type:Boolean,optional:true},createRecord:Function,editRecord:Function,deleteRecord:Function,setDate:{type:Function,optional:true},};setup(){this.fc=useFullCalendar("fullCalendar",this.options);this.click=useClickHandler(this.onClick,this.onDblClick);this.popover=useCalendarPopover(this.constructor.components.Popover);useBus(this.props.model.bus,"SCROLL_TO_CURRENT_HOUR",()=>this.fc.api.scrollToTime(`${luxon.DateTime.local().hour - 2}:00:00`));}
get options(){return{allDaySlot:true,allDayContent:"",dayHeaderFormat:this.env.isSmall?SHORT_SCALE_TO_HEADER_FORMAT[this.props.model.scale]:SCALE_TO_HEADER_FORMAT[this.props.model.scale],dateClick:this.onDateClick,dayCellClassNames:this.getDayCellClassNames,initialDate:this.props.model.date.toISO(),initialView:SCALE_TO_FC_VIEW[this.props.model.scale],direction:localization.direction,droppable:true,editable:this.props.model.canEdit,eventClick:this.onEventClick,eventDragStart:this.onEventDragStart,eventDrop:this.onEventDrop,dayMaxEventRows:this.props.model.eventLimit,moreLinkClick:this.onEventLimitClick,eventMouseEnter:this.onEventMouseEnter,eventMouseLeave:this.onEventMouseLeave,eventClassNames:this.eventClassNames,eventDidMount:this.onEventDidMount,eventContent:this.onEventContent,eventResizableFromStart:true,eventResize:this.onEventResize,eventResizeStart:this.onEventResizeStart,events:(_,successCb)=>successCb(this.mapRecordsToEvents()),firstDay:this.props.model.firstDayOfWeek,headerToolbar:false,height:"100%",locale:luxon.Settings.defaultLocale,longPressDelay:500,navLinks:false,nowIndicator:true,select:this.onSelect,selectAllow:this.isSelectionAllowed,selectMinDistance:5,selectMirror:true,selectable:this.props.model.canCreate,slotLabelFormat:is24HourFormat()?HOUR_FORMATS[24]:HOUR_FORMATS[12],snapDuration:{minutes:15},timeZone:luxon.Settings.defaultZone.name,unselectAuto:false,weekNumberFormat:{week:this.props.model.scale==="month"||this.env.isSmall?"numeric":"long",},weekends:this.props.isWeekendVisible,weekNumberCalculation:(date)=>getLocalWeekNumber(date),weekNumbers:true,dayHeaderContent:this.getHeaderHtml,eventDisplay:"block",viewDidMount:this.viewDidMount,moreLinkDidMount:this.wrapMoreLink,};}
get customOptions(){return{weekNumbersWithinDays:!this.env.isSmall,};}
viewDidMount({el,view}){const showWeek=view.calendar.currentData.options.weekNumbers;const weekText=view.calendar.currentData.options.weekText;const weekColumn=!this.customOptions.weekNumbersWithinDays;if(showWeek&&weekColumn){makeWeekColumn({el,weekText});}}
getStartTime(record){const timeFormat=is24HourFormat()?"HH:mm":"hh:mm a";return record.start.toFormat(timeFormat);}
getEndTime(record){const timeFormat=is24HourFormat()?"HH:mm":"hh:mm a";return record.end.toFormat(timeFormat);}
computeEventSelector(event){return`[data-event-id="${event.id}"]`;}
highlightEvent(event,className){for(const el of this.fc.el.querySelectorAll(this.computeEventSelector(event))){el.classList.add(className);}}
unhighlightEvent(event,className){for(const el of this.fc.el.querySelectorAll(this.computeEventSelector(event))){el.classList.remove(className);}}
mapRecordsToEvents(){return Object.values(this.props.model.records).map((r)=>this.convertRecordToEvent(r));}
convertRecordToEvent(record){const allDay=record.isAllDay||record.end.diff(record.start,"hours").hours>=24;return{id:record.id,title:record.title,start:record.start.toISO(),end:["week","month"].includes(this.props.model.scale)&&allDay||(record.isAllDay||(allDay&&record.end.toMillis()!==record.end.startOf("day").toMillis()))?record.end.plus({days:1}).toISO():record.end.toISO(),allDay:allDay,};}
getPopoverProps(record){return{record,model:this.props.model,createRecord:this.props.createRecord,deleteRecord:this.props.deleteRecord,editRecord:this.props.editRecord,};}
openPopover(target,record){const color=getColor(record.colorIndex);this.popover.open(target,this.getPopoverProps(record),`o_cw_popover card o_calendar_color_${typeof color === "number" ? color : 0}`);}
onClick(info){this.openPopover(info.el,this.props.model.records[info.event.id]);this.highlightEvent(info.event,"o_cw_custom_highlight");}
onDateClick(info){if(info.jsEvent.defaultPrevented){return;}
this.props.createRecord(this.fcEventToRecord(info));}
getDayCellClassNames(info){const date=luxon.DateTime.fromJSDate(info.date).toISODate();if(this.props.model.unusualDays.includes(date)){return["o_calendar_disabled"];}
return[];}
onDblClick(info){this.props.editRecord(this.props.model.records[info.event.id]);}
onEventClick(info){this.click(info);}
onEventContent({event}){const record=this.props.model.records[event.id];if(record){const injectedContentStr=renderToString(this.constructor.eventTemplate,{...record,startTime:this.getStartTime(record),endTime:this.getEndTime(record),});const domParser=new DOMParser();const{children}=domParser.parseFromString(injectedContentStr,"text/html").body;return{domNodes:children};}
return true;}
eventClassNames({el,event}){const classesToAdd=[];classesToAdd.push("o_event");const record=this.props.model.records[event.id];if(record){const color=getColor(record.colorIndex);if(typeof color==="number"){classesToAdd.push(`o_calendar_color_${color}`);}else if(typeof color!=="string"){classesToAdd.push("o_calendar_color_0");}
if(record.isHatched){classesToAdd.push("o_event_hatched");}
if(record.isStriked){classesToAdd.push("o_event_striked");}
if(record.duration<=0.25){classesToAdd.push("o_event_oneliner");}
if(DateTime.now()>=record.end){classesToAdd.push("o_past_event");}
if(!record.isAllDay&&!record.isTimeHidden&&record.isMonth){classesToAdd.push("o_event_dot");}else if(record.isAllDay){classesToAdd.push("o_event_allday");}}
return classesToAdd;}
onEventDidMount({el,event}){el.dataset.eventId=event.id;const record=this.props.model.records[event.id];if(record){if(record.isMonth){el.querySelector(".fc-event-main").classList.add("d-flex","gap-1","text-truncate");}
const color=getColor(record.colorIndex);if(typeof color==="string"){el.style.backgroundColor=color;}
if(!el.classList.contains("fc-bg")){const bg=document.createElement("div");bg.classList.add("fc-bg");el.appendChild(bg);}}}
async onSelect(info){info.jsEvent.preventDefault();this.popover.close();await this.props.createRecord(this.fcEventToRecord(info));this.fc.api.unselect();}
isSelectionAllowed(event){return event.end.getDate()===event.start.getDate()||event.allDay;}
onEventDrop(info){this.fc.api.unselect();this.props.model.updateRecord(this.fcEventToRecord(info.event),{moved:true});}
onEventResize(info){this.fc.api.unselect();this.props.model.updateRecord(this.fcEventToRecord(info.event));}
fcEventToRecord(event){const{id,allDay,date,start,end}=event;const res={start:luxon.DateTime.fromJSDate(date||start),isAllDay:allDay,};if(end){res.end=luxon.DateTime.fromJSDate(end);if(["week","month"].includes(this.props.model.scale)&&allDay){res.end=res.end.minus({days:1});}}
if(id){const existingRecord=this.props.model.records[id];if(this.props.model.scale==="month"){res.start=res.start?.set({hour:existingRecord.start.hour,minute:existingRecord.start.minute,});if(existingRecord.end){res.end=res.end?.set({hour:existingRecord.end.hour,minute:existingRecord.end.minute,});}}
res.id=existingRecord.id;}
return res;}
onEventMouseEnter(info){this.highlightEvent(info.event,"o_cw_custom_highlight");}
onEventMouseLeave(info){if(!info.event.id){return;}
this.unhighlightEvent(info.event,"o_cw_custom_highlight");}
onEventDragStart(info){info.el.classList.add(info.view.type);this.fc.api.unselect();this.highlightEvent(info.event,"o_cw_custom_highlight");}
onEventResizeStart(info){this.fc.api.unselect();this.highlightEvent(info.event,"o_cw_custom_highlight");}
onEventLimitClick(){this.fc.api.unselect();return"popover";}
onWindowResize(){this.updateSize();}
getHeaderHtml({date}){return{html:renderToString(this.constructor.headerTemplate,this.headerTemplateProps(date)),};}
headerTemplateProps(date){const scale=this.props.model.scale;const options=scale==="month"?{zone:"UTC"}:{};const{weekdayShort,weekdayLong,day}=DateTime.fromJSDate(date,options);return{weekdayShort,weekdayLong,day,scale,};}
wrapMoreLink({el}){const wrapper=document.createElement("div");wrapper.classList.add("fc-more-cell");el.classList.remove("fc-daygrid-more-link");el.parentNode.insertBefore(wrapper,el);wrapper.appendChild(el);}}
return __exports;});;

/* /web/static/src/views/calendar/calendar_common/calendar_common_week_column.js */
odoo.define('@web/views/calendar/calendar_common/calendar_common_week_column',[],function(require){'use strict';let __exports={};__exports.makeWeekColumn=makeWeekColumn;function makeWeekColumn({el,showWeek,weekColumn,weekText}){const firstRows=el.querySelectorAll(".fc-col-header-cell:nth-child(1), .fc-day:nth-child(1)");for(const element of firstRows){const newElement=document.createElement("th");if(element.classList.contains("fc-col-header-cell")){newElement.classList.add("o-fc-week-header");newElement.innerText=weekText;}else{newElement.classList.add("o-fc-week");const weekElement=element.querySelector(".fc-daygrid-week-number");weekElement.classList.remove("fc-daygrid-week-number");newElement.append(weekElement);}
element.parentElement.insertBefore(newElement,element);}}
return __exports;});;

/* /web/static/src/views/calendar/calendar_controller.js */
odoo.define('@web/views/calendar/calendar_controller',['@web/core/confirmation_dialog/confirmation_dialog','@web/core/l10n/translation','@web/core/utils/hooks','@web/search/layout','@web/model/model','@web/views/view_dialogs/form_view_dialog','@web/search/action_hook','@web/core/datetime/datetime_picker','@web/views/calendar/filter_panel/calendar_filter_panel','@web/views/calendar/mobile_filter_panel/calendar_mobile_filter_panel','@web/views/calendar/quick_create/calendar_quick_create','@web/search/search_bar/search_bar','@web/search/search_bar/search_bar_toggler','@web/views/view_components/view_scale_selector','@web/search/cog_menu/cog_menu','@web/core/browser/browser','@web/views/standard_view_props','@web/core/l10n/dates','@odoo/owl'],function(require){'use strict';let __exports={};const{deleteConfirmationMessage,ConfirmationDialog,}=require("@web/core/confirmation_dialog/confirmation_dialog");const{_t}=require("@web/core/l10n/translation");const{useOwnedDialogs,useService}=require("@web/core/utils/hooks");const{Layout}=require("@web/search/layout");const{useModelWithSampleData}=require("@web/model/model");const{FormViewDialog}=require("@web/views/view_dialogs/form_view_dialog");const{useSetupAction}=require("@web/search/action_hook");const{DateTimePicker}=require("@web/core/datetime/datetime_picker");const{CalendarFilterPanel}=require("@web/views/calendar/filter_panel/calendar_filter_panel");const{CalendarMobileFilterPanel}=require("@web/views/calendar/mobile_filter_panel/calendar_mobile_filter_panel");const{CalendarQuickCreate}=require("@web/views/calendar/quick_create/calendar_quick_create");const{SearchBar}=require("@web/search/search_bar/search_bar");const{useSearchBarToggler}=require("@web/search/search_bar/search_bar_toggler");const{ViewScaleSelector}=require("@web/views/view_components/view_scale_selector");const{CogMenu}=require("@web/search/cog_menu/cog_menu");const{browser}=require("@web/core/browser/browser");const{standardViewProps}=require("@web/views/standard_view_props");const{getLocalWeekNumber}=require("@web/core/l10n/dates");const{Component,useState}=require("@odoo/owl");const{DateTime}=luxon;const SCALE_LABELS=__exports.SCALE_LABELS={day:_t("Day"),week:_t("Week"),month:_t("Month"),year:_t("Year"),};function useUniqueDialog(){const displayDialog=useOwnedDialogs();let close=null;return(...args)=>{if(close){close();}
close=displayDialog(...args);};}
const CalendarController=__exports.CalendarController=class CalendarController extends Component{static components={DatePicker:DateTimePicker,FilterPanel:CalendarFilterPanel,MobileFilterPanel:CalendarMobileFilterPanel,QuickCreate:CalendarQuickCreate,QuickCreateFormView:FormViewDialog,Layout,SearchBar,ViewScaleSelector,CogMenu,};static template="web.CalendarController";static props={...standardViewProps,Model:Function,Renderer:Function,archInfo:Object,buttonTemplate:String,session:{type:Object,optional:true},itemCalendarProps:{type:Object,optional:true},};setup(){this.action=useService("action");this.orm=useService("orm");this.displayDialog=useUniqueDialog();this.model=useModelWithSampleData(this.props.Model,{...this.props.archInfo,resModel:this.props.resModel,domain:this.props.domain,fields:this.props.fields,allFilter:this.props.state?.allFilter??{},date:this.props.state?.date,},{onWillStart:this.onWillStartModel.bind(this),});useSetupAction({getLocalState:()=>this.model.exportedState,});const sessionShowSidebar=browser.sessionStorage.getItem("calendar.showSideBar");this.state=useState({isWeekendVisible:browser.localStorage.getItem("calendar.isWeekendVisible")!=null?JSON.parse(browser.localStorage.getItem("calendar.isWeekendVisible")):true,showSideBar:!this.env.isSmall&&Boolean(sessionShowSidebar!=null?JSON.parse(sessionShowSidebar):true),});this.searchBarToggler=useSearchBarToggler();}
get currentDate(){const meta=this.model.meta;const scale=meta.scale;if(this.env.isSmall&&["week","month"].includes(scale)){const date=meta.date||DateTime.now();let text="";if(scale==="week"){const startMonth=date.startOf("week");const endMonth=date.endOf("week");if(startMonth.toFormat("LLL")!==endMonth.toFormat("LLL")){text=`${startMonth.toFormat("LLL")}-${endMonth.toFormat("LLL")}`;}else{text=startMonth.toFormat("LLLL");}}else if(scale==="month"){text=date.toFormat("LLLL");}
return` - ${text} ${date.year}`;}else{return"";}}
get date(){return this.model.meta.date||DateTime.now();}
get today(){return DateTime.now().toFormat("d");}
get currentYear(){return this.date.toFormat("y");}
get dayHeader(){return`${this.date.toFormat("d")} ${this.date.toFormat("MMMM")} ${this.date.year}`;}
get weekHeader(){const{rangeStart,rangeEnd}=this.model;if(rangeStart.year!=rangeEnd.year){return`${rangeStart.toFormat("MMMM")} ${rangeStart.year} - ${rangeEnd.toFormat(
                "MMMM"
            )} ${rangeEnd.year}`;}else if(rangeStart.month!=rangeEnd.month){return`${rangeStart.toFormat("MMMM")} - ${rangeEnd.toFormat("MMMM")} ${
                rangeStart.year
            }`;}
return`${rangeStart.toFormat("MMMM")} ${rangeStart.year}`;}
get currentMonth(){return`${this.date.toFormat("MMMM")} ${this.date.year}`;}
get currentWeek(){return getLocalWeekNumber(this.model.rangeStart);}
get rendererProps(){return{model:this.model,isWeekendVisible:this.model.scale==="day"||this.state.isWeekendVisible,createRecord:this.createRecord.bind(this),deleteRecord:this.deleteRecord.bind(this),editRecord:this.editRecord.bind(this),setDate:this.setDate.bind(this),};}
get containerProps(){return{model:this.model,};}
get datePickerProps(){return{type:"date",showWeekNumbers:false,maxPrecision:"days",daysOfWeekFormat:"narrow",onSelect:(date)=>{let scale="week";if(this.model.date.hasSame(date,"day")){const scales=["month","week","day"];scale=scales[(scales.indexOf(this.model.scale)+1)%scales.length];}else{const currentDate=this.model.date.weekday===7?this.model.date.plus({day:1}):this.model.date;const pickedDate=date.weekday===7?date.plus({day:1}):date;if(currentDate.hasSame(pickedDate,"week")){scale="day";}}
this.model.load({scale,date});},value:this.model.date,};}
get filterPanelProps(){return{model:this.model,};}
get mobileFilterPanelProps(){return{model:this.model,sideBarShown:this.state.showSideBar,toggleSideBar:()=>{this.state.showSideBar=!this.state.showSideBar;},};}
toggleSideBar(){this.state.showSideBar=!this.state.showSideBar;browser.sessionStorage.setItem("calendar.showSideBar",this.state.showSideBar);}
get showCalendar(){return!this.env.isSmall||!this.state.showSideBar;}
get showSideBar(){return this.state.showSideBar;}
get className(){return this.props.className;}
get editRecordDefaultDisplayText(){return _t("New Event");}
getQuickCreateProps(record){return{record,model:this.model,editRecord:this.editRecordInCreation.bind(this),title:this.props.context.default_name,};}
getQuickCreateFormViewProps(record){const rawRecord=this.model.buildRawRecord(record);const context=this.model.makeContextDefaults(rawRecord);return{resModel:this.model.resModel,viewId:this.model.quickCreateFormViewId,title:_t("New Event"),context,};}
createRecord(record){if(!this.model.canCreate){return;}
if(this.model.hasQuickCreate){if(this.model.quickCreateFormViewId){return new Promise((resolve)=>{this.displayDialog(this.constructor.components.QuickCreateFormView,this.getQuickCreateFormViewProps(record),{onClose:()=>resolve(),});});}
return new Promise((resolve)=>{this.displayDialog(this.constructor.components.QuickCreate,this.getQuickCreateProps(record),{onClose:()=>resolve(),});});}else{return this.editRecordInCreation(record);}}
async editRecord(record,context={},shouldFetchFormViewId=true){if(this.model.hasEditDialog){return new Promise((resolve)=>{this.displayDialog(FormViewDialog,{resModel:this.model.resModel,resId:record.id||false,context,title:record.id?_t("Open: %s",record.title):this.editRecordDefaultDisplayText,viewId:this.model.formViewId,onRecordSaved:()=>this.model.load(),},{onClose:()=>resolve()});});}else{let formViewId=this.model.formViewId;if(shouldFetchFormViewId){formViewId=await this.orm.call(this.model.resModel,"get_formview_id",[[record.id]],context);}
const action={type:"ir.actions.act_window",res_model:this.model.resModel,views:[[formViewId||false,"form"]],target:"current",context,};if(record.id){action.res_id=record.id;}
this.action.doAction(action);}}
editRecordInCreation(record){const rawRecord=this.model.buildRawRecord(record);const context=this.model.makeContextDefaults(rawRecord);return this.editRecord(record,context,false);}
deleteConfirmationDialogProps(record){return{title:_t("Bye-bye, record!"),body:deleteConfirmationMessage,confirm:()=>{this.model.unlinkRecord(record.id);},confirmLabel:_t("Delete"),cancel:()=>{},cancelLabel:_t("No, keep it"),};}
deleteRecord(record){this.displayDialog(ConfirmationDialog,this.deleteConfirmationDialogProps(record));}
onWillStartModel(){}
async setDate(move){let date=null;switch(move){case"next":date=this.model.date.plus({[`${this.model.scale}s`]:1});break;case"previous":date=this.model.date.minus({[`${this.model.scale}s`]:1});break;case"today":date=luxon.DateTime.local().startOf("day");if(date.ts===this.date.startOf("day").ts){this.model.bus.trigger("SCROLL_TO_CURRENT_HOUR",false);}
break;}
await this.model.load({date});}
get scales(){return Object.fromEntries(this.model.scales.map((s)=>[s,{description:SCALE_LABELS[s]}]));}
async setScale(scale){await this.model.load({scale});browser.sessionStorage.setItem("calendar-scale",this.model.scale);}
toggleWeekendVisibility(){this.state.isWeekendVisible=!this.state.isWeekendVisible;browser.localStorage.setItem("calendar.isWeekendVisible",this.state.isWeekendVisible);}}
return __exports;});;

/* /web/static/src/views/calendar/calendar_model.js */
odoo.define('@web/views/calendar/calendar_model',['@web/core/l10n/dates','@web/core/l10n/localization','@web/core/l10n/translation','@web/core/registry','@web/core/user','@web/core/utils/concurrency','@web/model/model','@web/model/relational_model/utils','@web/core/browser/browser'],function(require){'use strict';let __exports={};const{serializeDate,serializeDateTime,deserializeDate,deserializeDateTime,}=require("@web/core/l10n/dates");const{localization}=require("@web/core/l10n/localization");const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{user}=require("@web/core/user");const{KeepLast}=require("@web/core/utils/concurrency");const{Model}=require("@web/model/model");const{extractFieldsFromArchInfo}=require("@web/model/relational_model/utils");const{browser}=require("@web/core/browser/browser");const CalendarModel=__exports.CalendarModel=class CalendarModel extends Model{setup(params,services){this.keepLast=new KeepLast();const formViewFromConfig=(this.env.config.views||[]).find((view)=>view[1]==="form");const formViewIdFromConfig=formViewFromConfig?formViewFromConfig[0]:false;const fieldNodes=params.popoverFieldNodes;const{activeFields,fields}=extractFieldsFromArchInfo({fieldNodes},params.fields);this.meta={...params,activeFields,fields,firstDayOfWeek:(localization.weekStart||0)%7,formViewId:params.formViewId||formViewIdFromConfig,};this.meta.scale=this.getLocalStorageScale();this.data={filters:{},filterSections:{},hasCreateRight:null,range:null,records:{},unusualDays:[],};}
async load(params={}){Object.assign(this.meta,params);if(!this.meta.date){this.meta.date=params.context&&params.context.initial_date?deserializeDateTime(params.context.initial_date).startOf("day"):luxon.DateTime.local().startOf("day");}
if(!this.meta.scales.includes(this.meta.scale)){this.meta.scale=this.meta.scales[0];}
browser.localStorage.setItem(this.storageKey,this.meta.scale);const data={...this.data};await this.keepLast.add(this.updateData(data));this.data=data;this.notify();}
get date(){return this.meta.date;}
get canCreate(){return this.meta.canCreate&&this.data.hasCreateRight;}
get canDelete(){return this.meta.canDelete;}
get canEdit(){return this.meta.canEdit&&!this.meta.fields[this.meta.fieldMapping.date_start].readonly;}
get eventLimit(){return this.meta.eventLimit;}
get exportedState(){return this.meta;}
get fieldMapping(){return this.meta.fieldMapping;}
get fields(){return this.meta.fields;}
get filterSections(){return Object.values(this.data.filterSections);}
get firstDayOfWeek(){return this.meta.firstDayOfWeek;}
get formViewId(){return this.meta.formViewId;}
get hasAllDaySlot(){return(this.meta.fieldMapping.all_day||this.meta.fields[this.meta.fieldMapping.date_start].type==="date");}
get hasEditDialog(){return this.meta.hasEditDialog;}
get hasQuickCreate(){return this.meta.quickCreate;}
get isDateHidden(){return this.meta.isDateHidden;}
get isTimeHidden(){return this.meta.isTimeHidden;}
get popoverFieldNodes(){return this.meta.popoverFieldNodes;}
get activeFields(){return this.meta.activeFields;}
get rangeEnd(){return this.data.range.end;}
get rangeStart(){return this.data.range.start;}
get records(){return this.data.records;}
get resModel(){return this.meta.resModel;}
get scale(){return this.meta.scale;}
get scales(){return this.meta.scales;}
get storageKey(){return`scaleOf-viewId-${this.env.config.viewId}`;}
get unusualDays(){return this.data.unusualDays;}
get quickCreateFormViewId(){return this.meta.quickCreateViewId;}
get defaultFilterLabel(){return _t("Undefined");}
async createFilter(fieldName,filterValue){const info=this.meta.filtersInfo[fieldName];if(!info||!info.writeFieldName||!info.writeResModel){return;}
const normalizedFilterValue=Array.isArray(filterValue)?filterValue:[filterValue];const dataArray=normalizedFilterValue.map((value)=>{const data={user_id:user.userId,[info.writeFieldName]:value,};if(info.filterFieldName){data[info.filterFieldName]=true;}
return data;});await this.orm.create(info.writeResModel,dataArray);await this.load();}
async createRecord(record){const rawRecord=this.buildRawRecord(record);const context=this.makeContextDefaults(rawRecord);await this.orm.create(this.meta.resModel,[rawRecord],{context});await this.load();}
async unlinkFilter(fieldName,recordId){const info=this.meta.filtersInfo[fieldName];if(info&&info.writeResModel){await this.orm.unlink(info.writeResModel,[recordId]);await this.load();}}
async unlinkRecord(recordId){await this.orm.unlink(this.meta.resModel,[recordId]);await this.load();}
async updateFilters(fieldName,filters){const section=this.data.filterSections[fieldName];if(section){for(const value in filters){const active=filters[value];const filter=section.filters.find((filter)=>`${filter.value}`===value);if(filter){filter.active=active;const info=this.meta.filtersInfo[fieldName];if(filter.recordId&&info&&info.writeFieldName&&info.writeResModel&&info.filterFieldName){const data={[info.filterFieldName]:active,};await this.orm.write(info.writeResModel,[filter.recordId],data);}else if(filter.type==="all"){this.meta.allFilter[section.label]=active;}}}}
await this.load();}
async updateRecord(record,options={}){const rawRecord=this.buildRawRecord(record,options);delete rawRecord.name;await this.orm.write(this.meta.resModel,[record.id],rawRecord,{context:{from_ui:true},});await this.load();}
buildRawRecord(partialRecord,options={}){const data={};data[this.meta.fieldMapping.create_name_field||"name"]=partialRecord.title;let start=partialRecord.start;let end=partialRecord.end;if(!end||!end.isValid){if(partialRecord.isAllDay){end=start;}else{end=start.plus({hours:options.duration_hour||1});}}
const isDateEvent=this.fields[this.meta.fieldMapping.date_start].type==="date";if(partialRecord.isAllDay){if(!this.hasAllDaySlot&&!isDateEvent&&!partialRecord.id){start=start.set({hours:7});end=end.set({hours:19});}}
if(this.meta.fieldMapping.all_day){data[this.meta.fieldMapping.all_day]=partialRecord.isAllDay;}
data[this.meta.fieldMapping.date_start]=(partialRecord.isAllDay&&this.hasAllDaySlot?"date":this.fields[this.meta.fieldMapping.date_start].type)==="date"?serializeDate(start):serializeDateTime(start);if(this.meta.fieldMapping.date_stop){data[this.meta.fieldMapping.date_stop]=(partialRecord.isAllDay&&this.hasAllDaySlot?"date":this.fields[this.meta.fieldMapping.date_start].type)==="date"?serializeDate(end):serializeDateTime(end);}
if(this.meta.fieldMapping.date_delay){if(this.meta.scale!=="month"||!options.moved){data[this.meta.fieldMapping.date_delay]=end.diff(start,"hours").hours;}}
return data;}
makeContextDefaults(rawRecord){const{fieldMapping,scale}=this.meta;const context={...this.meta.context};const fieldNames=[fieldMapping.create_name_field||"name",fieldMapping.date_start,fieldMapping.date_stop,fieldMapping.date_delay,fieldMapping.all_day||"allday",];for(const fieldName of fieldNames){if(rawRecord[fieldName]!==undefined){context[`default_${fieldName}`]=rawRecord[fieldName];}}
if(["month","year"].includes(scale)){context[`default_${fieldMapping.all_day || "allday"}`]=true;}
return context;}
async updateData(data){if(data.hasCreateRight===null){data.hasCreateRight=await user.checkAccessRight(this.meta.resModel,"create");}
data.range=this.computeRange();if(this.meta.showUnusualDays){data.unusualDays=await this.loadUnusualDays(data);}
const{sections,dynamicFiltersInfo}=await this.loadFilters(data);data.filterSections=sections;data.records=await this.loadRecords(data);const dynamicSections=await this.loadDynamicFilters(data,dynamicFiltersInfo);Object.assign(data.filterSections,dynamicSections);for(const[recordId,record]of Object.entries(data.records)){for(const[fieldName,filterInfo]of Object.entries(dynamicSections)){for(const filter of filterInfo.filters){const rawValue=record.rawRecord[fieldName];const value=Array.isArray(rawValue)?rawValue[0]:rawValue;if(filter.value===value&&!filter.active){delete data.records[recordId];}}}}}
computeRange(){const{scale,date,firstDayOfWeek}=this.meta;let start=date;let end=date;if(scale!=="week"){start=start.startOf(scale);end=end.endOf(scale);}
if(["week","month"].includes(scale)){const currentWeekOffset=(start.weekday-firstDayOfWeek+7)%7;start=start.minus({days:currentWeekOffset});end=start.plus({weeks:scale==="week"?1:6,days:-1});}
start=start.startOf("day");end=end.endOf("day");return{start,end};}
computeDomain(data){return[...this.meta.domain,...this.computeRangeDomain(data),...this.computeFiltersDomain(data),];}
computeFiltersDomain(data){const authorizedValues={};const avoidValues={};for(const[fieldName,filterSection]of Object.entries(data.filterSections)){const filterAll=filterSection.filters.find((f)=>f.type==="all");if(!(filterAll&&filterAll.active)){const filterSectionInfo=this.meta.filtersInfo[fieldName];for(const filter of filterSection.filters){if(filterSectionInfo.writeResModel){if(!authorizedValues[fieldName]){authorizedValues[fieldName]=[];}
if(filter.active){authorizedValues[fieldName].push(filter.value);}}else{if(!filter.active){if(!avoidValues[fieldName]){avoidValues[fieldName]=[];}
avoidValues[fieldName].push(filter.value);}}}}}
const domain=[];for(const field in authorizedValues){domain.push([field,"in",authorizedValues[field]]);}
for(const field in avoidValues){if(avoidValues[field].length>0){domain.push([field,"not in",avoidValues[field]]);}}
return domain;}
computeRangeDomain(data){const{fieldMapping}=this.meta;const formattedEnd=serializeDateTime(data.range.end);const formattedStart=serializeDateTime(data.range.start);const domain=[[fieldMapping.date_start,"<=",formattedEnd]];if(fieldMapping.date_stop){domain.push([fieldMapping.date_stop,">=",formattedStart]);}else if(!fieldMapping.date_delay){domain.push([fieldMapping.date_start,">=",formattedStart]);}
return domain;}
fetchUnusualDays(data){return this.orm.call(this.meta.resModel,"get_unusual_days",[serializeDateTime(data.range.start),serializeDateTime(data.range.end),]);}
async loadUnusualDays(data){const unusualDays=await this.fetchUnusualDays(data);return Object.entries(unusualDays).filter((entry)=>entry[1]).map((entry)=>entry[0]);}
fetchRecords(data){const{fieldNames,resModel}=this.meta;return this.orm.searchRead(resModel,this.computeDomain(data),[...new Set([...fieldNames,...Object.keys(this.meta.activeFields)]),]);}
async loadRecords(data){const rawRecords=await this.fetchRecords(data);const records={};for(const rawRecord of rawRecords){records[rawRecord.id]=this.normalizeRecord(rawRecord);}
return records;}
normalizeRecord(rawRecord){const{fields,fieldMapping,isTimeHidden}=this.meta;const startType=fields[fieldMapping.date_start].type;const isAllDay=startType==="date"||(fieldMapping.all_day&&rawRecord[fieldMapping.all_day])||false;let start=isAllDay?deserializeDate(rawRecord[fieldMapping.date_start]):deserializeDateTime(rawRecord[fieldMapping.date_start]);let end=start;let endType=startType;if(fieldMapping.date_stop){endType=fields[fieldMapping.date_stop].type;end=isAllDay?deserializeDate(rawRecord[fieldMapping.date_stop]):deserializeDateTime(rawRecord[fieldMapping.date_stop]);}
const duration=rawRecord[fieldMapping.date_delay]||1;if(isAllDay){start=start.startOf("day");end=end.startOf("day");}
if(!fieldMapping.date_stop&&duration){end=start.plus({hours:duration});}
const showTime=!(fieldMapping.all_day&&rawRecord[fieldMapping.all_day])&&startType!=="date"&&start.day===end.day;const colorValue=rawRecord[fieldMapping.color];const colorIndex=Array.isArray(colorValue)?colorValue[0]:colorValue;const title=rawRecord[fieldMapping.create_name_field||"display_name"];return{id:rawRecord.id,title,isAllDay,start,startType,end,endType,duration,colorIndex,isHatched:rawRecord["is_hatched"]||false,isStriked:rawRecord["is_striked"]||false,isTimeHidden:isTimeHidden||!showTime,isMonth:this.meta.scale==="month",isSmall:this.env.isSmall,rawRecord,};}
addFilterFields(record,filterInfo){return{colorIndex:record.colorIndex,};}
fetchFilters(resModel,fieldNames){return this.orm.searchRead(resModel,[["user_id","=",user.userId]],fieldNames);}
getLocalStorageScale(){const localScaleId=browser.localStorage.getItem(this.storageKey);return this.meta.scales.includes(localScaleId)?localScaleId:this.meta.scale;}
async loadFilters(data){const previousSections=data.filterSections;const sections={};const dynamicFiltersInfo={};for(const[fieldName,filterInfo]of Object.entries(this.meta.filtersInfo)){const previousSection=previousSections[fieldName];if(filterInfo.writeResModel){sections[fieldName]=await this.loadFilterSection(fieldName,filterInfo,previousSection);}else{dynamicFiltersInfo[fieldName]={filterInfo,previousSection};}}
return{sections,dynamicFiltersInfo};}
async loadFilterSection(fieldName,filterInfo,previousSection){const{filterFieldName,writeFieldName,writeResModel}=filterInfo;const fields=[writeFieldName,filterFieldName].filter(Boolean);const rawFilters=await this.fetchFilters(writeResModel,fields);const previousFilters=previousSection?previousSection.filters:[];const filters=rawFilters.map((rawFilter)=>{const previousRecordFilter=previousFilters.find((f)=>f.type==="record"&&f.recordId===rawFilter.id);return this.makeFilterRecord(filterInfo,previousRecordFilter,rawFilter);});const field=this.meta.fields[fieldName];const isUserOrPartner=["res.users","res.partner"].includes(field.relation);if(isUserOrPartner){const previousUserFilter=previousFilters.find((f)=>f.type==="user");filters.push(this.makeFilterUser(filterInfo,previousUserFilter,fieldName,rawFilters));}
const previousAllFilter=previousFilters.find((f)=>f.type==="all");filters.push(this.makeFilterAll(previousAllFilter,isUserOrPartner,filterInfo.label));return{label:filterInfo.label,fieldName,filters,avatar:{field:filterInfo.avatarFieldName,model:filterInfo.resModel,},hasAvatar:!!filterInfo.avatarFieldName,write:{field:writeFieldName,model:writeResModel,},canCollapse:filters.length>2,canAddFilter:!!filterInfo.writeResModel,};}
async loadDynamicFilters(data,filtersInfo){const sections={};for(const[fieldName,{filterInfo,previousSection}]of Object.entries(filtersInfo)){sections[fieldName]=await this.loadDynamicFilterSection(data,fieldName,filterInfo,previousSection);}
return sections;}
async loadDynamicFilterSection(data,fieldName,filterInfo,previousSection){const{fields,fieldMapping}=this.meta;const field=fields[fieldName];const previousFilters=previousSection?previousSection.filters:[];const rawFilters=Object.values(data.records).reduce((filters,record)=>{const rawValues=["many2many","one2many"].includes(field.type)?record.rawRecord[fieldName]:[record.rawRecord[fieldName]];for(const rawValue of rawValues){const value=Array.isArray(rawValue)?rawValue[0]:rawValue;if(!filters.find((f)=>f.id===value)){filters.push({id:value,[fieldName]:rawValue,...this.addFilterFields(record,filterInfo),});}}
return filters;},[]);const{colorFieldName}=filterInfo;const shouldFetchColor=colorFieldName&&(!fieldMapping.color||`${fieldName}.${colorFieldName}`!==fields[fieldMapping.color].related);let rawColors=[];if(shouldFetchColor){const relatedIds=rawFilters.map(({id})=>id);if(relatedIds.length){rawColors=await this.orm.searchRead(field.relation,[["id","in",relatedIds]],[colorFieldName]);}}
const filters=rawFilters.map((rawFilter)=>{const previousDynamicFilter=previousFilters.find((f)=>f.type==="dynamic"&&f.value===rawFilter.id);return this.makeFilterDynamic(filterInfo,previousDynamicFilter,fieldName,rawFilter,rawColors);});return{label:filterInfo.label,fieldName,filters,avatar:{field:filterInfo.avatarFieldName,model:filterInfo.resModel,},hasAvatar:!!filterInfo.avatarFieldName,write:{field:filterInfo.writeFieldName,model:filterInfo.writeResModel,},canCollapse:filters.length>2,canAddFilter:!!filterInfo.writeResModel,};}
makeFilterDynamic(filterInfo,previousFilter,fieldName,rawFilter,rawColors){const{fieldMapping,fields}=this.meta;const rawValue=rawFilter[fieldName];const value=Array.isArray(rawValue)?rawValue[0]:rawValue;const field=fields[fieldName];const formatter=registry.category("formatters").get(field.type);const{colorFieldName}=filterInfo;const colorField=fields[fieldMapping.color];const hasFilterColorAttr=!!colorFieldName;const sameRelatedModel=colorField&&(colorField.relation===field.relation||(colorField.related&&colorField.related.startsWith(`${fieldName}.`)));let colorIndex=null;if(hasFilterColorAttr||sameRelatedModel){colorIndex=rawFilter.colorIndex;}
if(rawColors.length){const rawColor=rawColors.find(({id})=>id===value);colorIndex=rawColor?rawColor[colorFieldName]:0;}
return{type:"dynamic",recordId:null,value,label:formatter(rawValue,{field})||this.defaultFilterLabel,active:previousFilter?previousFilter.active:true,canRemove:false,colorIndex,hasAvatar:!!value,};}
makeFilterRecord(filterInfo,previousFilter,rawRecord){const{colorFieldName,filterFieldName,writeFieldName}=filterInfo;const{fields,fieldMapping}=this.meta;const raw=rawRecord[writeFieldName];const value=Array.isArray(raw)?raw[0]:raw;const field=fields[writeFieldName];const isX2Many=["many2many","one2many"].includes(field.type);const formatter=registry.category("formatters").get(isX2Many?"many2one":field.type);const colorField=fields[fieldMapping.color];const colorValue=colorField&&(()=>{const sameRelatedModel=colorField.relation===field.relation;const sameRelatedField=colorField.related===`${writeFieldName}.${colorFieldName}`;const shouldHaveColor=sameRelatedModel||sameRelatedField;const colorToUse=raw?value:rawRecord[fieldMapping.color];return shouldHaveColor?colorToUse:null;})();const colorIndex=Array.isArray(colorValue)?colorValue[0]:colorValue;let active=false;if(previousFilter){active=previousFilter.active;}else if(filterFieldName){active=rawRecord[filterFieldName];}
return{type:"record",recordId:rawRecord.id,value,label:formatter(raw),active,canRemove:true,colorIndex,hasAvatar:!!value,};}
makeFilterUser(filterInfo,previousFilter,fieldName,rawRecords){const field=this.meta.fields[fieldName];const userFieldName=field.relation==="res.partner"?"partnerId":"userId";const value=user[userFieldName];let colorIndex=value;const rawRecord=rawRecords.find((r)=>r[filterInfo.writeFieldName][0]===value);if(filterInfo.colorFieldName&&rawRecord){const colorValue=rawRecord[filterInfo.colorFieldName];colorIndex=Array.isArray(colorValue)?colorValue[0]:colorValue;}
return{type:"user",recordId:null,value,label:user.name,active:previousFilter?previousFilter.active:true,canRemove:false,colorIndex,hasAvatar:!!value,};}
makeFilterAll(previousAllFilter,isUserOrPartner,sectionLabel){return{type:"all",recordId:null,value:"all",label:isUserOrPartner?_t("Everybody's calendars"):_t("Everything"),active:previousAllFilter?previousAllFilter.active:this.meta.allFilter[sectionLabel]||false,canRemove:false,colorIndex:null,hasAvatar:false,};}}
return __exports;});;

/* /web/static/src/views/calendar/calendar_renderer.js */
odoo.define('@web/views/calendar/calendar_renderer',['@web/core/action_swiper/action_swiper','@web/views/calendar/calendar_common/calendar_common_renderer','@web/views/calendar/calendar_year/calendar_year_renderer','@odoo/owl'],function(require){'use strict';let __exports={};const{ActionSwiper}=require("@web/core/action_swiper/action_swiper");const{CalendarCommonRenderer}=require("@web/views/calendar/calendar_common/calendar_common_renderer");const{CalendarYearRenderer}=require("@web/views/calendar/calendar_year/calendar_year_renderer");const{Component}=require("@odoo/owl");const CalendarRenderer=__exports.CalendarRenderer=class CalendarRenderer extends Component{static template="web.CalendarRenderer";static components={day:CalendarCommonRenderer,week:CalendarCommonRenderer,month:CalendarCommonRenderer,year:CalendarYearRenderer,ActionSwiper,};static props={model:Object,isWeekendVisible:Boolean,createRecord:Function,editRecord:Function,deleteRecord:Function,setDate:Function,};get calendarComponent(){return this.constructor.components[this.props.model.scale];}
get calendarKey(){return`${this.props.model.scale}_${this.props.model.date.valueOf()}`;}
get actionSwiperProps(){return{onLeftSwipe:this.env.isSmall?{action:()=>this.props.setDate("next")}:undefined,onRightSwipe:this.env.isSmall?{action:()=>this.props.setDate("previous")}:undefined,animationOnMove:false,animationType:"forwards",swipeDistanceRatio:6,swipeInvalid:()=>Boolean(document.querySelector(".o_event.fc-mirror")),};}}
return __exports;});;

/* /web/static/src/views/calendar/calendar_view.js */
odoo.define('@web/views/calendar/calendar_view',['@web/core/registry','@web/views/calendar/calendar_renderer','@web/views/calendar/calendar_arch_parser','@web/views/calendar/calendar_model','@web/views/calendar/calendar_controller'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{CalendarRenderer}=require("@web/views/calendar/calendar_renderer");const{CalendarArchParser}=require("@web/views/calendar/calendar_arch_parser");const{CalendarModel}=require("@web/views/calendar/calendar_model");const{CalendarController}=require("@web/views/calendar/calendar_controller");const calendarView=__exports.calendarView={type:"calendar",searchMenuTypes:["filter","favorite"],ArchParser:CalendarArchParser,Controller:CalendarController,Model:CalendarModel,Renderer:CalendarRenderer,buttonTemplate:"web.CalendarController.controlButtons",props:(props,view)=>{const{ArchParser}=view;const{arch,relatedModels,resModel}=props;const archInfo=new ArchParser().parse(arch,relatedModels,resModel);return{...props,Model:view.Model,Renderer:view.Renderer,buttonTemplate:view.buttonTemplate,archInfo,};},};registry.category("views").add("calendar",calendarView);return __exports;});;

/* /web/static/src/views/calendar/calendar_year/calendar_year_popover.js */
odoo.define('@web/views/calendar/calendar_year/calendar_year_popover',['@web/core/dialog/dialog','@web/core/l10n/dates','@web/views/calendar/colors','@web/views/calendar/utils','@odoo/owl'],function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{formatDate}=require("@web/core/l10n/dates");const{getColor}=require("@web/views/calendar/colors");const{getFormattedDateSpan}=require("@web/views/calendar/utils");const{Component}=require("@odoo/owl");const CalendarYearPopover=__exports.CalendarYearPopover=class CalendarYearPopover extends Component{static components={Dialog};static template="web.CalendarYearPopover";static subTemplates={popover:"web.CalendarYearPopover.popover",body:"web.CalendarYearPopover.body",footer:"web.CalendarYearPopover.footer",record:"web.CalendarYearPopover.record",};static props={close:Function,date:true,model:Object,records:Array,createRecord:Function,deleteRecord:Function,editRecord:Function,};get recordGroups(){return this.computeRecordGroups();}
get dialogTitle(){return formatDate(this.props.date,{format:"DDD"});}
computeRecordGroups(){const recordGroups=this.groupRecords();return this.getSortedRecordGroups(recordGroups);}
groupRecords(){const recordGroups={};for(const record of this.props.records){const start=record.start;const end=record.end;const duration=end.diff(start,"days").days;const modifiedRecord=Object.create(record);modifiedRecord.startHour=!record.isAllDay&&duration<1?start.toFormat("HH:mm"):"";const formattedDate=getFormattedDateSpan(start,end);if(!(formattedDate in recordGroups)){recordGroups[formattedDate]={title:formattedDate,start,end,records:[],};}
recordGroups[formattedDate].records.push(modifiedRecord);}
return Object.values(recordGroups);}
getRecordClass(record){const{colorIndex}=record;const color=getColor(colorIndex);if(color&&typeof color==="number"){return`o_calendar_color_${color}`;}
return"";}
getRecordStyle(record){const{colorIndex}=record;const color=getColor(colorIndex);if(color&&typeof color==="string"){return`background-color: ${color};`;}
return"";}
getSortedRecordGroups(recordGroups){return recordGroups.sort((a,b)=>{if(a.start.hasSame(a.end,"days")){return Number.MIN_SAFE_INTEGER;}else if(b.start.hasSame(b.end,"days")){return Number.MAX_SAFE_INTEGER;}else if(a.start.toMillis()-b.start.toMillis()===0){return a.end.toMillis()-b.end.toMillis();}
return a.start.toMillis()-b.start.toMillis();});}
onCreateButtonClick(){this.props.createRecord({start:this.props.date,isAllDay:true,});this.props.close();}
onRecordClick(record){this.props.editRecord(record);this.props.close();}}
return __exports;});;

/* /web/static/src/views/calendar/calendar_year/calendar_year_renderer.js */
odoo.define('@web/views/calendar/calendar_year/calendar_year_renderer',['@web/core/l10n/localization','@web/core/utils/timing','@web/views/calendar/colors','@web/views/calendar/hooks','@web/views/calendar/calendar_year/calendar_year_popover','@web/views/calendar/calendar_common/calendar_common_week_column','@web/core/l10n/dates','@odoo/owl'],function(require){'use strict';let __exports={};const{localization}=require("@web/core/l10n/localization");const{useDebounced}=require("@web/core/utils/timing");const{getColor}=require("@web/views/calendar/colors");const{useCalendarPopover,useFullCalendar}=require("@web/views/calendar/hooks");const{CalendarYearPopover}=require("@web/views/calendar/calendar_year/calendar_year_popover");const{makeWeekColumn}=require("@web/views/calendar/calendar_common/calendar_common_week_column");const{getLocalWeekNumber}=require("@web/core/l10n/dates");const{Component,useEffect,useRef}=require("@odoo/owl");const CalendarYearRenderer=__exports.CalendarYearRenderer=class CalendarYearRenderer extends Component{static components={Popover:CalendarYearPopover,};static template="web.CalendarYearRenderer";static props={model:Object,displayName:{type:String,optional:true},isWeekendVisible:{type:Boolean,optional:true},createRecord:Function,editRecord:Function,deleteRecord:Function,setDate:{type:Function,optional:true},};setup(){this.months=luxon.Info.months();this.fcs={};for(const month of this.months){this.fcs[month]=useFullCalendar(`fullCalendar-${month}`,this.getOptionsForMonth(month));}
this.popover=useCalendarPopover(this.constructor.components.Popover);this.rootRef=useRef("root");this.onWindowResizeDebounced=useDebounced(this.onWindowResize,200);useEffect(()=>{this.updateSize();});}
get options(){return{dayHeaderFormat:"EEEEE",dateClick:this.onDateClick,dayCellClassNames:this.getDayCellClassNames,initialDate:this.props.model.date.toISO(),initialView:"dayGridMonth",direction:localization.direction,droppable:true,editable:this.props.model.canEdit,dayMaxEventRows:this.props.model.eventLimit,eventClassNames:this.eventClassNames,eventDidMount:this.onEventDidMount,eventResizableFromStart:true,events:(_,successCb)=>successCb(this.mapRecordsToEvents()),firstDay:this.props.model.firstDayOfWeek,headerToolbar:{start:false,center:"title",end:false},height:"auto",locale:luxon.Settings.defaultLocale,longPressDelay:500,navLinks:false,nowIndicator:true,select:this.onSelect,selectMinDistance:5,selectMirror:true,selectable:this.props.model.canCreate,showNonCurrentDates:false,timeZone:luxon.Settings.defaultZone.name,titleFormat:{month:"long",year:"numeric"},unselectAuto:false,weekNumberCalculation:(date)=>getLocalWeekNumber(date),weekNumbers:false,weekNumberFormat:{week:"numeric"},windowResize:this.onWindowResizeDebounced,eventContent:this.onEventContent,viewDidMount:this.viewDidMount,weekends:this.props.isWeekendVisible,};}
get customOptions(){return{weekNumbersWithinDays:true,};}
viewDidMount({el,view}){const showWeek=view.calendar.currentData.options.weekNumbers;const weekText=view.calendar.currentData.options.weekText;const weekColumn=!this.customOptions.weekNumbersWithinDays;if(showWeek&&weekColumn){makeWeekColumn({el,weekText});}}
mapRecordsToEvents(){return Object.values(this.props.model.records).map((r)=>this.convertRecordToEvent(r));}
convertRecordToEvent(record){return{id:record.id,title:record.title,start:record.start.toISO(),end:record.end.plus({day:1}).toISO(),allDay:true,display:"background",};}
getDateWithMonth(month){return this.props.model.date.set({month:this.months.indexOf(month)+1}).toISO();}
getOptionsForMonth(month){return{...this.options,initialDate:this.getDateWithMonth(month),};}
getPopoverProps(date,records){return{date,records,model:this.props.model,createRecord:this.props.createRecord,deleteRecord:this.props.deleteRecord,editRecord:this.props.editRecord,};}
openPopover(target,date,records){this.popover.open(target,this.getPopoverProps(date,records),"o_cw_popover");}
unselect(){for(const fc of Object.values(this.fcs)){fc.api.unselect();}}
updateSize(){const height=window.innerHeight-this.rootRef.el.getBoundingClientRect().top;this.rootRef.el.style.height=`${height}px`;}
onDateClick(info){if(this.env.isSmall){this.props.model.load({date:luxon.DateTime.fromISO(info.dateStr),scale:"day",});return;}
const date=luxon.DateTime.fromISO(info.dateStr);const records=Object.values(this.props.model.records).filter((r)=>luxon.Interval.fromDateTimes(r.start.startOf("day"),r.end.endOf("day")).contains(date));this.popover.close();if(records.length){const target=info.dayEl;this.openPopover(target,date,records);}else if(this.props.model.canCreate){this.props.createRecord({start:luxon.DateTime.fromISO(info.dateStr),isAllDay:true,});}}
getDayCellClassNames(info){const date=luxon.DateTime.fromJSDate(info.date).toISODate();if(this.props.model.unusualDays.includes(date)){return["o_calendar_disabled"];}
return[];}
eventClassNames({event}){const classesToAdd=[];classesToAdd.push("o_event");const record=this.props.model.records[event.id];if(record){const color=getColor(record.colorIndex);if(typeof color==="number"){classesToAdd.push(`o_calendar_color_${color}`);}else if(typeof color!=="string"){classesToAdd.push("o_calendar_color_0");}
if(record.isHatched){classesToAdd.push("o_event_hatched");}
if(record.isStriked){classesToAdd.push("o_event_striked");}}
return classesToAdd;}
onEventDidMount(info){const{el,event}=info;el.dataset.eventId=event.id;const record=this.props.model.records[event.id];if(record){const color=getColor(record.colorIndex);if(typeof color==="string"){el.style.backgroundColor=color;}}}
async onSelect(info){this.popover.close();await this.props.createRecord({start:luxon.DateTime.fromISO(info.startStr),end:luxon.DateTime.fromISO(info.endStr).minus({days:1}),isAllDay:true,});this.unselect();}
onWindowResize(){this.updateSize();}
onEventContent(info){if(info.event.display?.includes("background")){return null;}}}
return __exports;});;

/* /web/static/src/views/calendar/colors.js */
odoo.define('@web/views/calendar/colors',[],function(require){'use strict';let __exports={};const CSS_COLOR_REGEX=/^((#[A-F0-9]{3})|(#[A-F0-9]{6})|((hsl|rgb)a?\(\s*(?:(\s*\d{1,3}%?\s*),?){3}(\s*,[0-9.]{1,4})?\))|)$/i;const colorMap=new Map();__exports.getColor=getColor;function getColor(key){if(!key){return false;}
if(colorMap.has(key)){return colorMap.get(key);}
if(typeof key==="string"&&key.match(CSS_COLOR_REGEX)){colorMap.set(key,key);}else if(typeof key==="number"){colorMap.set(key,((key-1)%55)+1);}else{colorMap.set(key,(((colorMap.size+1)*5)%24)+1);}
return colorMap.get(key);}
return __exports;});;

/* /web/static/src/views/calendar/filter_panel/calendar_filter_panel.js */
odoo.define('@web/views/calendar/filter_panel/calendar_filter_panel',['@web/core/l10n/translation','@web/core/autocomplete/autocomplete','@web/core/transition','@web/core/utils/hooks','@web/views/view_dialogs/select_create_dialog','@web/views/calendar/colors','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{AutoComplete}=require("@web/core/autocomplete/autocomplete");const{Transition}=require("@web/core/transition");const{useOwnedDialogs,useService}=require("@web/core/utils/hooks");const{SelectCreateDialog}=require("@web/views/view_dialogs/select_create_dialog");const{getColor}=require("@web/views/calendar/colors");const{Component,useState}=require("@odoo/owl");let nextId=1;const CalendarFilterPanel=__exports.CalendarFilterPanel=class CalendarFilterPanel extends Component{static components={AutoComplete,Transition,};static template="web.CalendarFilterPanel";static subTemplates={filter:"web.CalendarFilterPanel.filter",};static props={model:Object,};setup(){this.state=useState({collapsed:{},fieldRev:1,});this.addDialog=useOwnedDialogs();this.orm=useService("orm");}
getFilterColor(filter){return filter.colorIndex!==null?"o_cw_filter_color_"+getColor(filter.colorIndex):"";}
getAutoCompleteProps(section){return{autoSelect:true,resetOnSelect:true,placeholder:_t("+ Add %s",section.label),sources:[{placeholder:_t("Loading..."),options:(request)=>this.loadSource(section,request),optionTemplate:"web.CalendarFilterPanel.autocomplete.options",},],onSelect:(option,params={})=>{if(option.action){option.action(params);return;}
this.props.model.createFilter(section.fieldName,option.value);},value:"",};}
async loadSource(section,request){const resModel=this.props.model.fields[section.fieldName].relation;const domain=[["id","not in",section.filters.filter((f)=>f.type!=="all").map((f)=>f.value)],];const records=await this.orm.call(resModel,"name_search",[],{name:request,operator:"ilike",args:domain,limit:8,context:{},});const options=records.map((result)=>({value:result[0],label:result[1],model:resModel,}));if(records.length>7){options.push({label:_t("Search More..."),action:()=>this.onSearchMore(section,resModel,domain,request),classList:"o_calendar_dropdown_option",});}
if(records.length===0){options.push({label:_t("No records"),classList:"o_m2o_no_result",unselectable:true,});}
return options;}
async onSearchMore(section,resModel,domain,request){const dynamicFilters=[];if(request.length){const nameGets=await this.orm.call(resModel,"name_search",[],{name:request,args:domain,operator:"ilike",context:{},});dynamicFilters.push({description:_t("Quick search: %s",request),domain:[["id","in",nameGets.map((nameGet)=>nameGet[0])]],});}
const title=_t("Search: %s",section.label);const dialogProps={title,noCreate:true,multiSelect:true,resModel,context:{},domain,onSelected:(resId)=>this.props.model.createFilter(section.fieldName,resId),dynamicFilters,};const updatedProps=this.updateSelectCreateDialogProps(dialogProps);this.addDialog(SelectCreateDialog,updatedProps);}
updateSelectCreateDialogProps(props){return props;}
get nextFilterId(){nextId+=1;return nextId;}
isAllActive(section){let active=true;for(const filter of section.filters){if(filter.type!=="all"&&!filter.active){active=false;break;}}
return active;}
getFilterTypePriority(type){return["user","record","dynamic","all"].indexOf(type);}
getSortedFilters(section){return section.filters.slice().sort((a,b)=>{if(a.type===b.type){const va=a.value?-1:0;const vb=b.value?-1:0;if(a.type==="dynamic"&&va!==vb){return va-vb;}
return a.label.localeCompare(b.label,undefined,{numeric:true,sensitivity:"base",ignorePunctuation:true,});}else{return this.getFilterTypePriority(a.type)-this.getFilterTypePriority(b.type);}});}
toggleSection(section){if(section.canCollapse){this.state.collapsed[section.fieldName]=!this.state.collapsed[section.fieldName];}}
isSectionCollapsed(section){return this.state.collapsed[section.fieldName]||false;}
onFilterInputChange(section,filter,ev){this.props.model.updateFilters(section.fieldName,{[filter.value]:ev.target.checked,});}
onAllFilterInputChange(section,ev){const filters={};for(const filter of section.filters){if(filter.type!=="all"){filters[filter.value]=ev.target.checked;}}
this.props.model.updateFilters(section.fieldName,filters);}
onFilterRemoveBtnClick(section,filter){this.props.model.unlinkFilter(section.fieldName,filter.recordId);}
onFieldChanged(fieldName,filterValue){this.state.fieldRev+=1;this.props.model.createFilter(fieldName,filterValue);}}
return __exports;});;

/* /web/static/src/views/calendar/hooks.js */
odoo.define('@web/views/calendar/hooks',['@web/core/assets','@web/core/browser/browser','@web/core/popover/popover_hook','@web/core/utils/hooks','@odoo/owl'],function(require){'use strict';let __exports={};const{loadBundle}=require("@web/core/assets");const{browser}=require("@web/core/browser/browser");const{usePopover}=require("@web/core/popover/popover_hook");const{useService}=require("@web/core/utils/hooks");const{onMounted,onPatched,onWillStart,onWillUnmount,useComponent,useExternalListener,useRef,}=require("@odoo/owl");__exports.useCalendarPopover=useCalendarPopover;function useCalendarPopover(component){const owner=useComponent();let popoverClass="";const popoverOptions={position:"right",onClose:cleanup};Object.defineProperty(popoverOptions,"popoverClass",{get:()=>popoverClass});const popover=usePopover(component,popoverOptions);const dialog=useService("dialog");let removeDialog=null;let fcPopover;useExternalListener(window,"mousedown",(ev)=>{if(fcPopover){ev.stopPropagation();}},{capture:true});function cleanup(){fcPopover=null;removeDialog=null;}
function close(){removeDialog?.();popover.close();cleanup();}
return{close,open(target,props,popoverClassToUse){fcPopover=target.closest(".fc-popover");if(owner.env.isSmall){close();removeDialog=dialog.add(component,props,{onClose:cleanup});}else{popoverClass=popoverClassToUse;popover.open(target,props);}},};}
__exports.useClickHandler=useClickHandler;function useClickHandler(singleClickCb,doubleClickCb){const component=useComponent();let clickTimeoutId=null;return function handle(...args){if(clickTimeoutId){doubleClickCb.call(component,...args);browser.clearTimeout(clickTimeoutId);clickTimeoutId=null;}else{clickTimeoutId=browser.setTimeout(()=>{singleClickCb.call(component,...args);clickTimeoutId=null;},250);}};}
__exports.useFullCalendar=useFullCalendar;function useFullCalendar(refName,params){const component=useComponent();const ref=useRef(refName);let instance=null;function boundParams(){const newParams={};for(const key in params){const value=params[key];newParams[key]=typeof value==="function"?value.bind(component):value;}
return newParams;}
onWillStart(async()=>await loadBundle("web.fullcalendar_lib"));onMounted(()=>{try{instance=new FullCalendar.Calendar(ref.el,boundParams());instance.render();}catch(e){throw new Error(`Cannot instantiate FullCalendar\n${e.message}`);}});onPatched(()=>{instance.refetchEvents();instance.setOption("weekends",component.props.isWeekendVisible);if(params.weekNumbers&&component.props.model.scale==="year"){instance.destroy();instance.render();}});onWillUnmount(()=>{instance.destroy();});return{get api(){return instance;},get el(){return ref.el;},};}
return __exports;});;

/* /web/static/src/views/calendar/mobile_filter_panel/calendar_mobile_filter_panel.js */
odoo.define('@web/views/calendar/mobile_filter_panel/calendar_mobile_filter_panel',['@odoo/owl','@web/views/calendar/colors'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{getColor}=require("@web/views/calendar/colors");const CalendarMobileFilterPanel=__exports.CalendarMobileFilterPanel=class CalendarMobileFilterPanel extends Component{static components={};static template="web.CalendarMobileFilterPanel";static props={model:Object,sideBarShown:Boolean,toggleSideBar:Function,};get caretDirection(){return this.props.sideBarShown?"down":"left";}
getFilterColor(filter){return`o_color_${getColor(filter.colorIndex)}`;}
getFilterTypePriority(type){return["user","record","dynamic","all"].indexOf(type);}
getSortedFilters(section){return section.filters.slice().sort((a,b)=>{if(a.type===b.type){const va=a.value?-1:0;const vb=b.value?-1:0;if(a.type==="dynamic"&&va!==vb){return va-vb;}
return a.label.localeCompare(b.label,undefined,{numeric:true,sensitivity:"base",ignorePunctuation:true,});}else{return this.getFilterTypePriority(a.type)-this.getFilterTypePriority(b.type);}});}}
return __exports;});;

/* /web/static/src/views/calendar/quick_create/calendar_quick_create.js */
odoo.define('@web/views/calendar/quick_create/calendar_quick_create',['@web/core/utils/hooks','@web/core/dialog/dialog','@web/core/l10n/translation','@odoo/owl'],function(require){'use strict';let __exports={};const{useAutofocus,useService}=require("@web/core/utils/hooks");const{Dialog}=require("@web/core/dialog/dialog");const{_t}=require("@web/core/l10n/translation");const{Component}=require("@odoo/owl");const CalendarQuickCreate=__exports.CalendarQuickCreate=class CalendarQuickCreate extends Component{static template="web.CalendarQuickCreate";static components={Dialog,};static props={title:{type:String,optional:true},close:Function,record:Object,model:Object,editRecord:Function,};setup(){this.titleRef=useAutofocus({refName:"title"});this.notification=useService("notification");this.creatingRecord=false;}
get dialogTitle(){return _t("New Event");}
get recordTitle(){return this.titleRef.el.value.trim();}
get record(){return{...this.props.record,title:this.recordTitle,};}
editRecord(){this.props.editRecord(this.record);this.props.close();}
async createRecord(){if(this.creatingRecord){return;}
if(this.recordTitle){try{this.creatingRecord=true;await this.props.model.createRecord(this.record);this.props.close();}catch{this.editRecord();}}else{this.titleRef.el.classList.add("o_field_invalid");this.notification.add(_t("Meeting Subject"),{title:_t("Invalid fields"),type:"danger",});}}
onInputKeyup(ev){switch(ev.key){case"Enter":this.createRecord();break;case"Escape":this.props.close();break;}}
onCreateBtnClick(){this.createRecord();}
onEditBtnClick(){this.editRecord();}
onCancelBtnClick(){this.props.close();}}
return __exports;});;

/* /web/static/src/views/calendar/utils.js */
odoo.define('@web/views/calendar/utils',[],function(require){'use strict';let __exports={};__exports.getFormattedDateSpan=getFormattedDateSpan;function getFormattedDateSpan(start,end){const isSameDay=start.hasSame(end,"days");if(!isSameDay&&start.hasSame(end,"month")){return start.toFormat("LLLL d")+"-"+end.toFormat("d, y");}else{return isSameDay?start.toFormat("DDD"):start.toFormat("DDD")+" - "+end.toFormat("DDD");}}
return __exports;});;

/* /web/static/src/views/debug_items.js */
odoo.define('@web/views/debug_items',['@web/core/l10n/translation','@web/core/dialog/dialog','@web/core/py_js/py','@web/core/debug/debug_utils','@web/core/l10n/dates','@web/core/registry','@web/core/utils/hooks','@web/views/fields/formatters','@web/views/view_dialogs/form_view_dialog','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{Dialog}=require("@web/core/dialog/dialog");const{evaluateBooleanExpr}=require("@web/core/py_js/py");const{editModelDebug}=require("@web/core/debug/debug_utils");const{formatDateTime,deserializeDateTime}=require("@web/core/l10n/dates");const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{formatMany2one}=require("@web/views/fields/formatters");const{FormViewDialog}=require("@web/views/view_dialogs/form_view_dialog");const{Component,onWillStart,useState,xml}=require("@odoo/owl");const{serializeDate,serializeDateTime}=require("@web/core/l10n/dates");const debugRegistry=registry.category("debug");class GetViewDialog extends Component{static template="web.DebugMenu.GetViewDialog";static components={Dialog};static props={arch:{type:String},close:{type:Function},};}
__exports.getView=getView;function getView({component,env}){return{type:"item",description:_t("Computed Arch"),callback:()=>{env.services.dialog.add(GetViewDialog,{arch:component.env.config.rawArch});},sequence:270,section:"ui",};}
debugRegistry.category("view").add("getView",getView);__exports.editView=editView;function editView({accessRights,component,env}){if(!accessRights.canEditView){return null;}
const{viewId,viewType:type}=component.env.config;if(!type){return;}
const displayName=type[0].toUpperCase()+type.slice(1);const description=_t("View: %(displayName)s",{displayName});return{type:"item",description,callback:()=>{editModelDebug(env,description,"ir.ui.view",viewId);},sequence:240,section:"ui",};}
debugRegistry.category("view").add("editView",editView);__exports.editSearchView=editSearchView;function editSearchView({accessRights,component,env}){if(!accessRights.canEditView){return null;}
const{searchViewId}=component.componentProps.info;if(searchViewId===undefined){return null;}
const description=_t("SearchView");return{type:"item",description,callback:()=>{editModelDebug(env,description,"ir.ui.view",searchViewId);},sequence:230,section:"ui",};}
debugRegistry.category("view").add("editSearchView",editSearchView);class GetMetadataDialog extends Component{static template="web.DebugMenu.GetMetadataDialog";static components={Dialog};static props={resModel:String,resId:Number,close:Function,};setup(){this.orm=useService("orm");this.dialogService=useService("dialog");this.title=_t("View Metadata");this.state=useState({});onWillStart(()=>this.loadMetadata());}
onClickCreateXmlid(){const context=Object.assign({},this.context,{default_module:"__custom__",default_res_id:this.state.id,default_model:this.props.resModel,});this.dialogService.add(FormViewDialog,{context,onRecordSaved:()=>this.loadMetadata(),resModel:"ir.model.data",});}
async toggleNoupdate(){await this.env.services.orm.call("ir.model.data","toggle_noupdate",[this.props.resModel,this.state.id,]);await this.loadMetadata();}
async loadMetadata(){const args=[[this.props.resId]];const result=await this.orm.call(this.props.resModel,"get_metadata",args);const metadata=result[0];this.state.id=metadata.id;this.state.xmlid=metadata.xmlid;this.state.xmlids=metadata.xmlids;this.state.noupdate=metadata.noupdate;this.state.creator=formatMany2one(metadata.create_uid);this.state.lastModifiedBy=formatMany2one(metadata.write_uid);this.state.createDate=formatDateTime(deserializeDateTime(metadata.create_date));this.state.writeDate=formatDateTime(deserializeDateTime(metadata.write_date));}}
__exports.viewMetadata=viewMetadata;function viewMetadata({component,env}){const resId=component.model.root.resId;if(!resId){return null;}
return{type:"item",description:_t("Metadata"),callback:()=>{env.services.dialog.add(GetMetadataDialog,{resModel:component.props.resModel,resId,});},sequence:110,section:"record",};}
debugRegistry.category("form").add("viewMetadata",viewMetadata);class RawRecordDialog extends Component{static template=xml`
        <Dialog title="props.title">
            <pre t-esc="content"/>
        </Dialog>
    `;static components={Dialog};static props={record:{type:Object},title:{type:String},close:{type:Function},};get content(){const record=this.props.record;return JSON.stringify(record,Object.keys(record).sort(),2);}}
__exports.viewRawRecord=viewRawRecord;function viewRawRecord({component,env}){const{resId,resModel}=component.model.config;if(!resId){return null;}
const description=_t("Data");return{type:"item",description,callback:async()=>{const records=await component.model.orm.read(resModel,[resId]);env.services.dialog.add(RawRecordDialog,{title:_t("Data: %(model)s(%(id)s)",{model:resModel,id:resId}),record:records[0],});},sequence:120,section:"record",};}
debugRegistry.category("form").add("viewRawRecord",viewRawRecord);class SetDefaultDialog extends Component{static template="web.DebugMenu.SetDefaultDialog";static components={Dialog};static props={record:{type:Object},fieldNodes:{type:Object},close:{type:Function},};setup(){this.orm=useService("orm");this.state={fieldToSet:"",condition:"",scope:"self",};this.fields=this.props.record.fields;this.activeFields=this.props.record.activeFields;this.fieldNamesInView=this.props.record.fieldNames;this.fieldNamesBlackList=["message_attachment_count"];this.fieldsValues=this.props.record.data;this.modifierDatas={};this.defaultFields=this.getDefaultFields();this.conditions=this.getConditions();}
getDefaultFields(){return this.fieldNamesInView.filter((fieldName)=>!this.fieldNamesBlackList.includes(fieldName)).map((fieldName)=>{const fieldInfo=this.fields[fieldName];const valueDisplayed=this.display(fieldInfo,this.fieldsValues[fieldName]);const value=valueDisplayed[0];const displayed=valueDisplayed[1];const evalContext=this.props.record.evalContextWithVirtualIds;if(!value||evaluateBooleanExpr(this.activeFields[fieldName].invisible,evalContext)||evaluateBooleanExpr(this.activeFields[fieldName].readonly,evalContext)||fieldInfo.type==="one2many"||fieldInfo.type==="many2many"||fieldInfo.type==="binary"||Object.entries(this.props.fieldNodes).filter(([key,value])=>value.name===fieldName).some(([key,value])=>value.options.isPassword)){return false;}
return{name:fieldName,string:fieldInfo.string,value,displayed,};}).filter((val)=>val).sort((field)=>field.string);}
getConditions(){return this.fieldNamesInView.filter((fieldName)=>{const fieldInfo=this.fields[fieldName];return fieldInfo.change_default;}).map((fieldName)=>{const fieldInfo=this.fields[fieldName];const valueDisplayed=this.display(fieldInfo,this.fieldsValues[fieldName]);const value=valueDisplayed[0];const displayed=valueDisplayed[1];return{name:fieldName,string:fieldInfo.string,value:value,displayed:displayed,};});}
display(fieldInfo,value){let displayed=value;if(value&&fieldInfo.type==="many2one"){displayed=value[1];value=value[0];}else if(value&&fieldInfo.type==="selection"){displayed=fieldInfo.selection.find((option)=>{return option[0]===value;})[1];}
return[value,displayed];}
async saveDefault(){if(!this.state.fieldToSet){return;}
let fieldToSet=this.defaultFields.find((field)=>{return field.name===this.state.fieldToSet;}).value;if(fieldToSet.constructor.name.toLowerCase()==="date"){fieldToSet=serializeDate(fieldToSet);}else if(fieldToSet.constructor.name.toLowerCase()==="datetime"){fieldToSet=serializeDateTime(fieldToSet);}
await this.orm.call("ir.default","set",[this.props.record.resModel,this.state.fieldToSet,fieldToSet,this.state.scope==="self",true,this.state.condition||false,]);this.props.close();}}
__exports.setDefaults=setDefaults;function setDefaults({component,env}){return{type:"item",description:_t("Set Default Values"),callback:()=>{env.services.dialog.add(SetDefaultDialog,{record:component.model.root,fieldNodes:component.props.archInfo.fieldNodes,});},sequence:150,section:"record",};}
debugRegistry.category("form").add("setDefaults",setDefaults);__exports.manageAttachments=manageAttachments;function manageAttachments({component,env}){const resId=component.model.root.resId;if(!resId){return null;}
const description=_t("Attachments");return{type:"item",description,callback:()=>{env.services.action.doAction({res_model:"ir.attachment",name:description,views:[[false,"list"],[false,"form"],],type:"ir.actions.act_window",domain:[["res_model","=",component.props.resModel],["res_id","=",resId],],context:{default_res_model:component.props.resModel,default_res_id:resId,skip_res_field_check:true,},});},sequence:140,section:"record",};}
debugRegistry.category("form").add("manageAttachments",manageAttachments);return __exports;});;

/* /web/static/src/views/fields/ace/ace_field.js */
odoo.define('@web/views/fields/ace/ace_field',['@web/core/l10n/translation','@web/core/registry','@web/core/utils/hooks','@web/views/fields/standard_field_props','@web/core/code_editor/code_editor','@odoo/owl','@web/model/relational_model/utils','@web/views/fields/formatters','@web/core/browser/cookie'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{useBus}=require("@web/core/utils/hooks");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{CodeEditor}=require("@web/core/code_editor/code_editor");const{Component,useState}=require("@odoo/owl");const{useRecordObserver}=require("@web/model/relational_model/utils");const{formatText}=require("@web/views/fields/formatters");const{cookie}=require("@web/core/browser/cookie");const AceField=__exports.AceField=class AceField extends Component{static template="web.AceField";static props={...standardFieldProps,mode:{type:String,optional:true},};static defaultProps={mode:"qweb",};static components={CodeEditor};setup(){this.state=useState({});useRecordObserver((record)=>{this.state.initialValue=formatText(record.data[this.props.name]);});this.isDirty=false;const{model}=this.props.record;useBus(model.bus,"WILL_SAVE_URGENTLY",()=>this.commitChanges());useBus(model.bus,"NEED_LOCAL_CHANGES",({detail})=>detail.proms.push(this.commitChanges()));}
get mode(){return this.props.mode==="xml"?"qweb":this.props.mode;}
get theme(){return cookie.get("color_scheme")==="dark"?"monokai":"";}
handleChange(editedValue){if(this.state.initialValue!==editedValue){this.isDirty=true;}else{this.isDirty=false;}
this.props.record.model.bus.trigger("FIELD_IS_DIRTY",this.isDirty);this.editedValue=editedValue;}
async commitChanges(){if(!this.props.readonly&&this.isDirty){if(this.state.initialValue!==this.editedValue){await this.props.record.update({[this.props.name]:this.editedValue});}
this.isDirty=false;this.props.record.model.bus.trigger("FIELD_IS_DIRTY",false);}}}
const aceField=__exports.aceField={component:AceField,displayName:_t("Ace Editor"),supportedOptions:[{label:_t("Mode"),name:"mode",type:"string",},],supportedTypes:["text","html"],extractProps:({options})=>({mode:options.mode,}),};registry.category("fields").add("ace",aceField);registry.category("fields").add("code",aceField);return __exports;});;

/* /web/static/src/views/fields/attachment_image/attachment_image_field.js */
odoo.define('@web/views/fields/attachment_image/attachment_image_field',['@web/core/l10n/translation','@web/core/registry','@odoo/owl','@web/views/fields/standard_field_props'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{Component}=require("@odoo/owl");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const AttachmentImageField=__exports.AttachmentImageField=class AttachmentImageField extends Component{static template="web.AttachmentImageField";static props={...standardFieldProps};}
const attachmentImageField=__exports.attachmentImageField={component:AttachmentImageField,displayName:_t("Attachment Image"),supportedTypes:["many2one"],};registry.category("fields").add("attachment_image",attachmentImageField);return __exports;});;

/* /web/static/src/views/fields/badge/badge_field.js */
odoo.define('@web/views/fields/badge/badge_field',['@web/core/l10n/translation','@web/core/py_js/py','@web/core/registry','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{evaluateBooleanExpr}=require("@web/core/py_js/py");const{registry}=require("@web/core/registry");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const formatters=registry.category("formatters");const BadgeField=__exports.BadgeField=class BadgeField extends Component{static template="web.BadgeField";static props={...standardFieldProps,decorations:{type:Object,optional:true},};static defaultProps={decorations:{},};get formattedValue(){const formatter=formatters.get(this.props.record.fields[this.props.name].type);return formatter(this.props.record.data[this.props.name],{selection:this.props.record.fields[this.props.name].selection,});}
get classFromDecoration(){const evalContext=this.props.record.evalContextWithVirtualIds;for(const decorationName in this.props.decorations){if(evaluateBooleanExpr(this.props.decorations[decorationName],evalContext)){if(decorationName==="muted"){return"text-bg-300";}
return`text-bg-${decorationName}`;}}
return"text-bg-300";}}
const badgeField=__exports.badgeField={component:BadgeField,displayName:_t("Badge"),supportedTypes:["selection","many2one","char"],extractProps:({decorations})=>{return{decorations};},};registry.category("fields").add("badge",badgeField);return __exports;});;

/* /web/static/src/views/fields/badge_selection/badge_selection_field.js */
odoo.define('@web/views/fields/badge_selection/badge_selection_field',['@odoo/owl','@web/core/l10n/translation','@web/core/registry','@web/model/relational_model/utils','@web/views/fields/relational_utils','@web/views/fields/standard_field_props'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{getFieldDomain}=require("@web/model/relational_model/utils");const{useSpecialData}=require("@web/views/fields/relational_utils");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const BadgeSelectionField=__exports.BadgeSelectionField=class BadgeSelectionField extends Component{static template="web.BadgeSelectionField";static props={...standardFieldProps,domain:{type:[Array,Function],optional:true},size:{type:String,optional:true,validate:(s)=>["sm","md","lg"].includes(s),default:"md",},};setup(){this.type=this.props.record.fields[this.props.name].type;if(this.type==="many2one"){this.specialData=useSpecialData((orm,props)=>{const domain=getFieldDomain(props.record,props.name,props.domain);const{relation}=props.record.fields[props.name];return orm.call(relation,"name_search",["",domain]);});}}
get options(){switch(this.type){case"many2one":return this.specialData.data;case"selection":return this.props.record.fields[this.props.name].selection;default:return[];}}
get string(){switch(this.type){case"many2one":return this.props.record.data[this.props.name]?this.props.record.data[this.props.name][1]:"";case"selection":return this.props.record.data[this.props.name]!==false?this.options.find((o)=>o[0]===this.props.record.data[this.props.name])[1]:"";default:return"";}}
get value(){const rawValue=this.props.record.data[this.props.name];return this.type==="many2one"&&rawValue?rawValue[0]:rawValue;}
stringify(value){return JSON.stringify(value);}
onChange(value){switch(this.type){case"many2one":if(value===false){this.props.record.update({[this.props.name]:false});}else{this.props.record.update({[this.props.name]:this.options.find((option)=>option[0]===value),});}
break;case"selection":if(value===this.value){const{required}=this.props.record.fields[this.props.name];if(!required){this.props.record.update({[this.props.name]:false});}}else{this.props.record.update({[this.props.name]:value});}
break;}}}
const badgeSelectionField=__exports.badgeSelectionField={component:BadgeSelectionField,displayName:_t("Badges"),supportedTypes:["many2one","selection"],supportedOptions:[{label:"Size",name:"size",type:"selection",choices:[{label:"Small",value:"sm"},{label:"Medium",value:"md"},{label:"Large",value:"lg"},],default:"md",},],isEmpty:(record,fieldName)=>record.data[fieldName]===false,extractProps:(fieldInfo,dynamicInfo)=>({domain:dynamicInfo.domain,size:fieldInfo.options.size,}),};registry.category("fields").add("selection_badge",badgeSelectionField);return __exports;});;

/* /web/static/src/views/fields/binary/binary_field.js */
odoo.define('@web/views/fields/binary/binary_field',['@web/core/registry','@web/core/utils/hooks','@web/core/utils/binary','@web/core/network/download','@web/views/fields/standard_field_props','@web/views/fields/file_handler','@web/core/l10n/translation','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{isBinarySize,toBase64Length}=require("@web/core/utils/binary");const{download}=require("@web/core/network/download");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{FileUploader}=require("@web/views/fields/file_handler");const{_t}=require("@web/core/l10n/translation");const{Component}=require("@odoo/owl");const MAX_FILENAME_SIZE_BYTES=__exports.MAX_FILENAME_SIZE_BYTES=0xFF;const BinaryField=__exports.BinaryField=class BinaryField extends Component{static template="web.BinaryField";static components={FileUploader,};static props={...standardFieldProps,acceptedFileExtensions:{type:String,optional:true},fileNameField:{type:String,optional:true},};static defaultProps={acceptedFileExtensions:"*",};setup(){this.notification=useService("notification");}
get fileName(){return(this.props.record.data[this.props.fileNameField]||this.props.record.data[this.props.name]||"").slice(0,toBase64Length(MAX_FILENAME_SIZE_BYTES));}
update({data,name}){const{fileNameField,record}=this.props;const changes={[this.props.name]:data||false};if(fileNameField in record.fields&&record.data[fileNameField]!==name){changes[fileNameField]=name||'';}
return this.props.record.update(changes);}
getDownloadData(){return{model:this.props.record.resModel,id:this.props.record.resId,field:this.props.name,filename_field:this.fileName,filename:this.fileName||"",download:true,data:isBinarySize(this.props.record.data[this.props.name])?null:this.props.record.data[this.props.name],};}
async onFileDownload(){await download({data:this.getDownloadData(),url:"/web/content",});}}
const ListBinaryField=__exports.ListBinaryField=class ListBinaryField extends BinaryField{static template="web.ListBinaryField";}
const binaryField=__exports.binaryField={component:BinaryField,displayName:_t("File"),supportedOptions:[{label:_t("Accepted file extensions"),name:"accepted_file_extensions",type:"string",},],supportedTypes:["binary"],extractProps:({attrs,options})=>({acceptedFileExtensions:options.accepted_file_extensions,fileNameField:attrs.filename,}),};const listBinaryField=__exports.listBinaryField={...binaryField,component:ListBinaryField,};registry.category("fields").add("binary",binaryField);registry.category("fields").add("list.binary",listBinaryField);return __exports;});;

/* /web/static/src/views/fields/boolean/boolean_field.js */
odoo.define('@web/views/fields/boolean/boolean_field',['@odoo/owl','@web/core/checkbox/checkbox','@web/core/l10n/translation','@web/core/registry','@web/model/relational_model/utils','@web/views/fields/standard_field_props'],function(require){'use strict';let __exports={};const{Component,useState}=require("@odoo/owl");const{CheckBox}=require("@web/core/checkbox/checkbox");const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{useRecordObserver}=require("@web/model/relational_model/utils");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const BooleanField=__exports.BooleanField=class BooleanField extends Component{static template="web.BooleanField";static components={CheckBox};static props={...standardFieldProps,};setup(){this.state=useState({});useRecordObserver((record)=>{this.state.value=record.data[this.props.name];});}
onChange(newValue){this.state.value=newValue;this.props.record.update({[this.props.name]:newValue});}}
const booleanField=__exports.booleanField={component:BooleanField,displayName:_t("Checkbox"),supportedTypes:["boolean"],isEmpty:()=>false,};registry.category("fields").add("boolean",booleanField);return __exports;});;

/* /web/static/src/views/fields/boolean_favorite/boolean_favorite_field.js */
odoo.define('@web/views/fields/boolean_favorite/boolean_favorite_field',['@web/core/l10n/translation','@web/core/registry','@web/core/utils/strings','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{exprToBoolean}=require("@web/core/utils/strings");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const BooleanFavoriteField=__exports.BooleanFavoriteField=class BooleanFavoriteField extends Component{static template="web.BooleanFavoriteField";static props={...standardFieldProps,noLabel:{type:Boolean,optional:true},autosave:{type:Boolean,optional:true},};static defaultProps={noLabel:false,};get iconClass(){return this.props.record.data[this.props.name]?"fa fa-star me-1":"fa fa-star-o me-1";}
get label(){return this.props.record.data[this.props.name]?_t("Remove from Favorites"):_t("Add to Favorites");}
async update(){if(this.props.readonly){return;}
const changes={[this.props.name]:!this.props.record.data[this.props.name]};await this.props.record.update(changes,{save:this.props.autosave});}}
const booleanFavoriteField=__exports.booleanFavoriteField={component:BooleanFavoriteField,displayName:_t("Favorite"),supportedTypes:["boolean"],isEmpty:()=>false,listViewWidth:({hasLabel})=>(!hasLabel?20:false),supportedOptions:[{label:_t("Autosave"),name:"autosave",type:"boolean",default:true,help:_t("If checked, the record will be saved immediately when the field is modified."),},],extractProps:({attrs,options},dynamicInfo)=>({noLabel:exprToBoolean(attrs.nolabel),autosave:"autosave"in options?Boolean(options.autosave):true,readonly:dynamicInfo.readonly,}),};registry.category("fields").add("boolean_favorite",booleanFavoriteField);return __exports;});;

/* /web/static/src/views/fields/boolean_icon/boolean_icon_field.js */
odoo.define('@web/views/fields/boolean_icon/boolean_icon_field',['@odoo/owl','@web/core/registry','@web/core/l10n/translation','@web/views/fields/standard_field_props'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{registry}=require("@web/core/registry");const{_t}=require("@web/core/l10n/translation");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const BooleanIconField=__exports.BooleanIconField=class BooleanIconField extends Component{static template="web.BooleanIconField";static props={...standardFieldProps,icon:{type:String,optional:true},label:{type:String,optional:true},};static defaultProps={icon:"fa-check-square-o",};update(){this.props.record.update({[this.props.name]:!this.props.record.data[this.props.name]});}}
const booleanIconField=__exports.booleanIconField={component:BooleanIconField,displayName:_t("Boolean Icon"),supportedOptions:[{label:_t("Icon"),name:"icon",type:"string",},],supportedTypes:["boolean"],extractProps:({options,string})=>({icon:options.icon,label:string,}),};registry.category("fields").add("boolean_icon",booleanIconField);return __exports;});;

/* /web/static/src/views/fields/boolean_toggle/boolean_toggle_field.js */
odoo.define('@web/views/fields/boolean_toggle/boolean_toggle_field',['@web/core/l10n/translation','@web/core/registry','@web/views/fields/boolean/boolean_field'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{booleanField,BooleanField}=require("@web/views/fields/boolean/boolean_field");const BooleanToggleField=__exports.BooleanToggleField=class BooleanToggleField extends BooleanField{static template="web.BooleanToggleField";static props={...BooleanField.props,autosave:{type:Boolean,optional:true},};async onChange(newValue){this.state.value=newValue;const changes={[this.props.name]:newValue};await this.props.record.update(changes,{save:this.props.autosave});}}
const booleanToggleField=__exports.booleanToggleField={...booleanField,component:BooleanToggleField,displayName:_t("Toggle"),supportedOptions:[{label:_t("Autosave"),name:"autosave",type:"boolean",default:true,help:_t("If checked, the record will be saved immediately when the field is modified."),},],extractProps({options},dynamicInfo){return{autosave:"autosave"in options?Boolean(options.autosave):true,readonly:dynamicInfo.readonly,};},};registry.category("fields").add("boolean_toggle",booleanToggleField);return __exports;});;

/* /web/static/src/views/fields/boolean_toggle/list_boolean_toggle_field.js */
odoo.define('@web/views/fields/boolean_toggle/list_boolean_toggle_field',['@web/core/registry','@web/views/fields/boolean_toggle/boolean_toggle_field'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{booleanToggleField,BooleanToggleField}=require("@web/views/fields/boolean_toggle/boolean_toggle_field");const ListBooleanToggleField=__exports.ListBooleanToggleField=class ListBooleanToggleField extends BooleanToggleField{static template="web.ListBooleanToggleField";async onClick(){if(!this.props.readonly&&this.props.record.isInEdition){const changes={[this.props.name]:!this.props.record.data[this.props.name]};await this.props.record.update(changes,{save:this.props.autosave});}}}
const listBooleanToggleField=__exports.listBooleanToggleField={...booleanToggleField,component:ListBooleanToggleField,};registry.category("fields").add("list.boolean_toggle",listBooleanToggleField);return __exports;});;

/* /web/static/src/views/fields/char/char_field.js */
odoo.define('@web/views/fields/char/char_field',['@web/core/l10n/translation','@web/core/registry','@web/core/utils/strings','@web/views/fields/dynamic_placeholder_hook','@web/views/fields/formatters','@web/views/fields/input_field_hook','@web/views/fields/standard_field_props','@web/views/fields/translation_button','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{exprToBoolean}=require("@web/core/utils/strings");const{useDynamicPlaceholder}=require("@web/views/fields/dynamic_placeholder_hook");const{formatChar}=require("@web/views/fields/formatters");const{useInputField}=require("@web/views/fields/input_field_hook");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{TranslationButton}=require("@web/views/fields/translation_button");const{Component,useEffect,useExternalListener,useRef}=require("@odoo/owl");const CharField=__exports.CharField=class CharField extends Component{static template="web.CharField";static components={TranslationButton,};static props={...standardFieldProps,autocomplete:{type:String,optional:true},isPassword:{type:Boolean,optional:true},placeholder:{type:String,optional:true},dynamicPlaceholder:{type:Boolean,optional:true},dynamicPlaceholderModelReferenceField:{type:String,optional:true},placeholderField:{type:String,optional:true},};static defaultProps={dynamicPlaceholder:false};setup(){this.input=useRef("input");if(this.props.dynamicPlaceholder){this.dynamicPlaceholder=useDynamicPlaceholder(this.input);useExternalListener(document,"keydown",this.dynamicPlaceholder.onKeydown);useEffect(()=>this.dynamicPlaceholder.updateModel(this.props.dynamicPlaceholderModelReferenceField));}
useInputField({getValue:()=>this.props.record.data[this.props.name]||"",parse:(v)=>this.parse(v),});this.selectionStart=this.props.record.data[this.props.name]?.length||0;}
get shouldTrim(){return this.props.record.fields[this.props.name].trim&&!this.props.isPassword;}
get maxLength(){return this.props.record.fields[this.props.name].size;}
get isTranslatable(){return this.props.record.fields[this.props.name].translate;}
get formattedValue(){return formatChar(this.props.record.data[this.props.name],{isPassword:this.props.isPassword,});}
get hasDynamicPlaceholder(){return this.props.dynamicPlaceholder&&!this.props.readonly;}
get placeholder(){return this.props.record.data[this.props.placeholderField]||this.props.placeholder;}
parse(value){if(this.shouldTrim){return value.trim();}
return value;}
onBlur(){this.selectionStart=this.input.el.selectionStart;}
async onDynamicPlaceholderOpen(){await this.dynamicPlaceholder.open({validateCallback:this.onDynamicPlaceholderValidate.bind(this),});}
async onDynamicPlaceholderValidate(chain,defaultValue){if(chain){this.input.el.focus();const dynamicPlaceholder=` {{object.${chain}${
                defaultValue?.length ? `|||${defaultValue}` : ""
            }}}`;this.input.el.setRangeText(dynamicPlaceholder,this.selectionStart,this.selectionStart,"end");this.input.el.dispatchEvent(new InputEvent("input"));this.input.el.dispatchEvent(new KeyboardEvent("keydown"));this.input.el.focus();}}}
const charField=__exports.charField={component:CharField,displayName:_t("Text"),supportedTypes:["char"],supportedOptions:[{label:_t("Dynamic Placeholder"),name:"placeholder_field",type:"field",availableTypes:["char"],help:_t("Displays the value of the selected field as a textual hint. If the selected field is empty, the static placeholder attribute is displayed instead."),},],extractProps:({attrs,options})=>({isPassword:exprToBoolean(attrs.password),dynamicPlaceholder:options.dynamic_placeholder||false,dynamicPlaceholderModelReferenceField:options.dynamic_placeholder_model_reference_field||"",autocomplete:attrs.autocomplete,placeholder:attrs.placeholder,placeholderField:options.placeholder_field,}),};registry.category("fields").add("char",charField);return __exports;});;

/* /web/static/src/views/fields/color/color_field.js */
odoo.define('@web/views/fields/color/color_field',['@odoo/owl','@web/core/registry','@web/views/fields/standard_field_props'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{registry}=require("@web/core/registry");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const ColorField=__exports.ColorField=class ColorField extends Component{static template="web.ColorField";static props={...standardFieldProps,};get color(){return this.props.record.data[this.props.name]||"";}}
const colorField=__exports.colorField={component:ColorField,supportedTypes:["char"],extractProps(fieldInfo,dynamicInfo){return{readonly:dynamicInfo.readonly,};},};registry.category("fields").add("color",colorField);return __exports;});;

/* /web/static/src/views/fields/color_picker/color_picker_field.js */
odoo.define('@web/views/fields/color_picker/color_picker_field',['@web/core/colorlist/colorlist','@web/core/registry','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{ColorList}=require("@web/core/colorlist/colorlist");const{registry}=require("@web/core/registry");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const ColorPickerField=__exports.ColorPickerField=class ColorPickerField extends Component{static template="web.ColorPickerField";static components={ColorList,};static props={...standardFieldProps,canToggle:{type:Boolean},};static RECORD_COLORS=[0,1,2,3,4,5,6,7,8,9,10,11];get isExpanded(){return!this.props.canToggle&&!this.props.readonly;}
switchColor(colorIndex){this.props.record.update({[this.props.name]:colorIndex});}}
const colorPickerField=__exports.colorPickerField={component:ColorPickerField,supportedTypes:["integer"],extractProps:({viewType})=>({canToggle:viewType!=="list",}),};registry.category("fields").add("color_picker",colorPickerField);return __exports;});;

/* /web/static/src/views/fields/copy_clipboard/copy_clipboard_field.js */
odoo.define('@web/views/fields/copy_clipboard/copy_clipboard_field',['@web/core/l10n/translation','@web/core/py_js/py','@web/core/registry','@web/core/utils/objects','@web/core/copy_button/copy_button','@web/views/fields/char/char_field','@web/views/fields/standard_field_props','@web/views/fields/url/url_field','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{evaluateBooleanExpr}=require("@web/core/py_js/py");const{registry}=require("@web/core/registry");const{omit}=require("@web/core/utils/objects");const{CopyButton}=require("@web/core/copy_button/copy_button");const{CharField}=require("@web/views/fields/char/char_field");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{UrlField}=require("@web/views/fields/url/url_field");const{Component}=require("@odoo/owl");class CopyClipboardField extends Component{static template="web.CopyClipboardField";static props={...standardFieldProps,string:{type:String,optional:true},disabledExpr:{type:String,optional:true},};setup(){this.copyText=this.props.string||_t("Copy");this.successText=_t("Copied");}
get copyButtonClassName(){return`o_btn_${this.type}_copy btn-sm`;}
get fieldProps(){return omit(this.props,"string","disabledExpr");}
get type(){return this.props.record.fields[this.props.name].type;}
get disabled(){return this.props.disabledExpr?evaluateBooleanExpr(this.props.disabledExpr,this.props.record.evalContextWithVirtualIds):false;}}
const CopyClipboardButtonField=__exports.CopyClipboardButtonField=class CopyClipboardButtonField extends CopyClipboardField{static template="web.CopyClipboardButtonField";static components={CopyButton};get copyButtonClassName(){return`o_btn_${this.type}_copy btn-primary rounded-2`;}}
const CopyClipboardCharField=__exports.CopyClipboardCharField=class CopyClipboardCharField extends CopyClipboardField{static components={Field:CharField,CopyButton};get copyButtonIcon(){return"fa-clone";}}
const CopyClipboardURLField=__exports.CopyClipboardURLField=class CopyClipboardURLField extends CopyClipboardField{static components={Field:UrlField,CopyButton};get copyButtonIcon(){return"fa-link";}}
function extractProps({attrs}){return{string:attrs.string,disabledExpr:attrs.disabled,};}
const copyClipboardButtonField=__exports.copyClipboardButtonField={component:CopyClipboardButtonField,displayName:_t("Copy to Clipboard"),extractProps,};registry.category("fields").add("CopyClipboardButton",copyClipboardButtonField);const copyClipboardCharField=__exports.copyClipboardCharField={component:CopyClipboardCharField,displayName:_t("Copy Text to Clipboard"),supportedTypes:["char"],extractProps,};registry.category("fields").add("CopyClipboardChar",copyClipboardCharField);const copyClipboardURLField=__exports.copyClipboardURLField={component:CopyClipboardURLField,displayName:_t("Copy URL to Clipboard"),supportedTypes:["char"],extractProps,};registry.category("fields").add("CopyClipboardURL",copyClipboardURLField);return __exports;});;

/* /web/static/src/views/fields/datetime/datetime_field.js */
odoo.define('@web/views/fields/datetime/datetime_field',['@odoo/owl','@web/core/datetime/datetime_hook','@web/core/l10n/dates','@web/core/py_js/py','@web/core/l10n/translation','@web/core/registry','@web/core/utils/arrays','@web/core/utils/strings','@web/views/fields/formatters','@web/views/fields/standard_field_props'],function(require){'use strict';let __exports={};const{Component,onWillRender,useState}=require("@odoo/owl");const{useDateTimePicker}=require("@web/core/datetime/datetime_hook");const{areDatesEqual,deserializeDate,deserializeDateTime,today}=require("@web/core/l10n/dates");const{evaluateBooleanExpr}=require("@web/core/py_js/py");const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{ensureArray}=require("@web/core/utils/arrays");const{exprToBoolean}=require("@web/core/utils/strings");const{formatDate,formatDateTime}=require("@web/views/fields/formatters");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const DateTimeField=__exports.DateTimeField=class DateTimeField extends Component{static props={...standardFieldProps,endDateField:{type:String,optional:true},maxDate:{type:String,optional:true},minDate:{type:String,optional:true},alwaysRange:{type:Boolean,optional:true},placeholder:{type:String,optional:true},required:{type:Boolean,optional:true},rounding:{type:Number,optional:true},startDateField:{type:String,optional:true},warnFuture:{type:Boolean,optional:true},showSeconds:{type:Boolean,optional:true},showTime:{type:Boolean,optional:true},minPrecision:{type:String,optional:true,validate:(props)=>["days","months","years","decades"].includes(props),},maxPrecision:{type:String,optional:true,validate:(props)=>["days","months","years","decades"].includes(props),},condensed:{type:Boolean,optional:true},};static defaultProps={showSeconds:true,showTime:true,};static template="web.DateTimeField";get endDateField(){return this.relatedField?this.props.endDateField||this.props.name:null;}
get field(){return this.props.record.fields[this.props.name];}
get relatedField(){return this.props.startDateField||this.props.endDateField;}
get startDateField(){return this.props.startDateField||this.props.name;}
get values(){return ensureArray(this.state.value);}
setup(){const getPickerProps=()=>{const value=this.getRecordValue();const pickerProps={value,type:this.field.type,range:this.isRange(value),};if(this.props.maxDate){pickerProps.maxDate=this.parseLimitDate(this.props.maxDate);}
if(this.props.minDate){pickerProps.minDate=this.parseLimitDate(this.props.minDate);}
if(!isNaN(this.props.rounding)){pickerProps.rounding=this.props.rounding;}else if(!this.props.showSeconds){pickerProps.rounding=0;}
if(this.props.maxPrecision){pickerProps.maxPrecision=this.props.maxPrecision;}
if(this.props.minPrecision){pickerProps.minPrecision=this.props.minPrecision;}
return pickerProps;};const dateTimePicker=useDateTimePicker({target:"root",showSeconds:this.props.showSeconds,condensed:this.props.condensed,get pickerProps(){return getPickerProps();},onChange:()=>{this.state.range=this.isRange(this.state.value);},onApply:()=>{const toUpdate={};if(Array.isArray(this.state.value)){[toUpdate[this.startDateField],toUpdate[this.endDateField]]=this.state.value;}else{toUpdate[this.props.name]=this.state.value;}
for(const fieldName in toUpdate){if(areDatesEqual(toUpdate[fieldName],this.props.record.data[fieldName])){delete toUpdate[fieldName];}}
if(Object.keys(toUpdate).length){this.props.record.update(toUpdate);}},});this.state=useState(dateTimePicker.state);this.openPicker=dateTimePicker.open;onWillRender(()=>this.triggerIsDirty());}
async addDate(valueIndex){const values=this.values;values[valueIndex]=valueIndex?values[0].plus({hours:1}):values[1].minus({hours:1});this.state.focusedDateIndex=valueIndex;this.state.value=values;this.state.range=true;this.openPicker(valueIndex);}
getFormattedValue(valueIndex){const value=this.values[valueIndex];const{condensed,showSeconds,showTime}=this.props;return value?this.field.type==="date"?formatDate(value,{condensed}):formatDateTime(value,{condensed,showSeconds,showTime}):"";}
getRecordValue(){if(this.relatedField){return[this.props.record.data[this.startDateField],this.props.record.data[this.endDateField],];}else{return this.props.record.data[this.props.name];}}
isDateInTheFuture(index){return this.values[index]>today();}
isEmpty(fieldName){return fieldName===this.startDateField?!this.values[0]:!this.values[1];}
isRange(value){if(!this.relatedField){return false;}
return(this.props.alwaysRange||this.props.required||ensureArray(value).filter(Boolean).length===2);}
parseLimitDate(value){if(value==="today"){return value;}
return this.field.type==="date"?deserializeDate(value):deserializeDateTime(value);}
shouldShowSeparator(){return((this.props.alwaysRange&&(this.props.readonly?!this.isEmpty(this.startDateField)||!this.isEmpty(this.endDateField):true))||(this.state.range&&(this.props.required||(!this.isEmpty(this.startDateField)&&!this.isEmpty(this.endDateField)))));}
triggerIsDirty(isDirty){this.props.record.model.bus.trigger("FIELD_IS_DIRTY",isDirty??!areDatesEqual(this.getRecordValue(),this.state.value));}
onInput(){this.triggerIsDirty(true);}}
const START_DATE_FIELD_OPTION="start_date_field";const END_DATE_FIELD_OPTION="end_date_field";const dateField=__exports.dateField={component:DateTimeField,displayName:_t("Date"),supportedOptions:[{label:_t("Earliest accepted date"),name:"min_date",type:"string",help:_t(`ISO-formatted date (e.g. "2018-12-31") or "%s".`,"today"),},{label:_t("Latest accepted date"),name:"max_date",type:"string",help:_t(`ISO-formatted date (e.g. "2018-12-31") or "%s".`,"today"),},{label:_t("Warning for future dates"),name:"warn_future",type:"boolean",help:_t(`Displays a warning icon if the input dates are in the future.`),},{label:_t("Minimal precision"),name:"min_precision",type:"selection",help:_t(`Choose which minimal precision (days, months, ...) you want in the datetime picker.`),choices:[{label:_t("Days"),value:"days"},{label:_t("Months"),value:"months"},{label:_t("Years"),value:"years"},{label:_t("Decades"),value:"decades"},],},{label:_t("Maximal precision"),name:"max_precision",type:"selection",help:_t(`Choose which maximal precision (days, months, ...) you want in the datetime picker.`),choices:[{label:_t("Days"),value:"days"},{label:_t("Months"),value:"months"},{label:_t("Years"),value:"years"},{label:_t("Decades"),value:"decades"},],},{label:_t("Condensed display"),name:"condensed",type:"boolean",help:_t(`Set to true to display days, months (and hours) with unpadded numbers`),},],supportedTypes:["date"],extractProps:({attrs,options},dynamicInfo)=>({endDateField:options[END_DATE_FIELD_OPTION],maxDate:options.max_date,minDate:options.min_date,alwaysRange:exprToBoolean(options.always_range),placeholder:attrs.placeholder,required:dynamicInfo.required,rounding:options.rounding&&parseInt(options.rounding,10),startDateField:options[START_DATE_FIELD_OPTION],warnFuture:exprToBoolean(options.warn_future),minPrecision:options.min_precision,maxPrecision:options.max_precision,condensed:options.condensed,}),fieldDependencies:({type,attrs,options})=>{const deps=[];if(options[START_DATE_FIELD_OPTION]){deps.push({name:options[START_DATE_FIELD_OPTION],type,readonly:false,...attrs,});if(options[END_DATE_FIELD_OPTION]){console.warn(`A field cannot have both ${START_DATE_FIELD_OPTION} and ${END_DATE_FIELD_OPTION} options at the same time`);}}else if(options[END_DATE_FIELD_OPTION]){deps.push({name:options[END_DATE_FIELD_OPTION],type,readonly:false,...attrs,});}
return deps;},};const dateTimeField=__exports.dateTimeField={...dateField,displayName:_t("Date & Time"),supportedOptions:[...dateField.supportedOptions,{label:_t("Time interval"),name:"rounding",type:"number",default:5,help:_t(`Control the number of minutes in the time selection. E.g. set it to 15 to work in quarters.`),},{label:_t("Show seconds"),name:"show_seconds",type:"boolean",default:true,help:_t(`Displays or hides the seconds in the datetime value.`),},{label:_t("Show time"),name:"show_time",type:"boolean",default:true,help:_t(`Displays or hides the time in the datetime value.`),},],extractProps:({attrs,options},dynamicInfo)=>({...dateField.extractProps({attrs,options},dynamicInfo),showSeconds:exprToBoolean(options.show_seconds??true),showTime:exprToBoolean(options.show_time??true),}),supportedTypes:["datetime"],};const dateRangeField=__exports.dateRangeField={...dateTimeField,displayName:_t("Date Range"),supportedOptions:[...dateTimeField.supportedOptions,{label:_t("Start date field"),name:START_DATE_FIELD_OPTION,type:"field",availableTypes:["date","datetime"],},{label:_t("End date field"),name:END_DATE_FIELD_OPTION,type:"field",availableTypes:["date","datetime"],},{label:_t("Always range"),name:"always_range",type:"boolean",default:false,help:_t(`Set to true the full range input has to be display by default, even if empty.`),},],supportedTypes:["date","datetime"],listViewWidth:({type})=>(type==="datetime"?294:180),isValid:(record,fieldname,fieldInfo)=>{if(fieldInfo.widget==="daterange"){if(!record.data[fieldInfo.options[END_DATE_FIELD_OPTION]]!==!record.data[fieldname]&&evaluateBooleanExpr(record.activeFields[fieldInfo.options[END_DATE_FIELD_OPTION]]?.required,record.evalContextWithVirtualIds)){return false;}
if(!record.data[fieldInfo.options[START_DATE_FIELD_OPTION]]!==!record.data[fieldname]&&evaluateBooleanExpr(record.activeFields[fieldInfo.options[START_DATE_FIELD_OPTION]]?.required,record.evalContextWithVirtualIds)){return false;}}
return!record.isFieldInvalid(fieldname);},};registry.category("fields").add("date",dateField).add("daterange",dateRangeField).add("datetime",dateTimeField);return __exports;});;

/* /web/static/src/views/fields/datetime/list_datetime_field.js */
odoo.define('@web/views/fields/datetime/list_datetime_field',['@web/core/registry','@web/views/fields/datetime/datetime_field'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{DateTimeField,dateField,dateRangeField,dateTimeField}=require("@web/views/fields/datetime/datetime_field");const ListDateTimeField=__exports.ListDateTimeField=class ListDateTimeField extends DateTimeField{shouldShowSeparator(){return this.props.readonly?this.relatedField&&this.values.some(Boolean):super.shouldShowSeparator();}}
const listDateField=__exports.listDateField={...dateField,component:ListDateTimeField};const listDateRangeField=__exports.listDateRangeField={...dateRangeField,component:ListDateTimeField};const listDateTimeField=__exports.listDateTimeField={...dateTimeField,component:ListDateTimeField};registry.category("fields").add("list.date",listDateField).add("list.daterange",listDateRangeField).add("list.datetime",listDateTimeField);return __exports;});;

/* /web/static/src/views/fields/domain/domain_field.js */
odoo.define('@web/views/fields/domain/domain_field',['@web/core/l10n/translation','@odoo/owl','@web/core/domain','@web/core/domain_selector/domain_selector','@web/core/domain_selector_dialog/domain_selector_dialog','@web/core/py_js/py_builtin','@web/core/network/rpc','@web/core/registry','@web/views/view_dialogs/select_create_dialog','@web/views/fields/standard_field_props','@web/core/utils/hooks','@web/core/tree_editor/utils','@web/core/domain_selector/utils','@web/core/tree_editor/condition_tree','@web/model/relational_model/utils'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{Component,useState}=require("@odoo/owl");const{Domain,InvalidDomainError}=require("@web/core/domain");const{DomainSelector}=require("@web/core/domain_selector/domain_selector");const{DomainSelectorDialog}=require("@web/core/domain_selector_dialog/domain_selector_dialog");const{EvaluationError}=require("@web/core/py_js/py_builtin");const{rpc}=require("@web/core/network/rpc");const{registry}=require("@web/core/registry");const{SelectCreateDialog}=require("@web/views/view_dialogs/select_create_dialog");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{useBus,useService,useOwnedDialogs}=require("@web/core/utils/hooks");const{useGetTreeDescription,useMakeGetFieldDef}=require("@web/core/tree_editor/utils");const{useGetDefaultLeafDomain}=require("@web/core/domain_selector/utils");const{treeFromDomain}=require("@web/core/tree_editor/condition_tree");const{useRecordObserver}=require("@web/model/relational_model/utils");const DomainField=__exports.DomainField=class DomainField extends Component{static template="web.DomainField";static components={DomainSelector,};static props={...standardFieldProps,context:{type:Object,optional:true},editInDialog:{type:Boolean,optional:true},resModel:{type:String,optional:true},isFoldable:{type:Boolean,optional:true},};static defaultProps={editInDialog:false,isFoldable:false,};setup(){this.orm=useService("orm");this.getDomainTreeDescription=useGetTreeDescription();this.makeGetFieldDef=useMakeGetFieldDef();this.getDefaultLeafDomain=useGetDefaultLeafDomain();this.addDialog=useOwnedDialogs();this.state=useState({isValid:null,recordCount:null,folded:this.props.isFoldable,facets:[],});this.debugDomain=null;useRecordObserver(async(record,nextProps)=>{nextProps={...nextProps,record};if(this.debugDomain&&this.props.readonly!==nextProps.readonly){this.debugDomain=null;}
if(this.debugDomain){this.state.isValid=await this.quickValidityCheck(nextProps);if(!this.state.isValid){this.state.recordCount=0;nextProps.record.setInvalidField(nextProps.name);}}else{this.checkProps(nextProps);}
if(nextProps.isFoldable){this.loadFacets(nextProps);}});useBus(this.props.record.model.bus,"NEED_LOCAL_CHANGES",async(ev)=>{if(this.debugDomain){const props=this.props;const handleChanges=async()=>{await props.record.update({[props.name]:this.debugDomain});const isValid=await this.quickValidityCheck(props);if(isValid){this.debugDomain=null;}else{this.state.isValid=false;this.state.recordCount=0;props.record.setInvalidField(props.name);}};ev.detail.proms.push(handleChanges());}});}
getContext(props=this.props){return props.context;}
getDomain(props=this.props){return props.record.data[props.name]||"[]";}
getEvaluatedDomain(props=this.props){const domainStringRepr=this.getDomain(props);const evalContext=this.getContext(props);try{const domain=new Domain(domainStringRepr).toList(evalContext);return domain;}catch(error){if(error instanceof InvalidDomainError||error instanceof EvaluationError){return{isInvalid:true};}
throw error;}}
getResModel(props=this.props){let resModel=props.resModel;if(props.record.fieldNames.includes(resModel)){resModel=props.record.data[resModel];}
return resModel;}
async addCondition(){const defaultDomain=await this.getDefaultLeafDomain(this.getResModel());this.update(defaultDomain);this.state.folded=false;}
async loadFacets(props=this.props){const resModel=this.getResModel(props);if(!resModel){this.state.facets=[];this.state.folded=false;return;}
if(typeof resModel!=="string"){throw new Error(`Invalid model: ${resModel}`);}
let promises=[];const domain=this.getDomain(props);try{const getFieldDef=await this.makeGetFieldDef(resModel,treeFromDomain(domain));const tree=treeFromDomain(domain,{distributeNot:!this.env.debug,getFieldDef});const trees=!tree.negate&&tree.value==="&"?tree.children:[tree];promises=trees.map((tree)=>this.getDomainTreeDescription(resModel,tree));}catch(error){if(error.data?.name==="builtins.KeyError"&&error.data.message===resModel){throw new Error(`Invalid model: ${resModel}`);}
this.state.facets=[];this.state.folded=false;}
this.state.facets=await Promise.all(promises);}
async checkProps(props=this.props){const resModel=this.getResModel(props);if(!resModel){this.updateState({});return;}
if(typeof resModel!=="string"){throw new Error(`Invalid model: ${resModel}`);}
const domain=this.getEvaluatedDomain(props);if(domain.isInvalid){this.updateState({isValid:false,recordCount:0});return;}
let recordCount;const context=this.getContext(props);try{recordCount=await this.orm.silent.searchCount(resModel,domain,{context});}catch(error){if(error.data?.name==="builtins.KeyError"&&error.data.message===resModel){throw new Error(`Invalid model: ${resModel}`);}
this.updateState({isValid:false,recordCount:0});return;}
this.updateState({isValid:true,recordCount});}
onButtonClick(){this.addDialog(SelectCreateDialog,{title:_t("Selected records"),noCreate:true,multiSelect:false,resModel:this.getResModel(),domain:this.getEvaluatedDomain(),context:this.getContext(),},{onClose:()=>this.checkProps(),});}
onEditDialogBtnClick(){this.addDialog(DomainSelectorDialog,{resModel:this.getResModel(),domain:this.getDomain(),isDebugMode:!!this.env.debug,onConfirm:this.update.bind(this),});}
async quickValidityCheck(props){const resModel=this.getResModel(props);if(!resModel){return false;}
const domain=this.getEvaluatedDomain(props);if(domain.isInvalid){return false;}
return rpc("/web/domain/validate",{model:resModel,domain});}
update(domain,isDebugEdited=false){if(!isDebugEdited){this.debugDomain=null;}
this.props.record.update({[this.props.name]:domain});this.props.record.model.bus.trigger("FIELD_IS_DIRTY",false);}
debugUpdate(domain){const isDirty=domain!==this.getDomain();this.debugDomain=isDirty?domain:null;this.props.record.model.bus.trigger("FIELD_IS_DIRTY",isDirty);if(!this.props.record.isValid){this.props.record.resetFieldValidity(this.props.name);}}
fold(){this.state.folded=true;}
updateState(params={}){Object.assign(this.state,{isValid:"isValid"in params?params.isValid:null,recordCount:"recordCount"in params?params.recordCount:null,});}}
const domainField=__exports.domainField={component:DomainField,displayName:_t("Domain"),supportedOptions:[{label:_t("Edit in dialog"),name:"in_dialog",type:"boolean",},{label:_t("Foldable"),name:"foldable",type:"boolean",help:_t("Display the domain using facets"),},{label:_t("Model"),name:"model",type:"string",},],supportedTypes:["char"],isEmpty:()=>false,extractProps({options},dynamicInfo){return{editInDialog:options.in_dialog,isFoldable:options.foldable,resModel:options.model,context:dynamicInfo.context,};},};registry.category("fields").add("domain",domainField);return __exports;});;

/* /web/static/src/views/fields/dynamic_placeholder_hook.js */
odoo.define('@web/views/fields/dynamic_placeholder_hook',['@web/core/popover/popover_hook','@web/core/utils/hooks','@odoo/owl','@web/core/l10n/translation','@web/views/fields/dynamic_placeholder_popover'],function(require){'use strict';let __exports={};const{usePopover}=require("@web/core/popover/popover_hook");const{useService}=require("@web/core/utils/hooks");const{useComponent}=require("@odoo/owl");const{_t}=require("@web/core/l10n/translation");const{DynamicPlaceholderPopover}=require("@web/views/fields/dynamic_placeholder_popover");__exports.useDynamicPlaceholder=useDynamicPlaceholder;function useDynamicPlaceholder(elementRef){const TRIGGER_KEY="#";const ownerField=useComponent();const triggerKeyReplaceRegex=new RegExp(`${TRIGGER_KEY}$`);let closeCallback;let positionCallback;const popover=usePopover(DynamicPlaceholderPopover,{onClose:()=>closeCallback?.(),onPositioned:(popper,position)=>positionCallback?.(popper,position),});const notification=useService("notification");let model=null;const onDynamicPlaceholderValidate=function(path,defaultValue){const element=elementRef?.el;if(!element){return;}
let rangeIndex=parseInt(element.getAttribute("data-oe-dynamic-placeholder-range-index"));if(path){defaultValue=defaultValue.replace("|||","");const dynamicPlaceholder=` {{object.${path}${
                defaultValue?.length ? `|||${defaultValue}` : ""
            }}}`;const baseValue=element.value;const splitedValue=[baseValue.slice(0,rangeIndex),baseValue.slice(rangeIndex)];const newValue=splitedValue[0].replace(triggerKeyReplaceRegex,"")+
dynamicPlaceholder+
splitedValue[1];const changes={[ownerField.props.name]:newValue};ownerField.props.record.update(changes);element.value=newValue;rangeIndex+=dynamicPlaceholder.length-1;element.setSelectionRange(rangeIndex,rangeIndex);element.removeAttribute("data-oe-dynamic-placeholder-range-index");}};const onDynamicPlaceholderClose=function(){elementRef?.el.focus();};async function open(opts){if(!model){return notification.add(_t("You need to select a model before opening the dynamic placeholder selector."),{type:"danger"});}
closeCallback=opts.closeCallback;positionCallback=opts.positionCallback;popover.open(elementRef?.el,{resModel:model,validate:opts.validateCallback,});}
async function onKeydown(ev){const element=elementRef?.el;if(ev.target===element&&ev.key===TRIGGER_KEY){const currentRangeIndex=element.selectionStart;element.setAttribute("data-oe-dynamic-placeholder-range-index",currentRangeIndex+1);await open({validateCallback:onDynamicPlaceholderValidate,closeCallback:onDynamicPlaceholderClose,});}}
function updateModel(model_name_location){const recordData=ownerField.props.record.data;model=recordData[model_name_location]||recordData.model;}
return{updateModel:updateModel,onKeydown:onKeydown,setElementRef:(er)=>(elementRef=er),open:open,};}
return __exports;});;

/* /web/static/src/views/fields/dynamic_placeholder_popover.js */
odoo.define('@web/views/fields/dynamic_placeholder_popover',['@web/core/utils/functions','@web/core/utils/hooks','@web/core/model_field_selector/model_field_selector_popover','@odoo/owl','@web/core/user'],function(require){'use strict';let __exports={};const{memoize}=require("@web/core/utils/functions");const{useAutofocus,useService}=require("@web/core/utils/hooks");const{ModelFieldSelectorPopover}=require("@web/core/model_field_selector/model_field_selector_popover");const{Component,onWillStart,useState}=require("@odoo/owl");const{user}=require("@web/core/user");const allowedQwebExpressions=memoize(async(model,orm)=>{return await orm.call(model,"mail_allowed_qweb_expressions");});const DynamicPlaceholderPopover=__exports.DynamicPlaceholderPopover=class DynamicPlaceholderPopover extends Component{static template="web.DynamicPlaceholderPopover";static components={ModelFieldSelectorPopover,};static props=["resModel","validate","close"];setup(){useAutofocus();this.state=useState({path:"",isPathSelected:false,defaultValue:"",});this.orm=useService("orm");onWillStart(async()=>{[this.isTemplateEditor,this.allowedQwebExpressions]=await Promise.all([user.hasGroup("mail.group_mail_template_editor"),allowedQwebExpressions(this.props.resModel,this.orm),]);});}
filter(fieldDef,path){const fullPath=`object${path ? `.${path}` : ""}.${fieldDef.name}`;if(!this.isTemplateEditor&&!this.allowedQwebExpressions.includes(fullPath)){return false;}
return!["one2many","boolean","many2many"].includes(fieldDef.type)&&fieldDef.searchable;}
closeFieldSelector(isPathSelected=false){if(isPathSelected){this.state.isPathSelected=true;return;}
this.props.close();}
setPath(path,fieldInfo){this.state.path=path;this.state.fieldName=fieldInfo?.string;}
setDefaultValue(value){this.state.defaultValue=value;}
validate(){this.props.validate(this.state.path,this.state.defaultValue);this.props.close();}
onBack(){this.state.defaultValue="";this.state.isPathSelected=false;this.state.path="";}
async onInputKeydown(ev){switch(ev.key){case"Enter":{this.validate();ev.stopPropagation();ev.preventDefault();break;}
case"Escape":{this.props.close();break;}}}}
return __exports;});;

/* /web/static/src/views/fields/dynamic_widget/dynamic_model_field_selector.js */
odoo.define('@web/views/fields/dynamic_widget/dynamic_model_field_selector',['@web/core/model_field_selector/model_field_selector'],function(require){'use strict';let __exports={};const{ModelFieldSelector}=require("@web/core/model_field_selector/model_field_selector");const DynamicModelFieldSelector=__exports.DynamicModelFieldSelector=class DynamicModelFieldSelector extends ModelFieldSelector{static props={...ModelFieldSelector.props,record:{type:Object,optional:true},recordProps:{type:Object,optional:true},};}
return __exports;});;

/* /web/static/src/views/fields/dynamic_widget/dynamic_model_field_selector_char.js */
odoo.define('@web/views/fields/dynamic_widget/dynamic_model_field_selector_char',['@web/core/registry','@web/core/utils/strings','@web/views/fields/char/char_field','@web/core/l10n/translation','@web/views/fields/dynamic_widget/dynamic_model_field_selector'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{exprToBoolean}=require("@web/core/utils/strings");const{CharField,charField}=require("@web/views/fields/char/char_field");const{_t}=require("@web/core/l10n/translation");const{DynamicModelFieldSelector}=require("@web/views/fields/dynamic_widget/dynamic_model_field_selector");const DynamicModelFieldSelectorChar=__exports.DynamicModelFieldSelectorChar=class DynamicModelFieldSelectorChar extends CharField{static template="web.DynamicModelFieldSelectorChar";static components={...CharField.components,DynamicModelFieldSelector,};static props={...CharField.props,resModel:{type:String,optional:true},onlySearchable:{type:Boolean,optional:true},followRelations:{type:Boolean,optional:true},};async _onRecordUpdate(value){await this.props.record.update({[this.props.name]:value});}
get getSelectorProps(){return{path:this.props.record.data[this.props.name],resModel:this.getResModel(),readonly:this.props.readonly,record:this.props.record,recordProps:this.props,update:this._onRecordUpdate.bind(this),isDebugMode:!!this.env.debug,filter:this.filter.bind(this),followRelations:this.props.followRelations,};}
filter(fieldDef){return!this.props.onlySearchable||fieldDef.searchable;}
getResModel(props=this.props){const resModel=props.record.data[props.resModel];if(!resModel){return props.record.resModel;}
return resModel;}}
const dynamicModelFieldSelectorChar=__exports.dynamicModelFieldSelectorChar={...charField,component:DynamicModelFieldSelectorChar,supportedOptions:[{label:_t("Follow relations"),name:"follow_relations",type:"boolean",default:true,},{label:_t("Model"),name:"model",type:"string",},{label:_t("Only searchable"),name:"only_searchable",type:"string",},],extractProps({options},dynamicInfo){return{followRelations:options.follow_relations??true,onlySearchable:exprToBoolean(options.only_searchable),resModel:options.model,};},};registry.category("fields").add("DynamicModelFieldSelectorChar",dynamicModelFieldSelectorChar);return __exports;});;

/* /web/static/src/views/fields/email/email_field.js */
odoo.define('@web/views/fields/email/email_field',['@web/core/registry','@web/core/l10n/translation','@web/views/fields/input_field_hook','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{_t}=require("@web/core/l10n/translation");const{useInputField}=require("@web/views/fields/input_field_hook");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const EmailField=__exports.EmailField=class EmailField extends Component{static template="web.EmailField";static props={...standardFieldProps,placeholder:{type:String,optional:true},};setup(){useInputField({getValue:()=>this.props.record.data[this.props.name]||""});}}
const emailField=__exports.emailField={component:EmailField,displayName:_t("Email"),supportedTypes:["char"],extractProps:({attrs})=>({placeholder:attrs.placeholder,}),};registry.category("fields").add("email",emailField);class FormEmailField extends EmailField{static template="web.FormEmailField";}
const formEmailField=__exports.formEmailField={...emailField,component:FormEmailField,};registry.category("fields").add("form.email",formEmailField);return __exports;});;

/* /web/static/src/views/fields/field.js */
odoo.define('@web/views/fields/field',['@web/core/domain','@web/core/py_js/py','@web/core/registry','@web/core/ui/ui_service','@web/core/utils/strings','@web/model/relational_model/utils','@web/views/utils','@web/views/fields/field_tooltip','@odoo/owl'],function(require){'use strict';let __exports={};const{Domain}=require("@web/core/domain");const{evaluateBooleanExpr,evaluateExpr}=require("@web/core/py_js/py");const{registry}=require("@web/core/registry");const{utils}=require("@web/core/ui/ui_service");const{exprToBoolean}=require("@web/core/utils/strings");const{getFieldContext}=require("@web/model/relational_model/utils");const{X2M_TYPES,getClassNameFromDecoration}=require("@web/views/utils");const{getTooltipInfo}=require("@web/views/fields/field_tooltip");const{Component,xml}=require("@odoo/owl");const isSmall=utils.isSmall;const viewRegistry=registry.category("views");const fieldRegistry=registry.category("fields");const supportedInfoValidation={type:Array,element:Object,shape:{label:String,name:String,type:String,availableTypes:{type:Array,element:String,optional:true},default:{type:String,optional:true},help:{type:String,optional:true},choices:{type:Array,element:Object,shape:{label:String,value:String},optional:true,},},optional:true,};fieldRegistry.addValidation({component:{validate:(c)=>c.prototype instanceof Component},displayName:{type:String,optional:true},supportedAttributes:supportedInfoValidation,supportedOptions:supportedInfoValidation,supportedTypes:{type:Array,element:String,optional:true},extractProps:{type:Function,optional:true},isEmpty:{type:Function,optional:true},isValid:{type:Function,optional:true},additionalClasses:{type:Array,element:String,optional:true},fieldDependencies:{type:[Function,{type:Array,element:Object,shape:{name:String,type:String}}],optional:true,},relatedFields:{type:[Function,{type:Array,element:Object,shape:{name:String,type:String,readonly:{type:Boolean,optional:true},selection:{type:Array,element:{type:Array,element:String}},optional:true,},},],optional:true,},useSubView:{type:Boolean,optional:true},label:{type:[String,{value:false}],optional:true},listViewWidth:{type:[Number,{type:Array,element:Number,validate:(array)=>array.length===1||array.length===2,},Function,],optional:true,},});class DefaultField extends Component{static template=xml``;static props=["*"];}
__exports.getFieldFromRegistry=getFieldFromRegistry;function getFieldFromRegistry(fieldType,widget,viewType,jsClass){const prefixes=jsClass?[jsClass,viewType,""]:[viewType,""];const findInRegistry=(key)=>{for(const prefix of prefixes){const _key=prefix?`${prefix}.${key}`:key;if(fieldRegistry.contains(_key)){return fieldRegistry.get(_key);}}};if(widget){const field=findInRegistry(widget);if(field){return field;}
console.warn(`Missing widget: ${widget} for field of type ${fieldType}`);}
return findInRegistry(fieldType)||{component:DefaultField};}
__exports.fieldVisualFeedback=fieldVisualFeedback;function fieldVisualFeedback(field,record,fieldName,fieldInfo){const readonly=evaluateBooleanExpr(fieldInfo.readonly,record.evalContextWithVirtualIds);const required=evaluateBooleanExpr(fieldInfo.required,record.evalContextWithVirtualIds);const inEdit=record.isInEdition;let empty=!record.isNew;if("isEmpty"in field){empty=empty&&field.isEmpty(record,fieldName);}else{empty=empty&&!record.data[fieldName];}
empty=inEdit?empty&&readonly:empty;return{readonly,required,invalid:field.isValid?!field.isValid(record,fieldName,fieldInfo):record.isFieldInvalid(fieldName),empty,};}
__exports.getPropertyFieldInfo=getPropertyFieldInfo;function getPropertyFieldInfo(propertyField){const{name,relatedPropertyField,string,type}=propertyField;const fieldInfo={name,string,type,widget:type,options:{},column_invisible:"False",invisible:"False",readonly:"False",required:"False",attrs:{},relatedPropertyField,context:"{}",help:undefined,onChange:false,forceSave:false,decorations:{},};if(type==="many2one"||type==="many2many"){const{domain,relation}=propertyField;fieldInfo.relation=relation;fieldInfo.domain=domain;if(relation==="res.users"||relation==="res.partner"){fieldInfo.widget=propertyField.type==="many2one"?"many2one_avatar":"many2many_tags_avatar";}else{fieldInfo.widget=propertyField.type==="many2one"?type:"many2many_tags";}}else if(type==="tags"){fieldInfo.tags=propertyField.tags;fieldInfo.widget=`property_tags`;}else if(type==="selection"){fieldInfo.selection=propertyField.selection;}
fieldInfo.field=getFieldFromRegistry(propertyField.type,fieldInfo.widget);let{relatedFields}=fieldInfo.field;if(relatedFields){if(relatedFields instanceof Function){relatedFields=relatedFields({options:{},attrs:{}});}
fieldInfo.relatedFields=Object.fromEntries(relatedFields.map((f)=>[f.name,f]));}
return fieldInfo;}
const Field=__exports.Field=class Field extends Component{static template="web.Field";static props=["fieldInfo?","*"];static parseFieldNode=function(node,models,modelName,viewType,jsClass){const name=node.getAttribute("name");const widget=node.getAttribute("widget");const fields=models[modelName].fields;if(!fields[name]){throw new Error(`"${modelName}"."${name}" field is undefined.`);}
const field=getFieldFromRegistry(fields[name].type,widget,viewType,jsClass);const fieldInfo={name,type:fields[name].type,viewType,widget,field,context:"{}",string:fields[name].string,help:undefined,onChange:false,forceSave:false,options:{},decorations:{},attrs:{},domain:undefined,};for(const attr of["invisible","column_invisible","readonly","required"]){fieldInfo[attr]=node.getAttribute(attr);if(fieldInfo[attr]==="True"){if(attr==="column_invisible"){fieldInfo.invisible="True";}}else if(fieldInfo[attr]===null&&fields[name][attr]){fieldInfo[attr]="True";}}
for(const{name,value}of node.attributes){if(["name","widget"].includes(name)){continue;}
if(["context","string","help","domain"].includes(name)){fieldInfo[name]=value;}else if(name==="on_change"){fieldInfo.onChange=exprToBoolean(value);}else if(name==="options"){fieldInfo.options=evaluateExpr(value);}else if(name==="force_save"){fieldInfo.forceSave=exprToBoolean(value);}else if(name.startsWith("decoration-")){fieldInfo.decorations[name.replace("decoration-","")]=value;}else if(!name.startsWith("t-att")){fieldInfo.attrs[name]=value;}}
if(name==="id"){fieldInfo.readonly="True";}
if(widget==="handle"){fieldInfo.isHandle=true;}
if(X2M_TYPES.includes(fields[name].type)){const views={};let relatedFields=fieldInfo.field.relatedFields;if(relatedFields){if(relatedFields instanceof Function){relatedFields=relatedFields(fieldInfo);}
for(const relatedField of relatedFields){if(!("readonly"in relatedField)){relatedField.readonly=true;}}
relatedFields=Object.fromEntries(relatedFields.map((f)=>[f.name,f]));views.default={fieldNodes:relatedFields,fields:relatedFields};if(!fieldInfo.field.useSubView){fieldInfo.viewMode="default";}}
for(const child of node.children){const viewType=child.tagName;const{ArchParser}=viewRegistry.get(viewType);const childCopy=child.cloneNode(true);const archInfo=new ArchParser().parse(childCopy,models,fields[name].relation);views[viewType]={...archInfo,limit:archInfo.limit||40,fields:models[fields[name].relation].fields,};}
let viewMode=node.getAttribute("mode");if(viewMode){if(viewMode.split(",").length!==1){viewMode=isSmall()?"kanban":"list";}}else{if(views.list&&!views.kanban){viewMode="list";}else if(!views.list&&views.kanban){viewMode="kanban";}else if(views.list&&views.kanban){viewMode=isSmall()?"kanban":"list";}}
if(viewMode){fieldInfo.viewMode=viewMode;}
if(Object.keys(views).length){fieldInfo.relatedFields=models[fields[name].relation]?.fields;fieldInfo.views=views;}}
if(fields[name].type==="many2one_reference"){let relatedFields=fieldInfo.field.relatedFields;if(relatedFields){relatedFields=Object.fromEntries(relatedFields.map((f)=>[f.name,f]));fieldInfo.viewMode="default";fieldInfo.views={default:{fieldNodes:relatedFields,fields:relatedFields},};}}
return fieldInfo;};setup(){if(this.props.fieldInfo){this.field=this.props.fieldInfo.field;}else{const fieldType=this.props.record.fields[this.props.name].type;this.field=getFieldFromRegistry(fieldType,this.props.type);}}
get classNames(){const{class:_class,fieldInfo,name,record}=this.props;const{readonly,required,invalid,empty}=fieldVisualFeedback(this.field,record,name,fieldInfo||{});const classNames={o_field_widget:true,o_readonly_modifier:readonly,o_required_modifier:required,o_field_invalid:invalid,o_field_empty:empty,[`o_field_${this.type}`]:true,[_class]:Boolean(_class),};if(this.field.additionalClasses){for(const cls of this.field.additionalClasses){classNames[cls]=true;}}
if(fieldInfo&&fieldInfo.decorations){const{decorations}=fieldInfo;for(const decoName in decorations){const value=evaluateBooleanExpr(decorations[decoName],record.evalContextWithVirtualIds);classNames[getClassNameFromDecoration(decoName)]=value;}}
return classNames;}
get type(){return this.props.type||this.props.record.fields[this.props.name].type;}
get fieldComponentProps(){const record=this.props.record;let readonly=this.props.readonly||false;let propsFromNode={};if(this.props.fieldInfo){let fieldInfo=this.props.fieldInfo;readonly=readonly||evaluateBooleanExpr(fieldInfo.readonly,record.evalContextWithVirtualIds);if(this.field.extractProps){if(this.props.attrs){fieldInfo={...fieldInfo,attrs:{...fieldInfo.attrs,...this.props.attrs},};}
const dynamicInfo={get context(){return getFieldContext(record,fieldInfo.name,fieldInfo.context);},domain(){const evalContext=record.evalContext;if(fieldInfo.domain){return new Domain(evaluateExpr(fieldInfo.domain,evalContext)).toList();}},required:evaluateBooleanExpr(fieldInfo.required,record.evalContextWithVirtualIds),readonly:readonly,};propsFromNode=this.field.extractProps(fieldInfo,dynamicInfo);}}
const props={...this.props};delete props.style;delete props.class;delete props.showTooltip;delete props.fieldInfo;delete props.attrs;delete props.type;delete props.readonly;return{readonly:readonly||!record.isInEdition||false,...propsFromNode,...props,};}
get tooltip(){if(this.props.showTooltip){const tooltip=getTooltipInfo({field:this.props.record.fields[this.props.name],fieldInfo:this.props.fieldInfo||{},});if(Boolean(odoo.debug)||(tooltip&&JSON.parse(tooltip).field.help)){return tooltip;}}
return false;}}
return __exports;});;

/* /web/static/src/views/fields/field_tooltip.js */
odoo.define('@web/views/fields/field_tooltip',[],function(require){'use strict';let __exports={};__exports.getTooltipInfo=getTooltipInfo;function getTooltipInfo(params){let widgetDescription=undefined;if(params.fieldInfo.widget){widgetDescription=params.fieldInfo.field.displayName;}
const info={viewMode:params.viewMode,resModel:params.resModel,debug:Boolean(odoo.debug),field:{name:params.field.name,label:params.field.string,help:params.fieldInfo.help??params.field.help,type:params.field.type,widget:params.fieldInfo.widget,widgetDescription,context:params.fieldInfo.context,domain:params.fieldInfo.domain||params.field.domain,invisible:params.fieldInfo.invisible,column_invisible:params.fieldInfo.column_invisible,readonly:params.fieldInfo.readonly,required:params.fieldInfo.required,changeDefault:params.field.change_default,relation:params.field.relation,model_field:params.field.model_field,selection:params.field.selection,default:params.field.default,},};return JSON.stringify(info);}
return __exports;});;

/* /web/static/src/views/fields/file_handler.js */
odoo.define('@web/views/fields/file_handler',['@web/core/l10n/translation','@web/core/utils/hooks','@web/core/utils/urls','@web/core/utils/files','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{useService}=require("@web/core/utils/hooks");const{getDataURLFromFile}=require("@web/core/utils/urls");const{checkFileSize}=require("@web/core/utils/files");const{Component,useRef,useState}=require("@odoo/owl");const FileUploader=__exports.FileUploader=class FileUploader extends Component{static template="web.FileUploader";static props={onClick:{type:Function,optional:true},onUploaded:Function,onUploadComplete:{type:Function,optional:true},multiUpload:{type:Boolean,optional:true},checkSize:{type:Boolean,optional:true},inputName:{type:String,optional:true},fileUploadClass:{type:String,optional:true},acceptedFileExtensions:{type:String,optional:true},slots:{type:Object,optional:true},showUploadingText:{type:Boolean,optional:true},};static defaultProps={checkSize:true,showUploadingText:true,};setup(){this.notification=useService("notification");this.fileInputRef=useRef("fileInput");this.state=useState({isUploading:false,});}
async onFileChange(ev){if(!ev.target.files.length){return;}
const{target}=ev;for(const file of ev.target.files){if(this.props.checkSize&&!checkFileSize(file.size,this.notification)){return null;}
this.state.isUploading=true;const data=await getDataURLFromFile(file);if(!file.size){console.warn(`Error while uploading file : ${file.name}`);this.notification.add(_t("There was a problem while uploading your file."),{type:"danger",});}
try{await this.props.onUploaded({name:file.name,size:file.size,type:file.type,data:data.split(",")[1],objectUrl:file.type==="application/pdf"?URL.createObjectURL(file):null,});}finally{this.state.isUploading=false;}}
target.value=null;if(this.props.multiUpload&&this.props.onUploadComplete){this.props.onUploadComplete({});}}
async onSelectFileButtonClick(ev){if(this.props.onClick){const ok=await this.props.onClick(ev);if(ok!==undefined&&!ok){return;}}
this.fileInputRef.el.click();}}
return __exports;});;

/* /web/static/src/views/fields/float/float_field.js */
odoo.define('@web/views/fields/float/float_field',['@web/core/l10n/translation','@web/core/registry','@web/views/fields/input_field_hook','@web/views/fields/numpad_decimal_hook','@web/views/fields/formatters','@web/views/fields/parsers','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{useInputField}=require("@web/views/fields/input_field_hook");const{useNumpadDecimal}=require("@web/views/fields/numpad_decimal_hook");const{formatFloat}=require("@web/views/fields/formatters");const{parseFloat}=require("@web/views/fields/parsers");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component,useState}=require("@odoo/owl");const FloatField=__exports.FloatField=class FloatField extends Component{static template="web.FloatField";static props={...standardFieldProps,formatNumber:{type:Boolean,optional:true},inputType:{type:String,optional:true},step:{type:Number,optional:true},digits:{type:Array,optional:true},placeholder:{type:String,optional:true},humanReadable:{type:Boolean,optional:true},decimals:{type:Number,optional:true},};static defaultProps={formatNumber:true,inputType:"text",humanReadable:false,decimals:0,};setup(){this.state=useState({hasFocus:false,});this.inputRef=useInputField({getValue:()=>this.formattedValue,refName:"numpadDecimal",parse:(v)=>this.parse(v),});useNumpadDecimal();}
onFocusIn(){this.state.hasFocus=true;}
onFocusOut(){this.state.hasFocus=false;}
parse(value){return this.props.inputType==="number"?Number(value):parseFloat(value);}
get formattedValue(){if(!this.props.formatNumber||(this.props.inputType==="number"&&!this.props.readonly&&this.value)){return this.value;}
const options={digits:this.props.digits,field:this.props.record.fields[this.props.name],};if(this.props.humanReadable&&!this.state.hasFocus){return formatFloat(this.value,{...options,humanReadable:true,decimals:this.props.decimals,});}else{return formatFloat(this.value,{...options,humanReadable:false});}}
get value(){return this.props.record.data[this.props.name];}}
const floatField=__exports.floatField={component:FloatField,displayName:_t("Float"),supportedOptions:[{label:_t("Format number"),name:"enable_formatting",type:"boolean",help:_t("Format the value according to your language setup - e.g. thousand separators, rounding, etc."),default:true,},{label:_t("Digits"),name:"digits",type:"digits",},{label:_t("Type"),name:"type",type:"string",},{label:_t("Step"),name:"step",type:"number",},{label:_t("User-friendly format"),name:"human_readable",type:"boolean",help:_t("Use a human readable format (e.g.: 500G instead of 500,000,000,000)."),},{label:_t("Decimals"),name:"decimals",type:"number",default:0,help:_t("Use it with the 'User-friendly format' option to customize the formatting."),},],supportedTypes:["float"],isEmpty:()=>false,extractProps:({attrs,options})=>{let digits;if(attrs.digits){digits=JSON.parse(attrs.digits);}else if(options.digits){digits=options.digits;}
return{formatNumber:options?.enable_formatting!==undefined?Boolean(options.enable_formatting):true,inputType:options.type,humanReadable:!!options.human_readable,step:options.step,digits,placeholder:attrs.placeholder,decimals:options.decimals||0,};},};registry.category("fields").add("float",floatField);return __exports;});;

/* /web/static/src/views/fields/float_factor/float_factor_field.js */
odoo.define('@web/views/fields/float_factor/float_factor_field',['@web/core/registry','@web/views/fields/float/float_field','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{floatField,FloatField}=require("@web/views/fields/float/float_field");const{_t}=require("@web/core/l10n/translation");const FloatFactorField=__exports.FloatFactorField=class FloatFactorField extends FloatField{static props={...FloatField.props,factor:{type:Number,optional:true},};static defaultProps={...FloatField.defaultProps,factor:1,};parse(value){return super.parse(value)/this.props.factor;}
get value(){return this.props.record.data[this.props.name]*this.props.factor;}}
const floatFactorField=__exports.floatFactorField={...floatField,component:FloatFactorField,supportedOptions:[...floatField.supportedOptions,{label:_t("Factor"),name:"factor",type:"number",},],extractProps({options}){const props=floatField.extractProps(...arguments);props.factor=options.factor;return props;},};registry.category("fields").add("float_factor",floatFactorField);return __exports;});;

/* /web/static/src/views/fields/float_time/float_time_field.js */
odoo.define('@web/views/fields/float_time/float_time_field',['@web/core/l10n/translation','@web/core/registry','@web/views/fields/formatters','@web/views/fields/parsers','@web/views/fields/input_field_hook','@web/views/fields/standard_field_props','@web/views/fields/numpad_decimal_hook','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{formatFloatTime}=require("@web/views/fields/formatters");const{parseFloatTime}=require("@web/views/fields/parsers");const{useInputField}=require("@web/views/fields/input_field_hook");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{useNumpadDecimal}=require("@web/views/fields/numpad_decimal_hook");const{Component}=require("@odoo/owl");const FloatTimeField=__exports.FloatTimeField=class FloatTimeField extends Component{static template="web.FloatTimeField";static props={...standardFieldProps,inputType:{type:String,optional:true},placeholder:{type:String,optional:true},displaySeconds:{type:Boolean,optional:true},};static defaultProps={inputType:"text",};setup(){this.inputFloatTimeRef=useInputField({getValue:()=>this.formattedValue,refName:"numpadDecimal",parse:(v)=>parseFloatTime(v),});useNumpadDecimal();}
get formattedValue(){return formatFloatTime(this.props.record.data[this.props.name],{displaySeconds:this.props.displaySeconds,});}}
const floatTimeField=__exports.floatTimeField={component:FloatTimeField,displayName:_t("Time"),supportedOptions:[{label:_t("Display seconds"),name:"display_seconds",type:"boolean",},{label:_t("Type"),name:"type",type:"string",default:"text",},],supportedTypes:["float"],isEmpty:()=>false,extractProps:({attrs,options})=>({displaySeconds:options.displaySeconds,inputType:options.type,placeholder:attrs.placeholder,}),};registry.category("fields").add("float_time",floatTimeField);return __exports;});;

/* /web/static/src/views/fields/float_toggle/float_toggle_field.js */
odoo.define('@web/views/fields/float_toggle/float_toggle_field',['@web/core/l10n/translation','@web/core/registry','@web/views/fields/formatters','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{formatFloatFactor}=require("@web/views/fields/formatters");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const FloatToggleField=__exports.FloatToggleField=class FloatToggleField extends Component{static template="web.FloatToggleField";static props={...standardFieldProps,digits:{type:Array,optional:true},range:{type:Array,optional:true},factor:{type:Number,optional:true},disableReadOnly:{type:Boolean,optional:true},};static defaultProps={range:[0.0,0.5,1.0],factor:1,disableReadOnly:false,};onChange(){let currentIndex=this.props.range.indexOf(this.props.record.data[this.props.name]*this.factor);currentIndex++;if(currentIndex>this.props.range.length-1){currentIndex=0;}
this.props.record.update({[this.props.name]:this.props.range[currentIndex]/this.factor,});}
get factor(){return this.props.factor;}
get formattedValue(){return formatFloatFactor(this.props.record.data[this.props.name],{digits:this.props.digits,factor:this.factor,field:this.props.record.fields[this.props.name],});}}
const floatToggleField=__exports.floatToggleField={component:FloatToggleField,supportedOptions:[{label:_t("Digits"),name:"digits",type:"digits",},{label:_t("Type"),name:"type",type:"string",},{label:_t("Range"),name:"range",type:"string",},{label:_t("Factor"),name:"factor",type:"number",},{label:_t("Disable readonly"),name:"force_button",type:"boolean",},],supportedTypes:["float"],isEmpty:()=>false,extractProps:({attrs,options})=>{let digits;if(attrs.digits){digits=JSON.parse(attrs.digits);}else if(options.digits){digits=options.digits;}
return{digits,range:options.range,factor:options.factor,disableReadOnly:options.force_button||false,};},};registry.category("fields").add("float_toggle",floatToggleField);return __exports;});;

/* /web/static/src/views/fields/gauge/gauge_field.js */
odoo.define('@web/views/fields/gauge/gauge_field',['@web/core/l10n/translation','@web/core/assets','@web/core/registry','@web/views/fields/formatters','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{loadBundle}=require("@web/core/assets");const{registry}=require("@web/core/registry");const{formatFloat}=require("@web/views/fields/formatters");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component,onWillStart,useEffect,useRef}=require("@odoo/owl");const GaugeField=__exports.GaugeField=class GaugeField extends Component{static template="web.GaugeField";static props={...standardFieldProps,maxValueField:{type:String,optional:true},maxValue:{type:Number,optional:true},title:{type:String,optional:true},};static defaultProps={maxValue:100,};setup(){this.chart=null;this.canvasRef=useRef("canvas");onWillStart(async()=>await loadBundle("web.chartjs_lib"));useEffect(()=>{this.renderChart();return()=>{if(this.chart){this.chart.destroy();}};});}
get title(){return this.props.title||this.props.record.fields[this.props.name].string||"";}
get formattedValue(){return formatFloat(this.props.record.data[this.props.name],{humanReadable:true,decimals:1,});}
renderChart(){const gaugeValue=this.props.record.data[this.props.name];let maxValue=this.props.maxValueField?this.props.record.data[this.props.maxValueField]:this.props.maxValue;maxValue=Math.max(gaugeValue,maxValue);let maxLabel=maxValue;if(gaugeValue===0&&maxValue===0){maxValue=1;maxLabel=0;}
const config={type:"doughnut",data:{datasets:[{data:[gaugeValue,maxValue-gaugeValue],backgroundColor:["#1f77b4","#dddddd"],label:this.title,},],},options:{circumference:180,rotation:270,responsive:true,maintainAspectRatio:false,cutout:"70%",layout:{padding:5,},plugins:{title:{display:true,text:this.title,padding:4,},tooltip:{displayColors:false,callbacks:{label:function(tooltipItem){if(tooltipItem.dataIndex===0){return _t("Value: %(value)s",{value:gaugeValue});}
return _t("Max: %(max)s",{max:maxLabel});},},},},aspectRatio:2,},};this.chart=new Chart(this.canvasRef.el,config);}}
const gaugeField=__exports.gaugeField={component:GaugeField,supportedOptions:[{label:_t("Title"),name:"title",type:"string",},{label:_t("Max value field"),name:"max_value_field",type:"field",availableTypes:["integer","float"],},{label:_t("Max value"),name:"max_value",type:"string",},],extractProps:({options})=>({maxValueField:options.max_field,maxValue:options.max_value,title:options.title,}),};registry.category("fields").add("gauge",gaugeField);return __exports;});;

/* /web/static/src/views/fields/google_slide_viewer/google_slide_viewer.js */
odoo.define('@web/views/fields/google_slide_viewer/google_slide_viewer',['@odoo/owl','@web/core/l10n/translation','@web/core/registry','@web/core/utils/hooks','@web/views/fields/char/char_field'],function(require){'use strict';let __exports={};const{useState}=require("@odoo/owl");const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{CharField,charField}=require("@web/views/fields/char/char_field");__exports.getGoogleSlideUrl=getGoogleSlideUrl;function getGoogleSlideUrl(value,page){let url=false;const googleRegExp=/(^https:\/\/docs.google.com).*(\/d\/e\/|\/d\/)([A-Za-z0-9-_]+)/;const google=value.match(googleRegExp);if(google&&google[3]){url=`https://docs.google.com/presentation${google[2]}${google[3]}/preview?slide=${page}`;}
return url;}
const GoogleSlideViewer=__exports.GoogleSlideViewer=class GoogleSlideViewer extends CharField{static template="web.GoogleSlideViewer";setup(){super.setup();this.notification=useService("notification");this.page=1;this.state=useState({isValid:true,});}
get fileName(){return this.state.fileName||this.props.record.data[this.props.name]||"";}
_get_slide_page(){return this.props.record.data[this.props.name+"_page"]?this.props.record.data[this.props.name+"_page"]:this.page;}
get url(){let url=this.props.value;if(this.props.record.data[this.props.name]){url=getGoogleSlideUrl(this.props.record.data[this.props.name],this._get_slide_page());}
return url;}
onLoadFailed(){this.state.isValid=false;this.notification.add(_t("Could not display the selected spreadsheet"),{type:"danger"});}}
const googleSlideViewer=__exports.googleSlideViewer={...charField,component:GoogleSlideViewer,displayName:_t("Google Slide Viewer"),};registry.category("fields").add("embed_viewer",googleSlideViewer);return __exports;});;

/* /web/static/src/views/fields/handle/handle_field.js */
odoo.define('@web/views/fields/handle/handle_field',['@web/core/registry','@web/core/l10n/translation','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{_t}=require("@web/core/l10n/translation");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const HandleField=__exports.HandleField=class HandleField extends Component{static template="web.HandleField";static props={...standardFieldProps,};}
const handleField=__exports.handleField={component:HandleField,displayName:_t("Handle"),supportedTypes:["integer"],isEmpty:()=>false,listViewWidth:20,};registry.category("fields").add("handle",handleField);return __exports;});;

/* /web/static/src/views/fields/html/html_field.js */
odoo.define('@web/views/fields/html/html_field',['@web/core/registry','@web/views/fields/text/text_field'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{TextField,textField}=require("@web/views/fields/text/text_field");const HtmlField=__exports.HtmlField=class HtmlField extends TextField{static template="web.HtmlField";}
const htmlField=__exports.htmlField={...textField,component:HtmlField,};registry.category("fields").add("html",htmlField);return __exports;});;

/* /web/static/src/views/fields/iframe_wrapper/iframe_wrapper_field.js */
odoo.define('@web/views/fields/iframe_wrapper/iframe_wrapper_field',['@web/core/registry','@web/core/l10n/translation','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{_t}=require("@web/core/l10n/translation");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component,useEffect,useRef}=require("@odoo/owl");const IframeWrapperField=__exports.IframeWrapperField=class IframeWrapperField extends Component{static template="web.IframeWrapperField";static props={...standardFieldProps,};setup(){this.iframeRef=useRef("iframe");useEffect((value)=>{const iframeDoc=this.iframeRef.el.contentDocument;iframeDoc.open();iframeDoc.write(value);iframeDoc.close();},()=>[this.props.record.data[this.props.name]]);}}
const iframeWrapperField=__exports.iframeWrapperField={component:IframeWrapperField,displayName:_t("Wrap raw html within an iframe"),supportedTypes:["text","html"],};registry.category("fields").add("iframe_wrapper",iframeWrapperField);return __exports;});;

/* /web/static/src/views/fields/image/image_field.js */
odoo.define('@web/views/fields/image/image_field',['@web/core/browser/feature_detection','@web/core/l10n/translation','@web/core/registry','@web/core/utils/hooks','@web/core/utils/urls','@web/core/utils/binary','@web/views/fields/file_handler','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{isMobileOS}=require("@web/core/browser/feature_detection");const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{imageUrl}=require("@web/core/utils/urls");const{isBinarySize}=require("@web/core/utils/binary");const{FileUploader}=require("@web/views/fields/file_handler");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component,useState,onWillRender}=require("@odoo/owl");const{DateTime}=luxon;const fileTypeMagicWordMap=__exports.fileTypeMagicWordMap={"/":"jpg",R:"gif",i:"png",P:"svg+xml",U:"webp",};const placeholder="/web/static/img/placeholder.png";const ImageField=__exports.ImageField=class ImageField extends Component{static template="web.ImageField";static components={FileUploader,};static props={...standardFieldProps,alt:{type:String,optional:true},enableZoom:{type:Boolean,optional:true},imgClass:{type:String,optional:true},zoomDelay:{type:Number,optional:true},previewImage:{type:String,optional:true},acceptedFileExtensions:{type:String,optional:true},width:{type:Number,optional:true},height:{type:Number,optional:true},reload:{type:Boolean,optional:true},convertToWebp:{type:Boolean,optional:true},};static defaultProps={acceptedFileExtensions:"image/*",alt:_t("Binary file"),imgClass:"",reload:true,};setup(){this.notification=useService("notification");this.orm=useService("orm");this.isMobile=isMobileOS();this.state=useState({isValid:true,});this.lastURL=undefined;if(this.fieldType==="many2one"&&!this.props.previewImage){throw new Error("ImageField: previewImage must be provided when set on a many2one field");}
if(this.props.record.fields[this.props.name].related){this.lastUpdate=DateTime.now();let key=this.props.value;onWillRender(()=>{const nextKey=this.props.value;if(key!==nextKey){this.lastUpdate=DateTime.now();}
key=nextKey;});}}
get imgAlt(){if(this.fieldType==="many2one"&&this.props.record.data[this.props.name]){return this.props.record.data[this.props.name][1];}
return this.props.alt;}
get imgClass(){return["img","img-fluid"].concat(this.props.imgClass.split(" ")).join(" ");}
get fieldType(){return this.props.record.fields[this.props.name].type;}
get rawCacheKey(){if(this.props.record.fields[this.props.name].related){return this.lastUpdate;}
return this.props.record.data.write_date;}
get sizeStyle(){let style="";if(this.props.width){style+=`max-width: ${this.props.width}px;`;if(!this.props.height){style+=`height: auto; max-height: 100%;`;}}
if(this.props.height){style+=`max-height: ${this.props.height}px;`;if(!this.props.width){style+=`width: auto; max-width: 100%;`;}}
return style;}
get hasTooltip(){return this.props.enableZoom&&this.props.record.data[this.props.name];}
get tooltipAttributes(){const fieldName=this.fieldType==="many2one"?this.props.previewImage:this.props.name;return{template:"web.ImageZoomTooltip",info:JSON.stringify({url:this.getUrl(fieldName)}),};}
getUrl(imageFieldName){if(!this.props.reload&&this.lastURL){return this.lastURL;}
if(!this.props.record.data[this.props.name]||!this.state.isValid){return placeholder;}
if(this.fieldType==="many2one"){this.lastURL=imageUrl(this.props.record.fields[this.props.name].relation,this.props.record.data[this.props.name][0],imageFieldName,{unique:this.rawCacheKey});}else if(isBinarySize(this.props.record.data[this.props.name])){this.lastURL=imageUrl(this.props.record.resModel,this.props.record.resId,imageFieldName,{unique:this.rawCacheKey});}else{const magic=fileTypeMagicWordMap[this.props.record.data[this.props.name][0]]||"png";this.lastURL=`data:image/${magic};base64,${this.props.record.data[this.props.name]}`;}
return this.lastURL;}
onFileRemove(){this.state.isValid=true;this.props.record.update({[this.props.name]:false});}
async onFileUploaded(info){this.state.isValid=true;if(this.props.convertToWebp&&!["image/gif","image/svg+xml","image/webp"].includes(info.type)){const image=document.createElement("img");image.src=`data:${info.type};base64,${info.data}`;await new Promise((resolve)=>image.addEventListener("load",resolve));const canvas=document.createElement("canvas");canvas.width=image.width;canvas.height=image.height;const ctx=canvas.getContext("2d");ctx.drawImage(image,0,0);info.data=canvas.toDataURL("image/webp",0.75).split(",")[1];info.type="image/webp";info.name=info.name.replace(/\.[^/.]+$/,".webp");}
if(info.type==="image/webp"){const image=document.createElement("img");image.src=`data:image/webp;base64,${info.data}`;await new Promise((resolve)=>image.addEventListener("load",resolve));const originalSize=Math.max(image.width,image.height);const smallerSizes=[1024,512,256,128].filter((size)=>size<originalSize);let referenceId=undefined;for(const size of[originalSize,...smallerSizes]){const ratio=size/originalSize;const canvas=document.createElement("canvas");canvas.width=image.width*ratio;canvas.height=image.height*ratio;const ctx=canvas.getContext("2d");ctx.fillStyle="rgb(255, 255, 255)";ctx.fillRect(0,0,canvas.width,canvas.height);ctx.drawImage(image,0,0,image.width,image.height,0,0,canvas.width,canvas.height);const[resizedId]=await this.orm.call("ir.attachment","create_unique",[[{name:info.name,description:size===originalSize?"":`resize: ${size}`,datas:size===originalSize?info.data:canvas.toDataURL("image/webp",0.75).split(",")[1],res_id:referenceId,res_model:"ir.attachment",mimetype:"image/webp",},],]);referenceId=referenceId||resizedId;await this.orm.call("ir.attachment","create_unique",[[{name:info.name.replace(/\.webp$/,".jpg"),description:"format: jpeg",datas:canvas.toDataURL("image/jpeg",0.75).split(",")[1],res_id:resizedId,res_model:"ir.attachment",mimetype:"image/jpeg",},],]);}}
this.props.record.update({[this.props.name]:info.data});}
onLoadFailed(){this.state.isValid=false;}}
const imageField=__exports.imageField={component:ImageField,displayName:_t("Image"),supportedAttributes:[{label:_t("Alternative text"),name:"alt",type:"string",},],supportedOptions:[{label:_t("Reload"),name:"reload",type:"boolean",default:true,},{label:_t("Enable zoom"),name:"zoom",type:"boolean",},{label:_t("Convert to webp"),name:"convert_to_webp",type:"boolean",},{label:_t("Zoom delay"),name:"zoom_delay",type:"number",help:_t("Delay the apparition of the zoomed image with a value in milliseconds"),},{label:_t("Accepted file extensions"),name:"accepted_file_extensions",type:"string",},{label:_t("Size"),name:"size",type:"selection",choices:[{label:_t("Small"),value:"[0,90]"},{label:_t("Medium"),value:"[0,180]"},{label:_t("Large"),value:"[0,270]"},],},{label:_t("Preview image"),name:"preview_image",type:"field",availableTypes:["binary"],},],supportedTypes:["binary","many2one"],fieldDependencies:[{name:"write_date",type:"datetime"}],isEmpty:()=>false,extractProps:({attrs,options})=>({alt:attrs.alt,enableZoom:options.zoom,convertToWebp:options.convert_to_webp,imgClass:options.img_class,zoomDelay:options.zoom_delay,previewImage:options.preview_image,acceptedFileExtensions:options.accepted_file_extensions,width:options.size&&Boolean(options.size[0])?options.size[0]:attrs.width,height:options.size&&Boolean(options.size[1])?options.size[1]:attrs.height,reload:"reload"in options?Boolean(options.reload):true,}),};registry.category("fields").add("image",imageField);return __exports;});;

/* /web/static/src/views/fields/image_url/image_url_field.js */
odoo.define('@web/views/fields/image_url/image_url_field',['@web/core/l10n/translation','@web/core/registry','@web/core/utils/hooks','@web/views/fields/standard_field_props','@odoo/owl','@web/model/relational_model/utils'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component,useState}=require("@odoo/owl");const{useRecordObserver}=require("@web/model/relational_model/utils");const ImageUrlField=__exports.ImageUrlField=class ImageUrlField extends Component{static template="web.ImageUrlField";static props={...standardFieldProps,width:{type:Number,optional:true},height:{type:Number,optional:true},};static fallbackSrc="/web/static/img/placeholder.png";setup(){this.notification=useService("notification");this.state=useState({src:this.props.record.data[this.props.name],});useRecordObserver((record)=>{this.state.src=record.data[this.props.name];});}
get sizeStyle(){let style="";if(this.props.width){style+=`max-width: ${this.props.width}px;`;}
if(this.props.height){style+=`max-height: ${this.props.height}px;`;}
return style;}
onLoadFailed(){this.state.src=this.constructor.fallbackSrc;}}
const imageUrlField=__exports.imageUrlField={component:ImageUrlField,displayName:_t("Image"),supportedOptions:[{label:_t("Size"),name:"size",type:"selection",choices:[{label:_t("Small"),value:"[0,90]"},{label:_t("Medium"),value:"[0,180]"},{label:_t("Large"),value:"[0,270]"},],},],supportedTypes:["char"],extractProps:({attrs,options})=>({width:options.size?options.size[0]:attrs.width,height:options.size?options.size[1]:attrs.height,}),};registry.category("fields").add("image_url",imageUrlField);return __exports;});;

/* /web/static/src/views/fields/input_field_hook.js */
odoo.define('@web/views/fields/input_field_hook',['@web/core/hotkeys/hotkey_service','@web/core/utils/hooks','@odoo/owl'],function(require){'use strict';let __exports={};const{getActiveHotkey}=require("@web/core/hotkeys/hotkey_service");const{useBus}=require("@web/core/utils/hooks");const{useComponent,useEffect,useRef}=require("@odoo/owl");__exports.useInputField=useInputField;function useInputField(params){const inputRef=params.ref||useRef(params.refName||"input");const component=useComponent();let isDirty=false;let lastSetValue=null;let pendingUpdate=false;function onInput(ev){isDirty=ev.target.value!==lastSetValue;if(params.preventLineBreaks&&ev.inputType==="insertFromPaste"){ev.target.value=ev.target.value.replace(/[\r\n]+/g," ");}
component.props.record.model.bus.trigger("FIELD_IS_DIRTY",isDirty);if(!component.props.record.isValid){component.props.record.resetFieldValidity(component.props.name);}}
async function onChange(ev){if(isDirty){isDirty=false;let isInvalid=false;let val=ev.target.value;if(params.parse){try{val=params.parse(val);}catch{component.props.record.setInvalidField(component.props.name);isInvalid=true;}}
if(!isInvalid){if(val!==component.props.record.data[component.props.name]){lastSetValue=inputRef.el.value;pendingUpdate=true;await component.props.record.update({[component.props.name]:val});pendingUpdate=false;component.props.record.model.bus.trigger("FIELD_IS_DIRTY",isDirty);}else{inputRef.el.value=params.getValue();}}}}
function onKeydown(ev){const hotkey=getActiveHotkey(ev);if(["enter","tab","shift+tab"].includes(hotkey)){commitChanges(false);}
if(params.preventLineBreaks&&["enter","shift+enter"].includes(hotkey)){ev.preventDefault();}}
useEffect((inputEl)=>{if(inputEl){inputEl.addEventListener("input",onInput);inputEl.addEventListener("change",onChange);inputEl.addEventListener("keydown",onKeydown);return()=>{inputEl.removeEventListener("input",onInput);inputEl.removeEventListener("change",onChange);inputEl.removeEventListener("keydown",onKeydown);};}},()=>[inputRef.el]);useEffect(()=>{const value=params.getValue();if(inputRef.el&&!isDirty&&!component.props.record.isFieldInvalid(component.props.name)){inputRef.el.value=value;lastSetValue=inputRef.el.value;}});const{model}=component.props.record;useBus(model.bus,"WILL_SAVE_URGENTLY",()=>commitChanges(true));useBus(model.bus,"NEED_LOCAL_CHANGES",(ev)=>ev.detail.proms.push(commitChanges()));async function commitChanges(urgent){if(!inputRef.el){return;}
isDirty=inputRef.el.value!==lastSetValue;if(isDirty||(urgent&&pendingUpdate)){let isInvalid=false;isDirty=false;let val=inputRef.el.value;if(params.parse){try{val=params.parse(val);}catch{isInvalid=true;if(urgent){return;}else{component.props.record.setInvalidField(component.props.name);}}}
if(isInvalid){return;}
if((val||false)!==(component.props.record.data[component.props.name]||false)){lastSetValue=inputRef.el.value;await component.props.record.update({[component.props.name]:val});component.props.record.model.bus.trigger("FIELD_IS_DIRTY",false);}else{inputRef.el.value=params.getValue();}}}
return inputRef;}
return __exports;});;

/* /web/static/src/views/fields/integer/integer_field.js */
odoo.define('@web/views/fields/integer/integer_field',['@web/core/l10n/translation','@web/core/registry','@web/views/fields/formatters','@web/views/fields/parsers','@web/views/fields/input_field_hook','@web/views/fields/standard_field_props','@web/views/fields/numpad_decimal_hook','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{formatInteger}=require("@web/views/fields/formatters");const{parseInteger}=require("@web/views/fields/parsers");const{useInputField}=require("@web/views/fields/input_field_hook");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{useNumpadDecimal}=require("@web/views/fields/numpad_decimal_hook");const{Component,useState}=require("@odoo/owl");const IntegerField=__exports.IntegerField=class IntegerField extends Component{static template="web.IntegerField";static props={...standardFieldProps,formatNumber:{type:Boolean,optional:true},humanReadable:{type:Boolean,optional:true},decimals:{type:Number,optional:true},inputType:{type:String,optional:true},step:{type:Number,optional:true},placeholder:{type:String,optional:true},};static defaultProps={formatNumber:true,humanReadable:false,inputType:"text",decimals:0,};setup(){this.state=useState({hasFocus:false,});useInputField({getValue:()=>this.formattedValue,refName:"numpadDecimal",parse:(v)=>parseInteger(v),});useNumpadDecimal();}
onFocusIn(){this.state.hasFocus=true;}
onFocusOut(){this.state.hasFocus=false;}
get formattedValue(){if(!this.props.formatNumber||(!this.props.readonly&&this.props.inputType==="number")){return this.value;}
if(this.props.humanReadable&&!this.state.hasFocus){return formatInteger(this.value,{humanReadable:true,decimals:this.props.decimals,});}else{return formatInteger(this.value,{humanReadable:false});}}
get value(){return this.props.record.data[this.props.name];}}
const integerField=__exports.integerField={component:IntegerField,displayName:_t("Integer"),supportedOptions:[{label:_t("Format number"),name:"enable_formatting",type:"boolean",help:_t("Format the value according to your language setup - e.g. thousand separators, rounding, etc."),default:true,},{label:_t("Type"),name:"type",type:"string",},{label:_t("Step"),name:"step",type:"number",},{label:_t("User-friendly format"),name:"human_readable",type:"boolean",help:_t("Use a human readable format (e.g.: 500G instead of 500,000,000,000)."),},{label:_t("Decimals"),name:"decimals",type:"number",default:0,help:_t("Use it with the 'User-friendly format' option to customize the formatting."),},],supportedTypes:["integer"],isEmpty:(record,fieldName)=>record.data[fieldName]===false,extractProps:({attrs,options})=>({formatNumber:options?.enable_formatting!==undefined?Boolean(options.enable_formatting):true,humanReadable:!!options.human_readable,inputType:options.type,step:options.step,placeholder:attrs.placeholder,decimals:options.decimals||0,}),};registry.category("fields").add("integer",integerField);return __exports;});;

/* /web/static/src/views/fields/journal_dashboard_graph/journal_dashboard_graph_field.js */
odoo.define('@web/views/fields/journal_dashboard_graph/journal_dashboard_graph_field',['@web/core/assets','@web/core/registry','@web/core/colors/colors','@web/views/fields/standard_field_props','@odoo/owl','@web/core/browser/cookie'],function(require){'use strict';let __exports={};const{loadBundle}=require("@web/core/assets");const{registry}=require("@web/core/registry");const{getColor,hexToRGBA,getCustomColor}=require("@web/core/colors/colors");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component,onWillStart,useEffect,useRef}=require("@odoo/owl");const{cookie}=require("@web/core/browser/cookie");const colorScheme=cookie.get("color_scheme");const GRAPH_GRID_COLOR=getCustomColor(colorScheme,"#d8dadd","#3C3E4B");const GRAPH_LABEL_COLOR=getCustomColor(colorScheme,"#111827","#E4E4E4");const JournalDashboardGraphField=__exports.JournalDashboardGraphField=class JournalDashboardGraphField extends Component{static template="web.JournalDashboardGraphField";static props={...standardFieldProps,graphType:String,};setup(){this.chart=null;this.canvasRef=useRef("canvas");this.data=JSON.parse(this.props.record.data[this.props.name]);onWillStart(async()=>await loadBundle("web.chartjs_lib"));useEffect(()=>{this.renderChart();return()=>{if(this.chart){this.chart.destroy();}};});}
renderChart(){if(this.chart){this.chart.destroy();}
let config;if(this.props.graphType==="line"){config=this.getLineChartConfig();}else if(this.props.graphType==="bar"){config=this.getBarChartConfig();}
this.chart=new Chart(this.canvasRef.el,config);}
getLineChartConfig(){const labels=this.data[0].values.map(function(pt){return pt.x;});const color10=getColor(3,cookie.get("color_scheme"),"odoo");const borderColor=this.data[0].is_sample_data?hexToRGBA(color10,0.1):color10;const backgroundColor=this.data[0].is_sample_data?hexToRGBA(color10,0.05):hexToRGBA(color10,0.2);return{type:"line",data:{labels,datasets:[{backgroundColor,borderColor,data:this.data[0].values,fill:"start",label:this.data[0].key,borderWidth:2,},],},options:{plugins:{legend:{display:false},tooltip:{enabled:!this.data[0].is_sample_data,intersect:false,position:"nearest",caretSize:0,},},scales:{y:{display:false,},x:{display:false,},},maintainAspectRatio:false,elements:{line:{tension:0.000001,},},},};}
getBarChartConfig(){const data=[];const labels=[];const backgroundColor=[];const color13=getColor(2,cookie.get("color_scheme"),"odoo");const color19=getColor(1,cookie.get("color_scheme"),"odoo");this.data[0].values.forEach((pt)=>{data.push(pt.value);labels.push(pt.label);if(pt.type==="past"){backgroundColor.push(color13);}else if(pt.type==="future"){backgroundColor.push(color19);}else{backgroundColor.push(getCustomColor(colorScheme,"#ebebeb","#3C3E4B"));}});return{type:"bar",data:{labels,datasets:[{backgroundColor,data,fill:"start",label:this.data[0].key,},],},options:{plugins:{legend:{display:false},tooltip:{enabled:!this.data[0].is_sample_data,intersect:false,position:"nearest",caretSize:0,},},scales:{y:{display:false,},x:{grid:{color:GRAPH_GRID_COLOR,},ticks:{color:GRAPH_LABEL_COLOR,},border:{color:GRAPH_GRID_COLOR,},},},maintainAspectRatio:false,elements:{line:{tension:0.000001,},},},};}}
const journalDashboardGraphField=__exports.journalDashboardGraphField={component:JournalDashboardGraphField,supportedTypes:["text"],extractProps:({attrs})=>({graphType:attrs.graph_type,}),};registry.category("fields").add("dashboard_graph",journalDashboardGraphField);return __exports;});;

/* /web/static/src/views/fields/jsonb/jsonb.js */
odoo.define('@web/views/fields/jsonb/jsonb',['@web/core/l10n/translation','@web/core/registry','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const JsonField=__exports.JsonField=class JsonField extends Component{static template="web.JsonbField";static props={...standardFieldProps,};get formattedValue(){const value=this.props.record.data[this.props.name];return value?JSON.stringify(value):"";}}
const jsonField=__exports.jsonField={component:JsonField,displayName:_t("Json"),supportedTypes:["jsonb"],};registry.category("fields").add("jsonb",jsonField);return __exports;});;

/* /web/static/src/views/fields/kanban_color_picker/kanban_color_picker_field.js */
odoo.define('@web/views/fields/kanban_color_picker/kanban_color_picker_field',['@web/core/l10n/translation','@web/core/colorlist/colorlist','@web/core/registry','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{ColorList}=require("@web/core/colorlist/colorlist");const{registry}=require("@web/core/registry");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");class KanbanColorPickerField extends Component{static template="web.KanbanColorPickerField";static props=standardFieldProps;get colors(){return ColorList.COLORS;}
selectColor(colorIndex){return this.props.record.update({[this.props.name]:colorIndex},{save:true});}}
const kanbanColorPickerField=__exports.kanbanColorPickerField={component:KanbanColorPickerField,displayName:_t("Color Picker"),extractProps(fieldInfo,dynamicInfo){return{readonly:dynamicInfo.readonly,};},};registry.category("fields").add("kanban_color_picker",kanbanColorPickerField);return __exports;});;

/* /web/static/src/views/fields/label_selection/label_selection_field.js */
odoo.define('@web/views/fields/label_selection/label_selection_field',['@web/core/registry','@web/core/l10n/translation','@web/views/fields/standard_field_props','@web/views/fields/formatters','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{_t}=require("@web/core/l10n/translation");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{formatSelection}=require("@web/views/fields/formatters");const{Component}=require("@odoo/owl");const LabelSelectionField=__exports.LabelSelectionField=class LabelSelectionField extends Component{static template="web.LabelSelectionField";static props={...standardFieldProps,classesObj:{type:Object,optional:true},};static defaultProps={classesObj:{},};get className(){return this.props.classesObj[this.props.record.data[this.props.name]]||"primary";}
get string(){return formatSelection(this.props.record.data[this.props.name],{selection:Array.from(this.props.record.fields[this.props.name].selection),});}}
const labelSelectionField=__exports.labelSelectionField={component:LabelSelectionField,displayName:_t("Label Selection"),supportedOptions:[{label:_t("Classes"),name:"classes",type:"string",},],supportedTypes:["selection"],extractProps:({options})=>({classesObj:options.classes,}),};registry.category("fields").add("label_selection",labelSelectionField);return __exports;});;

/* /web/static/src/views/fields/many2many_binary/many2many_binary_field.js */
odoo.define('@web/views/fields/many2many_binary/many2many_binary_field',['@web/core/l10n/translation','@web/core/registry','@web/core/utils/hooks','@web/views/fields/standard_field_props','@web/core/file_input/file_input','@web/views/fields/relational_utils','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{FileInput}=require("@web/core/file_input/file_input");const{useX2ManyCrud}=require("@web/views/fields/relational_utils");const{Component}=require("@odoo/owl");const Many2ManyBinaryField=__exports.Many2ManyBinaryField=class Many2ManyBinaryField extends Component{static template="web.Many2ManyBinaryField";static components={FileInput,};static props={...standardFieldProps,acceptedFileExtensions:{type:String,optional:true},className:{type:String,optional:true},numberOfFiles:{type:Number,optional:true},};setup(){this.orm=useService("orm");this.notification=useService("notification");this.operations=useX2ManyCrud(()=>this.props.record.data[this.props.name],true);}
get uploadText(){return this.props.record.fields[this.props.name].string;}
get files(){return this.props.record.data[this.props.name].records.map((record)=>{return{...record.data,id:record.resId,};});}
getUrl(id){return"/web/content/"+id+"?download=true";}
getExtension(file){return file.name.replace(/^.*\./,"");}
async onFileUploaded(files){for(const file of files){if(file.error){return this.notification.add(file.error,{title:_t("Uploading error"),type:"danger",});}
await this.operations.saveRecord([file.id]);}}
async onFileRemove(deleteId){const record=this.props.record.data[this.props.name].records.find((record)=>record.resId===deleteId);this.operations.removeRecord(record);}}
const many2ManyBinaryField=__exports.many2ManyBinaryField={component:Many2ManyBinaryField,supportedOptions:[{label:_t("Accepted file extensions"),name:"accepted_file_extensions",type:"string",},{label:_t("Number of files"),name:"number_of_files",type:"integer",},],supportedTypes:["many2many"],isEmpty:()=>false,relatedFields:[{name:"name",type:"char"},{name:"mimetype",type:"char"},],extractProps:({attrs,options})=>({acceptedFileExtensions:options.accepted_file_extensions,className:attrs.class,numberOfFiles:options.number_of_files,}),};registry.category("fields").add("many2many_binary",many2ManyBinaryField);return __exports;});;

/* /web/static/src/views/fields/many2many_checkboxes/many2many_checkboxes_field.js */
odoo.define('@web/views/fields/many2many_checkboxes/many2many_checkboxes_field',['@odoo/owl','@web/core/checkbox/checkbox','@web/core/l10n/translation','@web/core/registry','@web/core/utils/hooks','@web/core/utils/timing','@web/model/relational_model/utils','@web/views/fields/relational_utils','@web/views/fields/standard_field_props'],function(require){'use strict';let __exports={};const{Component,onWillUnmount}=require("@odoo/owl");const{CheckBox}=require("@web/core/checkbox/checkbox");const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{useBus}=require("@web/core/utils/hooks");const{debounce}=require("@web/core/utils/timing");const{getFieldDomain}=require("@web/model/relational_model/utils");const{useSpecialData}=require("@web/views/fields/relational_utils");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const Many2ManyCheckboxesField=__exports.Many2ManyCheckboxesField=class Many2ManyCheckboxesField extends Component{static template="web.Many2ManyCheckboxesField";static components={CheckBox};static props={...standardFieldProps,domain:{type:[Array,Function],optional:true},};setup(){this.specialData=useSpecialData((orm,props)=>{const{relation}=props.record.fields[props.name];const domain=getFieldDomain(props.record,props.name,props.domain);return orm.call(relation,"name_search",["",domain]);});this.idsToAdd=new Set();this.idsToRemove=new Set();this.debouncedCommitChanges=debounce(this.commitChanges.bind(this),500);useBus(this.props.record.model.bus,"NEED_LOCAL_CHANGES",this.commitChanges.bind(this));onWillUnmount(this.commitChanges.bind(this));}
get items(){return this.specialData.data;}
isSelected(item){return this.props.record.data[this.props.name].currentIds.includes(item[0]);}
commitChanges(){if(this.idsToAdd.size===0&&this.idsToRemove.size===0){return;}
const result=this.props.record.data[this.props.name].addAndRemove({add:[...this.idsToAdd],remove:[...this.idsToRemove],});this.idsToAdd.clear();this.idsToRemove.clear();return result;}
onChange(resId,checked){if(checked){if(this.idsToRemove.has(resId)){this.idsToRemove.delete(resId);}else{this.idsToAdd.add(resId);}}else{if(this.idsToAdd.has(resId)){this.idsToAdd.delete(resId);}else{this.idsToRemove.add(resId);}}
this.debouncedCommitChanges();}}
const many2ManyCheckboxesField=__exports.many2ManyCheckboxesField={component:Many2ManyCheckboxesField,displayName:_t("Checkboxes"),supportedTypes:["many2many"],isEmpty:()=>false,extractProps(fieldInfo,dynamicInfo){return{domain:dynamicInfo.domain,};},};registry.category("fields").add("many2many_checkboxes",many2ManyCheckboxesField);return __exports;});;

/* /web/static/src/views/fields/many2many_tags/kanban_many2many_tags_field.js */
odoo.define('@web/views/fields/many2many_tags/kanban_many2many_tags_field',['@web/core/registry','@web/views/fields/many2many_tags/many2many_tags_field'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{Many2ManyTagsField,many2ManyTagsField}=require("@web/views/fields/many2many_tags/many2many_tags_field");const KanbanMany2ManyTagsField=__exports.KanbanMany2ManyTagsField=class KanbanMany2ManyTagsField extends Many2ManyTagsField{static template="web.KanbanMany2ManyTagsField";get tags(){return super.tags.reduce((kanbanTags,tag)=>{if(tag.colorIndex!==0){delete tag.onClick;kanbanTags.push(tag);}
return kanbanTags;},[]);}}
const kanbanMany2ManyTagsField=__exports.kanbanMany2ManyTagsField={...many2ManyTagsField,component:KanbanMany2ManyTagsField,};registry.category("fields").add("kanban.many2many_tags",kanbanMany2ManyTagsField);return __exports;});;

/* /web/static/src/views/fields/many2many_tags/many2many_tags_field.js */
odoo.define('@web/views/fields/many2many_tags/many2many_tags_field',['@web/core/l10n/translation','@web/core/checkbox/checkbox','@web/core/colorlist/colorlist','@web/core/domain','@web/core/py_js/py','@web/views/fields/relational_utils','@web/core/registry','@web/views/fields/standard_field_props','@web/core/tags_list/tags_list','@web/core/popover/popover_hook','@web/core/utils/hooks','@web/core/record_selectors/tag_navigation_hook','@odoo/owl','@web/model/relational_model/utils'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{CheckBox}=require("@web/core/checkbox/checkbox");const{ColorList}=require("@web/core/colorlist/colorlist");const{Domain}=require("@web/core/domain");const{evaluateBooleanExpr}=require("@web/core/py_js/py");const{Many2XAutocomplete,useActiveActions,useX2ManyCrud,useOpenMany2XRecord,}=require("@web/views/fields/relational_utils");const{registry}=require("@web/core/registry");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{TagsList}=require("@web/core/tags_list/tags_list");const{usePopover}=require("@web/core/popover/popover_hook");const{useService}=require("@web/core/utils/hooks");const{useTagNavigation}=require("@web/core/record_selectors/tag_navigation_hook");const{Component,useRef}=require("@odoo/owl");const{getFieldDomain}=require("@web/model/relational_model/utils");class Many2ManyTagsFieldColorListPopover extends Component{static template="web.Many2ManyTagsFieldColorListPopover";static components={CheckBox,ColorList,};static props={colors:Array,tag:Object,switchTagColor:Function,onTagVisibilityChange:Function,close:Function,};}
const Many2ManyTagsField=__exports.Many2ManyTagsField=class Many2ManyTagsField extends Component{static template="web.Many2ManyTagsField";static components={TagsList,Many2XAutocomplete,};static props={...standardFieldProps,canCreate:{type:Boolean,optional:true},canQuickCreate:{type:Boolean,optional:true},canCreateEdit:{type:Boolean,optional:true},colorField:{type:String,optional:true},createDomain:{type:[Array,Boolean],optional:true},domain:{type:[Array,Function],optional:true},context:{type:Object,optional:true},placeholder:{type:String,optional:true},nameCreateField:{type:String,optional:true},string:{type:String,optional:true},noSearchMore:{type:Boolean,optional:true},};static defaultProps={canCreate:true,canQuickCreate:true,canCreateEdit:true,nameCreateField:"name",context:{},};static RECORD_COLORS=[1,2,3,4,5,6,7,8,9,10,11];static SEARCH_MORE_LIMIT=320;setup(){this.orm=useService("orm");this.previousColorsMap={};this.popover=usePopover(this.constructor.components.Popover);this.dialog=useService("dialog");this.dialogClose=[];this.onTagKeydown=useTagNavigation("many2ManyTagsField",this.deleteTagByIndex.bind(this));this.autoCompleteRef=useRef("autoComplete");const{saveRecord,removeRecord}=useX2ManyCrud(()=>this.props.record.data[this.props.name],true);this.activeActions=useActiveActions({fieldType:"many2many",crudOptions:{create:this.props.canCreate&&this.props.createDomain,createEdit:this.props.canCreateEdit,onDelete:removeRecord,edit:this.props.record.isInEdition,},getEvalParams:(props)=>{return{evalContext:this.evalContext,readonly:props.readonly,};},});this.openMany2xRecord=useOpenMany2XRecord({resModel:this.relation,activeActions:{create:false,write:true,},onRecordSaved:async(record)=>{await this.props.record.data[this.props.name].forget(record);return saveRecord([record.resId]);},});this.update=(recordlist)=>{recordlist=recordlist?recordlist.filter((element)=>{return!this.tags.some((record)=>record.resId===element.id);}):[];if(!recordlist.length){return;}
const resIds=recordlist.map((rec)=>rec.id);return saveRecord(resIds);};if(this.props.canQuickCreate){this.quickCreate=async(name)=>{const created=await this.orm.call(this.relation,"name_create",[name],{context:this.props.context,});return saveRecord([created[0]]);};}}
get relation(){return this.props.record.fields[this.props.name].relation;}
get evalContext(){return this.props.record.evalContext;}
get string(){return this.props.string||this.props.record.fields[this.props.name].string||"";}
getTagProps(record){return{id:record.id,resId:record.resId,text:record.data.display_name,colorIndex:record.data[this.props.colorField],canEdit:this.props.canEditTags,onDelete:!this.props.readonly?()=>this.deleteTag(record.id):undefined,onKeydown:(ev)=>{if(this.props.readonly){return;}
this.onTagKeydown(ev);},};}
get tags(){return this.props.record.data[this.props.name].records.map((record)=>this.getTagProps(record));}
get showM2OSelectionField(){return!this.props.readonly;}
async deleteTagByIndex(index){const{id}=this.tags[index]||{};this.deleteTag(id);}
async deleteTag(id){const tagRecord=this.props.record.data[this.props.name].records.find((record)=>record.id===id);await this.props.record.data[this.props.name].forget(tagRecord);}
getDomain(){return Domain.and([getFieldDomain(this.props.record,this.props.name,this.props.domain),]).toList(this.props.context);}
getOptionClassnames(record){const records=this.props.record.data[this.props.name].records;const isSelected=records.some((r)=>r.resId===record.id);return isSelected?"dropdown-item-selected":"";}}
const many2ManyTagsField=__exports.many2ManyTagsField={component:Many2ManyTagsField,displayName:_t("Tags"),supportedOptions:[{label:_t("Disable creation"),name:"no_create",type:"boolean",help:_t("If checked, users won't be able to create records through the autocomplete dropdown at all."),},{label:_t("Disable 'Create' option"),name:"no_quick_create",type:"boolean",help:_t("If checked, users will not be able to create records based on the text input; they will still be able to create records via a popup form."),},{label:_t("Disable 'Create and Edit' option"),name:"no_create_edit",type:"boolean",help:_t("If checked, users will not be able to create records based through a popup form; they will still be able to create records based on the text input."),},{label:_t("Can create"),name:"create",type:"string",help:_t("Write a domain to allow the creation of records conditionnally."),},{label:_t("Color field"),name:"color_field",type:"field",availableTypes:["integer"],help:_t("Set an integer field to use colors with the tags."),},],supportedTypes:["many2many"],relatedFields:({options})=>{const relatedFields=[{name:"display_name",type:"char"}];if(options.color_field){relatedFields.push({name:options.color_field,type:"integer",readonly:false});}
return relatedFields;},extractProps({attrs,options,string},dynamicInfo){const hasCreatePermission=attrs.can_create?evaluateBooleanExpr(attrs.can_create):true;const noCreate=Boolean(options.no_create);const canCreate=noCreate?false:hasCreatePermission;const noQuickCreate=Boolean(options.no_quick_create);const noCreateEdit=Boolean(options.no_create_edit);return{colorField:options.color_field,nameCreateField:options.create_name_field,canCreate,canQuickCreate:canCreate&&!noQuickCreate,canCreateEdit:canCreate&&!noCreateEdit,createDomain:options.create,context:dynamicInfo.context,domain:dynamicInfo.domain,placeholder:attrs.placeholder,string,};},};registry.category("fields").add("many2many_tags",many2ManyTagsField);registry.category("fields").add("calendar.one2many",many2ManyTagsField);registry.category("fields").add("calendar.many2many",many2ManyTagsField);const Many2ManyTagsFieldColorEditable=__exports.Many2ManyTagsFieldColorEditable=class Many2ManyTagsFieldColorEditable extends Many2ManyTagsField{static components={...super.components,Popover:Many2ManyTagsFieldColorListPopover,};static props={...super.props,canEditColor:{type:Boolean,optional:true},canEditTags:{type:Boolean,optional:true},};static defaultProps={...super.defaultProps,canEditColor:true,canEditTags:false,};getTagProps(record){const props=super.getTagProps(record);props.onClick=(ev)=>this.onTagClick(ev,record);return props;}
onTagClick(ev,record){if(this.props.canEditTags){return this.openMany2xRecord({resId:record.resId,context:this.props.context,title:_t("Edit: %s",record.data.display_name),});}
if(!this.props.canEditColor){return;}
if(this.popover.isOpen){this.popover.close();}else{this.popover.open(ev.currentTarget,{colors:this.constructor.RECORD_COLORS,tag:{id:record.id,colorIndex:record.data[this.props.colorField],},switchTagColor:this.switchTagColor.bind(this),onTagVisibilityChange:this.onTagVisibilityChange.bind(this),});}}
async onTagVisibilityChange(isHidden,tag){const tagRecord=this.props.record.data[this.props.name].records.find((record)=>record.id===tag.id);if(tagRecord.data[this.props.colorField]!=0){this.previousColorsMap[tagRecord.resId]=tagRecord.data[this.props.colorField];}
const changes={[this.props.colorField]:isHidden?0:this.previousColorsMap[tagRecord.resId]||1,};await tagRecord.update(changes);await tagRecord.save();this.popover.close();}
async switchTagColor(colorIndex,tag){const tagRecord=this.props.record.data[this.props.name].records.find((record)=>record.id===tag.id);await tagRecord.update({[this.props.colorField]:colorIndex});await tagRecord.save();this.popover.close();}}
const many2ManyTagsFieldColorEditable=__exports.many2ManyTagsFieldColorEditable={...many2ManyTagsField,component:Many2ManyTagsFieldColorEditable,supportedOptions:[...many2ManyTagsField.supportedOptions,{label:_t("Prevent color edition"),name:"no_edit_color",type:"boolean",},{label:_t("Edit Tags"),name:"edit_tags",type:"boolean",help:_t("If checked, clicking on the tag will open the form that allows to directly edit it. Note that if a color field is also set, the tag edition will prevail. So, the color picker will not be displayed on click on the tag."),},],extractProps({options,attrs}){const props=many2ManyTagsField.extractProps(...arguments);const hasEditPermission=attrs.can_write?evaluateBooleanExpr(attrs.can_write):true;props.canEditTags=options.edit_tags?hasEditPermission:false;props.canEditColor=!props.canEditTags&&!options.no_edit_color&&!!options.color_field;return props;},};registry.category("fields").add("form.many2many_tags",many2ManyTagsFieldColorEditable);return __exports;});;

/* /web/static/src/views/fields/many2many_tags_avatar/many2many_tags_avatar_field.js */
odoo.define('@web/views/fields/many2many_tags_avatar/many2many_tags_avatar_field',['@web/core/l10n/translation','@web/core/popover/popover_hook','@web/core/registry','@web/views/fields/many2many_tags/many2many_tags_field','@web/core/tags_list/tags_list','@web/views/fields/relational_utils','@web/core/utils/urls'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{usePopover}=require("@web/core/popover/popover_hook");const{registry}=require("@web/core/registry");const{many2ManyTagsField,Many2ManyTagsField,}=require("@web/views/fields/many2many_tags/many2many_tags_field");const{TagsList}=require("@web/core/tags_list/tags_list");const{AvatarMany2XAutocomplete}=require("@web/views/fields/relational_utils");const{imageUrl}=require("@web/core/utils/urls");const Many2ManyTagsAvatarField=__exports.Many2ManyTagsAvatarField=class Many2ManyTagsAvatarField extends Many2ManyTagsField{static template="web.Many2ManyTagsAvatarField";static components={Many2XAutocomplete:AvatarMany2XAutocomplete,TagsList,};static props={...Many2ManyTagsField.props,withCommand:{type:Boolean,optional:true},};getTagProps(record){return{...super.getTagProps(record),img:imageUrl(this.relation,record.resId,"avatar_128"),};}}
const many2ManyTagsAvatarField=__exports.many2ManyTagsAvatarField={...many2ManyTagsField,component:Many2ManyTagsAvatarField,extractProps({viewType},dynamicInfo){const props=many2ManyTagsField.extractProps(...arguments);props.withCommand=viewType==="form"||viewType==="list";props.domain=dynamicInfo.domain;return props;},};registry.category("fields").add("many2many_tags_avatar",many2ManyTagsAvatarField);const ListMany2ManyTagsAvatarField=__exports.ListMany2ManyTagsAvatarField=class ListMany2ManyTagsAvatarField extends Many2ManyTagsAvatarField{visibleItemsLimit=5;}
const listMany2ManyTagsAvatarField=__exports.listMany2ManyTagsAvatarField={...many2ManyTagsAvatarField,component:ListMany2ManyTagsAvatarField,};registry.category("fields").add("list.many2many_tags_avatar",listMany2ManyTagsAvatarField);const Many2ManyTagsAvatarFieldPopover=__exports.Many2ManyTagsAvatarFieldPopover=class Many2ManyTagsAvatarFieldPopover extends Many2ManyTagsAvatarField{static template="web.Many2ManyTagsAvatarFieldPopover";static props={...Many2ManyTagsAvatarField.props,close:{type:Function},};setup(){super.setup();const originalUpdate=this.update;this.update=async(recordList)=>{await originalUpdate(recordList);await this._saveUpdate();};}
async deleteTag(id){await super.deleteTag(id);await this._saveUpdate();}
async _saveUpdate(){await this.props.record.save({reload:false});this.render();this.autoCompleteRef.el?.querySelector("input")?.click();}
get tags(){return super.tags.reverse();}}
const many2ManyTagsAvatarFieldPopover=__exports.many2ManyTagsAvatarFieldPopover={...many2ManyTagsAvatarField,component:Many2ManyTagsAvatarFieldPopover,};registry.category("fields").add("many2many_tags_avatar_popover",many2ManyTagsAvatarFieldPopover);const KanbanMany2ManyTagsAvatarFieldTagsList=__exports.KanbanMany2ManyTagsAvatarFieldTagsList=class KanbanMany2ManyTagsAvatarFieldTagsList extends TagsList{static template="web.KanbanMany2ManyTagsAvatarFieldTagsList";static props={...TagsList.props,popoverProps:{type:Object},readonly:{type:Boolean,optional:true},};setup(){super.setup();this.popover=usePopover(Many2ManyTagsAvatarFieldPopover,{popoverClass:"o_m2m_tags_avatar_field_popover",closeOnClickAway:(target)=>!target.closest(".modal"),});}
openPopover(ev){if(this.props.readonly){return;}
this.popover.open(ev.currentTarget.parentElement,{...this.props.popoverProps,readonly:false,canCreate:false,canCreateEdit:false,canQuickCreate:false,placeholder:_t("Search users..."),});}
get canDisplayQuickAssignAvatar(){return!this.props.readonly&&!(this.props.tags&&this.otherTags.length);}}
const KanbanMany2ManyTagsAvatarField=__exports.KanbanMany2ManyTagsAvatarField=class KanbanMany2ManyTagsAvatarField extends Many2ManyTagsAvatarField{static template="web.KanbanMany2ManyTagsAvatarField";static components={...Many2ManyTagsAvatarField.components,TagsList:KanbanMany2ManyTagsAvatarFieldTagsList,};static props={...Many2ManyTagsAvatarField.props,isEditable:{type:Boolean,optional:true},};visibleItemsLimit=3;get popoverProps(){const props={...this.props,readonly:false,};delete props.isEditable;return props;}
get tags(){return super.tags.reverse();}}
const kanbanMany2ManyTagsAvatarField=__exports.kanbanMany2ManyTagsAvatarField={...many2ManyTagsAvatarField,component:KanbanMany2ManyTagsAvatarField,extractProps(fieldInfo,dynamicInfo){const props=many2ManyTagsAvatarField.extractProps(...arguments);props.isEditable=!dynamicInfo.readonly;return props;},};registry.category("fields").add("kanban.many2many_tags_avatar",kanbanMany2ManyTagsAvatarField);return __exports;});;

/* /web/static/src/views/fields/many2one/many2one_field.js */
odoo.define('@web/views/fields/many2one/many2one_field',['@web/core/browser/browser','@web/core/browser/feature_detection','@web/core/context','@web/core/dialog/dialog','@web/core/l10n/translation','@web/core/py_js/py','@web/core/registry','@web/core/utils/hooks','@web/core/utils/strings','@web/views/fields/relational_utils','@web/core/barcode/barcode_dialog','@web/core/barcode/barcode_video_scanner','@web/views/fields/standard_field_props','@odoo/owl','@web/model/relational_model/utils'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{isMobileOS}=require("@web/core/browser/feature_detection");const{makeContext}=require("@web/core/context");const{Dialog}=require("@web/core/dialog/dialog");const{_t}=require("@web/core/l10n/translation");const{evaluateBooleanExpr}=require("@web/core/py_js/py");const{registry}=require("@web/core/registry");const{useChildRef,useOwnedDialogs,useService}=require("@web/core/utils/hooks");const{escape,sprintf}=require("@web/core/utils/strings");const{Many2XAutocomplete,useOpenMany2XRecord}=require("@web/views/fields/relational_utils");const BarcodeScanner=require("@web/core/barcode/barcode_dialog");const{isBarcodeScannerSupported}=require("@web/core/barcode/barcode_video_scanner");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component,markup,onWillUpdateProps,useState}=require("@odoo/owl");const{getFieldDomain}=require("@web/model/relational_model/utils");class CreateConfirmationDialog extends Component{static template="web.Many2OneField.CreateConfirmationDialog";static components={Dialog};static props={name:String,value:String,create:Function,close:Function,};get title(){return _t("New: %s",this.props.name);}
get dialogContent(){return markup(sprintf(escape(_t("Create %(value)s as a new %(field)s?")),{value:`<strong>${escape(this.props.value)}</strong>`,field:escape(this.props.name),}));}
async onCreate(){await this.props.create();this.props.close();}}
__exports.m2oTupleFromData=m2oTupleFromData;function m2oTupleFromData(data){const id=data.id;let name;if("display_name"in data){name=data.display_name;}else{const _name=data.name;name=Array.isArray(_name)?_name[1]:_name;}
return[id,name];}
const Many2OneField=__exports.Many2OneField=class Many2OneField extends Component{static template="web.Many2OneField";static components={Many2XAutocomplete,};static props={...standardFieldProps,placeholder:{type:String,optional:true},canOpen:{type:Boolean,optional:true},canCreate:{type:Boolean,optional:true},canWrite:{type:Boolean,optional:true},canQuickCreate:{type:Boolean,optional:true},canCreateEdit:{type:Boolean,optional:true},context:{type:Object,optional:true},openActionContext:{type:String,optional:true},domain:{type:[Array,Function],optional:true},nameCreateField:{type:String,optional:true},searchLimit:{type:Number,optional:true},relation:{type:String,optional:true},string:{type:String,optional:true},canScanBarcode:{type:Boolean,optional:true},update:{type:Function,optional:true},value:{optional:true},decorations:{type:Object,optional:true},};static defaultProps={canOpen:true,canCreate:true,canWrite:true,canQuickCreate:true,canCreateEdit:true,nameCreateField:"name",searchLimit:7,string:"",canScanBarcode:false,context:{},decorations:{},};static SEARCH_MORE_LIMIT=320;setup(){this.orm=useService("orm");this.action=useService("action");this.dialog=useService("dialog");this.notification=useService("notification");this.autocompleteContainerRef=useChildRef();this.addDialog=useOwnedDialogs();this.focusInput=()=>{this.autocompleteContainerRef.el.querySelector("input").focus();};this.state=useState({isFloating:false,});this.computeActiveActions(this.props);this.openMany2X=useOpenMany2XRecord({resModel:this.relation,activeActions:this.state.activeActions,isToMany:false,onRecordSaved:async(record)=>{const resId=this.value[0];const fields=["display_name"];const records=await this.orm.read(this.relation,[resId],fields,{context:this.context,});await this.updateRecord(m2oTupleFromData(records[0]));},onClose:()=>this.focusInput(),fieldString:this.string,});this.update=(value,params={})=>{if(value){value=m2oTupleFromData(value[0]);}
this.state.isFloating=false;return this.updateRecord(value);};if(this.props.canQuickCreate){this.quickCreate=(name)=>{this.state.isFloating=false;return this.updateRecord([false,name]);};}
this.setFloating=(bool)=>{this.state.isFloating=bool;};onWillUpdateProps(async(nextProps)=>{this.computeActiveActions(nextProps);});}
updateRecord(value){const changes={[this.props.name]:value};if(this.props.update){return this.props.update(changes);}
return this.props.record.update(changes);}
get relation(){return this.props.relation||this.props.record.fields[this.props.name].relation;}
get urlRelation(){if(!this.relation.includes(".")){return"m-"+this.relation;}
return this.relation;}
get string(){return this.props.string||this.props.record.fields[this.props.name].string||"";}
get hasExternalButton(){return this.props.canOpen&&!!this.value&&!this.state.isFloating;}
get context(){return this.props.context;}
get classFromDecoration(){const evalContext=this.props.record.evalContextWithVirtualIds;for(const decorationName in this.props.decorations){if(evaluateBooleanExpr(this.props.decorations[decorationName],evalContext)){return`text-${decorationName}`;}}
return"";}
get displayName(){if(this.value&&this.value[1]){return this.value[1].split("\n")[0];}else if(this.value){return _t("Unnamed");}else{return"";}}
get extraLines(){return this.value&&this.value[1]?this.value[1].split("\n").map((line)=>line.trim()).slice(1):[];}
get resId(){return this.value&&this.value[0];}
get value(){return"value"in this.props?this.props.value:this.props.record.data[this.props.name];}
get Many2XAutocompleteProps(){return{value:this.displayName,id:this.props.id,placeholder:this.props.placeholder,resModel:this.relation,autoSelect:true,fieldString:this.string,activeActions:this.state.activeActions,update:this.update,quickCreate:this.quickCreate,context:this.context,getDomain:this.getDomain.bind(this),nameCreateField:this.props.nameCreateField,setInputFloats:this.setFloating,autocomplete_container:this.autocompleteContainerRef,};}
computeActiveActions(props){this.state.activeActions={create:props.canCreate,createEdit:props.canCreateEdit,write:props.canWrite,};}
getDomain(){return getFieldDomain(this.props.record,this.props.name,this.props.domain);}
async openAction(){const{name,openActionContext,record}=this.props;const context=makeContext([openActionContext||this.context,record.fields[name].context],record.evalContext);const action=await this.orm.call(this.relation,"get_formview_action",[[this.resId]],{context,});await this.action.doAction(action);}
async openDialog(resId){return this.openMany2X({resId,context:this.context});}
async openConfirmationDialog(request){return new Promise((resolve,reject)=>{this.addDialog(CreateConfirmationDialog,{value:request,name:this.string,create:async()=>{try{await this.quickCreate(request);resolve();}catch(e){reject(e);}},});});}
onClick(ev){if(this.props.canOpen&&this.props.readonly){ev.stopPropagation();this.openAction();}}
onExternalBtnClick(){if(this.env.inDialog){this.openDialog(this.resId);}else{this.openAction();}}
async onBarcodeBtnClick(){const barcode=await BarcodeScanner.scanBarcode(this.env);if(barcode){await this.onBarcodeScanned(barcode);if("vibrate"in browser.navigator){browser.navigator.vibrate(100);}}else{this.notification.add(_t("Please, scan again!"),{type:"warning",});}}
async search(barcode){const results=await this.orm.call(this.relation,"name_search",[],{name:barcode,args:this.getDomain(),operator:"ilike",limit:2,context:this.context,});return results.map((result)=>{const[id,displayName]=result;return{id,name:displayName,};});}
async onBarcodeScanned(barcode){const results=await this.search(barcode);const records=results.filter((r)=>!!r.id);if(records.length===1){this.update([{id:records[0].id,name:records[0].name}]);}else{const searchInput=this.autocompleteContainerRef.el.querySelector("input");searchInput.value=barcode;searchInput.dispatchEvent(new Event("input"));if(this.env.isSmall){searchInput.dispatchEvent(new Event("barcode-search"));}}}
get hasBarcodeButton(){const canScanBarcode=this.props.canScanBarcode;const supported=isBarcodeScannerSupported();return canScanBarcode&&isMobileOS()&&supported&&!this.hasExternalButton;}}
const many2OneField=__exports.many2OneField={component:Many2OneField,displayName:_t("Many2one"),supportedOptions:[{label:_t("Disable opening"),name:"no_open",type:"boolean",},{label:_t("Disable creation"),name:"no_create",type:"boolean",help:_t("If checked, users won't be able to create records through the autocomplete dropdown at all."),},{label:_t("Disable 'Create' option"),name:"no_quick_create",type:"boolean",help:_t("If checked, users will not be able to create records based on the text input; they will still be able to create records via a popup form."),},{label:_t("Disable 'Create and Edit' option"),name:"no_create_edit",type:"boolean",help:_t("If checked, users will not be able to create records based through a popup form; they will still be able to create records based on the text input."),},],supportedTypes:["many2one"],extractProps({attrs,context,decorations,options,string},dynamicInfo){const hasCreatePermission=attrs.can_create?evaluateBooleanExpr(attrs.can_create):true;const hasWritePermission=attrs.can_write?evaluateBooleanExpr(attrs.can_write):true;const canCreate=options.no_create?false:hasCreatePermission;return{placeholder:attrs.placeholder,canOpen:!options.no_open,canCreate,canWrite:hasWritePermission,canQuickCreate:canCreate&&!options.no_quick_create,canCreateEdit:canCreate&&!options.no_create_edit,context:dynamicInfo.context,openActionContext:context||"{}",decorations,domain:dynamicInfo.domain,nameCreateField:options.create_name_field,canScanBarcode:!!options.can_scan_barcode,string,};},};registry.category("fields").add("many2one",many2OneField);registry.category("fields").add("list.many2one",many2OneField);registry.category("fields").add("kanban.many2one",many2OneField);return __exports;});;

/* /web/static/src/views/fields/many2one_avatar/many2one_avatar_field.js */
odoo.define('@web/views/fields/many2one_avatar/many2one_avatar_field',['@web/core/l10n/translation','@web/core/registry','@web/core/popover/popover_hook','@web/views/fields/many2one/many2one_field','@web/views/fields/relational_utils'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{usePopover}=require("@web/core/popover/popover_hook");const{many2OneField,Many2OneField}=require("@web/views/fields/many2one/many2one_field");const{AvatarMany2XAutocomplete}=require("@web/views/fields/relational_utils");const Many2OneAvatarField=__exports.Many2OneAvatarField=class Many2OneAvatarField extends Many2OneField{static template="web.Many2OneAvatarField";static components={...Many2OneField.components,Many2XAutocomplete:AvatarMany2XAutocomplete,};}
const many2OneAvatarField=__exports.many2OneAvatarField={...many2OneField,component:Many2OneAvatarField,extractProps(fieldInfo){const props=many2OneField.extractProps(...arguments);props.canOpen=fieldInfo.viewType==="form";return props;},};const Many2OneFieldPopover=__exports.Many2OneFieldPopover=class Many2OneFieldPopover extends Many2OneField{static props={...Many2OneField.props,close:{type:Function},};static components={Many2XAutocomplete:AvatarMany2XAutocomplete,};get Many2XAutocompleteProps(){return{...super.Many2XAutocompleteProps,dropdown:false,autofocus:true,};}
async updateRecord(value){const updatedValue=await super.updateRecord(...arguments);await this.props.record.save();return updatedValue;}}
const KanbanMany2OneAvatarField=__exports.KanbanMany2OneAvatarField=class KanbanMany2OneAvatarField extends Many2OneAvatarField{static template="web.KanbanMany2OneAvatarField";static props={...Many2OneAvatarField.props,isEditable:{type:Boolean,optional:true},};setup(){super.setup();this.popover=usePopover(Many2OneFieldPopover,{popoverClass:"o_m2o_tags_avatar_field_popover",closeOnClickAway:(target)=>!target.closest(".modal"),});}
get popoverProps(){const props={...this.props,readonly:false,};delete props.isEditable;return props;}
openPopover(ev){if(!this.props.isEditable){return;}
this.popover.open(ev.currentTarget,{...this.popoverProps,canCreate:false,canCreateEdit:false,canQuickCreate:false,placeholder:_t("Search user..."),});}}
const kanbanMany2OneAvatarField=__exports.kanbanMany2OneAvatarField={...many2OneField,component:KanbanMany2OneAvatarField,additionalClasses:["o_field_many2one_avatar_kanban"],extractProps(fieldInfo,dynamicInfo){const props=many2OneAvatarField.extractProps(...arguments);props.isEditable=!dynamicInfo.readonly;return props;},};registry.category("fields").add("many2one_avatar",many2OneAvatarField);registry.category("fields").add("kanban.many2one_avatar",kanbanMany2OneAvatarField);return __exports;});;

/* /web/static/src/views/fields/many2one_barcode/many2one_barcode_field.js */
odoo.define('@web/views/fields/many2one_barcode/many2one_barcode_field',['@web/core/l10n/translation','@web/core/registry','@web/views/fields/many2one/many2one_field'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{many2OneField,Many2OneField}=require("@web/views/fields/many2one/many2one_field");const Many2OneBarcodeField=__exports.Many2OneBarcodeField=class Many2OneBarcodeField extends Many2OneField{static defaultProps={...super.defaultProps,canScanBarcode:true,};}
const many2OneBarcodeField=__exports.many2OneBarcodeField={...many2OneField,component:Many2OneBarcodeField,displayName:_t("Many2OneBarcode"),extractProps(){const props=many2OneField.extractProps(...arguments);props.canScanBarcode=true;return props;},};registry.category("fields").add("many2one_barcode",many2OneBarcodeField);return __exports;});;

/* /web/static/src/views/fields/many2one_reference/many2one_reference_field.js */
odoo.define('@web/views/fields/many2one_reference/many2one_reference_field',['@web/core/registry','@web/core/l10n/translation','@web/views/fields/many2one/many2one_field','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{_t}=require("@web/core/l10n/translation");const{many2OneField,Many2OneField}=require("@web/views/fields/many2one/many2one_field");const{Component}=require("@odoo/owl");const Many2OneReferenceField=__exports.Many2OneReferenceField=class Many2OneReferenceField extends Component{static template="web.Many2OneReferenceField";static components={Many2OneField};static props=Many2OneField.props;get relation(){const modelField=this.props.record.fields[this.props.name].model_field;if(!(modelField in this.props.record.data)){throw new Error(`Many2OneReferenceField: model_field must be in view (${modelField})`);}
return this.props.record.data[modelField];}
get m2oProps(){const relation=this.relation;const value=this.props.record.data[this.props.name];return{...this.props,relation,value:value?[value.resId,value.displayName]:false,readonly:this.props.readonly||!relation,update:(changes)=>{let nextVal;if(changes[this.props.name]){nextVal={resId:changes[this.props.name][0],displayName:changes[this.props.name][1],};}else{nextVal=false;}
return this.props.record.update({[this.props.name]:nextVal});},};}}
const many2oneReferenceField={component:Many2OneReferenceField,displayName:_t("Many2OneReference"),relatedFields:[{name:"display_name",type:"char"}],supportedTypes:["many2one_reference"],extractProps:many2OneField.extractProps,};registry.category("fields").add("many2one_reference",many2oneReferenceField);return __exports;});;

/* /web/static/src/views/fields/many2one_reference_integer/many2one_reference_integer_field.js */
odoo.define('@web/views/fields/many2one_reference_integer/many2one_reference_integer_field',['@web/core/l10n/translation','@web/core/registry','@web/views/fields/integer/integer_field'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{IntegerField}=require("@web/views/fields/integer/integer_field");const Many2OneReferenceIntegerField=__exports.Many2OneReferenceIntegerField=class Many2OneReferenceIntegerField extends IntegerField{get value(){const value=this.props.record.data[this.props.name];return value?value.resId:false;}}
const many2oneReferenceIntegerField={component:Many2OneReferenceIntegerField,displayName:_t("Many2OneReferenceInteger"),supportedTypes:["many2one_reference"],};registry.category("fields").add("many2one_reference_integer",many2oneReferenceIntegerField);return __exports;});;

/* /web/static/src/views/fields/monetary/monetary_field.js */
odoo.define('@web/views/fields/monetary/monetary_field',['@web/core/registry','@web/core/l10n/translation','@web/views/fields/formatters','@web/views/fields/parsers','@web/views/fields/input_field_hook','@web/views/fields/numpad_decimal_hook','@web/views/fields/standard_field_props','@web/core/utils/strings','@odoo/owl','@web/core/currency'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{_t}=require("@web/core/l10n/translation");const{formatMonetary}=require("@web/views/fields/formatters");const{parseMonetary}=require("@web/views/fields/parsers");const{useInputField}=require("@web/views/fields/input_field_hook");const{useNumpadDecimal}=require("@web/views/fields/numpad_decimal_hook");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{nbsp}=require("@web/core/utils/strings");const{Component,useState,useEffect}=require("@odoo/owl");const{getCurrency}=require("@web/core/currency");const MonetaryField=__exports.MonetaryField=class MonetaryField extends Component{static template="web.MonetaryField";static props={...standardFieldProps,currencyField:{type:String,optional:true},inputType:{type:String,optional:true},useFieldDigits:{type:Boolean,optional:true},hideSymbol:{type:Boolean,optional:true},placeholder:{type:String,optional:true},};static defaultProps={hideSymbol:false,inputType:"text",};setup(){this.inputRef=useInputField(this.inputOptions);this.state=useState({value:undefined});this.nbsp=nbsp;useNumpadDecimal();useEffect(()=>{if(this.inputRef?.el){this.state.value=this.inputRef.el.value;}});}
get inputOptions(){return{getValue:()=>this.formattedValue,refName:"numpadDecimal",parse:parseMonetary,};}
get currencyId(){const currencyField=this.props.currencyField||this.props.record.fields[this.props.name].currency_field||"currency_id";const currency=this.props.record.data[currencyField];return currency&&currency[0];}
get currency(){if(!isNaN(this.currencyId)){return getCurrency(this.currencyId)||null;}
return null;}
get currencySymbol(){return this.currency?this.currency.symbol:"";}
get currencyDigits(){if(this.props.useFieldDigits){return this.props.record.fields[this.props.name].digits;}
if(!this.currency){return null;}
return getCurrency(this.currencyId).digits;}
get value(){return this.props.record.data[this.props.name];}
get formattedValue(){if(this.props.inputType==="number"&&!this.props.readonly&&this.value){return this.value;}
return formatMonetary(this.value,{digits:this.currencyDigits,currencyId:this.currencyId,noSymbol:!this.props.readonly||this.props.hideSymbol,});}
onInput(ev){this.state.value=ev.target.value;}}
const monetaryField=__exports.monetaryField={component:MonetaryField,supportedOptions:[{label:_t("Hide symbol"),name:"no_symbol",type:"boolean",},{label:_t("Currency"),name:"currency_field",type:"field",availableTypes:["many2one"],},],supportedTypes:["monetary","float"],displayName:_t("Monetary"),extractProps:({attrs,options})=>({currencyField:options.currency_field,inputType:attrs.type,useFieldDigits:options.field_digits,hideSymbol:options.no_symbol,placeholder:attrs.placeholder,}),};registry.category("fields").add("monetary",monetaryField);return __exports;});;

/* /web/static/src/views/fields/numpad_decimal_hook.js */
odoo.define('@web/views/fields/numpad_decimal_hook',['@web/core/l10n/localization','@web/core/browser/feature_detection','@odoo/owl'],function(require){'use strict';let __exports={};const{localization}=require("@web/core/l10n/localization");const{isIOS}=require("@web/core/browser/feature_detection");const{useRef,useEffect}=require("@odoo/owl");function onKeydown(ev){const decimalPoint=localization.decimalPoint;if(!([".",","].includes(ev.key)&&ev.code==="NumpadDecimal")||ev.key===decimalPoint||ev.target.type==="number"){return;}
ev.preventDefault();ev.target.setRangeText(decimalPoint,ev.target.selectionStart,ev.target.selectionEnd,"end");}
function onFocus(ev){ev.target.select();}
__exports.useNumpadDecimal=useNumpadDecimal;function useNumpadDecimal(){const ref=useRef("numpadDecimal");const isIOSDevice=isIOS();useEffect(()=>{let inputs=[];const el=ref.el;if(el){inputs=el.nodeName==="INPUT"?[el]:el.querySelectorAll("input");inputs.forEach((input)=>input.addEventListener("keydown",onKeydown));inputs.forEach((input)=>input.addEventListener("focus",onFocus));if(isIOSDevice){inputs.forEach((input)=>input.removeAttribute("inputmode"));}}
return()=>{inputs.forEach((input)=>input.removeEventListener("keydown",onKeydown));inputs.forEach((input)=>input.removeEventListener("focus",onFocus));};});}
return __exports;});;

/* /web/static/src/views/fields/pdf_viewer/pdf_viewer_field.js */
odoo.define('@web/views/fields/pdf_viewer/pdf_viewer_field',['@web/core/l10n/translation','@web/core/registry','@web/core/utils/hooks','@web/core/utils/urls','@web/views/fields/standard_field_props','@web/views/fields/file_handler','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{url}=require("@web/core/utils/urls");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{FileUploader}=require("@web/views/fields/file_handler");const{Component,onWillUpdateProps,useState}=require("@odoo/owl");const PdfViewerField=__exports.PdfViewerField=class PdfViewerField extends Component{static template="web.PdfViewerField";static components={FileUploader,};static props={...standardFieldProps,};setup(){this.notification=useService("notification");this.state=useState({isValid:true,objectUrl:"",});onWillUpdateProps((nextProps)=>{if(nextProps.readonly){this.state.objectUrl="";}});}
get url(){if(!this.state.isValid||!this.props.record.data[this.props.name]){return null;}
const page=this.props.record.data[`${this.props.name}_page`]||1;const file=encodeURIComponent(this.state.objectUrl||url("/web/content",{model:this.props.record.resModel,field:this.props.name,id:this.props.record.resId,}));return`/web/static/lib/pdfjs/web/viewer.html?file=${file}#page=${page}`;}
update({data}){const changes={[this.props.name]:data||false};return this.props.record.update(changes);}
onFileRemove(){this.state.isValid=true;this.update({});}
onFileUploaded({data,objectUrl}){this.state.isValid=true;this.state.objectUrl=objectUrl;this.update({data});}
onLoadFailed(){this.state.isValid=false;this.notification.add(_t("Could not display the selected pdf"),{type:"danger",});}}
const pdfViewerField=__exports.pdfViewerField={component:PdfViewerField,displayName:_t("PDF Viewer"),supportedOptions:[{label:_t("Preview image"),name:"preview_image",type:"field",availableTypes:["binary"],},],supportedTypes:["binary"],};registry.category("fields").add("pdf_viewer",pdfViewerField);return __exports;});;

/* /web/static/src/views/fields/percent_pie/percent_pie_field.js */
odoo.define('@web/views/fields/percent_pie/percent_pie_field',['@web/core/registry','@web/core/l10n/translation','@web/views/fields/formatters','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{_t}=require("@web/core/l10n/translation");const{formatFloat}=require("@web/views/fields/formatters");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const PercentPieField=__exports.PercentPieField=class PercentPieField extends Component{static template="web.PercentPieField";static props={...standardFieldProps,string:{type:String,optional:true},};get formattedValue(){return formatFloat(this.props.record.data[this.props.name],{trailingZeros:false,});}}
const percentPieField=__exports.percentPieField={component:PercentPieField,displayName:_t("PercentPie"),supportedTypes:["float","integer"],additionalClasses:["o_field_percent_pie"],extractProps:({string})=>({string}),};registry.category("fields").add("percentpie",percentPieField);return __exports;});;

/* /web/static/src/views/fields/percentage/percentage_field.js */
odoo.define('@web/views/fields/percentage/percentage_field',['@web/core/registry','@web/core/l10n/translation','@web/views/fields/formatters','@web/views/fields/parsers','@web/views/fields/input_field_hook','@web/views/fields/numpad_decimal_hook','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{_t}=require("@web/core/l10n/translation");const{formatPercentage}=require("@web/views/fields/formatters");const{parsePercentage}=require("@web/views/fields/parsers");const{useInputField}=require("@web/views/fields/input_field_hook");const{useNumpadDecimal}=require("@web/views/fields/numpad_decimal_hook");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const PercentageField=__exports.PercentageField=class PercentageField extends Component{static template="web.PercentageField";static props={...standardFieldProps,digits:{type:Array,optional:true},placeholder:{type:String,optional:true},};setup(){useInputField({getValue:()=>formatPercentage(this.props.record.data[this.props.name],{digits:this.props.digits,noSymbol:true,field:this.props.record.fields[this.props.name],}),refName:"numpadDecimal",parse:(v)=>parsePercentage(v),});useNumpadDecimal();}
get formattedValue(){return formatPercentage(this.props.record.data[this.props.name],{digits:this.props.digits,field:this.props.record.fields[this.props.name],});}}
const percentageField=__exports.percentageField={component:PercentageField,displayName:_t("Percentage"),supportedTypes:["integer","float"],extractProps:({attrs,options})=>{let digits;if(attrs.digits){digits=JSON.parse(attrs.digits);}else if(options.digits){digits=options.digits;}
return{digits,placeholder:attrs.placeholder,};},};registry.category("fields").add("percentage",percentageField);return __exports;});;

/* /web/static/src/views/fields/phone/phone_field.js */
odoo.define('@web/views/fields/phone/phone_field',['@web/core/registry','@web/core/l10n/translation','@web/views/fields/input_field_hook','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{_t}=require("@web/core/l10n/translation");const{useInputField}=require("@web/views/fields/input_field_hook");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const PhoneField=__exports.PhoneField=class PhoneField extends Component{static template="web.PhoneField";static props={...standardFieldProps,placeholder:{type:String,optional:true},};setup(){useInputField({getValue:()=>this.props.record.data[this.props.name]||""});}
get phoneHref(){return"tel:"+this.props.record.data[this.props.name].replace(/\s+/g,"");}}
const phoneField=__exports.phoneField={component:PhoneField,displayName:_t("Phone"),supportedTypes:["char"],extractProps:({attrs})=>({placeholder:attrs.placeholder,}),};registry.category("fields").add("phone",phoneField);class FormPhoneField extends PhoneField{static template="web.FormPhoneField";}
const formPhoneField=__exports.formPhoneField={...phoneField,component:FormPhoneField,};registry.category("fields").add("form.phone",formPhoneField);return __exports;});;

/* /web/static/src/views/fields/priority/priority_field.js */
odoo.define('@web/views/fields/priority/priority_field',['@web/core/commands/command_hook','@web/core/registry','@web/core/l10n/translation','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{useCommand}=require("@web/core/commands/command_hook");const{registry}=require("@web/core/registry");const{_t}=require("@web/core/l10n/translation");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component,useState}=require("@odoo/owl");const PriorityField=__exports.PriorityField=class PriorityField extends Component{static template="web.PriorityField";static props={...standardFieldProps,withCommand:{type:Boolean,optional:true},autosave:{type:Boolean,optional:true},};setup(){this.state=useState({index:-1,});if(this.props.withCommand){for(const command of this.commands){useCommand(...command);}}}
get commands(){const commandName=_t("Set priority...");return[[commandName,()=>{return{placeholder:commandName,providers:[{provide:()=>this.options.map((value)=>({name:value[1],action:()=>{this.updateRecord(value[0]);},})),},],};},{category:"smart_action",hotkey:"alt+r"},],];}
get tooltipLabel(){return this.props.record.fields[this.props.name].string;}
get options(){return Array.from(this.props.record.fields[this.props.name].selection);}
get index(){return this.state.index>-1?this.state.index:this.options.findIndex((o)=>o[0]===this.props.record.data[this.props.name]);}
getTooltip(value){return this.tooltipLabel&&this.tooltipLabel!==value?`${this.tooltipLabel}: ${value}`:value;}
onStarClicked(value){if(this.props.record.data[this.props.name]===value){this.state.index=-1;this.updateRecord(this.options[0][0]);}else{this.updateRecord(value);}}
async updateRecord(value){await this.props.record.update({[this.props.name]:value},{save:this.props.autosave});}}
const priorityField=__exports.priorityField={component:PriorityField,displayName:_t("Priority"),supportedOptions:[{label:_t("Autosave"),name:"autosave",type:"boolean",default:true,help:_t("If checked, the record will be saved immediately when the field is modified."),},],supportedTypes:["selection"],extractProps({options,viewType},dynamicInfo){return{withCommand:viewType==="form",readonly:dynamicInfo.readonly,autosave:"autosave"in options?!!options.autosave:true,};},};registry.category("fields").add("priority",priorityField);return __exports;});;

/* /web/static/src/views/fields/progress_bar/kanban_progress_bar_field.js */
odoo.define('@web/views/fields/progress_bar/kanban_progress_bar_field',['@web/core/registry','@web/views/fields/progress_bar/progress_bar_field'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{progressBarField,ProgressBarField}=require("@web/views/fields/progress_bar/progress_bar_field");const KanbanProgressBarField=__exports.KanbanProgressBarField=class KanbanProgressBarField extends ProgressBarField{get isEditable(){return this.props.isEditable;}}
const kanbanProgressBarField=__exports.kanbanProgressBarField={...progressBarField,component:KanbanProgressBarField,};registry.category("fields").add("kanban.progressbar",kanbanProgressBarField);return __exports;});;

/* /web/static/src/views/fields/progress_bar/progress_bar_field.js */
odoo.define('@web/views/fields/progress_bar/progress_bar_field',['@web/core/l10n/translation','@web/core/registry','@web/views/fields/numpad_decimal_hook','@web/views/fields/parsers','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{useNumpadDecimal}=require("@web/views/fields/numpad_decimal_hook");const{parseFloat}=require("@web/views/fields/parsers");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component,useRef,useState}=require("@odoo/owl");const formatters=registry.category("formatters");const ProgressBarField=__exports.ProgressBarField=class ProgressBarField extends Component{static template="web.ProgressBarField";static props={...standardFieldProps,maxValueField:{type:[String,Number],optional:true},currentValueField:{type:String,optional:true},isEditable:{type:Boolean,optional:true},isCurrentValueEditable:{type:Boolean,optional:true},isMaxValueEditable:{type:Boolean,optional:true},title:{type:String,optional:true},overflowClass:{type:String,optional:true},};setup(){useNumpadDecimal();this.root=useRef("numpadDecimal");this.maxValueRef=useRef("maxValue");this.currentValueRef=useRef("currentValue");const{currentValueField,maxValueField,name}=this.props;this.currentValueField=currentValueField?currentValueField:name;if(maxValueField){this.maxValueField=maxValueField;}
this.state=useState({isEditing:false,});}
get isEditable(){return this.props.isEditable&&!this.props.readonly;}
get isPercentage(){return!this.props.maxValueField||!isNaN(this.props.maxValueField);}
get currentValue(){return this.props.record.data[this.currentValueField]||0;}
get maxValue(){return this.props.record.data[this.maxValueField]||100;}
get progressBarColorClass(){return this.currentValue>this.maxValue?this.props.overflowClass:"bg-primary";}
formatCurrentValue(humanReadable=!this.state.isEditing){const formatter=formatters.get(Number.isInteger(this.currentValue)?"integer":"float");return formatter(this.currentValue,{humanReadable});}
formatMaxValue(humanReadable=!this.state.isEditing){const formatter=formatters.get(Number.isInteger(this.maxValue)?"integer":"float");return formatter(this.maxValue,{humanReadable});}
onValueChange(value,fieldName){let parsedValue;try{parsedValue=parseFloat(value);}catch{this.props.record.setInvalidField(this.props.name);return;}
if(this.props.record.fields[fieldName].type==="integer"){parsedValue=Math.floor(parsedValue);}
this.props.record.update({[fieldName]:parsedValue},{save:this.props.readonly});}
onCurrentValueChange(ev){this.onValueChange(ev.target.value,this.currentValueField);}
onMaxValueChange(ev){this.onValueChange(ev.target.value,this.maxValueField);}
onInputBlur(){if(document.activeElement!==this.maxValueRef.el&&document.activeElement!==this.currentValueRef.el){this.state.isEditing=false;}}
onInputFocus(){this.state.isEditing=true;}}
const progressBarField=__exports.progressBarField={component:ProgressBarField,displayName:_t("Progress Bar"),supportedOptions:[{label:_t("Can edit value"),name:"editable",type:"boolean",},{label:_t("Can edit max value"),name:"edit_max_value",type:"boolean",},{label:_t("Current value field"),name:"current_value",type:"field",availableTypes:["integer","float"],help:_t("Use to override the display value (e.g. if your progress bar is a computed percentage but you want to display the actual field value instead)."),},{label:_t("Max value field"),name:"max_value",type:"field",availableTypes:["integer","float"],help:_t("Field that holds the maximum value of the progress bar. If set, will be displayed next to the progress bar (e.g. 10 / 200)."),},{label:_t("Overflow style"),name:"overflow_class",type:"string",availableTypes:["integer","float"],help:_t("Bootstrap classname to customize the style of the progress bar when the maximum value is exceeded"),default:"bg-secondary",},],supportedTypes:["integer","float"],extractProps:({attrs,options})=>({maxValueField:options.max_value,currentValueField:options.current_value,isEditable:!options.readonly&&options.editable,isCurrentValueEditable:options.editable&&!options.edit_max_value,isMaxValueEditable:options.editable&&options.edit_max_value,title:attrs.title,overflowClass:options.overflow_class||"bg-secondary",}),};registry.category("fields").add("progressbar",progressBarField);return __exports;});;

/* /web/static/src/views/fields/properties/card_properties_field.js */
odoo.define('@web/views/fields/properties/card_properties_field',['@web/core/registry','@web/views/fields/properties/properties_field'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{propertiesField,PropertiesField}=require("@web/views/fields/properties/properties_field");const CardPropertiesField=__exports.CardPropertiesField=class CardPropertiesField extends PropertiesField{static template="web.CardPropertiesField";async _checkDefinitionAccess(){this.state.canChangeDefinition=false;}}
const cardPropertiesField=__exports.cardPropertiesField={...propertiesField,component:CardPropertiesField,};registry.category("fields").add("calendar.properties",cardPropertiesField);registry.category("fields").add("kanban.properties",cardPropertiesField);registry.category("fields").add("hierarchy.properties",cardPropertiesField);return __exports;});;

/* /web/static/src/views/fields/properties/properties_field.js */
odoo.define('@web/views/fields/properties/properties_field',['@web/core/confirmation_dialog/confirmation_dialog','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/core/l10n/translation','@web/core/popover/popover_hook','@web/core/position/utils','@web/core/registry','@web/core/user','@web/core/utils/hooks','@web/core/utils/objects','@web/core/utils/sortable_owl','@web/core/utils/strings','@web/model/relational_model/utils','@web/views/utils','@web/views/fields/standard_field_props','@web/views/fields/properties/property_definition','@web/views/fields/properties/property_value','@odoo/owl'],function(require){'use strict';let __exports={};const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{_t}=require("@web/core/l10n/translation");const{usePopover}=require("@web/core/popover/popover_hook");const{reposition}=require("@web/core/position/utils");const{registry}=require("@web/core/registry");const{user}=require("@web/core/user");const{useBus,useService}=require("@web/core/utils/hooks");const{pick}=require("@web/core/utils/objects");const{useSortable}=require("@web/core/utils/sortable_owl");const{exprToBoolean}=require("@web/core/utils/strings");const{useRecordObserver}=require("@web/model/relational_model/utils");const{uuid}=require("@web/views/utils");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{PropertyDefinition}=require("@web/views/fields/properties/property_definition");const{PropertyValue}=require("@web/views/fields/properties/property_value");const{Component,onWillStart,useEffect,useRef,useState}=require("@odoo/owl");const PropertiesField=__exports.PropertiesField=class PropertiesField extends Component{static template="web.PropertiesField";static components={Dropdown,DropdownItem,PropertyDefinition,PropertyValue,};static props={...standardFieldProps,context:{type:Object,optional:true},columns:{type:Number,optional:true,validate:(columns)=>[1,2].includes(columns),},showAddButton:{type:Boolean,optional:true},};setup(){this.notification=useService("notification");this.orm=useService("orm");this.dialogService=useService("dialog");this.popover=usePopover(PropertyDefinition,{closeOnClickAway:this.checkPopoverClose,popoverClass:"o_property_field_popover",position:"top",onClose:()=>this.onCloseCurrentPopover?.(),fixedPosition:true,arrow:false,});this.propertiesRef=useRef("properties");let currentResId;useRecordObserver((record)=>{if(currentResId!==record.resId){currentResId=record.resId;this._saveInitialPropertiesValues();}});const field=this.props.record.fields[this.props.name];this.definitionRecordField=field.definition_record;this.state=useState({canChangeDefinition:true,movedPropertyName:null,showAddButton:this.props.showAddButton,unfoldedSeparators:this._getUnfoldedSeparators(),});if(this.env.config?.viewType==="form"){useBus(this.env.model.bus,"PROPERTY_FIELD:ADD_PROPERTY_VALUE",()=>{this.onPropertyCreate();});}
onWillStart(async()=>{await this._checkDefinitionAccess();});useEffect(()=>{if(this.openPropertyDefinition){const propertyName=this.openPropertyDefinition;const labels=this.propertiesRef.el.querySelectorAll(`.o_property_field[property-name="${propertyName}"] .o_field_property_open_popover`);this.openPropertyDefinition=null;const lastLabel=labels[labels.length-1];this._openPropertyDefinition(lastLabel,propertyName,true);}},()=>[this.openPropertyDefinition]);useEffect(()=>this._movePopoverIfNeeded());useSortable({enable:()=>!this.props.readonly&&this.state.canChangeDefinition,ref:this.propertiesRef,handle:".o_field_property_label .oi-draggable",elements:this.renderedColumnsCount===1?"*:is(.o_property_field, .o_field_property_group_label)":".o_property_field",groups:".o_property_group",connectGroups:true,cursor:"grabbing",onDragStart:({element,group})=>{this.propertiesRef.el.classList.add("o_property_dragging");element.classList.add("o_property_drag_item");group.classList.add("o_property_drag_group");document.activeElement.blur();},onDrop:async({parent,element,next,previous})=>{const from=element.getAttribute("property-name");let to=previous&&previous.getAttribute("property-name");let moveBefore=false;if(!to&&next){if(next.classList.contains("o_field_property_group_label")){next=next.closest(".o_property_group");}
to=next.getAttribute("property-name");moveBefore=!!to;}
if(!to){const groupName=parent.getAttribute("property-name");const group=this.groupedPropertiesList.find((group)=>group.name===groupName);if(!group){to=null;moveBefore=false;}else{to=group.elements.length?group.elements.at(-1).name:groupName;}}
await this.onPropertyMoveTo(from,to,moveBefore);},onDragEnd:({element})=>{this.propertiesRef.el.classList.remove("o_property_dragging");element.classList.remove("o_property_drag_item");const targetGroup=this.propertiesRef.el.querySelector(".o_property_drag_group");if(targetGroup){targetGroup.classList.remove("o_property_drag_group");}},onGroupEnter:({group})=>{group.classList.add("o_property_drag_group");this._unfoldSeparators([group.getAttribute("property-name")],true);},onGroupLeave:({group})=>{group.classList.remove("o_property_drag_group");},});useSortable({enable:()=>!this.props.readonly&&this.state.canChangeDefinition,ref:this.propertiesRef,handle:".o_field_property_group_label .oi-draggable",elements:".o_property_group:not([property-name=''])",cursor:"grabbing",onDragStart:({element})=>{this.propertiesRef.el.classList.add("o_property_dragging");element.classList.add("o_property_drag_item");document.activeElement.blur();},onDrop:async({element,previous})=>{const from=element.getAttribute("property-name");const to=previous&&previous.getAttribute("property-name");await this.onGroupMoveTo(from,to);},onDragEnd:({element})=>{this.propertiesRef.el.classList.remove("o_property_dragging");element.classList.remove("o_property_drag_item");},});}
get renderedColumnsCount(){return this.env.isSmall?1:this.props.columns;}
get propertiesList(){const propertiesValues=this.props.record.data[this.props.name]||[];return propertiesValues.filter((definition)=>!definition.definition_deleted);}
get groupedPropertiesList(){const propertiesList=this.propertiesList;const groupedProperties=propertiesList[0]?.type!=="separator"?[{title:null,name:null,elements:[],invisibleLabel:true}]:[];propertiesList.forEach((property)=>{if(property.type==="separator"){groupedProperties.push({title:property.string,name:property.name,elements:[],});}else{groupedProperties.at(-1).elements.push(property);}});if(groupedProperties.length===1){const invisibleLabel=propertiesList[0]?.type!=="separator";groupedProperties[0].elements=[];groupedProperties[0].invisibleLabel=invisibleLabel;for(let col=1;col<this.renderedColumnsCount;++col){groupedProperties.push({title:null,name:groupedProperties[0].name,columnSeparator:true,elements:[],invisibleLabel,});}
const properties=propertiesList.filter((property)=>property.type!=="separator");properties.forEach((property,index)=>{const columnIndex=Math.floor((index*this.renderedColumnsCount)/properties.length);groupedProperties[columnIndex].elements.push(property);});}
return groupedProperties;}
get definitionRecordId(){return this.props.record.data[this.definitionRecordField][0];}
get definitionRecordModel(){return this.props.record.fields[this.definitionRecordField].relation;}
checkPopoverClose(target){if(target.closest(".o_datetime_picker")){return false;}
if(target.closest(".modal")){return false;}
if(target.closest(".o_tag_popover")){return false;}
if(target.closest(".o_model_field_selector_popover")){return false;}
return true;}
generateUniqueDomID(){return`property_${uuid()}`;}
generatePropertyName(){return uuid();}
async onPropertyMove(propertyName,direction){const propertiesValues=this.propertiesList||[];const propertyIndex=propertiesValues.findIndex((property)=>property.name===propertyName);const targetIndex=propertyIndex+(direction==="down"?1:-1);if(targetIndex<0||targetIndex>=propertiesValues.length){this.notification.add(direction==="down"?_t("This field is already last"):_t("This field is already first"),{type:"warning"});return;}
this.state.movedPropertyName=propertyName;const prop=propertiesValues[targetIndex];propertiesValues[targetIndex]=propertiesValues[propertyIndex];propertiesValues[propertyIndex]=prop;propertiesValues[propertyIndex].definition_changed=true;this._unfoldPropertyGroup(targetIndex,propertiesValues);await this.props.record.update({[this.props.name]:propertiesValues});this.movePopoverToProperty=propertyName;}
onPropertyMoveTo(propertyName,toPropertyName,moveBefore){const propertiesValues=this.propertiesList||[];let fromIndex=propertiesValues.findIndex((property)=>property.name===propertyName);let toIndex=propertiesValues.findIndex((property)=>property.name===toPropertyName);const columnSize=Math.ceil(propertiesValues.length/this.renderedColumnsCount);if(this.renderedColumnsCount>1&&!propertiesValues.some((p,index)=>index!==0&&p.type==="separator")&&Math.floor(fromIndex/columnSize)!==Math.floor(toIndex/columnSize)){const newSeparators=[];for(let col=0;col<this.renderedColumnsCount;++col){const separatorIndex=columnSize*col+newSeparators.length;if(propertiesValues[separatorIndex]?.type==="separator"){newSeparators.push(propertiesValues[separatorIndex].name);continue;}
const newSeparator={type:"separator",string:_t("Group %s",col+1),name:this.generatePropertyName(),};newSeparators.push(newSeparator.name);propertiesValues.splice(separatorIndex,0,newSeparator);}
this._unfoldSeparators(newSeparators,true);toPropertyName=toPropertyName||propertiesValues.at(-1).name;fromIndex=propertiesValues.findIndex((property)=>property.name===propertyName);toIndex=propertiesValues.findIndex((property)=>property.name===toPropertyName);}
if(moveBefore){toIndex--;}
if(toIndex<fromIndex){toIndex++;}
propertiesValues.splice(toIndex,0,propertiesValues.splice(fromIndex,1)[0]);propertiesValues[0].definition_changed=true;this.props.record.update({[this.props.name]:propertiesValues});}
onGroupMoveTo(propertyName,toPropertyName){const propertiesValues=this.propertiesList||[];const fromIndex=propertiesValues.findIndex((property)=>property.name===propertyName);const toIndex=propertiesValues.findIndex((property)=>property.name===toPropertyName);if(propertiesValues[fromIndex].type!=="separator"||(toIndex>=0&&propertiesValues[toIndex].type!=="separator")){throw new Error("Something went wrong");}
const getNextSeparatorIndex=(startIndex)=>{const nextSeparatorIndex=propertiesValues.findIndex((property,index)=>property.type==="separator"&&index>startIndex);return nextSeparatorIndex<0?propertiesValues.length:nextSeparatorIndex;};const groupSize=getNextSeparatorIndex(fromIndex)-fromIndex;let targetIndex=getNextSeparatorIndex(toIndex);if(targetIndex>fromIndex){targetIndex-=groupSize;}
propertiesValues.splice(targetIndex,0,...propertiesValues.splice(fromIndex,groupSize));propertiesValues[0].definition_changed=true;this.props.record.update({[this.props.name]:propertiesValues});}
onPropertyValueChange(propertyName,propertyValue){const propertiesValues=this.propertiesList;propertiesValues.find((property)=>property.name===propertyName).value=propertyValue;this.props.record.update({[this.props.name]:propertiesValues});}
async onPropertyEdit(event,propertyName){event.stopPropagation();event.preventDefault();if(!(await this.checkDefinitionWriteAccess())){this.notification.add(_t("You need edit access on the parent document to update these property fields"),{type:"warning"});return;}
if(event.target.classList.contains("disabled")){return;}
event.target.classList.add("disabled");this._openPropertyDefinition(event.target,propertyName,false);}
async onPropertyDefinitionChange(propertyDefinition){propertyDefinition["definition_changed"]=true;if(propertyDefinition.type==="separator"){propertyDefinition=pick(propertyDefinition,"name","string","definition_changed","type");}
const propertiesValues=this.propertiesList;const propertyIndex=this._getPropertyIndex(propertyDefinition.name);const oldType=propertiesValues[propertyIndex].type;const newType=propertyDefinition.type;this._regeneratePropertyName(propertyDefinition);propertiesValues[propertyIndex]=propertyDefinition;await this.props.record.update({[this.props.name]:propertiesValues});if(newType==="separator"&&oldType!=="separator"){this._unfoldSeparators([propertyDefinition.name],true);this.movePopoverToProperty=propertyDefinition.name;}else if(oldType==="separator"&&newType!=="separator"){const previousSeperator=propertiesValues.findLast((property,index)=>index<propertyIndex&&property.type==="separator");if(previousSeperator){this._unfoldSeparators([previousSeperator.name],true);}
this.movePopoverToProperty=propertyDefinition.name;}}
onPropertyDelete(propertyName){this.popover.close();const dialogProps={title:_t("Delete Property Field"),body:_t('Are you sure you want to delete this property field? It will be removed for everyone using the "%(parentName)s" %(parentFieldLabel)s.',{parentName:this.parentName,parentFieldLabel:this.parentString}),confirmLabel:_t("Delete"),confirm:()=>{const propertiesDefinitions=this.propertiesList;propertiesDefinitions.find((property)=>property.name===propertyName).definition_deleted=true;this.props.record.update({[this.props.name]:propertiesDefinitions});},cancel:()=>{},};this.dialogService.add(ConfirmationDialog,dialogProps);}
async onPropertyCreate(){if(!this.state.canChangeDefinition||!(await this.checkDefinitionWriteAccess())){this.notification.add(_t("You need edit access on the parent document to update these property fields"),{type:"warning"});return;}
const propertiesDefinitions=this.propertiesList||[];if(propertiesDefinitions.length&&propertiesDefinitions.some((prop)=>prop.type!=="separator"&&(!prop.string||!prop.string.length))){this.propertiesRef.el.closest(".o_field_properties").classList.add("o_field_invalid");this.notification.add(_t("Please complete your properties before adding a new one"),{type:"warning",});return;}
this._unfoldPropertyGroup(propertiesDefinitions.length-1,propertiesDefinitions);this.propertiesRef.el.closest(".o_field_properties").classList.remove("o_field_invalid");const newName=this.generatePropertyName();propertiesDefinitions.push({name:newName,string:_t("Property %s",propertiesDefinitions.length+1),type:"char",definition_changed:true,});this.openPropertyDefinition=newName;this.state.showAddButton=true;this.props.record.update({[this.props.name]:propertiesDefinitions});}
onSeparatorClick(propertyName){if(propertyName){this._unfoldSeparators([propertyName]);}}
async checkDefinitionWriteAccess(){if(!this.definitionRecordId||!this.definitionRecordModel){return false;}
return await user.checkAccessRight(this.definitionRecordModel,"write",this.definitionRecordId);}
onTagsChange(propertyName,newTags,newValue=null){const propertyDefinition=this.propertiesList.find((property)=>property.name===propertyName);propertyDefinition.tags=newTags;if(newValue!==null){propertyDefinition.value=newValue;}
propertyDefinition.definition_changed=true;this.onPropertyDefinitionChange(propertyDefinition);}
_getSeparatorFoldKey(){const definitionRecordId=this.props.record.data[this.definitionRecordField][0];const definitionRecordModel=this.props.record.fields[this.definitionRecordField].relation;return`properties.fold,${definitionRecordModel},${definitionRecordId}`;}
_getUnfoldedSeparators(){const key=this._getSeparatorFoldKey();const unfoldedSeparators=JSON.parse(window.localStorage.getItem(key))||[];const allPropertiesNames=this.propertiesList.map((property)=>property.name);return unfoldedSeparators.filter((name)=>allPropertiesNames.includes(name));}
_unfoldSeparators(separatorNames,forceUnfold){let unfoldedSeparators=this._getUnfoldedSeparators();for(const separatorName of separatorNames){if(unfoldedSeparators.includes(separatorName)){if(!forceUnfold){unfoldedSeparators=unfoldedSeparators.filter((name)=>name!==separatorName);}}else{unfoldedSeparators.push(separatorName);}}
const key=this._getSeparatorFoldKey();window.localStorage.setItem(key,JSON.stringify(unfoldedSeparators));this.state.unfoldedSeparators=unfoldedSeparators;}
_movePopoverIfNeeded(){if(!this.movePopoverToProperty){return;}
const propertyName=this.movePopoverToProperty;this.movePopoverToProperty=null;const popover=document.querySelector(".o_field_property_definition").closest(".o_popover");const target=document.querySelector(`*[property-name="${propertyName}"] .o_field_property_open_popover`);reposition(popover,target,{position:"top",margin:10});}
async _checkDefinitionAccess(){this.parentName=this.props.record.data[this.definitionRecordField][1];this.parentString=this.props.record.fields[this.definitionRecordField].string;if(!this.definitionRecordModel){this.state.canChangeDefinition=false;return;}
this.state.canChangeDefinition=await user.checkAccessRight(this.definitionRecordModel,"write");}
_regeneratePropertyName(propertyDefinition){const initialValues=this.initialValues[propertyDefinition.name];if(initialValues&&propertyDefinition.type===initialValues.type&&propertyDefinition.comodel===initialValues.comodel){propertyDefinition.name=initialValues.name;}else if(initialValues&&initialValues.name===propertyDefinition.name){const newName=this.generatePropertyName();this.initialValues[newName]=initialValues;propertyDefinition.name=newName;}}
_getPropertyIndex(propertyName){const initialName=this.initialValues[propertyName]?.name||propertyName;return this.propertiesList.findIndex((property)=>[propertyName,initialName].includes(property.name));}
_saveInitialPropertiesValues(){this.initialValues={};for(const propertiesValues of this.props.record.data[this.props.name]||[]){this.initialValues[propertiesValues.name]={name:propertiesValues.name,type:propertiesValues.type,comodel:propertiesValues.comodel,};}}
_openPropertyDefinition(target,propertyName,isNewlyCreated=false){const propertiesList=this.propertiesList;const propertyIndex=propertiesList.findIndex((property)=>property.name===propertyName);const currentName=(propertyName)=>{const propertiesList=this.propertiesList;for(const[newName,initialValue]of Object.entries(this.initialValues)){if(initialValue.name===propertyName){const prop=propertiesList.find((prop)=>prop.name===newName);if(prop){return newName;}}}
return propertyName;};this.onCloseCurrentPopover=()=>{this.onCloseCurrentPopover=null;this.state.movedPropertyName=null;target.classList.remove("disabled");if(isNewlyCreated){this._setDefaultPropertyValue(currentName(propertyName));}};this.popover.open(target,{readonly:this.props.readonly||!this.state.canChangeDefinition,canChangeDefinition:this.state.canChangeDefinition,checkDefinitionWriteAccess:()=>this.checkDefinitionWriteAccess(),propertyDefinition:this.propertiesList.find((property)=>property.name===currentName(propertyName)),context:this.props.context,onChange:this.onPropertyDefinitionChange.bind(this),onDelete:()=>this.onPropertyDelete(currentName(propertyName)),onPropertyMove:(direction)=>this.onPropertyMove(currentName(propertyName),direction),isNewlyCreated:isNewlyCreated,propertyIndex:propertyIndex,propertiesSize:propertiesList.length,});}
_setDefaultPropertyValue(propertyName){const propertiesValues=this.propertiesList;const newProperty=propertiesValues.find((property)=>property.name===propertyName);newProperty.value=newProperty.default;this.props.value=propertiesValues;this.props.record.update({[this.props.name]:propertiesValues});}
_unfoldPropertyGroup(targetIndex,propertiesValues){const separator=propertiesValues.findLast((property,index)=>property.type==="separator"&&index<=targetIndex);if(separator){this._unfoldSeparators([separator.name],true);}}}
const propertiesField=__exports.propertiesField={component:PropertiesField,displayName:_t("Properties"),supportedTypes:["properties"],extractProps({attrs},dynamicInfo){return{context:dynamicInfo.context,columns:parseInt(attrs.columns||"1"),showAddButton:exprToBoolean(attrs.showAddButton),};},};registry.category("fields").add("properties",propertiesField);return __exports;});;

/* /web/static/src/views/fields/properties/property_definition.js */
odoo.define('@web/views/fields/properties/property_definition',['@web/core/l10n/translation','@web/views/fields/properties/property_value','@web/core/checkbox/checkbox','@web/core/domain_selector/domain_selector','@web/core/domain','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/core/model_selector/model_selector','@web/views/fields/relational_utils','@web/core/utils/hooks','@web/views/fields/properties/property_definition_selection','@web/views/fields/properties/property_tags','@web/views/view_dialogs/select_create_dialog','@web/views/utils','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{PropertyValue}=require("@web/views/fields/properties/property_value");const{CheckBox}=require("@web/core/checkbox/checkbox");const{DomainSelector}=require("@web/core/domain_selector/domain_selector");const{Domain}=require("@web/core/domain");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{ModelSelector}=require("@web/core/model_selector/model_selector");const{Many2XAutocomplete}=require("@web/views/fields/relational_utils");const{useService,useOwnedDialogs}=require("@web/core/utils/hooks");const{PropertyDefinitionSelection}=require("@web/views/fields/properties/property_definition_selection");const{PropertyTags}=require("@web/views/fields/properties/property_tags");const{SelectCreateDialog}=require("@web/views/view_dialogs/select_create_dialog");const{uuid}=require("@web/views/utils");const{Component,useState,onWillUpdateProps,useEffect,useRef}=require("@odoo/owl");const PropertyDefinition=__exports.PropertyDefinition=class PropertyDefinition extends Component{static template="web.PropertyDefinition";static components={CheckBox,DomainSelector,Dropdown,DropdownItem,PropertyValue,Many2XAutocomplete,ModelSelector,PropertyDefinitionSelection,PropertyTags,};static props={readonly:{type:Boolean,optional:true},canChangeDefinition:{type:Boolean,optional:true},checkDefinitionWriteAccess:{type:Function,optional:true},propertyDefinition:{optional:true},context:{type:Object},isNewlyCreated:{type:Boolean,optional:true},propertyIndex:{type:Number},propertiesSize:{type:Number},onChange:{type:Function,optional:true},onDelete:{type:Function,optional:true},onPropertyMove:{type:Function,optional:true},close:{type:Function,optional:true},};setup(){this.orm=useService("orm");this.propertyDefinitionRef=useRef("propertyDefinition");this.addDialog=useOwnedDialogs();const defaultDefinition={name:false,string:"",type:"char",default:"",};const propertyDefinition={...defaultDefinition,...this.props.propertyDefinition,};this.state=useState({propertyDefinition:propertyDefinition,typeLabel:this._typeLabel(propertyDefinition.type),resModel:"",resModelDescription:"",matchingRecordsCount:undefined,propertyIndex:this.props.propertyIndex,});this._syncStateWithProps(propertyDefinition);this._domInputIdPrefix=uuid();onWillUpdateProps((newProps)=>this._syncStateWithProps(newProps.value));useEffect((event)=>{if(this.labelFocused){return;}
this.labelFocused=true;const labelInput=this.propertyDefinitionRef.el.querySelectorAll("input")[0];if(labelInput){if(this.props.isNewlyCreated){labelInput.select();}else{labelInput.focus();}}});}
get availablePropertyTypes(){return[["char",_t("Text")],["boolean",_t("Checkbox")],["integer",_t("Integer")],["float",_t("Decimal")],["date",_t("Date")],["datetime",_t("Date & Time")],["selection",_t("Selection")],["tags",_t("Tags")],["many2one",_t("Many2one")],["many2many",_t("Many2many")],["separator",_t("Separator")],];}
get isFirst(){return this.state.propertyIndex===0;}
get isLast(){return this.state.propertyIndex===this.props.propertiesSize-1;}
get propertyTagValues(){return(this.state.propertyDefinition.tags||[]).map((tag)=>tag[0]);}
getUniqueDomID(suffix){return`property_definition_${this._domInputIdPrefix}_${suffix}`;}
onPropertyLabelChange(event){const newString=event.target.value;const propertyDefinition={...this.state.propertyDefinition,string:newString,};this.props.onChange(propertyDefinition);this.state.propertyDefinition=propertyDefinition;}
onPropertyLabelKeypress(event){if(event.key!=="Enter"){return;}
this.props.close();}
onDefaultChange(newDefault){const propertyDefinition={...this.state.propertyDefinition,default:newDefault,};this.props.onChange(propertyDefinition);this.state.propertyDefinition=propertyDefinition;}
onPropertyTypeChange(newType){const propertyDefinition={...this.state.propertyDefinition,type:newType,};if(["integer","float"].includes(newType)){propertyDefinition.value=0;propertyDefinition.default=0;}else{propertyDefinition.value=false;propertyDefinition.default=false;}
delete propertyDefinition.comodel;this.props.onChange(propertyDefinition);this.state.propertyDefinition=propertyDefinition;this.state.resModel="";this.state.resModelDescription="";this.state.typeLabel=this._typeLabel(newType);}
async onModelChange(newModel){const{label,technical}=newModel;const modelChanged=technical!==this.state.resModel;this.state.resModel=technical;this.state.resModelDescription=label;const propertyDefinition={...this.state.propertyDefinition,comodel:technical,default:modelChanged?false:this.state.propertyDefinition.default,value:modelChanged?false:this.state.propertyDefinition.value,domain:modelChanged?false:this.state.propertyDefinition.domain,};this.props.onChange(propertyDefinition);this.state.propertyDefinition=propertyDefinition;await this._updateMatchingRecordsCount();}
async onDomainChange(newDomain){const propertyDefinition={...this.state.propertyDefinition,domain:newDomain,default:false,};this.props.onChange(propertyDefinition);this.state.propertyDefinition=propertyDefinition;await this._updateMatchingRecordsCount();}
onButtonDomainClick(){this.addDialog(SelectCreateDialog,{title:_t("Selected records"),noCreate:true,multiSelect:false,resModel:this.state.propertyDefinition.comodel,domain:new Domain(this.state.propertyDefinition.domain||"[]").toList(),context:this.props.context||{},});}
onPropertyMove(direction){if(direction==="up"){this.state.propertyIndex--;}else{this.state.propertyIndex++;}
this.props.onPropertyMove(direction);}
onSelectionOptionChange(newOptions){const propertyDefinition={...this.state.propertyDefinition,selection:newOptions,};this.props.onChange(propertyDefinition);this.state.propertyDefinition=propertyDefinition;}
onTagsChange(newTags){const propertyDefinition={...this.state.propertyDefinition,tags:newTags,};this.props.onChange(propertyDefinition);this.state.propertyDefinition=propertyDefinition;}
onViewInKanbanChange(newValue){const propertyDefinition={...this.state.propertyDefinition,view_in_cards:newValue,};this.props.onChange(propertyDefinition);this.state.propertyDefinition=propertyDefinition;}
async _syncStateWithProps(propertyDefinition){const newModel=propertyDefinition.comodel;const currentModel=this.state.resModel;this.state.propertyDefinition=propertyDefinition;this.state.resModel=propertyDefinition.comodel;this.state.typeLabel=this._typeLabel(propertyDefinition.type);this.state.resModel=newModel;if(newModel&&newModel!==currentModel){try{const result=await this.orm.call("ir.model","display_name_for",[[newModel]]);if(!result||!result.length){return;}
this.state.resModelDescription=result[0].display_name;}catch{this.state.resModelDescription=_t('You do not have access to the model "%s".',newModel);}
await this._updateMatchingRecordsCount();}else if(!newModel){this.state.resModelDescription="";}}
async _updateMatchingRecordsCount(){if(this.state.resModel&&this.state.resModel.length){const domainList=new Domain(this.state.propertyDefinition.domain||"[]").toList();const result=await this.orm.call(this.state.propertyDefinition.comodel,"search_count",[domainList]);this.state.matchingRecordsCount=result;}else{this.state.matchingRecordsCount=undefined;}}
_typeLabel(propertyType){const allTypes=this.availablePropertyTypes;return allTypes.find((type)=>type[0]===propertyType)[1];}}
return __exports;});;

/* /web/static/src/views/fields/properties/property_definition_selection.js */
odoo.define('@web/views/fields/properties/property_definition_selection',['@web/core/utils/hooks','@web/views/utils','@odoo/owl','@web/core/utils/sortable_owl'],function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{uuid}=require("@web/views/utils");const{Component,useState,useRef,useEffect}=require("@odoo/owl");const{useSortable}=require("@web/core/utils/sortable_owl");const PropertyDefinitionSelection=__exports.PropertyDefinitionSelection=class PropertyDefinitionSelection extends Component{static template="web.PropertyDefinitionSelection";static props={default:{type:String,optional:true},options:{},readonly:{type:Boolean,optional:true},canChangeDefinition:{type:Boolean,optional:true},onOptionsChange:{type:Function,optional:true},onDefaultOptionChange:{type:Function,optional:true},};setup(){this.notification=useService("notification");this.state=useState({newOption:null,});this.propertyDefinitionSelectionRef=useRef("propertyDefinitionSelection");this.addButtonRef=useRef("addButton");useEffect(()=>{if(!this.state.newOption){return;}
const inputs=this.propertyDefinitionSelectionRef.el.querySelectorAll(".o_field_property_selection_option input");if(inputs&&inputs.length&&!inputs[this.state.newOption.index].value){inputs[this.state.newOption.index].focus();}});useSortable({enable:()=>this.props.canChangeDefinition&&!this.props.readonly,ref:this.propertyDefinitionSelectionRef,handle:".o_field_property_selection_drag",elements:".o_field_property_selection_option",cursor:"grabbing",onDrop:async({element,previous})=>{const movedOption=element.getAttribute("option-name");const destinationOption=previous&&previous.getAttribute("option-name");await this.onOptionMoveTo(movedOption,destinationOption);},});}
get options(){return JSON.parse(JSON.stringify(this.props.options||[]));}
get optionsVisible(){const options=this.options||[];const newOption=this.state.newOption;if(newOption){options.splice(newOption.index,0,[newOption.name,""]);}
return options;}
onOptionCreate(index){this.state.newOption={index:index,name:uuid(),};}
onOptionChange(event,optionIndex){const target=event.target;const newLabel=target.value;if(this.options[optionIndex]&&this.options[optionIndex][1]===newLabel){return;}
const options=this.optionsVisible;if(!newLabel||!newLabel.length){options.splice(optionIndex,1);}else{options[optionIndex][1]=newLabel;}
const nonEmptyOptions=options.filter((option)=>option[1]&&option[1].length);this.props.onOptionsChange(nonEmptyOptions);if(this.state.newOption){this.state.newOption=null;}}
onOptionBlur(event,optionIndex){if(event.target.value&&event.target.value.length){return;}else if(this._ignoreBlur){this._ignoreBlur=false;return;}
if(event.relatedTarget===this.addButtonRef.el){event.stopPropagation();event.preventDefault();}else if(optionIndex===this.state.newOption?.index){this.state.newOption=null;}}
onOptionKeyDown(event,optionIndex){if(event.key==="Enter"){const newLabel=event.target.value;if(!newLabel||!newLabel.length){event.stopPropagation();event.preventDefault();return;}
this.onOptionChange(event,optionIndex);this.onOptionCreate(optionIndex+1);}else if(["ArrowUp","ArrowDown"].includes(event.key)){event.stopPropagation();event.preventDefault();if(event.key==="ArrowUp"&&optionIndex>0){const previousInput=event.target.closest(".o_field_property_selection_option").previousElementSibling.querySelector("input");previousInput.focus();}else if(event.key==="ArrowDown"&&optionIndex<this.optionsVisible.length-1){const nextInput=event.target.closest(".o_field_property_selection_option").nextElementSibling.querySelector("input");nextInput.focus();}}}
onOptionSetDefault(optionIndex){if(!this.props.canChangeDefinition){return;}
const newValue=this.optionsVisible[optionIndex][0];this.props.onDefaultOptionChange(newValue!==this.props.default?newValue:false);}
onOptionDelete(optionIndex){const options=this.optionsVisible;options.splice(optionIndex,1);this.props.onOptionsChange(options);}
onOptionMoveTo(movedOption,destinationOption){this._ignoreBlur=true;let options=this.optionsVisible;let destinationOptionIndex=options.findIndex((option)=>option[0]==destinationOption);const movedOptionIndex=options.findIndex((option)=>option[0]==movedOption);if(destinationOptionIndex<movedOptionIndex){destinationOptionIndex++;}
const activeEl=document.activeElement;if(activeEl&&this.propertyDefinitionSelectionRef.el.contains(activeEl)&&activeEl.tagName==="INPUT"){const optionName=activeEl.closest(".o_field_property_selection_option").getAttribute("option-name");const editedOptionIndex=options.findIndex((option)=>option[0]===optionName);options[editedOptionIndex][1]=activeEl.value;}
options.splice(destinationOptionIndex,0,options.splice(movedOptionIndex,1)[0]);if(this.state.newOption){const newOptionIndex=options.findIndex((option)=>option[0]===this.state.newOption.name);if(!options[newOptionIndex][1]?.length){this.state.newOption={...this.state.newOption,index:newOptionIndex,};options=options.filter((option)=>option[0]!==this.state.newOption.name);}else{this.state.newOption=null;}}
this.props.onOptionsChange(options);}}
return __exports;});;

/* /web/static/src/views/fields/properties/property_tags.js */
odoo.define('@web/views/fields/properties/property_tags',['@web/core/autocomplete/autocomplete','@web/core/colorlist/colorlist','@web/core/l10n/translation','@web/core/popover/popover_hook','@web/core/registry','@web/core/utils/hooks','@web/core/tags_list/tags_list','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{AutoComplete}=require("@web/core/autocomplete/autocomplete");const{ColorList}=require("@web/core/colorlist/colorlist");const{_t}=require("@web/core/l10n/translation");const{usePopover}=require("@web/core/popover/popover_hook");const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{TagsList}=require("@web/core/tags_list/tags_list");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");class PropertyTagsColorListPopover extends Component{static template="web.PropertyTagsColorListPopover";static components={ColorList,};static props={colors:Array,tag:Object,switchTagColor:Function,close:Function,};}
const PropertyTagAutoComplete=__exports.PropertyTagAutoComplete=class PropertyTagAutoComplete extends AutoComplete{}
Object.assign(PropertyTagAutoComplete,{timeout:0});const PropertyTags=__exports.PropertyTags=class PropertyTags extends Component{static template="web.PropertyTags";static components={AutoComplete:PropertyTagAutoComplete,TagsList,ColorList,Popover:PropertyTagsColorListPopover,};static props={id:{type:String,optional:true},selectedTags:{},tags:{},deleteAction:{type:String},readonly:{type:Boolean,optional:true},canChangeTags:{type:Boolean,optional:true},checkDefinitionWriteAccess:{type:Function,optional:true},onValueChange:{type:Function,optional:true},onTagsChange:{type:Function,optional:true},};setup(){this.notification=useService("notification");this.popover=usePopover(this.constructor.components.Popover);}
get displayBadge(){return!this.env.config||this.env.config.viewType!=="kanban";}
get tagListItems(){if(!this.props.selectedTags||!this.props.selectedTags.length){return[];}
let value=this.props.tags.filter((tag)=>this.props.selectedTags.indexOf(tag[0])>=0);if(!this.displayBadge){value=value.filter((tag)=>tag[2]);}
const canDeleteTag=!this.props.readonly&&(this.props.canChangeTags||this.props.deleteAction==="value");return value.map((tag)=>{const[tagId,tagLabel,tagColorIndex]=tag;return{id:tagId,text:tagLabel,className:this.props.canChangeTags?"":"pe-none",colorIndex:tagColorIndex||0,onClick:(event)=>this.onTagClick(event,tagId,tagColorIndex),onDelete:canDeleteTag&&(()=>this.onTagDelete(tagId)),};});}
get selectedTags(){return JSON.parse(JSON.stringify(this.props.selectedTags||[]));}
get availableTags(){return JSON.parse(JSON.stringify(this.props.tags||[]));}
get autocompleteSources(){return[{options:(request)=>{const tagsFiltered=this.props.tags.filter((tag)=>(!this.props.selectedTags||this.props.selectedTags.indexOf(tag[0])<0)&&(!request||!request.length||tag[1].toLocaleLowerCase().indexOf(request.toLocaleLowerCase())>=0));if(!tagsFiltered||!tagsFiltered.length){if(!request||!request.length){return[{value:null,label:_t("Start typing..."),classList:"fst-italic",},];}else if(!this.props.canChangeTags){return[{value:null,label:_t("No result"),classList:"fst-italic",},];}
return[{value:{toCreate:true,value:request},label:_t('Create "%s"',request),classList:"o_field_property_dropdown_add",},];}
return tagsFiltered.map((tag)=>{return{value:tag[0],label:tag[1],};});},},];}
onOptionSelected(tagValue){if(!tagValue){return;}
if(tagValue.toCreate){this.onTagCreate(tagValue.value);}else{const selectedTags=this.selectedTags;const newValue=[...selectedTags,tagValue];this.props.onValueChange(newValue);}}
async onTagCreate(newLabel){if(!newLabel||!newLabel.length){return;}
if(!(await this.props.checkDefinitionWriteAccess())){this.notification.add(_t("You need to be able to edit parent first to add property tags"),{type:"warning"});return;}
const newValue=newLabel?newLabel.toLowerCase().replace(" ","_"):"";const existingTag=this.props.tags.find((tag)=>tag[0]===newValue);if(existingTag){this.notification.add(_t("This tag is already available"),{type:"warning",});return;}
let tagColor=this.props.tags&&this.props.tags.length?(this.props.tags[this.props.tags.length-1][2]+1)%ColorList.COLORS.length:parseInt(Math.random()*ColorList.COLORS.length);tagColor=tagColor||1;const newTag=[newValue,newLabel,tagColor];const updatedTags=[...this.availableTags,newTag];const newValues=[...this.props.selectedTags,newTag[0]];this.props.onTagsChange(updatedTags,newValues);}
onTagDelete(deleteTag){if(this.props.deleteAction==="value"){const selectedTags=this.selectedTags;const newValue=selectedTags.filter((tag)=>tag!==deleteTag);this.props.onValueChange(newValue);}else{const availableTags=this.availableTags;this.props.onTagsChange(availableTags.filter((tag)=>tag[0]!==deleteTag));}}
onTagClick(event,tagId,tagColor){if(!this.props.canChangeTags){event.currentTarget.blur();return;}
this.popover.open(event.currentTarget,{colors:[...Array(ColorList.COLORS.length).keys()],tag:{id:tagId,colorIndex:tagColor},switchTagColor:this.onTagColorSwitch.bind(this),});}
onTagColorSwitch(colorIndex,currentTag){const availableTags=this.availableTags;availableTags.find((tag)=>tag[0]===currentTag.id)[2]=colorIndex;this.props.onTagsChange(availableTags);this.popover.close();}}
const PropertyTagsField=__exports.PropertyTagsField=class PropertyTagsField extends Component{static template="web.PropertyTagsField";static components={PropertyTags};static props={...standardFieldProps};get propertyTagsProps(){return{selectedTags:this.props.record.data[this.props.name]||[],tags:this.props.record.fields[this.props.name].tags||[],deleteAction:"value",readonly:this.props.readonly,canChangeTags:false,onValueChange:(value)=>{this.props.record.update({[this.props.name]:value});},};}}
const propertyTagsField=__exports.propertyTagsField={component:PropertyTagsField,};registry.category("fields").add("property_tags",propertyTagsField);return __exports;});;

/* /web/static/src/views/fields/properties/property_value.js */
odoo.define('@web/views/fields/properties/property_value',['@odoo/owl','@web/core/autocomplete/autocomplete','@web/core/checkbox/checkbox','@web/core/datetime/datetime_input','@web/core/domain','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/core/l10n/dates','@web/core/l10n/translation','@web/core/tags_list/tags_list','@web/core/utils/hooks','@web/views/fields/formatters','@web/core/utils/numbers','@web/views/fields/many2one/many2one_field','@web/views/fields/parsers','@web/views/fields/relational_utils','@web/views/fields/properties/property_tags','@web/core/utils/urls'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{AutoComplete}=require("@web/core/autocomplete/autocomplete");const{CheckBox}=require("@web/core/checkbox/checkbox");const{DateTimeInput}=require("@web/core/datetime/datetime_input");const{Domain}=require("@web/core/domain");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{deserializeDate,deserializeDateTime,formatDate,formatDateTime,serializeDate,serializeDateTime,}=require("@web/core/l10n/dates");const{_t}=require("@web/core/l10n/translation");const{TagsList}=require("@web/core/tags_list/tags_list");const{useService}=require("@web/core/utils/hooks");const{formatInteger,formatMany2one}=require("@web/views/fields/formatters");const{formatFloat}=require("@web/core/utils/numbers");const{m2oTupleFromData}=require("@web/views/fields/many2one/many2one_field");const{parseFloat,parseInteger}=require("@web/views/fields/parsers");const{Many2XAutocomplete,useOpenMany2XRecord}=require("@web/views/fields/relational_utils");const{PropertyTags}=require("@web/views/fields/properties/property_tags");const{imageUrl}=require("@web/core/utils/urls");const PropertyValue=__exports.PropertyValue=class PropertyValue extends Component{static template="web.PropertyValue";static components={Dropdown,DropdownItem,CheckBox,DateTimeInput,Many2XAutocomplete,TagsList,AutoComplete,PropertyTags,};static props={id:{type:String,optional:true},type:{type:String,optional:true},comodel:{type:String,optional:true},domain:{type:String,optional:true},string:{type:String,optional:true},value:{optional:true},context:{type:Object},readonly:{type:Boolean,optional:true},canChangeDefinition:{type:Boolean,optional:true},checkDefinitionWriteAccess:{type:Function,optional:true},selection:{type:Array,optional:true},tags:{type:Array,optional:true},onChange:{type:Function,optional:true},onTagsChange:{type:Function,optional:true},};setup(){this.orm=useService("orm");this.action=useService("action");this.openMany2X=useOpenMany2XRecord({resModel:this.props.model,activeActions:{create:false,createEdit:false,write:true,},isToMany:false,onRecordSaved:async(record)=>{if(!record){return;}
await record.load();const recordData=m2oTupleFromData(record.data);await this.onValueChange([{id:recordData[0],name:recordData[1]}]);},fieldString:this.props.string,});}
get propertyValue(){const value=this.props.value;if(this.props.type==="float"){return value;}else if(this.props.type==="datetime"){const datetimeValue=typeof value==="string"?deserializeDateTime(value):value;return datetimeValue&&!datetimeValue.invalid?datetimeValue:false;}else if(this.props.type==="date"){const dateValue=typeof value==="string"?deserializeDate(value):value;return dateValue&&!dateValue.invalid?dateValue:false;}else if(this.props.type==="boolean"){return!!value;}else if(this.props.type==="selection"){const options=this.props.selection||[];const option=options.find((option)=>option[0]===value);return option&&option.length===2&&option[0]?option[0]:"";}else if(this.props.type==="many2one"){return!value||value.length!==2||!value[0]?false:value;}else if(this.props.type==="many2many"){if(!value||!value.length){return[];}
return value.map((many2manyValue)=>{const hasAccess=many2manyValue[1]!==null;return{id:many2manyValue[0],comodel:this.props.comodel,text:hasAccess?many2manyValue[1]:_t("No Access"),onClick:hasAccess&&this.clickableRelational&&(async()=>await this._openRecord(this.props.comodel,many2manyValue[0])),onDelete:!this.props.readonly&&hasAccess&&(()=>this.onMany2manyDelete(many2manyValue[0])),colorIndex:0,img:this.showAvatar&&hasAccess?imageUrl(this.props.comodel,many2manyValue[0],"avatar_128"):null,};});}else if(this.props.type==="tags"){return value||[];}
return value;}
get propertyDomain(){if(!this.props.domain||!this.props.domain.length){return[];}
let domain=new Domain(this.props.domain);if(this.props.type==="many2many"&&this.props.value){domain=Domain.and([domain,[["id","not in",this.props.value.map((rec)=>rec[0])]],]);}
return domain.toList();}
get displayValue(){const value=this.propertyValue;if(this.props.type==="many2one"&&value&&value.length===2){return formatMany2one(value);}else if(this.props.type==="integer"){return formatInteger(value||0);}else if(this.props.type==="float"){return formatFloat(value||0);}else if(!value){return false;}else if(this.props.type==="datetime"&&value){return formatDateTime(value);}else if(this.props.type==="date"&&value){return formatDate(value);}else if(this.props.type==="selection"){return this.props.selection.find((option)=>option[0]===value)[1];}
return value.toString();}
get clickableRelational(){return!this.env.config||this.env.config.viewType!=="kanban";}
get showAvatar(){return(["many2one","many2many"].includes(this.props.type)&&["res.users","res.partner"].includes(this.props.comodel));}
async onValueChange(newValue){if(this.props.type==="datetime"){newValue=newValue&&serializeDateTime(newValue);}else if(this.props.type==="date"){newValue=newValue&&serializeDate(newValue);}else if(this.props.type==="integer"){try{newValue=parseInteger(newValue)||0;}catch{newValue=0;}}else if(this.props.type==="float"){try{newValue=parseFloat(newValue)||0;}catch{newValue=0;}}else if(["many2one","many2many"].includes(this.props.type)){newValue=newValue&&newValue.length&&newValue[0].id?[newValue[0].id,newValue[0].name]:false;if(newValue&&newValue[0]&&newValue[1]===undefined){newValue=await this._nameGet(newValue[0]);}
if(this.props.type==="many2many"&&newValue){const currentValue=this.props.value||[];const recordId=newValue[0];const exists=currentValue.find((rec)=>rec[0]===recordId);if(exists){return;}
newValue=[...currentValue,newValue];}}
this.props.onChange(newValue);}
async onMany2oneClick(event){if(this.props.readonly){event.stopPropagation();await this._openRecord(this.props.comodel,this.propertyValue[0]);}}
onExternalLinkClick(){return this.openMany2X({resId:this.propertyValue[0],forceModel:this.props.comodel,context:this.context,});}
onMany2manyDelete(many2manyId){const currentValue=JSON.parse(JSON.stringify(this.props.value||[]));const newValue=currentValue.filter((value)=>value[0]!==many2manyId);this.props.onChange(newValue);}
async onQuickCreate(name,params={}){const result=await this.orm.call(this.props.comodel,"name_create",[name],{context:this.props.context,});this.onValueChange([{id:result[0],name:result[1]}]);}
async _openRecord(recordModel,recordId){const action=await this.orm.call(recordModel,"get_formview_action",[[recordId]],{context:this.props.context,});this.action.doAction(action);}
async _nameGet(recordId){const result=await this.orm.read(this.props.comodel,[recordId],["display_name"],{context:this.props.context,});return[result[0].id,result[0].display_name];}}
return __exports;});;

/* /web/static/src/views/fields/radio/radio_field.js */
odoo.define('@web/views/fields/radio/radio_field',['@odoo/owl','@web/core/l10n/translation','@web/core/registry','@web/model/relational_model/utils','@web/views/fields/relational_utils','@web/views/fields/standard_field_props'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{getFieldDomain}=require("@web/model/relational_model/utils");const{useSpecialData}=require("@web/views/fields/relational_utils");const{standardFieldProps}=require("@web/views/fields/standard_field_props");let nextId=0;const RadioField=__exports.RadioField=class RadioField extends Component{static template="web.RadioField";static props={...standardFieldProps,orientation:{type:String,optional:true},label:{type:String,optional:true},domain:{type:[Array,Function],optional:true},};static defaultProps={orientation:"vertical",};setup(){this.id=`radio_field_${nextId++}`;this.type=this.props.record.fields[this.props.name].type;if(this.type==="many2one"){this.specialData=useSpecialData(async(orm,props)=>{const{relation}=props.record.fields[props.name];const domain=getFieldDomain(props.record,props.name,props.domain);const kwargs={specification:{display_name:1},domain,};const{records}=await orm.call(relation,"web_search_read",[],kwargs);return records.map((record)=>[record.id,record.display_name]);});}}
get items(){switch(this.type){case"selection":return this.props.record.fields[this.props.name].selection;case"many2one":{return this.specialData.data;}
default:return[];}}
get value(){switch(this.type){case"selection":return this.props.record.data[this.props.name];case"many2one":return Array.isArray(this.props.record.data[this.props.name])?this.props.record.data[this.props.name][0]:this.props.record.data[this.props.name];default:return null;}}
onChange(value){switch(this.type){case"selection":this.props.record.update({[this.props.name]:value[0]});break;case"many2one":this.props.record.update({[this.props.name]:value});break;}}}
const radioField=__exports.radioField={component:RadioField,displayName:_t("Radio"),supportedOptions:[{label:_t("Display horizontally"),name:"horizontal",type:"boolean",},],supportedTypes:["many2one","selection"],isEmpty:(record,fieldName)=>record.data[fieldName]===false,extractProps:({options,string},dynamicInfo)=>({orientation:options.horizontal?"horizontal":"vertical",label:string,domain:dynamicInfo.domain,}),};registry.category("fields").add("radio",radioField);return __exports;});;

/* /web/static/src/views/fields/reference/reference_field.js */
odoo.define('@web/views/fields/reference/reference_field',['@web/core/l10n/translation','@web/core/registry','@web/model/relational_model/utils','@web/views/fields/many2one/many2one_field','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{useRecordObserver}=require("@web/model/relational_model/utils");const{many2OneField,Many2OneField}=require("@web/views/fields/many2one/many2one_field");const{Component,useState}=require("@odoo/owl");const ReferenceField=__exports.ReferenceField=class ReferenceField extends Component{static template="web.ReferenceField";static components={Many2OneField,};static props={...Many2OneField.props,hideModel:{type:Boolean,optional:true},modelField:{type:String,optional:true},};static defaultProps={...Many2OneField.defaultProps,};setup(){this.state=useState({formattedCharValue:undefined,modelName:undefined,currentRelation:undefined,});if(this._isCharField(this.props)){let currentValue=undefined;useRecordObserver(async(record,props)=>{if(currentValue!==record.data[props.name]){this.state.formattedCharValue=await this._fetchReferenceCharData(props);currentValue=record.data[props.name];}});}else if(this.props.modelField){useRecordObserver(async(record,props)=>{if(this.currentModelId!==record.data[props.modelField]?.[0]){this.state.modelName=await this._fetchModelTechnicalName(props);if(this.currentModelId!==undefined){record.update({[props.name]:false});}
this.currentModelId=record.data[props.modelField]?.[0];}});}}
get m2oProps(){const value=this.getValue();const p={...this.props,relation:this.getRelation(),value:value&&[value.resId,value.displayName],update:this.updateM2O.bind(this),};delete p.hideModel;delete p.modelField;return p;}
get selection(){if(!this._isCharField(this.props)&&!this.hideModelSelector){return this.props.record.fields[this.props.name].selection;}
return[];}
get relation(){return this.getRelation();}
get hideModelSelector(){return this.props.hideModel||this.props.modelField;}
getRelation(){const modelName=this.getModelName();if(modelName){return modelName;}
const value=this.getValue();if(value&&value.resModel){return value.resModel;}else{return this.state.currentRelation;}}
getValue(){if(this._isCharField(this.props)){return this.state.formattedCharValue;}else{return this.props.record.data[this.props.name];}}
getModelName(){return this.hideModelSelector&&this.state.modelName;}
updateModel(value){this.state.currentRelation=value;this.props.record.update({[this.props.name]:false});}
updateM2O(data){const value=data[this.props.name];const resModel=this.state.currentRelation||this.getRelation();this.props.record.update({[this.props.name]:value&&{resModel,resId:value[0],displayName:value[1],},});}
_isCharField(props){return props.record.fields[props.name].type==="char";}
async _fetchReferenceCharData(props){const recordData=props.record.data[props.name];if(!recordData){return false;}
const[resModel,_resId]=recordData.split(",");const resId=parseInt(_resId,10);if(resModel&&resId){const{specialDataCaches,orm}=props.record.model;const key=`__reference__name_get-${recordData}`;if(!specialDataCaches[key]){specialDataCaches[key]=orm.read(resModel,[resId],["display_name"]);}
const result=await specialDataCaches[key];return{resId,resModel,displayName:result[0].display_name,};}
return false;}
_assertMany2OneToIrModel(props){const field=props.modelField&&props.record.fields[props.modelField];if(field&&(field.type!=="many2one"||field.relation!=="ir.model")){throw new Error(`The model_field (${props.modelField}) of the reference field ${props.name} must be a many2one('ir.model').`);}}
async _fetchModelTechnicalName(props){this._assertMany2OneToIrModel(props);const record=props.record;const modelId=record.data[props.modelField]?.[0];if(!modelId){return false;}
const{specialDataCaches,orm}=props.record.model;const key=`__reference__ir_model-${modelId}`;if(!specialDataCaches[key]){specialDataCaches[key]=orm.read("ir.model",[modelId],["model"]);}
const result=await specialDataCaches[key];return result[0].model;}}
const referenceField=__exports.referenceField={component:ReferenceField,displayName:_t("Reference"),supportedOptions:[{label:_t("Hide model"),name:"hide_model",type:"boolean",},{label:_t("Model field"),name:"model_field",type:"field",availableTypes:["many2one"],},],supportedTypes:["reference","char"],extractProps({options}){const props=many2OneField.extractProps(...arguments);props.hideModel=!!options.hide_model;props.modelField=options.model_field;return props;},};registry.category("fields").add("reference",referenceField);return __exports;});;

/* /web/static/src/views/fields/relational_utils.js */
odoo.define('@web/views/fields/relational_utils',['@web/core/l10n/translation','@web/core/autocomplete/autocomplete','@web/core/context','@web/core/dialog/dialog','@web/core/domain','@web/core/network/rpc','@web/core/utils/cache','@web/core/utils/hooks','@web/core/utils/xml','@web/views/form/form_arch_parser','@web/views/form/form_controller','@web/views/form/form_renderer','@web/model/relational_model/utils','@web/views/utils','@web/views/view_button/view_button','@web/views/view_button/view_button_hook','@web/views/view_dialogs/form_view_dialog','@web/views/view_dialogs/select_create_dialog','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{AutoComplete}=require("@web/core/autocomplete/autocomplete");const{makeContext}=require("@web/core/context");const{Dialog}=require("@web/core/dialog/dialog");const{Domain}=require("@web/core/domain");const{RPCError}=require("@web/core/network/rpc");const{Cache}=require("@web/core/utils/cache");const{useBus,useChildRef,useForwardRefToParent,useOwnedDialogs,useService,}=require("@web/core/utils/hooks");const{createElement,parseXML}=require("@web/core/utils/xml");const{FormArchParser}=require("@web/views/form/form_arch_parser");const{loadSubViews,useFormViewInDialog}=require("@web/views/form/form_controller");const{FormRenderer}=require("@web/views/form/form_renderer");const{extractFieldsFromArchInfo,useRecordObserver}=require("@web/model/relational_model/utils");const{computeViewClassName,isNull}=require("@web/views/utils");const{ViewButton}=require("@web/views/view_button/view_button");const{executeButtonCallback,useViewButtons}=require("@web/views/view_button/view_button_hook");const{FormViewDialog}=require("@web/views/view_dialogs/form_view_dialog");const{SelectCreateDialog}=require("@web/views/view_dialogs/select_create_dialog");const{Component,onWillUpdateProps,useComponent,useEffect,useEnv,useState,useSubEnv,}=require("@odoo/owl");__exports.useSelectCreate=useSelectCreate;function useSelectCreate({resModel,activeActions,onSelected,onCreateEdit,onUnselect}){const addDialog=useOwnedDialogs();function selectCreate({domain,context,filters,title}){addDialog(SelectCreateDialog,{title:title||_t("Select records"),noCreate:!activeActions.create,multiSelect:"link"in activeActions?activeActions.link:false,resModel,context,domain,onSelected,onCreateEdit:()=>onCreateEdit({context}),dynamicFilters:filters,onUnselect,});}
return selectCreate;}
const STANDARD_ACTIVE_ACTIONS=["create","createEdit","delete","link","unlink","write"];__exports.useActiveActions=useActiveActions;function useActiveActions({fieldType,subViewActiveActions={},crudOptions={},getEvalParams=()=>({}),}){const compute=({evalContext={},readonly=true})=>{const result={type:fieldType,onDelete:null};const evalAction=(actionName)=>evals[actionName](evalContext);result.create=!readonly&&evalAction("create");result.createEdit=!readonly&&result.create&&crudOptions.createEdit;result.edit=crudOptions.edit;result.delete=!readonly&&evalAction("delete");if(isMany2Many){result.link=!readonly&&evalAction("link");result.unlink=!readonly&&evalAction("unlink");result.write=evalAction("write");}
if(result.unlink||(!isMany2Many&&result.delete)){result.onDelete=crudOptions.onDelete;}
return result;};const props=useComponent().props;const isMany2Many=fieldType==="many2many";const evals={};for(const actionName of STANDARD_ACTIVE_ACTIONS){let evalFn=()=>actionName!=="write";if(!isNull(crudOptions[actionName])){const action=crudOptions[actionName];evalFn=(evalContext)=>Boolean(action&&new Domain(action).contains(evalContext));}
if(actionName in subViewActiveActions){const viewActiveAction=subViewActiveActions[actionName];evals[actionName]=(evalContext)=>viewActiveAction&&evalFn(evalContext);}else{evals[actionName]=evalFn;}}
const activeActions=compute(getEvalParams(props));onWillUpdateProps((nextProps)=>{Object.assign(activeActions,compute(getEvalParams(nextProps)));});return activeActions;}
__exports.useSpecialData=useSpecialData;function useSpecialData(loadFn){const component=useComponent();const record=component.props.record;const key=`${record.resModel}-${component.props.name}`;const{specialDataCaches}=record.model;const orm=component.env.services.orm;const ormWithCache=Object.create(orm);if(!specialDataCaches[key]){specialDataCaches[key]=new Cache((...args)=>orm.call(...args),(...path)=>JSON.stringify(path));}
ormWithCache.call=(...args)=>specialDataCaches[key].read(...args);const result=useState({data:{}});useRecordObserver(async(record,props)=>{result.data=await loadFn(ormWithCache,{...props,record});});onWillUpdateProps(async(props)=>{if(props.record.id===component.props.record.id){result.data=await loadFn(ormWithCache,props);}});return result;}
const Many2XAutocomplete=__exports.Many2XAutocomplete=class Many2XAutocomplete extends Component{static template="web.Many2XAutocomplete";static components={AutoComplete};static props={value:{type:String,optional:true},activeActions:Object,context:{type:Object,optional:true},nameCreateField:{type:String,optional:true},setInputFloats:{type:Function,optional:true},update:Function,resModel:String,getDomain:Function,searchLimit:{type:Number,optional:true},quickCreate:{type:[Function,{value:null}],optional:true},noSearchMore:{type:Boolean,optional:true},searchMoreLimit:{type:Number,optional:true},fieldString:String,id:{type:String,optional:true},placeholder:{type:String,optional:true},autoSelect:{type:Boolean,optional:true},isToMany:{type:Boolean,optional:true},autocomplete_container:{type:Function,optional:true},dropdown:{type:Boolean,optional:true},autofocus:{type:Boolean,optional:true},getOptionClassnames:{type:Function,optional:true},};static defaultProps={searchLimit:7,searchMoreLimit:320,nameCreateField:"name",value:"",setInputFloats:()=>{},quickCreate:null,context:{},dropdown:true,getOptionClassnames:()=>"",};setup(){this.orm=useService("orm");this.autoCompleteContainer=useForwardRefToParent("autocomplete_container");const{activeActions,resModel,update,isToMany,fieldString}=this.props;this.openMany2X=useOpenMany2XRecord({resModel,activeActions,isToMany,onRecordSaved:(record)=>{return update([{...record.data,id:record.resId}]);},onRecordDiscarded:()=>{if(!isToMany){this.props.update(false);}},fieldString,onClose:()=>{const autoCompleteInput=this.autoCompleteContainer.el.querySelector("input");if(this.props.value!==autoCompleteInput.value){autoCompleteInput.value="";}
autoCompleteInput.focus();},});this.selectCreate=useSelectCreate({resModel,activeActions,onSelected:(resId)=>{const resIds=Array.isArray(resId)?resId:[resId];const values=resIds.map((id)=>({id}));return update(values);},onCreateEdit:({context})=>this.openMany2X({context}),onUnselect:isToMany?undefined:()=>update(),});}
get sources(){return[this.optionsSource];}
get optionsSource(){return{placeholder:_t("Loading..."),options:this.loadOptionsSource.bind(this),};}
get activeActions(){return this.props.activeActions||{};}
getCreationContext(value){return makeContext([this.props.context,{[`default_${this.props.nameCreateField}`]:value},]);}
onInput({inputValue}){if(!this.props.value||this.props.value!==inputValue){this.props.setInputFloats(true);}}
onCancel(){this.props.setInputFloats(false);}
onSelect(option,params={}){if(option.action){return option.action(params);}
const record={id:option.value,display_name:option.displayName,};this.props.update([record],params);}
abortableSearch(name){const originalPromise=this.search(name);return{promise:originalPromise,abort:originalPromise.abort?originalPromise.abort.bind(originalPromise):()=>{},};}
search(name){return this.orm.call(this.props.resModel,"name_search",[],{name:name,operator:"ilike",args:this.props.getDomain(),limit:this.props.searchLimit+1,context:this.props.context,});}
mapRecordToOption(result){return{value:result[0],label:result[1]?result[1].split("\n")[0]:_t("Unnamed"),displayName:result[1],classList:this.props.getOptionClassnames({id:result[0],display_name:result[1]}),};}
async loadOptionsSource(request){if(this.lastProm){this.lastProm.abort(false);}
this.lastProm=this.abortableSearch(request);const records=await this.lastProm.promise;const options=records.map((result)=>this.mapRecordToOption(result));if(this.props.quickCreate&&request.length){options.push({label:_t('Create "%s"',request),classList:"o_m2o_dropdown_option o_m2o_dropdown_option_create",action:async(params)=>{try{await this.props.quickCreate(request,params);}catch(e){if(e instanceof RPCError&&e.exceptionName==="odoo.exceptions.ValidationError"){return this.openMany2X({context:this.getCreationContext(request),nextRecordsContext:this.props.context,});}
throw e;}},});}
if(!this.props.noSearchMore&&records.length>0){options.push({label:this.SearchMoreButtonLabel,action:this.onSearchMore.bind(this,request),classList:"o_m2o_dropdown_option o_m2o_dropdown_option_search_more",});}
const canCreateEdit="createEdit"in this.activeActions?this.activeActions.createEdit:this.activeActions.create;if(!request.length&&!this.props.value&&(this.props.quickCreate||canCreateEdit)){options.push({label:_t("Start typing..."),classList:"o_m2o_start_typing",unselectable:true,});}
if(request.length&&canCreateEdit){options.push({label:_t("Create and edit..."),classList:"o_m2o_dropdown_option o_m2o_dropdown_option_create_edit",action:()=>this.openMany2X({context:this.getCreationContext(request),nextRecordsContext:this.props.context,}),});}
if(!records.length&&!this.activeActions.createEdit&&!this.props.quickCreate){options.push({label:_t("No records"),classList:"o_m2o_no_result",unselectable:true,});}
return options;}
get SearchMoreButtonLabel(){return _t("Search More...");}
async onBarcodeSearch(){const autoCompleteInput=this.autoCompleteContainer.el.querySelector("input");return this.onSearchMore(autoCompleteInput.value);}
async onSearchMore(request){const{resModel,getDomain,context,fieldString}=this.props;const domain=getDomain();let dynamicFilters=[];if(request.length){const nameGets=await this.orm.call(resModel,"name_search",[],{name:request,args:domain,operator:"ilike",limit:this.props.searchMoreLimit,context,});dynamicFilters=[{description:_t("Quick search: %s",request),domain:[["id","in",nameGets.map((nameGet)=>nameGet[0])]],},];}
const title=_t("Search: %s",fieldString);this.selectCreate({domain,context,filters:dynamicFilters,title,});}
onChange({inputValue}){if(!inputValue.length){this.props.update(false);}}}
const AvatarMany2XAutocomplete=__exports.AvatarMany2XAutocomplete=class AvatarMany2XAutocomplete extends Many2XAutocomplete{mapRecordToOption(result){return{...super.mapRecordToOption(result),resModel:this.props.resModel,};}
get optionsSource(){return{...super.optionsSource,optionTemplate:"web.AvatarMany2XAutocomplete",};}}
__exports.useOpenMany2XRecord=useOpenMany2XRecord;function useOpenMany2XRecord({resModel,onRecordSaved,onRecordDiscarded,fieldString,activeActions,isToMany,onClose=(isNew)=>{},}){const addDialog=useOwnedDialogs();const orm=useService("orm");return async function openDialog({resId=false,forceModel=null,title,context,nextRecordsContext},immediate=false){const model=forceModel||resModel;let viewId;if(resId!==false){viewId=await orm.call(model,"get_formview_id",[[resId]],{context,});}
let resolve=()=>{};if(!title){title=resId?_t("Open: %s",fieldString):_t("Create %s",fieldString);}
const{create:canCreate,write:canWrite}=activeActions;const mode=(resId?canWrite:canCreate)?"edit":"readonly";addDialog(FormViewDialog,{preventCreate:!canCreate,preventEdit:!canWrite,title,context,nextRecordsContext,mode,resId,resModel:model,viewId,onRecordSaved,onRecordDiscarded,isToMany,},{onClose:()=>{resolve();const isNew=!resId;onClose(isNew);},});if(!immediate){return new Promise((_resolve)=>{resolve=_resolve;});}};}
const X2ManyFieldDialog=__exports.X2ManyFieldDialog=class X2ManyFieldDialog extends Component{static template="web.X2ManyFieldDialog";static components={Dialog,FormRenderer,ViewButton};static props={archInfo:Object,close:Function,record:Object,addNew:Function,save:Function,title:String,delete:{optional:true},deleteButtonLabel:{optional:true},config:Object,};setup(){this.actionService=useService("action");this.archInfo=this.props.archInfo;this.record=this.props.record;this.title=this.props.title;this.contentClass=computeViewClassName("form",this.archInfo.xmlDoc);useSubEnv({config:this.props.config});this.env.dialogData.dismiss=()=>this.discard();useBus(this.record.model.bus,"update",()=>this.render(true));this.modalRef=useChildRef();const reload=()=>this.record.load();useViewButtons(this.modalRef,{reload,beforeExecuteAction:this.beforeExecuteActionButton.bind(this),});this.canCreate=!this.record.resId;if(this.archInfo.xmlDoc.querySelector("footer:not(field footer)")){this.archInfo={...this.archInfo,xmlDoc:this.archInfo.xmlDoc.cloneNode(true)};this.footerArchInfo=Object.assign({},this.archInfo);this.footerArchInfo.xmlDoc=createElement("t");this.footerArchInfo.xmlDoc.append(...this.archInfo.xmlDoc.querySelectorAll("footer:not(field footer)"));this.footerArchInfo.arch=this.footerArchInfo.xmlDoc.outerHTML;this.archInfo.arch=this.archInfo.xmlDoc.outerHTML;}
const{autofocusFieldId,disableAutofocus}=this.archInfo;if(!disableAutofocus){useEffect((isInEdition)=>{let elementToFocus;if(isInEdition){elementToFocus=(autofocusFieldId&&this.modalRef.el.querySelector(`#${autofocusFieldId}`))||this.modalRef.el.querySelector(".o_field_widget input");}else{elementToFocus=this.modalRef.el.querySelector("button.btn-primary");}
if(elementToFocus){elementToFocus.focus();}else{this.modalRef.el.focus();}},()=>[this.record.isInEdition]);}
useFormViewInDialog();}
get dialogProps(){const props={title:this.title,withBodyPadding:false,modalRef:this.modalRef,contentClass:this.contentClass,};if(!this.record.isNew){props.onExpand=async()=>{await this.save({saveAndNew:false});this.actionService.doAction({type:"ir.actions.act_window",res_model:this.props.record.resModel,res_id:this.props.record.resId,views:[[false,"form"]],});};}
return props;}
async beforeExecuteActionButton(clickParams){if(clickParams.special!=="cancel"){return this.record.save();}}
async discard(){if(this.record.isInEdition){await this.record.discard();}
this.props.close();}
save({saveAndNew}){return executeButtonCallback(this.modalRef.el,async()=>{if(await this.record.checkValidity({displayNotification:true})){await this.props.save(this.record);if(saveAndNew){await this.record.switchMode("readonly");this.record=await this.props.addNew();}}else{return false;}
if(!saveAndNew){this.props.close();}
return true;});}
async remove(){await this.props.delete();this.props.close();}
async saveAndNew(){const saved=await this.save({saveAndNew:true});if(saved){if(this.title){this.title=this.title.replace(_t("Open:"),_t("New:"));}
this.render(true);}}}
async function getFormViewInfo({list,context,activeField,viewService,env}){let formArchInfo=activeField.views.form;let fields=activeField.fields;const comodel=list.resModel;if(!formArchInfo){const{fields:formFields,relatedModels,views,}=await viewService.loadViews({context:makeContext([list.context,context]),resModel:comodel,views:[[false,"form"]],});const xmlDoc=parseXML(views.form.arch);formArchInfo=new FormArchParser().parse(xmlDoc,relatedModels,comodel);fields={...list.fields,...formFields};}
await loadSubViews(formArchInfo.fieldNodes,fields,{},comodel,viewService,env.isSmall);return{archInfo:formArchInfo,fields};}
__exports.useAddInlineRecord=useAddInlineRecord;function useAddInlineRecord({addNew}){let creatingRecord=false;async function addInlineRecord({context,editable}){if(!creatingRecord){creatingRecord=true;try{await addNew({context,mode:"edit",position:editable});}finally{creatingRecord=false;}}}
return addInlineRecord;}
__exports.useOpenX2ManyRecord=useOpenX2ManyRecord;function useOpenX2ManyRecord({activeField,activeActions,getList,updateRecord,saveRecord,isMany2Many,}){const viewService=useService("view");const env=useEnv();const component=useComponent();const addDialog=useOwnedDialogs();const viewMode=activeField.viewMode;async function openRecord({record,mode,context,title,onClose}){if(!title){title=record?_t("Open: %s",activeField.string):_t("Create %s",activeField.string);}
const list=getList();const{archInfo,fields:_fields}=await getFormViewInfo({list,context,activeField,viewService,env,});if(!component.props.record.isInEdition){archInfo.activeActions.edit=false;}
const{activeFields,fields}=extractFieldsFromArchInfo(archInfo,_fields);let deleteRecord;let deleteButtonLabel=undefined;const isDuplicate=!!record;const params={activeFields,fields,mode};if(record){const{delete:canDelete,onDelete}=activeActions;deleteRecord=viewMode==="kanban"&&canDelete?()=>onDelete(record):null;deleteButtonLabel=activeActions.type==="one2many"?_t("Delete"):_t("Remove");}else{params.context=makeContext([list.context,context]);params.withoutParent=isMany2Many;}
record=await list.extendRecord(params,record);const _onClose=()=>{list.editedRecord?.switchMode("readonly");onClose?.();};addDialog(X2ManyFieldDialog,{config:env.config,archInfo,record,addNew:()=>{return getList().extendRecord(params);},save:(rec)=>{if(isDuplicate&&rec.id===record.id){return updateRecord(rec);}else{return saveRecord(rec);}},title,delete:deleteRecord,deleteButtonLabel:deleteButtonLabel,},{onClose:_onClose});}
let recordIsOpen=false;return(params)=>{if(recordIsOpen){return;}
recordIsOpen=true;const onClose=params.onClose;params={...params,onClose:(...args)=>{recordIsOpen=false;if(onClose){return onClose(...args);}},};try{return openRecord(params);}catch(e){recordIsOpen=false;throw e;}};}
__exports.useX2ManyCrud=useX2ManyCrud;function useX2ManyCrud(getList,isMany2Many){let saveRecord;if(isMany2Many){saveRecord=async(object)=>{const list=getList();if(Array.isArray(object)){return list.addAndRemove({add:object});}else{await object.save({reload:false});return list.linkTo(object.resId);}};}else{saveRecord=async(record)=>{return getList().validateExtendedRecord(record);};}
const updateRecord=async(record)=>{if(isMany2Many){await record.save();}
return getList().validateExtendedRecord(record);};const removeRecord=(record)=>{const list=getList();if(isMany2Many){return list.forget(record);}
return list.delete(record);};return{saveRecord,updateRecord,removeRecord,};}
return __exports;});;

/* /web/static/src/views/fields/remaining_days/remaining_days_field.js */
odoo.define('@web/views/fields/remaining_days/remaining_days_field',['@odoo/owl','@web/core/py_js/py','@web/core/l10n/dates','@web/views/utils','@web/core/l10n/localization','@web/core/l10n/translation','@web/core/registry','@web/views/fields/datetime/datetime_field','@web/views/fields/standard_field_props'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{evaluateExpr}=require("@web/core/py_js/py");const{formatDate,formatDateTime}=require("@web/core/l10n/dates");const{getClassNameFromDecoration}=require("@web/views/utils");const{localization}=require("@web/core/l10n/localization");const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{DateTimeField}=require("@web/views/fields/datetime/datetime_field");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{DateTime}=luxon;const RemainingDaysField=__exports.RemainingDaysField=class RemainingDaysField extends Component{static components={DateTimeField};static props={...standardFieldProps,classes:{type:Object,optional:true},};static defaultProps={classes:{'bf':'days <= 0','danger':'days < 0','warning':'days == 0',},};static template="web.RemainingDaysField";get diffDays(){const{record,name}=this.props;const value=record.data[name];if(!value){return null;}
const today=DateTime.local().startOf("day");const diff=value.startOf("day").diff(today,"days");return Math.floor(diff.days);}
get diffString(){if(this.diffDays===null){return"";}
switch(this.diffDays){case-1:return _t("Yesterday");case 0:return _t("Today");case 1:return _t("Tomorrow");}
if(Math.abs(this.diffDays)>99){return this.formattedValue;}
if(this.diffDays<0){return _t("%s days ago",-this.diffDays);}
return _t("In %s days",this.diffDays);}
get formattedValue(){const{record,name}=this.props;return record.fields[name].type==="datetime"?formatDateTime(record.data[name],{format:localization.dateFormat}):formatDate(record.data[name]);}
get classNames(){if(this.diffDays===null){return null;}
if(!this.props.record.isActive){return null;}
const classNames={};const evalContext={days:this.diffDays,record:this.props.record.evalContext};for(const decoration in this.props.classes){const value=evaluateExpr(this.props.classes[decoration],evalContext);classNames[getClassNameFromDecoration(decoration)]=value;}
return classNames;}
get dateTimeFieldProps(){return Object.fromEntries(Object.entries(this.props).filter(([key])=>standardFieldProps[key]));}}
const remainingDaysField=__exports.remainingDaysField={component:RemainingDaysField,displayName:_t("Remaining Days"),supportedTypes:["date","datetime"],extractProps:({options})=>{return{classes:options.classes,};},};registry.category("fields").add("remaining_days",remainingDaysField);return __exports;});;

/* /web/static/src/views/fields/selection/filterable_selection_field.js */
odoo.define('@web/views/fields/selection/filterable_selection_field',['@web/core/registry','@web/views/fields/selection/selection_field'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{SelectionField,selectionField}=require("@web/views/fields/selection/selection_field");const FilterableSelectionField=__exports.FilterableSelectionField=class FilterableSelectionField extends SelectionField{static props={...SelectionField.props,whitelist_fname:{type:String,optional:true},whitelisted_values:{type:Array,optional:true},blacklisted_values:{type:Array,optional:true},};get options(){let options=super.options;if(this.props.whitelist_fname){options=options.filter((option)=>{return(option[0]===this.props.record.data[this.props.name]||this.props.record.data[this.props.whitelist_fname].includes(option[0]));});}else if(this.props.whitelisted_values){options=options.filter((option)=>{return(option[0]===this.props.record.data[this.props.name]||this.props.whitelisted_values.includes(option[0]));});}else if(this.props.blacklisted_values){options=options.filter((option)=>{return(option[0]===this.props.record.data[this.props.name]||!this.props.blacklisted_values.includes(option[0]));});}
return options;}}
const filterableSelectionField=__exports.filterableSelectionField={...selectionField,component:FilterableSelectionField,supportedOptions:[{label:"Whitelisted Values",name:"whitelisted_values",type:"string",},{label:"Blacklisted Values",name:"blacklisted_values",type:"string",},{label:"Whitelisted field name",name:"whitelist_fname",type:"string",},],extractProps({options}){const props=selectionField.extractProps(...arguments);props.whitelist_fname=options.whitelist_fname;props.whitelisted_values=options.whitelisted_values;props.blacklisted_values=options.blacklisted_values;return props;},};registry.category("fields").add("filterable_selection",filterableSelectionField);return __exports;});;

/* /web/static/src/views/fields/selection/selection_field.js */
odoo.define('@web/views/fields/selection/selection_field',['@odoo/owl','@web/core/l10n/translation','@web/core/registry','@web/model/relational_model/utils','@web/views/fields/relational_utils','@web/views/fields/standard_field_props'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{getFieldDomain}=require("@web/model/relational_model/utils");const{useSpecialData}=require("@web/views/fields/relational_utils");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const SelectionField=__exports.SelectionField=class SelectionField extends Component{static template="web.SelectionField";static props={...standardFieldProps,placeholder:{type:String,optional:true},required:{type:Boolean,optional:true},domain:{type:[Array,Function],optional:true},autosave:{type:Boolean,optional:true},};static defaultProps={autosave:false,};setup(){this.type=this.props.record.fields[this.props.name].type;if(this.type==="many2one"){this.specialData=useSpecialData((orm,props)=>{const{relation}=props.record.fields[props.name];const domain=getFieldDomain(props.record,props.name,props.domain);return orm.call(relation,"name_search",["",domain]);});}}
get options(){switch(this.type){case"many2one":return[...this.specialData.data];case"selection":return this.props.record.fields[this.props.name].selection.filter((option)=>option[0]!==false&&option[1]!=="");default:return[];}}
get string(){switch(this.type){case"many2one":return this.props.record.data[this.props.name]?this.props.record.data[this.props.name][1]:"";case"selection":return this.props.record.data[this.props.name]!==false?this.options.find((o)=>o[0]===this.props.record.data[this.props.name])[1]:"";default:return"";}}
get value(){const rawValue=this.props.record.data[this.props.name];return this.type==="many2one"&&rawValue?rawValue[0]:rawValue;}
stringify(value){return JSON.stringify(value);}
onChange(ev){const value=JSON.parse(ev.target.value);switch(this.type){case"many2one":if(value===false){this.props.record.update({[this.props.name]:false},{save:this.props.autosave});}else{this.props.record.update({[this.props.name]:this.options.find((option)=>option[0]===value),},{save:this.props.autosave});}
break;case"selection":this.props.record.update({[this.props.name]:value},{save:this.props.autosave});break;}}}
const selectionField=__exports.selectionField={component:SelectionField,displayName:_t("Selection"),supportedTypes:["many2one","selection"],isEmpty:(record,fieldName)=>record.data[fieldName]===false,extractProps({attrs,viewType},dynamicInfo){const props={autosave:viewType==="kanban",placeholder:attrs.placeholder,required:dynamicInfo.required,domain:dynamicInfo.domain,};if(viewType==="kanban"){props.readonly=dynamicInfo.readonly;}
return props;},};registry.category("fields").add("selection",selectionField);registry.category("fields").add("kanban.selection",selectionField);return __exports;});;

/* /web/static/src/views/fields/signature/signature_field.js */
odoo.define('@web/views/fields/signature/signature_field',['@web/core/l10n/translation','@web/core/registry','@web/core/signature/signature_dialog','@web/core/utils/hooks','@web/core/utils/urls','@web/core/utils/binary','@web/views/fields/image/image_field','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{SignatureDialog}=require("@web/core/signature/signature_dialog");const{useService}=require("@web/core/utils/hooks");const{imageUrl}=require("@web/core/utils/urls");const{isBinarySize}=require("@web/core/utils/binary");const{fileTypeMagicWordMap}=require("@web/views/fields/image/image_field");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component,useState}=require("@odoo/owl");const placeholder="/web/static/img/placeholder.png";const SignatureField=__exports.SignatureField=class SignatureField extends Component{static template="web.SignatureField";static props={...standardFieldProps,defaultFont:{type:String},fullName:{type:String,optional:true},height:{type:Number,optional:true},previewImage:{type:String,optional:true},width:{type:Number,optional:true},type:{validate:(t)=>["initial","signature"].includes(t),optional:true},};static defaultProps={type:"signature",};setup(){this.displaySignatureRatio=3;this.dialogService=useService("dialog");this.state=useState({isValid:true,});}
get rawCacheKey(){return this.props.record.data.write_date;}
get getUrl(){const{name,previewImage,record}=this.props;if(this.state.isValid&&this.value){if(isBinarySize(this.value)){return imageUrl(record.resModel,record.resId,previewImage||name,{unique:this.rawCacheKey,});}else{const magic=fileTypeMagicWordMap[this.value[0]]||"png";return`data:image/${magic};base64,${this.props.record.data[this.props.name]}`;}}
return placeholder;}
get sizeStyle(){let{width,height}=this.props;if(!this.value){if(width&&height){width=Math.min(width,this.displaySignatureRatio*height);height=width/this.displaySignatureRatio;}else if(width){height=width/this.displaySignatureRatio;}else if(height){width=height*this.displaySignatureRatio;}}
let style="";if(width){style+=`width:${width}px; max-width:${width}px;`;}
if(height){style+=`height:${height}px; max-height:${height}px;`;}
return style;}
get value(){return this.props.record.data[this.props.name];}
onClickSignature(){if(!this.props.readonly){const nameAndSignatureProps={displaySignatureRatio:3,signatureType:this.props.type,noInputName:true,};const{fullName,record}=this.props;let defaultName="";if(fullName){let signName;const fullNameData=record.data[fullName];if(record.fields[fullName].type==="many2one"){signName=fullNameData&&fullNameData[1];}else{signName=fullNameData;}
defaultName=signName===""?undefined:signName;}
nameAndSignatureProps.defaultFont=this.props.defaultFont;const dialogProps={defaultName,nameAndSignatureProps,uploadSignature:(signature)=>this.uploadSignature(signature),};this.dialogService.add(SignatureDialog,dialogProps);}}
onLoadFailed(){this.state.isValid=false;this.notification.add(_t("Could not display the selected image"),{type:"danger",});}
uploadSignature({signatureImage}){return this.props.record.update({[this.props.name]:signatureImage.split(",")[1]||false,});}}
const signatureField=__exports.signatureField={component:SignatureField,fieldDependencies:[{name:"write_date",type:"datetime"}],supportedOptions:[{label:_t("Prefill with"),name:"full_name",type:"field",availableTypes:["char","many2one"],help:_t("The selected field will be used to pre-fill the signature"),},{label:_t("Default font"),name:"default_font",type:"string",},{label:_t("Size"),name:"size",type:"selection",choices:[{label:_t("Small"),value:"[0,90]"},{label:_t("Medium"),value:"[0,180]"},{label:_t("Large"),value:"[0,270]"},],},{label:_t("Preview image field"),name:"preview_image",type:"field",availableTypes:["binary"],},],extractProps:({attrs,options})=>({defaultFont:options.default_font||"",fullName:options.full_name,height:options.size?options.size[1]||undefined:attrs.height,previewImage:options.preview_image,type:options.type,width:options.size?options.size[0]||undefined:attrs.width,}),};registry.category("fields").add("signature",signatureField);return __exports;});;

/* /web/static/src/views/fields/standard_field_props.js */
odoo.define('@web/views/fields/standard_field_props',[],function(require){'use strict';let __exports={};const standardFieldProps=__exports.standardFieldProps={id:{type:String,optional:true},name:{type:String},readonly:{type:Boolean,optional:true},record:{type:Object},};return __exports;});;

/* /web/static/src/views/fields/stat_info/stat_info_field.js */
odoo.define('@web/views/fields/stat_info/stat_info_field',['@web/core/l10n/translation','@web/core/registry','@web/core/utils/strings','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{exprToBoolean}=require("@web/core/utils/strings");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const formatters=registry.category("formatters");const StatInfoField=__exports.StatInfoField=class StatInfoField extends Component{static template="web.StatInfoField";static props={...standardFieldProps,labelField:{type:String,optional:true},noLabel:{type:Boolean,optional:true},digits:{type:Array,optional:true},string:{type:String,optional:true},};get formattedValue(){const field=this.props.record.fields[this.props.name];const formatter=formatters.get(field.type);return formatter(this.props.record.data[this.props.name]||0,{digits:this.props.digits,field,});}
get label(){return this.props.labelField?this.props.record.data[this.props.labelField]:this.props.string;}}
const statInfoField=__exports.statInfoField={component:StatInfoField,displayName:_t("Stat Info"),supportedOptions:[{label:_t("Label field"),name:"label_field",type:"field",availableTypes:["char"],},],supportedTypes:["float","integer","monetary"],isEmpty:()=>false,extractProps:({attrs,options,string})=>{let digits;if(attrs.digits){digits=JSON.parse(attrs.digits);}else if(options.digits){digits=options.digits;}
return{digits,labelField:options.label_field,noLabel:exprToBoolean(attrs.nolabel),string,};},};registry.category("fields").add("statinfo",statInfoField);return __exports;});;

/* /web/static/src/views/fields/state_selection/state_selection_field.js */
odoo.define('@web/views/fields/state_selection/state_selection_field',['@odoo/owl','@web/core/commands/command_hook','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/core/l10n/translation','@web/core/registry','@web/views/fields/formatters','@web/views/fields/standard_field_props'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{useCommand}=require("@web/core/commands/command_hook");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{formatSelection}=require("@web/views/fields/formatters");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const StateSelectionField=__exports.StateSelectionField=class StateSelectionField extends Component{static template="web.StateSelectionField";static components={Dropdown,DropdownItem,};static props={...standardFieldProps,showLabel:{type:Boolean,optional:true},withCommand:{type:Boolean,optional:true},autosave:{type:Boolean,optional:true},};static defaultProps={showLabel:true,};setup(){this.colorPrefix="o_status_";this.colors={blocked:"red",done:"green",};if(this.props.withCommand){const hotkeys=["D","F","G"];for(const[index,[value,label]]of this.options.entries()){useCommand(_t("Set kanban state as %s",label),()=>{this.updateRecord(value);},{category:"smart_action",hotkey:hotkeys[index]&&"alt+"+hotkeys[index],isAvailable:()=>this.props.record.data[this.props.name]!==value,});}}}
get options(){return this.props.record.fields[this.props.name].selection.map(([state,label])=>{return[state,this.props.record.data[`legend_${state}`]||label];});}
get currentValue(){return this.props.record.data[this.props.name]||this.options[0][0];}
get label(){if(this.props.record.data[this.props.name]&&this.props.record.data[`legend_${this.props.record.data[this.props.name][0]}`]){return this.props.record.data[`legend_${this.props.record.data[this.props.name][0]}`];}
return formatSelection(this.currentValue,{selection:this.options});}
statusColor(value){return this.colors[value]?this.colorPrefix+this.colors[value]:"";}
async updateRecord(value){await this.props.record.update({[this.props.name]:value},{save:this.props.autosave});}}
const stateSelectionField=__exports.stateSelectionField={component:StateSelectionField,displayName:_t("Label Selection"),supportedOptions:[{label:_t("Autosave"),name:"autosave",type:"boolean",default:true,help:_t("If checked, the record will be saved immediately when the field is modified."),},{label:_t("Hide label"),name:"hide_label",type:"boolean",},],supportedTypes:["selection"],extractProps({options,viewType},dynamicInfo){return{showLabel:'hide_label'in options?!options.hide_label:false,withCommand:viewType==="form",readonly:dynamicInfo.readonly,autosave:"autosave"in options?!!options.autosave:true,};},};registry.category("fields").add("state_selection",stateSelectionField);return __exports;});;

/* /web/static/src/views/fields/statusbar/statusbar_field.js */
odoo.define('@web/views/fields/statusbar/statusbar_field',['@odoo/owl','@web/core/browser/browser','@web/core/commands/command_hook','@web/core/domain','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/core/l10n/translation','@web/core/registry','@web/core/utils/arrays','@web/core/utils/strings','@web/core/utils/timing','@web/model/relational_model/utils','@web/views/fields/relational_utils','@web/views/fields/standard_field_props'],function(require){'use strict';let __exports={};const{Component,onWillRender,useEffect,useExternalListener,useRef}=require("@odoo/owl");const{browser}=require("@web/core/browser/browser");const{useCommand}=require("@web/core/commands/command_hook");const{Domain}=require("@web/core/domain");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{groupBy}=require("@web/core/utils/arrays");const{escape}=require("@web/core/utils/strings");const{throttleForAnimation}=require("@web/core/utils/timing");const{getFieldDomain}=require("@web/model/relational_model/utils");const{useSpecialData}=require("@web/views/fields/relational_utils");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const hide=(...els)=>els.forEach((el)=>el.classList.add("d-none"));const show=(...els)=>els.forEach((el)=>el.classList.remove("d-none"));const StatusBarField=__exports.StatusBarField=class StatusBarField extends Component{static template="web.StatusBarField";static components={Dropdown,DropdownItem,};static props={...standardFieldProps,domain:{type:[Array,Function],optional:true},foldField:{type:String,optional:true},isDisabled:{type:Boolean,optional:true},visibleSelection:{type:Array,element:String,optional:true},withCommand:{type:Boolean,optional:true},};setup(){this.items={};this.beforeRef=useRef("before");this.rootRef=useRef("root");this.afterRef=useRef("after");this.dropdownRef=useRef("dropdown");let status="idle";const adjust=()=>{status="adjusting";this.adjustVisibleItems();this.render();browser.requestAnimationFrame(()=>(status="idle"));};useEffect(()=>status==="shouldAdjust"&&adjust(),()=>[status]);onWillRender(()=>{if(status!=="adjusting"){Object.assign(this.items,this.getSortedItems());status="shouldAdjust";}});useExternalListener(window,"resize",throttleForAnimation(adjust));if(this.field.type==="many2one"){this.specialData=useSpecialData((orm,props)=>{const{foldField,name:fieldName,record}=props;const{relation}=record.fields[fieldName];const fieldNames=["display_name"];if(foldField){fieldNames.push(foldField);}
const value=record.data[fieldName];let domain=getFieldDomain(record,fieldName,props.domain);if(domain.length&&value){domain=Domain.or([[["id","=",value[0]]],domain]).toList(record.evalContext);}
return orm.searchRead(relation,domain,fieldNames);});}
if(this.props.withCommand){const moveToCommandName=_t("Move to %s...",escape(this.field.string));useCommand(moveToCommandName,()=>({placeholder:moveToCommandName,providers:[{provide:()=>this.getAllItems().map((item)=>({name:item.label,action:()=>this.selectItem(item),})),},],}),{category:"smart_action",hotkey:"alt+shift+x",isAvailable:()=>!this.props.isDisabled,});useCommand(_t("Move to next %s",this.field.string),()=>{const items=this.getAllItems();const nextIndex=items.findIndex((item)=>item.isSelected)+1;this.selectItem(items[nextIndex]);},{category:"smart_action",hotkey:"alt+x",isAvailable:()=>!this.props.isDisabled&&!this.getAllItems().at(-1).isSelected,});}}
get field(){return this.props.record.fields[this.props.name];}
adjustVisibleItems(){const itemEls=[...this.rootRef.el.querySelectorAll(".o_arrow_button:not(.dropdown-toggle)"),];const selectedIndex=itemEls.findIndex((el)=>el.classList.contains("o_arrow_button_current"));const itemsBefore=itemEls.slice(selectedIndex+2).reverse();const itemsAfter=itemEls.slice(0,Math.max(selectedIndex-1,0)).reverse();show(...itemEls);hide(this.dropdownRef.el,this.beforeRef.el);if(this.items.folded.length){show(this.afterRef.el);itemEls.forEach((el)=>el.classList.remove("o_first"));}else{hide(this.afterRef.el);itemEls[0]?.classList.add("o_first");}
this.items.before=[];this.items.after=[...this.items.folded];const itemsToAssign=this.getAllItems().filter((item)=>!item.isFolded);while(this.areItemsWrapping()){if(itemsBefore.length){show(this.beforeRef.el);hide(itemsBefore.shift());this.items.before.push(itemsToAssign.shift());}else if(itemsAfter.length){show(this.afterRef.el);hide(itemsAfter.pop());this.items.after.unshift(itemsToAssign.pop());}else{show(this.dropdownRef.el);hide(this.beforeRef.el,this.afterRef.el,...itemEls);break;}}}
areItemsWrapping(){const root=this.rootRef.el;const firstItem=root.querySelector(":scope > :not(.d-none)");if(!firstItem){return false;}
const{height:currentHeight}=root.getBoundingClientRect();const{height:targetHeight}=firstItem.getBoundingClientRect();return currentHeight>targetHeight;}
getAllItems(){const{foldField,name,record}=this.props;const currentValue=record.data[name];if(this.field.type==="many2one"){return this.specialData.data.map((option)=>({value:option.id,label:option.display_name,isFolded:option[foldField],isSelected:Boolean(currentValue&&option.id===currentValue[0]),}));}else{let{selection}=this.field;const{visibleSelection}=this.props;if(visibleSelection?.length){selection=selection.filter(([value])=>value===currentValue||visibleSelection.includes(value));}
return selection.map(([value,label])=>({value,label,isFolded:false,isSelected:value===currentValue,}));}}
getCurrentLabel(){return this.getAllItems().find((item)=>item.isSelected)?.label||_t("More");}
getDropdownItemClassNames(item){const classNames=[];if(item.isSelected){classNames.push("active");}
if(item.isSelected||this.props.isDisabled){classNames.push("disabled");}
return classNames.join(" ");}
getItemTooltip(item){if(item.isSelected){return _t("Current state");}
if(this.props.isDisabled){return _t("Not active state");}
return _t("Not active state, click to change it");}
getSortedItems(){const before=[];const after=[];const{true:inline=[],false:folded=[]}=groupBy(this.getAllItems(),(item)=>item.isSelected||!item.isFolded);inline.reverse();after.push(...folded);return{inline,before,after,folded};}
async selectItem(item){const{name,record}=this.props;const value=this.field.type==="many2one"?[item.value,item.label]:item.value;await record.update({[name]:value});await record.save();}
onDropdownItemSelected(ev){this.selectItem(ev.detail.payload);}}
const statusBarField=__exports.statusBarField={component:StatusBarField,displayName:_t("Status"),supportedOptions:[{label:_t("Clickable"),name:"clickable",type:"boolean",default:true,},{label:_t("Fold field"),name:"fold_field",type:"field",availableTypes:["boolean"],help:_t("Boolean field from the model used in the relation, which indicates whether the state is folded or not."),},],supportedTypes:["many2one","selection"],isEmpty:(record,fieldName)=>!record.data[fieldName],extractProps:({attrs,options,viewType},dynamicInfo)=>({isDisabled:!options.clickable||dynamicInfo.readonly,visibleSelection:attrs.statusbar_visible?.trim().split(/\s*,\s*/g),withCommand:viewType==="form",foldField:options.fold_field,domain:dynamicInfo.domain,}),};registry.category("fields").add("statusbar",statusBarField);return __exports;});;

/* /web/static/src/views/fields/text/text_field.js */
odoo.define('@web/views/fields/text/text_field',['@web/core/l10n/translation','@web/core/registry','@web/core/utils/autoresize','@web/core/utils/hooks','@web/views/fields/dynamic_placeholder_hook','@web/views/fields/input_field_hook','@web/views/fields/parsers','@web/views/fields/standard_field_props','@web/views/fields/translation_button','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{useAutoresize}=require("@web/core/utils/autoresize");const{useSpellCheck}=require("@web/core/utils/hooks");const{useDynamicPlaceholder}=require("@web/views/fields/dynamic_placeholder_hook");const{useInputField}=require("@web/views/fields/input_field_hook");const{parseInteger}=require("@web/views/fields/parsers");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{TranslationButton}=require("@web/views/fields/translation_button");const{Component,useExternalListener,useEffect,useRef}=require("@odoo/owl");const TextField=__exports.TextField=class TextField extends Component{static template="web.TextField";static components={TranslationButton,};static props={...standardFieldProps,lineBreaks:{type:Boolean,optional:true},placeholder:{type:String,optional:true},dynamicPlaceholder:{type:Boolean,optional:true},dynamicPlaceholderModelReferenceField:{type:String,optional:true},rowCount:{type:Number,optional:true},};static defaultProps={lineBreaks:true,dynamicPlaceholder:false,rowCount:2,};setup(){this.divRef=useRef("div");this.textareaRef=useRef("textarea");if(this.props.dynamicPlaceholder){this.dynamicPlaceholder=useDynamicPlaceholder(this.textareaRef);useExternalListener(document,"keydown",this.dynamicPlaceholder.onKeydown);useEffect(()=>this.dynamicPlaceholder.updateModel(this.props.dynamicPlaceholderModelReferenceField));}
useInputField({getValue:()=>this.props.record.data[this.props.name]||"",refName:"textarea",preventLineBreaks:!this.props.lineBreaks,});useSpellCheck({refName:"textarea"});useAutoresize(this.textareaRef,{minimumHeight:this.minimumHeight});this.selectionStart=this.props.record.data[this.props.name]?.length||0;}
async onBlur(){this.selectionStart=this.textareaRef.el.selectionStart;}
async onDynamicPlaceholderOpen(){await this.dynamicPlaceholder.open({validateCallback:this.onDynamicPlaceholderValidate.bind(this),});}
get isTranslatable(){return this.props.record.fields[this.props.name].translate;}
get minimumHeight(){return this.props.lineBreaks?50:0;}
get rowCount(){return this.props.lineBreaks?this.props.rowCount:1;}
async onDynamicPlaceholderValidate(chain,defaultValue){if(chain){this.textareaRef.el.focus();const dynamicPlaceholder=` {{object.${chain}${
                defaultValue?.length ? `|||${defaultValue}` : ""
            }}}`;this.textareaRef.el.setRangeText(dynamicPlaceholder,this.selectionStart,this.selectionStart,"end");this.textareaRef.el.dispatchEvent(new InputEvent("input"));this.textareaRef.el.dispatchEvent(new KeyboardEvent("keydown"));this.textareaRef.el.focus();}}}
const textField=__exports.textField={component:TextField,displayName:_t("Multiline Text"),supportedOptions:[{label:_t("Enable line breaks"),name:"line_breaks",type:"boolean",default:true,},],supportedTypes:["html","text"],extractProps:({attrs,options})=>({placeholder:attrs.placeholder,dynamicPlaceholder:options?.dynamic_placeholder||false,dynamicPlaceholderModelReferenceField:options?.dynamic_placeholder_model_reference_field||"",rowCount:attrs.rows&&parseInteger(attrs.rows),lineBreaks:options?.line_breaks!==undefined?Boolean(options.line_breaks):true,}),};registry.category("fields").add("text",textField);const ListTextField=__exports.ListTextField=class ListTextField extends TextField{static defaultProps={...super.defaultProps,rowCount:1,};get minimumHeight(){return 0;}
get rowCount(){return this.props.rowCount;}}
const listTextField=__exports.listTextField={...textField,component:ListTextField,};registry.category("fields").add("list.text",listTextField);return __exports;});;

/* /web/static/src/views/fields/timezone_mismatch/timezone_mismatch_field.js */
odoo.define('@web/views/fields/timezone_mismatch/timezone_mismatch_field',['@web/core/l10n/dates','@web/core/l10n/translation','@web/core/registry','@web/views/fields/selection/selection_field'],function(require){'use strict';let __exports={};const{formatDateTime}=require("@web/core/l10n/dates");const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{selectionField,SelectionField}=require("@web/views/fields/selection/selection_field");const{DateTime}=luxon;const TimezoneMismatchField=__exports.TimezoneMismatchField=class TimezoneMismatchField extends SelectionField{static template="web.TimezoneMismatchField";static props={...super.props,tzOffsetField:{type:String,optional:true},mismatchTitle:{type:String,optional:true},};static defaultProps={...super.defaultProps,tzOffsetField:"tz_offset",mismatchTitle:_t("Timezone Mismatch : This timezone is different from that of your browser.\nPlease, set the same timezone as your browser's to avoid time discrepancies in your system."),};get mismatch(){const userOffset=this.props.record.data[this.props.tzOffsetField];if(userOffset&&this.props.record.data[this.props.name]){const offset=-new Date().getTimezoneOffset();let browserOffset=offset<0?"-":"+";browserOffset+=Math.abs(offset/60).toFixed(0).padStart(2,"0");browserOffset+=Math.abs(offset%60).toFixed(0).padStart(2,"0");return browserOffset!==userOffset;}else if(!this.props.record.data[this.props.name]){return true;}
return false;}
get mismatchTitle(){if(!this.props.record.data[this.props.name]){return _t("Set a timezone on your user");}
return this.props.mismatchTitle;}
get options(){if(!this.mismatch){return super.options;}
return super.options.map((option)=>{const[value,label]=option;if(value===this.props.record.data[this.props.name]){const offset=this.props.record.data[this.props.tzOffsetField].match(/([+-])([0-9]{2})([0-9]{2})/);const sign=offset[1]==="-"?-1:1;const userOffset=sign*(parseInt(offset[2])*60+parseInt(offset[3]));const browserOffset=-new Date().getTimezoneOffset();const userUTCDatetime=DateTime.utc().plus({minutes:userOffset-browserOffset,});return[value,`${label} (${formatDateTime(userUTCDatetime)})`];}
return[value,label];});}}
const timezoneMismatchField=__exports.timezoneMismatchField={...selectionField,component:TimezoneMismatchField,additionalClasses:["d-flex"],supportedOptions:[...(selectionField.supportedOptions||[]),{label:_t("Mismatch title"),name:"mismatch_title",type:"string",},{label:_t("Timezone offset field"),name:"tz_offset_field",type:"field",availableTypes:["char"],},],extractProps({options}){const props=selectionField.extractProps(...arguments);props.tzOffsetField=options.tz_offset_field;props.mismatchTitle=options.mismatch_title;return props;},};registry.category("fields").add("timezone_mismatch",timezoneMismatchField);return __exports;});;

/* /web/static/src/views/fields/translation_button.js */
odoo.define('@web/views/fields/translation_button',['@web/core/l10n/localization','@web/core/utils/hooks','@web/core/user','@web/views/fields/translation_dialog','@odoo/owl'],function(require){'use strict';let __exports={};const{localization}=require("@web/core/l10n/localization");const{useOwnedDialogs}=require("@web/core/utils/hooks");const{user}=require("@web/core/user");const{TranslationDialog}=require("@web/views/fields/translation_dialog");const{Component}=require("@odoo/owl");__exports.useTranslationDialog=useTranslationDialog;function useTranslationDialog(){const addDialog=useOwnedDialogs();async function openTranslationDialog({record,fieldName}){const saved=await record.save();if(!saved){return;}
const{resModel,resId}=record;addDialog(TranslationDialog,{fieldName:fieldName,resId:resId,resModel:resModel,userLanguageValue:record.data[fieldName]||"",isComingFromTranslationAlert:false,onSave:async()=>{await record.load();},});}
return openTranslationDialog;}
const TranslationButton=__exports.TranslationButton=class TranslationButton extends Component{static template="web.TranslationButton";static props={fieldName:{type:String},record:{type:Object},};setup(){this.translationDialog=useTranslationDialog();}
get isMultiLang(){return localization.multiLang;}
get lang(){return new Intl.Locale(user.lang).language.toUpperCase();}
onClick(){const{fieldName,record}=this.props;this.translationDialog({fieldName,record});}}
return __exports;});;

/* /web/static/src/views/fields/translation_dialog.js */
odoo.define('@web/views/fields/translation_dialog',['@web/core/dialog/dialog','@web/core/user','@web/core/utils/hooks','@web/core/l10n/translation','@web/core/l10n/utils','@odoo/owl'],function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{user}=require("@web/core/user");const{useService}=require("@web/core/utils/hooks");const{loadLanguages,_t}=require("@web/core/l10n/translation");const{jsToPyLocale}=require("@web/core/l10n/utils");const{Component,onWillStart}=require("@odoo/owl");const TranslationDialog=__exports.TranslationDialog=class TranslationDialog extends Component{static template="web.TranslationDialog";static components={Dialog};static props={fieldName:String,resId:Number,resModel:String,userLanguageValue:{type:String,optional:true},isComingFromTranslationAlert:{type:Boolean,optional:true},onSave:Function,close:Function,isText:{type:Boolean,optional:true},showSource:{type:Boolean,optional:true},};setup(){super.setup();this.title=_t("Translate: %s",this.props.fieldName);this.user=user;this.orm=useService("orm");this.terms=[];this.updatedTerms={};onWillStart(async()=>{const languages=await loadLanguages(this.orm);const[translations,context]=await this.loadTranslations(languages);let id=1;translations.forEach((t)=>(t.id=id++));this.props.isText=context.translation_type==="text";this.props.showSource=context.translation_show_source;this.terms=translations.map((term)=>{const relatedLanguage=languages.find((l)=>l[0]===term.lang);const termInfo={...term,langName:relatedLanguage[1],value:term.value||"",};if(term.lang===jsToPyLocale(user.lang)&&!this.props.showSource&&!this.props.isComingFromTranslationAlert){this.updatedTerms[term.id]=this.props.userLanguageValue;termInfo.value=this.props.userLanguageValue;}
return termInfo;});this.terms.sort((a,b)=>a.langName.localeCompare(b.langName));});}
get domain(){const domain=this.props.domain;if(this.props.searchName){domain.push(["name","=",`${this.props.searchName}`]);}
return domain;}
async loadTranslations(languages){return this.orm.call(this.props.resModel,"get_field_translations",[[this.props.resId],this.props.fieldName,]);}
async onSave(){const translations={};this.terms.map((term)=>{const updatedTermValue=this.updatedTerms[term.id];if(term.id in this.updatedTerms&&term.value!==updatedTermValue){if(this.props.showSource){if(!translations[term.lang]){translations[term.lang]={};}
translations[term.lang][term.source]=updatedTermValue||term.source;}else{translations[term.lang]=updatedTermValue||false;}}});await this.orm.call(this.props.resModel,"update_field_translations",[[this.props.resId],this.props.fieldName,translations,]);await this.props.onSave();this.props.close();}}
return __exports;});;

/* /web/static/src/views/fields/url/url_field.js */
odoo.define('@web/views/fields/url/url_field',['@web/core/registry','@web/core/l10n/translation','@web/views/fields/input_field_hook','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{_t}=require("@web/core/l10n/translation");const{useInputField}=require("@web/views/fields/input_field_hook");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const UrlField=__exports.UrlField=class UrlField extends Component{static template="web.UrlField";static props={...standardFieldProps,placeholder:{type:String,optional:true},text:{type:String,optional:true},websitePath:{type:Boolean,optional:true},};setup(){useInputField({getValue:()=>this.value});}
get value(){return this.props.record.data[this.props.name]||"";}
get formattedHref(){let value=this.props.record.data[this.props.name];if(value&&!this.props.websitePath){const regex=/^((ftp|http)s?:\/)?\//i;value=!regex.test(value)?`http://${value}`:value;}
return value;}}
const urlField=__exports.urlField={component:UrlField,displayName:_t("URL"),supportedOptions:[{label:_t("Is a website path"),name:"website_path",type:"boolean",help:_t("If True, the url will be used as it is, without any prefix added to it."),},],supportedTypes:["char"],extractProps:({attrs,options})=>({text:attrs.text,websitePath:options.website_path,placeholder:attrs.placeholder,}),};registry.category("fields").add("url",urlField);class FormUrlField extends UrlField{static template="web.FormUrlField";}
const formUrlField=__exports.formUrlField={...urlField,component:FormUrlField,};registry.category("fields").add("form.url",formUrlField);return __exports;});;

/* /web/static/src/views/fields/x2many/list_x2many_field.js */
odoo.define('@web/views/fields/x2many/list_x2many_field',['@web/core/registry','@web/views/fields/formatters','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{formatX2many}=require("@web/views/fields/formatters");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const ListX2ManyField=__exports.ListX2ManyField=class ListX2ManyField extends Component{static template="web.ListX2ManyField";static props={...standardFieldProps};get formattedValue(){return formatX2many(this.props.record.data[this.props.name]);}}
const listX2ManyField=__exports.listX2ManyField={component:ListX2ManyField,useSubView:false,};registry.category("fields").add("list.one2many",listX2ManyField);registry.category("fields").add("list.many2many",listX2ManyField);return __exports;});;

/* /web/static/src/views/fields/x2many/x2many_field.js */
odoo.define('@web/views/fields/x2many/x2many_field',['@web/core/context','@web/core/l10n/translation','@web/core/pager/pager','@web/core/registry','@web/core/utils/hooks','@web/model/relational_model/utils','@web/views/fields/relational_utils','@web/views/fields/standard_field_props','@web/views/kanban/kanban_renderer','@web/views/list/list_renderer','@web/views/utils','@web/views/view_button/view_button','@odoo/owl'],function(require){'use strict';let __exports={};const{makeContext}=require("@web/core/context");const{_t}=require("@web/core/l10n/translation");const{Pager}=require("@web/core/pager/pager");const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{getFieldDomain}=require("@web/model/relational_model/utils");const{useActiveActions,useAddInlineRecord,useOpenX2ManyRecord,useSelectCreate,useX2ManyCrud,}=require("@web/views/fields/relational_utils");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{KanbanRenderer}=require("@web/views/kanban/kanban_renderer");const{ListRenderer}=require("@web/views/list/list_renderer");const{computeViewClassName}=require("@web/views/utils");const{ViewButton}=require("@web/views/view_button/view_button");const{Component}=require("@odoo/owl");const X2ManyField=__exports.X2ManyField=class X2ManyField extends Component{static template="web.X2ManyField";static components={Pager,KanbanRenderer,ListRenderer,ViewButton};static props={...standardFieldProps,addLabel:{type:String,optional:true},editable:{type:String,optional:true},viewMode:{type:String,optional:true},widget:{type:String,optional:true},crudOptions:{type:Object,optional:true},string:{type:String,optional:true},relatedFields:{type:Object,optional:true},views:{type:Object,optional:true},domain:{type:[Array,Function],optional:true},context:{type:Object},};setup(){this.field=this.props.record.fields[this.props.name];const{saveRecord,updateRecord,removeRecord}=useX2ManyCrud(()=>this.list,this.isMany2Many);this.archInfo=this.props.views?.[this.props.viewMode]||{};const classes=this.props.viewMode?["o_field_x2many",`o_field_x2many_${this.props.viewMode}`]:["o_field_x2many"];this.className=computeViewClassName(this.props.viewMode,this.archInfo.xmlDoc,classes);const{activeActions,creates}=this.archInfo;if(this.props.viewMode==="kanban"){this.creates=creates.length?creates:[{type:"create",string:this.props.addLabel||_t("Add"),class:"o-kanban-button-new",},];}
const subViewActiveActions=activeActions;this.activeActions=useActiveActions({crudOptions:Object.assign({},this.props.crudOptions,{onDelete:removeRecord,edit:this.props.record.isInEdition,}),fieldType:this.isMany2Many?"many2many":"one2many",subViewActiveActions,getEvalParams:(props)=>{return{evalContext:props.record.evalContext,readonly:props.readonly,};},});this.addInLine=useAddInlineRecord({addNew:(...args)=>this.list.addNewRecord(...args),});const openRecord=useOpenX2ManyRecord({resModel:this.list.resModel,activeField:this.activeField,activeActions:this.activeActions,getList:()=>this.list,saveRecord,updateRecord,isMany2Many:this.isMany2Many,});this._openRecord=(params)=>{const activeElement=document.activeElement;openRecord({...params,onClose:()=>{if(activeElement){activeElement.focus();}},});};this.canOpenRecord=this.props.viewMode==="list"?!(this.archInfo.editable||this.props.editable):true;const selectCreate=useSelectCreate({resModel:this.props.record.data[this.props.name].resModel,activeActions:this.activeActions,onSelected:(resIds)=>saveRecord(resIds),onCreateEdit:({context})=>this._openRecord({context}),onUnselect:this.isMany2Many?undefined:()=>saveRecord(),});this.selectCreate=(params)=>{const p=Object.assign({},params);const currentIds=this.props.record.data[this.props.name].currentIds.filter((id)=>typeof id==="number");p.domain=[...(p.domain||[]),"!",["id","in",currentIds]];return selectCreate(p);};this.action=useService("action");}
get activeField(){return{fields:this.props.relatedFields,views:this.props.views,viewMode:this.props.viewMode,string:this.props.string,};}
get displayControlPanelButtons(){return(this.props.viewMode==="kanban"&&("link"in this.activeActions?this.activeActions.link:this.activeActions.create)&&!this.props.readonly);}
get isMany2Many(){return this.field.type==="many2many"||this.props.widget==="many2many";}
get list(){return this.props.record.data[this.props.name];}
get nestedKeyOptionalFieldsData(){return{field:this.props.name,model:this.props.record.resModel,viewMode:"form",};}
get pagerProps(){const list=this.list;return{offset:list.offset,limit:list.limit,total:list.count,onUpdate:async({offset,limit})=>{const initialLimit=this.list.limit;const leaved=await list.leaveEditMode();if(leaved){if(initialLimit===limit&&initialLimit===this.list.limit+1){offset-=1;limit-=1;}
await list.load({limit,offset});this.render();}},withAccessKey:false,};}
get rendererProps(){const{archInfo}=this;const props={archInfo,list:this.list,openRecord:this.openRecord.bind(this),};if(this.props.viewMode==="kanban"){const recordsDraggable=!this.props.readonly&&archInfo.recordsDraggable;props.archInfo={...archInfo,recordsDraggable};props.readonly=this.props.readonly;props.deleteRecord=(record)=>{if(this.isMany2Many){return this.list.forget(record);}
return this.list.delete(record);};return props;}
const editable=(this.archInfo.activeActions.edit&&archInfo.editable)||this.props.editable;props.activeActions=this.activeActions;props.cycleOnTab=false;props.editable=!this.props.readonly&&editable;props.nestedKeyOptionalFieldsData=this.nestedKeyOptionalFieldsData;props.onAdd=(params)=>{params.editable=!this.props.readonly&&("editable"in params?params.editable:editable);this.onAdd(params);};props.onOpenFormView=this.switchToForm.bind(this);props.hasOpenFormViewButton=archInfo.editable?archInfo.openFormView:false;return props;}
async switchToForm(record){await this.props.record.save();this.action.doAction({type:"ir.actions.act_window",views:[[false,"form"]],res_id:record.resId,res_model:this.list.resModel,},{props:{resIds:this.list.resIds},});}
async onAdd({context,editable}={}){context=makeContext([this.props.context,context]);if(this.isMany2Many){const domain=getFieldDomain(this.props.record,this.props.name,this.props.domain);const{string}=this.props;const title=_t("Add: %s",string);return this.selectCreate({domain,context,title});}
if(editable){const editedRecord=this.list.editedRecord;if(editedRecord){const proms=[];this.list.model.bus.trigger("NEED_LOCAL_CHANGES",{proms});await Promise.all([...proms,editedRecord._updatePromise]);await this.list.leaveEditMode({canAbandon:false});}
if(!this.list.editedRecord){return this.addInLine({context,editable});}
return;}
return this._openRecord({context});}
async openRecord(record){if(this.canOpenRecord){return this._openRecord({record,context:this.props.context,mode:this.props.readonly?"readonly":"edit",});}}}
const x2ManyField=__exports.x2ManyField={component:X2ManyField,displayName:_t("Relational table"),supportedTypes:["one2many","many2many"],useSubView:true,extractProps:({attrs,relatedFields,viewMode,views,widget,options,string},dynamicInfo)=>{const props={addLabel:attrs["add-label"],context:dynamicInfo.context,domain:dynamicInfo.domain,crudOptions:options,string,};if(viewMode){props.views=views;props.viewMode=viewMode;props.relatedFields=relatedFields;}
if(widget){props.widget=widget;}
return props;},};registry.category("fields").add("one2many",x2ManyField);registry.category("fields").add("many2many",x2ManyField);return __exports;});;

/* /web/static/src/views/form/button_box/button_box.js */
odoo.define('@web/views/form/button_box/button_box',['@web/core/utils/hooks','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@odoo/owl'],function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{Component,onWillRender}=require("@odoo/owl");const ButtonBox=__exports.ButtonBox=class ButtonBox extends Component{static template="web.Form.ButtonBox";static components={Dropdown,DropdownItem};static props={slots:Object,class:{type:String,optional:true},};static defaultProps={class:"",};setup(){const ui=useService("ui");onWillRender(()=>{const maxVisibleButtons=[0,0,0,7,4,5,8][ui.size]??8;const allVisibleButtons=Object.entries(this.props.slots).filter(([_,slot])=>this.isSlotVisible(slot)).map(([slotName])=>slotName);if(allVisibleButtons.length<=maxVisibleButtons){this.visibleButtons=allVisibleButtons;this.additionalButtons=[];this.isFull=allVisibleButtons.length===maxVisibleButtons;}else{const splitIndex=Math.max(maxVisibleButtons-1,0);this.visibleButtons=allVisibleButtons.slice(0,splitIndex);this.additionalButtons=allVisibleButtons.slice(splitIndex);this.isFull=true;}});}
isSlotVisible(slot){return!("isVisible"in slot)||slot.isVisible;}}
return __exports;});;

/* /web/static/src/views/form/form_arch_parser.js */
odoo.define('@web/views/form/form_arch_parser',['@web/core/utils/strings','@web/core/utils/xml','@web/views/fields/field','@web/views/utils','@web/views/widgets/widget'],function(require){'use strict';let __exports={};const{exprToBoolean}=require("@web/core/utils/strings");const{visitXML}=require("@web/core/utils/xml");const{Field}=require("@web/views/fields/field");const{getActiveActions}=require("@web/views/utils");const{Widget}=require("@web/views/widgets/widget");const FormArchParser=__exports.FormArchParser=class FormArchParser{parse(xmlDoc,models,modelName){const jsClass=xmlDoc.getAttribute("js_class");const disableAutofocus=exprToBoolean(xmlDoc.getAttribute("disable_autofocus")||"");const activeActions=getActiveActions(xmlDoc);const fieldNodes={};const widgetNodes={};let widgetNextId=0;const fieldNextIds={};let autofocusFieldId=null;visitXML(xmlDoc,(node)=>{if(node.tagName==="field"){const fieldInfo=Field.parseFieldNode(node,models,modelName,"form",jsClass);if(!(fieldInfo.name in fieldNextIds)){fieldNextIds[fieldInfo.name]=0;}
const fieldId=`${fieldInfo.name}_${fieldNextIds[fieldInfo.name]++}`;fieldNodes[fieldId]=fieldInfo;node.setAttribute("field_id",fieldId);if(exprToBoolean(node.getAttribute("default_focus")||"")){autofocusFieldId=fieldId;}
if(fieldInfo.type==="properties"){activeActions.addPropertyFieldValue=true;}
return false;}else if(node.tagName==="widget"){const widgetInfo=Widget.parseWidgetNode(node);const widgetId=`widget_${++widgetNextId}`;widgetNodes[widgetId]=widgetInfo;node.setAttribute("widget_id",widgetId);}});return{activeActions,autofocusFieldId,disableAutofocus,fieldNodes,widgetNodes,xmlDoc,};}}
return __exports;});;

/* /web/static/src/views/form/form_cog_menu/form_cog_menu.js */
odoo.define('@web/views/form/form_cog_menu/form_cog_menu',['@web/search/cog_menu/cog_menu','@web/views/form/status_bar_dropdown_items/status_bar_dropdown_items'],function(require){'use strict';let __exports={};const{CogMenu}=require("@web/search/cog_menu/cog_menu");const{StatusBarDropdownItems}=require("@web/views/form/status_bar_dropdown_items/status_bar_dropdown_items");const FormCogMenu=__exports.FormCogMenu=class FormCogMenu extends CogMenu{static template="web.FormCogMenu";static components={...CogMenu.components,StatusBarDropdownItems,};static props={...CogMenu.props,slots:{type:Object,optional:true},};}
return __exports;});;

/* /web/static/src/views/form/form_compiler.js */
odoo.define('@web/views/form/form_compiler',['@web/core/registry','@web/core/ui/ui_service','@web/core/utils/xml','@web/views/utils','@web/views/view_compiler','@web/core/utils/strings'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{SIZES}=require("@web/core/ui/ui_service");const{append,combineAttributes,createElement,createTextNode,getTag,}=require("@web/core/utils/xml");const{toStringExpression}=require("@web/views/utils");const{copyAttributes,getModifier,isComponentNode,isTextNode,makeSeparator,}=require("@web/views/view_compiler");const{ViewCompiler}=require("@web/views/view_compiler");const{exprToBoolean}=require("@web/core/utils/strings");const compilersRegistry=registry.category("form_compilers");function appendAttf(el,attr,string){const attrKey=`t-attf-${attr}`;const attrVal=el.getAttribute(attrKey);el.setAttribute(attrKey,appendToExpr(attrVal,string));}
function appendToExpr(expr,string){const re=/{{.*}}/;const oldString=re.exec(expr);return oldString?`${oldString} {{${string} }}`:`{{${string} }}`;}
__exports.objectToString=objectToString;function objectToString(obj){return`{${Object.entries(obj)
        .map((t) => t.join(":"))
        .join(",")}}`;}
const FormCompiler=__exports.FormCompiler=class FormCompiler extends ViewCompiler{setup(){this.encounteredFields={};this.labels={};this.noteBookId=0;this.compilers.push(...compilersRegistry.getAll(),{selector:"div[name='button_box']",fn:this.compileButtonBox},{selector:"footer",fn:this.compileFooter},{selector:"form",fn:this.compileForm,doNotCopyAttributes:true},{selector:"group",fn:this.compileGroup},{selector:"header",fn:this.compileHeader},{selector:"label",fn:this.compileLabel,doNotCopyAttributes:true},{selector:"notebook",fn:this.compileNotebook},{selector:"setting",fn:this.compileSetting},{selector:"separator",fn:this.compileSeparator},{selector:"sheet",fn:this.compileSheet});}
compile(key,params={}){const compiled=super.compile(...arguments);if(!params.isSubView){compiled.children[0].setAttribute("t-ref","compiled_view_root");}
return compiled;}
createLabelFromField(fieldId,fieldName,fieldString,label,params){let labelText=label.textContent||fieldString;if(label.hasAttribute("data-no-label")){labelText=toStringExpression("");}else{labelText=labelText?toStringExpression(labelText):`__comp__.props.record.fields['${fieldName}'].string`;}
const formLabel=createElement("FormLabel",{id:`'${fieldId}'`,fieldName:`'${fieldName}'`,record:`__comp__.props.record`,fieldInfo:`__comp__.props.archInfo.fieldNodes['${fieldId}']`,className:`"${label.className}"`,string:labelText,});const condition=label.getAttribute("t-if");if(condition){formLabel.setAttribute("t-if",condition);}
return formLabel;}
getLabels(fieldName){const labels=this.labels[fieldName]||[];this.labels[fieldName]=null;return labels;}
pushLabel(fieldName,label){this.labels[fieldName]=this.labels[fieldName]||[];this.labels[fieldName].push(label);}
compileButtonBox(el,params){if(!el.children.length){return this.compileGenericNode(el,params);}
el.classList.remove("oe_button_box");const buttonBox=createElement("ButtonBox");buttonBox.setAttribute("t-if","!__comp__.env.inDialog");let slotId=0;let hasContent=false;for(const child of el.children){const invisible=getModifier(child,"invisible");if(!params.compileInvisibleNodes&&(invisible==="True"||invisible==="1")){continue;}
hasContent=true;let isVisibleExpr;if(!invisible||invisible==="False"||invisible==="0"){isVisibleExpr="true";}else if(invisible==="True"||invisible==="1"){isVisibleExpr="false";}else{isVisibleExpr=`!__comp__.evaluateBooleanExpr(${JSON.stringify(
                    invisible
                )},__comp__.props.record.evalContextWithVirtualIds)`;}
const mainSlot=createElement("t",{"t-set-slot":`slot_${slotId++}`,isVisible:isVisibleExpr,});if(child.tagName==="button"||child.children.tagName==="button"){child.classList.add("oe_stat_button","btn","btn-outline-secondary","flex-grow-1","flex-lg-grow-0");}
if(child.tagName==="field"){child.classList.add("d-inline-block","mb-0","z-0");}
append(mainSlot,this.compileNode(child,params,false));append(buttonBox,mainSlot);}
return hasContent?buttonBox:"";}
compileButton(el,params){return super.compileButton(el,params);}
compileField(el,params){const field=super.compileField(el,params);const fieldName=el.getAttribute("name");const fieldString=el.getAttribute("string");const fieldId=el.getAttribute("field_id");const labelsForAttr=el.getAttribute("id")||fieldName;const labels=this.getLabels(labelsForAttr);const dynamicLabel=(label)=>{const formLabel=this.createLabelFromField(fieldId,fieldName,fieldString,label,{...params,currentFieldArchNode:el,});if(formLabel){label.replaceWith(formLabel);}else{label.remove();}
return formLabel;};for(const label of labels){dynamicLabel(label);}
this.encounteredFields[fieldName]=dynamicLabel;return field;}
compileForm(el,params){let sheetNode=null;for(const sheet of el.querySelectorAll("sheet")){if(sheet.closest("form")===el){sheetNode=sheet;break;}}
const displayClasses=sheetNode?`d-flex d-print-block {{ __comp__.uiService.size < ${SIZES.XXL} ? "flex-column" : "flex-nowrap h-100" }}`:"d-block";const stateClasses="{{ __comp__.props.record.dirty ? 'o_form_dirty' : !__comp__.props.record.isNew ? 'o_form_saved' : '' }}";const form=createElement("div",{class:"o_form_renderer","t-att-class":"__comp__.props.class","t-attf-class":`{{__comp__.props.record.isInEdition ? 'o_form_editable' : 'o_form_readonly'}} ${displayClasses} ${stateClasses}`,});if(!sheetNode){for(const child of el.childNodes){if(child.attributes?.name?.value!=="button_box"){append(form,this.compileNode(child,params));}}
form.classList.add("o_form_nosheet");}else{let compiledList=[];for(const child of el.childNodes){const compiled=this.compileNode(child,params);if(getTag(child,true)==="sheet"){append(form,compiled);compiled.prepend(...compiledList);compiledList=[];}else if(compiled){compiledList.push(compiled);}}
append(form,compiledList);}
return form;}
compileFooter(el,params){const footer=createElement("t");const replace=el.getAttribute("replace");if(replace&&!exprToBoolean(replace)){footer.append(createElement("t",{"t-call":"web.DefaultButtonsSlot","t-call-context":"{ props: __comp__.props }",}));}
copyAttributes(el,footer);for(const child of el.childNodes){const compiled=this.compileNode(child,params);if(compiled){footer.append(compiled);}}
return footer;}
compileGroup(el,params){const isOuterGroup=[...el.children].some((c)=>getTag(c,true)==="group");const formGroup=createElement(isOuterGroup?"OuterGroup":"InnerGroup");let slotId=0;let sequence=0;if(el.hasAttribute("col")){formGroup.setAttribute("maxCols",el.getAttribute("col"));}
if(el.hasAttribute("string")){const titleSlot=createElement("t",{"t-set-slot":"title"},[makeSeparator(el.getAttribute("string")),]);append(formGroup,titleSlot);}
let forceNewline=false;for(const child of el.children){if(getTag(child,true)==="newline"){forceNewline=true;continue;}
const invisible=getModifier(child,"invisible");if(!params.compileInvisibleNodes&&(invisible==="True"||invisible==="1")){continue;}
const mainSlot=createElement("t",{"t-set-slot":`item_${slotId++}`,type:"'item'",sequence:sequence++,"t-slot-scope":"scope",});let itemSpan=parseInt(child.getAttribute("colspan")||"1",10);if(forceNewline){mainSlot.setAttribute("newline",true);forceNewline=false;}
if(getTag(child,true)==="separator"){itemSpan=parseInt(formGroup.getAttribute("maxCols")||2,10);}
if(child.matches("div[class='clearfix']:empty")){itemSpan=parseInt(formGroup.getAttribute("maxCols")||2,10);}
let slotContent;if(getTag(child,true)==="field"){const addLabel=child.hasAttribute("nolabel")?child.getAttribute("nolabel")!=="1":true;slotContent=this.compileNode(child,{...params,currentSlot:mainSlot},false);if(slotContent&&addLabel&&!isOuterGroup&&!isTextNode(slotContent)){itemSpan=itemSpan===1?itemSpan+1:itemSpan;const fieldName=child.getAttribute("name");const fieldId=slotContent.getAttribute("id")||fieldName;const props={id:`${fieldId}`,fieldName:`'${fieldName}'`,record:`__comp__.props.record`,string:child.hasAttribute("string")?toStringExpression(child.getAttribute("string")):`__comp__.props.record.fields.${fieldName}.string`,fieldInfo:`__comp__.props.archInfo.fieldNodes[${fieldId}]`,};mainSlot.setAttribute("props",objectToString(props));mainSlot.setAttribute("Component","__comp__.constructor.components.FormLabel");mainSlot.setAttribute("subType","'item_component'");}}else{if(child.classList.contains("o_wrap_label")||child.classList.contains("o_td_label")||getTag(child,true)==="label"){mainSlot.setAttribute("subType","'label'");child.classList.remove("o_wrap_label");}
slotContent=this.compileNode(child,{...params,currentSlot:mainSlot},false);}
if(slotContent&&!isTextNode(slotContent)){let isVisibleExpr;if(!invisible||invisible==="False"||invisible==="0"){isVisibleExpr="true";}else if(invisible==="True"||invisible==="1"){isVisibleExpr="false";}else{isVisibleExpr=`!__comp__.evaluateBooleanExpr(${JSON.stringify(
                        invisible
                    )},__comp__.props.record.evalContextWithVirtualIds)`;}
mainSlot.setAttribute("isVisible",isVisibleExpr);if(itemSpan>0){mainSlot.setAttribute("itemSpan",`${itemSpan}`);}
const groupClassExpr=`scope && scope.className`;if(isComponentNode(slotContent)){if(getTag(slotContent)==="FormLabel"){mainSlot.prepend(createElement("t",{"t-set":"addClass","t-value":groupClassExpr,}));combineAttributes(slotContent,"className",`(addClass ? " " + addClass : "")`,`+`);}else if(getTag(child,true)!=="button"){if(slotContent.hasAttribute("class")){mainSlot.prepend(createElement("t",{"t-set":"addClass","t-value":groupClassExpr,}));combineAttributes(slotContent,"class",`(addClass ? " " + addClass : "")`,`+`);}else{slotContent.setAttribute("class",groupClassExpr);}}}else{appendAttf(slotContent,"class",`${groupClassExpr} || ""`);}
append(mainSlot,slotContent);append(formGroup,mainSlot);}}
return formGroup;}
compileHeader(el,params){const statusBar=createElement("div");statusBar.className="o_form_statusbar position-relative d-flex justify-content-between mb-0 mb-md-2 pb-2 pb-md-0";const buttons=[];const others=[];for(const child of el.childNodes){const compiled=this.compileNode(child,params);if(!compiled||isTextNode(compiled)){continue;}
if(getTag(child,true)==="field"&&!child.classList.contains("btn")){compiled.setAttribute("showTooltip",true);others.push(compiled);}else{if(compiled.tagName==="ViewButton"){compiled.setAttribute("defaultRank","'btn-secondary'");}
buttons.push(compiled);}}
let slotId=0;let statusBarButtons;if(params.asDropdownItems){statusBarButtons=createElement("StatusBarDropdownItems");}else{statusBarButtons=createElement("StatusBarButtons",{"t-if":"!__comp__.env.isSmall or __comp__.env.inDialog",});}
for(const button of buttons){const slot=createElement("t",{"t-set-slot":`button_${slotId++}`,isVisible:button.getAttribute("t-if")||true,});append(slot,button);append(statusBarButtons,slot);}
if(params.asDropdownItems){return statusBarButtons;}
append(statusBar,statusBarButtons);append(statusBar,others);return statusBar;}
compileLabel(el,params){const forAttr=el.getAttribute("for");if(forAttr){let label=createElement("label");copyAttributes(el,label);const string=el.getAttribute("string");if(string){append(label,createTextNode(string));}else if(string===""){label.setAttribute("data-no-label","true");}
if(this.encounteredFields[forAttr]){label=this.encounteredFields[forAttr](label);}else{this.pushLabel(forAttr,label);}
return label;}
const res=this.compileGenericNode(el,params);copyAttributes(el,res);return res;}
compileNotebook(el,params){const noteBookId=this.noteBookId++;const noteBook=createElement("Notebook");const pageAnchors=[];const noteBookAnchors={};if(el.hasAttribute("class")){noteBook.setAttribute("className",toStringExpression(el.getAttribute("class")));el.removeAttribute("class");}
noteBook.setAttribute("defaultPage",`__comp__.props.record.isNew ? undefined : __comp__.props.activeNotebookPages[${noteBookId}]`);noteBook.setAttribute("onPageUpdate",`(page) => __comp__.props.onNotebookPageChange(${noteBookId}, page)`);for(const child of el.children){if(getTag(child,true)!=="page"){continue;}
const invisible=getModifier(child,"invisible");if(!params.compileInvisibleNodes&&(invisible==="True"||invisible==="1")){continue;}
const pageSlot=createElement("t");append(noteBook,pageSlot);const pageId=`page_${this.id++}`;const pageTitle=toStringExpression(child.getAttribute("string")||child.getAttribute("name")||"");const pageNodeName=toStringExpression(child.getAttribute("name")||"");pageSlot.setAttribute("t-set-slot",pageId);pageSlot.setAttribute("title",pageTitle);pageSlot.setAttribute("name",pageNodeName);if(child.className){pageSlot.setAttribute("className",`"${child.className}"`);}
if(child.getAttribute("autofocus")==="autofocus"){noteBook.setAttribute("defaultPage",`__comp__.props.record.isNew ? "${pageId}" : (__comp__.props.activeNotebookPages[${noteBookId}] || "${pageId}")`);}
for(const anchor of child.querySelectorAll("[href^=\\#]")){const anchorValue=CSS.escape(anchor.getAttribute("href").substring(1));if(!anchorValue.length){continue;}
pageAnchors.push(anchorValue);noteBookAnchors[anchorValue]={origin:`'${pageId}'`,};}
let isVisibleExpr;if(!invisible||invisible==="False"||invisible==="0"){isVisibleExpr="true";}else if(invisible==="True"||invisible==="1"){isVisibleExpr="false";}else{isVisibleExpr=`!__comp__.evaluateBooleanExpr(${JSON.stringify(
                    invisible
                )},__comp__.props.record.evalContextWithVirtualIds)`;}
pageSlot.setAttribute("isVisible",isVisibleExpr);for(const contents of child.children){append(pageSlot,this.compileNode(contents,{...params,currentSlot:pageSlot}));}}
if(pageAnchors.length){for(const anchor of pageAnchors){let pageId=1;for(const child of el.children){if(child.querySelector(`#${anchor}`)){noteBookAnchors[anchor].target=`'page_${pageId}'`;noteBookAnchors[anchor]=objectToString(noteBookAnchors[anchor]);break;}
pageId++;}}
noteBook.setAttribute("anchors",objectToString(noteBookAnchors));}
return noteBook;}
compileSetting(el,params){const setting=createElement(params.componentName||"Setting",{title:toStringExpression(el.getAttribute("title")||""),help:toStringExpression(el.getAttribute("help")||""),companyDependent:el.getAttribute("company_dependent")==="1"||"false",documentation:toStringExpression(el.getAttribute("documentation")||""),record:`__comp__.props.record`,});if(el.getAttribute("id")){setting.setAttribute("id",toStringExpression(el.getAttribute("id")));}
let string=toStringExpression(el.getAttribute("string")||"");let addLabel=true;Array.from(el.children).forEach((child,index)=>{if(getTag(child,true)==="field"&&index===0){const fieldSlot=createElement("t",{"t-set-slot":"fieldSlot"});const field=this.compileNode(child,params);if(field){append(fieldSlot,field);setting.setAttribute("fieldInfo",field.getAttribute("fieldInfo"));addLabel=child.hasAttribute("nolabel")?child.getAttribute("nolabel")!=="1":true;const fieldName=child.getAttribute("name");string=child.hasAttribute("string")?toStringExpression(child.getAttribute("string")):string;setting.setAttribute("fieldName",toStringExpression(fieldName));setting.setAttribute("fieldId",toStringExpression(child.getAttribute("field_id")));}
append(setting,fieldSlot);}else{append(setting,this.compileNode(child,params));}});setting.setAttribute("string",string);setting.setAttribute("addLabel",addLabel);return setting;}
compileSeparator(el,params={}){const separator=makeSeparator(el.getAttribute("string"));copyAttributes(el,separator);return this.applyInvisible(getModifier(el,"invisible"),separator,params);}
compileSheet(el,params){const sheetBG=createElement("div");sheetBG.className="o_form_sheet_bg";const sheetFG=createElement("div");sheetFG.className="o_form_sheet position-relative";append(sheetBG,sheetFG);for(const child of el.childNodes){const compiled=this.compileNode(child,params);if(!compiled){continue;}
if(compiled.nodeName==="ButtonBox"){continue;}
if(getTag(child,true)==="field"){compiled.setAttribute("showTooltip",true);}
append(sheetFG,compiled);}
return sheetBG;}}
return __exports;});;

/* /web/static/src/views/form/form_controller.js */
odoo.define('@web/views/form/form_controller',['@web/core/l10n/translation','@web/core/browser/feature_detection','@web/core/confirmation_dialog/confirmation_dialog','@web/core/context','@web/core/debug/debug_context','@web/core/registry','@web/core/ui/ui_service','@web/core/user','@web/core/utils/hooks','@web/core/utils/objects','@web/core/utils/xml','@web/core/py_js/py','@web/search/action_hook','@web/search/layout','@web/search/pager_hook','@web/views/standard_view_props','@web/views/utils','@web/views/view_button/view_button_hook','@web/views/view_button/view_button','@web/views/fields/field','@web/model/model','@web/model/relational_model/utils','@web/views/view_compiler','@web/views/widgets/widget','@web/search/action_menus/action_menus','@web/views/form/button_box/button_box','@web/views/form/form_compiler','@web/views/form/form_error_dialog/form_error_dialog','@web/views/form/form_status_indicator/form_status_indicator','@web/views/form/status_bar_dropdown_items/status_bar_dropdown_items','@web/views/form/form_cog_menu/form_cog_menu','@odoo/owl','@web/model/relational_model/errors','@web/core/utils/reactive'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{hasTouch}=require("@web/core/browser/feature_detection");const{deleteConfirmationMessage,ConfirmationDialog,}=require("@web/core/confirmation_dialog/confirmation_dialog");const{makeContext}=require("@web/core/context");const{useDebugCategory}=require("@web/core/debug/debug_context");const{registry}=require("@web/core/registry");const{SIZES}=require("@web/core/ui/ui_service");const{user}=require("@web/core/user");const{useBus,useService}=require("@web/core/utils/hooks");const{omit}=require("@web/core/utils/objects");const{createElement,parseXML}=require("@web/core/utils/xml");const{evaluateBooleanExpr}=require("@web/core/py_js/py");const{useSetupAction}=require("@web/search/action_hook");const{Layout}=require("@web/search/layout");const{usePager}=require("@web/search/pager_hook");const{standardViewProps}=require("@web/views/standard_view_props");const{isX2Many}=require("@web/views/utils");const{executeButtonCallback,useViewButtons}=require("@web/views/view_button/view_button_hook");const{ViewButton}=require("@web/views/view_button/view_button");const{Field}=require("@web/views/fields/field");const{useModel}=require("@web/model/model");const{addFieldDependencies,extractFieldsFromArchInfo}=require("@web/model/relational_model/utils");const{useViewCompiler}=require("@web/views/view_compiler");const{Widget}=require("@web/views/widgets/widget");const{STATIC_ACTIONS_GROUP_NUMBER}=require("@web/search/action_menus/action_menus");const{ButtonBox}=require("@web/views/form/button_box/button_box");const{FormCompiler}=require("@web/views/form/form_compiler");const{FormErrorDialog}=require("@web/views/form/form_error_dialog/form_error_dialog");const{FormStatusIndicator}=require("@web/views/form/form_status_indicator/form_status_indicator");const{StatusBarDropdownItems}=require("@web/views/form/status_bar_dropdown_items/status_bar_dropdown_items");const{FormCogMenu}=require("@web/views/form/form_cog_menu/form_cog_menu");const{Component,onError,onMounted,onRendered,onWillUnmount,status,useComponent,useEffect,useRef,useState,}=require("@odoo/owl");const{FetchRecordError}=require("@web/model/relational_model/errors");const{effect}=require("@web/core/utils/reactive");const viewRegistry=registry.category("views");__exports.loadSubViews=loadSubViews;async function loadSubViews(fieldNodes,fields,context,resModel,viewService,isSmall){for(const fieldInfo of Object.values(fieldNodes)){const fieldName=fieldInfo.name;const field=fields[fieldName];if(!isX2Many(field)){continue;}
if(fieldInfo.invisible==="True"||fieldInfo.invisible==="1"){continue;}
if(!fieldInfo.field.useSubView){continue;}
fieldInfo.views=fieldInfo.views||{};let viewType=fieldInfo.viewMode||"list,kanban";if(viewType.includes(",")){viewType=isSmall?"kanban":"list";}
fieldInfo.viewMode=viewType;if(fieldInfo.views[viewType]){continue;}
const fieldContext={};const regex=/'([a-z]*_view_ref)' *: *'(.*?)'/g;let matches;while((matches=regex.exec(fieldInfo.context))!==null){fieldContext[matches[1]]=matches[2];}
const refinedContext={};for(const key in context){if(key.indexOf("_view_ref")===-1){refinedContext[key]=context[key];}}
const comodel=field.relation;const{fields:comodelFields,relatedModels,views,}=await viewService.loadViews({resModel:comodel,views:[[false,viewType]],context:makeContext([fieldContext,user.context,refinedContext]),});const{ArchParser}=viewRegistry.get(viewType);const xmlDoc=parseXML(views[viewType].arch);const archInfo=new ArchParser().parse(xmlDoc,relatedModels,comodel);fieldInfo.views[viewType]={...archInfo,limit:archInfo.limit||40,fields:comodelFields,};fieldInfo.relatedFields=comodelFields;}}
__exports.useFormViewInDialog=useFormViewInDialog;function useFormViewInDialog(){const component=useComponent();onMounted(()=>{component.env.bus.trigger("FORM-CONTROLLER:FORM-IN-DIALOG:ADD");});onWillUnmount(()=>{component.env.bus.trigger("FORM-CONTROLLER:FORM-IN-DIALOG:REMOVE");});}
const FormController=__exports.FormController=class FormController extends Component{static template=`web.FormView`;static components={FormStatusIndicator,Layout,ButtonBox,ViewButton,Field,CogMenu:FormCogMenu,StatusBarDropdownItems,Widget,};static props={...standardViewProps,discardRecord:{type:Function,optional:true},mode:{optional:true,validate:(m)=>["edit","readonly"].includes(m),},saveRecord:{type:Function,optional:true},removeRecord:{type:Function,optional:true},Model:Function,Renderer:Function,Compiler:Function,archInfo:Object,buttonTemplate:String,preventCreate:{type:Boolean,optional:true},preventEdit:{type:Boolean,optional:true},onDiscard:{type:Function,optional:true},onSave:{type:Function,optional:true},};static defaultProps={preventCreate:false,preventEdit:false,updateActionState:()=>{},};setup(){this.evaluateBooleanExpr=evaluateBooleanExpr;this.dialogService=useService("dialog");this.orm=useService("orm");this.viewService=useService("view");this.ui=useService("ui");this.companyService=useService("company");useBus(this.ui.bus,"resize",this.render);this.archInfo=this.props.archInfo;const{create,edit}=this.archInfo.activeActions;this.canCreate=create&&!this.props.preventCreate;this.canEdit=edit&&!this.props.preventEdit;this.duplicateId=false;this.display={...this.props.display};if(this.env.inDialog){this.display.controlPanel=false;}
this.formInDialog=0;useBus(this.env.bus,"FORM-CONTROLLER:FORM-IN-DIALOG:ADD",()=>this.formInDialog++);useBus(this.env.bus,"FORM-CONTROLLER:FORM-IN-DIALOG:REMOVE",()=>this.formInDialog--);const beforeFirstLoad=async()=>{await loadSubViews(this.archInfo.fieldNodes,this.props.fields,this.props.context,this.props.resModel,this.viewService,this.env.isSmall);const{activeFields,fields}=extractFieldsFromArchInfo(this.archInfo,this.props.fields);if(this.display.controlPanel){addFieldDependencies(activeFields,fields,[{name:"display_name",type:"char",readonly:true},]);}
this.model.config.activeFields=activeFields;this.model.config.fields=fields;};this.model=useState(useModel(this.props.Model,this.modelParams,{beforeFirstLoad}));onMounted(()=>{effect((model)=>{if(status(this)==="mounted"){this.props.updateActionState({resId:model.root.resId});}},[this.model]);});onError((error)=>{const suggestedCompany=error.cause?.data?.context?.suggested_company;if(error.cause?.data?.name==="odoo.exceptions.AccessError"&&suggestedCompany){this.env.pushStateBeforeReload();const activeCompanyIds=this.companyService.activeCompanyIds;activeCompanyIds.push(suggestedCompany.id);this.companyService.setCompanies(activeCompanyIds,true);}else{throw error;}});const footers=[...this.archInfo.xmlDoc.querySelectorAll("footer:not(field footer)")];if(footers.length){this.footerArchInfo=Object.assign({},this.archInfo);this.footerArchInfo.xmlDoc=createElement("t");this.footerArchInfo.xmlDoc.append(...footers);this.footerArchInfo.arch=this.footerArchInfo.xmlDoc.outerHTML;this.archInfo.arch=this.archInfo.xmlDoc.outerHTML;}
const xmlDocButtonBox=this.archInfo.xmlDoc.querySelector("div[name='button_box']:not(field div)");if(xmlDocButtonBox){const buttonBoxTemplates=useViewCompiler(this.props.Compiler||FormCompiler,{ButtonBox:xmlDocButtonBox},{isSubView:true});this.buttonBoxTemplate=buttonBoxTemplates.ButtonBox;}
const xmlDocHeader=this.archInfo.xmlDoc.querySelector("header");if(xmlDocHeader){const{StatusBarDropdownItems}=useViewCompiler(this.props.Compiler||FormCompiler,{StatusBarDropdownItems:xmlDocHeader},{isSubView:true,asDropdownItems:true});this.statusBarDropdownItemsTemplate=StatusBarDropdownItems;}
this.rootRef=useRef("root");useViewButtons(this.rootRef,{beforeExecuteAction:this.beforeExecuteActionButton.bind(this),afterExecuteAction:this.afterExecuteActionButton.bind(this),reload:()=>this.model.load(),});const state=this.props.state||{};const activeNotebookPages={...state.activeNotebookPages};this.onNotebookPageChange=(notebookId,page)=>{if(page){activeNotebookPages[notebookId]=page;}};useSetupAction({rootRef:this.rootRef,beforeVisibilityChange:()=>this.beforeVisibilityChange(),beforeLeave:()=>this.beforeLeave(),beforeUnload:(ev)=>this.beforeUnload(ev),getLocalState:()=>{return{activeNotebookPages:!this.model.root.isNew?activeNotebookPages:{},modelState:this.model.exportState(),resId:this.model.root.resId,};},});useDebugCategory("form",{component:this});usePager(()=>{if(!this.model.root.isNew){const resIds=this.model.root.resIds;return{offset:resIds.indexOf(this.model.root.resId),limit:1,total:resIds.length,onUpdate:({offset})=>this.onPagerUpdate({offset,resIds}),};}});onRendered(()=>{this.env.config.setDisplayName(this.displayName());});const{disableAutofocus}=this.archInfo;if(!disableAutofocus){useEffect((isInEdition)=>{if(!isInEdition&&!this.rootRef.el.querySelector(".o_content").contains(document.activeElement)){const elementToFocus=this.rootRef.el.querySelector(".o_content button.btn-primary");if(elementToFocus){elementToFocus.focus();}}},()=>[this.model.root.isInEdition]);}
if(this.env.inDialog){useFormViewInDialog();}}
get cogMenuProps(){return{getActiveIds:()=>(this.model.root.isNew?[]:[this.model.root.resId]),context:this.props.context,items:this.props.info.actionMenus?this.actionMenuItems:{},isDomainSelected:this.model.root.isDomainSelected,resModel:this.model.root.resModel,domain:this.props.domain,onActionExecuted:()=>this.model.load({resId:this.model.root.resId,resIds:this.model.root.resIds}),shouldExecuteAction:this.shouldExecuteAction.bind(this),};}
get modelParams(){let mode=this.props.mode||"edit";if(!this.canEdit&&this.props.resId){mode="readonly";}
return{config:{resModel:this.props.resModel,resId:this.props.resId||false,resIds:this.props.resIds||(this.props.resId?[this.props.resId]:[]),fields:this.props.fields,activeFields:{},isMonoRecord:true,mode,context:this.props.context,},state:this.props.state?.modelState,hooks:{onWillLoadRoot:this.onWillLoadRoot.bind(this),onWillSaveRecord:this.onWillSaveRecord.bind(this),onRecordSaved:this.onRecordSaved.bind(this),},useSendBeaconToSaveUrgently:true,};}
onWillLoadRoot(){this.duplicateId=undefined;}
async onRecordSaved(record,changes){if(this.duplicateId===record.id){const translationChanges={};for(const fieldName in changes){if(record.fields[fieldName].translate){translationChanges[fieldName]=changes[fieldName];}}
if(Object.keys(translationChanges).length){await this.orm.call(this.model.root.resModel,"web_override_translations",[[this.model.root.resId],translationChanges,]);}}}
async onWillSaveRecord(){}
async onSaveError(error,{discard}){const proceed=await new Promise((resolve)=>{this.model.dialog.add(FormErrorDialog,{message:error.data.message,onDiscard:()=>{discard();resolve(true);},onStayHere:()=>resolve(false),});});return proceed;}
displayName(){return this.model.root.data.display_name||(this.model.root.isNew&&_t("New"))||"";}
async onPagerUpdate({offset,resIds}){const dirty=await this.model.root.isDirty();try{if(dirty){await this.model.root.save({onError:this.onSaveError.bind(this),nextId:resIds[offset],});}else{await this.model.load({resId:resIds[offset]});}}catch(e){if(e instanceof FetchRecordError){this.model.load({resIds:this.model.config.resIds.filter((id)=>!e.resIds.includes(id)),});}
throw e;}}
beforeVisibilityChange(){if(document.visibilityState==="hidden"&&this.formInDialog===0){return this.model.root.save();}}
async beforeLeave(){if(this.model.root.dirty){return this.save({reload:false,onError:this.onSaveError.bind(this),});}}
async beforeUnload(ev){const succeeded=await this.model.root.urgentSave();if(!succeeded){ev.preventDefault();ev.returnValue="Unsaved changes";}}
getStaticActionMenuItems(){const{activeActions}=this.archInfo;return{archive:{isAvailable:()=>this.archiveEnabled&&this.model.root.isActive,sequence:10,description:_t("Archive"),icon:"oi oi-archive",callback:()=>{this.dialogService.add(ConfirmationDialog,this.archiveDialogProps);},},unarchive:{isAvailable:()=>this.archiveEnabled&&!this.model.root.isActive,sequence:20,icon:"oi oi-unarchive",description:_t("Unarchive"),callback:()=>this.model.root.unarchive(),},duplicate:{isAvailable:()=>activeActions.create&&activeActions.duplicate,sequence:30,icon:"fa fa-clone",description:_t("Duplicate"),callback:()=>this.duplicateRecord(),},delete:{isAvailable:()=>activeActions.delete&&!this.model.root.isNew,sequence:40,icon:"fa fa-trash-o",description:_t("Delete"),callback:()=>this.deleteRecord(),skipSave:true,},addPropertyFieldValue:{isAvailable:()=>activeActions.addPropertyFieldValue,sequence:50,icon:"fa fa-cogs",description:_t("Add Properties"),callback:()=>this.model.bus.trigger("PROPERTY_FIELD:ADD_PROPERTY_VALUE"),},};}
get archiveDialogProps(){return{body:_t("Are you sure that you want to archive this record?"),confirmLabel:_t("Archive"),confirm:()=>this.model.root.archive(),cancel:()=>{},};}
get actionMenuItems(){const{actionMenus}=this.props.info;const staticActionItems=Object.entries(this.getStaticActionMenuItems()).filter(([key,item])=>item.isAvailable===undefined||item.isAvailable()).sort(([k1,item1],[k2,item2])=>(item1.sequence||0)-(item2.sequence||0)).map(([key,item])=>Object.assign({key},omit(item,"isAvailable","sequence"),{groupNumber:STATIC_ACTIONS_GROUP_NUMBER,}));return{action:[...staticActionItems,...(actionMenus.action||[])],print:actionMenus.print,};}
get archiveEnabled(){return"active"in this.model.root.activeFields?!this.props.fields.active.readonly:"x_active"in this.model.root.activeFields?!this.props.fields.x_active.readonly:false;}
async shouldExecuteAction(item){const dirty=await this.model.root.isDirty();if((dirty||this.model.root.isNew)&&!item.skipSave){let hasError=false;const isSaved=await this.model.root.save({onError:(...args)=>{hasError=true;return this.onSaveError(...args);},});return isSaved&&!hasError;}
return true;}
async duplicateRecord(){await this.model.root.duplicate();this.duplicateId=this.model.root.id;}
get deleteConfirmationDialogProps(){return{title:_t("Bye-bye, record!"),body:deleteConfirmationMessage,confirm:async()=>{await this.model.root.delete();if(!this.model.root.resId){this.env.config.historyBack();}},confirmLabel:_t("Delete"),cancel:()=>{},cancelLabel:_t("No, keep it"),};}
async deleteRecord(){this.dialogService.add(ConfirmationDialog,this.deleteConfirmationDialogProps);}
async beforeExecuteActionButton(clickParams){const record=this.model.root;if(clickParams.special!=="cancel"){let saved=false;if(clickParams.special==="save"&&this.props.saveRecord){saved=await this.props.saveRecord(record,clickParams);}else{const params={reload:!(this.env.inDialog&&clickParams.close)};saved=await record.save(params);}
if(saved!==false&&this.props.onSave){this.props.onSave(record,clickParams);}
return saved;}else if(this.props.onDiscard){this.props.onDiscard(record);}}
async afterExecuteActionButton(clickParams){}
async create(){const dirty=await this.model.root.isDirty();const onError=this.onSaveError.bind(this);const canProceed=!dirty||(await this.model.root.save({onError}));if(canProceed){await executeButtonCallback(this.ui.activeElement,()=>this.model.load({resId:false}));}}
async save(params){const record=this.model.root;let saved=false;if(this.props.saveRecord){saved=await this.props.saveRecord(record,params);}else{saved=await record.save(params);}
if(saved&&this.props.onSave){this.props.onSave(record,params);}
return saved;}
saveButtonClicked(params={}){return executeButtonCallback(this.ui.activeElement,()=>this.save(params));}
async discard(){if(this.props.discardRecord){this.props.discardRecord(this.model.root);return;}
await this.model.root.discard();if(this.props.onDiscard){this.props.onDiscard(this.model.root);}
if(this.model.root.isNew||this.env.inDialog){this.env.config.historyBack();}}
get className(){const result={};const{size}=this.ui;if(size<=SIZES.XS){result.o_xxs_form_view=true;}else if(!this.env.inDialog&&size===SIZES.XXL){result["o_xxl_form_view h-100"]=true;}
if(this.props.className){result[this.props.className]=true;}
result["o_field_highlight"]=size<SIZES.SM||hasTouch();return result;}}
return __exports;});;

/* /web/static/src/views/form/form_error_dialog/form_error_dialog.js */
odoo.define('@web/views/form/form_error_dialog/form_error_dialog',['@web/core/dialog/dialog','@odoo/owl'],function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{Component}=require("@odoo/owl");const FormErrorDialog=__exports.FormErrorDialog=class FormErrorDialog extends Component{static template="web.FormErrorDialog";static components={Dialog};static props={message:{type:String,optional:true},onDiscard:Function,onStayHere:Function,close:Function,};async discard(){await this.props.onDiscard();this.props.close();}
async stay(){await this.props.onStayHere();this.props.close();}}
return __exports;});;

/* /web/static/src/views/form/form_group/form_group.js */
odoo.define('@web/views/form/form_group/form_group',['@odoo/owl','@web/core/utils/arrays'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{sortBy}=require("@web/core/utils/arrays");class Group extends Component{static template="";static props=["class?","slots?","maxCols?","style?"];static defaultProps={maxCols:2,};_getItems(){const items=Object.entries(this.props.slots||{}).filter(([k,v])=>v.type==="item");return sortBy(items,(i)=>i[1].sequence);}
getItems(){return this._getItems();}
get allClasses(){return this.props.class;}}
const OuterGroup=__exports.OuterGroup=class OuterGroup extends Group{static template="web.Form.OuterGroup";static defaultProps={...Group.defaultProps,slots:[],hasOuterTemplate:true,};getItems(){const nbCols=this.props.maxCols;const colSize=Math.max(1,Math.round(12/nbCols));const items=super.getItems().filter(([k,v])=>!("isVisible"in v)||v.isVisible);return items.map((item)=>{const[slotName,slot]=item;const itemSpan=slot.itemSpan||1;return{name:slotName,size:itemSpan*colSize,newline:slot.newline,colspan:itemSpan,};});}}
const InnerGroup=__exports.InnerGroup=class InnerGroup extends Group{static template="web.Form.InnerGroup";getTemplate(subType){return this.constructor.templates[subType]||this.constructor.templates.default;}
getRows(){const maxCols=this.props.maxCols;const rows=[];let currentRow=[];let reservedSpace=0;const items=this.getItems();while(items.length){const[slotName,slot]=items.shift();if(!slot.isVisible){continue;}
const{newline,itemSpan}=slot;if(newline){rows.push(currentRow);currentRow=[];reservedSpace=0;}
const fullItemSpan=itemSpan||1;if(fullItemSpan+reservedSpace>maxCols){rows.push(currentRow);currentRow=[];reservedSpace=0;}
const isVisible=!("isVisible"in slot)||slot.isVisible;currentRow.push({...slot,name:slotName,itemSpan,isVisible});reservedSpace+=itemSpan||1;currentRow.isVisible=currentRow.isVisible||isVisible;}
rows.push(currentRow);return rows;}}
return __exports;});;

/* /web/static/src/views/form/form_label.js */
odoo.define('@web/views/form/form_label',['@web/views/fields/field','@web/session','@web/views/fields/field_tooltip','@web/core/l10n/translation','@odoo/owl'],function(require){'use strict';let __exports={};const{fieldVisualFeedback}=require("@web/views/fields/field");const{session}=require("@web/session");const{getTooltipInfo}=require("@web/views/fields/field_tooltip");const{_t}=require("@web/core/l10n/translation");const{Component}=require("@odoo/owl");const FormLabel=__exports.FormLabel=class FormLabel extends Component{static template="web.FormLabel";static props={fieldInfo:{type:Object},record:{type:Object},fieldName:{type:String},className:{type:String,optional:true},string:{type:String},id:{type:String},notMuttedLabel:{type:Boolean,optional:true},};get className(){const{invalid,empty,readonly}=fieldVisualFeedback(this.props.fieldInfo.field,this.props.record,this.props.fieldName,this.props.fieldInfo);const classes=this.props.className?[this.props.className]:[];if(invalid){classes.push("o_field_invalid");}
if(empty){classes.push("o_form_label_empty");}
if(readonly&&!this.props.notMuttedLabel){classes.push("o_form_label_readonly");}
return classes.join(" ");}
get hasTooltip(){return Boolean(odoo.debug)||this.tooltipHelp;}
get tooltipHelp(){const field=this.props.record.fields[this.props.fieldName];let help=this.props.fieldInfo.help||field.help||"";if(field.company_dependent&&session.display_switch_company_menu){help+=(help?"\n\n":"")+_t("Values set here are company-specific.");}
return help;}
get tooltipInfo(){if(!odoo.debug){return JSON.stringify({field:{help:this.tooltipHelp,},});}
return getTooltipInfo({viewMode:"form",resModel:this.props.record.resModel,field:this.props.record.fields[this.props.fieldName],fieldInfo:this.props.fieldInfo,help:this.tooltipHelp,});}}
return __exports;});;

/* /web/static/src/views/form/form_renderer.js */
odoo.define('@web/views/form/form_renderer',['@web/core/py_js/py','@web/core/notebook/notebook','@web/views/form/setting/setting','@web/views/fields/field','@web/core/browser/browser','@web/core/browser/feature_detection','@web/core/utils/hooks','@web/core/utils/timing','@web/views/form/button_box/button_box','@web/views/form/form_group/form_group','@web/views/view_button/view_button','@web/views/view_compiler','@web/views/view_hook','@web/views/widgets/widget','@web/views/form/form_compiler','@web/views/form/form_label','@web/views/form/status_bar_buttons/status_bar_buttons','@odoo/owl'],function(require){'use strict';let __exports={};const{evaluateBooleanExpr}=require("@web/core/py_js/py");const{Notebook}=require("@web/core/notebook/notebook");const{Setting}=require("@web/views/form/setting/setting");const{Field}=require("@web/views/fields/field");const{browser}=require("@web/core/browser/browser");const{hasTouch}=require("@web/core/browser/feature_detection");const{useService}=require("@web/core/utils/hooks");const{useDebounced}=require("@web/core/utils/timing");const{ButtonBox}=require("@web/views/form/button_box/button_box");const{InnerGroup,OuterGroup}=require("@web/views/form/form_group/form_group");const{ViewButton}=require("@web/views/view_button/view_button");const{useViewCompiler}=require("@web/views/view_compiler");const{useBounceButton}=require("@web/views/view_hook");const{Widget}=require("@web/views/widgets/widget");const{FormCompiler}=require("@web/views/form/form_compiler");const{FormLabel}=require("@web/views/form/form_label");const{StatusBarButtons}=require("@web/views/form/status_bar_buttons/status_bar_buttons");const{Component,onMounted,onWillUnmount,useEffect,useSubEnv,useRef,useState,xml,}=require("@odoo/owl");const FormRenderer=__exports.FormRenderer=class FormRenderer extends Component{static template=xml`<t t-call="{{ templates.FormRenderer }}" t-call-context="{ __comp__: Object.assign(Object.create(this), { this: this }) }" />`;static components={Field,FormLabel,ButtonBox,ViewButton,Widget,Notebook,Setting,OuterGroup,InnerGroup,StatusBarButtons,};static props={archInfo:Object,Compiler:{type:Function,optional:true},record:Object,class:{type:String,optional:1},translateAlert:{type:[Object,{value:null}],optional:true},onNotebookPageChange:{type:Function,optional:true},activeNotebookPages:{type:Object,optional:true},saveRecord:{type:Function,optional:true},setFieldAsDirty:{type:Function,optional:true},slots:{type:Object,optional:true},};static defaultProps={activeNotebookPages:{},onNotebookPageChange:()=>{},};setup(){this.evaluateBooleanExpr=evaluateBooleanExpr;const{archInfo,Compiler,record}=this.props;const templates={FormRenderer:archInfo.xmlDoc};this.state=useState({});this.templates=useViewCompiler(Compiler||FormCompiler,templates);useSubEnv({model:record.model});useBounceButton(useRef("compiled_view_root"),(target)=>{return!record.isInEdition&&!!target.closest(".oe_title, .o_inner_group");});this.uiService=useService("ui");this.onResize=useDebounced(this.render,200);onMounted(()=>browser.addEventListener("resize",this.onResize));onWillUnmount(()=>browser.removeEventListener("resize",this.onResize));const{autofocusFieldId}=archInfo;const rootRef=useRef("compiled_view_root");if(this.shouldAutoFocus){useEffect((isNew,rootEl)=>{if(!rootEl){return;}
let elementToFocus;if(isNew){const focusableSelectors=['input[type="text"]',"textarea","[contenteditable]",];elementToFocus=(autofocusFieldId&&rootEl.querySelector(`#${autofocusFieldId}`))||rootEl.querySelector(focusableSelectors.map((sel)=>`.o_content .o_field_widget ${sel}`).join(", "));}
if(elementToFocus){elementToFocus.focus();}},()=>[this.props.record.isNew,rootRef.el]);}
if(this.env.inDialog){const fieldNodeIds=Object.keys(this.props.archInfo.fieldNodes);const elementsByNodeIds={};onMounted(()=>{if(!rootRef.el){return;}
for(const id of fieldNodeIds){const els=[...document.querySelectorAll(`[id=${id}]`)].filter((el)=>!rootRef.el.contains(el));if(els.length){els[0].removeAttribute("id");elementsByNodeIds[id]=els[0];}}});onWillUnmount(()=>{for(const[id,el]of Object.entries(elementsByNodeIds)){el.setAttribute("id",id);}});}}
get shouldAutoFocus(){return!hasTouch()&&!this.props.archInfo.disableAutofocus;}}
return __exports;});;

/* /web/static/src/views/form/form_status_indicator/form_status_indicator.js */
odoo.define('@web/views/form/form_status_indicator/form_status_indicator',['@odoo/owl','@web/core/utils/hooks'],function(require){'use strict';let __exports={};const{Component,useEffect,useRef,useState}=require("@odoo/owl");const{useBus}=require("@web/core/utils/hooks");const FormStatusIndicator=__exports.FormStatusIndicator=class FormStatusIndicator extends Component{static template="web.FormStatusIndicator";static props={model:Object,save:Function,discard:Function,};setup(){this.state=useState({fieldIsDirty:false,});useBus(this.props.model.bus,"FIELD_IS_DIRTY",(ev)=>(this.state.fieldIsDirty=ev.detail));useEffect(()=>{if(!this.props.model.root.isNew&&this.indicatorMode==="invalid"){this.saveButton.el.setAttribute("disabled","1");}else{this.saveButton.el.removeAttribute("disabled");}},()=>[this.props.model.root.isValid]);this.saveButton=useRef("save");}
get displayButtons(){return this.indicatorMode!=="saved";}
get indicatorMode(){if(this.props.model.root.isNew){return this.props.model.root.isValid?"dirty":"invalid";}else if(!this.props.model.root.isValid){return"invalid";}else if(this.props.model.root.dirty||this.state.fieldIsDirty){return"dirty";}else{return"saved";}}
async discard(){await this.props.discard();}
async save(){await this.props.save();}}
return __exports;});;

/* /web/static/src/views/form/form_view.js */
odoo.define('@web/views/form/form_view',['@web/core/registry','@web/model/relational_model/relational_model','@web/views/form/form_renderer','@web/views/form/form_arch_parser','@web/views/form/form_controller','@web/views/form/form_compiler'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{RelationalModel}=require("@web/model/relational_model/relational_model");const{FormRenderer}=require("@web/views/form/form_renderer");const{FormArchParser}=require("@web/views/form/form_arch_parser");const{FormController}=require("@web/views/form/form_controller");const{FormCompiler}=require("@web/views/form/form_compiler");const formView=__exports.formView={type:"form",searchMenuTypes:[],Controller:FormController,Renderer:FormRenderer,ArchParser:FormArchParser,Model:RelationalModel,Compiler:FormCompiler,buttonTemplate:"web.FormView.Buttons",props:(genericProps,view)=>{const{ArchParser}=view;const{arch,relatedModels,resModel}=genericProps;const archInfo=new ArchParser().parse(arch,relatedModels,resModel);return{...genericProps,Model:view.Model,Renderer:view.Renderer,buttonTemplate:genericProps.buttonTemplate||view.buttonTemplate,Compiler:view.Compiler,archInfo,};},};registry.category("views").add("form",formView);return __exports;});;

/* /web/static/src/views/form/setting/setting.js */
odoo.define('@web/views/form/setting/setting',['@web/session','@odoo/owl','@web/views/form/form_label','@web/views/widgets/documentation_link/documentation_link'],function(require){'use strict';let __exports={};const{session}=require("@web/session");const{Component}=require("@odoo/owl");const{FormLabel}=require("@web/views/form/form_label");const{DocumentationLink}=require("@web/views/widgets/documentation_link/documentation_link");const Setting=__exports.Setting=class Setting extends Component{static template="web.Setting";static components={FormLabel,DocumentationLink,};static props={id:{type:String,optional:1},title:{type:String,optional:1},fieldId:{type:String,optional:1},help:{type:String,optional:1},fieldName:{type:String,optional:1},fieldInfo:{type:Object,optional:1},class:{type:String,optional:1},record:{type:Object,optional:1},documentation:{type:String,optional:1},string:{type:String,optional:1},addLabel:{type:Boolean},companyDependent:{type:Boolean,optional:1},slots:{type:Object,optional:1},};setup(){if(this.props.fieldName){this.fieldType=this.props.record.fields[this.props.fieldName].type;if(this.props.fieldInfo.readonly==="True"){this.notMuttedLabel=true;}}}
get classNames(){const{class:_class}=this.props;const classNames={o_setting_box:true,"col-12":true,"col-lg-6":true,[_class]:Boolean(_class),};return classNames;}
get displayCompanyDependentIcon(){return(this.labelString&&this.props.companyDependent&&session.display_switch_company_menu);}
get labelString(){if(this.props.string){return this.props.string;}
const label=this.props.record&&this.props.record.fields[this.props.fieldName]&&this.props.record.fields[this.props.fieldName].string;return label||"";}}
return __exports;});;

/* /web/static/src/views/form/status_bar_buttons/status_bar_buttons.js */
odoo.define('@web/views/form/status_bar_buttons/status_bar_buttons',['@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@odoo/owl'],function(require){'use strict';let __exports={};const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{Component}=require("@odoo/owl");const StatusBarButtons=__exports.StatusBarButtons=class StatusBarButtons extends Component{static template="web.StatusBarButtons";static components={Dropdown,DropdownItem,};static props={slots:{type:Object,optional:1},};get visibleSlotNames(){if(!this.props.slots){return[];}
return Object.entries(this.props.slots).filter((entry)=>entry[1].isVisible).map((entry)=>entry[0]);}}
return __exports;});;

/* /web/static/src/views/form/status_bar_dropdown_items/status_bar_dropdown_items.js */
odoo.define('@web/views/form/status_bar_dropdown_items/status_bar_dropdown_items',['@web/core/dropdown/dropdown_item','@web/views/form/status_bar_buttons/status_bar_buttons'],function(require){'use strict';let __exports={};const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{StatusBarButtons}=require("@web/views/form/status_bar_buttons/status_bar_buttons");const StatusBarDropdownItems=__exports.StatusBarDropdownItems=class StatusBarDropdownItems extends StatusBarButtons{static template="web.StatusBarDropdownItems";static components={DropdownItem,};}
return __exports;});;

/* /web/static/src/views/graph/graph_arch_parser.js */
odoo.define('@web/views/graph/graph_arch_parser',['@web/core/utils/strings','@web/core/utils/xml','@web/search/utils/misc'],function(require){'use strict';let __exports={};const{exprToBoolean}=require("@web/core/utils/strings");const{visitXML}=require("@web/core/utils/xml");const{GROUPABLE_TYPES}=require("@web/search/utils/misc");const MODES=["bar","line","pie"];const ORDERS=["ASC","DESC","asc","desc",null];const GraphArchParser=__exports.GraphArchParser=class GraphArchParser{parse(arch,fields={}){const archInfo={fields,fieldAttrs:{},groupBy:[],measures:[]};visitXML(arch,(node)=>{switch(node.tagName){case"graph":{if(node.hasAttribute("disable_linking")){archInfo.disableLinking=exprToBoolean(node.getAttribute("disable_linking"));}
if(node.hasAttribute("stacked")){archInfo.stacked=exprToBoolean(node.getAttribute("stacked"));}
if(node.hasAttribute("cumulated")){archInfo.cumulated=exprToBoolean(node.getAttribute("cumulated"));}
if(node.hasAttribute("cumulated_start")){archInfo.cumulatedStart=exprToBoolean(node.getAttribute("cumulated_start"));}
const mode=node.getAttribute("type");if(mode&&MODES.includes(mode)){archInfo.mode=mode;}
const order=node.getAttribute("order");if(order&&ORDERS.includes(order)){archInfo.order=order.toUpperCase();}
const title=node.getAttribute("string");if(title){archInfo.title=title;}
break;}
case"field":{const fieldName=node.getAttribute("name");if(fieldName==="id"){break;}
const string=node.getAttribute("string");if(string){if(!archInfo.fieldAttrs[fieldName]){archInfo.fieldAttrs[fieldName]={};}
archInfo.fieldAttrs[fieldName].string=string;}
const widget=node.getAttribute("widget");if(widget){if(!archInfo.fieldAttrs[fieldName]){archInfo.fieldAttrs[fieldName]={};}
archInfo.fieldAttrs[fieldName].widget=widget;}
if(node.getAttribute("invisible")==="True"||node.getAttribute("invisible")==="1"){if(!archInfo.fieldAttrs[fieldName]){archInfo.fieldAttrs[fieldName]={};}
archInfo.fieldAttrs[fieldName].isInvisible=true;break;}
const isMeasure=node.getAttribute("type")==="measure";if(isMeasure){archInfo.measures.push(fieldName);archInfo.measure=fieldName;}else{const{type}=archInfo.fields[fieldName];if(GROUPABLE_TYPES.includes(type)){let groupBy=fieldName;const interval=node.getAttribute("interval");if(interval){groupBy+=`:${interval}`;}
archInfo.groupBy.push(groupBy);}}
break;}}});return archInfo;}}
return __exports;});;

/* /web/static/src/views/graph/graph_controller.js */
odoo.define('@web/views/graph/graph_controller',['@web/search/layout','@web/model/model','@web/views/standard_view_props','@web/search/action_hook','@web/search/search_bar/search_bar','@web/search/search_bar/search_bar_toggler','@web/search/cog_menu/cog_menu','@odoo/owl'],function(require){'use strict';let __exports={};const{Layout}=require("@web/search/layout");const{useModelWithSampleData}=require("@web/model/model");const{standardViewProps}=require("@web/views/standard_view_props");const{useSetupAction}=require("@web/search/action_hook");const{SearchBar}=require("@web/search/search_bar/search_bar");const{useSearchBarToggler}=require("@web/search/search_bar/search_bar_toggler");const{CogMenu}=require("@web/search/cog_menu/cog_menu");const{Component,useRef}=require("@odoo/owl");const GraphController=__exports.GraphController=class GraphController extends Component{static template="web.GraphView";static components={Layout,SearchBar,CogMenu};static props={...standardViewProps,Model:Function,modelParams:Object,Renderer:Function,buttonTemplate:String,};setup(){this.model=useModelWithSampleData(this.props.Model,this.props.modelParams);useSetupAction({rootRef:useRef("root"),getLocalState:()=>{return{metaData:this.model.metaData};},getContext:()=>this.getContext(),});this.searchBarToggler=useSearchBarToggler();}
getContext(){const{measure,groupBy,mode}=this.model.metaData;const context={graph_measure:measure,graph_mode:mode,graph_groupbys:groupBy.map((gb)=>gb.spec),};if(mode!=="pie"){context.graph_order=this.model.metaData.order;context.graph_stacked=this.model.metaData.stacked;if(mode==="line"){context.graph_cumulated=this.model.metaData.cumulated;}}
return context;}
loadAll(){return this.model.forceLoadAll();}}
return __exports;});;

/* /web/static/src/views/graph/graph_model.js */
odoo.define('@web/views/graph/graph_model',['@web/core/l10n/translation','@web/core/utils/arrays','@web/core/utils/concurrency','@web/search/utils/dates','@web/search/utils/group_by','@web/search/utils/misc','@web/model/model','@web/views/utils','@web/core/domain'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{sortBy,groupBy}=require("@web/core/utils/arrays");const{KeepLast,Race}=require("@web/core/utils/concurrency");const{rankInterval}=require("@web/search/utils/dates");const{getGroupBy}=require("@web/search/utils/group_by");const{GROUPABLE_TYPES}=require("@web/search/utils/misc");const{addPropertyFieldDefs,Model}=require("@web/model/model");const{computeReportMeasures,processMeasure}=require("@web/views/utils");const{Domain}=require("@web/core/domain");const SEP=__exports.SEP=" / ";const DATA_LIMIT=80;const SEQUENTIAL_TYPES=__exports.SEQUENTIAL_TYPES=["date","datetime"];class DateClasses{constructor(array){this.__referenceIndex=null;this.__array=array;for(let i=0;i<this.__array.length;i++){const arr=this.__array[i];if(arr.length&&this.__referenceIndex===null){this.__referenceIndex=i;}}}
classLabel(index,o){return`${this.__array[index].indexOf(o)}`;}
classMembers(classLabel){const classNumber=Number(classLabel);const classMembers=new Set();for(const arr of this.__array){if(arr[classNumber]!==undefined){classMembers.add(arr[classNumber]);}}
return[...classMembers];}
representative(classLabel,index){const classNumber=Number(classLabel);const i=index===undefined?this.__referenceIndex:index;if(i===null){return null;}
return this.__array[i][classNumber];}
arrayLength(index){return this.__array[index].length;}}
const GraphModel=__exports.GraphModel=class GraphModel extends Model{setup(params){this.keepLast=new KeepLast();this.race=new Race();const _fetchDataPoints=this._fetchDataPoints.bind(this);this._fetchDataPoints=(...args)=>{return this.race.add(_fetchDataPoints(...args));};this.initialGroupBy=null;this.metaData=params;this.data=null;this.searchParams=null;this.lineOverlayDataset=null;}
async load(searchParams){this.searchParams=searchParams;if(!this.initialGroupBy){this.initialGroupBy=searchParams.context.graph_groupbys||this.metaData.groupBy;}
const metaData=this._buildMetaData();await addPropertyFieldDefs(this.orm,metaData.resModel,searchParams.context,metaData.fields,metaData.groupBy.map((gb)=>gb.fieldName));await this._fetchDataPoints(metaData);}
async forceLoadAll(){const metaData=this._buildMetaData();await this._fetchDataPoints(metaData,true);this.notify();}
hasData(){return this.dataPoints.length>0;}
async updateMetaData(params){if("measure"in params){const metaData=this._buildMetaData(params);await this._fetchDataPoints(metaData);this.useSampleModel=false;}else{await this.race.getCurrentProm();this.metaData=Object.assign({},this.metaData,params);this._prepareData();}
this.notify();}
_buildMetaData(params){const{comparison,domain,context,groupBy}=this.searchParams;const metaData=Object.assign({},this.metaData,{context});if(comparison){metaData.domains=comparison.domains;metaData.comparisonField=comparison.fieldName;}else{metaData.domains=[{arrayRepr:domain,description:null}];}
metaData.measure=context.graph_measure||metaData.measure;metaData.mode=context.graph_mode||metaData.mode;metaData.groupBy=groupBy.length?groupBy:this.initialGroupBy;if(metaData.mode!=="pie"){metaData.order="graph_order"in context?context.graph_order:metaData.order;if(comparison){metaData.stacked=false;}else if("graph_stacked"in context){metaData.stacked=context.graph_stacked;}
if(metaData.mode==="line"){metaData.cumulated="graph_cumulated"in context?context.graph_cumulated:metaData.cumulated;}}
this._normalize(metaData);metaData.measures=computeReportMeasures(metaData.fields,metaData.fieldAttrs,[...(metaData.viewMeasures||[]),metaData.measure,]);return Object.assign(metaData,params);}
async _fetchDataPoints(metaData,forceUseAllDataPoints=false){this.dataPoints=await this.keepLast.add(this._loadDataPoints(metaData));this.metaData=metaData;this._prepareData(forceUseAllDataPoints);}
_getData(dataPoints,forceUseAllDataPoints){const{comparisonField,groupBy,mode}=this.metaData;let identify=false;if(comparisonField&&groupBy.length&&groupBy[0].fieldName===comparisonField){identify=true;}
const dateClasses=identify?this._getDateClasses(dataPoints):null;const dataPtMapping=new WeakMap();const datasetsTmp={};let exceeds=false;let labels=[];const labelMap={};for(const dataPt of dataPoints){const datasetLabel=this._getDatasetLabel(dataPt);if(!(datasetLabel in datasetsTmp)){if(!forceUseAllDataPoints&&Object.keys(datasetsTmp).length>=DATA_LIMIT){exceeds=true;continue;}
datasetsTmp[datasetLabel]={label:datasetLabel,originIndex:dataPt.originIndex,};}
dataPtMapping.set(dataPt,datasetsTmp[datasetLabel]);const x=dataPt.labels.slice(0,mode==="pie"?undefined:1);const trueLabel=x.length?x.join(SEP):_t("Total");if(dateClasses){x[0]=dateClasses.classLabel(dataPt.originIndex,x[0]);}
const key=JSON.stringify(x);if(labelMap[key]===undefined){labelMap[key]=labels.length;if(dateClasses){if(mode==="pie"){x[0]=dateClasses.classMembers(x[0]).join(", ");}else{x[0]=dateClasses.representative(x[0]);}}
const label=x.length?x.join(SEP):_t("Total");labels.push(label);}
dataPt.labelIndex=labelMap[key];dataPt.trueLabel=trueLabel;}
for(const dataPt of dataPoints){if(!dataPtMapping.has(dataPt)){continue;}
const{domain,labelIndex,originIndex,trueLabel,value,identifier,cumulatedStart,}=dataPt;const dataset=dataPtMapping.get(dataPt);if(!dataset.data){let dataLength=labels.length;if(mode!=="pie"&&dateClasses){dataLength=dateClasses.arrayLength(originIndex);}
Object.assign(dataset,{data:new Array(dataLength).fill(0),cumulatedStart,trueLabels:labels.slice(0,dataLength),domains:new Array(dataLength).fill([]),identifiers:new Set(),});}
dataset.data[labelIndex]=value;dataset.domains[labelIndex]=domain;dataset.trueLabels[labelIndex]=trueLabel;dataset.identifiers.add(identifier);}
let datasets=sortBy(Object.values(datasetsTmp),"originIndex");if(mode==="pie"){datasets=datasets.filter((dataset)=>dataset.data.some((v)=>Boolean(v)));const labelsToKeepIndexes={};labels.forEach((_,index)=>{if(datasets.some((dataset)=>Boolean(dataset.data[index]))){labelsToKeepIndexes[index]=true;}});labels=labels.filter((_,index)=>labelsToKeepIndexes[index]);for(const dataset of datasets){dataset.data=dataset.data.filter((_,index)=>labelsToKeepIndexes[index]);dataset.domains=dataset.domains.filter((_,index)=>labelsToKeepIndexes[index]);dataset.trueLabels=dataset.trueLabels.filter((_,index)=>labelsToKeepIndexes[index]);}}
return{datasets,labels,exceeds,};}
_getLabel(description){if(!description){return _t("Sum");}else{return _t("Sum (%s)",description);}}
_getLineOverlayDataset(){const{domains,stacked}=this.metaData;const data=this.data;let lineOverlayDataset=null;if(stacked){const stacks=groupBy(data.datasets,(dataset)=>dataset.originIndex);if(Object.keys(stacks).length==1){const[[originIndex,datasets]]=Object.entries(stacks);if(datasets.length>1){const data=[];for(const dataset of datasets){for(let i=0;i<dataset.data.length;i++){data[i]=(data[i]||0)+dataset.data[i];}}
lineOverlayDataset={label:this._getLabel(domains[originIndex].description),data,trueLabels:datasets[0].trueLabels,};}}}
return lineOverlayDataset;}
_getDatasetLabel(dataPoint){const{measure,measures,domains,mode}=this.metaData;const{labels,originIndex}=dataPoint;if(mode==="pie"){return domains[originIndex].description||"";}
let datasetLabel=labels.slice(1).join(SEP);if(domains.length>1){datasetLabel=domains[originIndex].description+(datasetLabel?SEP+datasetLabel:"");}
datasetLabel=datasetLabel||measures[measure].string;return datasetLabel;}
_getDateClasses(dataPoints){const{domains}=this.metaData;const dateSets=domains.map(()=>new Set());for(const{labels,originIndex}of dataPoints){const date=labels[0];dateSets[originIndex].add(date);}
const arrays=dateSets.map((dateSet)=>[...dateSet]);return new DateClasses(arrays);}
_getDefaultFilterLabel(field){return _t("None");}
_getProcessedDataPoints(){const{domains,groupBy,mode,order}=this.metaData;let processedDataPoints=[];if(mode==="line"){processedDataPoints=this.dataPoints.filter((dataPoint)=>dataPoint.labels[0]!==this._getDefaultFilterLabel(groupBy[0]));}else if(mode==="pie"){processedDataPoints=this.dataPoints.filter((dataPoint)=>dataPoint.value>0&&dataPoint.count!==0);}else{processedDataPoints=this.dataPoints.filter((dataPoint)=>dataPoint.count!==0);}
if(order!==null&&mode!=="pie"&&domains.length===1&&groupBy.length>0){const groupedDataPoints={};for(const dataPt of processedDataPoints){const key=dataPt.labels[0];if(!groupedDataPoints[key]){groupedDataPoints[key]=[];}
groupedDataPoints[key].push(dataPt);}
const groups=Object.values(groupedDataPoints);const groupTotal=(group)=>group.reduce((sum,dataPt)=>sum+dataPt.value,0);processedDataPoints=sortBy(groups,groupTotal,order.toLowerCase()).flat();}
return processedDataPoints;}
async _loadDataPoints(metaData){const{measure,domains,fields,groupBy,resModel,cumulatedStart}=metaData;const fieldName=groupBy[0]?.fieldName;const sequential_field=cumulatedStart&&SEQUENTIAL_TYPES.includes(fields[fieldName]?.type)?fieldName:null;const sequential_spec=sequential_field&&groupBy[0].spec;const measures=["__count"];if(measure!=="__count"){let{aggregator,type}=fields[measure];if(type==="many2one"){aggregator="count_distinct";}
if(aggregator===undefined){throw new Error(`No aggregate function has been provided for the measure '${measure}'`);}
measures.push(`${measure}:${aggregator}`);}
const numbering={};const proms=domains.map(async(domain,originIndex)=>{const data=await this.orm.webReadGroup(resModel,domain.arrayRepr,measures,groupBy.map((gb)=>gb.spec),{lazy:false,context:{fill_temporal:true,...this.searchParams.context},});let start=false;if(cumulatedStart&&sequential_field&&data.groups.length&&domain.arrayRepr.some((leaf)=>leaf.length===3&&leaf[0]==sequential_field)){const first_date=data.groups[0].__range[sequential_spec].from;const new_domain=Domain.combine([new Domain([[sequential_field,"<",first_date]]),Domain.removeDomainLeaves(domain.arrayRepr,[sequential_field]),],"AND").toList();start=await this.orm.webReadGroup(resModel,new_domain,measures,groupBy.filter((gb)=>gb.fieldName!=sequential_field).map((gb)=>gb.spec),{lazy:false,context:{...this.searchParams.context},});}
const dataPoints=[];const cumulatedStartValue={};if(start){for(const group of start.groups){const rawValues=[];for(const gb of groupBy.filter((gb)=>gb.fieldName!=sequential_field)){rawValues.push({[gb.spec]:group[gb.spec]});}
cumulatedStartValue[JSON.stringify(rawValues)]=group[measure];}}
for(const group of data.groups){const{__domain,__count}=group;const labels=[];const rawValues=[];for(const gb of groupBy){let label;const val=group[gb.spec];rawValues.push({[gb.spec]:val});const fieldName=gb.fieldName;const{type}=fields[fieldName];if(type==="boolean"){label=`${val}`;}else if(val===false){label=this._getDefaultFilterLabel(gb);}else if(["many2many","many2one"].includes(type)){const[id,name]=val;const key=JSON.stringify([fieldName,name]);if(!numbering[key]){numbering[key]={};}
const numbers=numbering[key];if(!numbers[id]){numbers[id]=Object.keys(numbers).length+1;}
const num=numbers[id];label=num===1?name:`${name} (${num})`;}else if(type==="selection"){const selected=fields[fieldName].selection.find((s)=>s[0]===val);label=selected[1];}else{label=val;}
labels.push(label);}
let value=group[measure];if(value instanceof Array){value=1;}
if(!Number.isInteger(value)){metaData.allIntegers=false;}
const group_id=JSON.stringify(rawValues.slice(1));dataPoints.push({count:__count,domain:__domain,value,labels,originIndex,identifier:JSON.stringify(rawValues),cumulatedStart:cumulatedStartValue[group_id]||0,});}
return dataPoints;});const promResults=await Promise.all(proms);return promResults.flat();}
_normalize(metaData){const{fields}=metaData;const groupBy=[];for(const gb of metaData.groupBy){let ngb=gb;if(typeof gb==="string"){ngb=getGroupBy(gb,fields);}
groupBy.push(ngb);}
const processedGroupBy=[];for(const gb of groupBy){const{fieldName,interval}=gb;if(!fieldName.includes(".")){const{groupable,type}=fields[fieldName];if(!groupable||["id","__count"].includes(fieldName)||!GROUPABLE_TYPES.includes(type)){continue;}}
const index=processedGroupBy.findIndex((gb)=>gb.fieldName===fieldName);if(index===-1){processedGroupBy.push(gb);}else if(interval){const registeredInterval=processedGroupBy[index].interval;if(rankInterval(registeredInterval)<rankInterval(interval)){processedGroupBy.splice(index,1,gb);}}}
metaData.groupBy=processedGroupBy;metaData.measure=processMeasure(metaData.measure);}
_prepareData(forceUseAllDataPoints=false){const processedDataPoints=this._getProcessedDataPoints();this.data=this._getData(processedDataPoints,forceUseAllDataPoints);this.lineOverlayDataset=null;if(this.metaData.mode==="bar"){this.lineOverlayDataset=this._getLineOverlayDataset();}}}
return __exports;});;

/* /web/static/src/views/graph/graph_renderer.js */
odoo.define('@web/views/graph/graph_renderer',['@web/core/l10n/translation','@web/core/colors/colors','@web/core/registry','@web/views/fields/formatters','@web/views/graph/graph_model','@web/core/utils/arrays','@web/core/assets','@web/core/utils/render','@web/core/utils/hooks','@odoo/owl','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/core/browser/cookie','@web/views/view_components/report_view_measures'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{getBorderWhite,DEFAULT_BG,getColor,getCustomColor,lightenColor,darkenColor,}=require("@web/core/colors/colors");const{registry}=require("@web/core/registry");const{formatFloat}=require("@web/views/fields/formatters");const{SEP}=require("@web/views/graph/graph_model");const{sortBy}=require("@web/core/utils/arrays");const{loadBundle}=require("@web/core/assets");const{renderToString}=require("@web/core/utils/render");const{useService}=require("@web/core/utils/hooks");const{Component,onWillUnmount,useEffect,useRef,onWillStart}=require("@odoo/owl");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{cookie}=require("@web/core/browser/cookie");const{ReportViewMeasures}=require("@web/views/view_components/report_view_measures");const NO_DATA=_t("No data");const formatters=registry.category("formatters");const colorScheme=cookie.get("color_scheme");const GRAPH_LEGEND_COLOR=getCustomColor(colorScheme,"#111827","#ffffff");const GRAPH_GRID_COLOR=getCustomColor(colorScheme,"rgba(0,0,0,.1)","rgba(255,255,255,.15");const GRAPH_LABEL_COLOR=getCustomColor(colorScheme,"#111827","#E4E4E4");const NO_DATA_COLOR=getCustomColor(colorScheme,DEFAULT_BG,"#3C3E4B");const gridOnTop={id:"gridOnTop",afterDraw:(chart)=>{const elements=chart.getDatasetMeta(0).data||[];const ctx=chart.ctx;const chartArea=chart.chartArea;const yAxis=chart.scales.y;const xAxis=chart.scales.x;ctx.lineWidth=1;ctx.strokeStyle=GRAPH_GRID_COLOR;yAxis.ticks.forEach((value,index)=>{const y=yAxis.getPixelForTick(index);ctx.beginPath();ctx.moveTo(chartArea.left,y);ctx.lineTo(chartArea.right,y);ctx.moveTo(chartArea.left-8,y);ctx.lineTo(chartArea.left,y);ctx.setLineDash([]);ctx.stroke();});xAxis.ticks.forEach((value,tickIndex)=>{const x=xAxis.getPixelForTick(tickIndex);ctx.beginPath();ctx.moveTo(x,chartArea.bottom);ctx.lineTo(x,chartArea.bottom+8);ctx.stroke();});elements.forEach((point,eltIndex)=>{xAxis.ticks.forEach((value,tickIndex)=>{if(point.active&&eltIndex===tickIndex){const x=xAxis.getPixelForTick(tickIndex);ctx.beginPath();ctx.moveTo(x,chartArea.top);ctx.lineTo(x,chartArea.bottom);ctx.strokeStyle=GRAPH_GRID_COLOR;ctx.stroke();}});});},};function getMaxWidth(chartArea){const{left,right}=chartArea;return Math.floor((right-left)/1.618)+"px";}
function shortenLabel(label){const groups=label.toString().split(SEP);let shortLabel=groups.slice(0,3).join(SEP);if(shortLabel.length>30){shortLabel=`${shortLabel.slice(0, 30)}...`;}else if(groups.length>3){shortLabel=`${shortLabel}${SEP}...`;}
return shortLabel;}
const GraphRenderer=__exports.GraphRenderer=class GraphRenderer extends Component{static template="web.GraphRenderer";static components={Dropdown,DropdownItem,ReportViewMeasures};static props=["class?","model","buttonTemplate"];setup(){this.model=this.props.model;this.rootRef=useRef("root");this.canvasRef=useRef("canvas");this.containerRef=useRef("container");this.actionService=useService("action");this.chart=null;this.tooltip=null;this.legendTooltip=null;onWillStart(async()=>{await loadBundle("web.chartjs_lib");});useEffect(()=>this.renderChart());onWillUnmount(this.onWillUnmount);}
onWillUnmount(){if(this.chart){this.chart.destroy();}}
adjustTooltipHeight(tooltip,maxTooltipHeight){const sizeOneLine=tooltip.querySelector("tbody tr").clientHeight;const tbodySize=tooltip.querySelector("tbody").clientHeight;const toKeep=Math.max(0,Math.floor((maxTooltipHeight-(tooltip.clientHeight-tbodySize))/sizeOneLine)-1);const lines=tooltip.querySelectorAll("tbody tr");const toRemove=lines.length-toKeep;if(toRemove>0){for(let index=toKeep;index<lines.length;++index){lines[index].remove();}
const tr=document.createElement("tr");const td=document.createElement("td");tr.classList.add("o_show_more","text-center","fw-bold");td.setAttribute("colspan","2");td.innerText=_t("...");tr.appendChild(td);tooltip.querySelector("tbody").appendChild(tr);}}
customTooltip(data,metaData,context){const tooltipModel=context.tooltip;const{measure,measures,disableLinking,mode}=metaData;this.containerRef.el.style.cursor="";this.removeTooltips();if(tooltipModel.opacity===0||tooltipModel.dataPoints.length===0){return;}
if(!disableLinking&&mode!=="line"){this.containerRef.el.style.cursor="pointer";}
const chartAreaTop=this.chart.chartArea.top;const viewContentTop=this.containerRef.el.getBoundingClientRect().top;const innerHTML=renderToString("web.GraphRenderer.CustomTooltip",{maxWidth:getMaxWidth(this.chart.chartArea),measure:measures[measure].string,mode:this.model.metaData.mode,tooltipItems:this.getTooltipItems(data,metaData,tooltipModel),});const template=Object.assign(document.createElement("template"),{innerHTML});const tooltip=template.content.firstChild;this.containerRef.el.prepend(tooltip);let top;const tooltipHeight=tooltip.clientHeight;const minTopAllowed=Math.floor(chartAreaTop);const maxTopAllowed=Math.floor(window.innerHeight-(viewContentTop+tooltipHeight))-2;const y=Math.floor(tooltipModel.y);if(minTopAllowed<=maxTopAllowed){if(y<=maxTopAllowed){if(y>=minTopAllowed){top=y;}else{top=minTopAllowed;}}else{top=maxTopAllowed;}}else{top=minTopAllowed;const maxTooltipHeight=window.innerHeight-(viewContentTop+chartAreaTop)-2;this.adjustTooltipHeight(tooltip,maxTooltipHeight);}
this.fixTooltipLeftPosition(tooltip,tooltipModel.x);tooltip.style.top=Math.floor(top)+"px";this.tooltip=tooltip;}
fixTooltipLeftPosition(tooltip,x){let left;const tooltipWidth=tooltip.clientWidth;const minLeftAllowed=Math.floor(this.chart.chartArea.left+2);const maxLeftAllowed=Math.floor(this.chart.chartArea.right-tooltipWidth-2);x=Math.floor(x);if(x<minLeftAllowed){left=minLeftAllowed;}else if(x>maxLeftAllowed){left=maxLeftAllowed;}else{left=x;}
tooltip.style.left=`${left}px`;}
formatValue(value,allIntegers=true,formatType=""){const largeNumber=Math.abs(value)>=1000;if(formatType){return formatters.get(formatType)(value);}
if(allIntegers&&!largeNumber){return String(value);}
if(largeNumber){return formatFloat(value,{humanReadable:true,decimals:2,minDigits:1});}
return formatFloat(value);}
getBarChartData(){const{domains,stacked}=this.model.metaData;const{data,lineOverlayDataset}=this.model;for(let index=0;index<data.datasets.length;++index){const dataset=data.datasets[index];const itemColor=getColor(index,colorScheme,data.datasets.length);if(stacked){dataset.stack=domains[dataset.originIndex].description||"";}
dataset.backgroundColor=itemColor;dataset.borderRadius=4;}
if(lineOverlayDataset){Object.assign(lineOverlayDataset,{type:"line",order:-1,tension:0,fill:false,pointHitRadius:20,pointRadius:5,pointHoverRadius:10,backgroundColor:getCustomColor(colorScheme,"#343a40","#e9ecef"),borderColor:getCustomColor(colorScheme,"rgba(0,0,0,.3)","rgba(255,255,255,.5)"),borderWidth:2,lineWidth:3,});return{...data,datasets:[...data.datasets,lineOverlayDataset],};}
return data;}
getChartConfig(){const{mode}=this.model.metaData;let data;switch(mode){case"bar":data=this.getBarChartData();break;case"line":data=this.getLineChartData();break;case"pie":data=this.getPieChartData();}
const options=this.prepareOptions();const config={data,options,type:mode};if(mode==="line"){config.plugins=[gridOnTop];}
return config;}
getAnimationOptions(){let delayed;const{mode}=this.model.metaData;const labelsCount=this.model.data.labels.length;const gap=350;const animationOptions={};if(mode==="pie"){animationOptions.offset={duration:200};}else{animationOptions.duration=600;animationOptions.onComplete=()=>{delayed=true;};animationOptions.delay=(context)=>{let delay=0;if((mode==="bar"||mode==="line")&&!delayed){delay=context.dataIndex*(gap/labelsCount);}
return delay;};}
return animationOptions;}
getElementOptions(){const{mode,stacked}=this.model.metaData;const elementOptions={};if(mode==="bar"){elementOptions.bar={borderWidth:1};}else if(mode==="line"){elementOptions.line={fill:stacked,tension:0};}
return elementOptions;}
getLegendOptions(){const{mode}=this.model.metaData;const legendOptions={onHover:this.onLegendHover.bind(this),onLeave:this.onLegendLeave.bind(this),};if(mode==="line"){legendOptions.onClick=this.onLegendClick.bind(this);}
if(mode==="pie"){legendOptions.labels={generateLabels:(chart)=>{return chart.data.labels.map((label,index)=>{const hidden=!chart.getDataVisibility(index);const fullText=label;const text=shortenLabel(fullText);const fillStyle=label===NO_DATA?NO_DATA_COLOR:getColor(index,colorScheme,chart.data.labels.length);return{text,fullText,fillStyle,hidden,index,fontColor:GRAPH_LEGEND_COLOR,lineWidth:0,};});},};}else{legendOptions.position="top";legendOptions.align="end";const referenceColor=mode==="bar"?"backgroundColor":"borderColor";legendOptions.labels={generateLabels:(chart)=>{const{data}=chart;const labels=data.datasets.map((dataset,index)=>{return{text:shortenLabel(dataset.label),fullText:dataset.label,fillStyle:dataset[referenceColor],hidden:!chart.isDatasetVisible(index),lineCap:dataset.borderCapStyle,lineDash:dataset.borderDash,lineDashOffset:dataset.borderDashOffset,lineJoin:dataset.borderJoinStyle,lineWidth:dataset.borderWidth,strokeStyle:dataset[referenceColor],pointStyle:dataset.pointStyle,datasetIndex:index,fontColor:GRAPH_LEGEND_COLOR,};});return labels;},};}
return legendOptions;}
getLineChartData(){const{cumulated}=this.model.metaData;const data=this.model.data;for(let index=0;index<data.datasets.length;++index){const dataset=data.datasets[index];const itemColor=getColor(index,colorScheme,data.datasets.length);dataset.backgroundColor=getCustomColor(colorScheme,lightenColor(itemColor,0.5),darkenColor(itemColor,0.5));dataset.cubicInterpolationMode="monotone";dataset.borderColor=itemColor;dataset.borderWidth=2;dataset.hoverBackgroundColor=dataset.borderColor;dataset.pointRadius=3;dataset.pointHoverRadius=6;if(cumulated){let accumulator=dataset.cumulatedStart;dataset.data=dataset.data.map((value)=>{accumulator+=value;return accumulator;});}
if(data.labels.length===1){dataset.data.unshift(undefined);dataset.trueLabels.unshift(undefined);dataset.domains.unshift(undefined);}
dataset.pointBackgroundColor=dataset.borderColor;}
data.labels=data.labels.length>1?data.labels:["",...data.labels,""];return data;}
getPieChartData(){const{domains}=this.model.metaData;const data=this.model.data;const colors=data.labels.map((_,index)=>getColor(index,colorScheme,data.labels.length));const borderColor=getBorderWhite(colorScheme);for(const dataset of data.datasets){dataset.backgroundColor=colors;dataset.hoverBackgroundColor=colors;dataset.borderColor=borderColor;dataset.hoverOffset=60;}
const representedOriginIndexes=new Set(data.datasets.map((dataset)=>dataset.originIndex));let addNoDataToLegend=false;const fakeData=new Array(data.labels.length+1);fakeData[data.labels.length]=1;const fakeTrueLabels=new Array(data.labels.length+1);fakeTrueLabels[data.labels.length]=NO_DATA;for(let index=0;index<domains.length;++index){if(!representedOriginIndexes.has(index)){data.datasets.push({label:domains[index].description,data:fakeData,trueLabels:fakeTrueLabels,backgroundColor:[...colors,NO_DATA_COLOR],borderColor,});addNoDataToLegend=true;}}
if(addNoDataToLegend){data.labels.push(NO_DATA);}
return data;}
getScaleOptions(){const{labels}=this.model.data;const{fieldAttrs,measure,measures,mode,stacked}=this.model.metaData;if(mode==="pie"){return{};}
const xAxe={type:"category",ticks:{callback:(val,index)=>{const value=labels[index];return shortenLabel(value);},color:GRAPH_LABEL_COLOR,},grid:{color:"transparent",},border:{display:false,},};const yAxe={beginAtZero:true,type:"linear",title:{text:measures[measure].string,color:cookie.get("color_scheme")==="dark"?getColor(15,cookie.get("color_scheme")):null,},ticks:{callback:(value)=>this.formatValue(value,false,fieldAttrs[measure]?.widget),color:GRAPH_LABEL_COLOR,},stacked:mode==="line"&&stacked?stacked:undefined,grid:{display:mode==="line"?false:true,color:GRAPH_GRID_COLOR,},border:{display:false,},suggestedMax:0,suggestedMin:0,};return{x:xAxe,y:yAxe};}
getTooltipItems(data,metaData,tooltipModel){const{allIntegers,domains,mode,groupBy,measure}=metaData;const sortedDataPoints=sortBy(tooltipModel.dataPoints,"raw","desc");const items=[];for(const item of sortedDataPoints){const index=item.dataIndex;const dataset=data.datasets[item.datasetIndex]||this.model.lineOverlayDataset;let label=dataset.trueLabels[index];let value=dataset.data[index];const measureWidget=metaData.fieldAttrs[measure]?.widget;value=this.formatValue(value,allIntegers,measureWidget);let boxColor;let percentage;if(mode==="pie"){if(label===NO_DATA){value=this.formatValue(0,allIntegers,measureWidget);}
if(domains.length>1){label=`${dataset.label} / ${label}`;}
boxColor=dataset.backgroundColor[index];const totalData=dataset.data.reduce((a,b)=>a+b,0);percentage=totalData&&((dataset.data[index]*100)/totalData).toFixed(2);}else{if(groupBy.length>1||domains.length>1){label=`${label} / ${dataset.label}`;}
boxColor=mode==="bar"?dataset.backgroundColor:dataset.borderColor;}
items.push({label,value,boxColor,percentage});}
return items;}
getTooltipOptions(){const{data,metaData}=this.model;const{mode}=metaData;const tooltipOptions={enabled:false,external:this.customTooltip.bind(this,data,metaData),};if(mode==="line"){tooltipOptions.mode="index";tooltipOptions.intersect=false;tooltipOptions.position="average";}
if(mode==="bar"){tooltipOptions.xAlign="center";tooltipOptions.yAlign="bottom";}
if(mode==="pie"){tooltipOptions.xAlign="center";tooltipOptions.yAlign="center";}
return tooltipOptions;}
onGraphClicked(ev){const[activeElement]=this.chart.getElementsAtEventForMode(ev,"nearest",{intersect:true},false);if(!activeElement){return;}
const{datasetIndex,index}=activeElement;const{domains}=this.chart.data.datasets[datasetIndex];if(domains){this.onGraphClickedFinal(domains[index]);}}
onLegendClick(ev,legendItem){this.removeTooltips();const index=legendItem.datasetIndex;const meta=this.chart.getDatasetMeta(index);meta.hidden=meta.hidden===null?!this.chart.data.datasets[index].hidden:null;this.chart.update();}
onLegendHover(ev,legendItem){ev=ev.native;this.canvasRef.el.style.cursor="pointer";const{fullText,text}=legendItem;if(this.legendTooltip||text===fullText){return;}
const viewContentTop=this.canvasRef.el.getBoundingClientRect().top;const legendTooltip=Object.assign(document.createElement("div"),{className:"o_tooltip_legend popover p-3 pe-none position-absolute",innerText:fullText,});legendTooltip.style.top=`${ev.clientY - viewContentTop}px`;legendTooltip.style.maxWidth=getMaxWidth(this.chart.chartArea);this.containerRef.el.appendChild(legendTooltip);this.fixTooltipLeftPosition(legendTooltip,ev.clientX);this.legendTooltip=legendTooltip;}
onLegendLeave(){this.canvasRef.el.style.cursor="";this.removeLegendTooltip();}
prepareOptions(){const{disableLinking,mode}=this.model.metaData;const options={maintainAspectRatio:false,scales:this.getScaleOptions(),plugins:{legend:this.getLegendOptions(),tooltip:this.getTooltipOptions(),},elements:this.getElementOptions(),onResize:()=>{this.resizeChart(options);},animation:this.getAnimationOptions(),};if(!disableLinking&&mode!=="line"){options.onClick=this.onGraphClicked.bind(this);}
if(mode==="line"){options.interaction={mode:"index",intersect:false,};}
if(mode==="pie"){options.radius="90%";}
return options;}
resizeChart(context){const{mode}=this.model.metaData;if(mode==="pie"){if(this.env.isSmall){context.plugins.legend.position="bottom";context.plugins.legend.align="center";}else{context.plugins.legend.position="right";context.plugins.legend.align="start";}}}
removeLegendTooltip(){if(this.legendTooltip){this.legendTooltip.remove();this.legendTooltip=null;}}
removeTooltips(){if(this.tooltip){this.tooltip.remove();this.tooltip=null;}
this.removeLegendTooltip();}
renderChart(){if(this.chart){this.chart.destroy();}
if(this.canvasRef.el){const config=this.getChartConfig();this.chart=new Chart(this.canvasRef.el,config);}}
openView(domain,views,context){this.actionService.doAction({context,domain,name:this.model.metaData.title,res_model:this.model.metaData.resModel,target:"current",type:"ir.actions.act_window",views,},{viewType:"list",});}
onGraphClickedFinal(domain){const{context}=this.model.metaData;Object.keys(context).forEach((x)=>{if(x==="group_by"||x.startsWith("search_default_")){delete context[x];}});const views={};for(const[viewId,viewType]of this.env.config.views||[]){views[viewType]=viewId;}
function getView(viewType){return[views[viewType]||false,viewType];}
const actionViews=[getView("list"),getView("form")];this.openView(domain,actionViews,context);}
onMeasureSelected({measure}){this.model.updateMetaData({measure});}
onModeSelected(mode){if(this.model.metaData.mode!=mode){this.model.updateMetaData({mode});}}
toggleOrder(order){const{order:currentOrder}=this.model.metaData;const nextOrder=currentOrder===order?null:order;this.model.updateMetaData({order:nextOrder});}
toggleStacked(){const{stacked}=this.model.metaData;this.model.updateMetaData({stacked:!stacked});}
toggleCumulated(){const{cumulated}=this.model.metaData;this.model.updateMetaData({cumulated:!cumulated});}}
return __exports;});;

/* /web/static/src/views/graph/graph_search_model.js */
odoo.define('@web/views/graph/graph_search_model',['@web/search/search_model'],function(require){'use strict';let __exports={};const{SearchModel}=require("@web/search/search_model");const GraphSearchModel=__exports.GraphSearchModel=class GraphSearchModel extends SearchModel{_getIrFilterDescription(){this.preparingIrFilterDescription=true;const result=super._getIrFilterDescription(...arguments);this.preparingIrFilterDescription=false;return result;}
_getSearchItemGroupBys(activeItem){const{searchItemId}=activeItem;const{context,type}=this.searchItems[searchItemId];if(!this.preparingIrFilterDescription&&type==="favorite"&&context.graph_groupbys){return context.graph_groupbys;}
return super._getSearchItemGroupBys(...arguments);}}
return __exports;});;

/* /web/static/src/views/graph/graph_view.js */
odoo.define('@web/views/graph/graph_view',['@web/core/l10n/translation','@web/core/registry','@web/views/graph/graph_arch_parser','@web/views/graph/graph_model','@web/views/graph/graph_controller','@web/views/graph/graph_renderer','@web/views/graph/graph_search_model'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{GraphArchParser}=require("@web/views/graph/graph_arch_parser");const{GraphModel}=require("@web/views/graph/graph_model");const{GraphController}=require("@web/views/graph/graph_controller");const{GraphRenderer}=require("@web/views/graph/graph_renderer");const{GraphSearchModel}=require("@web/views/graph/graph_search_model");const viewRegistry=registry.category("views");const graphView=__exports.graphView={type:"graph",Controller:GraphController,Renderer:GraphRenderer,Model:GraphModel,ArchParser:GraphArchParser,SearchModel:GraphSearchModel,searchMenuTypes:["filter","groupBy","comparison","favorite"],buttonTemplate:"web.GraphView.Buttons",props:(genericProps,view)=>{let modelParams;if(genericProps.state){modelParams=genericProps.state.metaData;}else{const{arch,fields,resModel}=genericProps;const parser=new view.ArchParser();const archInfo=parser.parse(arch,fields);modelParams={disableLinking:Boolean(archInfo.disableLinking),fieldAttrs:archInfo.fieldAttrs,fields:fields,groupBy:archInfo.groupBy,measure:archInfo.measure||"__count",viewMeasures:archInfo.measures,mode:archInfo.mode||"bar",order:archInfo.order||null,resModel:resModel,stacked:"stacked"in archInfo?archInfo.stacked:true,cumulated:archInfo.cumulated||false,cumulatedStart:archInfo.cumulatedStart||false,title:archInfo.title||_t("Untitled"),};}
return{...genericProps,modelParams,Model:view.Model,Renderer:view.Renderer,buttonTemplate:view.buttonTemplate,};},};viewRegistry.add("graph",graphView);return __exports;});;

/* /web/static/src/views/kanban/kanban_arch_parser.js */
odoo.define('@web/views/kanban/kanban_arch_parser',['@web/core/utils/strings','@web/core/utils/xml','@web/search/utils/order_by','@web/views/fields/field','@web/views/utils','@web/views/widgets/widget'],function(require){'use strict';let __exports={};const{exprToBoolean}=require("@web/core/utils/strings");const{extractAttributes,visitXML}=require("@web/core/utils/xml");const{stringToOrderBy}=require("@web/search/utils/order_by");const{Field}=require("@web/views/fields/field");const{getActiveActions,processButton}=require("@web/views/utils");const{Widget}=require("@web/views/widgets/widget");const LEGACY_KANBAN_BOX_ATTRIBUTE=__exports.LEGACY_KANBAN_BOX_ATTRIBUTE="kanban-box";const LEGACY_KANBAN_MENU_ATTRIBUTE=__exports.LEGACY_KANBAN_MENU_ATTRIBUTE="kanban-menu";const KANBAN_CARD_ATTRIBUTE=__exports.KANBAN_CARD_ATTRIBUTE="card";const KANBAN_MENU_ATTRIBUTE=__exports.KANBAN_MENU_ATTRIBUTE="menu";const KanbanArchParser=__exports.KanbanArchParser=class KanbanArchParser{parse(xmlDoc,models,modelName){const fields=models[modelName].fields;const className=xmlDoc.getAttribute("class")||null;const canOpenRecords=exprToBoolean(xmlDoc.getAttribute("can_open"),true);let defaultOrder=stringToOrderBy(xmlDoc.getAttribute("default_order")||null);const defaultGroupBy=xmlDoc.getAttribute("default_group_by");const limit=xmlDoc.getAttribute("limit");const countLimit=xmlDoc.getAttribute("count_limit");const recordsDraggable=exprToBoolean(xmlDoc.getAttribute("records_draggable"),true);const groupsDraggable=exprToBoolean(xmlDoc.getAttribute("groups_draggable"),true);const activeActions=getActiveActions(xmlDoc);activeActions.archiveGroup=exprToBoolean(xmlDoc.getAttribute("archivable"),true);activeActions.createGroup=exprToBoolean(xmlDoc.getAttribute("group_create"),true);activeActions.deleteGroup=exprToBoolean(xmlDoc.getAttribute("group_delete"),true);activeActions.editGroup=exprToBoolean(xmlDoc.getAttribute("group_edit"),true);activeActions.quickCreate=activeActions.create&&exprToBoolean(xmlDoc.getAttribute("quick_create"),true);const onCreate=xmlDoc.getAttribute("on_create");const quickCreateView=xmlDoc.getAttribute("quick_create_view");const tooltipInfo={};let handleField=null;const fieldNodes={};const fieldNextIds={};const widgetNodes={};let widgetNextId=0;const jsClass=xmlDoc.getAttribute("js_class");const action=xmlDoc.getAttribute("action");const type=xmlDoc.getAttribute("type");const openAction=action&&type?{action,type}:null;const templateDocs={};let headerButtons=[];const creates=[];let button_id=0;visitXML(xmlDoc,(node)=>{if(node.hasAttribute("t-name")){templateDocs[node.getAttribute("t-name")]=node;return;}
if(node.tagName==="header"){headerButtons=[...node.children].filter((node)=>node.tagName==="button").map((node)=>({...processButton(node),type:"button",id:button_id++,})).filter((button)=>button.invisible!=="True"&&button.invisible!=="1");return false;}else if(node.tagName==="control"){for(const childNode of node.children){if(childNode.tagName==="button"){creates.push({type:"button",...processButton(childNode),});}else if(childNode.tagName==="create"){creates.push({type:"create",context:childNode.getAttribute("context"),string:childNode.getAttribute("string"),});}}
return false;}
if(node.tagName==="field"){const widget=node.getAttribute("widget");if(!widget&&models[modelName].fields[node.getAttribute("name")].type==="many2many"){node.setAttribute("widget","many2many_tags");}
const fieldInfo=Field.parseFieldNode(node,models,modelName,"kanban",jsClass);const name=fieldInfo.name;if(!(fieldInfo.name in fieldNextIds)){fieldNextIds[fieldInfo.name]=0;}
const fieldId=`${fieldInfo.name}_${fieldNextIds[fieldInfo.name]++}`;fieldNodes[fieldId]=fieldInfo;node.setAttribute("field_id",fieldId);if(fieldInfo.options.group_by_tooltip){tooltipInfo[name]=fieldInfo.options.group_by_tooltip;}
if(fieldInfo.isHandle){handleField=name;}}
if(node.tagName==="widget"){const widgetInfo=Widget.parseWidgetNode(node);const widgetId=`widget_${++widgetNextId}`;widgetNodes[widgetId]=widgetInfo;node.setAttribute("widget_id",widgetId);}
if(node.tagName==="img"){const attSrc=node.getAttribute("t-att-src");if(attSrc&&/\bkanban_image\b/.test(attSrc)&&!Object.values(fieldNodes).some((f)=>f.name==="write_date")){fieldNodes.write_date_0={name:"write_date",type:"datetime"};}}});let progressAttributes=false;const progressBar=xmlDoc.querySelector("progressbar");if(progressBar){progressAttributes=this.parseProgressBar(progressBar,fields);}
let cardDoc=templateDocs[KANBAN_CARD_ATTRIBUTE];const isLegacyArch=!cardDoc;if(isLegacyArch){console.warn("'kanban-box' is deprecated, define a 'card' template instead");}
if(!cardDoc){cardDoc=templateDocs[LEGACY_KANBAN_BOX_ATTRIBUTE];if(!cardDoc){throw new Error(`Missing '${KANBAN_CARD_ATTRIBUTE}' template.`);}}
const cardClassName=(!isLegacyArch&&cardDoc.getAttribute("class"))||"";if(!defaultOrder.length&&handleField){const handleFieldSort=`${handleField}, id`;defaultOrder=stringToOrderBy(handleFieldSort);}
return{activeActions,canOpenRecords,cardClassName,cardColorField:xmlDoc.getAttribute("highlight_color"),className,creates,defaultGroupBy,fieldNodes,widgetNodes,handleField,headerButtons,defaultOrder,onCreate,openAction,quickCreateView,recordsDraggable,groupsDraggable,limit:limit&&parseInt(limit,10),countLimit:countLimit&&parseInt(countLimit,10),progressAttributes,templateDocs,tooltipInfo,examples:xmlDoc.getAttribute("examples"),xmlDoc,isLegacyArch,};}
parseProgressBar(progressBar,fields){const attrs=extractAttributes(progressBar,["field","colors","sum_field","help"]);return{fieldName:attrs.field,colors:JSON.parse(attrs.colors),sumField:fields[attrs.sum_field]||false,help:attrs.help,};}}
return __exports;});;

/* /web/static/src/views/kanban/kanban_color_picker_legacy.js */
odoo.define('@web/views/kanban/kanban_color_picker_legacy',['@web/core/colorlist/colorlist','@web/core/utils/patch','@web/core/utils/xml','@web/views/kanban/kanban_arch_parser','@web/views/kanban/kanban_compiler','@web/views/kanban/kanban_record'],function(require){'use strict';let __exports={};const{ColorList}=require("@web/core/colorlist/colorlist");const{patch}=require("@web/core/utils/patch");const{createElement}=require("@web/core/utils/xml");const{LEGACY_KANBAN_BOX_ATTRIBUTE,KanbanArchParser}=require("@web/views/kanban/kanban_arch_parser");const{KanbanCompiler}=require("@web/views/kanban/kanban_compiler");const{KanbanRecord,getColorIndex}=require("@web/views/kanban/kanban_record");patch(KanbanArchParser.prototype,{parse(xmlDoc,models,modelName){const archInfo=super.parse(xmlDoc,models,modelName);const legacyCardDoc=archInfo.templateDocs[LEGACY_KANBAN_BOX_ATTRIBUTE];if(legacyCardDoc){const cardColorEl=legacyCardDoc.querySelector("[color]");const cardColorField=cardColorEl&&cardColorEl.getAttribute("color");const colorEl=xmlDoc.querySelector("templates .oe_kanban_colorpicker[data-field]");const colorField=(colorEl&&colorEl.getAttribute("data-field"))||"color";archInfo.cardColorField=archInfo.cardColorField||cardColorField;archInfo.colorField=colorField;}
return archInfo;},});patch(KanbanCompiler.prototype,{setup(){super.setup();this.compilers.push({selector:".oe_kanban_colorpicker",fn:this.compileColorPicker});},compileColorPicker(){return createElement("t",{"t-call":"web.KanbanColorPicker","t-call-context":"__comp__",});},});function getColorClass(value){return`oe_kanban_color_${getColorIndex(value)}`;}
function getColorName(value){return ColorList.COLORS[getColorIndex(value)];}
patch(KanbanRecord.prototype,{selectColor(colorIndex){const{archInfo,record}=this.props;return record.update({[archInfo.colorField]:colorIndex},{save:true});},get renderingContext(){return Object.assign(super.renderingContext,{kanban_color:getColorClass,kanban_getcolor:getColorIndex,kanban_getcolorname:getColorName,});},});return __exports;});;

/* /web/static/src/views/kanban/kanban_column_examples_dialog.js */
odoo.define('@web/views/kanban/kanban_column_examples_dialog',['@web/core/dialog/dialog','@web/core/notebook/notebook','@odoo/owl'],function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{Notebook}=require("@web/core/notebook/notebook");const{Component,useRef}=require("@odoo/owl");const random=(min,max)=>Math.floor(Math.random()*(max-min)+min);class KanbanExamplesNotebookTemplate extends Component{static template="web.KanbanExamplesNotebookTemplate";static props=["*"];static defaultProps={columns:[],foldedColumns:[],};setup(){this.columns=[];const hasBullet=this.props.bullets&&this.props.bullets.length;const allColumns=[...this.props.columns,...this.props.foldedColumns];for(const title of allColumns){const col={title,records:[]};this.columns.push(col);for(let i=0;i<random(1,5);i++){const rec={id:i};if(hasBullet&&Math.random()>0.3){const sampleId=Math.floor(Math.random()*this.props.bullets.length);rec.bullet=this.props.bullets[sampleId];}
col.records.push(rec);}}}}
const KanbanColumnExamplesDialog=__exports.KanbanColumnExamplesDialog=class KanbanColumnExamplesDialog extends Component{static template="web.KanbanColumnExamplesDialog";static components={Dialog,Notebook};static props=["*"];setup(){this.navList=useRef("navList");this.pages=[];this.activePage=null;this.props.examples.forEach((eg)=>{this.pages.push({Component:KanbanExamplesNotebookTemplate,title:eg.name,props:eg,id:eg.name,});});}
onPageUpdate(page){this.activePage=page;}
applyExamples(){const index=this.props.examples.findIndex((e)=>e.name===this.activePage);this.props.applyExamples(index);this.props.close();}}
return __exports;});;

/* /web/static/src/views/kanban/kanban_column_quick_create.js */
odoo.define('@web/views/kanban/kanban_column_quick_create',['@web/core/l10n/translation','@web/core/hotkeys/hotkey_hook','@web/core/utils/hooks','@web/views/kanban/kanban_column_examples_dialog','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{useHotkey}=require("@web/core/hotkeys/hotkey_hook");const{useAutofocus,useService}=require("@web/core/utils/hooks");const{KanbanColumnExamplesDialog}=require("@web/views/kanban/kanban_column_examples_dialog");const{Component,useExternalListener,useState,useRef}=require("@odoo/owl");const KanbanColumnQuickCreate=__exports.KanbanColumnQuickCreate=class KanbanColumnQuickCreate extends Component{static template="web.KanbanColumnQuickCreate";static props={exampleData:[Object,{value:null}],onFoldChange:Function,onValidate:Function,folded:Boolean,groupByField:Object,};setup(){this.dialog=useService("dialog");this.root=useRef("root");this.state=useState({hasInputFocused:false,});useAutofocus();this.inputRef=useRef("autofocus");useExternalListener(window,"mousedown",(ev)=>{this.mousedownTarget=ev.target;});useExternalListener(window,"click",(ev)=>{const target=this.mousedownTarget||ev.target;const gotClickedInside=this.root.el.contains(target);if(!gotClickedInside){this.fold();}
this.mousedownTarget=null;},{capture:true});useHotkey("escape",()=>this.fold());}
get canShowExamples(){const{allowedGroupBys=[],examples=[]}=this.props.exampleData||{};const hasExamples=Boolean(examples.length);return hasExamples&&allowedGroupBys.includes(this.props.groupByField.name);}
get relatedFieldName(){return this.props.groupByField.string;}
fold(){this.props.onFoldChange(true);}
unfold(){this.props.onFoldChange(false);}
validate(){const title=this.inputRef.el.value.trim();if(title.length){this.props.onValidate(title);this.inputRef.el.value="";}}
showExamples(){this.dialog.add(KanbanColumnExamplesDialog,{examples:this.props.exampleData.examples,applyExamplesText:this.props.exampleData.applyExamplesText||_t("Use This For My Kanban"),applyExamples:(index)=>{const{examples,foldField}=this.props.exampleData;const{columns,foldedColumns=[]}=examples[index];for(const groupName of columns){this.props.onValidate(groupName);}
for(const groupName of foldedColumns){this.props.onValidate(groupName,foldField);}},});}
onInputKeydown(ev){if(ev.key==="Enter"){this.validate();}}}
return __exports;});;

/* /web/static/src/views/kanban/kanban_compiler.js */
odoo.define('@web/views/kanban/kanban_compiler',['@web/core/utils/xml','@web/views/utils','@web/views/view_compiler'],function(require){'use strict';let __exports={};const{append,combineAttributes,createElement,extractAttributes,getTag,}=require("@web/core/utils/xml");const{toStringExpression}=require("@web/views/utils");const{toInterpolatedStringExpression,ViewCompiler}=require("@web/views/view_compiler");const ACTION_TYPES=["action","object"];const SPECIAL_TYPES=[...ACTION_TYPES,"edit","open","delete","url","set_cover","archive","unarchive",];const KanbanCompiler=__exports.KanbanCompiler=class KanbanCompiler extends ViewCompiler{setup(){this.ctx.readonly="read_only_mode";this.compilers.push({selector:"t[t-call]",fn:this.compileTCall},{selector:"img",fn:this.compileImage});}
compileButton(el,params){const type=el.getAttribute("type");if(!SPECIAL_TYPES.includes(type)){return super.compileButton(el,params);}
combineAttributes(el,"class",["oe_kanban_action"]);if(ACTION_TYPES.includes(type)){if(!el.hasAttribute("debounce")){el.setAttribute("debounce",300);}
return super.compileButton(el,params);}
const nodeParams=extractAttributes(el,["type"]);if(type==="set_cover"){const{"auto-open":autoOpen,"data-field":fieldName}=extractAttributes(el,["auto-open","data-field",]);Object.assign(nodeParams,{autoOpen,fieldName});}
const strParams=Object.entries(nodeParams).map(([k,v])=>[k,toStringExpression(v)].join(":")).join(",");el.setAttribute("t-on-click",`()=>__comp__.triggerAction({${strParams}})`);const compiled=createElement(el.nodeName);for(const{name,value}of el.attributes){compiled.setAttribute(name,value);}
if(getTag(el,true)==="a"&&!compiled.hasAttribute("href")){compiled.setAttribute("href","#");}
for(const child of el.childNodes){append(compiled,this.compileNode(child,params));}
return compiled;}
compileImage(el){const element=el.cloneNode(true);element.setAttribute("loading","lazy");return element;}
compileField(el,params){let compiled;let isSpan=false;const recordExpr=params.recordExpr||"__comp__.props.record";const dataPointIdExpr=params.dataPointIdExpr||`${recordExpr}.id`;if(!el.hasAttribute("widget")){isSpan=true;const fieldId=el.getAttribute("field_id");compiled=createElement("span",{"t-out":params.formattedValueExpr||`__comp__.getFormattedValue("${fieldId}")`,});}else{compiled=super.compileField(el,params);const fieldId=el.getAttribute("field_id");compiled.setAttribute("id",`'${fieldId}_' + ${dataPointIdExpr}`);const readonlyAttr=compiled.getAttribute("readonly");if(readonlyAttr){compiled.setAttribute("readonly",`${recordExpr}.isInEdition || (${readonlyAttr})`);}else{compiled.setAttribute("readonly",`${recordExpr}.isInEdition`);}}
if(params.isLegacy){const{bold,display}=extractAttributes(el,["bold","display"]);const classNames=[];if(display==="right"){classNames.push("float-end");}else if(display==="full"){classNames.push("o_text_block");}
if(bold){classNames.push("o_text_bold");}
if(classNames.length>0){const clsFormatted=isSpan?classNames.join(" "):toStringExpression(classNames.join(" "));compiled.setAttribute("class",clsFormatted);}}
const attrs={};for(const attr of el.attributes){attrs[attr.name]=attr.value;}
if(el.hasAttribute("widget")){const attrsParts=Object.entries(attrs).map(([key,value])=>{if(key.startsWith("t-attf-")){key=key.slice(7);value=toInterpolatedStringExpression(value);}else if(key.startsWith("t-att-")){key=key.slice(6);value=`"" + (${value})`;}else if(key.startsWith("t-att")){throw new Error("t-att on <field> nodes is not supported");}else if(!key.startsWith("t-")){value=toStringExpression(value);}
return`'${key}':${value}`;});compiled.setAttribute("attrs",`{${attrsParts.join(",")}}`);}
for(const attr in attrs){if(attr.startsWith("t-")&&!attr.startsWith("t-att")){compiled.setAttribute(attr,attrs[attr]);}}
return compiled;}
compileTCall(el,params){const compiled=this.compileGenericNode(el,params);const tname=el.getAttribute("t-call");if(tname in this.templates){compiled.setAttribute("t-call",`{{__comp__.templates[${toStringExpression(tname)}]}}`);}
return compiled;}}
KanbanCompiler.OWL_DIRECTIVE_WHITELIST=[...ViewCompiler.OWL_DIRECTIVE_WHITELIST,"t-name","t-esc","t-out","t-set","t-value","t-if","t-else","t-elif","t-foreach","t-as","t-key","t-att.*","t-call","t-translation",];return __exports;});;

/* /web/static/src/views/kanban/kanban_controller.js */
odoo.define('@web/views/kanban/kanban_controller',['@web/core/confirmation_dialog/confirmation_dialog','@web/core/l10n/translation','@web/core/utils/hooks','@web/search/cog_menu/cog_menu','@web/core/py_js/py','@web/search/action_hook','@web/search/layout','@web/search/pager_hook','@web/search/search_bar/search_bar','@web/search/search_bar/search_bar_toggler','@web/session','@web/model/model','@web/views/standard_view_props','@web/views/view_button/multi_record_view_button','@web/views/view_button/view_button_hook','@web/model/relational_model/utils','@web/views/kanban/kanban_renderer','@web/views/kanban/progress_bar_hook','@odoo/owl'],function(require){'use strict';let __exports={};const{deleteConfirmationMessage,ConfirmationDialog,}=require("@web/core/confirmation_dialog/confirmation_dialog");const{_t}=require("@web/core/l10n/translation");const{useService}=require("@web/core/utils/hooks");const{CogMenu}=require("@web/search/cog_menu/cog_menu");const{evaluateBooleanExpr}=require("@web/core/py_js/py");const{useSetupAction}=require("@web/search/action_hook");const{Layout}=require("@web/search/layout");const{usePager}=require("@web/search/pager_hook");const{SearchBar}=require("@web/search/search_bar/search_bar");const{useSearchBarToggler}=require("@web/search/search_bar/search_bar_toggler");const{session}=require("@web/session");const{useModelWithSampleData}=require("@web/model/model");const{standardViewProps}=require("@web/views/standard_view_props");const{MultiRecordViewButton}=require("@web/views/view_button/multi_record_view_button");const{useViewButtons}=require("@web/views/view_button/view_button_hook");const{addFieldDependencies,extractFieldsFromArchInfo}=require("@web/model/relational_model/utils");const{KanbanRenderer}=require("@web/views/kanban/kanban_renderer");const{useProgressBar}=require("@web/views/kanban/progress_bar_hook");const{Component,reactive,useRef,useState}=require("@odoo/owl");const QUICK_CREATE_FIELD_TYPES=["char","boolean","many2one","selection","many2many"];const KanbanController=__exports.KanbanController=class KanbanController extends Component{static template=`web.KanbanView`;static components={Layout,KanbanRenderer,MultiRecordViewButton,SearchBar,CogMenu};static props={...standardViewProps,defaultGroupBy:{validate:(dgb)=>!dgb||typeof dgb==="string",optional:true,},editable:{type:Boolean,optional:true},forceGlobalClick:{type:Boolean,optional:true},onSelectionChanged:{type:Function,optional:true},showButtons:{type:Boolean,optional:true},Compiler:{type:Function,optional:true},Model:Function,Renderer:Function,buttonTemplate:String,archInfo:Object,};static defaultProps={createRecord:()=>{},forceGlobalClick:false,selectRecord:()=>{},showButtons:true,};setup(){this.actionService=useService("action");this.dialog=useService("dialog");const{Model,archInfo}=this.props;class KanbanSampleModel extends Model{setup(){super.setup(...arguments);this.initialSampleGroups=undefined;}
hasData(){if(this.root.groups){if(!this.root.groups.length){return true;}
return this.root.groups.some((group)=>group.hasData);}
return super.hasData();}
async load(){if(this.orm.isSample&&this.initialSampleGroups){this.orm.setGroups(this.initialSampleGroups);}
return super.load(...arguments);}
async _webReadGroup(){const result=await super._webReadGroup(...arguments);if(!this.initialSampleGroups){this.initialSampleGroups=JSON.parse(JSON.stringify(result.groups));}
return result;}
removeSampleDataInGroups(){if(this.useSampleModel){for(const group of this.root.groups){const list=group.list;group.count=0;list.count=0;if(list.records){list.records=[];}else{list.groups=[];}}}}}
this.model=useState(useModelWithSampleData(KanbanSampleModel,this.modelParams,this.modelOptions));if(archInfo.progressAttributes){const{activeBars}=this.props.state||{};this.progressBarState=useProgressBar(archInfo.progressAttributes,this.model,this.progressBarAggregateFields,activeBars);}
this.headerButtons=archInfo.headerButtons;const self=this;this.quickCreateState=reactive({get groupId(){return this._groupId||false;},set groupId(groupId){if(self.model.useSampleModel){self.model.removeSampleDataInGroups();self.model.useSampleModel=false;}
this._groupId=groupId;},view:archInfo.quickCreateView,});this.rootRef=useRef("root");useViewButtons(this.rootRef,{beforeExecuteAction:this.beforeExecuteActionButton.bind(this),afterExecuteAction:this.afterExecuteActionButton.bind(this),reload:()=>this.model.load(),});useSetupAction({rootRef:this.rootRef,getLocalState:()=>{return{activeBars:this.progressBarState?.activeBars,modelState:this.model.exportState(),};},});usePager(()=>{const root=this.model.root;const{count,hasLimitedCount,isGrouped,limit,offset}=root;if(!isGrouped){return{offset:offset,limit:limit,total:count,onUpdate:async({offset,limit},hasNavigated)=>{await this.model.root.load({offset,limit});await this.onUpdatedPager();if(hasNavigated){this.onPageChangeScroll();}},updateTotal:hasLimitedCount?()=>root.fetchCount():undefined,};}});this.searchBarToggler=useSearchBarToggler();}
get modelParams(){const{resModel,archInfo,limit,defaultGroupBy}=this.props;const{activeFields,fields}=extractFieldsFromArchInfo(archInfo,this.props.fields);const cardColorField=archInfo.cardColorField;if(cardColorField){addFieldDependencies(activeFields,fields,[{name:cardColorField,type:"integer"}]);}
const aggregateFieldNames=this.progressBarAggregateFields.map((field)=>field.name);for(const[key,value]of Object.entries(activeFields)){if(!aggregateFieldNames.includes(key)){value.aggregator=null;}}
addFieldDependencies(activeFields,fields,this.progressBarAggregateFields);const modelConfig=this.props.state?.modelState?.config||{resModel,activeFields,fields,openGroupsByDefault:true,};return{config:modelConfig,state:this.props.state?.modelState,limit:archInfo.limit||limit||40,groupsLimit:Number.MAX_SAFE_INTEGER,countLimit:archInfo.countLimit,defaultGroupBy,defaultOrderBy:archInfo.defaultOrder,maxGroupByDepth:1,activeIdsLimit:session.active_ids_limit,hooks:{onRecordSaved:this.onRecordSaved.bind(this),},};}
get modelOptions(){return{};}
get progressBarAggregateFields(){const res=[];const{progressAttributes}=this.props.archInfo;if(progressAttributes&&progressAttributes.sumField){res.push(progressAttributes.sumField);}
return res;}
get className(){if(this.env.isSmall&&this.model.root.isGrouped){const classList=(this.props.className||"").split(" ");classList.push("o_action_delegate_scroll");return classList.join(" ");}
return this.props.className;}
async deleteRecord(record){this.dialog.add(ConfirmationDialog,{title:_t("Bye-bye, record!"),body:deleteConfirmationMessage,confirm:()=>this.model.root.deleteRecords([record]),confirmLabel:_t("Delete"),cancel:()=>{},cancelLabel:_t("No, keep it"),});}
evalViewModifier(modifier){return evaluateBooleanExpr(modifier,{context:this.props.context});}
async openRecord(record,mode){const activeIds=this.model.root.records.map((datapoint)=>datapoint.resId);this.props.selectRecord(record.resId,{activeIds,mode});}
async createRecord(){const{onCreate}=this.props.archInfo;const{root}=this.model;if(this.canQuickCreate&&onCreate==="quick_create"){const firstGroup=root.groups[0];if(firstGroup.isFolded){await firstGroup.toggle();}
this.quickCreateState.groupId=firstGroup.id;}else if(onCreate&&onCreate!=="quick_create"){const options={additionalContext:root.context,onClose:async()=>{await root.load();this.model.useSampleModel=false;this.render(true);},};await this.actionService.doAction(onCreate,options);}else{await this.props.createRecord();}}
get canCreate(){const{create,createGroup}=this.props.archInfo.activeActions;const list=this.model.root;if(!create){return false;}
if(list.isGrouped){if(list.groupByField.type!=="many2one"){return true;}
return list.groups.length||!createGroup;}
return true;}
get canQuickCreate(){const{activeActions}=this.props.archInfo;if(!activeActions.quickCreate){return false;}
const list=this.model.root;if(list.groups&&!list.groups.length){return false;}
return this.isQuickCreateField(list.groupByField);}
onRecordSaved(record){if(this.model.root.isGrouped){const group=this.model.root.groups.find((l)=>l.records.find((r)=>r.id===record.id));this.progressBarState?.updateCounts(group);}}
onPageChangeScroll(){if(this.rootRef&&this.rootRef.el){if(this.env.isSmall){this.rootRef.el.scrollTop=0;}else{this.rootRef.el.querySelector(".o_content").scrollTop=0;}}}
async beforeExecuteActionButton(clickParams){}
async afterExecuteActionButton(clickParams){}
async onUpdatedPager(){}
scrollTop(){this.rootRef.el.querySelector(".o_content").scrollTo({top:0});}
isQuickCreateField(field){return field&&QUICK_CREATE_FIELD_TYPES.includes(field.type);}}
return __exports;});;

/* /web/static/src/views/kanban/kanban_cover_image_dialog.js */
odoo.define('@web/views/kanban/kanban_cover_image_dialog',['@web/core/dialog/dialog','@web/core/file_input/file_input','@web/core/utils/hooks','@odoo/owl'],function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{FileInput}=require("@web/core/file_input/file_input");const{useService}=require("@web/core/utils/hooks");const{Component,useState,onWillStart}=require("@odoo/owl");let nextDialogId=1;const KanbanCoverImageDialog=__exports.KanbanCoverImageDialog=class KanbanCoverImageDialog extends Component{static template="web.KanbanCoverImageDialog";static components={Dialog,FileInput};static props=["*"];setup(){this.id=`o_cover_image_upload_${nextDialogId++}`;this.orm=useService("orm");this.http=useService("http");const{record,fieldName}=this.props;const attachment=(record&&record.data[fieldName])||[];this.state=useState({selectFile:false,selectedAttachmentId:attachment[0],});onWillStart(async()=>{this.attachments=await this.orm.searchRead("ir.attachment",[["res_model","=",record.resModel],["res_id","=",record.resId],["mimetype","ilike","image"],],["id"]);this.state.selectFile=this.props.autoOpen&&this.attachments.length;});}
get hasCoverImage(){return Boolean(this.props.record.data[this.props.fieldName]);}
onUpload([attachment]){if(!attachment){return;}
this.state.selectFile=false;this.selectAttachment(attachment,true);}
selectAttachment(attachment,setSelected){if(this.state.selectedAttachmentId!==attachment.id){this.state.selectedAttachmentId=attachment.id;}else{this.state.selectedAttachmentId=null;}
if(setSelected){this.setCover();}}
removeCover(){this.state.selectedAttachmentId=null;this.setCover();}
async setCover(){const id=this.state.selectedAttachmentId?[this.state.selectedAttachmentId]:false;await this.props.record.update({[this.props.fieldName]:id},{save:true});this.props.close();}
uploadImage(){this.state.selectFile=true;}}
return __exports;});;

/* /web/static/src/views/kanban/kanban_dropdown_menu_wrapper.js */
odoo.define('@web/views/kanban/kanban_dropdown_menu_wrapper',['@odoo/owl','@web/core/dropdown/dropdown_hooks'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{useDropdownCloser}=require("@web/core/dropdown/dropdown_hooks");const KanbanDropdownMenuWrapper=__exports.KanbanDropdownMenuWrapper=class KanbanDropdownMenuWrapper extends Component{static template="web.KanbanDropdownMenuWrapper";static props={slots:Object,};setup(){this.dropdownControl=useDropdownCloser();}
onClick(ev){this.dropdownControl.closeAll();}}
return __exports;});;

/* /web/static/src/views/kanban/kanban_header.js */
odoo.define('@web/views/kanban/kanban_header',['@web/core/l10n/translation','@odoo/owl','@web/core/confirmation_dialog/confirmation_dialog','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/core/popover/popover_hook','@web/core/utils/functions','@web/core/utils/hooks','@web/core/utils/timing','@web/model/relational_model/utils','@web/views/utils','@web/views/view_components/column_progress','@web/views/view_dialogs/form_view_dialog','@web/core/registry','@web/core/ui/ui_service'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{Component,useRef}=require("@odoo/owl");const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{usePopover}=require("@web/core/popover/popover_hook");const{memoize}=require("@web/core/utils/functions");const{useService}=require("@web/core/utils/hooks");const{useDebounced}=require("@web/core/utils/timing");const{isRelational}=require("@web/model/relational_model/utils");const{isNull}=require("@web/views/utils");const{ColumnProgress}=require("@web/views/view_components/column_progress");const{FormViewDialog}=require("@web/views/view_dialogs/form_view_dialog");const{registry}=require("@web/core/registry");const{utils}=require("@web/core/ui/ui_service");class KanbanHeaderTooltip extends Component{static template="web.KanbanGroupTooltip";static props={tooltip:Array,close:Function,};}
const KanbanHeader=__exports.KanbanHeader=class KanbanHeader extends Component{static template="web.KanbanHeader";static components={ColumnProgress,Dropdown,DropdownItem};static props={activeActions:{type:Object},canQuickCreate:{type:Boolean},deleteGroup:{type:Function},dialogClose:{type:Array},group:{type:Object},list:{type:Object},quickCreateState:{type:Object},scrollTop:{type:Function},tooltipInfo:{type:Object},progressBarState:{type:true,optional:true},};setup(){this.dialog=useService("dialog");this.orm=useService("orm");this.rootRef=useRef("root");this.popover=usePopover(KanbanHeaderTooltip);this.onTitleMouseEnter=useDebounced(this.onTitleMouseEnter,400);}
async onTitleMouseEnter(ev){if(!this.hasTooltip){return;}
const tooltip=await this.loadTooltip();if(tooltip.length){this.popover.open(ev.target,{tooltip});}}
onTitleMouseLeave(){this.onTitleMouseEnter.cancel();this.popover.close();}
get _configDropdownContainer(){return this.rootRef.el.closest(`.o_kanban_group[data-id="${this.props.group.id}"]`);}
get configItems(){const args={permissions:this.permissions,props:this.props};return registry.category("kanban_header_config_items").getEntries().map(([key,desc])=>({key,method:desc.method,label:desc.label,isVisible:typeof desc.isVisible==="function"?desc.isVisible(args):desc.isVisible,class:typeof desc.class==="function"?desc.class(args):desc.class,}));}
get progressBar(){return this.props.progressBarState?.getGroupInfo(this.group);}
get group(){return this.props.group;}
_getEmptyGroupLabel(fieldName){return _t("None");}
get groupName(){const{groupByField,displayName}=this.group;let name=displayName;if(groupByField.type==="boolean"){name=name?_t("Yes"):_t("No");}else if(!name){if(isRelational(groupByField)||groupByField.type==="date"||groupByField.type==="datetime"||isNull(name)){name=this._getEmptyGroupLabel(groupByField.name);}}
return name;}
get groupAggregate(){const{group,progressBarState}=this.props;const{sumField}=progressBarState.progressAttributes;return progressBarState.getAggregateValue(group,sumField);}
get hasTooltip(){const{name,type}=this.group.groupByField;return type==="many2one"&&this.group.value&&name in this.props.tooltipInfo;}
loadTooltip=memoize(async()=>{const{name,relation:resModel}=this.group.groupByField;const tooltipInfo=this.props.tooltipInfo[name];const fieldNames=Object.keys(tooltipInfo);const[values]=await this.orm.silent.read(resModel,[this.group.value],["display_name",...fieldNames]);return fieldNames.filter((fieldName)=>values[fieldName]).map((fieldName)=>({title:tooltipInfo[fieldName],value:values[fieldName]}));});archiveGroup(){this.dialog.add(ConfirmationDialog,{body:_t("Are you sure that you want to archive all the records from this column?"),confirmLabel:_t("Archive All"),confirm:()=>this.group.list.archive(),cancel:()=>{},});}
unarchiveGroup(){this.group.list.unarchive();}
deleteGroup(){this.dialog.add(ConfirmationDialog,{body:_t("Are you sure you want to delete this column?"),confirm:async()=>{this.props.deleteGroup(this.group);},confirmLabel:_t("Delete"),cancel:()=>{},});}
editGroup(){const{context,displayName,groupByField,value}=this.group;this.props.dialogClose.push(this.dialog.add(FormViewDialog,{context,resId:value,resModel:groupByField.relation,title:_t("Edit: %s",displayName),onRecordSaved:async()=>{await this.props.list.load();this.props.list.model.notify();},}));}
quickCreate(group){this.props.quickCreateState.groupId=this.group.id;}
toggleGroup(){return this.group.toggle();}
get permissions(){return["canArchiveGroup","canDeleteGroup","canEditGroup","canQuickCreate"].reduce((o,key)=>{Object.defineProperty(o,key,{get:()=>this[key]()});return o;},{});}
canArchiveGroup(){const{archiveGroup}=this.props.activeActions;const hasActiveField="active"in this.group.fields;return archiveGroup&&hasActiveField&&this.group.groupByField.type!=="many2many";}
canDeleteGroup(){const{deleteGroup}=this.props.activeActions;const{groupByField,value}=this.group;return deleteGroup&&isRelational(groupByField)&&value;}
canEditGroup(){const{editGroup}=this.props.activeActions;const{groupByField,value}=this.group;return editGroup&&isRelational(groupByField)&&value;}
canQuickCreate(){return this.props.canQuickCreate;}
async onBarClicked(value){await this.props.progressBarState.selectBar(this.props.group.id,value);this.props.scrollTop();}}
const kanbanHeaderConfigItems=registry.category("kanban_header_config_items");kanbanHeaderConfigItems.add("toggle_group",{label:_t("Fold"),method:"toggleGroup",isVisible:()=>!utils.isSmall(),class:({props})=>({o_kanban_toggle_fold:true,disabled:props.list.model.useSampleModel,}),},{sequence:10});kanbanHeaderConfigItems.add("edit_group",{label:_t("Edit"),method:"editGroup",isVisible:({permissions})=>permissions.canEditGroup,class:"o_column_edit",},{sequence:20});kanbanHeaderConfigItems.add("delete_group",{label:_t("Delete"),method:"deleteGroup",isVisible:({permissions})=>permissions.canDeleteGroup,class:"o_column_delete",},{sequence:30});kanbanHeaderConfigItems.add("archive_group",{label:_t("Archive All"),method:"archiveGroup",isVisible:({permissions})=>permissions.canArchiveGroup,class:({props})=>({o_column_archive_records:true,disabled:props.list.model.useSampleModel,}),},{sequence:40});kanbanHeaderConfigItems.add("unarchive_group",{label:_t("Unarchive All"),method:"unarchiveGroup",isVisible:({permissions})=>permissions.canArchiveGroup,class:({props})=>({o_column_unarchive_records:true,disabled:props.list.model.useSampleModel,}),},{sequence:50});return __exports;});;

/* /web/static/src/views/kanban/kanban_record.js */
odoo.define('@web/views/kanban/kanban_record',['@web/core/l10n/translation','@web/core/colorlist/colorlist','@web/core/py_js/py','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/core/registry','@web/core/user','@web/core/utils/hooks','@web/core/utils/urls','@web/model/relational_model/utils','@web/views/fields/field','@web/views/fields/image/image_field','@web/views/view_button/view_button','@web/views/view_compiler','@web/views/widgets/widget','@web/views/utils','@web/views/kanban/kanban_arch_parser','@web/views/kanban/kanban_compiler','@web/views/kanban/kanban_cover_image_dialog','@web/views/kanban/kanban_dropdown_menu_wrapper','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{ColorList}=require("@web/core/colorlist/colorlist");const{evaluateBooleanExpr}=require("@web/core/py_js/py");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{registry}=require("@web/core/registry");const{user}=require("@web/core/user");const{useService}=require("@web/core/utils/hooks");const{imageUrl}=require("@web/core/utils/urls");const{useRecordObserver}=require("@web/model/relational_model/utils");const{Field}=require("@web/views/fields/field");const{fileTypeMagicWordMap}=require("@web/views/fields/image/image_field");const{ViewButton}=require("@web/views/view_button/view_button");const{useViewCompiler}=require("@web/views/view_compiler");const{Widget}=require("@web/views/widgets/widget");const{getFormattedValue}=require("@web/views/utils");const{LEGACY_KANBAN_BOX_ATTRIBUTE,LEGACY_KANBAN_MENU_ATTRIBUTE,KANBAN_CARD_ATTRIBUTE,KANBAN_MENU_ATTRIBUTE,}=require("@web/views/kanban/kanban_arch_parser");const{KanbanCompiler}=require("@web/views/kanban/kanban_compiler");const{KanbanCoverImageDialog}=require("@web/views/kanban/kanban_cover_image_dialog");const{KanbanDropdownMenuWrapper}=require("@web/views/kanban/kanban_dropdown_menu_wrapper");const{Component,onWillUpdateProps,useRef,useState}=require("@odoo/owl");const{COLORS}=ColorList;const formatters=registry.category("formatters");const CANCEL_GLOBAL_CLICK=__exports.CANCEL_GLOBAL_CLICK=["a",".dropdown",".oe_kanban_action","[data-bs-toggle]"].join(",");__exports.getColorIndex=getColorIndex;function getColorIndex(value){if(typeof value==="number"){return Math.round(value)%COLORS.length;}else if(typeof value==="string"){const charCodeSum=[...value].reduce((acc,_,i)=>acc+value.charCodeAt(i),0);return charCodeSum%COLORS.length;}else{return 0;}}
__exports.getRawValue=getRawValue;function getRawValue(record,fieldName){const field=record.fields[fieldName];const value=record.data[fieldName];switch(field.type){case"one2many":case"many2many":{return value.count?value.currentIds:[];}
case"many2one":{return(value&&value[0])||false;}
case"date":case"datetime":{return value&&value.toISO();}
default:{return value;}}}
function getValue(record,fieldName){const field=record.fields[fieldName];const value=record.data[fieldName];const formatter=formatters.get(field.type,String);return formatter(value,{field,data:record.data});}
__exports.getFormattedRecord=getFormattedRecord;function getFormattedRecord(record){const formattedRecord={id:{value:record.resId,raw_value:record.resId,},};for(const fieldName of record.fieldNames){formattedRecord[fieldName]={value:getValue(record,fieldName),raw_value:getRawValue(record,fieldName),};}
return formattedRecord;}
__exports.getImageSrcFromRecordInfo=getImageSrcFromRecordInfo;function getImageSrcFromRecordInfo(record,model,field,idOrIds,placeholder){const id=(Array.isArray(idOrIds)?idOrIds[0]:idOrIds)||null;const isCurrentRecord=record.resModel===model&&(record.resId===id||(!record.resId&&!id));const fieldVal=record.data[field];if(isCurrentRecord&&fieldVal&&!isBinSize(fieldVal)){const type=fileTypeMagicWordMap[fieldVal[0]];return`data:image/${type};base64,${fieldVal}`;}else if(placeholder&&(!model||!field||!id||!fieldVal)){return placeholder;}else{const unique=isCurrentRecord&&record.data.write_date;return imageUrl(model,id,field,{unique});}}
function isBinSize(value){return/^\d+(\.\d*)? [^0-9]+$/.test(value);}
__exports.isHtmlEmpty=isHtmlEmpty;function isHtmlEmpty(innerHTML=""){const div=Object.assign(document.createElement("div"),{innerHTML});return div.innerText.trim()==="";}
const KanbanRecord=__exports.KanbanRecord=class KanbanRecord extends Component{static components={Dropdown,DropdownItem,KanbanDropdownMenuWrapper,Field,KanbanCoverImageDialog,ViewButton,Widget,};static defaultProps={colors:COLORS,deleteRecord:()=>{},archiveRecord:()=>{},openRecord:()=>{},};static props=["archInfo","canResequence?","colors?","Compiler?","forceGlobalClick?","group?","list","deleteRecord?","archiveRecord?","openRecord?","readonly?","record","templates","progressBarState?",];static Compiler=KanbanCompiler;static LEGACY_KANBAN_BOX_ATTRIBUTE=LEGACY_KANBAN_BOX_ATTRIBUTE;static LEGACY_KANBAN_MENU_ATTRIBUTE=LEGACY_KANBAN_MENU_ATTRIBUTE;static KANBAN_CARD_ATTRIBUTE=KANBAN_CARD_ATTRIBUTE;static KANBAN_MENU_ATTRIBUTE=KANBAN_MENU_ATTRIBUTE;static menuTemplate="web.KanbanRecordMenu";static template="web.KanbanRecord";setup(){this.evaluateBooleanExpr=evaluateBooleanExpr;this.action=useService("action");this.dialog=useService("dialog");this.notification=useService("notification");const{archInfo,Compiler,templates}=this.props;const ViewCompiler=Compiler||this.constructor.Compiler;const isLegacy=archInfo.isLegacyArch;this.templates=useViewCompiler(ViewCompiler,templates,{isLegacy});this.menuTemplateName=this.props.archInfo.isLegacyArch?this.constructor.LEGACY_KANBAN_MENU_ATTRIBUTE:this.constructor.KANBAN_MENU_ATTRIBUTE;this.showMenu=this.menuTemplateName in templates;this.dataState=useState({record:{},widget:{}});this.createWidget(this.props);onWillUpdateProps(this.createWidget);useRecordObserver((record)=>Object.assign(this.dataState.record,getFormattedRecord(record)));this.rootRef=useRef("root");}
get record(){return this.dataState.record;}
getFormattedValue(fieldId){const{archInfo,record}=this.props;const{name}=archInfo.fieldNodes[fieldId];return getFormattedValue(record,name,archInfo.fieldNodes[fieldId]);}
createWidget(props){const{archInfo,list}=props;const{activeActions}=archInfo;const deletable=activeActions.delete&&(!list.groupByField||list.groupByField.type!=="many2many");const editable=activeActions.edit;this.dataState.widget={deletable,editable,};if(archInfo.isLegacyArch){this.dataState.widget.isHtmlEmpty=isHtmlEmpty;}}
getRecordClasses(){const{archInfo,canResequence,forceGlobalClick,record,progressBarState}=this.props;const classes=["o_kanban_record d-flex"];if(canResequence){classes.push("o_draggable");}
if(forceGlobalClick||archInfo.openAction||archInfo.canOpenRecords){classes.push("cursor-pointer");}
if(progressBarState){const{fieldName,colors}=progressBarState.progressAttributes;const value=record.data[fieldName];const color=colors[value];classes.push(`oe_kanban_card_${color}`);}
if(archInfo.cardColorField){const value=record.data[archInfo.cardColorField];classes.push(`o_kanban_color_${getColorIndex(value)}`);}
if(!this.props.list.isGrouped){classes.push("flex-grow-1 flex-md-shrink-1 flex-shrink-0");}
classes.push(archInfo.cardClassName);if(archInfo.isLegacyArch){classes.push("o_legacy_kanban_record");}
return classes.join(" ");}
getMenuClasses(){if(this.props.archInfo.isLegacyArch){return"o-dropdown--legacy-kanban-record-menu";}else{return"o-dropdown--kanban-record-menu";}}
onGlobalClick(ev){if(ev.target.closest(CANCEL_GLOBAL_CLICK)){return;}
const{archInfo,forceGlobalClick,openRecord,record}=this.props;if(!forceGlobalClick&&archInfo.openAction){this.action.doActionButton({name:archInfo.openAction.action,type:archInfo.openAction.type,resModel:record.resModel,resId:record.resId,resIds:record.resIds,context:record.context,onClose:async()=>{await record.model.root.load();},});}else if(forceGlobalClick||this.props.archInfo.canOpenRecords){openRecord(record);}}
triggerAction(params){const{archInfo,openRecord,deleteRecord,record,archiveRecord}=this.props;const{type}=params;switch(type){case"edit":{return openRecord(record,"edit");}
case"open":{return openRecord(record);}
case"archive":{return archiveRecord(record,true);}
case"unarchive":{return archiveRecord(record,false);}
case"delete":{return deleteRecord(record);}
case"set_cover":{const{autoOpen,fieldName}=params;const widgets=Object.values(archInfo.fieldNodes).filter((x)=>x.name===fieldName).map((x)=>x.widget);const field=record.fields[fieldName];if(field.type==="many2one"&&field.relation==="ir.attachment"&&widgets.includes("attachment_image")){this.dialog.add(KanbanCoverImageDialog,{autoOpen,fieldName,record});}else{const warning=_t(`Could not set the cover image: incorrect field ("%s") is provided in the view.`,fieldName);this.notification.add({title:warning,type:"danger"});}
break;}
default:{return this.notification.add(_t("Kanban: no action for type: %(type)s",{type}),{type:"danger",});}}}
get mainTemplate(){return this.props.archInfo.isLegacyArch?this.templates[this.constructor.LEGACY_KANBAN_BOX_ATTRIBUTE]:this.templates[this.constructor.KANBAN_CARD_ATTRIBUTE];}
get renderingContext(){const renderingContext={context:this.props.record.context,JSON,luxon,read_only_mode:this.props.readonly,record:this.dataState.record,selection_mode:this.props.forceGlobalClick,widget:this.dataState.widget,__comp__:Object.assign(Object.create(this),{this:this}),};if(this.props.archInfo.isLegacyArch){renderingContext.kanban_image=(...args)=>getImageSrcFromRecordInfo(this.props.record,...args);renderingContext.user_context=user.context;}
return renderingContext;}}
return __exports;});;

/* /web/static/src/views/kanban/kanban_record_quick_create.js */
odoo.define('@web/views/kanban/kanban_record_quick_create',['@web/core/l10n/translation','@web/core/utils/xml','@web/core/hotkeys/hotkey_hook','@web/core/utils/hooks','@odoo/owl','@web/core/network/rpc','@web/model/relational_model/utils','@web/views/form/form_view','@web/views/view','@web/views/view_dialogs/form_view_dialog'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{parseXML}=require("@web/core/utils/xml");const{useHotkey}=require("@web/core/hotkeys/hotkey_hook");const{useOwnedDialogs,useService}=require("@web/core/utils/hooks");const{Component,onMounted,onWillStart,useExternalListener,useRef,useState,useSubEnv,}=require("@odoo/owl");const{RPCError}=require("@web/core/network/rpc");const{extractFieldsFromArchInfo}=require("@web/model/relational_model/utils");const{formView}=require("@web/views/form/form_view");const{getDefaultConfig}=require("@web/views/view");const{FormViewDialog}=require("@web/views/view_dialogs/form_view_dialog");const DEFAULT_QUICK_CREATE_VIEW={arch:`
        <form>
            <field name="display_name" placeholder="Title" required="True" />
        </form>`,};const DEFAULT_QUICK_CREATE_FIELDS={display_name:{string:"Display name",type:"char"},};const ACTION_SELECTORS=[".o_kanban_quick_add",".o_kanban_load_more button",".o-kanban-button-new",];const KanbanQuickCreateController=__exports.KanbanQuickCreateController=class KanbanQuickCreateController extends Component{static props={Model:Function,Renderer:Function,Compiler:Function,resModel:String,onValidate:Function,onCancel:Function,fields:{type:Object},context:{type:Object},archInfo:{type:Object},};static template="web.KanbanQuickCreateController";setup(){super.setup();this.uiService=useService("ui");this.rootRef=useRef("root");this.state=useState({disabled:false});this.addDialog=useOwnedDialogs();const{activeFields,fields}=extractFieldsFromArchInfo(this.props.archInfo,this.props.fields);const modelServices=Object.fromEntries(this.props.Model.services.map((servName)=>{return[servName,useService(servName)];}));modelServices.orm=useService("orm");const config={resModel:this.props.resModel,resId:false,resIds:[],fields,activeFields,isMonoRecord:true,mode:"edit",context:this.props.context,};this.model=useState(new this.props.Model(this.env,{config},modelServices));onWillStart(()=>this.model.load());onMounted(()=>{this.uiActiveElement=this.uiService.activeElement;});useExternalListener(window,"mousedown",(ev)=>{this.mousedownTarget=ev.target;});useExternalListener(window,"click",(ev)=>{if(this.uiActiveElement!==this.uiService.activeElement){return;}
const target=this.mousedownTarget||ev.target;const gotClickedInside=target.closest(".o_datetime_picker")||target.closest(".ui-autocomplete")||this.rootRef.el.contains(target);if(!gotClickedInside){let force=false;for(const selector of ACTION_SELECTORS){const closestEl=target.closest(selector);if(closestEl){force=true;break;}}
this.cancel(force);}
this.mousedownTarget=null;},{capture:true});useHotkey("enter",()=>this.validate("add"),{bypassEditableProtection:true});useHotkey("escape",()=>this.cancel(true));}
async validate(mode){let resId=undefined;if(this.state.disabled){return;}
this.state.disabled=true;const keys=Object.keys(this.model.root.activeFields);if(keys.length===1&&keys[0]==="display_name"){const isValid=await this.model.root.checkValidity();if(isValid){try{[resId]=await this.model.orm.call(this.props.resModel,"name_create",[this.model.root.data.display_name],{context:this.props.context,});}catch(e){this.showFormDialogInError(e);}}else{this.model.notification.add(_t("Display Name"),{title:_t("Invalid fields: "),type:"danger",});}}else{await this.model.root.save({reload:false,onError:(e)=>this.showFormDialogInError(e),});resId=this.model.root.resId;}
if(resId){await this.props.onValidate(resId,mode);if(mode==="add"){await this.model.load({resId:false});}}
this.state.disabled=false;}
async cancel(force){if(this.state.disabled){return;}
if(force||!(await this.model.root.isDirty())){this.props.onCancel();}}
showFormDialogInError(e){if(!(e instanceof RPCError)){throw e;}
const context=this.props.context;const values=this.model.root.data;context.default_name=values.name||values.display_name;this.addDialog(FormViewDialog,{resModel:this.props.resModel,context,title:_t("Create"),onRecordSaved:async(record)=>{await this.props.onValidate(record.resId,"add");await this.model.load();},});}
get className(){return"o_kanban_quick_create o_field_highlight shadow";}}
const KanbanRecordQuickCreate=__exports.KanbanRecordQuickCreate=class KanbanRecordQuickCreate extends Component{static components={KanbanQuickCreateController};static template="web.KanbanRecordQuickCreate";static props={quickCreateView:{type:[String,{value:null}],optional:1},onValidate:Function,onCancel:Function,group:Object,};setup(){this.state=useState({isLoaded:false,});this.viewService=useService("view");onMounted(()=>{this.getQuickCreateProps(this.props).then(()=>{this.state.isLoaded=true;});});useSubEnv({config:getDefaultConfig(),});}
async getQuickCreateProps(props){let quickCreateFields={fields:DEFAULT_QUICK_CREATE_FIELDS};let quickCreateForm=DEFAULT_QUICK_CREATE_VIEW;let quickCreateRelatedModels={};if(props.quickCreateView){const{fields,relatedModels,views}=await this.viewService.loadViews({context:{...props.context,form_view_ref:props.quickCreateView},resModel:props.group.resModel,views:[[false,"form"]],});quickCreateFields={fields:fields};quickCreateForm=views.form;quickCreateRelatedModels=relatedModels;}
const models={...quickCreateRelatedModels,[props.group.resModel]:quickCreateFields,};const archInfo=new formView.ArchParser().parse(parseXML(quickCreateForm.arch),models,props.group.resModel);this.quickCreateProps={Model:formView.Model,Renderer:formView.Renderer,Compiler:formView.Compiler,resModel:props.group.resModel,onValidate:props.onValidate,onCancel:props.onCancel,fields:quickCreateFields.fields,context:props.group.context,archInfo,};}}
return __exports;});;

/* /web/static/src/views/kanban/kanban_renderer.js */
odoo.define('@web/views/kanban/kanban_renderer',['@web/core/l10n/translation','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/core/hotkeys/hotkey_hook','@web/core/registry','@web/core/utils/hooks','@web/core/utils/sortable_owl','@web/views/utils','@web/views/view_components/column_progress','@web/views/view_hook','@web/views/kanban/kanban_column_quick_create','@web/views/kanban/kanban_header','@web/views/kanban/kanban_record','@web/views/kanban/kanban_record_quick_create','@web/core/confirmation_dialog/confirmation_dialog','@odoo/owl','@web/core/py_js/py'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{useHotkey}=require("@web/core/hotkeys/hotkey_hook");const{registry}=require("@web/core/registry");const{useBus,useService}=require("@web/core/utils/hooks");const{useSortable}=require("@web/core/utils/sortable_owl");const{isNull}=require("@web/views/utils");const{ColumnProgress}=require("@web/views/view_components/column_progress");const{useBounceButton}=require("@web/views/view_hook");const{KanbanColumnQuickCreate}=require("@web/views/kanban/kanban_column_quick_create");const{KanbanHeader}=require("@web/views/kanban/kanban_header");const{KanbanRecord}=require("@web/views/kanban/kanban_record");const{KanbanRecordQuickCreate}=require("@web/views/kanban/kanban_record_quick_create");const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{Component,onPatched,onWillDestroy,onWillPatch,useRef,useState}=require("@odoo/owl");const{evaluateExpr}=require("@web/core/py_js/py");const DRAGGABLE_GROUP_TYPES=["many2one"];const MOVABLE_RECORD_TYPES=["char","boolean","integer","selection","many2one"];function validateColumnQuickCreateExamples(data){const{allowedGroupBys=[],examples=[],foldField=""}=data;if(!allowedGroupBys.length){throw new Error("The example data must contain an array of allowed groupbys");}
if(!examples.length){throw new Error("The example data must contain an array of examples");}
const someHasFoldedColumns=examples.some(({foldedColumns=[]})=>foldedColumns.length);if(!foldField&&someHasFoldedColumns){throw new Error("The example data must contain a fold field if there are folded columns");}}
const KanbanRenderer=__exports.KanbanRenderer=class KanbanRenderer extends Component{static template="web.KanbanRenderer";static components={Dropdown,DropdownItem,ColumnProgress,KanbanColumnQuickCreate,KanbanHeader,KanbanRecord,KanbanRecordQuickCreate,};static props=["archInfo","Compiler?","list","deleteRecord","openRecord","readonly","forceGlobalClick?","noContentHelp?","scrollTop?","canQuickCreate?","quickCreateState?","progressBarState?",];static defaultProps={scrollTop:()=>{},quickCreateState:{groupId:false},tooltipInfo:{},};setup(){this.dialogClose=[];this.state=useState({processedIds:[],columnQuickCreateIsFolded:!this.props.list.isGrouped||this.props.list.groups.length>0,});this.dialog=useService("dialog");this.exampleData=registry.category("kanban_examples").get(this.props.archInfo.examples,null);if(this.exampleData){validateColumnQuickCreateExamples(this.exampleData);}
this.ghostColumns=this.generateGhostColumns();let dataRecordId;let dataGroupId;this.rootRef=useRef("root");if(this.canUseSortable){useSortable({enable:()=>this.canResequenceRecords,ref:this.rootRef,elements:".o_draggable",ignore:".dropdown,select",groups:()=>this.props.list.isGrouped&&".o_kanban_group",connectGroups:()=>this.canMoveRecords,cursor:"move",onDragStart:(params)=>{const{element,group}=params;dataRecordId=element.dataset.id;dataGroupId=group&&group.dataset.id;return this.sortStart(params);},onDragEnd:(params)=>this.sortStop(params),onGroupEnter:(params)=>this.sortRecordGroupEnter(params),onGroupLeave:(params)=>this.sortRecordGroupLeave(params),onDrop:(params)=>this.sortRecordDrop(dataRecordId,dataGroupId,params),});useSortable({enable:()=>this.canResequenceGroups,ref:this.rootRef,elements:".o_group_draggable",handle:".o_column_title",cursor:"move",onDragStart:(params)=>{const{element}=params;dataGroupId=element.dataset.id;return this.sortStart(params);},onDragEnd:(params)=>this.sortStop(params),onDrop:(params)=>this.sortGroupDrop(dataGroupId,params),});}
useBounceButton(this.rootRef,(clickedEl)=>{if(this.props.list.isGrouped?!this.props.list.recordCount:!this.props.list.count||this.props.list.model.useSampleModel){return clickedEl.matches([".o_kanban_renderer",".o_kanban_group",".o_kanban_header",".o_column_quick_create",".o_view_nocontent_smiling_face",].join(", "));}
return false;});onWillDestroy(()=>{this.dialogClose.forEach((close)=>close());});if(this.env.searchModel){useBus(this.env.searchModel,"focus-view",()=>{const{model}=this.props.list;if(model.useSampleModel||!model.hasData()){return;}
const firstCard=this.rootRef.el.querySelector(".o_kanban_record");if(firstCard){firstCard.focus();}});}
useHotkey("Enter",({target})=>{if(!target.classList.contains("o_kanban_record")){return;}
if(this.props.archInfo.canOpenRecords){target.click();return;}
const firstLink=target.querySelector("a, button");if(firstLink){firstLink.click();}},{area:()=>this.rootRef.el});const arrowsOptions={area:()=>this.rootRef.el,allowRepeat:true};if(this.env.searchModel){useHotkey("ArrowUp",({area})=>{if(!this.focusNextCard(area,"up")){this.env.searchModel.trigger("focus-search");}},arrowsOptions);}
useHotkey("ArrowDown",({area})=>this.focusNextCard(area,"down"),arrowsOptions);useHotkey("ArrowLeft",({area})=>this.focusNextCard(area,"left"),arrowsOptions);useHotkey("ArrowRight",({area})=>this.focusNextCard(area,"right"),arrowsOptions);let previousScrollTop=0;onWillPatch(()=>{previousScrollTop=this.rootRef.el.scrollTop;});onPatched(()=>{this.rootRef.el.scrollTop=previousScrollTop;});}
get canUseSortable(){return!this.env.isSmall;}
get canMoveRecords(){if(!this.canResequenceRecords){return false;}
const groupByField=this.props.list.groupByField;if(!groupByField){return true;}
const fieldNodes=Object.values(this.props.archInfo.fieldNodes).filter((fieldNode)=>fieldNode.name===groupByField.name);let isReadonly=this.props.list.fields[groupByField.name].readonly;if(!isReadonly&&fieldNodes.length){isReadonly=fieldNodes.every((fieldNode)=>{if(!fieldNode.readonly){return false;}
try{return evaluateExpr(fieldNode.readonly,this.props.list.evalContext);}catch{return false;}});}
return!isReadonly&&this.isMovableField(groupByField);}
get canResequenceGroups(){if(!this.props.list.isGrouped){return false;}
const{type}=this.props.list.groupByField;const{groupsDraggable}=this.props.archInfo;return groupsDraggable&&DRAGGABLE_GROUP_TYPES.includes(type);}
get canResequenceRecords(){const{isGrouped,orderBy}=this.props.list;const{handleField,recordsDraggable}=this.props.archInfo;return Boolean(recordsDraggable&&(isGrouped||(handleField&&(!orderBy[0]||orderBy[0].name===handleField))));}
get showNoContentHelper(){const{model,isGrouped,groupByField,groups}=this.props.list;if(model.useSampleModel){return true;}
if(isGrouped){if(this.props.quickCreateState.groupId){return false;}
if(this.canCreateGroup()&&!this.state.columnQuickCreateIsFolded){return false;}
if(groups.length===0){return groupByField.type!=="many2one";}}
return!model.hasData();}
getGroupsOrRecords(){const{list}=this.props;if(list.isGrouped){return[...list.groups].sort((a,b)=>(a.value&&!b.value?1:!a.value&&b.value?-1:0)).map((group,i)=>({group,key:isNull(group.value)?`group_key_${i}`:String(group.value),}));}else{return list.records.map((record)=>({record,key:record.id}));}}
getGroupClasses(group,isGroupProcessing){const classes=[];if(!isGroupProcessing&&this.canResequenceGroups&&group.value){classes.push("o_group_draggable");}
if(!group.count){classes.push("o_kanban_no_records");}
if(!this.env.isSmall&&group.isFolded){classes.push("o_column_folded","flex-basis-0");}
if(this.props.progressBarState&&!group.isFolded){const progressBarInfo=this.props.progressBarState.getGroupInfo(group);if(progressBarInfo.activeBar){const progressBar=progressBarInfo.bars.find((b)=>b.value===progressBarInfo.activeBar);classes.push("o_kanban_group_show",`o_kanban_group_show_${progressBar.color}`);}}
return classes.join(" ");}
getGroupUnloadedCount(group){const records=group.list.records.filter((r)=>!r.isInQuickCreation);const count=this.props.progressBarState?.getGroupCount(group)||group.count;return count-records.length;}
generateGhostColumns(){let colNames;if(this.exampleData&&this.exampleData.ghostColumns){colNames=this.exampleData.ghostColumns;}else{colNames=[1,2,3,4].map((num)=>_t("Column %s",num));}
return colNames.map((colName)=>({name:colName,cards:new Array(Math.floor(Math.random()*4)+2),}));}
isProcessing(id){return this.state.processedIds.includes(id);}
isMovableField(field){return MOVABLE_RECORD_TYPES.includes(field.type);}
canCreateGroup(){const{activeActions}=this.props.archInfo;return activeActions.createGroup&&this.props.list.groupByField.type==="many2one";}
canQuickCreate(){return this.props.canQuickCreate;}
async archiveRecord(record,active){if(active){this.dialog.add(ConfirmationDialog,{body:_t("Are you sure that you want to archive this record?"),confirmLabel:_t("Archive"),confirm:()=>record.archive(),cancel:()=>{},});}else{return record.unarchive();}}
async validateQuickCreate(recordId,mode,group){this.props.quickCreateState.groupId=false;if(mode==="add"){this.props.quickCreateState.groupId=group.id;}
const record=await group.addExistingRecord(recordId,true);group.model.bus.trigger("group-updated",{group:group,withProgressBars:true,});if(mode==="edit"){await this.props.openRecord(record,"edit");}else{this.props.progressBarState?.updateCounts(group);}}
cancelQuickCreate(){this.props.quickCreateState.groupId=false;}
async deleteGroup(group){await this.props.list.deleteGroups([group]);if(this.props.list.groups.length===0){this.state.columnQuickCreateIsFolded=false;}}
toggleGroup(group){return group.toggle();}
loadMore(group){return group.list.load({limit:group.list.records.length+group.model.initialLimit});}
toggleProcessing(id,isProcessing){if(isProcessing){this.state.processedIds=[...this.state.processedIds,id];}else{this.state.processedIds=this.state.processedIds.filter((processedId)=>processedId!==id);}}
async onGroupClick(group,ev){if(!this.env.isSmall&&group.isFolded){await group.toggle();this.props.scrollTop();}}
async sortGroupDrop(dataGroupId,{previous}){this.toggleProcessing(dataGroupId,true);const refId=previous?previous.dataset.id:null;try{await this.props.list.resequence(dataGroupId,refId);}finally{this.toggleProcessing(dataGroupId,false);}}
async sortRecordDrop(dataRecordId,dataGroupId,{element,parent,previous}){if(!this.props.list.isGrouped||parent.classList.contains("o_kanban_hover")||parent.dataset.id===element.parentElement.dataset.id){this.toggleProcessing(dataRecordId,true);parent?.classList.remove("o_kanban_hover");while(previous&&!previous.dataset.id){previous=previous.previousElementSibling;}
const refId=previous?previous.dataset.id:null;const targetGroupId=parent?.dataset.id;try{await this.props.list.moveRecord(dataRecordId,dataGroupId,refId,targetGroupId);}finally{this.toggleProcessing(dataRecordId,false);}}}
sortRecordGroupEnter({group}){group.classList.add("o_kanban_hover");}
sortRecordGroupLeave({group}){group.classList.remove("o_kanban_hover");}
sortStart({element}){element.classList.add("shadow");}
sortStop({element,group}){element.classList.remove("shadow");if(group){group.classList.remove("o_kanban_hover");}}
focusNextCard(area,direction){const{isGrouped}=this.props.list;const closestCard=document.activeElement.closest(".o_kanban_record");if(!closestCard){return;}
const groups=isGrouped?[...area.querySelectorAll(".o_kanban_group")]:[area];const cards=[...groups].map((group)=>[...group.querySelectorAll(".o_kanban_record")]).filter((group)=>group.length);let iGroup;let iCard;for(iGroup=0;iGroup<cards.length;iGroup++){const i=cards[iGroup].indexOf(closestCard);if(i!==-1){iCard=i;break;}}
let nextCard;switch(direction){case"down":nextCard=iCard<cards[iGroup].length-1&&cards[iGroup][iCard+1];break;case"up":nextCard=iCard>0&&cards[iGroup][iCard-1];break;case"right":if(isGrouped){nextCard=iGroup<cards.length-1&&cards[iGroup+1][0];}else{nextCard=iCard<cards[0].length-1&&cards[0][iCard+1];}
break;case"left":if(isGrouped){nextCard=iGroup>0&&cards[iGroup-1][0];}else{nextCard=iCard>0&&cards[0][iCard-1];}
break;}
if(nextCard&&nextCard instanceof HTMLElement){nextCard.focus();return true;}}}
return __exports;});;

/* /web/static/src/views/kanban/kanban_view.js */
odoo.define('@web/views/kanban/kanban_view',['@web/core/registry','@web/model/relational_model/relational_model','@web/views/kanban/kanban_arch_parser','@web/views/kanban/kanban_compiler','@web/views/kanban/kanban_controller','@web/views/kanban/kanban_renderer'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{RelationalModel}=require("@web/model/relational_model/relational_model");const{KanbanArchParser}=require("@web/views/kanban/kanban_arch_parser");const{KanbanCompiler}=require("@web/views/kanban/kanban_compiler");const{KanbanController}=require("@web/views/kanban/kanban_controller");const{KanbanRenderer}=require("@web/views/kanban/kanban_renderer");const kanbanView=__exports.kanbanView={type:"kanban",ArchParser:KanbanArchParser,Controller:KanbanController,Model:RelationalModel,Renderer:KanbanRenderer,Compiler:KanbanCompiler,buttonTemplate:"web.KanbanView.Buttons",props:(genericProps,view)=>{const{arch,relatedModels,resModel}=genericProps;const{ArchParser}=view;const archInfo=new ArchParser().parse(arch,relatedModels,resModel);const defaultGroupBy=genericProps.searchMenuTypes.includes("groupBy")&&archInfo.defaultGroupBy;return{...genericProps,Model:view.Model,Renderer:view.Renderer,buttonTemplate:view.buttonTemplate,archInfo,defaultGroupBy,};},};registry.category("views").add("kanban",kanbanView);return __exports;});;

/* /web/static/src/views/kanban/progress_bar_hook.js */
odoo.define('@web/views/kanban/progress_bar_hook',['@odoo/owl','@web/core/domain','@web/core/l10n/translation','@web/model/relational_model/utils'],function(require){'use strict';let __exports={};const{reactive}=require("@odoo/owl");const{Domain}=require("@web/core/domain");const{_t}=require("@web/core/l10n/translation");const{extractInfoFromGroupData}=require("@web/model/relational_model/utils");const FALSE=Symbol("False");function _findGroup(groups,groupByField,value){return groups.find((g)=>g[groupByField.name]===value)||{};}
function _createFilterDomain(fieldName,bars,value){let filterDomain=undefined;if(value===FALSE){const keys=bars.filter((x)=>x.value!==FALSE).map((x)=>x.value);filterDomain=["!",[fieldName,"in",keys]];}else{filterDomain=[[fieldName,"=",value]];}
return filterDomain;}
function _groupsToAggregateValues(groups,groupBy,fields){const groupByFieldName=groupBy[0].split(":")[0];return groups.map((g)=>{const groupInfo=extractInfoFromGroupData(g,groupBy,fields);return Object.assign(groupInfo.aggregates,{[groupByFieldName]:groupInfo.serverValue});});}
class ProgressBarState{constructor(progressAttributes,model,aggregateFields,activeBars={}){this.progressAttributes=progressAttributes;this.model=model;this._groupsInfo={};this._aggregateFields=aggregateFields;this.activeBars=activeBars;this._aggregateValues=[];this._pbCounts=null;}
getGroupInfo(group){if(!this._groupsInfo[group.id]){const aggValues=_findGroup(this._aggregateValues,group.groupByField,group.serverValue);const index=this._aggregateValues.indexOf(aggValues);if(index>-1){this._aggregateValues.splice(index,1);}
this._aggregateValues.push({...group.aggregates,[group.groupByField.name]:group.serverValue,});const groupValue=this._getGroupValue(group);const pbCount=this._pbCounts[groupValue];const{fieldName,colors}=this.progressAttributes;const{selection:fieldSelection}=this.model.root.fields[fieldName];const selection=fieldSelection&&Object.fromEntries(fieldSelection);const bars=Object.entries(colors).map(([value,color])=>{let string;if(selection){string=selection[value];}else{string=String(value);}
return{count:(pbCount&&pbCount[value])||0,value,string,color,};});bars.push({count:group.count-bars.map((r)=>r.count).reduce((a,b)=>a+b,0),value:FALSE,string:_t("Other"),color:"200",});if(this.activeBars[group.serverValue]){this.activeBars[group.serverValue].count=bars.find((x)=>x.value===this.activeBars[group.serverValue].value).count;if(this.activeBars[group.serverValue].count===0){group.applyFilter(undefined).then(()=>{delete this.activeBars[group.serverValue];group.model.notify();});}
if(this._aggregateFields.length){this.activeBars[group.serverValue].aggregates=_findGroup(this._aggregateValues,group.groupByField,group.serverValue);}}
const self=this;const progressBar={get activeBar(){return self.activeBars[group.serverValue]?.value||null;},bars,};this._groupsInfo[group.id]=progressBar;}
return this._groupsInfo[group.id];}
getAggregateValue(group,aggregateField){const title=aggregateField?aggregateField.string:_t("Count");let value=0;if(!this.activeBars[group.serverValue]){value=group.count;if(aggregateField){value=_findGroup(this._aggregateValues,group.groupByField,group.serverValue)[aggregateField.name]||0;}}else{value=this.activeBars[group.serverValue].count;if(aggregateField){value=(this.activeBars[group.serverValue]?.aggregates&&this.activeBars[group.serverValue]?.aggregates[aggregateField.name])||0;}}
return{title,value};}
async selectBar(groupId,bar){const group=this.model.root.groups.find((group)=>group.id===groupId);const progressBar=this.getGroupInfo(group);const nextActiveBar={};if(bar.value&&this.activeBars[group.serverValue]?.value!==bar.value){nextActiveBar.value=bar.value;}else{group.applyFilter(undefined).then(()=>{delete this.activeBars[group.serverValue];group.model.notify();});return;}
const{bars}=progressBar;const filterDomain=_createFilterDomain(this.progressAttributes.fieldName,bars,nextActiveBar.value);const proms=[];proms.push(group.applyFilter(filterDomain).then((res)=>{const groupInfo=this.getGroupInfo(group);nextActiveBar.count=groupInfo.bars.find((x)=>x.value===nextActiveBar.value).count;}));if(this._aggregateFields.length){proms.push(this._updateAggregateGroup(group,bars,nextActiveBar));}
await Promise.all(proms);this.activeBars[group.serverValue]=nextActiveBar;this.updateCounts(group);}
_updateAggregateGroup(group,bars,activeBar){const filterDomain=_createFilterDomain(this.progressAttributes.fieldName,bars,activeBar.value);const{context,fields,groupBy,resModel}=this.model.root;const kwargs={context};const fieldNames=[...this._aggregateFields.map((f)=>f.name),group.groupByField.name];const domain=filterDomain?Domain.and([group.groupDomain,filterDomain]).toList():group.groupDomain;return this.model.orm.webReadGroup(resModel,domain,fieldNames,groupBy,kwargs).then((res)=>{if(res.length){const groupByField=group.groupByField;const aggrValues=_groupsToAggregateValues(res.groups,groupBy,fields);activeBar.aggregates=_findGroup(aggrValues,groupByField,group.serverValue);}});}
updateCounts(group){this._updateProgressBar();if(this._aggregateFields.length){this._updateAggregates();this.updateAggreagteGroup(group);}
for(const group of this.model.root.groups){if(this.activeBars[group.serverValue]&&group.list.count===0){this.selectBar(group.id,{value:null});}}}
updateAggreagteGroup(group){if(group&&this.activeBars[group.serverValue]){const{bars}=this.getGroupInfo(group);this._updateAggregateGroup(group,bars,this.activeBars[group.serverValue]);}}
async _updateAggregates(){const{context,fields,groupBy,domain,resModel}=this.model.root;const fieldsName=this._aggregateFields.map((f)=>f.name);const firstGroupByName=groupBy[0].split(":")[0];const kwargs={context};const res=await this.model.orm.webReadGroup(resModel,domain,[...fieldsName,firstGroupByName],groupBy,kwargs);this._aggregateValues=_groupsToAggregateValues(res.groups,groupBy,fields);}
async _updateProgressBar(){const groupBy=this.model.root.groupBy;const defaultGroupBy=this.model.root.defaultGroupBy;if(groupBy.length||defaultGroupBy){const resModel=this.model.root.resModel;const domain=this.model.root.domain;const context=this.model.root.context;const{colors,fieldName:field,help}=this.progressAttributes;const groupsId=this.model.root.groups.map((g)=>g.id).join();const res=await this.model.orm.call(resModel,"read_progress_bar",[],{domain,group_by:groupBy.length?groupBy[0]:defaultGroupBy,progress_bar:{colors,field,help},context,});if(groupsId!==this.model.root.groups.map((g)=>g.id).join()){return;}
this._pbCounts=res;for(const group of this.model.root.groups){if(!group.isFolded){const groupInfo=this.getGroupInfo(group);const groupValue=this._getGroupValue(group);const counts=res[groupValue];for(const bar of groupInfo.bars){bar.count=(counts&&counts[bar.value])||0;}
groupInfo.bars.find((b)=>b.value===FALSE).count=counts?group.count-Object.values(counts).reduce((a,b)=>a+b,0):group.count;if(this.activeBars[group.serverValue]){this.activeBars[group.serverValue].count=groupInfo.bars.find((x)=>x.value===this.activeBars[group.serverValue].value).count;}}}}}
async loadProgressBar({context,domain,groupBy,resModel}){if(groupBy.length){const{colors,fieldName:field,help}=this.progressAttributes;const res=await this.model.orm.call(resModel,"read_progress_bar",[],{domain,group_by:groupBy[0],progress_bar:{colors,field,help},context,});this._pbCounts=res;}}
getGroupCount(group){const progressBarInfo=this.getGroupInfo(group);if(progressBarInfo.activeBar){const progressBar=progressBarInfo.bars.find((b)=>b.value===progressBarInfo.activeBar);return progressBar.count;}}
_getGroupValue(group){if(group.groupByField.type==="date"||group.groupByField.type==="datetime"){return group.displayName||"False";}
if(group.value===true){return"True";}else if(group.value===false){return"False";}
return group.value;}}
__exports.useProgressBar=useProgressBar;function useProgressBar(progressAttributes,model,aggregateFields,activeBars){const progressBarState=reactive(new ProgressBarState(progressAttributes,model,aggregateFields,activeBars));let prom;const onWillLoadRoot=model.hooks.onWillLoadRoot;model.hooks.onWillLoadRoot=(config)=>{onWillLoadRoot();prom=progressBarState.loadProgressBar({context:config.context,domain:config.domain,groupBy:config.groupBy,resModel:config.resModel,});};const onRootLoaded=model.hooks.onRootLoaded;model.hooks.onRootLoaded=async()=>{await onRootLoaded();return prom;};return progressBarState;}
return __exports;});;

/* /web/static/src/views/list/column_width_hook.js */
odoo.define('@web/views/list/column_width_hook',['@web/core/utils/timing','@odoo/owl'],function(require){'use strict';let __exports={};const{useDebounced}=require("@web/core/utils/timing");const{useComponent,useEffect,useExternalListener}=require("@odoo/owl");const DEFAULT_MIN_WIDTH=80;const SELECTOR_WIDTH=20;const OPEN_FORM_VIEW_BUTTON_WIDTH=54;const DELETE_BUTTON_WIDTH=12;const FIELD_WIDTHS={boolean:[20,100],char:[80],date:80,datetime:145,float:93,integer:71,many2many:[80],many2one_reference:[80],many2one:[80],monetary:105,one2many:[80],reference:[80],selection:[80],text:[80,1200],};function computeWidths(table,state,allowedWidth,startingWidths){let _columnWidths;const headers=[...table.querySelectorAll("thead th")];const columns=state.columns;if(startingWidths){_columnWidths=startingWidths.slice();}else if(state.isEmpty){_columnWidths=headers.map(()=>allowedWidth/headers.length);}else{table.style.tableLayout="auto";headers.forEach((th)=>{th.style.width=null;});table.classList.add("o_list_computing_widths");_columnWidths=headers.map((th)=>th.getBoundingClientRect().width);table.classList.remove("o_list_computing_widths");}
if(state.hasSelectors){_columnWidths[0]=SELECTOR_WIDTH;}
if(state.hasOpenFormViewColumn){const index=_columnWidths.length-(state.hasActionsColumn?2:1);_columnWidths[index]=OPEN_FORM_VIEW_BUTTON_WIDTH;}
if(state.hasActionsColumn){_columnWidths[_columnWidths.length-1]=DELETE_BUTTON_WIDTH;}
const columnWidthSpecs=getWidthSpecs(columns);const columnOffset=state.hasSelectors?1:0;for(let columnIndex=0;columnIndex<columns.length;columnIndex++){const thIndex=columnIndex+columnOffset;const{minWidth,maxWidth}=columnWidthSpecs[columnIndex];if(_columnWidths[thIndex]<minWidth){_columnWidths[thIndex]=minWidth;}else if(maxWidth&&_columnWidths[thIndex]>maxWidth){_columnWidths[thIndex]=maxWidth;}}
const totalWidth=_columnWidths.reduce((tot,width)=>tot+width,0);let diff=totalWidth-allowedWidth;if(diff>=1){const shrinkableColumns=[];let totalAvailableSpace=0;for(let columnIndex=0;columnIndex<columns.length;columnIndex++){const thIndex=columnIndex+columnOffset;const{minWidth,canShrink}=columnWidthSpecs[columnIndex];if(_columnWidths[thIndex]>minWidth&&canShrink){shrinkableColumns.push({thIndex,minWidth});totalAvailableSpace+=_columnWidths[thIndex]-minWidth;}}
if(diff>totalAvailableSpace){for(const{thIndex,minWidth}of shrinkableColumns){_columnWidths[thIndex]=minWidth;}}else{let remainingColumnsToShrink=shrinkableColumns.length;while(diff>=1){const colDiff=diff/remainingColumnsToShrink;for(const{thIndex,minWidth}of shrinkableColumns){const currentWidth=_columnWidths[thIndex];if(currentWidth===minWidth){continue;}
const newWidth=Math.max(currentWidth-colDiff,minWidth);diff-=currentWidth-newWidth;_columnWidths[thIndex]=newWidth;if(newWidth===minWidth){remainingColumnsToShrink--;}}}}}else if(diff<=-1){diff=-diff;const expandableColumns=[];for(let columnIndex=0;columnIndex<columns.length;columnIndex++){const thIndex=columnIndex+columnOffset;const maxWidth=columnWidthSpecs[columnIndex].maxWidth;if(!maxWidth||_columnWidths[thIndex]<maxWidth){expandableColumns.push({thIndex,maxWidth});}}
let remainingExpandableColumns=expandableColumns.length;while(diff>=1&&remainingExpandableColumns>0){const colDiff=diff/remainingExpandableColumns;for(const{thIndex,maxWidth}of expandableColumns){const currentWidth=_columnWidths[thIndex];const newWidth=Math.min(currentWidth+colDiff,maxWidth||Number.MAX_VALUE);diff-=newWidth-currentWidth;_columnWidths[thIndex]=newWidth;if(newWidth===maxWidth){remainingExpandableColumns--;}}}
if(diff>=1){for(let columnIndex=0;columnIndex<columns.length;columnIndex++){const thIndex=columnIndex+columnOffset;_columnWidths[thIndex]+=diff/columns.length;}}}
return _columnWidths;}
function getWidthSpecs(columns){return columns.map((column)=>{let minWidth;let maxWidth;if(column.attrs&&column.attrs.width){minWidth=maxWidth=parseInt(column.attrs.width.split("px")[0]);}else{let width;if(column.type==="field"){if(column.field.listViewWidth){width=column.field.listViewWidth;if(typeof width==="function"){width=width({type:column.fieldType,hasLabel:column.hasLabel});}}else{width=FIELD_WIDTHS[column.widget||column.fieldType];}}else if(column.type==="widget"){width=column.widget.listViewWidth;}
if(width){minWidth=Array.isArray(width)?width[0]:width;maxWidth=Array.isArray(width)?width[1]:width;}else{minWidth=DEFAULT_MIN_WIDTH;}}
return{minWidth,maxWidth,canShrink:column.type==="field"};});}
function getHorizontalPadding(el){const{paddingLeft,paddingRight}=getComputedStyle(el);return parseFloat(paddingLeft)+parseFloat(paddingRight);}
__exports.useMagicColumnWidths=useMagicColumnWidths;function useMagicColumnWidths(tableRef,getState){const renderer=useComponent();let columnWidths=null;let allowedWidth=0;let hasAlwaysBeenEmpty=true;let parentWidthFixed=false;let hash;let _resizing=false;function forceColumnWidths(){const table=tableRef.el;const headers=[...table.querySelectorAll("thead th")];const state=getState();const columns=state.columns;const nextHash=`${columns.map((column) => column.id).join("/")}/${headers.length}`;if(nextHash!==hash){hash=nextHash;resetWidths();}
if(hasAlwaysBeenEmpty&&!state.isEmpty){hasAlwaysBeenEmpty=false;const rows=table.querySelectorAll(".o_data_row");if(rows.length!==1||!rows[0].classList.contains("o_selected_row")){resetWidths();}}
const parentPadding=getHorizontalPadding(table.parentNode);const cellPaddings=headers.map((th)=>getHorizontalPadding(th));const totalCellPadding=cellPaddings.reduce((total,padding)=>padding+total,0);const nextAllowedWidth=table.parentNode.clientWidth-parentPadding-totalCellPadding;const allowedWidthDiff=Math.abs(allowedWidth-nextAllowedWidth);allowedWidth=nextAllowedWidth;if(!columnWidths||allowedWidthDiff>0){columnWidths=computeWidths(table,state,allowedWidth,columnWidths);}
table.style.tableLayout="fixed";headers.forEach((th,index)=>{th.style.width=`${Math.floor(columnWidths[index] + cellPaddings[index])}px`;});}
function resetWidths(){columnWidths=null;tableRef.el.style.width=null;if(parentWidthFixed){tableRef.el.parentElement.style.width=null;}}
function onStartResize(ev){_resizing=true;const table=tableRef.el;const th=ev.target.closest("th");const handler=th.querySelector(".o_resize");table.style.width=`${Math.floor(table.getBoundingClientRect().width)}px`;const thPosition=[...th.parentNode.children].indexOf(th);const resizingColumnElements=[...table.getElementsByTagName("tr")].filter((tr)=>tr.children.length===th.parentNode.children.length).map((tr)=>tr.children[thPosition]);const initialX=ev.clientX;const initialWidth=th.getBoundingClientRect().width;const initialTableWidth=table.getBoundingClientRect().width;const resizeStoppingEvents=["keydown","pointerdown","pointerup"];if(!table.parentElement.style.width){parentWidthFixed=true;table.parentElement.style.width=`${Math.floor(
                table.parentElement.getBoundingClientRect().width
            )}px`;}
table.classList.add("o_resizing");for(const el of resizingColumnElements){el.classList.add("o_column_resizing");handler.classList.add("bg-primary","opacity-100");handler.classList.remove("bg-black-25","opacity-50-hover");}
const resizeHeader=(ev)=>{ev.preventDefault();ev.stopPropagation();const delta=ev.clientX-initialX;const newWidth=Math.max(10,initialWidth+delta);const tableDelta=newWidth-initialWidth;th.style.width=`${Math.floor(newWidth)}px`;table.style.width=`${Math.floor(initialTableWidth + tableDelta)}px`;};window.addEventListener("pointermove",resizeHeader);const stopResize=(ev)=>{_resizing=false;const headers=[...table.querySelectorAll("thead th")];columnWidths=headers.map((th)=>{return th.getBoundingClientRect().width-getHorizontalPadding(th);});if(ev.type==="pointerdown"&&ev.button===0){return;}
ev.preventDefault();ev.stopPropagation();table.classList.remove("o_resizing");for(const el of resizingColumnElements){el.classList.remove("o_column_resizing");handler.classList.remove("bg-primary","opacity-100");handler.classList.add("bg-black-25","opacity-50-hover");}
window.removeEventListener("pointermove",resizeHeader);for(const eventType of resizeStoppingEvents){window.removeEventListener(eventType,stopResize);}
document.activeElement.blur();};for(const eventType of resizeStoppingEvents){window.addEventListener(eventType,stopResize);}}
if(renderer.constructor.useMagicColumnWidths){useEffect(forceColumnWidths);const debouncedResizeCallback=useDebounced(()=>{resetWidths();forceColumnWidths();},200);useExternalListener(window,"resize",debouncedResizeCallback);}
return{get resizing(){return _resizing;},onStartResize,};}
return __exports;});;

/* /web/static/src/views/list/export_all/export_all.js */
odoo.define('@web/views/list/export_all/export_all',['@web/core/dropdown/dropdown_item','@web/core/registry','@web/core/user','@web/core/utils/strings','@web/search/action_menus/action_menus','@odoo/owl'],function(require){'use strict';let __exports={};const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{registry}=require("@web/core/registry");const{user}=require("@web/core/user");const{exprToBoolean}=require("@web/core/utils/strings");const{STATIC_ACTIONS_GROUP_NUMBER}=require("@web/search/action_menus/action_menus");const{Component}=require("@odoo/owl");const cogMenuRegistry=registry.category("cogMenu");const ExportAll=__exports.ExportAll=class ExportAll extends Component{static template="web.ExportAll";static components={DropdownItem};static props={};async onDirectExportData(){this.env.searchModel.trigger("direct-export-data");}}
const exportAllItem=__exports.exportAllItem={Component:ExportAll,groupNumber:STATIC_ACTIONS_GROUP_NUMBER,isDisplayed:async(env)=>env.config.viewType==="list"&&!env.model.root.selection.length&&(await user.hasGroup("base.group_allow_export"))&&exprToBoolean(env.config.viewArch.getAttribute("export_xlsx"),true),};cogMenuRegistry.add("export-all-menu",exportAllItem,{sequence:10});return __exports;});;

/* /web/static/src/views/list/list_arch_parser.js */
odoo.define('@web/views/list/list_arch_parser',['@web/core/utils/strings','@web/core/utils/xml','@web/model/relational_model/utils','@web/search/utils/order_by','@web/views/fields/field','@web/views/utils','@web/views/view_compiler','@web/views/widgets/widget'],function(require){'use strict';let __exports={};const{exprToBoolean}=require("@web/core/utils/strings");const{visitXML}=require("@web/core/utils/xml");const{combineModifiers}=require("@web/model/relational_model/utils");const{stringToOrderBy}=require("@web/search/utils/order_by");const{Field}=require("@web/views/fields/field");const{getActiveActions,getDecoration,processButton}=require("@web/views/utils");const{encodeObjectForTemplate}=require("@web/views/view_compiler");const{Widget}=require("@web/views/widgets/widget");const GroupListArchParser=__exports.GroupListArchParser=class GroupListArchParser{parse(arch,models,modelName,jsClass){const fieldNodes={};const fieldNextIds={};const buttons=[];let buttonId=0;visitXML(arch,(node)=>{if(node.tagName==="button"){buttons.push({...processButton(node),id:buttonId++,});return false;}else if(node.tagName==="field"){const fieldInfo=Field.parseFieldNode(node,models,modelName,"list",jsClass);if(!(fieldInfo.name in fieldNextIds)){fieldNextIds[fieldInfo.name]=0;}
const fieldId=`${fieldInfo.name}_${fieldNextIds[fieldInfo.name]++}`;fieldNodes[fieldId]=fieldInfo;node.setAttribute("field_id",fieldId);return false;}});return{fieldNodes,buttons};}}
const ListArchParser=__exports.ListArchParser=class ListArchParser{parseFieldNode(node,models,modelName){return Field.parseFieldNode(node,models,modelName,"list");}
parseWidgetNode(node,models,modelName){return Widget.parseWidgetNode(node);}
processButton(node){return processButton(node);}
parse(xmlDoc,models,modelName){const fieldNodes={};const widgetNodes={};let widgetNextId=0;const columns=[];const fields=models[modelName].fields;let buttonId=0;const groupBy={buttons:{},fields:{},};let headerButtons=[];const creates=[];const groupListArchParser=new GroupListArchParser();let buttonGroup;let handleField=null;const treeAttr={};let nextId=0;const fieldNextIds={};visitXML(xmlDoc,(node)=>{if(node.tagName!=="button"){buttonGroup=undefined;}
if(node.tagName==="button"){const button={...this.processButton(node),defaultRank:"btn-link",type:"button",id:buttonId++,};const width=button.attrs.width;if(buttonGroup&&!width){buttonGroup.buttons.push(button);buttonGroup.column_invisible=combineModifiers(buttonGroup.column_invisible,node.getAttribute("column_invisible"),"AND");}else{buttonGroup={id:`column_${nextId++}`,type:"button_group",buttons:[button],hasLabel:false,column_invisible:node.getAttribute("column_invisible"),};columns.push(buttonGroup);if(width){buttonGroup.attrs={width};buttonGroup=undefined;}}}else if(node.tagName==="field"){const fieldInfo=this.parseFieldNode(node,models,modelName);if(!(fieldInfo.name in fieldNextIds)){fieldNextIds[fieldInfo.name]=0;}
const fieldId=`${fieldInfo.name}_${fieldNextIds[fieldInfo.name]++}`;fieldNodes[fieldId]=fieldInfo;node.setAttribute("field_id",fieldId);if(fieldInfo.isHandle){handleField=fieldInfo.name;}
const label=fieldInfo.field.label;columns.push({...fieldInfo,id:`column_${nextId++}`,className:node.getAttribute("class"),optional:node.getAttribute("optional")||false,type:"field",fieldType:fieldInfo.type,hasLabel:!(fieldInfo.field.label===false||exprToBoolean(fieldInfo.attrs.nolabel)===true),label:(fieldInfo.widget&&label&&label.toString())||fieldInfo.string,});return false;}else if(node.tagName==="widget"){const widgetInfo=this.parseWidgetNode(node);const widgetId=`widget_${++widgetNextId}`;widgetNodes[widgetId]=widgetInfo;node.setAttribute("widget_id",widgetId);const widgetProps={name:widgetInfo.name,node:encodeObjectForTemplate({attrs:widgetInfo.attrs}).slice(1,-1),className:node.getAttribute("class")||"",};columns.push({...widgetInfo,props:widgetProps,id:`column_${nextId++}`,type:"widget",});}else if(node.tagName==="groupby"&&node.getAttribute("name")){const fieldName=node.getAttribute("name");const coModelName=fields[fieldName].relation;const groupByArchInfo=groupListArchParser.parse(node,models,coModelName);groupBy.buttons[fieldName]=groupByArchInfo.buttons;groupBy.fields[fieldName]={fieldNodes:groupByArchInfo.fieldNodes,fields:models[coModelName].fields,};return false;}else if(node.tagName==="header"){headerButtons=[...node.children].map((node)=>({...this.processButton(node),type:"button",id:buttonId++,}));return false;}else if(node.tagName==="control"){for(const childNode of node.children){if(childNode.tagName==="button"){creates.push({type:"button",...processButton(childNode),});}else if(childNode.tagName==="create"){creates.push({type:"create",context:childNode.getAttribute("context"),string:childNode.getAttribute("string"),});}}
return false;}else if("list"===node.tagName){const activeActions={...getActiveActions(xmlDoc),exportXlsx:exprToBoolean(xmlDoc.getAttribute("export_xlsx"),true),};treeAttr.activeActions=activeActions;treeAttr.className=xmlDoc.getAttribute("class")||null;treeAttr.editable=xmlDoc.getAttribute("editable");treeAttr.multiEdit=activeActions.edit?exprToBoolean(node.getAttribute("multi_edit")||""):false;treeAttr.openFormView=treeAttr.editable?exprToBoolean(xmlDoc.getAttribute("open_form_view")||""):false;const limitAttr=node.getAttribute("limit");treeAttr.limit=limitAttr&&parseInt(limitAttr,10);const countLimitAttr=node.getAttribute("count_limit");treeAttr.countLimit=countLimitAttr&&parseInt(countLimitAttr,10);const groupsLimitAttr=node.getAttribute("groups_limit");treeAttr.groupsLimit=groupsLimitAttr&&parseInt(groupsLimitAttr,10);treeAttr.noOpen=exprToBoolean(node.getAttribute("no_open")||"");treeAttr.rawExpand=xmlDoc.getAttribute("expand");treeAttr.decorations=getDecoration(xmlDoc);treeAttr.defaultGroupBy=xmlDoc.getAttribute("default_group_by");treeAttr.defaultOrder=stringToOrderBy(xmlDoc.getAttribute("default_order")||null);const action=xmlDoc.getAttribute("action");const type=xmlDoc.getAttribute("type");treeAttr.openAction=action&&type?{action,type}:null;}});if(!treeAttr.defaultOrder.length&&handleField){const handleFieldSort=`${handleField}, id`;treeAttr.defaultOrder=stringToOrderBy(handleFieldSort);}
return{creates,headerButtons,fieldNodes,widgetNodes,columns,groupBy,xmlDoc,...treeAttr,};}}
return __exports;});;

/* /web/static/src/views/list/list_cog_menu.js */
odoo.define('@web/views/list/list_cog_menu',['@web/search/cog_menu/cog_menu'],function(require){'use strict';let __exports={};const{CogMenu}=require("@web/search/cog_menu/cog_menu");const ListCogMenu=__exports.ListCogMenu=class ListCogMenu extends CogMenu{static template="web.ListCogMenu";static props={...CogMenu.props,hasSelectedRecords:{type:Number,optional:true},slots:{type:Object,optional:true},};_registryItems(){return this.props.hasSelectedRecords?[]:super._registryItems();}}
return __exports;});;

/* /web/static/src/views/list/list_confirmation_dialog.js */
odoo.define('@web/views/list/list_confirmation_dialog',['@web/core/dialog/dialog','@web/core/l10n/translation','@web/views/fields/field','@web/core/utils/hooks','@odoo/owl'],function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{_t}=require("@web/core/l10n/translation");const{Field}=require("@web/views/fields/field");const{useAutofocus}=require("@web/core/utils/hooks");const{Component}=require("@odoo/owl");const ListConfirmationDialog=__exports.ListConfirmationDialog=class ListConfirmationDialog extends Component{static template="web.ListView.ConfirmationModal";static components={Dialog,Field};static props={close:Function,title:{validate:(m)=>{return(typeof m==="string"||(typeof m==="object"&&typeof m.toString==="function"));},optional:true,},confirm:{type:Function,optional:true},cancel:{type:Function,optional:true},isDomainSelected:Boolean,fields:Object,nbRecords:Number,nbValidRecords:Number,record:Object,};static defaultProps={title:_t("Confirmation"),};setup(){useAutofocus();}
_cancel(){if(this.props.cancel){this.props.cancel();}
this.props.close();}
async _confirm(){if(this.props.confirm){await this.props.confirm();}
this.props.close();}}
return __exports;});;

/* /web/static/src/views/list/list_controller.js */
odoo.define('@web/views/list/list_controller',['@web/core/l10n/translation','@web/core/confirmation_dialog/confirmation_dialog','@web/core/network/download','@web/core/network/rpc','@web/core/py_js/py','@web/core/user','@web/core/utils/arrays','@web/core/utils/hooks','@web/core/utils/objects','@web/search/action_hook','@web/search/action_menus/action_menus','@web/search/layout','@web/search/pager_hook','@web/model/model','@web/model/relational_model/dynamic_record_list','@web/model/relational_model/utils','@web/views/standard_view_props','@web/views/view_button/multi_record_view_button','@web/views/view_button/view_button','@web/views/view_button/view_button_hook','@web/views/view_dialogs/export_data_dialog','@web/views/list/list_confirmation_dialog','@web/search/search_bar/search_bar','@web/search/search_bar/search_bar_toggler','@web/session','@web/views/list/list_cog_menu','@web/core/dropdown/dropdown_item','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{deleteConfirmationMessage,ConfirmationDialog,}=require("@web/core/confirmation_dialog/confirmation_dialog");const{download}=require("@web/core/network/download");const{rpc}=require("@web/core/network/rpc");const{evaluateExpr,evaluateBooleanExpr}=require("@web/core/py_js/py");const{user}=require("@web/core/user");const{unique}=require("@web/core/utils/arrays");const{useService,useBus}=require("@web/core/utils/hooks");const{omit}=require("@web/core/utils/objects");const{useSetupAction}=require("@web/search/action_hook");const{ActionMenus,STATIC_ACTIONS_GROUP_NUMBER}=require("@web/search/action_menus/action_menus");const{Layout}=require("@web/search/layout");const{usePager}=require("@web/search/pager_hook");const{useModelWithSampleData}=require("@web/model/model");const{DynamicRecordList}=require("@web/model/relational_model/dynamic_record_list");const{extractFieldsFromArchInfo}=require("@web/model/relational_model/utils");const{standardViewProps}=require("@web/views/standard_view_props");const{MultiRecordViewButton}=require("@web/views/view_button/multi_record_view_button");const{ViewButton}=require("@web/views/view_button/view_button");const{executeButtonCallback,useViewButtons}=require("@web/views/view_button/view_button_hook");const{ExportDataDialog}=require("@web/views/view_dialogs/export_data_dialog");const{ListConfirmationDialog}=require("@web/views/list/list_confirmation_dialog");const{SearchBar}=require("@web/search/search_bar/search_bar");const{useSearchBarToggler}=require("@web/search/search_bar/search_bar_toggler");const{session}=require("@web/session");const{ListCogMenu}=require("@web/views/list/list_cog_menu");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{Component,onMounted,onWillPatch,onWillRender,onWillStart,useEffect,useRef,useState,useSubEnv,}=require("@odoo/owl");const ListController=__exports.ListController=class ListController extends Component{static template=`web.ListView`;static components={ActionMenus,Layout,ViewButton,MultiRecordViewButton,SearchBar,CogMenu:ListCogMenu,DropdownItem,};static props={...standardViewProps,allowSelectors:{type:Boolean,optional:true},editable:{type:Boolean,optional:true},onSelectionChanged:{type:Function,optional:true},showButtons:{type:Boolean,optional:true},Model:Function,Renderer:Function,buttonTemplate:String,archInfo:Object,};static defaultProps={allowSelectors:true,createRecord:()=>{},editable:true,selectRecord:()=>{},showButtons:true,};setup(){this.actionService=useService("action");this.dialogService=useService("dialog");this.rootRef=useRef("root");this.archInfo=this.props.archInfo;this.activeActions=this.archInfo.activeActions;this.editable=this.activeActions.edit&&this.props.editable?this.archInfo.editable:false;this.onOpenFormView=this.openRecord.bind(this);this.hasOpenFormViewButton=this.editable?this.archInfo.openFormView:false;this.model=useState(useModelWithSampleData(this.props.Model,this.modelParams));this.hasMousedownDiscard=false;this.nextActionAfterMouseup=null;this.optionalActiveFields={};this.editedRecord=null;onWillRender(()=>{this.editedRecord=this.model.root.editedRecord;});onWillStart(async()=>{this.isExportEnable=await user.hasGroup("base.group_allow_export");});onMounted(()=>{const{rendererScrollPositions}=this.props.state||{};if(rendererScrollPositions){const renderer=this.rootRef.el.querySelector(".o_list_renderer");renderer.scrollLeft=rendererScrollPositions.left;renderer.scrollTop=rendererScrollPositions.top;}});this.archiveEnabled="active"in this.props.fields?!this.props.fields.active.readonly:"x_active"in this.props.fields?!this.props.fields.x_active.readonly:false;useSubEnv({model:this.model});useViewButtons(this.rootRef,{beforeExecuteAction:this.beforeExecuteActionButton.bind(this),afterExecuteAction:this.afterExecuteActionButton.bind(this),reload:()=>this.model.load(),});useSetupAction({rootRef:this.rootRef,beforeLeave:async()=>{return this.model.root.leaveEditMode();},beforeUnload:async(ev)=>{if(this.editedRecord){const isValid=await this.editedRecord.urgentSave();if(!isValid){ev.preventDefault();ev.returnValue="Unsaved changes";}}},getLocalState:()=>{const renderer=this.rootRef.el.querySelector(".o_list_renderer");return{modelState:this.model.exportState(),rendererScrollPositions:{left:renderer.scrollLeft,top:renderer.scrollTop,},};},getOrderBy:()=>{return this.model.root.orderBy;},});usePager(()=>{const{count,hasLimitedCount,isGrouped,limit,offset}=this.model.root;return{offset:offset,limit:limit,total:count,onUpdate:async({offset,limit},hasNavigated)=>{if(this.editedRecord){if(!(await this.editedRecord.save())){return;}}
await this.model.root.load({limit,offset});if(hasNavigated){this.onPageChangeScroll();}},updateTotal:!isGrouped&&hasLimitedCount?()=>this.model.root.fetchCount():undefined,};});useEffect(()=>{if(this.props.onSelectionChanged){const resIds=this.model.root.selection.map((record)=>record.resId);this.props.onSelectionChanged(resIds);}},()=>[this.model.root.selection.length]);this.searchBarToggler=useSearchBarToggler();this.firstLoad=true;onWillPatch(()=>{this.firstLoad=false;});useBus(this.env.searchModel,"direct-export-data",this.onDirectExportData.bind(this));}
get modelParams(){const{defaultGroupBy,rawExpand}=this.archInfo;const{activeFields,fields}=extractFieldsFromArchInfo(this.archInfo,this.props.fields);const groupByInfo={};for(const fieldName in this.archInfo.groupBy.fields){const fieldNodes=this.archInfo.groupBy.fields[fieldName].fieldNodes;const fields=this.archInfo.groupBy.fields[fieldName].fields;groupByInfo[fieldName]=extractFieldsFromArchInfo({fieldNodes},fields);}
const modelConfig=this.props.state?.modelState?.config||{resModel:this.props.resModel,fields,activeFields,openGroupsByDefault:rawExpand?evaluateExpr(rawExpand,this.props.context):false,};return{config:modelConfig,state:this.props.state?.modelState,groupByInfo,limit:this.archInfo.limit||this.props.limit,countLimit:this.archInfo.countLimit,defaultOrderBy:this.archInfo.defaultOrder,defaultGroupBy:this.props.searchMenuTypes.includes("groupBy")?defaultGroupBy:false,groupsLimit:this.archInfo.groupsLimit,multiEdit:this.archInfo.multiEdit,activeIdsLimit:session.active_ids_limit,hooks:{onRecordSaved:this.onRecordSaved.bind(this),onWillSaveRecord:this.onWillSaveRecord.bind(this),onWillSaveMulti:this.onWillSaveMulti.bind(this),onWillSetInvalidField:this.onWillSetInvalidField.bind(this),},};}
get actionMenuProps(){return{getActiveIds:()=>this.model.root.selection.map((r)=>r.resId),context:this.props.context,domain:this.props.domain,items:this.actionMenuItems,isDomainSelected:this.model.root.isDomainSelected,resModel:this.model.root.resModel,onActionExecuted:()=>this.model.load(),};}
async onRecordSaved(record){}
async onWillSaveRecord(record){}
async createRecord({group}={}){const list=(group&&group.list)||this.model.root;if(this.editable&&!list.isGrouped){if(!(list instanceof DynamicRecordList)){throw new Error("List should be a DynamicRecordList");}
await list.leaveEditMode();if(!list.editedRecord){await(group||list).addNewRecord(this.editable==="top");}
this.render();}else{await this.props.createRecord();}}
async openRecord(record,force=false){const dirty=await record.isDirty();if(dirty){await record.save();}
if(this.archInfo.openAction){this.actionService.doActionButton({name:this.archInfo.openAction.action,type:this.archInfo.openAction.type,resModel:record.resModel,resId:record.resId,resIds:record.resIds,context:record.context,onClose:async()=>{await record.model.root.load();},});}else{const activeIds=this.model.root.records.map((datapoint)=>datapoint.resId);this.props.selectRecord(record.resId,{activeIds,force});}}
async onClickCreate(){return executeButtonCallback(this.rootRef.el,()=>this.createRecord());}
async onClickDiscard(){return executeButtonCallback(this.rootRef.el,()=>this.model.root.leaveEditMode({discard:true}));}
async onClickSave(){return executeButtonCallback(this.rootRef.el,async()=>{const saved=await this.editedRecord.save();if(saved){await this.model.root.leaveEditMode();}});}
onMouseDownDiscard(mouseDownEvent){this.hasMousedownDiscard=true;document.addEventListener("mouseup",(mouseUpEvent)=>{this.hasMousedownDiscard=false;if(mouseUpEvent.target!==mouseDownEvent.target){if(this.nextActionAfterMouseup){this.nextActionAfterMouseup();}}
this.nextActionAfterMouseup=null;},{capture:true,once:true});}
onPageChangeScroll(){if(this.rootRef&&this.rootRef.el){if(this.env.isSmall){this.rootRef.el.scrollTop=0;}else{this.rootRef.el.querySelector(".o_content .o_list_renderer").scrollTop=0;}}}
getSelectedResIds(){return this.model.root.getResIds(true);}
getStaticActionMenuItems(){return{export:{isAvailable:()=>this.isExportEnable,sequence:10,icon:"fa fa-upload",description:_t("Export"),callback:()=>this.onExportData(),},archive:{isAvailable:()=>this.archiveEnabled,sequence:20,icon:"oi oi-archive",description:_t("Archive"),callback:()=>{this.dialogService.add(ConfirmationDialog,this.archiveDialogProps);},},unarchive:{isAvailable:()=>this.archiveEnabled,sequence:30,icon:"oi oi-unarchive",description:_t("Unarchive"),callback:()=>this.toggleArchiveState(false),},duplicate:{isAvailable:()=>this.activeActions.duplicate,sequence:35,icon:"fa fa-clone",description:_t("Duplicate"),callback:()=>this.duplicateRecords(),},delete:{isAvailable:()=>this.activeActions.delete,sequence:40,icon:"fa fa-trash-o",description:_t("Delete"),callback:()=>this.onDeleteSelectedRecords(),},};}
get archiveDialogProps(){return{body:_t("Are you sure that you want to archive all the selected records?"),confirmLabel:_t("Archive"),confirm:()=>{this.toggleArchiveState(true);},cancel:()=>{},};}
get actionMenuItems(){const{actionMenus}=this.props.info;const staticActionItems=Object.entries(this.getStaticActionMenuItems()).filter(([key,item])=>item.isAvailable===undefined||item.isAvailable()).sort(([k1,item1],[k2,item2])=>(item1.sequence||0)-(item2.sequence||0)).map(([key,item])=>Object.assign({key,groupNumber:STATIC_ACTIONS_GROUP_NUMBER},omit(item,"isAvailable")));return{action:[...staticActionItems,...(actionMenus?.action||[])],print:actionMenus?.print,};}
async onSelectDomain(){await this.model.root.selectDomain(true);if(this.props.onSelectionChanged){const resIds=await this.model.root.getResIds(true);this.props.onSelectionChanged(resIds);}}
onUnselectAll(){this.model.root.selection.forEach((record)=>{record.toggleSelection(false);});this.model.root.selectDomain(false);}
evalViewModifier(modifier){return evaluateBooleanExpr(modifier,this.model.root.evalContext);}
get className(){return this.props.className;}
get hasSelectedRecords(){return this.nbSelected||this.isDomainSelected;}
get nbSelected(){return this.model.root.selection.length;}
get isPageSelected(){const root=this.model.root;return root.selection.length===root.records.length;}
get isDomainSelected(){return this.model.root.isDomainSelected;}
get nbTotal(){const list=this.model.root;return list.isGrouped?list.recordCount:list.count;}
get defaultExportList(){return unique(this.props.archInfo.columns.filter((col)=>col.type==="field").filter((col)=>!col.optional||this.optionalActiveFields[col.name]).filter((col)=>!evaluateBooleanExpr(col.column_invisible,this.props.context)).map((col)=>this.props.fields[col.name]).filter((field)=>field.exportable!==false));}
get display(){const{controlPanel}=this.props.display;if(!controlPanel){return this.props.display;}
return{...this.props.display,controlPanel:{...controlPanel,layoutActions:!this.hasSelectedRecords,},};}
async downloadExport(fields,import_compat,format){let ids=false;if(!this.isDomainSelected){const resIds=await this.getSelectedResIds();ids=resIds.length>0&&resIds;}
const exportedFields=fields.map((field)=>({name:field.name||field.id,label:field.label||field.string,store:field.store,type:field.field_type||field.type,}));if(import_compat){exportedFields.unshift({name:"id",label:_t("External ID"),});}
await download({data:{data:JSON.stringify({import_compat,context:this.props.context,domain:this.model.root.domain,fields:exportedFields,groupby:this.model.root.groupBy,ids,model:this.model.root.resModel,}),},url:`/web/export/${format}`,});}
async getExportedFields(model,import_compat,parentParams){let domain=parentParams?[]:this.model.root.domain;if(!this.isDomainSelected){const resIds=await this.getSelectedResIds();const ids=resIds.length>0&&resIds;domain=[["id","in",ids]];}
return await rpc("/web/export/get_fields",{...parentParams,model,domain,import_compat,});}
async onExportData(){const dialogProps={context:this.props.context,defaultExportList:this.defaultExportList,download:this.downloadExport.bind(this),getExportedFields:this.getExportedFields.bind(this),root:this.model.root,};this.dialogService.add(ExportDataDialog,dialogProps);}
async onDirectExportData(){await this.downloadExport(this.defaultExportList,false,"xlsx");}
async toggleArchiveState(archive){if(archive){return this.model.root.archive(true);}
return this.model.root.unarchive(true);}
async duplicateRecords(){return this.model.root.duplicateRecords();}
get deleteConfirmationDialogProps(){const root=this.model.root;let body=deleteConfirmationMessage;if(root.isDomainSelected||root.selection.length>1){body=_t("Are you sure you want to delete these records?");}
return{title:_t("Bye-bye, record!"),body,confirmLabel:_t("Delete"),confirm:()=>this.model.root.deleteRecords(),cancel:()=>{},cancelLabel:_t("No, keep it"),};}
async onDeleteSelectedRecords(){this.dialogService.add(ConfirmationDialog,this.deleteConfirmationDialogProps);}
discardSelection(){this.model.root.records.forEach((record)=>{record.toggleSelection(false);});}
async beforeExecuteActionButton(clickParams){if(clickParams.special!=="cancel"&&this.editedRecord){return this.editedRecord.save();}}
async afterExecuteActionButton(clickParams){}
onWillSaveMulti(editedRecord,changes,validSelectedRecords){if(this.hasMousedownDiscard){this.nextActionAfterMouseup=()=>this.model.root.multiSave(editedRecord);return false;}
if(validSelectedRecords.length>1){const{isDomainSelected,selection}=this.model.root;return new Promise((resolve)=>{const dialogProps={confirm:()=>resolve(true),cancel:()=>{if(this.editedRecord){this.model.root.leaveEditMode({discard:true});}else{editedRecord.discard();}
resolve(false);},isDomainSelected,fields:Object.keys(changes).map((fieldName)=>{const fieldNode=Object.values(this.archInfo.fieldNodes).find((fieldNode)=>fieldNode.name===fieldName);const label=fieldNode&&fieldNode.string;return{name:fieldName,label:label||editedRecord.fields[fieldName].string,fieldNode,widget:fieldNode&&fieldNode.widget,};}),nbRecords:selection.length,nbValidRecords:validSelectedRecords.length,record:editedRecord,};const focusedCellBeforeDialog=document.activeElement.closest(".o_data_cell");this.dialogService.add(ListConfirmationDialog,dialogProps,{onClose:()=>{if(focusedCellBeforeDialog){focusedCellBeforeDialog.focus();}
this.model.root.leaveEditMode({discard:true});resolve(false);},});});}
return true;}
onWillSetInvalidField(record,fieldName){if(this.hasMousedownDiscard){this.nextActionAfterMouseup=()=>record.setInvalidField(fieldName);return false;}
return true;}}
return __exports;});;

/* /web/static/src/views/list/list_renderer.js */
odoo.define('@web/views/list/list_renderer',['@web/core/browser/browser','@web/core/checkbox/checkbox','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/core/hotkeys/hotkey_service','@web/core/pager/pager','@web/core/py_js/py','@web/core/registry','@web/core/utils/hooks','@web/core/utils/sortable_owl','@web/core/utils/ui','@web/views/fields/field','@web/views/fields/field_tooltip','@web/views/utils','@web/model/relational_model/utils','@web/views/view_button/view_button','@web/views/view_hook','@web/views/widgets/widget','@web/core/l10n/localization','@web/views/list/column_width_hook','@odoo/owl','@web/core/l10n/translation','@web/core/utils/strings'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{CheckBox}=require("@web/core/checkbox/checkbox");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{getActiveHotkey}=require("@web/core/hotkeys/hotkey_service");const{Pager}=require("@web/core/pager/pager");const{evaluateBooleanExpr}=require("@web/core/py_js/py");const{registry}=require("@web/core/registry");const{useBus,useService}=require("@web/core/utils/hooks");const{useSortable}=require("@web/core/utils/sortable_owl");const{getTabableElements}=require("@web/core/utils/ui");const{Field,getPropertyFieldInfo}=require("@web/views/fields/field");const{getTooltipInfo}=require("@web/views/fields/field_tooltip");const{getClassNameFromDecoration}=require("@web/views/utils");const{combineModifiers}=require("@web/model/relational_model/utils");const{ViewButton}=require("@web/views/view_button/view_button");const{useBounceButton}=require("@web/views/view_hook");const{Widget}=require("@web/views/widgets/widget");const{getFormattedValue}=require("@web/views/utils");const{localization}=require("@web/core/l10n/localization");const{useMagicColumnWidths}=require("@web/views/list/column_width_hook");const{Component,onMounted,onPatched,onWillPatch,onWillRender,useExternalListener,useRef,}=require("@odoo/owl");const{_t}=require("@web/core/l10n/translation");const{exprToBoolean}=require("@web/core/utils/strings");const formatters=registry.category("formatters");const DEFAULT_GROUP_PAGER_COLSPAN=1;const FIELD_CLASSES={char:"o_list_char",float:"o_list_number",integer:"o_list_number",monetary:"o_list_number",text:"o_list_text",many2one:"o_list_many2one",};function containsActiveElement(parent){const{activeElement}=document;return parent!==activeElement&&parent.contains(activeElement);}
function getElementToFocus(cell,index){return getTabableElements(cell).at(index)||cell;}
const ListRenderer=__exports.ListRenderer=class ListRenderer extends Component{static template="web.ListRenderer";static rowsTemplate="web.ListRenderer.Rows";static recordRowTemplate="web.ListRenderer.RecordRow";static groupRowTemplate="web.ListRenderer.GroupRow";static useMagicColumnWidths=true;static LONG_TOUCH_THRESHOLD=400;static components={DropdownItem,Field,ViewButton,CheckBox,Dropdown,Pager,Widget};static defaultProps={hasSelectors:false,cycleOnTab:true};static props=["activeActions?","list","archInfo","openRecord","onAdd?","cycleOnTab?","allowSelectors?","editable?","onOpenFormView?","hasOpenFormViewButton?","noContentHelp?","nestedKeyOptionalFieldsData?","optionalActiveFields?",];setup(){this.uiService=useService("ui");this.notificationService=useService("notification");const key=this.createViewKey();this.keyOptionalFields=`optional_fields,${key}`;this.keyDebugOpenView=`debug_open_view,${key}`;this.cellClassByColumn={};this.groupByButtons=this.props.archInfo.groupBy.buttons;useExternalListener(document,"click",this.onGlobalClick.bind(this));this.tableRef=useRef("table");this.longTouchTimer=null;this.touchStartMs=0;this.preventReorder=false;this.creates=this.props.archInfo.creates.length?this.props.archInfo.creates:[{type:"create",string:_t("Add a line")}];this.cellToFocus=null;this.activeRowId=null;onMounted(async()=>{await Promise.resolve();this.activeElement=this.uiService.activeElement;});onWillPatch(()=>{const activeRow=document.activeElement.closest(".o_data_row.o_selected_row");this.activeRowId=activeRow?activeRow.dataset.id:null;});this.optionalActiveFields=this.props.optionalActiveFields||{};this.allColumns=[];this.columns=[];this.editedRecord=null;onWillRender(()=>{this.editedRecord=this.props.list.editedRecord;this.allColumns=this.processAllColumn(this.props.archInfo.columns,this.props.list);Object.assign(this.optionalActiveFields,this.computeOptionalActiveFields());this.debugOpenView=exprToBoolean(browser.localStorage.getItem(this.keyDebugOpenView));this.columns=this.getActiveColumns(this.props.list);this.withHandleColumn=this.columns.some((col)=>col.widget==="handle");});let dataRowId;this.rootRef=useRef("root");this.resequencePromise=Promise.resolve();useSortable({enable:()=>this.canResequenceRows,ref:this.rootRef,elements:".o_row_draggable",handle:".o_handle_cell",cursor:"grabbing",placeholderClasses:["d-table-row"],onDragStart:(params)=>{const{element}=params;dataRowId=element.dataset.id;return this.sortStart(params);},onDragEnd:(params)=>this.sortStop(params),onDrop:(params)=>this.sortDrop(dataRowId,params),});if(this.env.searchModel){useBus(this.env.searchModel,"focus-view",()=>{if(this.props.list.model.useSampleModel){return;}
const nextTh=this.tableRef.el.querySelector("thead th");const toFocus=getElementToFocus(nextTh);this.focus(toFocus);this.tableRef.el.querySelector("tbody").classList.add("o_keyboard_navigation");});}
useBus(this.props.list.model.bus,"FIELD_IS_DIRTY",(ev)=>(this.lastIsDirty=ev.detail));useBounceButton(this.rootRef,()=>{return this.showNoContentHelper;});let isSmall=this.uiService.isSmall;useBus(this.uiService.bus,"resize",()=>{if(isSmall!==this.uiService.isSmall){isSmall=this.uiService.isSmall;this.render();}});this.columnWidths=useMagicColumnWidths(this.tableRef,()=>{return{columns:this.columns,isEmpty:!this.props.list.records.length||this.props.list.model.useSampleModel,hasSelectors:this.hasSelectors,hasOpenFormViewColumn:this.hasOpenFormViewColumn,hasActionsColumn:this.hasActionsColumn,};});useExternalListener(window,"keydown",(ev)=>{this.shiftKeyMode=ev.shiftKey;});useExternalListener(window,"keyup",(ev)=>{this.shiftKeyMode=ev.shiftKey;const hotkey=getActiveHotkey(ev);if(hotkey==="shift"){this.shiftKeyedRecord=undefined;}});useExternalListener(window,"blur",(ev)=>{this.shiftKeyMode=false;});onPatched(async()=>{await Promise.resolve();if(this.activeElement!==this.uiService.activeElement){return;}
if(this.editedRecord&&this.activeRowId!==this.editedRecord.id){if(this.cellToFocus&&this.cellToFocus.record===this.editedRecord){const column=this.cellToFocus.column;const forward=this.cellToFocus.forward;this.focusCell(column,forward);}else if(this.lastEditedCell){this.focusCell(this.lastEditedCell.column,true);}else{this.focusCell(this.columns[0]);}}
this.cellToFocus=null;this.lastEditedCell=null;});this.isRTL=localization.direction==="rtl";}
displaySaveNotification(){this.notificationService.add(_t("Please save your changes first"),{type:"danger",});}
getActiveColumns(list){return this.allColumns.filter((col)=>{if(list.isGrouped&&col.widget==="handle"){return false;}
if(col.optional&&!this.optionalActiveFields[col.name]){return false;}
if(this.evalColumnInvisible(col.column_invisible)){return false;}
return true;});}
get hasSelectors(){return this.props.allowSelectors&&!this.env.isSmall;}
get hasOpenFormViewColumn(){return this.props.hasOpenFormViewButton||this.debugOpenView;}
get hasOptionalOpenFormViewColumn(){return this.props.editable&&this.env.debug&&!this.props.hasOpenFormViewButton;}
get hasActionsColumn(){return!!(this.displayOptionalFields||this.activeActions.onDelete||this.hasOptionalOpenFormViewColumn);}
add(params){if(this.canCreate){this.props.onAdd(params);}}
async addInGroup(group){const left=await this.props.list.leaveEditMode({canAbandon:false});if(left){group.addNewRecord({},this.props.editable==="top");}}
processAllColumn(allColumns,list){return allColumns.flatMap((column)=>{if(column.type==="field"&&list.fields[column.name].type==="properties"){return this.getPropertyFieldColumns(column,list);}else{return[column];}});}
getPropertyFieldColumns(column,list){return Object.values(list.fields).filter((field)=>list.activeFields[field.name]&&field.relatedPropertyField&&field.relatedPropertyField.name===column.name&&field.type!=="separator").map((propertyField)=>{const activeField=list.activeFields[propertyField.name];return{...getPropertyFieldInfo(propertyField),relatedPropertyField:activeField.relatedPropertyField,id:`${column.id}_${propertyField.name}`,column_invisible:combineModifiers(propertyField.column_invisible,column.column_invisible,"OR"),classNames:column.classNames,optional:"hide",type:"field",hasLabel:true,label:propertyField.string,sortable:false,attrs:["integer","float"].includes(propertyField.type)?{sum:propertyField.string}:{},};});}
getFieldProps(record,column){return{readonly:this.isCellReadonly(column,record)||this.isRecordReadonly(record),};}
get activeActions(){return this.props.activeActions||{};}
get canResequenceRows(){if(!this.props.list.canResequence()){return false;}
const{handleField,orderBy}=this.props.list;return!orderBy.length||(orderBy.length&&orderBy[0].name===handleField);}
get fields(){return this.props.list.fields;}
get nbCols(){let nbCols=this.columns.length;if(this.hasSelectors){nbCols++;}
if(this.hasActionsColumn){nbCols++;}
if(this.hasOpenFormViewColumn){nbCols++;}
return nbCols;}
canUseFormatter(column,record){if(column.widget){return false;}
if(record.isInEdition&&(record.model.multiEdit||this.isInlineEditable(record))){return false;}
return true;}
isRecordReadonly(record){if(record.isNew){return false;}
if(this.props.activeActions?.edit===false){return true;}
if(record.isInEdition&&!this.isInlineEditable(record)&&!record.model.multiEdit){return true;}
return false;}
focusCell(column,forward=true){const index=column?this.columns.findIndex((col)=>col.id===column.id&&col.name===column.name):-1;let columns;if(index===-1&&!forward){columns=this.columns.slice(0).reverse();}else{columns=[...this.columns.slice(index,this.columns.length),...this.columns.slice(0,index),];}
for(const column of columns){if(column.type!=="field"){continue;}
if(!this.isCellReadonly(column,this.editedRecord)){const cell=this.tableRef.el.querySelector(`.o_selected_row td[name='${column.name}']`);if(cell){const toFocus=getElementToFocus(cell);if(cell!==toFocus){this.focus(toFocus);this.lastEditedCell={column,record:this.editedRecord};break;}}}}}
focus(el){if(!el){return;}
el.focus();if(["text","search","url","tel","password","textarea"].includes(el.type)&&el.selectionStart===el.selectionEnd){el.selectionStart=0;el.selectionEnd=el.value.length;}}
editGroupRecord(group){const{resId,resModel}=group.record;this.env.services.action.doAction({context:{create:false,},res_model:resModel,res_id:resId,type:"ir.actions.act_window",views:[[false,"form"]],flags:{mode:"edit"},});}
createViewKey(){let keyParts={fields:this.props.list.fieldNames,model:this.props.list.resModel,viewMode:"list",viewId:this.env.config.viewId,};if(this.props.nestedKeyOptionalFieldsData){keyParts=Object.assign(keyParts,{model:this.props.nestedKeyOptionalFieldsData.model,viewMode:this.props.nestedKeyOptionalFieldsData.viewMode,relationalField:this.props.nestedKeyOptionalFieldsData.field,subViewType:"list",});}
const parts=["model","viewMode","viewId","relationalField","subViewType"];const viewIdentifier=[];parts.forEach((partName)=>{if(partName in keyParts){viewIdentifier.push(keyParts[partName]);}});keyParts.fields.sort((left,right)=>(left<right?-1:1)).forEach((fieldName)=>{return viewIdentifier.push(fieldName);});return viewIdentifier.join(",");}
get optionalFieldGroups(){const propertyGroups={};const optionalFields=[];const optionalColumns=this.allColumns.filter((col)=>col.optional&&!this.evalColumnInvisible(col.column_invisible));for(const col of optionalColumns){const optionalField={label:col.label,name:col.name,value:this.optionalActiveFields[col.name],};if(!col.relatedPropertyField){optionalFields.push(optionalField);}else{const{displayName,id}=col.relatedPropertyField;if(propertyGroups[id]){propertyGroups[id].optionalFields.push(optionalField);}else{propertyGroups[id]={id,displayName,optionalFields:[optionalField]};}}}
if(optionalFields.length){return[{optionalFields},...Object.values(propertyGroups)];}
return Object.values(propertyGroups);}
get hasOptionalFields(){return this.allColumns.some((col)=>col.optional&&!this.evalColumnInvisible(col.column_invisible));}
get displayOptionalFields(){return this.hasOptionalFields;}
nbRecordsInGroup(group){if(group.isFolded){return 0;}else if(group.list.isGrouped){let count=0;for(const gr of group.list.groups){count+=this.nbRecordsInGroup(gr);}
return count;}else{return group.list.records.length;}}
get selectAll(){const list=this.props.list;const nbDisplayedRecords=list.records.length;if(list.isDomainSelected){return true;}else{return nbDisplayedRecords>0&&list.selection.length===nbDisplayedRecords;}}
get aggregates(){let values;if(this.props.list.selection&&this.props.list.selection.length){values=this.props.list.selection.map((r)=>r.data);}else if(this.props.list.isGrouped){values=this.props.list.groups.map((g)=>g.aggregates);}else{values=this.props.list.records.map((r)=>r.data);}
const aggregates={};for(const column of this.allColumns){if(column.type!=="field"){continue;}
const fieldName=column.name;if(fieldName in this.optionalActiveFields&&!this.optionalActiveFields[fieldName]){continue;}
const field=this.fields[fieldName];const fieldValues=values.map((v)=>v[fieldName]).filter((v)=>v||v===0);if(!fieldValues.length){continue;}
const type=field.type;if(type!=="integer"&&type!=="float"&&type!=="monetary"){continue;}
const{attrs,widget}=column;const func=(attrs.sum&&"sum")||(attrs.avg&&"avg")||(attrs.max&&"max")||(attrs.min&&"min");let currencyId;if(type==="monetary"||widget==="monetary"){const currencyField=column.options.currency_field||this.fields[fieldName].currency_field||"currency_id";if(!(currencyField in this.props.list.activeFields)){aggregates[fieldName]={help:_t("No currency provided"),value:"—",};continue;}
currencyId=values[0][currencyField]&&values[0][currencyField][0];if(currencyId&&func){const sameCurrency=values.every((value)=>currencyId===value[currencyField][0]);if(!sameCurrency){aggregates[fieldName]={help:_t("Different currencies cannot be aggregated"),value:"—",};continue;}}}
if(func){let aggregateValue=0;if(func==="max"){aggregateValue=Math.max(-Infinity,...fieldValues);}else if(func==="min"){aggregateValue=Math.min(Infinity,...fieldValues);}else if(func==="avg"){aggregateValue=fieldValues.reduce((acc,val)=>acc+val)/fieldValues.length;}else if(func==="sum"){aggregateValue=fieldValues.reduce((acc,val)=>acc+val);}
const formatter=formatters.get(widget,false)||formatters.get(type,false);const formatOptions={digits:attrs.digits?JSON.parse(attrs.digits):undefined,escape:true,};if(currencyId){formatOptions.currencyId=currencyId;}
aggregates[fieldName]={help:attrs[func],value:formatter?formatter(aggregateValue,formatOptions):aggregateValue,};}}
return aggregates;}
formatAggregateValue(group,column){const{widget,attrs}=column;const field=this.props.list.fields[column.name];const aggregateValue=group.aggregates[column.name];if(!(column.name in group.aggregates)){return"";}
const formatter=formatters.get(widget,false)||formatters.get(field.type,false);const formatOptions={digits:attrs.digits?JSON.parse(attrs.digits):field.digits,escape:true,};return formatter?formatter(aggregateValue,formatOptions):aggregateValue;}
getGroupLevel(group){return this.props.list.groupBy.length-group.list.groupBy.length-1;}
getColumnClass(column){const classNames=["align-middle"];if(this.isSortable(column)){classNames.push("o_column_sortable","position-relative","cursor-pointer");}else{classNames.push("cursor-default");}
const orderBy=this.props.list.orderBy;if(orderBy.length&&column.widget!=="handle"&&orderBy[0].name===column.name&&column.hasLabel){classNames.push("table-active");}
if(this.isNumericColumn(column)){classNames.push("o_list_number_th");}
if(column.type==="button_group"){classNames.push("o_list_button");}
if(column.widget){classNames.push(`o_${column.widget}_cell`);}
return classNames.join(" ");}
getColumns(record){return this.columns;}
isNumericColumn(column){const{type}=this.fields[column.name];return["float","integer","monetary"].includes(type);}
isSortable(column){const{hasLabel,name,options}=column;const{sortable}=this.fields[name];return(sortable||options.allow_order)&&hasLabel;}
getSortableIconClass(column){const{orderBy}=this.props.list;const classNames=this.isSortable(column)?["fa","fa-lg"]:["d-none"];if(orderBy.length&&orderBy[0].name===column.name){classNames.push(orderBy[0].asc?"fa-angle-up":"fa-angle-down");}else{classNames.push("fa-angle-down","opacity-0","opacity-100-hover");}
return classNames.join(" ");}
getRowClass(record){const classNames=this.props.archInfo.decorations.filter((decoration)=>evaluateBooleanExpr(decoration.condition,record.evalContextWithVirtualIds)).map((decoration)=>decoration.class);if(record.selected){classNames.push("table-info");}
if(record.isInEdition){classNames.push("o_selected_row");}
if(record.selected){classNames.push("o_data_row_selected");}
if(this.canResequenceRows){classNames.push("o_row_draggable");}
return classNames.join(" ");}
getCellClass(column,record){if(column.relatedPropertyField&&!(column.name in record.data)){return"";}
if(!this.cellClassByColumn[column.id]){const classNames=["o_data_cell"];if(column.type==="button_group"){classNames.push("o_list_button");}else if(column.type==="field"){classNames.push("o_field_cell");if(column.attrs&&column.attrs.class&&this.canUseFormatter(column,record)){classNames.push(column.attrs.class);}
const typeClass=FIELD_CLASSES[this.fields[column.name].type];if(typeClass){classNames.push(typeClass);}
if(column.widget){classNames.push(`o_${column.widget}_cell`);}}
this.cellClassByColumn[column.id]=classNames;}
const classNames=[...this.cellClassByColumn[column.id]];if(column.type==="field"){if(evaluateBooleanExpr(column.required,record.evalContextWithVirtualIds)){classNames.push("o_required_modifier");}
if(record.isFieldInvalid(column.name)){classNames.push("o_invalid_cell");}
if(this.isCellReadonly(column,record)){classNames.push("o_readonly_modifier");}
if(this.canUseFormatter(column,record)){const{decorations}=column;for(const decoName in decorations){if(evaluateBooleanExpr(decorations[decoName],record.evalContextWithVirtualIds)){classNames.push(getClassNameFromDecoration(decoName));}}}
if(record.isInEdition&&this.editedRecord&&this.isCellReadonly(column,this.editedRecord)){classNames.push("text-muted");}else{classNames.push("cursor-pointer");}}
return classNames.join(" ");}
isCellReadonly(column,record){return!!(this.isRecordReadonly(record)||(column.relatedPropertyField&&record.selected&&record.model.multiEdit)||evaluateBooleanExpr(column.readonly,record.evalContextWithVirtualIds));}
getCellTitle(column,record){if(["many2one","reference","char"].includes(this.fields[column.name].type)){return this.getFormattedValue(column,record);}}
getFieldClass(column){return column.attrs&&column.attrs.class;}
getFormattedValue(column,record){const fieldName=column.name;if(column.options.enable_formatting===false){return record.data[fieldName];}
return getFormattedValue(record,fieldName,column);}
evalInvisible(invisible,record){return evaluateBooleanExpr(invisible,record.evalContextWithVirtualIds);}
evalColumnInvisible(columnInvisible){return evaluateBooleanExpr(columnInvisible,this.props.list.evalContext);}
getGroupDisplayName(group){if(group.groupByField.type==="boolean"){return group.value===undefined?_t("None"):group.value?_t("Yes"):_t("No");}else{return group.value===undefined||group.value===false?_t("None"):group.displayName;}}
get canCreate(){return"link"in this.activeActions?this.activeActions.link:this.activeActions.create;}
get isX2Many(){return this.activeActions.type!=="view";}
get getEmptyRowIds(){let nbEmptyRow=Math.max(0,4-this.props.list.records.length);if(nbEmptyRow>0&&this.displayRowCreates){nbEmptyRow-=1;}
return Array.from(Array(nbEmptyRow).keys());}
get displayRowCreates(){return this.isX2Many&&this.canCreate;}
getFirstAggregateIndex(group){return this.columns.findIndex((col)=>col.name in group.aggregates);}
getLastAggregateIndex(group){const reversedColumns=[...this.columns].reverse();const index=reversedColumns.findIndex((col)=>col.name in group.aggregates);return index>-1?this.columns.length-index-1:-1;}
getAggregateColumns(group){const firstIndex=this.getFirstAggregateIndex(group);const lastIndex=this.getLastAggregateIndex(group);return this.columns.slice(firstIndex,lastIndex+1);}
getGroupNameCellColSpan(group){const firstAggregateIndex=this.getFirstAggregateIndex(group);let colspan;if(firstAggregateIndex>-1){colspan=firstAggregateIndex;}else{colspan=Math.max(1,this.columns.length-DEFAULT_GROUP_PAGER_COLSPAN);if(this.displayOptionalFields){colspan++;}}
if(this.hasSelectors){colspan++;}
return colspan;}
getGroupPagerCellColspan(group){const lastAggregateIndex=this.getLastAggregateIndex(group);let colspan;if(lastAggregateIndex>-1){colspan=this.columns.length-lastAggregateIndex-1;if(this.displayOptionalFields){colspan++;}}else{colspan=this.columns.length>1?DEFAULT_GROUP_PAGER_COLSPAN:0;}
if(this.hasOpenFormViewColumn){colspan++;}
return colspan;}
getGroupPagerProps(group){const list=group.list;return{offset:list.offset,limit:list.limit,total:list.count,onUpdate:async({offset,limit})=>{await list.load({limit,offset});this.render(true);},withAccessKey:false,};}
computeOptionalActiveFields(){const localStorageValue=browser.localStorage.getItem(this.keyOptionalFields);const optionalColumn=this.allColumns.filter((col)=>col.type==="field"&&col.optional);const optionalActiveFields={};if(localStorageValue!==null){const localStorageOptionalActiveFields=localStorageValue.split(",");for(const col of optionalColumn){optionalActiveFields[col.name]=localStorageOptionalActiveFields.includes(col.name);}}else{for(const col of optionalColumn){optionalActiveFields[col.name]=col.optional==="show";}}
return optionalActiveFields;}
onClickSortColumn(column){if(this.preventReorder){this.preventReorder=false;return;}
if(this.editedRecord||this.props.list.model.useSampleModel){return;}
const fieldName=column.name;const list=this.props.list;if(this.isSortable(column)){list.sortBy(fieldName);}}
onButtonCellClicked(record,column,ev){if(!ev.target.closest("button")){this.onCellClicked(record,column,ev);}}
async onCellClicked(record,column,ev){if(ev.target.special_click){return;}
const recordAfterResequence=async()=>{const recordIndex=this.props.list.records.indexOf(record);await this.resequencePromise;record=this.props.list.records[recordIndex]||record;};if((this.props.list.model.multiEdit&&record.selected)||this.isInlineEditable(record)){if(record.isInEdition&&this.editedRecord===record){const cell=this.tableRef.el.querySelector(`.o_selected_row td[name='${column.name}']`);if(cell&&containsActiveElement(cell)){this.lastEditedCell={column,record};return;}
this.focusCell(column);this.cellToFocus=null;}else{await recordAfterResequence();await this.props.list.enterEditMode(record);this.cellToFocus={column,record};if(column.type==="field"&&record.fields[column.name].type==="boolean"&&(!column.widget||column.widget==="boolean")){if(!this.isCellReadonly(column,record)&&!this.evalInvisible(column.invisible,record)){await record.update({[column.name]:!record.data[column.name]});}}}}else if(this.editedRecord&&this.editedRecord!==record){this.props.list.leaveEditMode();}else if(!this.props.archInfo.noOpen){this.props.openRecord(record);}}
onRemoveCellClicked(record,ev){const element=ev.target.closest(".o_list_record_remove");if(element.dataset.clicked){return;}
element.dataset.clicked=true;this.onDeleteRecord(record,ev);}
async onDeleteRecord(record){this.keepColumnWidths=true;if(this.editedRecord&&this.editedRecord!==record){const left=await this.props.list.leaveEditMode();if(!left){return;}}
if(this.activeActions.onDelete){this.activeActions.onDelete(record);}}
findFocusFutureCell(cell,cellIsInGroupRow,direction){const row=cell.parentElement;const children=[...row.children];const index=children.indexOf(cell);let futureCell;switch(direction){case"up":{let futureRow=row.previousElementSibling;futureRow=futureRow||row.parentElement.previousElementSibling?.lastElementChild;if(futureRow){const addCell=[...futureRow.children].find((c)=>c.classList.contains("o_group_field_row_add"));const nextIsGroup=futureRow.classList.contains("o_group_header");const rowTypeSwitched=cellIsInGroupRow!==nextIsGroup;let defaultIndex=0;if(cellIsInGroupRow){defaultIndex=this.hasSelectors?1:0;}
futureCell=addCell||(futureRow&&futureRow.children[rowTypeSwitched?defaultIndex:index]);}
break;}
case"down":{let futureRow=row.nextElementSibling;futureRow=futureRow||row.parentElement.nextElementSibling?.firstElementChild;if(futureRow){const addCell=[...futureRow.children].find((c)=>c.classList.contains("o_group_field_row_add"));const nextIsGroup=futureRow.classList.contains("o_group_header");const rowTypeSwitched=cellIsInGroupRow!==nextIsGroup;let defaultIndex=0;if(cellIsInGroupRow){defaultIndex=this.hasSelectors?1:0;}
futureCell=addCell||(futureRow&&futureRow.children[rowTypeSwitched?defaultIndex:index]);}
break;}
case"left":{futureCell=children[index-1];break;}
case"right":{futureCell=children[index+1];break;}}
return futureCell&&getElementToFocus(futureCell);}
isInlineEditable(record){return!!this.props.editable;}
onCellKeydown(ev,group=null,record=null){if(this.props.list.model.useSampleModel){return;}
const hotkey=getActiveHotkey(ev);if(ev.target.tagName==="TEXTAREA"&&hotkey==="enter"){return;}
const closestCell=ev.target.closest("td, th");if(this.toggleFocusInsideCell(hotkey,closestCell)){return;}
const handled=this.editedRecord?this.onCellKeydownEditMode(hotkey,closestCell,group,record):this.onCellKeydownReadOnlyMode(hotkey,closestCell,group,record);if(handled){this.lastCreatingAction=false;this.tableRef.el.querySelector("tbody").classList.add("o_keyboard_navigation");ev.preventDefault();ev.stopPropagation();}}
findNextFocusableOnRow(row,cell){const children=[...row.children];const index=children.indexOf(cell);const nextCells=children.slice(index+1);for(const c of nextCells){if(!c.classList.contains("o_data_cell")){continue;}
if(c.firstElementChild&&c.firstElementChild.classList.contains("o_readonly_modifier")){continue;}
const toFocus=getElementToFocus(c,0);if(toFocus!==c){return toFocus;}}
return null;}
findPreviousFocusableOnRow(row,cell){const children=[...row.children];const index=children.indexOf(cell);const previousCells=children.slice(0,index);for(const c of previousCells.reverse()){if(!c.classList.contains("o_data_cell")){continue;}
if(c.firstElementChild&&c.firstElementChild.classList.contains("o_readonly_modifier")){continue;}
const toFocus=getElementToFocus(c,-1);if(toFocus!==c){return toFocus;}}
return null;}
expandCheckboxes(record,direction){const{records}=this.props.list;if(!record&&direction==="down"){const defaultRecord=records[0];this.shiftKeyedRecord=defaultRecord;defaultRecord.toggleSelection(true);return true;}
const recordIndex=records.indexOf(record);const shiftKeyedRecordIndex=records.indexOf(this.shiftKeyedRecord);let nextRecord;let isExpanding;switch(direction){case"up":if(recordIndex<=0){return false;}
nextRecord=records[recordIndex-1];isExpanding=shiftKeyedRecordIndex>recordIndex-1;break;case"down":if(recordIndex===records.length-1){return false;}
nextRecord=records[recordIndex+1];isExpanding=shiftKeyedRecordIndex<recordIndex+1;break;}
if(isExpanding){record.toggleSelection(true);nextRecord.toggleSelection(true);}else{record.toggleSelection(false);}
return true;}
applyCellKeydownMultiEditMode(hotkey,cell,group,record){const{list}=this.props;const row=cell.parentElement;let toFocus,futureRecord;const index=list.selection.indexOf(record);if(this.lastIsDirty&&["tab","shift+tab","enter"].includes(hotkey)){list.leaveEditMode();return true;}
if(this.applyCellKeydownEditModeStayOnRow(hotkey,cell,group,record)){return true;}
switch(hotkey){case"tab":futureRecord=list.selection[index+1]||list.selection[0];if(record===futureRecord){toFocus=this.findNextFocusableOnRow(row,cell);this.focus(toFocus);return true;}
break;case"shift+tab":futureRecord=list.selection[index-1]||list.selection[list.selection.length-1];if(record===futureRecord){toFocus=this.findPreviousFocusableOnRow(row,cell);this.focus(toFocus);return true;}
this.cellToFocus={forward:false,record:futureRecord};break;case"enter":if(list.selection.length===1){list.leaveEditMode();return true;}
futureRecord=list.selection[index+1]||list.selection[0];break;}
if(futureRecord){list.enterEditMode(futureRecord);return true;}
return false;}
applyCellKeydownEditModeGroup(hotkey,_cell,group,record){const{editable}=this.props;const groupIndex=group.list.records.indexOf(record);const isLastOfGroup=groupIndex===group.list.records.length-1;const isDirty=record.dirty||this.lastIsDirty;const isEnterBehavior=hotkey==="enter"&&(!record.canBeAbandoned||isDirty);const isTabBehavior=hotkey==="tab"&&!record.canBeAbandoned&&isDirty;if(isLastOfGroup&&this.canCreate&&editable==="bottom"&&(isEnterBehavior||isTabBehavior)){this.add({group});return true;}
return false;}
applyCellKeydownEditModeStayOnRow(hotkey,cell,group,record){let toFocus;const row=cell.parentElement;switch(hotkey){case"tab":toFocus=this.findNextFocusableOnRow(row,cell);break;case"shift+tab":toFocus=this.findPreviousFocusableOnRow(row,cell);break;}
if(toFocus){this.focus(toFocus);return true;}
return false;}
onCellKeydownEditMode(hotkey,cell,group,record){const{cycleOnTab,list}=this.props;const row=cell.parentElement;const applyMultiEditBehavior=record&&record.selected&&list.model.multiEdit;const topReCreate=this.props.editable==="top"&&record.isNew;if(applyMultiEditBehavior&&this.applyCellKeydownMultiEditMode(hotkey,cell,group,record)){return true;}
if(this.applyCellKeydownEditModeStayOnRow(hotkey,cell,group,record)){return true;}
if(group&&this.applyCellKeydownEditModeGroup(hotkey,cell,group,record)){return true;}
switch(hotkey){case"tab":{const index=list.records.indexOf(record);const lastIndex=topReCreate?0:list.records.length-1;if(index===lastIndex||index===list.records.length-1){if(this.displayRowCreates){if(record.isNew&&!record.dirty){list.leaveEditMode();return false;}
const{context}=this.creates[0];this.add({context});}else if(this.canCreate&&!record.canBeAbandoned&&(record.dirty||this.lastIsDirty)){this.add({group});}else if(cycleOnTab){if(record.canBeAbandoned){list.leaveEditMode();}
const futureRecord=list.records[0];if(record===futureRecord){const toFocus=this.findNextFocusableOnRow(row);this.focus(toFocus);}else{list.enterEditMode(futureRecord);}}else{return false;}}else{const futureRecord=list.records[index+1];list.enterEditMode(futureRecord);}
break;}
case"shift+tab":{const index=list.records.indexOf(record);if(index===0){if(cycleOnTab){if(record.canBeAbandoned){list.leaveEditMode();}
const futureRecord=list.records[list.records.length-1];if(record===futureRecord){const toFocus=this.findPreviousFocusableOnRow(row);this.focus(toFocus);}else{this.cellToFocus={forward:false,record:futureRecord};list.enterEditMode(futureRecord);}}else{list.leaveEditMode();return false;}}else{const futureRecord=list.records[index-1];this.cellToFocus={forward:false,record:futureRecord};list.enterEditMode(futureRecord);}
break;}
case"enter":{const index=list.records.indexOf(record);let futureRecord=list.records[index+1];if(topReCreate&&index===0){futureRecord=null;}
if(!futureRecord&&!this.canCreate){futureRecord=list.records[0];}
if(futureRecord){list.leaveEditMode({validate:true}).then((canProceed)=>{if(canProceed){list.enterEditMode(futureRecord);}});}else if(this.lastIsDirty||!record.canBeAbandoned||this.displayRowCreates){this.add({group});}else{futureRecord=list.records.at(0);list.enterEditMode(futureRecord);}
break;}
case"escape":{list.leaveEditMode({discard:true});const firstAddButton=this.tableRef.el.querySelector(".o_field_x2many_list_row_add a");if(firstAddButton){this.focus(firstAddButton);}else if(group&&record.isNew){const children=[...row.parentElement.children];const index=children.indexOf(row);for(let i=index+1;i<children.length;i++){const row=children[i];if(row.classList.contains("o_group_header")){break;}
const addCell=[...row.children].find((c)=>c.classList.contains("o_group_field_row_add"));if(addCell){const toFocus=addCell.querySelector("a");this.focus(toFocus);return true;}}
this.focus(cell);}else{this.focus(cell);}
break;}
default:return false;}
return true;}
onCellKeydownReadOnlyMode(hotkey,cell,group,record){const cellIsInGroupRow=Boolean(group&&!record);const applyMultiEditBehavior=record&&record.selected&&this.props.list.model.multiEdit;let toFocus;switch(hotkey){case"arrowup":toFocus=this.findFocusFutureCell(cell,cellIsInGroupRow,"up");if(!toFocus&&this.env.searchModel){this.env.searchModel.trigger("focus-search");return true;}
break;case"arrowdown":toFocus=this.findFocusFutureCell(cell,cellIsInGroupRow,"down");break;case"arrowleft":if(cellIsInGroupRow&&!group.isFolded){this.toggleGroup(group);return true;}
if(cell.classList.contains("o_field_x2many_list_row_add")){const a=document.activeElement;toFocus=a.previousElementSibling;}else{toFocus=this.findFocusFutureCell(cell,cellIsInGroupRow,"left");}
break;case"arrowright":if(cellIsInGroupRow&&group.isFolded){this.toggleGroup(group);return true;}
if(cell.classList.contains("o_field_x2many_list_row_add")){const a=document.activeElement;toFocus=a.nextElementSibling;}else{toFocus=this.findFocusFutureCell(cell,cellIsInGroupRow,"right");}
break;case"tab":if(cellIsInGroupRow){const buttons=Array.from(cell.querySelectorAll(".o_group_buttons button"));const currentButton=document.activeElement.closest("button");const index=buttons.indexOf(currentButton);toFocus=buttons[index+1]||currentButton;}
break;case"shift+tab":if(cellIsInGroupRow){const buttons=Array.from(cell.querySelectorAll(".o_group_buttons button"));const currentButton=document.activeElement.closest("button");const index=buttons.indexOf(currentButton);toFocus=buttons[index-1]||currentButton;}
break;case"shift+arrowdown":{if(this.expandCheckboxes(record,"down")){toFocus=this.findFocusFutureCell(cell,cellIsInGroupRow,"down");}
break;}
case"shift+arrowup":{if(this.expandCheckboxes(record,"up")){toFocus=this.findFocusFutureCell(cell,cellIsInGroupRow,"up");}
break;}
case"shift+space":this.toggleRecordSelection(record);toFocus=getElementToFocus(cell);break;case"shift":this.shiftKeyedRecord=record;break;case"enter":if(!group&&!record){return false;}
if(cell.classList.contains("o_list_record_remove")){this.onDeleteRecord(record);return true;}
if(cellIsInGroupRow){const button=document.activeElement.closest("button");if(button){button.click();}else{this.toggleGroup(group);}
return true;}
if(this.isInlineEditable(record)||applyMultiEditBehavior){const column=this.columns.find((c)=>c.name===cell.getAttribute("name"));this.cellToFocus={column,record};this.props.list.enterEditMode(record);return true;}
if(!this.props.archInfo.noOpen){this.props.openRecord(record);return true;}
break;default:return false;}
if(toFocus){this.focus(toFocus);return true;}
return false;}
saveOptionalActiveFields(){browser.localStorage.setItem(this.keyOptionalFields,Object.keys(this.optionalActiveFields).filter((fieldName)=>this.optionalActiveFields[fieldName]));}
get showNoContentHelper(){const{model}=this.props.list;return this.props.noContentHelp&&(model.useSampleModel||!model.hasData());}
showGroupPager(group){return!group.isFolded&&group.list.limit<group.list.count;}
toggleFocusInsideCell(hotkey,cell){if(!["tab","shift+tab"].includes(hotkey)||!containsActiveElement(cell)){return false;}
const focusableEls=getTabableElements(cell).filter((el)=>el===document.activeElement||["INPUT","TEXTAREA"].includes(el.tagName));const index=focusableEls.indexOf(document.activeElement);return((hotkey==="tab"&&index<focusableEls.length-1)||(hotkey==="shift+tab"&&index>0));}
async onGroupHeaderClicked(ev,group){const left=await this.props.list.leaveEditMode();if(left){this.toggleGroup(group);}}
toggleGroup(group){group.toggle();}
get canSelectRecord(){return!this.editedRecord&&!this.props.list.model.useSampleModel;}
toggleSelection(){const list=this.props.list;if(!this.canSelectRecord){return;}
return list.toggleSelection();}
toggleRecordSelection(record,ev){if(!this.canSelectRecord){return;}
const isRecordPresent=this.props.list.records.includes(this.lastCheckedRecord);if(this.shiftKeyMode&&isRecordPresent){this.toggleRecordShiftSelection(record);}else{record.toggleSelection();}
this.lastCheckedRecord=record;}
toggleRecordShiftSelection(record){const{records}=this.props.list;const recordIndex=records.indexOf(record);const lastCheckedRecordIndex=records.indexOf(this.lastCheckedRecord);const start=Math.min(recordIndex,lastCheckedRecordIndex);const end=Math.max(recordIndex,lastCheckedRecordIndex);const{selected}=record;for(let i=start;i<=end;i++){records[i].toggleSelection(!selected);}}
async toggleOptionalField(fieldName){this.optionalActiveFields[fieldName]=!this.optionalActiveFields[fieldName];this.saveOptionalActiveFields(this.allColumns.filter((col)=>this.optionalActiveFields[col.name]&&col.optional));this.render();}
toggleOptionalFieldGroup(groupId){const fieldNames=this.allColumns.filter((col)=>col.type==="field"&&col.relatedPropertyField&&col.relatedPropertyField.id===groupId).map((col)=>col.name);const active=!fieldNames.every((fieldName)=>this.optionalActiveFields[fieldName]);for(const fieldName of fieldNames){this.optionalActiveFields[fieldName]=active;}
this.saveOptionalActiveFields(this.allColumns.filter((col)=>this.optionalActiveFields[col.name]&&col.optional));this.render();}
toggleDebugOpenView(){this.debugOpenView=!this.debugOpenView;browser.localStorage.setItem(this.keyDebugOpenView,this.debugOpenView);this.render();}
onGlobalClick(ev){if(!this.editedRecord){return;}
this.tableRef.el.querySelector("tbody").classList.remove("o_keyboard_navigation");const target=ev.target;if(this.tableRef.el.contains(target)&&target.closest(".o_data_row")){return;}
if(this.activeElement!==this.uiService.activeElement){return;}
if(target.closest(".o_datetime_picker")){return;}
if(ev.target.closest(".ui-autocomplete")){return;}
this.props.list.leaveEditMode();}
get isDebugMode(){return Boolean(odoo.debug);}
makeTooltip(column){return getTooltipInfo({viewMode:"list",resModel:this.props.list.resModel,field:this.fields[column.name],fieldInfo:column,});}
onColumnTitleMouseUp(){if(this.columnWidths.resizing){this.preventReorder=true;}}
resetLongTouchTimer(){if(this.longTouchTimer){browser.clearTimeout(this.longTouchTimer);this.longTouchTimer=null;}}
onRowTouchStart(record,ev){if(!this.props.allowSelectors){return;}
if(this.props.list.selection.length){ev.stopPropagation();}
this.touchStartMs=Date.now();if(this.longTouchTimer===null){this.longTouchTimer=browser.setTimeout(()=>{this.toggleRecordSelection(record);this.resetLongTouchTimer();},this.constructor.LONG_TOUCH_THRESHOLD);}}
onRowTouchEnd(record){const elapsedTime=Date.now()-this.touchStartMs;if(elapsedTime<this.constructor.LONG_TOUCH_THRESHOLD){this.resetLongTouchTimer();}}
onRowTouchMove(record){this.resetLongTouchTimer();}
async sortDrop(dataRowId,{element,previous}){await this.props.list.leaveEditMode();element.classList.remove("o_row_draggable");const refId=previous?previous.dataset.id:null;try{this.resequencePromise=this.props.list.resequence(dataRowId,refId,{handleField:this.props.list.handleField,});await this.resequencePromise;}finally{element.classList.add("o_row_draggable");}}
sortStart({element}){const table=this.tableRef.el;const headers=[...table.querySelectorAll("thead th")];const cells=[...element.querySelectorAll("td")];let headerIndex=0;for(const cell of cells){let width=0;for(let i=0;i<cell.colSpan;i++){const header=headers[headerIndex+i];const style=getComputedStyle(header);width+=parseFloat(style.width);}
cell.style.width=`${width}px`;headerIndex+=cell.colSpan;}}
sortStop({element}){for(const cell of element.querySelectorAll("td")){cell.style.width=null;}}
ignoreEventInSelectionMode(ev){const{list}=this.props;if(this.env.isSmall&&list.selection&&list.selection.length){ev.stopPropagation();ev.preventDefault();}}
onClickCapture(record,ev){const{list}=this.props;if(this.env.isSmall&&list.selection&&list.selection.length){ev.stopPropagation();ev.preventDefault();this.toggleRecordSelection(record);}}}
return __exports;});;

/* /web/static/src/views/list/list_view.js */
odoo.define('@web/views/list/list_view',['@web/core/registry','@web/model/relational_model/relational_model','@web/views/list/list_arch_parser','@web/views/list/list_controller','@web/views/list/list_renderer'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{RelationalModel}=require("@web/model/relational_model/relational_model");const{ListArchParser}=require("@web/views/list/list_arch_parser");const{ListController}=require("@web/views/list/list_controller");const{ListRenderer}=require("@web/views/list/list_renderer");const listView=__exports.listView={type:"list",Controller:ListController,Renderer:ListRenderer,ArchParser:ListArchParser,Model:RelationalModel,buttonTemplate:"web.ListView.Buttons",canOrderByCount:true,limit:80,props:(genericProps,view)=>{const{ArchParser}=view;const{arch,relatedModels,resModel}=genericProps;const archInfo=new ArchParser().parse(arch,relatedModels,resModel);return{...genericProps,Model:view.Model,Renderer:view.Renderer,buttonTemplate:view.buttonTemplate,archInfo,};},};registry.category("views").add("list",listView);return __exports;});;

/* /web/static/src/views/pivot/pivot_arch_parser.js */
odoo.define('@web/views/pivot/pivot_arch_parser',['@web/core/utils/strings','@web/core/utils/xml'],function(require){'use strict';let __exports={};const{exprToBoolean}=require("@web/core/utils/strings");const{visitXML}=require("@web/core/utils/xml");const PivotArchParser=__exports.PivotArchParser=class PivotArchParser{parse(arch){const archInfo={activeMeasures:[],colGroupBys:[],defaultOrder:null,fieldAttrs:{},rowGroupBys:[],widgets:{},};visitXML(arch,(node)=>{switch(node.tagName){case"pivot":{if(node.hasAttribute("disable_linking")){archInfo.disableLinking=exprToBoolean(node.getAttribute("disable_linking"));}
if(node.hasAttribute("default_order")){archInfo.defaultOrder=node.getAttribute("default_order");}
if(node.hasAttribute("string")){archInfo.title=node.getAttribute("string");}
if(node.hasAttribute("display_quantity")){archInfo.displayQuantity=exprToBoolean(node.getAttribute("display_quantity"));}
break;}
case"field":{let fieldName=node.getAttribute("name");archInfo.fieldAttrs[fieldName]={};if(node.hasAttribute("string")){archInfo.fieldAttrs[fieldName].string=node.getAttribute("string");}
if(node.getAttribute("invisible")==="True"||node.getAttribute("invisible")==="1"){archInfo.fieldAttrs[fieldName].isInvisible=true;break;}
if(node.hasAttribute("interval")){fieldName+=":"+node.getAttribute("interval");}
if(node.hasAttribute("widget")){archInfo.widgets[fieldName]=node.getAttribute("widget");}
if(node.getAttribute("type")==="measure"||node.hasAttribute("operator")){archInfo.activeMeasures.push(fieldName);}
if(node.getAttribute("type")==="col"){archInfo.colGroupBys.push(fieldName);}
if(node.getAttribute("type")==="row"){archInfo.rowGroupBys.push(fieldName);}
break;}}});return archInfo;}}
return __exports;});;

/* /web/static/src/views/pivot/pivot_controller.js */
odoo.define('@web/views/pivot/pivot_controller',['@web/search/layout','@web/model/model','@web/views/standard_view_props','@web/search/action_hook','@web/search/search_bar/search_bar','@web/search/search_bar/search_bar_toggler','@web/search/cog_menu/cog_menu','@odoo/owl'],function(require){'use strict';let __exports={};const{Layout}=require("@web/search/layout");const{useModelWithSampleData}=require("@web/model/model");const{standardViewProps}=require("@web/views/standard_view_props");const{useSetupAction}=require("@web/search/action_hook");const{SearchBar}=require("@web/search/search_bar/search_bar");const{useSearchBarToggler}=require("@web/search/search_bar/search_bar_toggler");const{CogMenu}=require("@web/search/cog_menu/cog_menu");const{Component,useRef}=require("@odoo/owl");const PivotController=__exports.PivotController=class PivotController extends Component{static template="web.PivotView";static components={Layout,SearchBar,CogMenu};static props={...standardViewProps,Model:Function,modelParams:Object,Renderer:Function,buttonTemplate:String,};setup(){this.model=useModelWithSampleData(this.props.Model,this.props.modelParams);useSetupAction({rootRef:useRef("root"),getLocalState:()=>{const{data,metaData}=this.model;return{data,metaData};},getContext:()=>this.getContext(),});this.searchBarToggler=useSearchBarToggler();}
getContext(){return{pivot_measures:this.model.metaData.activeMeasures,pivot_column_groupby:this.model.metaData.fullColGroupBys,pivot_row_groupby:this.model.metaData.fullRowGroupBys,};}}
return __exports;});;

/* /web/static/src/views/pivot/pivot_header.js */
odoo.define('@web/views/pivot/pivot_header',['@odoo/owl','@web/core/dropdown/checkbox_item','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_hooks','@web/core/l10n/localization','@web/core/utils/arrays','@web/core/utils/hooks','@web/search/custom_group_by_item/custom_group_by_item','@web/search/properties_group_by_item/properties_group_by_item','@web/search/utils/dates','@web/search/utils/misc'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{CheckboxItem}=require("@web/core/dropdown/checkbox_item");const{Dropdown}=require("@web/core/dropdown/dropdown");const{useDropdownState}=require("@web/core/dropdown/dropdown_hooks");const{localization}=require("@web/core/l10n/localization");const{sortBy}=require("@web/core/utils/arrays");const{useBus}=require("@web/core/utils/hooks");const{CustomGroupByItem}=require("@web/search/custom_group_by_item/custom_group_by_item");const{PropertiesGroupByItem}=require("@web/search/properties_group_by_item/properties_group_by_item");const{getIntervalOptions}=require("@web/search/utils/dates");const{FACET_ICONS,GROUPABLE_TYPES}=require("@web/search/utils/misc");const PivotHeader=__exports.PivotHeader=class PivotHeader extends Component{static template="web.PivotHeader";static components={CustomGroupByItem,Dropdown,CheckboxItem,PropertiesGroupByItem,};static defaultProps={isInHead:false,isXAxis:false,showCaretDown:false,};static props={cell:Object,isInHead:{type:Boolean,optional:true},isXAxis:{type:Boolean,optional:true},customGroupBys:Object,onAddCustomGroupBy:Function,onItemSelected:Function,onClick:Function,slots:{optional:true},};setup(){this.icon=FACET_ICONS.groupBy;const fields=[];for(const[fieldName,field]of Object.entries(this.env.searchModel.searchViewFields)){if(this.validateField(fieldName,field)){fields.push(Object.assign({name:fieldName},field));}}
this.fields=sortBy(fields,"string");this.l10n=localization;this.dropdownState=useDropdownState();useBus(this.env.searchModel,"update",this.render);}
get hideCustomGroupBy(){return this.env.searchModel.hideCustomGroupBy||false;}
get items(){let items=this.env.searchModel.getSearchItems((searchItem)=>["groupBy","dateGroupBy"].includes(searchItem.type)&&!searchItem.custom);if(items.length===0){items=this.fields;}
let groupNumber=1+Math.max(0,...items.map(({groupNumber:n})=>n));for(const[fieldName,customGroupBy]of this.props.customGroupBys.entries()){items.push({...customGroupBy,name:fieldName,groupNumber:groupNumber++});}
return items.map((item)=>({...item,id:item.id||item.name,fieldName:item.fieldName||item.name,description:item.description||item.string,isActive:false,options:item.options||["date","datetime"].includes(item.type)?getIntervalOptions():undefined,}));}
get cell(){return this.props.cell;}
get padding(){return 5+this.cell.indent*30;}
validateField(fieldName,field){const{groupable,type}=field;return(groupable&&fieldName!=="id"&&GROUPABLE_TYPES.includes(type));}
onGroupBySelected({itemId,optionId}){const item=this.items.find(({id})=>id===itemId);this.props.onItemSelected({itemId,optionId,fieldName:item.fieldName,interval:optionId,groupId:this.cell.groupId,});}
onAddCustomGroup(fieldName){this.props.onAddCustomGroupBy(fieldName);}
onClick(event){if(this.cell.isLeaf&&!this.cell.isFolded){this.dropdownState.open();}
this.props.onClick();}}
return __exports;});;

/* /web/static/src/views/pivot/pivot_model.js */
odoo.define('@web/views/pivot/pivot_model',['@web/core/l10n/translation','@web/core/domain','@web/core/utils/arrays','@web/core/utils/concurrency','@web/search/utils/dates','@web/model/model','@web/views/utils'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{Domain}=require("@web/core/domain");const{cartesian,sections,sortBy,symmetricalDifference}=require("@web/core/utils/arrays");const{KeepLast,Race}=require("@web/core/utils/concurrency");const{DEFAULT_INTERVAL}=require("@web/search/utils/dates");const{addPropertyFieldDefs,Model}=require("@web/model/model");const{computeReportMeasures,processMeasure}=require("@web/views/utils");function computeVariation(value,comparisonValue){if(isNaN(value)||isNaN(comparisonValue)){return NaN;}
if(comparisonValue===0){if(value===0){return 0;}else if(value>0){return 1;}else{return-1;}}
return(value-comparisonValue)/Math.abs(comparisonValue);}
const PivotModel=__exports.PivotModel=class PivotModel extends Model{setup(params){this.keepLast=new KeepLast();this.race=new Race();const _loadData=this._loadData.bind(this);this._loadData=(...args)=>{return this.race.add(_loadData(...args));};let sortedColumn=params.metaData.sortedColumn||null;if(!sortedColumn&&params.metaData.defaultOrder){const defaultOrder=params.metaData.defaultOrder.split(" ");sortedColumn={groupId:[[],[]],measure:defaultOrder[0],order:defaultOrder[1]?defaultOrder[1]:"asc",};}
this.searchParams={context:{},domain:[],domains:[],groupBy:[],};this.data=params.data||{colGroupTree:null,rowGroupTree:null,groupDomains:{},measurements:{},counts:{},numbering:{},};const metaData=Object.assign({},params.metaData,{customGroupBys:params.metaData.customGroupBys||new Map(),expandedRowGroupBys:params.metaData.expandedRowGroupBys||[],expandedColGroupBys:params.metaData.expandedColGroupBys||[],sortedColumn,});this.metaData=this._buildMetaData(metaData);this.reload=false;this.nextActiveMeasures=null;}
async addGroupBy(params){if(this.race.getCurrentProm()){return;}
const{groupId,fieldName,type,custom}=params;let{interval}=params;const metaData=this._buildMetaData();if(custom&&!metaData.customGroupBys.has(fieldName)){const field=metaData.fields[fieldName];if(!interval&&["date","datetime"].includes(field.type)){interval=DEFAULT_INTERVAL;}
metaData.customGroupBys.set(fieldName,{...field,id:fieldName,});}
let groupBy=fieldName;if(interval){groupBy=`${groupBy}:${interval}`;}
if(type==="row"){metaData.expandedRowGroupBys.push(groupBy);}else{metaData.expandedColGroupBys.push(groupBy);}
const config={metaData,data:this.data};await this._expandGroup(groupId,type,config);this.metaData=metaData;this.notify();}
closeGroup(groupId,type){if(this.race.getCurrentProm()){return;}
let groupBys;let expandedGroupBys;let keyPart;let group;let tree;if(type==="row"){groupBys=this.metaData.rowGroupBys;expandedGroupBys=this.metaData.expandedRowGroupBys;tree=this.data.rowGroupTree;group=this._findGroup(this.data.rowGroupTree,groupId[0]);keyPart=0;}else{groupBys=this.metaData.colGroupBys;expandedGroupBys=this.metaData.expandedColGroupBys;tree=this.data.colGroupTree;group=this._findGroup(this.data.colGroupTree,groupId[1]);keyPart=1;}
const groupIdPart=groupId[keyPart];const range=groupIdPart.map((_,index)=>index);function keep(key){const idPart=JSON.parse(key)[keyPart];return(range.some((index)=>groupIdPart[index]!==idPart[index])||idPart.length===groupIdPart.length);}
function omitKeys(object){const newObject={};for(const key in object){if(keep(key)){newObject[key]=object[key];}}
return newObject;}
this.data.measurements=omitKeys(this.data.measurements);this.data.counts=omitKeys(this.data.counts);this.data.groupDomains=omitKeys(this.data.groupDomains);group.directSubTrees.clear();delete group.sortedKeys;var newGroupBysLength=this._getTreeHeight(tree)-1;if(newGroupBysLength<=groupBys.length){expandedGroupBys.splice(0);groupBys.splice(newGroupBysLength);}else{expandedGroupBys.splice(newGroupBysLength-groupBys.length);}
this.notify();}
async expandAll(){const config={metaData:this.metaData,data:this.data};await this._loadData(config,false);this.notify();}
async expandGroup(groupId,type){if(this.race.getCurrentProm()){return;}
const config={metaData:this.metaData,data:this.data};await this._expandGroup(groupId,type,config);this.notify();}
exportData(){const measureCount=this.metaData.activeMeasures.length;const originCount=this.metaData.origins.length;const table=this.getTable();const headers=table.headers;let colGroupHeaderRows;let measureRow=[];let originRow=[];function processHeader(header){const inTotalColumn=header.groupId[1].length===0;return{title:header.title,width:header.width,height:header.height,is_bold:!!header.measure&&inTotalColumn,};}
if(originCount>1){colGroupHeaderRows=headers.slice(0,headers.length-2);measureRow=headers[headers.length-2].map(processHeader);originRow=headers[headers.length-1].map(processHeader);}else{colGroupHeaderRows=headers.slice(0,headers.length-1);measureRow=headers[headers.length-1].map(processHeader);}
colGroupHeaderRows[0].splice(0,1);colGroupHeaderRows=colGroupHeaderRows.map((headerRow)=>{return headerRow.map(processHeader);});const tableRows=table.rows.map((row)=>{return{title:row.title,indent:row.indent,values:row.subGroupMeasurements.map((measurement)=>{let value=measurement.value;if(value===undefined){value="";}else if(measurement.originIndexes.length>1){value=value*100;}
return{is_bold:measurement.isBold,value:value,};}),};});return{model:this.metaData.resModel,title:this.metaData.title,col_group_headers:colGroupHeaderRows,measure_headers:measureRow,origin_headers:originRow,rows:tableRows,measure_count:measureCount,origin_count:originCount,};}
async flip(){await this.race.getCurrentProm();let temp=this.data.rowGroupTree;this.data.rowGroupTree=this.data.colGroupTree;this.data.colGroupTree=temp;temp=this.metaData.rowGroupBys;this.metaData.rowGroupBys=this.metaData.colGroupBys;this.metaData.colGroupBys=temp;temp=this.metaData.expandedColGroupBys;this.metaData.expandedColGroupBys=this.metaData.expandedRowGroupBys;this.metaData.expandedRowGroupBys=temp;function twistKey(key){return JSON.stringify(JSON.parse(key).reverse());}
function twist(object){const newObject={};Object.keys(object).forEach((key)=>{const value=object[key];newObject[twistKey(key)]=value;});return newObject;}
this.data.measurements=twist(this.data.measurements);this.data.counts=twist(this.data.counts);this.data.groupDomains=twist(this.data.groupDomains);this.notify();}
getGroupDomain(group){const config={metaData:this.metaData,data:this.data};return this._getGroupDomain(group,config);}
getTable(){const headers=this._getTableHeaders();return{headers:headers,rows:this._getTableRows(this.data.rowGroupTree,headers[headers.length-1]),};}
getTableWidth(){var leafCounts=this._getLeafCounts(this.data.colGroupTree);return leafCounts[JSON.stringify(this.data.colGroupTree.root.values)]+2;}
hasData(){return this._hasData(this.data);}
async load(searchParams){this.searchParams=searchParams;const processedMeasures=processMeasure(searchParams.context.pivot_measures);const activeMeasures=processedMeasures||this.metaData.activeMeasures;const metaData=this._buildMetaData({activeMeasures});if(!this.reload){metaData.rowGroupBys=searchParams.context.pivot_row_groupby||(searchParams.groupBy.length?searchParams.groupBy:metaData.rowGroupBys);this.reload=true;}else{metaData.rowGroupBys=searchParams.groupBy.length?searchParams.groupBy:searchParams.context.pivot_row_groupby||metaData.rowGroupBys;}
metaData.colGroupBys=searchParams.context.pivot_column_groupby||this.metaData.colGroupBys;if(JSON.stringify(metaData.rowGroupBys)!==JSON.stringify(this.metaData.rowGroupBys)){metaData.expandedRowGroupBys=[];}
if(JSON.stringify(metaData.colGroupBys)!==JSON.stringify(this.metaData.colGroupBys)){metaData.expandedColGroupBys=[];}
const allActivesMeasures=new Set(this.metaData.activeMeasures);if(processedMeasures){processedMeasures.forEach((e)=>allActivesMeasures.add(e));}
metaData.measures=computeReportMeasures(metaData.fields,metaData.fieldAttrs,[...allActivesMeasures,]);const config={metaData,data:this.data};await addPropertyFieldDefs(this.orm,metaData.resModel,searchParams.context,metaData.fields,new Set([...metaData.rowGroupBys,...metaData.colGroupBys]));return this._loadData(config);}
sortRows(sortedColumn){if(this.race.getCurrentProm()){return;}
const config={metaData:this.metaData,data:this.data};this._sortRows(sortedColumn,config);this.notify();}
async toggleMeasure(fieldName){const metaData=this._buildMetaData();this.nextActiveMeasures=this.nextActiveMeasures||metaData.activeMeasures;metaData.activeMeasures=this.nextActiveMeasures;const index=metaData.activeMeasures.indexOf(fieldName);if(index!==-1){metaData.activeMeasures.splice(index,1);await Promise.resolve(this.race.getCurrentProm());this.metaData=metaData;}else{metaData.activeMeasures.push(fieldName);const config={metaData,data:this.data};await this._loadData(config);this.useSampleModel=false;}
this.nextActiveMeasures=null;this.notify();}
_addGroup(groupTree,labels,values){let tree=groupTree;values.slice(0,values.length-1).forEach(function(value){tree=tree.directSubTrees.get(value);});const value=values[values.length-1];if(tree.directSubTrees.has(value)){return;}
tree.directSubTrees.set(value,{root:{labels:labels,values:values,},directSubTrees:new Map(),});}
_buildMetaData(params){const metaData=Object.assign({},this.metaData,params);metaData.activeMeasures=[...metaData.activeMeasures];metaData.colGroupBys=[...metaData.colGroupBys];metaData.rowGroupBys=[...metaData.rowGroupBys];metaData.expandedColGroupBys=[...metaData.expandedColGroupBys];metaData.expandedRowGroupBys=[...metaData.expandedRowGroupBys];metaData.customGroupBys=new Map([...metaData.customGroupBys]);metaData.sortedColumn=metaData.sortedColumn?{...metaData.sortedColumn}:null;if(this.searchParams.comparison){const domains=this.searchParams.comparison.domains.slice().reverse();metaData.domains=domains.map((d)=>d.arrayRepr);metaData.origins=domains.map((d)=>d.description);}else{metaData.domains=[this.searchParams.domain];metaData.origins=[""];}
Object.defineProperty(metaData,"fullColGroupBys",{get(){return metaData.colGroupBys.concat(metaData.expandedColGroupBys);},});Object.defineProperty(metaData,"fullRowGroupBys",{get(){return metaData.rowGroupBys.concat(metaData.expandedRowGroupBys);},});return metaData;}
async _expandGroup(groupId,type,config){const{metaData}=config;const group={rowValues:groupId[0],colValues:groupId[1],type:type,};const groupValues=type==="row"?groupId[0]:groupId[1];const groupBys=type==="row"?metaData.fullRowGroupBys:metaData.fullColGroupBys;if(groupValues.length>=groupBys.length){throw new Error("Cannot expand group");}
const groupBy=groupBys[groupValues.length];let leftDivisors;let rightDivisors;if(group.type==="row"){leftDivisors=[[groupBy]];rightDivisors=sections(metaData.fullColGroupBys);}else{leftDivisors=sections(metaData.fullRowGroupBys);rightDivisors=[[groupBy]];}
const divisors=cartesian(leftDivisors,rightDivisors);delete group.type;await this._subdivideGroup(group,divisors,config);}
_findGroup(groupTree,values){let tree=groupTree;values.slice(0,values.length).forEach((value)=>{tree=tree.directSubTrees.get(value);});return tree;}
_getCellValue(groupId,measure,originIndexes,config){var key=JSON.stringify(groupId);if(!config.data.measurements[key]){return;}
var values=originIndexes.map((originIndex)=>{return config.data.measurements[key][originIndex][measure];});if(originIndexes.length>1){return computeVariation(values[1],values[0]);}else{return values[0];}}
_getGroupBySpecs(rowGroupBy,colGroupBy){const set=rowGroupBy.concat(colGroupBy).reduce((acc,gb)=>{acc.add(this._normalize(gb));return acc;},new Set());return[...set];}
_getGroupDomain(group,config){const{data}=config;var key=JSON.stringify([group.rowValues,group.colValues]);return data.groupDomains[key][group.originIndex];}
_getGroupLabels(group,groupBys,config){return groupBys.map((gb)=>{const groupBy=this._normalize(gb);return this._sanitizeLabel(group[groupBy],groupBy,config);});}
async _getGroupSubdivision(group,rowGroupBy,colGroupBy,params){const groupBy=this._getGroupBySpecs(rowGroupBy,colGroupBy);const subGroups=await this._getSubGroups(groupBy,params);return{group,subGroups,rowGroupBy:rowGroupBy,colGroupBy:colGroupBy,};}
_getGroupValues(group,groupBys){return groupBys.map((gb)=>{const groupBy=this._normalize(gb);return this._sanitizeValue(group[groupBy]);});}
_getLeafCounts(tree){const leafCounts={};let leafCount;if(!tree.directSubTrees.size){leafCount=1;}else{leafCount=[...tree.directSubTrees.values()].reduce((acc,subTree)=>{const subLeafCounts=this._getLeafCounts(subTree);Object.assign(leafCounts,subLeafCounts);return acc+leafCounts[JSON.stringify(subTree.root.values)];},0);}
leafCounts[JSON.stringify(tree.root.values)]=leafCount;return leafCounts;}
_getMeasurements(group,config){const{metaData}=config;return metaData.activeMeasures.reduce((measurements,measureName)=>{var measurement=group[measureName];if(measurement instanceof Array){measurement=1;}
if(metaData.measures[measureName].type==="boolean"&&measurement instanceof Boolean){measurement=measurement?1:0;}
if(metaData.origins.length>1&&!measurement){measurement=0;}
measurements[measureName]=measurement;return measurements;},{});}
_getMeasuresRow(columns){const sortedColumn=this.metaData.sortedColumn||{};const measureRow=[];columns.forEach((column)=>{this.metaData.activeMeasures.forEach((measureName)=>{const measureCell={groupId:column.groupId,height:1,measure:measureName,title:this.metaData.measures[measureName].string,width:2*this.metaData.origins.length-1,};if(sortedColumn.measure===measureName&&JSON.stringify(sortedColumn.groupId)===JSON.stringify(column.groupId)){measureCell.order=sortedColumn.order;}
measureRow.push(measureCell);});});return measureRow;}
_getMeasureSpecs(config){const{metaData}=config;return metaData.activeMeasures.reduce((acc,measure)=>{if(measure==="__count"){acc.push(measure);return acc;}
const field=this.metaData.fields[measure];if(field.type==="many2one"){field.aggregator="count_distinct";}
if(field.aggregator===undefined){throw new Error("No aggregate function has been provided for the measure '"+measure+"'");}
acc.push(measure+":"+field.aggregator);return acc;},[]);}
_getNumberedLabel(label,fieldName,config){const{data}=config;const id=label[0];const name=label[1];data.numbering[fieldName]=data.numbering[fieldName]||{};data.numbering[fieldName][name]=data.numbering[fieldName][name]||{};const numbers=data.numbering[fieldName][name];numbers[id]=numbers[id]||Object.keys(numbers).length+1;return name+(numbers[id]>1?"  ("+numbers[id]+")":"");}
_getOriginsRow(columns){const sortedColumn=this.metaData.sortedColumn||{};const originRow=[];columns.forEach((column)=>{const groupId=column.groupId;const measure=column.measure;const isSorted=sortedColumn.measure===measure&&JSON.stringify(sortedColumn.groupId)===JSON.stringify(groupId);const isSortedByOrigin=isSorted&&!sortedColumn.originIndexes[1];const isSortedByVariation=isSorted&&sortedColumn.originIndexes[1];this.metaData.origins.forEach((origin,originIndex)=>{const originCell={groupId:groupId,height:1,measure:measure,originIndexes:[originIndex],title:origin,width:1,};if(isSortedByOrigin&&sortedColumn.originIndexes[0]===originIndex){originCell.order=sortedColumn.order;}
originRow.push(originCell);if(originIndex>0){const variationCell={groupId:groupId,height:1,measure:measure,originIndexes:[originIndex-1,originIndex],title:_t("Variation"),width:1,};if(isSortedByVariation&&sortedColumn.originIndexes[1]===originIndex){variationCell.order=sortedColumn.order;}
originRow.push(variationCell);}});});return originRow;}
async _getSubGroups(groupBy,params){const{resModel,groupDomain,measureSpecs,kwargs,mapping}=params;const key=JSON.stringify(groupBy);if(!mapping[key]){mapping[key]=this.orm.readGroup(resModel,groupDomain,measureSpecs,groupBy,kwargs);}
return mapping[key];}
_getTableHeaders(){const colGroupBys=this.metaData.fullColGroupBys;const height=colGroupBys.length+1;const measureCount=this.metaData.activeMeasures.length;const originCount=this.metaData.origins.length;const leafCounts=this._getLeafCounts(this.data.colGroupTree);let headers=[];const measureColumns=[];const colGroupRows=new Array(height).fill(0).map(()=>[]);colGroupRows[0].push({height:height+1+(originCount>1?1:0),title:"",width:1,});function generateTreeHeaders(tree,fields){const group=tree.root;const rowIndex=group.values.length;const row=colGroupRows[rowIndex];const groupId=[[],group.values];const isLeaf=!tree.directSubTrees.size;const leafCount=leafCounts[JSON.stringify(tree.root.values)];const cell={groupId:groupId,height:isLeaf?colGroupBys.length+1-rowIndex:1,isLeaf:isLeaf,isFolded:isLeaf&&colGroupBys.length>group.values.length,label:rowIndex===0?undefined:fields[colGroupBys[rowIndex-1].split(":")[0]].string,title:group.labels.length?group.labels[group.labels.length-1]:_t("Total"),width:leafCount*measureCount*(2*originCount-1),};row.push(cell);if(isLeaf){measureColumns.push(cell);}
[...tree.directSubTrees.values()].forEach((subTree)=>{generateTreeHeaders(subTree,fields);});}
generateTreeHeaders(this.data.colGroupTree,this.metaData.fields);if(leafCounts[JSON.stringify(this.data.colGroupTree.root.values)]>1){var groupId=[[],[]];var totalTopRightCell={groupId:groupId,height:height,title:"",width:measureCount*(2*originCount-1),};colGroupRows[0].push(totalTopRightCell);measureColumns.push(totalTopRightCell);}
headers=headers.concat(colGroupRows);var measuresRow=this._getMeasuresRow(measureColumns);headers.push(measuresRow);if(originCount>1){headers.push(this._getOriginsRow(measuresRow));}
return headers;}
_getTableRows(tree,columns){let rows=[];const group=tree.root;const rowGroupId=[group.values,[]];const title=group.labels.length?group.labels[group.labels.length-1]:_t("Total");const indent=group.labels.length;const isLeaf=!tree.directSubTrees.size;const rowGroupBys=this.metaData.fullRowGroupBys;const subGroupMeasurements=columns.map((column)=>{const colGroupId=column.groupId;const groupIntersectionId=[rowGroupId[0],colGroupId[1]];const measure=column.measure;const originIndexes=column.originIndexes||[0];const value=this._getCellValue(groupIntersectionId,measure,originIndexes,{data:this.data,});const measurement={groupId:groupIntersectionId,originIndexes:originIndexes,measure:measure,value:value,isBold:!groupIntersectionId[0].length||!groupIntersectionId[1].length,};return measurement;});rows.push({title:title,label:indent===0?undefined:this.metaData.fields[rowGroupBys[indent-1].split(":")[0]].string,groupId:rowGroupId,indent:indent,isLeaf:isLeaf,isFolded:isLeaf&&rowGroupBys.length>group.values.length,subGroupMeasurements:subGroupMeasurements,});const subTreeKeys=tree.sortedKeys||[...tree.directSubTrees.keys()];subTreeKeys.forEach((subTreeKey)=>{const subTree=tree.directSubTrees.get(subTreeKey);rows=rows.concat(this._getTableRows(subTree,columns));});return rows;}
_getTreeHeight(tree){const subTreeHeights=[...tree.directSubTrees.values()].map(this._getTreeHeight.bind(this));return Math.max(0,Math.max.apply(null,subTreeHeights))+1;}
_hasData(data){return(data.counts[JSON.stringify([[],[]])]||[]).some((count)=>{return count>0;});}
async _loadData(config,prune=true){config.data={};const{data,metaData}=config;data.rowGroupTree={root:{labels:[],values:[]},directSubTrees:new Map()};data.colGroupTree={root:{labels:[],values:[]},directSubTrees:new Map()};data.measurements={};data.counts={};data.groupDomains={};data.numbering={};const key=JSON.stringify([[],[]]);data.groupDomains[key]=metaData.domains.slice(0);const group={rowValues:[],colValues:[]};const leftDivisors=sections(metaData.fullRowGroupBys);const rightDivisors=sections(metaData.fullColGroupBys);const divisors=cartesian(leftDivisors,rightDivisors);await this._subdivideGroup(group,divisors.slice(0,1),config);await this._subdivideGroup(group,divisors.slice(1),config);if(prune&&this._hasData(data)&&this._hasData(this.data)){if(symmetricalDifference(metaData.rowGroupBys,this.metaData.rowGroupBys).length===0){this._pruneTree(data.rowGroupTree,this.data.rowGroupTree);}
if(symmetricalDifference(metaData.colGroupBys,this.metaData.colGroupBys).length===0){this._pruneTree(data.colGroupTree,this.data.colGroupTree);}}
this.data=config.data;this.metaData=config.metaData;}
_normalize(gb){const[fieldName,interval]=gb.split(":");const field=this.metaData.fields[fieldName];if(["date","datetime"].includes(field.type)){return`${fieldName}:${interval || "month"}`;}else{return fieldName;}}
_prepareData(group,groupSubdivisions,config){const{data,metaData}=config;const groupRowValues=group.rowValues;let groupRowLabels=[];let rowSubTree=data.rowGroupTree;let root;if(groupRowValues.length){rowSubTree=this._findGroup(data.rowGroupTree,groupRowValues);root=rowSubTree.root;groupRowLabels=root.labels;}
const groupColValues=group.colValues;let groupColLabels=[];if(groupColValues.length){root=this._findGroup(data.colGroupTree,groupColValues).root;groupColLabels=root.labels;}
groupSubdivisions.forEach((groupSubdivision)=>{groupSubdivision.subGroups.forEach((subGroup)=>{const rowValues=groupRowValues.concat(this._getGroupValues(subGroup,groupSubdivision.rowGroupBy));const rowLabels=groupRowLabels.concat(this._getGroupLabels(subGroup,groupSubdivision.rowGroupBy,config));const colValues=groupColValues.concat(this._getGroupValues(subGroup,groupSubdivision.colGroupBy));const colLabels=groupColLabels.concat(this._getGroupLabels(subGroup,groupSubdivision.colGroupBy,config));if(!colValues.length&&rowValues.length){this._addGroup(data.rowGroupTree,rowLabels,rowValues);}
if(colValues.length&&!rowValues.length){this._addGroup(data.colGroupTree,colLabels,colValues);}
const key=JSON.stringify([rowValues,colValues]);const originIndex=groupSubdivision.group.originIndex;if(!(key in data.measurements)){data.measurements[key]=metaData.origins.map(()=>{return this._getMeasurements({},config);});}
data.measurements[key][originIndex]=this._getMeasurements(subGroup,config);if(!(key in data.counts)){data.counts[key]=metaData.origins.map(function(){return 0;});}
data.counts[key][originIndex]=subGroup.__count;if(!(key in data.groupDomains)){data.groupDomains[key]=metaData.origins.map(function(){return Domain.FALSE.toList();});}
if(subGroup.__domain){data.groupDomains[key][originIndex]=subGroup.__domain;}});});if(metaData.sortedColumn){this._sortRows(metaData.sortedColumn,config);}}
_pruneTree(tree,oldTree){if(!oldTree.directSubTrees.size){tree.directSubTrees.clear();delete tree.sortedKeys;return;}
[...tree.directSubTrees.keys()].forEach((subTreeKey)=>{const subTree=tree.directSubTrees.get(subTreeKey);if(!oldTree.directSubTrees.has(subTreeKey)){subTree.directSubTrees.clear();delete subTree.sortedKeys;}else{const oldSubTree=oldTree.directSubTrees.get(subTreeKey);this._pruneTree(subTree,oldSubTree);}});}
_getEmptyGroupLabel(fieldName){return _t("None");}
_sanitizeLabel(value,groupBy,config){const{metaData}=config;const fieldName=groupBy.split(":")[0];if(fieldName&&metaData.fields[fieldName]&&metaData.fields[fieldName].type==="boolean"){return value===undefined?_t("None"):value?_t("Yes"):_t("No");}
if(value===false){return this._getEmptyGroupLabel(fieldName);}
if(value instanceof Array){return this._getNumberedLabel(value,fieldName,config);}
if(fieldName&&metaData.fields[fieldName]&&metaData.fields[fieldName].type==="selection"){const selected=metaData.fields[fieldName].selection.find((o)=>o[0]===value);return selected?selected[1]:value;}
return value;}
_sanitizeValue(value){if(value instanceof Array){return value[0];}
return value;}
async _subdivideGroup(group,divisors,config){const{data,metaData}=config;const key=JSON.stringify([group.rowValues,group.colValues]);const proms=metaData.origins.reduce((acc,origin,originIndex)=>{if(!data.counts[key]||data.counts[key][originIndex]>0){const subGroup={rowValues:group.rowValues,colValues:group.colValues,originIndex:originIndex,};const groupDomain=this._getGroupDomain(subGroup,config);const measureSpecs=this._getMeasureSpecs(config);const resModel=config.metaData.resModel;const kwargs={lazy:false,context:this.searchParams.context};const mapping={};divisors.forEach((divisor)=>{acc.push(this._getGroupSubdivision(subGroup,divisor[0],divisor[1],{resModel,groupDomain,measureSpecs,kwargs,mapping,}));});}
return acc;},[]);const groupSubdivisions=await this.keepLast.add(Promise.all(proms));if(groupSubdivisions.length){this._prepareData(group,groupSubdivisions,config);}}
_sortRows(sortedColumn,config){const metaData=config.metaData||this.metaData;const data=config.data||this.data;const colGroupValues=sortedColumn.groupId[1];sortedColumn.originIndexes=sortedColumn.originIndexes||[0];metaData.sortedColumn=sortedColumn;const sortFunction=(tree)=>{return(subTreeKey)=>{const subTree=tree.directSubTrees.get(subTreeKey);const groupIntersectionId=[subTree.root.values,colGroupValues];const value=this._getCellValue(groupIntersectionId,sortedColumn.measure,sortedColumn.originIndexes,{data})||0;return sortedColumn.order==="asc"?value:-value;};};this._sortTree(sortFunction,data.rowGroupTree);}
_sortTree(sortFunction,tree){tree.sortedKeys=sortBy([...tree.directSubTrees.keys()],sortFunction(tree));[...tree.directSubTrees.values()].forEach((subTree)=>{this._sortTree(sortFunction,subTree);});}}
return __exports;});;

/* /web/static/src/views/pivot/pivot_renderer.js */
odoo.define('@web/views/pivot/pivot_renderer',['@web/core/l10n/translation','@web/core/checkbox/checkbox','@web/core/l10n/localization','@web/core/registry','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/views/fields/formatters','@web/views/pivot/pivot_header','@odoo/owl','@web/core/network/download','@web/core/utils/hooks','@web/views/view_components/report_view_measures'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{CheckBox}=require("@web/core/checkbox/checkbox");const{localization}=require("@web/core/l10n/localization");const{registry}=require("@web/core/registry");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{formatPercentage}=require("@web/views/fields/formatters");const{PivotHeader}=require("@web/views/pivot/pivot_header");const{Component,onWillUpdateProps,useRef}=require("@odoo/owl");const{download}=require("@web/core/network/download");const{useService}=require("@web/core/utils/hooks");const{ReportViewMeasures}=require("@web/views/view_components/report_view_measures");const formatters=registry.category("formatters");const PivotRenderer=__exports.PivotRenderer=class PivotRenderer extends Component{static template="web.PivotRenderer";static components={Dropdown,DropdownItem,CheckBox,PivotHeader,ReportViewMeasures};static props=["model","buttonTemplate"];setup(){this.actionService=useService("action");this.model=this.props.model;this.table=this.model.getTable();this.l10n=localization;this.tableRef=useRef("table");onWillUpdateProps(this.onWillUpdateProps);}
onWillUpdateProps(){this.table=this.model.getTable();}
getFormattedValue(cell){const field=this.model.metaData.measures[cell.measure];let formatType=this.model.metaData.widgets[cell.measure];if(!formatType){const fieldType=field.type;formatType=["many2one","reference"].includes(fieldType)?"integer":fieldType;}
const formatter=formatters.get(formatType);return formatter(cell.value,field);}
getFormattedVariation(cell){if(isNaN(cell.value)){return"-";}
return formatPercentage(cell.value,this.model.metaData.fields[cell.measure]);}
getHeaderProps({cell,isXAxis=false,isInHead=false}){const type=isXAxis?"col":"row";return{cell,isXAxis,isInHead,customGroupBys:this.model.metaData.customGroupBys,onItemSelected:(payload)=>this.onGroupBySelected(type,payload),onAddCustomGroupBy:(fieldName)=>this.onAddCustomGroupBy(type,cell.groupId,fieldName),onClick:()=>this.onHeaderClick(cell,type),};}
onAddCustomGroupBy(type,groupId,fieldName){this.model.addGroupBy({groupId,fieldName,custom:true,type});}
onGroupBySelected(type,payload){this.model.addGroupBy({...payload,type});}
onHeaderClick(cell,type){if(cell.isLeaf&&cell.isFolded){this.model.expandGroup(cell.groupId,type);}else if(!cell.isLeaf){this.model.closeGroup(cell.groupId,type);}}
onMeasureClick(cell){this.model.sortRows({groupId:cell.groupId,measure:cell.measure,order:(cell.order||"desc")==="asc"?"desc":"asc",originIndexes:cell.originIndexes,});}
onMouseEnter(ev){var index=[...ev.currentTarget.parentNode.children].indexOf(ev.currentTarget);if(ev.currentTarget.tagName==="TH"){if(!ev.currentTarget.classList.contains("o_pivot_origin_row")&&this.model.metaData.origins.length===2){index=3*index;}
index+=1;}
this.tableRef.el.querySelectorAll("td:nth-child("+(index+1)+")").forEach((elt)=>elt.classList.add("o_cell_hover"));}
onMouseLeave(){this.tableRef.el.querySelectorAll(".o_cell_hover").forEach((elt)=>elt.classList.remove("o_cell_hover"));}
onDownloadButtonClicked(){if(this.model.getTableWidth()>16384){throw new Error(_t("For Excel compatibility, data cannot be exported if there are more than 16384 columns.\n\nTip: try to flip axis, filter further or reduce the number of measures."));}
const table=this.model.exportData();download({url:"/web/pivot/export_xlsx",data:{data:new Blob([JSON.stringify(table)],{type:"application/json"})},});}
onExpandButtonClicked(){this.model.expandAll();}
onFlipButtonClicked(){this.model.flip();}
onMeasureSelected({measure}){this.model.toggleMeasure(measure);}
openView(domain,views,context){this.actionService.doAction({type:"ir.actions.act_window",name:this.model.metaData.title,res_model:this.model.metaData.resModel,views:views,view_mode:"list",target:"current",context,domain,});}
onOpenView(cell){if(cell.value===undefined||this.model.metaData.disableLinking){return;}
const context=Object.assign({},this.model.searchParams.context);Object.keys(context).forEach((x)=>{if(x==="group_by"||x.startsWith("search_default_")){delete context[x];}});const{views=[]}=this.env.config;this.views=["list","form"].map((viewType)=>{const view=views.find((view)=>view[1]===viewType);return[view?view[0]:false,viewType];});const group={rowValues:cell.groupId[0],colValues:cell.groupId[1],originIndex:cell.originIndexes[0],};this.openView(this.model.getGroupDomain(group),this.views,context);}}
return __exports;});;

/* /web/static/src/views/pivot/pivot_search_model.js */
odoo.define('@web/views/pivot/pivot_search_model',['@web/search/search_model'],function(require){'use strict';let __exports={};const{SearchModel}=require("@web/search/search_model");const PivotSearchModel=__exports.PivotSearchModel=class PivotSearchModel extends SearchModel{_getIrFilterDescription(){this.preparingIrFilterDescription=true;const result=super._getIrFilterDescription(...arguments);this.preparingIrFilterDescription=false;return result;}
_getSearchItemGroupBys(activeItem){const{searchItemId}=activeItem;const{context,type}=this.searchItems[searchItemId];if(!this.preparingIrFilterDescription&&type==="favorite"&&context.pivot_row_groupby){return context.pivot_row_groupby;}
return super._getSearchItemGroupBys(...arguments);}}
return __exports;});;

/* /web/static/src/views/pivot/pivot_view.js */
odoo.define('@web/views/pivot/pivot_view',['@web/core/l10n/translation','@web/core/registry','@web/views/pivot/pivot_arch_parser','@web/views/pivot/pivot_controller','@web/views/pivot/pivot_model','@web/views/pivot/pivot_renderer','@web/views/pivot/pivot_search_model'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{PivotArchParser}=require("@web/views/pivot/pivot_arch_parser");const{PivotController}=require("@web/views/pivot/pivot_controller");const{PivotModel}=require("@web/views/pivot/pivot_model");const{PivotRenderer}=require("@web/views/pivot/pivot_renderer");const{PivotSearchModel}=require("@web/views/pivot/pivot_search_model");const viewRegistry=registry.category("views");const pivotView=__exports.pivotView={type:"pivot",Controller:PivotController,Renderer:PivotRenderer,Model:PivotModel,ArchParser:PivotArchParser,SearchModel:PivotSearchModel,searchMenuTypes:["filter","groupBy","comparison","favorite"],buttonTemplate:"web.PivotView.Buttons",props:(genericProps,view)=>{const modelParams={};if(genericProps.state){modelParams.data=genericProps.state.data;modelParams.metaData=genericProps.state.metaData;}else{const{arch,fields,resModel}=genericProps;const archInfo=new view.ArchParser().parse(arch);if(!archInfo.activeMeasures.length||archInfo.displayQuantity){archInfo.activeMeasures.unshift("__count");}
modelParams.metaData={activeMeasures:archInfo.activeMeasures,colGroupBys:archInfo.colGroupBys,defaultOrder:archInfo.defaultOrder,disableLinking:Boolean(archInfo.disableLinking),fields:fields,fieldAttrs:archInfo.fieldAttrs,resModel:resModel,rowGroupBys:archInfo.rowGroupBys,title:archInfo.title||_t("Untitled"),widgets:archInfo.widgets,};}
return{...genericProps,Model:view.Model,modelParams,Renderer:view.Renderer,buttonTemplate:view.buttonTemplate,};},};viewRegistry.add("pivot",pivotView);return __exports;});;

/* /web/static/src/views/standard_view_props.js */
odoo.define('@web/views/standard_view_props',[],function(require){'use strict';let __exports={};const standardViewProps=__exports.standardViewProps={info:{type:Object,},resModel:String,arch:{type:Element},bannerRoute:{type:String,optional:true},className:{type:String,optional:true},comparison:{type:[Object,{value:null}],optional:true},context:{type:Object},createRecord:{type:Function,optional:true},display:{type:Object,optional:true},domain:{type:Array},fields:{type:Object},globalState:{type:Object,optional:true},groupBy:{type:Array,element:String},limit:{type:Number,optional:true},noBreadcrumbs:{type:Boolean,optional:true},orderBy:{type:Array,element:Object},relatedModels:{type:Object,optional:true},resId:{type:[Number,Boolean],optional:true},resIds:{type:Array,optional:true},searchMenuTypes:{type:Array,element:String},selectRecord:{type:Function,optional:true},state:{type:Object,optional:true},useSampleModel:{type:Boolean},updateActionState:{type:Function,optional:true},};return __exports;});;

/* /web/static/src/views/utils.js */
odoo.define('@web/views/utils',['@web/core/l10n/translation','@web/core/registry','@web/core/utils/strings','@web/model/relational_model/utils'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{exprToBoolean}=require("@web/core/utils/strings");const{combineModifiers}=require("@web/model/relational_model/utils");const X2M_TYPES=__exports.X2M_TYPES=["one2many","many2many"];const NUMERIC_TYPES=["integer","float","monetary"];const BUTTON_CLICK_PARAMS=__exports.BUTTON_CLICK_PARAMS=["name","type","args","block-ui","context","close","cancel-label","confirm","confirm-title","confirm-label","special","effect","help","debounce","noSaveDialog",];function getViewClass(type){const isValidType=Boolean(type)&&registry.category("views").contains(type);return isValidType&&`o_${type}_view`;}
__exports.computeViewClassName=computeViewClassName;function computeViewClassName(viewType,rootNode,additionalClassList=[]){const subType=rootNode?.getAttribute("js_class");const classList=rootNode?.getAttribute("class")?.split(" ")||[];const uniqueClasses=new Set([getViewClass(viewType),getViewClass(subType),...classList,...additionalClassList,]);return Array.from(uniqueClasses).filter((c)=>c).join(" ");}
const computeReportMeasures=__exports.computeReportMeasures=(fields,fieldAttrs,activeMeasures,{sumAggregatorOnly=false}={})=>{const measures={__count:{name:"__count",string:_t("Count"),type:"integer"},};for(const[fieldName,field]of Object.entries(fields)){if(fieldName==="id"){continue;}
const{isInvisible}=fieldAttrs[fieldName]||{};if(isInvisible){continue;}
if(["integer","float","monetary"].includes(field.type)&&((sumAggregatorOnly&&field.aggregator==="sum")||(!sumAggregatorOnly&&field.aggregator))){measures[fieldName]=field;}}
for(const measure of activeMeasures){if(!measures[measure]){measures[measure]=fields[measure];}}
for(const fieldName in fieldAttrs){if(fieldAttrs[fieldName].string&&fieldName in measures){measures[fieldName].string=fieldAttrs[fieldName].string;}}
const sortedMeasures=Object.entries(measures).sort(([m1,f1],[m2,f2])=>{if(m1==="__count"||m2==="__count"){return m1==="__count"?1:-1;}
return f1.string.toLowerCase().localeCompare(f2.string.toLowerCase());});return Object.fromEntries(sortedMeasures);};__exports.getFormattedValue=getFormattedValue;function getFormattedValue(record,fieldName,fieldInfo=null){const field=record.fields[fieldName];const formatter=registry.category("formatters").get(field.type,(val)=>val);const formatOptions={};if(fieldInfo&&formatter.extractOptions){Object.assign(formatOptions,formatter.extractOptions(fieldInfo));}
formatOptions.data=record.data;formatOptions.field=field;return record.data[fieldName]!==undefined?formatter(record.data[fieldName],formatOptions):"";}
__exports.getActiveActions=getActiveActions;function getActiveActions(rootNode){const activeActions={type:"view",edit:exprToBoolean(rootNode.getAttribute("edit"),true),create:exprToBoolean(rootNode.getAttribute("create"),true),delete:exprToBoolean(rootNode.getAttribute("delete"),true),};activeActions.duplicate=activeActions.create&&exprToBoolean(rootNode.getAttribute("duplicate"),true);return activeActions;}
__exports.getClassNameFromDecoration=getClassNameFromDecoration;function getClassNameFromDecoration(decoration){if(decoration==="bf"){return"fw-bold";}else if(decoration==="it"){return"fst-italic";}
return`text-${decoration}`;}
__exports.getDecoration=getDecoration;function getDecoration(rootNode){const decorations=[];for(const name of rootNode.getAttributeNames()){if(name.startsWith("decoration-")){decorations.push({class:getClassNameFromDecoration(name.replace("decoration-","")),condition:rootNode.getAttribute(name),});}}
return decorations;}
__exports.isX2Many=isX2Many;function isX2Many(field){return field&&X2M_TYPES.includes(field.type);}
__exports.isNumeric=isNumeric;function isNumeric(field){return NUMERIC_TYPES.includes(field.type);}
__exports.isNull=isNull;function isNull(value){return[null,undefined].includes(value);}
__exports.processButton=processButton;function processButton(node){const withDefault={close:(val)=>exprToBoolean(val,false),context:(val)=>val||"{}",};const clickParams={};const attrs={};for(const{name,value}of node.attributes){if(BUTTON_CLICK_PARAMS.includes(name)){clickParams[name]=withDefault[name]?withDefault[name](value):value;}else{attrs[name]=value;}}
return{className:node.getAttribute("class")||"",disabled:!!node.getAttribute("disabled")||false,icon:node.getAttribute("icon")||false,title:node.getAttribute("title")||undefined,string:node.getAttribute("string")||undefined,options:JSON.parse(node.getAttribute("options")||"{}"),display:node.getAttribute("display")||"selection",clickParams,column_invisible:node.getAttribute("column_invisible"),invisible:combineModifiers(node.getAttribute("column_invisible"),node.getAttribute("invisible"),"OR"),readonly:node.getAttribute("readonly"),required:node.getAttribute("required"),attrs,};}
__exports.processMeasure=processMeasure;function processMeasure(measure){if(Array.isArray(measure)){return measure.map(processMeasure);}
return measure==="__count__"?"__count":measure;}
__exports.toStringExpression=toStringExpression;function toStringExpression(str){return`\`${str.replaceAll("`", "\\`")}\``;}
__exports.uuid=uuid;function uuid(){const array=new Uint8Array(8);window.crypto.getRandomValues(array);return[...array].map((b)=>b.toString(16).padStart(2,"0")).join("");}
return __exports;});;

/* /web/static/src/views/view.js */
odoo.define('@web/views/view',['@web/core/debug/debug_context','@web/core/py_js/py','@web/core/registry','@web/core/utils/concurrency','@web/core/utils/hooks','@web/core/utils/objects','@web/core/utils/strings','@web/core/utils/xml','@web/search/layout','@web/search/with_search/with_search','@web/views/view_hook','@web/views/utils','@web/core/assets','@web/core/browser/cookie','@odoo/owl','@web/session'],function(require){'use strict';let __exports={};const{useDebugCategory}=require("@web/core/debug/debug_context");const{evaluateBooleanExpr}=require("@web/core/py_js/py");const{registry}=require("@web/core/registry");const{KeepLast}=require("@web/core/utils/concurrency");const{useService}=require("@web/core/utils/hooks");const{deepCopy,pick}=require("@web/core/utils/objects");const{nbsp}=require("@web/core/utils/strings");const{parseXML}=require("@web/core/utils/xml");const{extractLayoutComponents}=require("@web/search/layout");const{WithSearch}=require("@web/search/with_search/with_search");const{useActionLinks}=require("@web/views/view_hook");const{computeViewClassName}=require("@web/views/utils");const{loadBundle}=require("@web/core/assets");const{cookie}=require("@web/core/browser/cookie");const{Component,markRaw,onWillUpdateProps,onWillStart,toRaw,useSubEnv,reactive,}=require("@odoo/owl");const{session}=require("@web/session");const viewRegistry=registry.category("views");viewRegistry.addValidation({type:{validate:(t)=>t in session.view_info},Controller:{validate:(c)=>c.prototype instanceof Component},"*":true,});__exports.getDefaultConfig=getDefaultConfig;function getDefaultConfig(){let displayName;const config={actionId:false,actionType:false,embeddedActions:[],currentEmbeddedActionId:false,parentActionId:false,actionFlags:{},breadcrumbs:reactive([{get name(){return displayName;},},]),disableSearchBarAutofocus:false,getDisplayName:()=>displayName,historyBack:()=>{},pagerProps:{},setDisplayName:(newDisplayName)=>{displayName=newDisplayName;config.breadcrumbs.push(undefined);config.breadcrumbs.pop();},viewSwitcherEntries:[],views:[],};return config;}
const ViewNotFoundError=__exports.ViewNotFoundError=class ViewNotFoundError extends Error{}
const CALLBACK_RECORDER_NAMES=["__beforeLeave__","__getGlobalState__","__getLocalState__","__getContext__","__getOrderBy__",];const STANDARD_PROPS=["resModel","type","jsClass","arch","fields","relatedModels","viewId","views","actionMenus","loadActionMenus","searchViewArch","searchViewFields","searchViewId","irFilters","loadIrFilters","comparison","context","domain","groupBy","orderBy","useSampleModel","noContentHelp","className","display","globalState","activateFavorite","dynamicFilters","hideCustomGroupBy","searchMenuTypes",...CALLBACK_RECORDER_NAMES,"searchPanel","searchModel",];const ACTIONS=["create","delete","edit","group_create","group_delete","group_edit"];const View=__exports.View=class View extends Component{static _download=async function(){};static template="web.View";static components={WithSearch};static searchMenuTypes=["filter","groupBy","favorite"];static canOrderByCount=false;static defaultProps={display:{},context:{},loadActionMenus:false,loadIrFilters:false,className:"",};static props={"*":true,};setup(){const{arch,fields,resModel,searchViewArch,searchViewFields,type}=this.props;if(!resModel){throw Error(`View props should have a "resModel" key`);}
if(!type){throw Error(`View props should have a "type" key`);}
if((arch&&!fields)||(!arch&&fields)){throw new Error(`"arch" and "fields" props must be given together`);}
if((searchViewArch&&!searchViewFields)||(!searchViewArch&&searchViewFields)){throw new Error(`"searchViewArch" and "searchViewFields" props must be given together`);}
this.viewService=useService("view");this.withSearchProps=null;useSubEnv({keepLast:new KeepLast(),config:{...getDefaultConfig(),...this.env.config,},...Object.fromEntries(CALLBACK_RECORDER_NAMES.map((name)=>[name,this.props[name]||null])),});this.handleActionLinks=useActionLinks({resModel});onWillStart(()=>this.loadView(this.props));onWillUpdateProps((nextProps)=>this.onWillUpdateProps(nextProps));useDebugCategory("view",{component:this});}
async loadView(props){const type=props.type;if(!session.view_info[type]){throw new Error(`Invalid view type: ${type}`);}
let{viewId,searchViewId}=props;const views=deepCopy(props.views||this.env.config.views);const view=views.find((v)=>v[1]===type)||[];if(view.length){view[0]=viewId!==undefined?viewId:view[0];viewId=view[0];}else{view.push(viewId||false,type);views.push(view);}
const searchView=views.find((v)=>v[1]==="search");if(searchView){searchView[0]=searchViewId!==undefined?searchViewId:searchView[0];searchViewId=searchView[0];}else if(searchViewId!==undefined){views.push([searchViewId,"search"]);}
const{context,resModel,loadActionMenus,loadIrFilters}=props;let{arch,fields,relatedModels,searchViewArch,searchViewFields,irFilters,actionMenus,}=props;const loadView=!arch||(!actionMenus&&loadActionMenus);const loadSearchView=(searchViewId!==undefined&&!searchViewArch)||(!irFilters&&loadIrFilters);let viewDescription={viewId,resModel,type};let searchViewDescription;if(loadView||loadSearchView){const options={actionId:this.env.config.actionId,loadActionMenus,loadIrFilters,};if(this.env.config.currentEmbeddedActionId){options.embeddedActionId=this.env.config.currentEmbeddedActionId;options.embeddedParentResId=context.active_id;}
const result=await this.viewService.loadViews({context,resModel,views},options);viewDescription=result.views[type];searchViewDescription=result.views.search;if(loadSearchView){searchViewId=searchViewId||searchViewDescription.id;if(!searchViewArch){searchViewArch=searchViewDescription.arch;searchViewFields=result.fields;}
if(!irFilters){irFilters=searchViewDescription.irFilters;}}
this.env.config.views=views;fields=fields||markRaw(result.fields);relatedModels=relatedModels||markRaw(result.relatedModels);}
if(!arch){arch=viewDescription.arch;}
if(!actionMenus){actionMenus=viewDescription.actionMenus;}
const archXmlDoc=parseXML(arch.replace(/&amp;nbsp;/g,nbsp));for(const action of ACTIONS){if(action in this.props.context&&!this.props.context[action]){archXmlDoc.setAttribute(action,"0");}}
const jsClass=archXmlDoc.hasAttribute("js_class")?archXmlDoc.getAttribute("js_class"):props.jsClass||type;if(!viewRegistry.contains(jsClass)){await loadBundle(cookie.get("color_scheme")==="dark"?"web.assets_backend_lazy_dark":"web.assets_backend_lazy");}
const descr=viewRegistry.get(jsClass);const sample=archXmlDoc.getAttribute("sample");const className=computeViewClassName(type,archXmlDoc,["o_view_controller",...(props.className||"").split(" "),]);Object.assign(this.env.config,{rawArch:arch,viewArch:archXmlDoc,viewId:viewDescription.id,viewType:type,viewSubType:jsClass,noBreadcrumbs:props.noBreadcrumbs,...extractLayoutComponents(descr),});const info={actionMenus,mode:props.display.mode,irFilters,searchViewArch,searchViewFields,searchViewId,};const viewProps={info,arch:archXmlDoc,fields,relatedModels,resModel,useSampleModel:false,className,};if(viewDescription.custom_view_id){viewProps.info.customViewId=viewDescription.custom_view_id;}
if(props.globalState){viewProps.globalState=props.globalState;}
if("useSampleModel"in props){viewProps.useSampleModel=props.useSampleModel;}else if(sample){viewProps.useSampleModel=evaluateBooleanExpr(sample);}
for(const key in props){if(!STANDARD_PROPS.includes(key)){viewProps[key]=props[key];}}
const{noContentHelp}=props;if(noContentHelp){viewProps.info.noContentHelp=noContentHelp;}
const searchMenuTypes=props.searchMenuTypes||descr.searchMenuTypes||this.constructor.searchMenuTypes;viewProps.searchMenuTypes=searchMenuTypes;const canOrderByCount=descr.canOrderByCount||this.constructor.canOrderByCount;const finalProps=descr.props?descr.props(viewProps,descr,this.env.config):viewProps;this.Controller=descr.Controller;this.componentProps=finalProps;this.withSearchProps={...toRaw(props),hideCustomGroupBy:props.hideCustomGroupBy||descr.hideCustomGroupBy,searchMenuTypes,canOrderByCount,SearchModel:descr.SearchModel,};if(searchViewId!==undefined){this.withSearchProps.searchViewId=searchViewId;}
if(searchViewArch){this.withSearchProps.searchViewArch=searchViewArch;this.withSearchProps.searchViewFields=searchViewFields;}
if(irFilters){this.withSearchProps.irFilters=irFilters;}
if(descr.display){const viewDisplay=deepCopy(descr.display);const display={...this.withSearchProps.display};for(const key in viewDisplay){if(typeof display[key]==="object"){Object.assign(display[key],viewDisplay[key]);}else if(!(key in display)||display[key]){display[key]=viewDisplay[key];}}
this.withSearchProps.display=display;}
for(const key in this.withSearchProps){if(!(key in WithSearch.props)){delete this.withSearchProps[key];}}}
onWillUpdateProps(nextProps){const oldProps=pick(this.props,"arch","type","resModel");const newProps=pick(nextProps,"arch","type","resModel");if(JSON.stringify(oldProps)!==JSON.stringify(newProps)){return this.loadView(nextProps);}
const{comparison,context,domain,groupBy,orderBy}=nextProps;Object.assign(this.withSearchProps,{comparison,context,domain,groupBy,orderBy});}}
return __exports;});;

/* /web/static/src/views/view_button/multi_record_view_button.js */
odoo.define('@web/views/view_button/multi_record_view_button',['@web/views/view_button/view_button'],function(require){'use strict';let __exports={};const{ViewButton}=require("@web/views/view_button/view_button");const MultiRecordViewButton=__exports.MultiRecordViewButton=class MultiRecordViewButton extends ViewButton{static props=[...ViewButton.props,"list","domain"];async onClick(){const{clickParams,list}=this.props;const resIds=await list.getResIds(true);clickParams.buttonContext={active_domain:this.props.domain,active_ids:resIds,active_model:list.resModel,};this.env.onClickViewButton({clickParams,getResParams:()=>({context:list.context,evalContext:list.evalContext,resModel:list.resModel,resIds,}),});}}
return __exports;});;

/* /web/static/src/views/view_button/view_button.js */
odoo.define('@web/views/view_button/view_button',['@odoo/owl','@web/core/dropdown/dropdown_hooks','@web/core/utils/objects','@web/core/utils/timing'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{useDropdownCloser}=require("@web/core/dropdown/dropdown_hooks");const{pick}=require("@web/core/utils/objects");const{debounce:debounceFn}=require("@web/core/utils/timing");const explicitRankClasses=["btn-primary","btn-secondary","btn-link","btn-success","btn-info","btn-warning","btn-danger",];const odooToBootstrapClasses={oe_highlight:"btn-primary",oe_link:"btn-link",};function iconFromString(iconString){const icon={};if(iconString.startsWith("fa-")){icon.tag="i";icon.class=`o_button_icon fa fa-fw ${iconString}`;}else if(iconString.startsWith("oi-")){icon.tag="i";icon.class=`o_button_icon oi oi-fw ${iconString}`;}else{icon.tag="img";icon.src=iconString;}
return icon;}
const ViewButton=__exports.ViewButton=class ViewButton extends Component{static template="web.views.ViewButton";static props=["id?","tag?","record?","attrs?","className?","context?","clickParams?","icon?","defaultRank?","disabled?","size?","tabindex?","title?","style?","string?","slots?","onClick?",];static defaultProps={tag:"button",className:"",clickParams:{},attrs:{},};setup(){if(this.props.icon){this.icon=iconFromString(this.props.icon);}
const{debounce}=this.clickParams;if(debounce){this.onClick=debounceFn(this.onClick.bind(this),debounce,true);}
this.tooltip=JSON.stringify({debug:Boolean(odoo.debug),button:{string:this.props.string,help:this.clickParams.help,context:this.clickParams.context,invisible:this.props.attrs.invisible,column_invisible:this.props.attrs.column_invisible,readonly:this.props.attrs.readonly,required:this.props.attrs.required,special:this.clickParams.special,type:this.clickParams.type,name:this.clickParams.name,title:this.props.title,},context:this.props.record&&this.props.record.context,model:this.props.record&&this.props.record.resModel,});this.dropdownControl=useDropdownCloser();}
get clickParams(){return{context:this.props.context,...this.props.clickParams};}
get hasBigTooltip(){return Boolean(odoo.debug)||this.clickParams.help;}
get hasSmallToolTip(){return!this.hasBigTooltip&&this.props.title;}
get disabled(){const{name,type,special}=this.clickParams;return(!name&&!type&&!special)||this.props.disabled;}
onClick(ev){if(this.props.tag==="a"){ev.preventDefault();}
if(this.props.onClick){return this.props.onClick();}
this.env.onClickViewButton({clickParams:this.clickParams,getResParams:()=>pick(this.props.record||{},"context","evalContext","resModel","resId","resIds"),beforeExecute:()=>this.dropdownControl.close(),});}
getClassName(){const classNames=[];let hasExplicitRank=false;if(this.props.className){for(let cls of this.props.className.split(" ")){if(cls in odooToBootstrapClasses){cls=odooToBootstrapClasses[cls];}
classNames.push(cls);if(!hasExplicitRank&&explicitRankClasses.includes(cls)){hasExplicitRank=true;}}}
if(this.props.tag==="button"){const hasOtherClasses=classNames.length;classNames.unshift("btn");if((!hasExplicitRank&&this.props.defaultRank)||!hasOtherClasses){classNames.push(this.props.defaultRank||"btn-secondary");}
if(this.props.size){classNames.push(`btn-${this.props.size}`);}}
return classNames.join(" ");}}
return __exports;});;

/* /web/static/src/views/view_button/view_button_hook.js */
odoo.define('@web/views/view_button/view_button_hook',['@web/core/utils/hooks','@web/core/py_js/py','@web/core/confirmation_dialog/confirmation_dialog','@odoo/owl'],function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{evaluateExpr}=require("@web/core/py_js/py");const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{status,useComponent,useEnv,useSubEnv}=require("@odoo/owl");__exports.executeButtonCallback=executeButtonCallback;async function executeButtonCallback(el,fct){let btns=[];function disableButtons(){btns=[...btns,...el.querySelectorAll("button:not([disabled])"),...document.querySelectorAll(".o-overlay-container button:not([disabled])"),];for(const btn of btns){btn.setAttribute("disabled","1");}}
function enableButtons(){for(const btn of btns){btn.removeAttribute("disabled");}}
disableButtons();let res;try{res=await fct();}finally{enableButtons();}
return res;}
function undefinedAsTrue(val){return typeof val==="undefined"||val;}
__exports.useViewButtons=useViewButtons;function useViewButtons(ref,options={}){const action=useService("action");const dialog=useService("dialog");const comp=useComponent();const env=useEnv();useSubEnv({async onClickViewButton({clickParams,getResParams,beforeExecute}){async function execute(){let _continue=true;if(beforeExecute){_continue=undefinedAsTrue(await beforeExecute());}
_continue=_continue&&undefinedAsTrue(await options.beforeExecuteAction?.(clickParams));if(!_continue){return;}
const closeDialog=(clickParams.close||clickParams.special)&&env.dialogData?.close;const params=getResParams();let buttonContext={};if(clickParams.context){if(typeof clickParams.context==="string"){buttonContext=evaluateExpr(clickParams.context,params.evalContext);}else{buttonContext=clickParams.context;}}
if(clickParams.buttonContext){Object.assign(buttonContext,clickParams.buttonContext);}
const doActionParams=Object.assign({},clickParams,{resModel:params.resModel,resId:params.resId,resIds:params.resIds,context:params.context||{},buttonContext,onClose:async()=>{if(!closeDialog&&status(comp)!=="destroyed"){await options.reload?.();}},});let error;try{await action.doActionButton(doActionParams);}catch(_e){error=_e;}
await options.afterExecuteAction?.(clickParams);if(closeDialog){closeDialog();}
if(error){return Promise.reject(error);}}
if(clickParams.confirm){executeButtonCallback(getEl(),async()=>{await new Promise((resolve)=>{const dialogProps={...(clickParams["confirm-title"]&&{title:clickParams["confirm-title"],}),...(clickParams["confirm-label"]&&{confirmLabel:clickParams["confirm-label"],}),...(clickParams["cancel-label"]&&{cancelLabel:clickParams["cancel-label"],}),body:clickParams.confirm,confirm:()=>execute(),cancel:()=>{},};dialog.add(ConfirmationDialog,dialogProps,{onClose:resolve});});});}else{return executeButtonCallback(getEl(),execute);}},});function getEl(){if(env.inDialog){const el=ref.el;return el?el.closest(".modal"):null;}else{return ref.el;}}}
return __exports;});;

/* /web/static/src/views/view_compiler.js */
odoo.define('@web/views/view_compiler',['@web/core/utils/xml','@web/views/utils','@odoo/owl'],function(require){'use strict';let __exports={};const{append,combineAttributes,createElement,createTextNode,getTag,}=require("@web/core/utils/xml");const{toStringExpression,BUTTON_CLICK_PARAMS}=require("@web/views/utils");const{xml}=require("@odoo/owl");const BUTTON_STRING_PROPS=["string","size","title","icon","id"];const INTERP_REGEXP=/(\{\{|#\{)(.*?)(\}{1,2})/g;__exports.toInterpolatedStringExpression=toInterpolatedStringExpression;function toInterpolatedStringExpression(str){const matches=str.matchAll(INTERP_REGEXP);const parts=[];let searchString=str;for(const[match,head,expr]of matches){const index=searchString.indexOf(head);const left=searchString.slice(0,index);if(left){parts.push(toStringExpression(left));}
parts.push(`(${expr})`);searchString=searchString.slice(index+match.length);}
parts.push(toStringExpression(searchString));return parts.join("+");}
__exports.appendAttr=appendAttr;function appendAttr(el,attr,string){const attrKey=`t-att-${attr}`;const attrVal=el.getAttribute(attrKey);el.setAttribute(attrKey,appendToStringifiedObject(attrVal,string));}
function appendToStringifiedObject(originalTattr,string){const re=/{(.*)}/;const oldString=re.exec(originalTattr);if(oldString){string=`${oldString[1]},${string}`;}
return`{${string}}`;}
__exports.assignOwlDirectives=assignOwlDirectives;function assignOwlDirectives(target,...sources){for(const source of sources){for(const{name,value}of source.attributes){if(name.startsWith("t-attf-")){const propName=name.slice(7);const interpolatedExpression=toInterpolatedStringExpression(value);target.setAttribute(propName,interpolatedExpression);}else if(name.startsWith("t-att-")){const propName=name.slice(6);target.setAttribute(propName,value);}else if(name.startsWith("t-")){target.setAttribute(name,value);}}}
return target;}
__exports.copyAttributes=copyAttributes;function copyAttributes(el,compiled){const isComponent=isComponentNode(compiled);const classes=el.className;if(classes){if(isComponent){const cls=compiled.className;compiled.setAttribute("class",cls?`'${classes} ' + ${cls}`:`'${classes}'`);}else{compiled.classList.add(...classes.split(/\s+/).filter(Boolean));}}
let att=el.getAttribute("style");if(att){if(isComponent){att=toStringExpression(att);}
compiled.setAttribute("style",att);}}
__exports.decodeObjectForTemplate=decodeObjectForTemplate;function decodeObjectForTemplate(str){return JSON.parse(decodeURI(str));}
__exports.encodeObjectForTemplate=encodeObjectForTemplate;function encodeObjectForTemplate(obj){return`"${encodeURI(JSON.stringify(obj))}"`;}
__exports.getModifier=getModifier;function getModifier(el,modifierName){return el.getAttribute(modifierName);}
function getTitleTag(node){return getTag(node)[0].toUpperCase()+getTag(node).slice(1);}
function isComment(node){return node.nodeType===8;}
__exports.isComponentNode=isComponentNode;function isComponentNode(el){return(getTag(el)===getTitleTag(el)||(getTag(el,true)==="t"&&"t-component"in el.attributes));}
__exports.isTextNode=isTextNode;function isTextNode(node){return node.nodeType===3;}
__exports.makeSeparator=makeSeparator;function makeSeparator(title){const separator=createElement("div");separator.className="o_horizontal_separator mt-4 mb-3 text-uppercase fw-bolder small";separator.textContent=title;return separator;}
const ViewCompiler=__exports.ViewCompiler=class ViewCompiler{constructor(templates){this.id=1;this.compilers=[{selector:"a[type]:not([data-bs-toggle]),a[data-type]:not([data-bs-toggle])",fn:this.compileButton,},{selector:"button:not([data-bs-toggle])",fn:this.compileButton,doNotCopyAttributes:true,},{selector:"field",fn:this.compileField},{selector:"widget",fn:this.compileWidget},];this.templates=templates;this.ctx={readonly:"__comp__.props.readonly"};this.owlDirectiveRegexesWhitelist=this.constructor.OWL_DIRECTIVE_WHITELIST.map((d)=>new RegExp(d));this.setup();}
setup(){}
applyInvisible(invisible,compiled,params){if(!invisible||invisible==="False"){return compiled;}
if(invisible==="True"||invisible==="1"){return;}
const recordExpr=params.recordExpr||"__comp__.props.record";let isVisileExpr=`!__comp__.evaluateBooleanExpr(${JSON.stringify(
            invisible
        )},${recordExpr}.evalContextWithVirtualIds)`;if(compiled.hasAttribute("t-if")){const formerTif=compiled.getAttribute("t-if");isVisileExpr=`( ${formerTif} ) and ${isVisileExpr}`;}
compiled.setAttribute("t-if",isVisileExpr);return compiled;}
compile(key,params={}){const root=this.templates[key].cloneNode(true);const child=this.compileNode(root,params);const newRoot=createElement("t",[child]);newRoot.setAttribute("t-translation","off");return newRoot;}
compileNode(node,params={},evalInvisible=true){if(isComment(node)){return;}
if(isTextNode(node)){return createTextNode(node.nodeValue);}
this.validateNode(node);let invisible;if(evalInvisible){invisible=getModifier(node,"invisible");if(!params.compileInvisibleNodes&&(invisible==="True"||invisible==="1")){return;}}
const compiler=this.compilers.find((cp)=>node.matches(cp.selector));let compiledNode;if(compiler){compiledNode=compiler.fn.call(this,node,params);if(!compiler.doNotCopyAttributes&&compiledNode){copyAttributes(node,compiledNode);}}else{compiledNode=this.compileGenericNode(node,params);}
if(evalInvisible&&compiledNode){compiledNode=this.applyInvisible(invisible,compiledNode,params);}
return compiledNode;}
compileButton(el,params){let tag=getTag(el,true);const type=el.getAttribute("type");if(tag==="a"&&type==="url"){tag="button";}
const recordExpr=params.recordExpr||"__comp__.props.record";const button=createElement("ViewButton",{tag:toStringExpression(tag),record:recordExpr,});assignOwlDirectives(button,el);combineAttributes(button,"className",[toStringExpression(el.className),button.className],"+` `+");el.removeAttribute("class");button.removeAttribute("class");const clickParams={};const attrs={};for(const{name,value}of el.attributes){if(BUTTON_CLICK_PARAMS.includes(name)){clickParams[name]=value;}else if(BUTTON_STRING_PROPS.includes(name)){button.setAttribute(name,toStringExpression(value));}else if(!name.startsWith("t-")){attrs[name]=value;}}
button.setAttribute("clickParams",JSON.stringify(clickParams));button.setAttribute("attrs",JSON.stringify(attrs));const buttonContent=[];for(const child of el.childNodes){const compiled=this.compileNode(child,params);if(compiled){buttonContent.push(compiled);}}
if(buttonContent.length){const contentSlot=createElement("t");contentSlot.setAttribute("t-set-slot","contents");append(button,contentSlot);for(const buttonChild of buttonContent){append(contentSlot,buttonChild);}}
return button;}
compileField(el,params){const fieldName=el.getAttribute("name");const fieldId=el.getAttribute("field_id");const field=createElement("Field");const recordExpr=params.recordExpr||"__comp__.props.record";field.setAttribute("id",`'${fieldId}'`);field.setAttribute("name",`'${fieldName}'`);field.setAttribute("record",recordExpr);field.setAttribute("fieldInfo",`__comp__.props.archInfo.fieldNodes['${fieldId}']`);field.setAttribute("readonly",`__comp__.props.archInfo.activeActions?.edit === false and !${recordExpr}.isNew`);if(el.hasAttribute("widget")){field.setAttribute("type",`'${el.getAttribute("widget")}'`);}
return field;}
compileGenericNode(el,params){const compiled=createElement(el.nodeName.toLowerCase());const metaAttrs=["column_invisible","invisible","readonly","required"];for(const attr of el.attributes){if(metaAttrs.includes(attr.name)){continue;}
compiled.setAttribute(attr.name,attr.value);}
for(const child of el.childNodes){append(compiled,this.compileNode(child,params));}
if(el.hasAttribute("t-foreach")&&!el.hasAttribute("t-key")){compiled.setAttribute("t-key",`${el.getAttribute("t-as")}_index`);console.warn(`Missing attribute "t-key" in "t-foreach" statement.`);}
return compiled;}
compileWidget(el){const widgetId=el.getAttribute("widget_id");const props={record:"__comp__.props.record"};if(el.hasAttribute("name")){props.name=`'${el.getAttribute("name")}'`;}
if(el.hasAttribute("class")){props.className=`'${el.getAttribute("class")}'`;}
props.widgetInfo=`__comp__.props.archInfo.widgetNodes['${widgetId}']`;const widget=createElement("Widget",props);return assignOwlDirectives(widget,el);}
validateNode(node){const attributes=Object.values(node.attributes).map((attr)=>attr.name);const regexes=this.owlDirectiveRegexesWhitelist;for(const attr of attributes){if(attr.startsWith("t-")&&!regexes.some((regex)=>regex.test(attr))){console.warn(`Forbidden directive ${attr} used in arch`);}}}}
ViewCompiler.OWL_DIRECTIVE_WHITELIST=[];let templateCache=Object.create(null);__exports.useViewCompiler=useViewCompiler;function useViewCompiler(ViewCompiler,templates,params){const compiledTemplates={};let compiler;for(const tname in templates){const key=`${ViewCompiler.name}/${templates[tname].outerHTML}`;if(!templateCache[key]){compiler=compiler||new ViewCompiler(templates);templateCache[key]=xml`${compiler.compile(tname, params).outerHTML}`;}
compiledTemplates[tname]=templateCache[key];}
return compiledTemplates;}
__exports.resetViewCompilerCache=resetViewCompilerCache;function resetViewCompilerCache(){templateCache=Object.create(null);}
return __exports;});;

/* /web/static/src/views/view_components/animated_number.js */
odoo.define('@web/views/view_components/animated_number',['@web/core/browser/browser','@web/views/fields/formatters','@odoo/owl'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{formatInteger}=require("@web/views/fields/formatters");const{Component,onWillUpdateProps,onWillUnmount,useState}=require("@odoo/owl");const AnimatedNumber=__exports.AnimatedNumber=class AnimatedNumber extends Component{static template="web.AnimatedNumber";static props={value:Number,duration:Number,animationClass:{type:String,optional:true},currency:{type:[Object,Boolean],optional:true},title:{type:String,optional:true},slots:{type:Object,shape:{prefix:{type:Object,optional:true},},optional:true,},};static enableAnimations=true;setup(){this.formatInteger=formatInteger;this.state=useState({value:this.props.value});this.handle=null;onWillUpdateProps((nextProps)=>{const{value:from}=this.props;const{value:to,duration}=nextProps;if(!this.constructor.enableAnimations||!duration||to<=from){browser.cancelAnimationFrame(this.handle);this.state.value=to;return;}
const startTime=Date.now();const animate=()=>{const progress=(Date.now()-startTime)/duration;if(progress>=1){this.state.value=to;}else{this.state.value=from+(to-from)*progress;this.handle=browser.requestAnimationFrame(animate);}};browser.cancelAnimationFrame(this.handle);animate();});onWillUnmount(()=>browser.cancelAnimationFrame(this.handle));}
format(value){return this.formatInteger(value,{humanReadable:true,decimals:0,minDigits:3});}}
return __exports;});;

/* /web/static/src/views/view_components/column_progress.js */
odoo.define('@web/views/view_components/column_progress',['@odoo/owl','@web/views/view_components/animated_number'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{AnimatedNumber}=require("@web/views/view_components/animated_number");const ColumnProgress=__exports.ColumnProgress=class ColumnProgress extends Component{static components={AnimatedNumber,};static template="web.ColumnProgress";static props={aggregate:{type:Object},group:{type:Object},onBarClicked:{type:Function,optional:true},progressBar:{type:Object},};static defaultProps={onBarClicked:()=>{},};async onBarClick(bar){await this.props.onBarClicked(bar);}}
return __exports;});;

/* /web/static/src/views/view_components/report_view_measures.js */
odoo.define('@web/views/view_components/report_view_measures',['@odoo/owl','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const ReportViewMeasures=__exports.ReportViewMeasures=class ReportViewMeasures extends Component{static template="web.ReportViewMeasures";static components={Dropdown,DropdownItem,};static props={measures:true,activeMeasures:{type:Array,optional:true},onMeasureSelected:{type:Function,optional:true},};}
return __exports;});;

/* /web/static/src/views/view_components/view_scale_selector.js */
odoo.define('@web/views/view_components/view_scale_selector',['@odoo/owl','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const ViewScaleSelector=__exports.ViewScaleSelector=class ViewScaleSelector extends Component{static components={Dropdown,DropdownItem,};static template="web.ViewScaleSelector";static props={scales:{type:Object},currentScale:{type:String},isWeekendVisible:{type:Boolean,optional:true},setScale:{type:Function},toggleWeekendVisibility:{type:Function,optional:true},dropdownClass:{type:String,optional:true},};get scales(){return Object.entries(this.props.scales).map(([key,value])=>({key,...value}));}}
return __exports;});;

/* /web/static/src/views/view_dialogs/export_data_dialog.js */
odoo.define('@web/views/view_dialogs/export_data_dialog',['@web/core/l10n/translation','@web/core/browser/browser','@web/core/checkbox/checkbox','@web/core/dialog/dialog','@web/core/network/rpc','@web/core/utils/arrays','@web/core/utils/hooks','@web/core/utils/search','@web/core/utils/sortable_owl','@web/core/utils/timing','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{browser}=require("@web/core/browser/browser");const{CheckBox}=require("@web/core/checkbox/checkbox");const{Dialog}=require("@web/core/dialog/dialog");const{rpc}=require("@web/core/network/rpc");const{unique}=require("@web/core/utils/arrays");const{useService}=require("@web/core/utils/hooks");const{fuzzyLookup}=require("@web/core/utils/search");const{useSortable}=require("@web/core/utils/sortable_owl");const{useDebounced}=require("@web/core/utils/timing");const{Component,useRef,useState,onMounted,onWillStart,onWillUnmount}=require("@odoo/owl");class DeleteExportListDialog extends Component{static components={Dialog};static template="web.DeleteExportListDialog";static props={text:String,close:Function,delete:Function,};async onDelete(){await this.props.delete();this.props.close();}}
class ExportDataItem extends Component{static template="web.ExportDataItem";static components={ExportDataItem};static props={exportList:{type:Object,optional:true},field:{type:Object,optional:true},filterSubfields:Function,isDebug:Boolean,isExpanded:Boolean,isFieldExpandable:Function,onAdd:Function,loadFields:Function,};setup(){this.state=useState({subfields:[],});onWillStart(()=>{if(this.props.isExpanded){return this.toggleItem(this.props.field.id,false);}});}
async toggleItem(id,isUserToggle){if(this.props.isFieldExpandable(id)){if(this.state.subfields.length){this.state.subfields=[];}else{const subfields=await this.props.loadFields(id,!isUserToggle);if(subfields){this.state.subfields=isUserToggle?subfields:this.props.filterSubfields(subfields);}else{this.state.subfields=[];}}}}
onDoubleClick(id){if(!this.props.isFieldExpandable(id)&&!this.isFieldSelected(id)){this.props.onAdd(id);}}
isFieldSelected(current){return this.props.exportList.find(({id})=>id===current);}}
const ExportDataDialog=__exports.ExportDataDialog=class ExportDataDialog extends Component{static template="web.ExportDataDialog";static components={CheckBox,Dialog,ExportDataItem};static props={close:{type:Function},context:{type:Object,optional:true},defaultExportList:{type:Array},download:{type:Function},getExportedFields:{type:Function},root:{type:Object},};setup(){this.dialog=useService("dialog");this.notification=useService("notification");this.orm=useService("orm");this.draggableRef=useRef("draggable");this.exportListRef=useRef("exportList");this.searchRef=useRef("search");this.knownFields={};this.expandedFields={};this.availableFormats=[];this.templates=[];this.state=useState({exportList:[],isCompatible:false,isEditingTemplate:false,search:[],selectedFormat:0,templateId:null,isSmall:this.env.isSmall,disabled:false,});this.newTemplateText=_t("New template");this.removeFieldText=_t("Remove field");this.debouncedOnResize=useDebounced(this.updateSize,300);useSortable({ref:this.draggableRef,elements:".o_export_field",enable:!this.state.isSmall,cursor:"grabbing",onDrop:async({element,previous,next})=>{const indexes=[element,previous,next].map((e)=>e&&Object.values(this.state.exportList).findIndex(({id})=>id===e.dataset.field_id));let target;if(indexes[0]<indexes[1]){target=previous?indexes[1]:0;}else{target=next?indexes[2]:this.state.exportList.length-1;}
this.onDraggingEnd(indexes[0],target);},});onWillStart(async()=>{this.availableFormats=await rpc("/web/export/formats");this.templates=await this.orm.searchRead("ir.exports",[["resource","=",this.props.root.resModel]],[],{context:this.props.context,});await this.fetchFields();});onMounted(()=>{browser.addEventListener("resize",this.debouncedOnResize);this.updateSize();});onWillUnmount(()=>browser.removeEventListener("resize",this.debouncedOnResize));}
get fieldsAvailable(){if(this.searchRef.el&&this.searchRef.el.value){return this.state.search.length&&Object.values(this.state.search);}
return Object.values(this.knownFields);}
get isDebug(){return Boolean(odoo.debug);}
get rootFields(){if(this.searchRef.el&&this.searchRef.el.value){const rootFromSearchResults=this.fieldsAvailable.map((f)=>{if(f.parent){const parentEl=this.knownFields[f.parent.id];return this.knownFields[parentEl.parent?parentEl.parent.id:parentEl.id];}
return this.knownFields[f.id];});return unique(rootFromSearchResults);}
return this.fieldsAvailable.filter(({parent})=>!parent);}
filterSubfields(subfields){let subfieldsFromSearchResults=[];let searchResults;if(this.searchRef.el&&this.searchRef.el.value){searchResults=this.lookup(this.searchRef.el.value);}
const fieldsAvailable=Object.values(searchResults||this.knownFields);if(this.searchRef.el&&this.searchRef.el.value){subfieldsFromSearchResults=fieldsAvailable.filter((f)=>f.parent&&this.knownFields[f.parent.id].parent).map((f)=>f.parent);}
const availableSubFields=unique([...fieldsAvailable,...subfieldsFromSearchResults]);return subfields.filter((a)=>availableSubFields.some((b)=>a.id===b.id));}
updateSize(){this.state.isSmall=this.env.isSmall;}
async fetchFields(){this.state.search=[];this.knownFields={};this.expandedFields={};await this.loadFields();await this.setDefaultExportList();if(this.searchRef.el){this.searchRef.el.value="";}
if(this.state.templateId){this.loadExportList(this.state.templateId);}}
enterTemplateEdition(){if(this.state.templateId&&!this.state.isEditingTemplate){this.state.isEditingTemplate=true;}}
isFieldExpandable(id){return this.knownFields[id].children&&id.split("/").length<3;}
async loadExportList(value){this.state.templateId=value==="new_template"?value:Number(value);this.state.isEditingTemplate=value==="new_template";if(!value||value==="new_template"){return;}
const fields=await rpc("/web/export/namelist",{model:this.props.root.resModel,export_id:Number(value),});this.state.exportList=fields;}
async loadFields(id,preventLoad=false){let model=this.props.root.resModel;let parentField,parentParams;if(id){if(this.expandedFields[id]){return this.expandedFields[id].fields;}
parentField=this.knownFields[id];model=parentField.params&&parentField.params.model;parentParams={...parentField.params,parent_field_type:parentField.field_type,parent_field:parentField,parent_name:parentField.string,exclude:[parentField.relation_field],};}
if(preventLoad){return;}
const fields=await this.props.getExportedFields(model,this.state.isCompatible,parentParams);for(const field of fields){field.parent=parentField;if(!this.knownFields[field.id]){this.knownFields[field.id]=field;}}
if(id){this.expandedFields[id]={fields};}
return fields;}
onDraggingEnd(item,target){this.state.exportList.splice(target,0,this.state.exportList.splice(item,1)[0]);}
onAddItemExportList(fieldId){this.state.exportList.push(this.knownFields[fieldId]);this.enterTemplateEdition();}
onRemoveItemExportList(fieldId){const item=this.state.exportList.findIndex(({id})=>id===fieldId);this.state.exportList.splice(item,1);this.enterTemplateEdition();}
async onChangeExportList(ev){this.loadExportList(ev.target.value);}
async onSaveExportTemplate(){const name=this.exportListRef.el.value;if(!name){return this.notification.add(_t("Please enter save field list name"),{type:"danger",});}
const[id]=await this.orm.create("ir.exports",[{name,export_fields:this.state.exportList.map((field)=>[0,0,{name:field.id,},]),resource:this.props.root.resModel,},],{context:this.props.context});this.state.isEditingTemplate=false;this.state.templateId=id;this.templates.push({id,name});}
onCancelExportTemplate(){this.state.isEditingTemplate=false;if(this.state.templateId==="new_template"){this.state.templateId=null;return;}
this.loadExportList(this.state.templateId);}
async onClickExportButton(){if(!this.state.exportList.length){return this.notification.add(_t("Please select fields to save export list..."),{type:"danger",});}
this.state.disabled=true;await this.props.download(this.state.exportList,this.state.isCompatible,this.availableFormats[this.state.selectedFormat].tag);this.state.disabled=false;}
async onDeleteExportTemplate(){this.dialog.add(DeleteExportListDialog,{text:_t("Do you really want to delete this export template?"),delete:async()=>{const id=Number(this.state.templateId);await this.orm.unlink("ir.exports",[id],{context:this.props.context});this.templates.splice(this.templates.findIndex((i)=>i.id===id),1);this.state.templateId=null;this.setDefaultExportList();},});}
onSearch(ev){this.state.search=this.lookup(ev.target.value);}
lookup(value){let lookupResult=fuzzyLookup(value,Object.values(this.knownFields),(field)=>field.string.split("/").reverse().join("/"));if(this.isDebug){lookupResult=unique([...lookupResult,...Object.values(this.knownFields).filter((f)=>{return f.id.includes(value);}),]);}
return lookupResult;}
onToggleCompatibleExport(value){this.state.isCompatible=value;this.fetchFields();}
async setDefaultExportList(){this.state.exportList=Object.values(this.knownFields).filter((e)=>e.default_export||this.props.defaultExportList.find((i)=>i.name===e.id));}
setFormat(ev){if(ev.target.checked){this.state.selectedFormat=this.availableFormats.findIndex(({tag})=>tag===ev.target.value);}}}
return __exports;});;

/* /web/static/src/views/view_dialogs/form_view_dialog.js */
odoo.define('@web/views/view_dialogs/form_view_dialog',['@web/core/dialog/dialog','@web/core/utils/hooks','@web/search/action_hook','@web/views/view','@odoo/owl'],function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{useChildRef,useService}=require("@web/core/utils/hooks");const{CallbackRecorder}=require("@web/search/action_hook");const{View}=require("@web/views/view");const{Component,onMounted}=require("@odoo/owl");const FormViewDialog=__exports.FormViewDialog=class FormViewDialog extends Component{static template="web.FormViewDialog";static components={Dialog,View};static props={close:Function,resModel:String,context:{type:Object,optional:true},nextRecordsContext:{type:Object,optional:true},mode:{optional:true,validate:(m)=>["edit","readonly"].includes(m),},onRecordSaved:{type:Function,optional:true},onRecordDiscarded:{type:Function,optional:true},removeRecord:{type:Function,optional:true},resId:{type:[Number,Boolean],optional:true},title:{type:String,optional:true},viewId:{type:[Number,Boolean],optional:true},preventCreate:{type:Boolean,optional:true},preventEdit:{type:Boolean,optional:true},isToMany:{type:Boolean,optional:true},size:Dialog.props.size,};static defaultProps={onRecordSaved:()=>{},preventCreate:false,preventEdit:false,isToMany:false,};setup(){super.setup();this.actionService=useService("action");this.modalRef=useChildRef();this.env.dialogData.dismiss=()=>this.discardRecord();const buttonTemplate=this.props.isToMany?"web.FormViewDialog.ToMany.buttons":"web.FormViewDialog.ToOne.buttons";this.currentResId=this.props.resId;this.viewProps={type:"form",buttonTemplate,context:this.props.context||{},display:{controlPanel:false},mode:this.props.mode||"edit",resId:this.props.resId||false,resModel:this.props.resModel,viewId:this.props.viewId||false,preventCreate:this.props.preventCreate,preventEdit:this.props.preventEdit,discardRecord:this.discardRecord.bind(this),saveRecord:async(record,{saveAndNew})=>{const saved=await record.save({reload:false});if(saved){this.currentResId=record.resId;await this.props.onRecordSaved(record);if(saveAndNew){this.currentResId=false;const context=this.props.nextRecordsContext||this.props.context||{};await record.model.load({resId:false,context});}else{this.props.close();}}
return saved;},__beforeLeave__:new CallbackRecorder(),};if(this.props.removeRecord){this.viewProps.removeRecord=async()=>{await this.props.removeRecord();this.props.close();};}
onMounted(()=>{if(this.modalRef.el.querySelector(".modal-footer").childElementCount>1){const defaultButton=this.modalRef.el.querySelector(".modal-footer button.o-default-button");if(defaultButton){defaultButton.classList.add("d-none");}}});}
async discardRecord(){if(this.props.onRecordDiscarded){await this.props.onRecordDiscarded();}
this.props.close();}
async onExpand(){const beforeLeaveCallbacks=this.viewProps.__beforeLeave__.callbacks;const res=await Promise.all(beforeLeaveCallbacks.map((callback)=>callback()));if(!res.includes(false)){this.actionService.doAction({type:"ir.actions.act_window",res_model:this.props.resModel,res_id:this.currentResId,views:[[false,"form"]],});}}}
return __exports;});;

/* /web/static/src/views/view_dialogs/select_create_dialog.js */
odoo.define('@web/views/view_dialogs/select_create_dialog',['@web/core/dialog/dialog','@web/core/utils/hooks','@web/core/utils/render','@web/views/view','@web/views/view_dialogs/form_view_dialog','@odoo/owl','@web/core/registry'],function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{useService}=require("@web/core/utils/hooks");const{renderToMarkup}=require("@web/core/utils/render");const{View}=require("@web/views/view");const{FormViewDialog}=require("@web/views/view_dialogs/form_view_dialog");const{Component,useState}=require("@odoo/owl");const{registry}=require("@web/core/registry");let _defaultNoContentHelp;function getDefaultNoContentHelp(){if(!_defaultNoContentHelp){_defaultNoContentHelp=renderToMarkup("web.SelectCreateDialog.DefaultNoContentHelp");}
return _defaultNoContentHelp;}
const SelectCreateDialog=__exports.SelectCreateDialog=class SelectCreateDialog extends Component{static components={Dialog,View};static template="web.SelectCreateDialog";static props={context:{type:Object,optional:true},domain:{type:Array,optional:true},dynamicFilters:{type:Array,optional:true},resModel:String,searchViewId:{type:[Number,{value:false}],optional:true},multiSelect:{type:Boolean,optional:true},onSelected:{type:Function,optional:true},close:{type:Function,optional:true},onCreateEdit:{type:Function,optional:true},title:{type:String,optional:true},noCreate:{type:Boolean,optional:true},onUnselect:{type:Function,optional:true},noContentHelp:{type:String,optional:true},};static defaultProps={dynamicFilters:[],multiSelect:true,searchViewId:false,domain:[],context:{},};setup(){this.viewService=useService("view");this.dialogService=useService("dialog");this.state=useState({resIds:[]});const noContentHelp=this.props.noContentHelp||getDefaultNoContentHelp();this.busy=false;this.baseViewProps={display:{searchPanel:false},editable:false,noBreadcrumbs:true,noContentHelp,showButtons:false,selectRecord:(resId)=>this.select([resId]),onSelectionChanged:(resIds)=>{this.state.resIds=resIds;},};}
get viewProps(){const type=this.env.isSmall?"kanban":"list";const props={loadIrFilters:true,...this.baseViewProps,context:this.props.context,domain:this.props.domain,dynamicFilters:this.props.dynamicFilters,resModel:this.props.resModel,searchViewId:this.props.searchViewId,type,};if(type==="list"){props.allowSelectors=this.props.multiSelect;}else if(type==="kanban"){props.forceGlobalClick=true;}
return props;}
async executeOnceAndClose(callback){if(!this.busy){this.busy=true;try{await callback();}catch(e){this.busy=false;throw e;}
this.props.close();}}
async select(resIds){if(this.props.onSelected){this.executeOnceAndClose(()=>this.props.onSelected(resIds));}}
async unselect(){if(this.props.onUnselect){this.executeOnceAndClose(()=>this.props.onUnselect());}}
get canUnselect(){return this.env.isSmall&&!!this.props.onUnselect;}
async createEditRecord(){if(this.props.onCreateEdit){await this.props.onCreateEdit();this.props.close();}else{this.dialogService.add(FormViewDialog,{context:this.props.context,resModel:this.props.resModel,onRecordSaved:(record)=>{this.props.onSelected([record.resId]);this.props.close();},});}}}
registry.category("dialogs").add("select_create",SelectCreateDialog);return __exports;});;

/* /web/static/src/views/view_hook.js */
odoo.define('@web/views/view_hook',['@web/core/registry','@web/core/utils/hooks','@web/core/browser/browser','@web/core/py_js/py','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{browser}=require("@web/core/browser/browser");const{evaluateExpr}=require("@web/core/py_js/py");const{useComponent,useEffect,xml}=require("@odoo/owl");__exports.useViewArch=useViewArch;function useViewArch(arch,params={}){const CATEGORY="__processed_archs__";arch=arch.trim();const processedRegistry=registry.category(CATEGORY);let processedArch;if(!processedRegistry.contains(arch)){processedArch={};processedRegistry.add(arch,processedArch);}else{processedArch=processedRegistry.get(arch);}
const{compile,extract}=params;if(!("template"in processedArch)&&compile){processedArch.template=xml`${compile(arch)}`;}
if(!("extracted"in processedArch)&&extract){processedArch.extracted=extract(arch);}
return processedArch;}
__exports.useActionLinks=useActionLinks;function useActionLinks({resModel,reload}){const component=useComponent();const keepLast=component.env.keepLast;const orm=useService("orm");const{doAction}=useService("action");async function handler(ev){ev.preventDefault();ev.stopPropagation();let target=ev.target;if(target.tagName!=="A"){target=target.closest("a");}
const data=target.dataset;if(data.method!==undefined&&data.model!==undefined){const options={};if(data.reloadOnClose){options.onClose=reload||(()=>component.render());}
const action=await keepLast.add(orm.call(data.model,data.method));if(action!==undefined){keepLast.add(Promise.resolve(doAction(action,options)));}}else if(target.getAttribute("name")){const options={};if(data.context){options.additionalContext=evaluateExpr(data.context);}
keepLast.add(doAction(target.getAttribute("name"),options));}else{let views;const resId=data.resid?parseInt(data.resid,10):null;if(data.views){views=evaluateExpr(data.views);}else{views=resId?[[false,"form"]]:[[false,"list"],[false,"form"],];}
const action={name:target.getAttribute("title")||target.textContent.trim(),type:"ir.actions.act_window",res_model:data.model||resModel,target:"current",views,domain:data.domain?evaluateExpr(data.domain):[],};if(resId){action.res_id=resId;}
const options={};if(data.context){options.additionalContext=evaluateExpr(data.context);}
keepLast.add(doAction(action,options));}}
return(ev)=>{const a=ev.target.closest(`a[type="action"]`);if(a&&ev.currentTarget.contains(a)){handler(ev);}};}
__exports.useBounceButton=useBounceButton;function useBounceButton(containerRef,shouldBounce){let timeout;const ui=useService("ui");useEffect((containerEl)=>{if(!containerEl){return;}
const handler=(ev)=>{const button=ui.activeElement.querySelector("[data-bounce-button]");if(button&&shouldBounce(ev.target)){button.classList.add("o_catch_attention");browser.clearTimeout(timeout);timeout=browser.setTimeout(()=>{button.classList.remove("o_catch_attention");},400);}};containerEl.addEventListener("click",handler);return()=>containerEl.removeEventListener("click",handler);},()=>[containerRef.el]);}
return __exports;});;

/* /web/static/src/views/view_service.js */
odoo.define('@web/views/view_service',['@web/core/network/rpc','@web/core/registry','@web/core/orm_service'],function(require){'use strict';let __exports={};const{rpcBus}=require("@web/core/network/rpc");const{registry}=require("@web/core/registry");const{UPDATE_METHODS}=require("@web/core/orm_service");const viewService=__exports.viewService={dependencies:["orm"],async:["loadViews"],start(env,{orm}){let cache={};function clearCache(){cache={};const processedArchs=registry.category("__processed_archs__");processedArchs.content={};processedArchs.trigger("UPDATE");}
env.bus.addEventListener("CLEAR-CACHES",clearCache);rpcBus.addEventListener("RPC:RESPONSE",(ev)=>{const{model,method}=ev.detail.data.params;if(["ir.ui.view","ir.filters"].includes(model)){if(UPDATE_METHODS.includes(method)){clearCache();}}});async function loadViews(params,options={}){const{context,resModel,views}=params;const loadViewsOptions={action_id:options.actionId||false,embedded_action_id:options.embeddedActionId||false,embedded_parent_res_id:options.embeddedParentResId||false,load_filters:options.loadIrFilters||false,toolbar:(!context?.disable_toolbar&&options.loadActionMenus)||false,};for(const key in options){if(!["actionId","embeddedActionId","embeddedParentResId","loadIrFilters","loadActionMenus",].includes(key)){loadViewsOptions[key]=options[key];}}
if(env.isSmall){loadViewsOptions.mobile=true;}
const filteredContext=Object.fromEntries(Object.entries(context||{}).filter(([k,v])=>k=="lang"||k.endsWith("_view_ref")));const key=JSON.stringify([resModel,views,filteredContext,loadViewsOptions]);if(!cache[key]){cache[key]=orm.call(resModel,"get_views",[],{context:filteredContext,views,options:loadViewsOptions,}).then((result)=>{const{models,views}=result;const viewDescriptions={fields:models[resModel].fields,relatedModels:models,views:{},};for(const viewType in views){const{arch,toolbar,id,filters,custom_view_id}=views[viewType];const viewDescription={arch,id,custom_view_id};if(toolbar){viewDescription.actionMenus=toolbar;}
if(filters){viewDescription.irFilters=filters;}
viewDescriptions.views[viewType]=viewDescription;}
return viewDescriptions;}).catch((error)=>{delete cache[key];return Promise.reject(error);});}
return cache[key];}
return{loadViews};},};registry.category("services").add("view",viewService);return __exports;});;

/* /web/static/src/views/widgets/attach_document/attach_document.js */
odoo.define('@web/views/widgets/attach_document/attach_document',['@web/core/file_input/file_input','@web/core/registry','@web/core/utils/hooks','@web/core/utils/files','@web/views/widgets/standard_widget_props','@odoo/owl'],function(require){'use strict';let __exports={};const{FileInput}=require("@web/core/file_input/file_input");const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{checkFileSize}=require("@web/core/utils/files");const{standardWidgetProps}=require("@web/views/widgets/standard_widget_props");const{Component}=require("@odoo/owl");const AttachDocumentWidget=__exports.AttachDocumentWidget=class AttachDocumentWidget extends Component{static template="web.AttachDocument";static components={FileInput,};static props={...standardWidgetProps,string:{type:String},action:{type:String,optional:true},highlight:{type:Boolean},};setup(){this.http=useService("http");this.notification=useService("notification");this.fileInput=document.createElement("input");this.fileInput.type="file";this.fileInput.accept="*";this.fileInput.multiple=true;this.fileInput.onchange=this.onInputChange.bind(this);}
async onInputChange(){const ufile=[...this.fileInput.files];for(const file of ufile){if(!checkFileSize(file.size,this.notification)){return null;}}
const fileData=await this.http.post("/web/binary/upload_attachment",{csrf_token:odoo.csrf_token,ufile:ufile,model:this.props.record.resModel,id:this.props.record.resId,},"text");const parsedFileData=JSON.parse(fileData);if(parsedFileData.error){throw new Error(parsedFileData.error);}
await this.onFileUploaded(parsedFileData);}
async triggerUpload(){if(await this.beforeOpen()){this.fileInput.click();}}
async onFileUploaded(files){const{action,record}=this.props;if(action){const{resId,resModel}=record;await this.env.services.orm.call(resModel,action,[resId],{attachment_ids:files.map((file)=>file.id),});await record.load();}}
beforeOpen(){return this.props.record.save();}}
const attachDocumentWidget=__exports.attachDocumentWidget={component:AttachDocumentWidget,extractProps:({attrs})=>{const{action,highlight,string}=attrs;return{action,highlight:!!highlight,string,};},};registry.category("view_widgets").add("attach_document",attachDocumentWidget);return __exports;});;

/* /web/static/src/views/widgets/documentation_link/documentation_link.js */
odoo.define('@web/views/widgets/documentation_link/documentation_link',['@web/session','@web/views/widgets/standard_widget_props','@odoo/owl','@web/core/registry'],function(require){'use strict';let __exports={};const{session}=require("@web/session");const{standardWidgetProps}=require("@web/views/widgets/standard_widget_props");const{Component}=require("@odoo/owl");const{registry}=require("@web/core/registry");const LINK_REGEX=new RegExp("^https?://");const DocumentationLink=__exports.DocumentationLink=class DocumentationLink extends Component{static template="web.DocumentationLink";static props={...standardWidgetProps,record:{type:Object,optional:1},path:{type:String},label:{type:String,optional:1},icon:{type:String,optional:1},alertLink:{type:Boolean,optional:1},};get url(){if(LINK_REGEX.test(this.props.path)){return this.props.path;}else{const serverVersion=session.server_version_info.includes("final")?`${session.server_version_info[0]}.${session.server_version_info[1]}`.replace("~","-"):"master";return"https://www.odoo.com/documentation/"+serverVersion+this.props.path;}}
get classes(){let classes="o_doc_link me-2";if(this.props.alertLink){classes+=" alert-link";}
return classes;}}
const documentationLink=__exports.documentationLink={component:DocumentationLink,extractProps:({attrs})=>{const{path,label,icon,alert_link}=attrs;return{path,label,icon,alertLink:Boolean(alert_link),};},additionalClasses:["d-inline"],};registry.category("view_widgets").add("documentation_link",documentationLink);return __exports;});;

/* /web/static/src/views/widgets/notification_alert/notification_alert.js */
odoo.define('@web/views/widgets/notification_alert/notification_alert',['@web/core/browser/browser','@web/core/registry','@web/views/widgets/standard_widget_props','@odoo/owl'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const{standardWidgetProps}=require("@web/views/widgets/standard_widget_props");const{Component}=require("@odoo/owl");const NotificationAlert=__exports.NotificationAlert=class NotificationAlert extends Component{static props=standardWidgetProps;static template="web.NotificationAlert";get isNotificationBlocked(){return browser.Notification&&browser.Notification.permission==="denied";}}
const notificationAlert=__exports.notificationAlert={component:NotificationAlert,};registry.category("view_widgets").add("notification_alert",notificationAlert);return __exports;});;

/* /web/static/src/views/widgets/ribbon/ribbon.js */
odoo.define('@web/views/widgets/ribbon/ribbon',['@web/core/l10n/translation','@web/core/registry','@web/views/widgets/standard_widget_props','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{standardWidgetProps}=require("@web/views/widgets/standard_widget_props");const{Component}=require("@odoo/owl");class RibbonWidget extends Component{static template="web.Ribbon";static props={...standardWidgetProps,text:{type:String},title:{type:String,optional:true},bgClass:{type:String,optional:true},};static defaultProps={title:"",bgClass:"text-bg-success",};get classes(){let classes=this.props.bgClass;if(this.props.text.length>15){classes+=" o_small";}else if(this.props.text.length>10){classes+=" o_medium";}
return classes;}}
const ribbonWidget=__exports.ribbonWidget={component:RibbonWidget,extractProps:({attrs})=>{return{text:attrs.title||attrs.text,title:attrs.tooltip,bgClass:attrs.bg_color,};},supportedAttributes:[{label:_t("Title"),name:"title",type:"string",},{label:_t("Background color"),name:"bg_color",type:"string",},{label:_t("Tooltip"),name:"tooltip",type:"string",},],};registry.category("view_widgets").add("web_ribbon",ribbonWidget);return __exports;});;

/* /web/static/src/views/widgets/signature/signature.js */
odoo.define('@web/views/widgets/signature/signature',['@web/core/registry','@web/core/signature/signature_dialog','@web/core/utils/hooks','@web/views/widgets/standard_widget_props','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{SignatureDialog}=require("@web/core/signature/signature_dialog");const{useService}=require("@web/core/utils/hooks");const{standardWidgetProps}=require("@web/views/widgets/standard_widget_props");const{Component}=require("@odoo/owl");const SignatureWidget=__exports.SignatureWidget=class SignatureWidget extends Component{static template="web.SignatureWidget";static props={...standardWidgetProps,fullName:{type:String,optional:true},highlight:{type:Boolean,optional:true},string:{type:String},signatureField:{type:String,optional:true},};setup(){this.dialogService=useService("dialog");this.orm=useService("orm");}
onClickSignature(){const nameAndSignatureProps={mode:"draw",displaySignatureRatio:3,signatureType:"signature",noInputName:true,};const{fullName,record}=this.props;let defaultName="";if(fullName){let signName;const fullNameData=record.data[fullName];if(record.fields[fullName].type==="many2one"){signName=fullNameData&&fullNameData[1];}else{signName=fullNameData;}
defaultName=signName===""?undefined:signName;}
nameAndSignatureProps.defaultFont=this.props.defaultFont;const dialogProps={defaultName,nameAndSignatureProps,uploadSignature:(data)=>this.uploadSignature(data),};this.dialogService.add(SignatureDialog,dialogProps);}
async uploadSignature({signatureImage}){const file=signatureImage.split(",")[1];const{model,resModel,resId}=this.props.record;await this.env.services.orm.write(resModel,[resId],{[this.props.signatureField]:file,});await this.props.record.load();model.notify();}}
const signatureWidget=__exports.signatureWidget={component:SignatureWidget,extractProps:({attrs})=>{const{full_name:fullName,highlight,signature_field,string}=attrs;return{fullName,highlight:!!highlight,string,signatureField:signature_field||"signature",};},};registry.category("view_widgets").add("signature",signatureWidget);return __exports;});;

/* /web/static/src/views/widgets/standard_widget_props.js */
odoo.define('@web/views/widgets/standard_widget_props',[],function(require){'use strict';let __exports={};const standardWidgetProps=__exports.standardWidgetProps={readonly:{type:Boolean,optional:true},record:{type:Object},};return __exports;});;

/* /web/static/src/views/widgets/week_days/week_days.js */
odoo.define('@web/views/widgets/week_days/week_days',['@web/core/registry','@web/core/checkbox/checkbox','@web/core/l10n/localization','@web/core/l10n/translation','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{CheckBox}=require("@web/core/checkbox/checkbox");const{localization}=require("@web/core/l10n/localization");const{_t}=require("@web/core/l10n/translation");const{Component}=require("@odoo/owl");const WEEKDAYS=["sun","mon","tue","wed","thu","fri","sat"];const WeekDays=__exports.WeekDays=class WeekDays extends Component{static template="web.WeekDays";static components={CheckBox};static props={record:Object,readonly:Boolean,};get weekdays(){return[...WEEKDAYS.slice(localization.weekStart%WEEKDAYS.length,WEEKDAYS.length),...WEEKDAYS.slice(0,localization.weekStart%WEEKDAYS.length),];}
get data(){return Object.fromEntries(this.weekdays.map((day)=>[day,this.props.record.data[day]]));}
onChange(day,checked){this.props.record.update({[day]:checked});}}
const weekDays=__exports.weekDays={component:WeekDays,fieldDependencies:[{name:"sun",type:"boolean",string:_t("Sun"),readonly:false},{name:"mon",type:"boolean",string:_t("Mon"),readonly:false},{name:"tue",type:"boolean",string:_t("Tue"),readonly:false},{name:"wed",type:"boolean",string:_t("Wed"),readonly:false},{name:"thu",type:"boolean",string:_t("Thu"),readonly:false},{name:"fri",type:"boolean",string:_t("Fri"),readonly:false},{name:"sat",type:"boolean",string:_t("Sat"),readonly:false},],};registry.category("view_widgets").add("week_days",weekDays);return __exports;});;

/* /web/static/src/views/widgets/widget.js */
odoo.define('@web/views/widgets/widget',['@web/core/py_js/py','@web/core/registry','@odoo/owl'],function(require){'use strict';let __exports={};const{evaluateExpr,evaluateBooleanExpr}=require("@web/core/py_js/py");const{registry}=require("@web/core/registry");const{Component,xml}=require("@odoo/owl");const viewWidgetRegistry=registry.category("view_widgets");const supportedInfoValidation={type:Array,element:Object,shape:{label:String,name:String,type:String,availableTypes:{type:Array,element:String,optional:true},default:{type:String,optional:true},help:{type:String,optional:true},choices:{type:Array,element:Object,shape:{label:String,value:String},optional:true,},},optional:true,};viewWidgetRegistry.addValidation({component:{validate:(c)=>c.prototype instanceof Component},extractProps:{type:Function,optional:true},additionalClasses:{type:Array,element:String,optional:true},fieldDependencies:{type:[Function,{type:Array,element:Object,shape:{name:String,type:String}}],optional:true,},listViewWidth:{type:[Number,{type:Array,element:Number,validate:(array)=>array.length===1||array.length===2,},Function,],optional:true,},supportedAttributes:supportedInfoValidation,supportedOptions:supportedInfoValidation,});const Widget=__exports.Widget=class Widget extends Component{static template=xml`
        <div t-att-class="classNames" t-att-style="props.style">
            <t t-component="widget.component" t-props="widgetProps" />
        </div>`;static parseWidgetNode=function(node){const name=node.getAttribute("name");const widget=viewWidgetRegistry.get(name);const widgetInfo={name,widget,options:{},attrs:{},};for(const{name,value}of node.attributes){if(["name","widget"].includes(name)){continue;}
if(name==="options"){widgetInfo.options=evaluateExpr(value);}else if(!name.startsWith("t-att")){widgetInfo.attrs[name]=value;}}
return widgetInfo;};static props={"*":true,};setup(){if(this.props.widgetInfo){this.widget=this.props.widgetInfo.widget;}else{this.widget=viewWidgetRegistry.get(this.props.name);}}
get classNames(){const classNames={o_widget:true,[`o_widget_${this.props.name}`]:true,[this.props.className]:Boolean(this.props.className),};if(this.widget.additionalClasses){for(const cls of this.widget.additionalClasses){classNames[cls]=true;}}
return classNames;}
get widgetProps(){const record=this.props.record;let readonlyFromModifiers=false;let propsFromNode={};if(this.props.widgetInfo){const widgetInfo=this.props.widgetInfo;readonlyFromModifiers=evaluateBooleanExpr(widgetInfo.attrs.readonly,record.evalContextWithVirtualIds);const dynamicInfo={readonly:readonlyFromModifiers,};propsFromNode=this.widget.extractProps?this.widget.extractProps(widgetInfo,dynamicInfo):{};}
return{record,readonly:!record.isInEdition||readonlyFromModifiers||false,...propsFromNode,};}}
return __exports;});;

/* /web/static/src/search/action_hook.js */
odoo.define('@web/search/action_hook',['@odoo/owl'],function(require){'use strict';let __exports={};const{onMounted,useComponent,useEffect,useExternalListener}=require("@odoo/owl");const scrollSymbol=__exports.scrollSymbol=Symbol("scroll");const CallbackRecorder=__exports.CallbackRecorder=class CallbackRecorder{constructor(){this.setup();}
setup(){this._callbacks=[];}
get callbacks(){return this._callbacks.map(({callback})=>callback);}
add(owner,callback){if(!callback){throw new Error("Missing callback");}
this._callbacks.push({owner,callback});}
remove(owner){this._callbacks=this._callbacks.filter((s)=>s.owner!==owner);}}
__exports.useCallbackRecorder=useCallbackRecorder;function useCallbackRecorder(callbackRecorder,callback){const component=useComponent();useEffect(()=>{callbackRecorder.add(component,callback);return()=>callbackRecorder.remove(component);},()=>[]);}
__exports.useSetupAction=useSetupAction;function useSetupAction(params={}){const component=useComponent();const{__beforeLeave__,__getGlobalState__,__getLocalState__,__getContext__,__getOrderBy__,}=component.env;const{beforeVisibilityChange,beforeUnload,beforeLeave,getGlobalState,getLocalState,rootRef,}=params;if(beforeVisibilityChange){useExternalListener(document,"visibilitychange",beforeVisibilityChange);}
if(beforeUnload){useExternalListener(window,"beforeunload",beforeUnload);}
if(__beforeLeave__&&beforeLeave){useCallbackRecorder(__beforeLeave__,beforeLeave);}
if(__getGlobalState__&&(getGlobalState||rootRef)){useCallbackRecorder(__getGlobalState__,()=>{const state={};if(getGlobalState){Object.assign(state,getGlobalState());}
return state;});}
if(__getLocalState__&&(getLocalState||rootRef)){useCallbackRecorder(__getLocalState__,()=>{const state={};if(getLocalState){Object.assign(state,getLocalState());}
if(rootRef){if(component.env.isSmall){state[scrollSymbol]={root:{left:rootRef.el.scrollLeft,top:rootRef.el.scrollTop},};}else{const contentEl=rootRef.el.querySelector(".o_component_with_search_panel > .o_renderer_with_searchpanel,"+".o_component_with_search_panel > .o_renderer")||rootRef.el.querySelector(".o_content");if(contentEl){state[scrollSymbol]={content:{left:contentEl.scrollLeft,top:contentEl.scrollTop},};}}}
return state;});if(rootRef){onMounted(()=>{const{state}=component.props;const scrolling=state&&state[scrollSymbol];if(scrolling){if(component.env.isSmall){rootRef.el.scrollTop=(scrolling.root&&scrolling.root.top)||0;rootRef.el.scrollLeft=(scrolling.root&&scrolling.root.left)||0;}else if(scrolling.content){const contentEl=rootRef.el.querySelector(".o_component_with_search_panel > .o_renderer_with_searchpanel,"+".o_component_with_search_panel > .o_renderer")||rootRef.el.querySelector(".o_content");if(contentEl){contentEl.scrollTop=scrolling.content.top||0;contentEl.scrollLeft=scrolling.content.left||0;}}}});}}
if(__getContext__&&params.getContext){useCallbackRecorder(__getContext__,params.getContext);}
if(__getOrderBy__&&params.getOrderBy){useCallbackRecorder(__getOrderBy__,params.getOrderBy);}}
return __exports;});;

/* /web/static/src/search/action_menus/action_menus.js */
odoo.define('@web/search/action_menus/action_menus',['@web/core/browser/browser','@web/core/context','@web/session','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/core/l10n/translation','@web/core/utils/hooks','@odoo/owl'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{makeContext}=require("@web/core/context");const{session}=require("@web/session");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{_t}=require("@web/core/l10n/translation");const{useService}=require("@web/core/utils/hooks");const{Component,onWillStart,onWillUpdateProps,useState}=require("@odoo/owl");const STATIC_ACTIONS_GROUP_NUMBER=__exports.STATIC_ACTIONS_GROUP_NUMBER=1;const ACTIONS_GROUP_NUMBER=__exports.ACTIONS_GROUP_NUMBER=100;const ActionMenus=__exports.ActionMenus=class ActionMenus extends Component{static template="web.ActionMenus";static components={Dropdown,DropdownItem,};static props={getActiveIds:Function,context:Object,resModel:String,printDropdownTitle:{type:String,optional:true},domain:{type:Array,optional:true},isDomainSelected:{type:Boolean,optional:true},items:{type:Object,shape:{action:{type:Array,optional:true},print:{type:Array,optional:true},},},onActionExecuted:{type:Function,optional:true},shouldExecuteAction:{type:Function,optional:true},loadExtraPrintItems:{type:Function,optional:true},};static defaultProps={printDropdownTitle:_t("Print"),onActionExecuted:()=>{},shouldExecuteAction:()=>true,loadExtraPrintItems:()=>[],};setup(){this.orm=useService("orm");this.actionService=useService("action");this.state=useState({printItems:[]})
onWillStart(async()=>{this.actionItems=await this.getActionItems(this.props);});onWillUpdateProps(async(nextProps)=>{this.actionItems=await this.getActionItems(nextProps);});}
async getActionItems(props){return(props.items.action||[]).map((action)=>{if(action.callback){return Object.assign({key:`action-${action.description}`,groupNumber:ACTIONS_GROUP_NUMBER},action);}else{return{action,description:action.name,key:action.id,groupNumber:action.groupNumber||ACTIONS_GROUP_NUMBER,};}});}
async executeAction(action){let activeIds=this.props.getActiveIds();if(this.props.isDomainSelected){activeIds=await this.orm.search(this.props.resModel,this.props.domain,{limit:session.active_ids_limit,context:this.props.context,});}
const activeIdsContext={active_id:activeIds[0],active_ids:activeIds,active_model:this.props.resModel,};if(this.props.domain){activeIdsContext.active_domain=this.props.domain;}
const context=makeContext([this.props.context,activeIdsContext]);return this.actionService.doAction(action.id,{additionalContext:context,onClose:this.props.onActionExecuted,});}
async onItemSelected(item){if(!(await this.props.shouldExecuteAction(item))){return;}
if(item.callback){item.callback([item]);}else if(item.action){this.executeAction(item.action);}else if(item.url){browser.location=item.url;}}
async loadAvailablePrintItems(){const printActions=this.props.items.print||[];const actionWithDomainIds=[];const validActionIds=[];for(const action of printActions){"domain"in action?actionWithDomainIds.push(action.id):validActionIds.push(action.id);}
if(actionWithDomainIds.length){const validActionsWithDomainIds=await this.orm.call("ir.actions.report","get_valid_action_reports",[actionWithDomainIds,this.props.resModel,this.props.getActiveIds()]);validActionIds.push(...validActionsWithDomainIds);}
return printActions.filter((action)=>validActionIds.includes(action.id)).map((action)=>({action,class:"o_menu_item",description:action.name,key:action.id,}));}
async loadPrintItems(){if(!this.props.items.print?.length){return;}
const[items,extraItems]=await Promise.all([this.loadAvailablePrintItems(),this.props.loadExtraPrintItems(),]);const allItems=[...extraItems,...items];if(!allItems.length){allItems.push({description:_t("No report available."),class:"o_menu_item disabled",key:"nothing_to_display",});}
this.state.printItems=allItems;}}
return __exports;});;

/* /web/static/src/search/breadcrumbs/breadcrumbs.js */
odoo.define('@web/search/breadcrumbs/breadcrumbs',['@odoo/owl','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{_t}=require("@web/core/l10n/translation");const Breadcrumbs=__exports.Breadcrumbs=class Breadcrumbs extends Component{static template="web.Breadcrumbs";static components={Dropdown,DropdownItem};static props={breadcrumbs:Array,slots:{type:Object,optional:true},};getBreadcrumbTooltip({isFormView,name}){if(isFormView){return _t("Back to “%s” form",name);}
return _t("Back to “%s”",name);}}
return __exports;});;

/* /web/static/src/search/cog_menu/cog_menu.js */
odoo.define('@web/search/cog_menu/cog_menu',['@web/core/registry','@web/core/dropdown/dropdown','@web/search/action_menus/action_menus','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{Dropdown}=require("@web/core/dropdown/dropdown");const{ActionMenus}=require("@web/search/action_menus/action_menus");const{onWillStart,onWillUpdateProps}=require("@odoo/owl");const cogMenuRegistry=registry.category("cogMenu");const CogMenu=__exports.CogMenu=class CogMenu extends ActionMenus{static template="web.CogMenu";static components={...ActionMenus.components,Dropdown,};static props={...ActionMenus.props,getActiveIds:{type:ActionMenus.props.getActiveIds,optional:true},context:{type:ActionMenus.props.context,optional:true},resModel:{type:ActionMenus.props.resModel,optional:true},items:{...ActionMenus.props.items,optional:true},};static defaultProps={...ActionMenus.defaultProps,items:{},};setup(){super.setup();onWillStart(async()=>{this.registryItems=await this._registryItems();});onWillUpdateProps(async()=>{this.registryItems=await this._registryItems();});}
get hasItems(){return this.cogItems.length||this.props.items.print?.length;}
async _registryItems(){const items=[];for(const item of cogMenuRegistry.getAll()){if("isDisplayed"in item?await item.isDisplayed(this.env):true){items.push({Component:item.Component,groupNumber:item.groupNumber,key:item.Component.name,});}}
return items;}
get cogItems(){return[...this.actionItems,...this.registryItems].sort((item1,item2)=>{const grp=(item1.groupNumber||0)-(item2.groupNumber||0);if(grp!==0){return grp;}
return(item1.sequence||0)-(item2.sequence||0);});}}
return __exports;});;

/* /web/static/src/search/control_panel/control_panel.js */
odoo.define('@web/search/control_panel/control_panel',['@web/core/l10n/translation','@web/core/browser/browser','@web/core/hotkeys/hotkey_service','@web/core/pager/pager','@web/core/utils/hooks','@web/core/dropdown/dropdown','@web/core/commands/command_hook','@web/core/dropdown/dropdown_item','@web/core/hotkeys/hotkey_hook','@web/core/utils/sortable_owl','@web/core/user','@web/core/dropdown/accordion_item','@web/core/checkbox/checkbox','@web/core/context','@web/core/confirmation_dialog/confirmation_dialog','@web/core/transition','@web/search/breadcrumbs/breadcrumbs','@web/search/search_bar/search_bar','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{browser}=require("@web/core/browser/browser");const{getActiveHotkey}=require("@web/core/hotkeys/hotkey_service");const{Pager}=require("@web/core/pager/pager");const{useService}=require("@web/core/utils/hooks");const{Dropdown}=require("@web/core/dropdown/dropdown");const{useCommand}=require("@web/core/commands/command_hook");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{useHotkey}=require("@web/core/hotkeys/hotkey_hook");const{useSortable}=require("@web/core/utils/sortable_owl");const{user}=require("@web/core/user");const{AccordionItem}=require("@web/core/dropdown/accordion_item");const{CheckBox}=require("@web/core/checkbox/checkbox");const{makeContext}=require("@web/core/context");const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{Transition}=require("@web/core/transition");const{Breadcrumbs}=require("@web/search/breadcrumbs/breadcrumbs");const{SearchBar}=require("@web/search/search_bar/search_bar");const{Component,useState,onMounted,useExternalListener,useRef,useEffect}=require("@odoo/owl");const STICKY_CLASS="o_mobile_sticky";const ControlPanel=__exports.ControlPanel=class ControlPanel extends Component{static template="web.ControlPanel";static components={Pager,SearchBar,Dropdown,DropdownItem,Breadcrumbs,AccordionItem,CheckBox,Transition,};static props={display:{type:Object,optional:true},slots:{type:Object,optional:true},};setup(){this.actionService=useService("action");this.pagerProps=this.env.config.pagerProps?useState(this.env.config.pagerProps):undefined;this.notificationService=useService("notification");this.breadcrumbs=useState(this.env.config.breadcrumbs);this.orm=useService("orm");this.dialogService=useService("dialog");this.root=useRef("root");this.newActionNameRef=useRef("newActionNameRef");this.isEmbeddedActionsOrderModifiable=false;this.defaultEmbeddedActions=this.env.config.embeddedActions;if(this.env.config.embeddedActions?.length>0&&!this.env.config.parentActionId){const{parent_res_model,parent_action_id}=this.env.config.embeddedActions[0];this.defaultEmbeddedActions=[{id:false,name:this.env.config?.actionName,parent_action_id,parent_res_model,action_id:parent_action_id,user_id:false,context:{},},...this.env.config.embeddedActions,];this.env.config.setEmbeddedActions(this.defaultEmbeddedActions);}
const parentActionId=this.env.config.parentActionId||this.env.config.embeddedActions?.[0]?.parent_action_id[0]||this.env.config.embeddedActions?.[0]?.parent_action_id||"";this.embeddedActionsVisibilityKey=`visibleEmbeddedActions${parentActionId}+${
            this.env.searchModel?.globalContext.active_id || ""
        }+${user.userId}`;this.embeddedVisibilityKey=`visibleEmbedded${parentActionId}+${
            this.env.searchModel?.globalContext.active_id || ""
        }+${user.userId}`;this.embeddedOrderKey=`orderEmbedded${parentActionId}+${
            this.env.searchModel?.globalContext.active_id || ""
        }+${user.userId}`;this.state=useState({showSearchBar:false,showMobileSearch:false,showViewSwitcher:false,embeddedInfos:{showEmbedded:this.env.config.embeddedActions?.length>0&&((!!this.env.config.parentActionId&&!!JSON.parse(browser.localStorage.getItem("showEmbeddedActions")))||!!JSON.parse(browser.localStorage.getItem(this.embeddedVisibilityKey))),embeddedActions:this.defaultEmbeddedActions||[],newActionIsShared:false,newActionName:this.newActionNameGetter,visibleEmbeddedActions:(this.env.config.embeddedActions?.length>0&&JSON.parse(browser.localStorage.getItem(this.embeddedActionsVisibilityKey)))||{},currentEmbeddedAction:this.currentEmbeddedAction,},});this.onScrollThrottledBound=this.onScrollThrottled.bind(this);const{viewSwitcherEntries,viewType}=this.env.config;for(const view of viewSwitcherEntries||[]){useCommand(_t("Show %s view",view.name),()=>this.switchView(view.type),{category:"view_switcher",isAvailable:()=>view.type!==viewType,});}
if(viewSwitcherEntries?.length>1){useHotkey("alt+shift+v",()=>{this.cycleThroughViews();},{bypassEditableProtection:true,withOverlay:()=>this.root.el.querySelector("nav.o_cp_switch_buttons"),});}
useExternalListener(window,"click",this.onWindowClick);useEffect(()=>{if(!this.env.isSmall||("adaptToScroll"in this.display&&!this.display.adaptToScroll)){return;}
const scrollingEl=this.getScrollingElement();scrollingEl.addEventListener("scroll",this.onScrollThrottledBound);this.root.el.style.top="0px";return()=>{scrollingEl.removeEventListener("scroll",this.onScrollThrottledBound);};});onMounted(async()=>{if(this.state.embeddedInfos.embeddedActions?.length>0){const embeddedActionKey=this.state.embeddedInfos.currentEmbeddedAction?.id||false;if(!Object.keys(this.state.embeddedInfos.visibleEmbeddedActions).includes(embeddedActionKey.toString())){this._setVisibility(embeddedActionKey);}
const embeddedOrderLocalStorageKey=browser.localStorage.getItem(this.embeddedOrderKey);if(embeddedOrderLocalStorageKey){this._sortEmbeddedActions(JSON.parse(embeddedOrderLocalStorageKey));}}
if(!this.env.isSmall||("adaptToScroll"in this.display&&!this.display.adaptToScroll)){return;}
this.oldScrollTop=0;this.lastScrollTop=0;this.initialScrollTop=this.getScrollingElement().scrollTop;});this.mainButtons=useRef("mainButtons");useEffect(()=>{const dropdownButtons=this.mainButtons.el.querySelectorAll(".o_control_panel_collapsed_create.dropdown-menu button");if(!dropdownButtons.length){this.mainButtons.el.querySelectorAll(".o_control_panel_collapsed_create.dropdown-menu, .o_control_panel_collapsed_create.dropdown-toggle").forEach((el)=>el.classList.add("d-none"));this.mainButtons.el.querySelectorAll(".o_control_panel_collapsed_create.btn-group").forEach((el)=>el.classList.remove("btn-group"));return;}
for(const button of dropdownButtons){for(const cl of Array.from(button.classList)){button.classList.toggle(cl,!cl.startsWith("btn-"));}
button.classList.add("dropdown-item","btn","btn-link");}});useSortable({enable:true,ref:this.root,elements:".o_draggable",cursor:"move",delay:200,tolerance:10,onWillStartDrag:(params)=>this._sortEmbeddedActionStart(params),onDrop:(params)=>this._sortEmbeddedActionDrop(params),});}
getDropdownClass(action){return(!this.env.isSmall&&this._checkValueLocalStorage(action))||(this.env.isSmall&&this.state.embeddedInfos.currentEmbeddedAction?.id===action.id)?"selected":"";}
getScrollingElement(){return this.root.el.parentElement;}
get currentEmbeddedAction(){if(!this.env.config){return{};}
const{currentEmbeddedActionId}=this.env.config;return(this.defaultEmbeddedActions?.find(({id})=>id===currentEmbeddedActionId)||this.defaultEmbeddedActions?.[0]);}
get newActionNameGetter(){if(this.currentEmbeddedAction?.name){return _t("Custom %s",this.currentEmbeddedAction.name);}else{return _t("Custom Embedded Action");}}
resetSearchState(){Object.assign(this.state,{showSearchBar:false,showMobileSearch:false,showViewSwitcher:false,});}
get display(){return{layoutActions:true,...this.props.display,};}
onClickShowEmbedded(){if(this.state.embeddedInfos.showEmbedded){browser.localStorage.removeItem(this.embeddedVisibilityKey);}else{browser.localStorage.setItem(this.embeddedVisibilityKey,true);}
this.state.embeddedInfos.showEmbedded=!this.state.embeddedInfos.showEmbedded;browser.localStorage.setItem("showEmbeddedActions",this.state.embeddedInfos.showEmbedded);}
onScrollThrottled(){if(this.isScrolling){return;}
this.isScrolling=true;browser.requestAnimationFrame(()=>(this.isScrolling=false));const scrollTop=this.getScrollingElement().scrollTop;const delta=Math.round(scrollTop-this.oldScrollTop);if(scrollTop>this.initialScrollTop){this.root.el.classList.add(STICKY_CLASS);if(delta<0){this.lastScrollTop=Math.min(0,this.lastScrollTop-delta);}else{this.lastScrollTop=Math.max(-this.root.el.offsetHeight,-this.root.el.offsetTop-delta);}
this.root.el.style.top=`${this.lastScrollTop}px`;}else{this.root.el.classList.remove(STICKY_CLASS);this.lastScrollTop=0;}
this.oldScrollTop=scrollTop;}
switchView(viewType){this.resetSearchState();this.actionService.switchView(viewType);}
cycleThroughViews(){const currentViewType=this.env.config.viewType;const viewSwitcherEntries=this.env.config.viewSwitcherEntries;const currentIndex=viewSwitcherEntries.findIndex((entry)=>entry.type===currentViewType);const nextIndex=(currentIndex+1)%viewSwitcherEntries.length;this.switchView(viewSwitcherEntries[nextIndex].type);}
onWindowClick(ev){if(this.state.showViewSwitcher&&!ev.target.closest(".o_cp_switch_buttons")){this.state.showViewSwitcher=false;}}
onMainButtonsKeydown(ev){const hotkey=getActiveHotkey(ev);if(hotkey==="arrowdown"){this.env.searchModel.trigger("focus-view");ev.preventDefault();ev.stopPropagation();}}
_checkValueLocalStorage(action){const actionIdStr=action.id.toString();return this.state.embeddedInfos.visibleEmbeddedActions[actionIdStr];}
_setVisibility(actionId){const actionIdStr=actionId.toString();if(this.state.embeddedInfos.visibleEmbeddedActions[actionIdStr]){delete this.state.embeddedInfos.visibleEmbeddedActions[actionIdStr];}else{this.state.embeddedInfos.visibleEmbeddedActions[actionIdStr]=true;}
browser.localStorage.setItem(this.embeddedActionsVisibilityKey,JSON.stringify(this.state.embeddedInfos.visibleEmbeddedActions));}
_onShareCheckboxChange(){this.state.embeddedInfos.newActionIsShared=!this.state.embeddedInfos.newActionIsShared;}
async _saveNewAction(ev){const{newActionName,newActionIsShared,embeddedActions,currentEmbeddedAction,visibleEmbeddedActions,}=this.state.embeddedInfos;if(!newActionName){this.notificationService.add(_t("A name for your new action is required."),{type:"danger",});ev.stopPropagation();return this.newActionNameRef.el.focus();}
const duplicateName=embeddedActions.some(({name})=>name===newActionName);if(duplicateName){this.notificationService.add(_t("An action with the same name already exists."),{type:"danger",});ev.stopPropagation();return this.newActionNameRef.el.focus();}
const userId=newActionIsShared?false:user.userId;const{parent_action_id,action_id,parent_res_model,python_method,domain,context,groups_ids,}=currentEmbeddedAction;const values={parent_action_id:parent_action_id[0],parent_res_model,parent_res_id:this.env.searchModel.globalContext.active_id,user_id:userId,is_deletable:true,default_view_mode:this.env.config.viewType,domain,context,groups_ids,name:newActionName,};if(python_method){values.python_method=python_method;}else{values.action_id=action_id[0]||this.env.config.actionId;}
const embeddedActionId=await this.orm.create("ir.embedded.actions",[values]);const description=`${newActionName}`;this.env.searchModel.createNewFavorite({description,isDefault:true,isShared:newActionIsShared,embeddedActionId:embeddedActionId[0],});Object.assign(this.state.embeddedInfos,{newActionName:"",newActionIsShared:false,});const enrichedNewEmbeddedAction={...values,parent_action_id,action_id,id:embeddedActionId[0],};this.state.embeddedInfos.embeddedActions.push(enrichedNewEmbeddedAction);const embeddedActionIdStr=embeddedActionId[0].toString();visibleEmbeddedActions[embeddedActionIdStr]=true;const order=this.state.embeddedInfos.embeddedActions.map((el)=>el.id);browser.localStorage.setItem(this.embeddedActionsVisibilityKey,JSON.stringify(visibleEmbeddedActions));browser.localStorage.setItem(this.embeddedOrderKey,JSON.stringify(order));this.env.config.setCurrentEmbeddedAction(embeddedActionId);this.state.embeddedInfos.currentEmbeddedAction=enrichedNewEmbeddedAction;this.state.embeddedInfos.newActionName=`${newActionName} Custom`;}
openConfirmationDialog(action){const dialogProps={title:_t("Warning"),body:action.user_id?_t("Are you sure that you want to remove this embedded action?"):_t("This embedded action is global and will be removed for everyone."),confirmLabel:_t("Delete"),confirm:async()=>await this._deleteEmbeddedAction(action),cancel:()=>{},};this.dialogService.add(ConfirmationDialog,dialogProps);}
async _deleteEmbeddedAction(action){const{visibleEmbeddedActions,embeddedActions,currentEmbeddedAction}=this.state.embeddedInfos;const actionIdStr=action.id.toString();if(visibleEmbeddedActions[actionIdStr]){delete visibleEmbeddedActions[actionIdStr];}
browser.localStorage.setItem(this.embeddedActionsVisibilityKey,JSON.stringify(visibleEmbeddedActions));this.state.embeddedInfos.embeddedActions=embeddedActions.filter(({id})=>id!==action.id);await this.orm.unlink("ir.embedded.actions",[action.id]);if(action.id===currentEmbeddedAction?.id){const{active_id,active_model}=this.env.searchModel.globalContext;const actionContext=action.context?makeContext([action.context]):{};const additionalContext={...actionContext,active_id,active_model,};this.actionService.doAction(action.parent_action_id[0]||action.parent_action_id,{additionalContext,stackPosition:"replaceCurrentAction",});}}
async onEmbeddedActionClick(action){this.env.config.setEmbeddedActions(this.state.embeddedInfos.embeddedActions);const{active_id,active_model}=this.env.searchModel.globalContext;const actionContext=action.context?makeContext([action.context]):{};const context={...actionContext,active_id,active_model,current_embedded_action_id:action.id,parent_action_embedded_actions:this.state.embeddedInfos.embeddedActions,parent_action_id:action.parent_action_id[0]||action.parent_action_id,};this.actionService.doActionButton({type:action.python_method?"object":"action",resId:this.env.searchModel?.globalContext.active_id,name:action.python_method||action.action_id[0]||action.action_id,resModel:action.parent_res_model,context,stackPosition:this.env.config.parentActionId?"replaceCurrentAction":"",viewType:action.default_view_mode,},{isEmbeddedAction:true});}
_sortEmbeddedActions(order){this.state.embeddedInfos.embeddedActions=this.state.embeddedInfos.embeddedActions.sort((a,b)=>{const indexA=order.indexOf(a.id);if(!indexA){return-1;}
const indexB=order.indexOf(b.id);if(!indexB){return 1;}
return indexA-indexB;});}
_sortEmbeddedActionStart({element,addClass}){addClass(element,"o_dragged_embedded_action");}
_sortEmbeddedActionDrop({element,previous}){const order=this.state.embeddedInfos.embeddedActions.map((el)=>el.id);const elementId=Number(element.dataset.id)||false;const elementIndex=order.indexOf(elementId);order.splice(elementIndex,1);if(previous){const prevIndex=order.indexOf(Number(previous.dataset.id)||false);order.splice(prevIndex+1,0,elementId);}else{order.splice(0,0,elementId);}
this._sortEmbeddedActions(order);browser.localStorage.setItem(this.embeddedOrderKey,JSON.stringify(order));}}
return __exports;});;

/* /web/static/src/search/custom_favorite_item/custom_favorite_item.js */
odoo.define('@web/search/custom_favorite_item/custom_favorite_item',['@web/core/l10n/translation','@web/core/dropdown/accordion_item','@web/core/checkbox/checkbox','@web/core/registry','@web/core/utils/hooks','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{AccordionItem}=require("@web/core/dropdown/accordion_item");const{CheckBox}=require("@web/core/checkbox/checkbox");const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{Component,useRef,useState}=require("@odoo/owl");const favoriteMenuRegistry=registry.category("favoriteMenu");const CustomFavoriteItem=__exports.CustomFavoriteItem=class CustomFavoriteItem extends Component{static template="web.CustomFavoriteItem";static components={CheckBox,AccordionItem};static props={};setup(){this.notificationService=useService("notification");this.descriptionRef=useRef("description");this.state=useState({description:this.env.config.getDisplayName(),isDefault:false,isShared:false,});}
saveFavorite(ev){if(!this.state.description){this.notificationService.add(_t("A name for your favorite filter is required."),{type:"danger",});ev.stopPropagation();return this.descriptionRef.el.focus();}
const favorites=this.env.searchModel.getSearchItems((s)=>s.type==="favorite"&&s.description===this.state.description);if(favorites.length){this.notificationService.add(_t("A filter with same name already exists."),{type:"danger",});ev.stopPropagation();return this.descriptionRef.el.focus();}
const{description,isDefault,isShared}=this.state;const embeddedActionId=this.env.config.currentEmbeddedActionId||false;this.env.searchModel.createNewFavorite({description,isDefault,isShared,embeddedActionId,});Object.assign(this.state,{description:this.env.config.getDisplayName(),isDefault:false,isShared:false,});}
onDefaultCheckboxChange(checked){this.state.isDefault=checked;if(checked){this.state.isShared=false;}}
onShareCheckboxChange(checked){this.state.isShared=checked;if(checked){this.state.isDefault=false;}}
onInputKeydown(ev){switch(ev.key){case"Enter":ev.preventDefault();this.saveFavorite(ev);break;case"Escape":ev.preventDefault();ev.target.blur();break;}}}
favoriteMenuRegistry.add("custom-favorite-item",{Component:CustomFavoriteItem,groupNumber:3},{sequence:0});return __exports;});;

/* /web/static/src/search/custom_group_by_item/custom_group_by_item.js */
odoo.define('@web/search/custom_group_by_item/custom_group_by_item',['@odoo/owl'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const CustomGroupByItem=__exports.CustomGroupByItem=class CustomGroupByItem extends Component{static template="web.CustomGroupByItem";static props={fields:Array,onAddCustomGroup:Function,};get choices(){return this.props.fields.map((f)=>({label:f.string,value:f.name}));}
onSelected(ev){if(ev.target.value){this.props.onAddCustomGroup(ev.target.value);ev.target.value="";}}}
return __exports;});;

/* /web/static/src/search/layout.js */
odoo.define('@web/search/layout',['@odoo/owl','@web/search/control_panel/control_panel','@web/search/search_panel/search_panel'],function(require){'use strict';let __exports={};const{Component,useRef}=require("@odoo/owl");const{ControlPanel}=require("@web/search/control_panel/control_panel");const{SearchPanel}=require("@web/search/search_panel/search_panel");__exports.extractLayoutComponents=extractLayoutComponents;function extractLayoutComponents(params){const layoutComponents={ControlPanel:params.ControlPanel||ControlPanel,SearchPanel:params.SearchPanel||SearchPanel,};return layoutComponents;}
const Layout=__exports.Layout=class Layout extends Component{static template="web.Layout";static props={className:{type:String,optional:true},display:{type:Object,optional:true},slots:{type:Object,optional:true},};static defaultProps={display:{},};setup(){this.components=extractLayoutComponents(this.env.config);this.contentRef=useRef("content");}
get controlPanelSlots(){const slots={...this.props.slots};if(this.env.inDialog){delete slots["layout-buttons"];}
delete slots.default;return slots;}}
return __exports;});;

/* /web/static/src/search/pager_hook.js */
odoo.define('@web/search/pager_hook',['@odoo/owl'],function(require){'use strict';let __exports={};const{useEnv,useSubEnv,useState,onWillRender}=require("@odoo/owl");__exports.usePager=usePager;function usePager(getProps){const env=useEnv();const pagerState=useState({});useSubEnv({config:{...env.config,pagerProps:pagerState,},});onWillRender(()=>{Object.assign(pagerState,getProps()||{total:0});});}
return __exports;});;

/* /web/static/src/search/properties_group_by_item/properties_group_by_item.js */
odoo.define('@web/search/properties_group_by_item/properties_group_by_item',['@web/core/dropdown/accordion_item','@web/core/dropdown/checkbox_item','@web/core/dropdown/dropdown_item','@odoo/owl'],function(require){'use strict';let __exports={};const{AccordionItem,ACCORDION}=require("@web/core/dropdown/accordion_item");const{CheckboxItem}=require("@web/core/dropdown/checkbox_item");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{Component,useState,useChildSubEnv}=require("@odoo/owl");const PropertiesGroupByItem=__exports.PropertiesGroupByItem=class PropertiesGroupByItem extends Component{static template="web.PropertiesGroupByItem";static components={AccordionItem,CheckboxItem,DropdownItem};static props={item:Object,onGroup:Function,};setup(){this.state=useState({groupByItems:[]});useChildSubEnv({[ACCORDION]:{accordionStateChanged:this.beforeOpen.bind(this),},});}
get isActive(){return this.state.groupByItems.some((item)=>item.isActive);}
get isSingleParent(){const uniqueNames=new Set(this.state.groupByItems.map((item)=>item.definitionRecordId));return uniqueNames.size<2;}
async beforeOpen(){if(this.definitionLoaded){return;}
this.definitionLoaded=true;await this.env.searchModel.fillSearchViewItemsProperty();this._updateGroupByItems();}
onGroup(ids){this.props.onGroup(ids);this._updateGroupByItems();}
_updateGroupByItems(){this.state.groupByItems=this.env.searchModel.getSearchItems((searchItem)=>["groupBy","dateGroupBy"].includes(searchItem.type)&&searchItem.isProperty&&searchItem.propertyFieldName===this.props.item.fieldName);}}
return __exports;});;

/* /web/static/src/search/search_arch_parser.js */
odoo.define('@web/search/search_arch_parser',['@web/core/context','@web/core/l10n/translation','@web/core/py_js/py','@web/core/utils/numbers','@web/core/utils/strings','@web/core/utils/xml','@web/search/utils/dates'],function(require){'use strict';let __exports={};const{makeContext}=require("@web/core/context");const{_t}=require("@web/core/l10n/translation");const{evaluateBooleanExpr,evaluateExpr}=require("@web/core/py_js/py");const{clamp}=require("@web/core/utils/numbers");const{exprToBoolean}=require("@web/core/utils/strings");const{visitXML}=require("@web/core/utils/xml");const{DEFAULT_INTERVAL,toGeneratorId}=require("@web/search/utils/dates");const ALL=_t("All");const DEFAULT_LIMIT=200;const DEFAULT_VIEWS_WITH_SEARCH_PANEL=["kanban","list"];function getContextGroubBy(context){try{return makeContext([context]).group_by?.split(":")||[];}catch{return[];}}
function reduceType(type){if(type==="dateFilter"){return"filter";}
if(type==="dateGroupBy"){return"groupBy";}
return type;}
const SearchArchParser=__exports.SearchArchParser=class SearchArchParser{constructor(searchViewDescription,fields,searchDefaults={},searchPanelDefaults={}){const{irFilters,arch}=searchViewDescription;this.fields=fields||{};this.irFilters=irFilters||[];this.arch=arch||"<search/>";this.labels=[];this.preSearchItems=[];this.searchPanelInfo={className:"",fold:false,viewTypes:DEFAULT_VIEWS_WITH_SEARCH_PANEL,};this.sections=[];this.searchDefaults=searchDefaults;this.searchPanelDefaults=searchPanelDefaults;this.currentGroup=[];this.currentTag=null;this.groupNumber=0;this.pregroupOfGroupBys=[];this.optionsParams=null;}
parse(){visitXML(this.arch,(node,visitChildren)=>{switch(node.tagName){case"search":this.visitSearch(node,visitChildren);break;case"searchpanel":return this.visitSearchPanel(node);case"group":this.visitGroup(node,visitChildren);break;case"separator":this.visitSeparator();break;case"field":this.visitField(node);break;case"filter":if(this.optionsParams){this.visitDateOption(node);}else{this.visitFilter(node,visitChildren);}
break;}});return{labels:this.labels,preSearchItems:this.preSearchItems,searchPanelInfo:this.searchPanelInfo,sections:this.sections,};}
pushGroup(tag=null){if(this.currentGroup.length){if(this.currentTag==="groupBy"){this.pregroupOfGroupBys.push(...this.currentGroup);}else{this.preSearchItems.push(this.currentGroup);}}
this.currentTag=tag;this.currentGroup=[];this.groupNumber++;}
visitField(node){this.pushGroup("field");const preField={type:"field"};if(node.hasAttribute("invisible")){preField.invisible=node.getAttribute("invisible");}
if(node.hasAttribute("domain")){preField.domain=node.getAttribute("domain");}
if(node.hasAttribute("filter_domain")){preField.filterDomain=node.getAttribute("filter_domain");}else if(node.hasAttribute("operator")){preField.operator=node.getAttribute("operator");}
if(node.hasAttribute("context")){preField.context=node.getAttribute("context");}
if(node.hasAttribute("name")){const name=node.getAttribute("name");if(!this.fields[name]){throw Error(`Unknown field ${name}`);}
const fieldType=this.fields[name].type;preField.fieldName=name;preField.fieldType=fieldType;if(fieldType!=="properties"&&name in this.searchDefaults){preField.isDefault=true;let value=this.searchDefaults[name];value=Array.isArray(value)?value[0]:value;let operator=preField.operator;if(!operator){let type=fieldType;if(node.hasAttribute("widget")){type=node.getAttribute("widget");}
if(["char","html","many2many","one2many","text"].includes(type)){operator="ilike";}else{operator="=";}}
preField.defaultRank=-10;const{selection,context,relation}=this.fields[name];preField.defaultAutocompleteValue={label:`${value}`,operator,value};if(fieldType==="selection"){const option=selection.find((sel)=>sel[0]===value);if(!option){throw Error();}
preField.defaultAutocompleteValue.label=option[1];}else if(fieldType==="many2one"){this.labels.push((orm)=>{return orm.call(relation,"read",[value,["display_name"]],{context}).then((results)=>{preField.defaultAutocompleteValue.label=results[0]["display_name"];});});}}}else{throw Error();}
if(node.hasAttribute("string")){preField.description=node.getAttribute("string");}else if(preField.fieldName){preField.description=this.fields[preField.fieldName].string;}else{preField.description="Ω";}
this.currentGroup.push(preField);}
visitFilter(node,visitChildren){const preSearchItem={type:"filter"};if(node.hasAttribute("context")){const context=node.getAttribute("context");const[fieldName,defaultInterval]=getContextGroubBy(context);const groupByField=this.fields[fieldName];if(groupByField){preSearchItem.type="groupBy";preSearchItem.fieldName=fieldName;preSearchItem.fieldType=groupByField.type;if(["date","datetime"].includes(groupByField.type)){preSearchItem.type="dateGroupBy";preSearchItem.defaultIntervalId=defaultInterval||DEFAULT_INTERVAL;}}else{preSearchItem.context=context;}}
if(reduceType(preSearchItem.type)!==this.currentTag){this.pushGroup(reduceType(preSearchItem.type));}
if(preSearchItem.type==="filter"){if(node.hasAttribute("date")){const fieldName=node.getAttribute("date");preSearchItem.type="dateFilter";preSearchItem.fieldName=fieldName;preSearchItem.fieldType=this.fields[fieldName].type;const optionsParams={startYear:Number(node.getAttribute("start_year")||-2),endYear:Number(node.getAttribute("end_year")||0),startMonth:Number(node.getAttribute("start_month")||-2),endMonth:Number(node.getAttribute("end_month")||0),customOptions:[],};const defaultOffset=clamp(optionsParams.startMonth,optionsParams.endMonth,0);preSearchItem.defaultGeneratorIds=[toGeneratorId("month",defaultOffset)];if(node.hasAttribute("default_period")){preSearchItem.defaultGeneratorIds=node.getAttribute("default_period").split(",");}
this.optionsParams=optionsParams;visitChildren();preSearchItem.optionsParams=optionsParams;this.optionsParams=null;}
preSearchItem.domain=node.getAttribute("domain")||"[]";}
if(node.hasAttribute("invisible")){preSearchItem.invisible=node.getAttribute("invisible");const fieldName=preSearchItem.fieldName;if(fieldName&&!this.fields[fieldName]){return;}}
preSearchItem.groupNumber=this.groupNumber;if(node.hasAttribute("name")){const name=node.getAttribute("name");preSearchItem.name=name;if(name in this.searchDefaults){preSearchItem.isDefault=true;const value=this.searchDefaults[name];if(["groupBy","dateGroupBy"].includes(preSearchItem.type)){preSearchItem.defaultRank=typeof value==="number"?value:100;}else{preSearchItem.defaultRank=-5;}
if(preSearchItem.type==="dateFilter"&&typeof value==="string"&&!/^(true|1)$/i.test(value)){preSearchItem.defaultGeneratorIds=value.split(",");}}}
if(node.hasAttribute("string")){preSearchItem.description=node.getAttribute("string");}else if(preSearchItem.fieldName){preSearchItem.description=this.fields[preSearchItem.fieldName].string;}else if(node.hasAttribute("help")){preSearchItem.description=node.getAttribute("help");}else if(node.hasAttribute("name")){preSearchItem.description=node.getAttribute("name");}else{preSearchItem.description="Ω";}
this.currentGroup.push(preSearchItem);}
visitDateOption(node){const preDateOption={type:"dateOption"};for(const attribute of["name","string","domain"]){if(!node.getAttribute(attribute)){throw new Error(`Attribute "${attribute}" is missing.`);}}
preDateOption.id=`custom_${node.getAttribute("name")}`;preDateOption.description=node.getAttribute("string");preDateOption.domain=node.getAttribute("domain");this.optionsParams.customOptions.push(preDateOption);}
visitGroup(node,visitChildren){this.pushGroup();visitChildren();this.pushGroup();}
visitSearch(node,visitChildren){visitChildren();this.pushGroup();if(this.pregroupOfGroupBys.length){this.preSearchItems.push(this.pregroupOfGroupBys);}}
visitSearchPanel(searchPanelNode){let hasCategoryWithCounters=false;let hasFilterWithDomain=false;let nextSectionId=1;if(searchPanelNode.hasAttribute("class")){this.searchPanelInfo.className=searchPanelNode.getAttribute("class");}
if(searchPanelNode.hasAttribute("fold")){this.searchPanelInfo.fold=exprToBoolean(searchPanelNode.getAttribute("fold"));}
if(searchPanelNode.hasAttribute("view_types")){this.searchPanelInfo.viewTypes=searchPanelNode.getAttribute("view_types").split(",");}
for(const node of searchPanelNode.children){if(node.nodeType!==1||node.tagName!=="field"){continue;}
if(node.getAttribute("invisible")==="True"||node.getAttribute("invisible")==="1"){continue;}
const attrs={};for(const attrName of node.getAttributeNames()){attrs[attrName]=node.getAttribute(attrName);}
const type=attrs.select==="multi"?"filter":"category";const section={color:attrs.color||null,description:attrs.string||this.fields[attrs.name].string,enableCounters:evaluateBooleanExpr(attrs.enable_counters),expand:evaluateBooleanExpr(attrs.expand),fieldName:attrs.name,icon:attrs.icon||null,id:nextSectionId++,limit:evaluateExpr(attrs.limit||String(DEFAULT_LIMIT)),type,values:new Map(),};if(type==="category"){section.activeValueId=this.searchPanelDefaults[attrs.name];section.icon=section.icon||"fa-folder";section.hierarchize=evaluateBooleanExpr(attrs.hierarchize||"1");section.values.set(false,{childrenIds:[],display_name:ALL.toString(),id:false,bold:true,parentId:false,});hasCategoryWithCounters=hasCategoryWithCounters||section.enableCounters;}else{section.domain=attrs.domain||"[]";section.groupBy=attrs.groupby||null;section.icon=section.icon||"fa-filter";hasFilterWithDomain=hasFilterWithDomain||section.domain!=="[]";}
this.sections.push([section.id,section]);}
if(hasCategoryWithCounters&&hasFilterWithDomain){for(const section of this.sections){if(section.type==="category"){section.enableCounters=false;}}
console.warn("Warning: categories with counters are incompatible with filters having a domain attribute.","All category counters have been disabled to avoid inconsistencies.");}
return false;}
visitSeparator(){this.pushGroup();}}
return __exports;});;

/* /web/static/src/search/search_bar/search_bar.js */
odoo.define('@web/search/search_bar/search_bar',['@web/core/domain','@web/core/l10n/dates','@web/core/registry','@web/core/utils/concurrency','@web/core/utils/hooks','@web/core/domain_selector_dialog/domain_selector_dialog','@web/core/utils/search','@web/core/l10n/translation','@web/search/search_bar_menu/search_bar_menu','@odoo/owl','@web/core/dropdown/dropdown_hooks','@web/core/browser/feature_detection'],function(require){'use strict';let __exports={};const{Domain}=require("@web/core/domain");const{serializeDate,serializeDateTime}=require("@web/core/l10n/dates");const{registry}=require("@web/core/registry");const{KeepLast}=require("@web/core/utils/concurrency");const{useAutofocus,useBus,useService}=require("@web/core/utils/hooks");const{DomainSelectorDialog}=require("@web/core/domain_selector_dialog/domain_selector_dialog");const{fuzzyTest}=require("@web/core/utils/search");const{_t}=require("@web/core/l10n/translation");const{SearchBarMenu}=require("@web/search/search_bar_menu/search_bar_menu");const{Component,useExternalListener,useRef,useState}=require("@odoo/owl");const{useDropdownState}=require("@web/core/dropdown/dropdown_hooks");const{hasTouch}=require("@web/core/browser/feature_detection");const parsers=registry.category("parsers");const CHAR_FIELDS=["char","html","many2many","many2one","one2many","text","properties"];const FOLDABLE_TYPES=["properties","many2one","many2many"];let nextItemId=1;const SUB_ITEMS_DEFAULT_LIMIT=8;const SearchBar=__exports.SearchBar=class SearchBar extends Component{static template="web.SearchBar";static components={SearchBarMenu,};static props={autofocus:{type:Boolean,optional:true},slots:{type:Object,optional:true,shape:{default:{optional:true},"search-bar-additional-menu":{optional:true},},},toggler:{type:Object,optional:true,},};static defaultProps={autofocus:true,};setup(){this.dialogService=useService("dialog");this.fields=this.env.searchModel.searchViewFields;this.searchItemsFields=this.env.searchModel.getSearchItems((f)=>f.type==="field");this.root=useRef("root");this.ui=useService("ui");this.visibilityState=useState(this.props.toggler?.state||{showSearchBar:true});this.state=useState({expanded:[],focusedIndex:0,query:"",subItemsLimits:{},});this.items=useState([]);this.subItems={};this.searchBarDropdownState=useDropdownState();this.orm=useService("orm");this.keepLast=new KeepLast();this.inputRef=this.env.config.disableSearchBarAutofocus||!this.props.autofocus?useRef("autofocus"):useAutofocus({mobile:this.props.toggler!==undefined});useBus(this.env.searchModel,"focus-search",()=>{this.inputRef.el.focus();});useBus(this.env.searchModel,"update",this.render);useExternalListener(window,"click",this.onWindowClick);useExternalListener(window,"keydown",this.onWindowKeydown);}
getSearchItem(id){return this.env.searchModel.searchItems[id];}
async computeState(options={}){const query="query"in options?options.query:this.state.query;const expanded="expanded"in options?options.expanded:this.state.expanded;const focusedIndex="focusedIndex"in options?options.focusedIndex:this.state.focusedIndex;const subItems="subItems"in options?options.subItems:this.subItems;const tasks=[];for(const id of expanded){const searchItem=this.getSearchItem(id);if(searchItem.type==="field"&&searchItem.fieldType==="properties"){tasks.push({id,prom:this.getSearchItemsProperties(searchItem)});}else if(!subItems[id]){if(!this.state.subItemsLimits[id]){this.state.subItemsLimits[id]=SUB_ITEMS_DEFAULT_LIMIT;}
tasks.push({id,prom:this.computeSubItems(searchItem,query)});}}
const prom=this.keepLast.add(Promise.all(tasks.map((task)=>task.prom)));if(tasks.length){const taskResults=await prom;tasks.forEach((task,index)=>{subItems[task.id]=taskResults[index];});}
this.state.expanded=expanded;this.state.query=query;this.state.focusedIndex=focusedIndex;this.subItems=subItems;this.inputRef.el.value=query;const trimmedQuery=this.state.query.trim();this.items.length=0;if(!trimmedQuery){return;}
for(const searchItem of this.searchItemsFields){this.items.push(...this.getItems(searchItem,trimmedQuery));}
this.items.push({title:_t("Add a custom filter"),isAddCustomFilterButton:true,});}
getItems(searchItem,trimmedQuery){const items=[];const isFieldProperty=searchItem.type==="field_property";const fieldType=this.getFieldType(searchItem);let preposition=this.getPreposition(searchItem);if((isFieldProperty&&FOLDABLE_TYPES.includes(fieldType))||fieldType==="properties"){preposition=null;}
if(["selection","boolean","tags"].includes(fieldType)){const booleanOptions=[[true,_t("Yes")],[false,_t("No")],];let options;if(isFieldProperty){const{selection,tags}=searchItem.propertyFieldDefinition||{};options=selection||tags||booleanOptions;}else{options=this.fields[searchItem.fieldName].selection||booleanOptions;}
for(const[value,label]of options){if(fuzzyTest(trimmedQuery.toLowerCase(),label.toLowerCase())){items.push({id:nextItemId++,searchItemDescription:searchItem.description,preposition,searchItemId:searchItem.id,label,operator:searchItem.operator||"=",value,isFieldProperty,});}}
return items;}
const parser=parsers.contains(fieldType)?parsers.get(fieldType):(str)=>str;let value;try{switch(fieldType){case"date":{value=serializeDate(parser(trimmedQuery));break;}
case"datetime":{value=serializeDateTime(parser(trimmedQuery));break;}
case"many2one":{value=trimmedQuery;break;}
default:{value=parser(trimmedQuery);}}}catch{return[];}
const item={id:nextItemId++,searchItemDescription:searchItem.description,preposition,searchItemId:searchItem.id,label:this.state.query,operator:searchItem.operator||(CHAR_FIELDS.includes(fieldType)?"ilike":"="),value,isFieldProperty,};if(isFieldProperty){item.isParent=FOLDABLE_TYPES.includes(fieldType);item.unselectable=FOLDABLE_TYPES.includes(fieldType);item.propertyItemId=searchItem.propertyItemId;}else if(fieldType==="properties"){item.isParent=true;item.unselectable=true;}else if(fieldType==="many2one"){item.isParent=true;}
if(item.isParent){item.isExpanded=this.state.expanded.includes(item.searchItemId);}
items.push(item);if(item.isExpanded){if(searchItem.type==="field"&&searchItem.fieldType==="properties"){for(const subItem of this.subItems[searchItem.id]){items.push(...this.getItems(subItem,trimmedQuery));}}else{items.push(...this.subItems[searchItem.id]);}}
return items;}
getPreposition(searchItem){const fieldType=this.getFieldType(searchItem);return["date","datetime"].includes(fieldType)?_t("at"):_t("for");}
getFieldType(searchItem){const{type}=searchItem.type==="field_property"?searchItem.propertyFieldDefinition:this.fields[searchItem.fieldName];const fieldType=type==="reference"?"char":type;return fieldType;}
getSearchItemsProperties(searchItem){return this.env.searchModel.getSearchItemsProperties(searchItem);}
async computeSubItems(searchItem,query){const field=this.fields[searchItem.fieldName];const context={...this.env.searchModel.domainEvalContext,...field.context};let domain=[];if(searchItem.domain){try{domain=new Domain(searchItem.domain).toList(context);}catch{}}
const relation=searchItem.type==="field_property"?searchItem.propertyFieldDefinition.comodel:field.relation;let nameSearchOperator="ilike";if(query&&query[0]==='"'&&query[query.length-1]==='"'){query=query.slice(1,-1);nameSearchOperator="=";}
const limitToFetch=this.state.subItemsLimits[searchItem.id]+1;const options=await this.orm.call(relation,"name_search",[],{args:domain,operator:nameSearchOperator,context,limit:limitToFetch,name:query.trim(),});let showLoadMore=false;if(options.length===limitToFetch){options.pop();showLoadMore=true;}
const subItems=[];if(options.length){const operator=searchItem.operator||"=";for(const[value,label]of options){subItems.push({id:nextItemId++,isChild:true,searchItemId:searchItem.id,value,label,operator,});}
if(showLoadMore){subItems.push({id:nextItemId++,isChild:true,searchItemId:searchItem.id,label:_t("Load more"),unselectable:true,loadMore:()=>{this.state.subItemsLimits[searchItem.id]+=SUB_ITEMS_DEFAULT_LIMIT;const newSubItems=[...this.subItems];newSubItems[searchItem.id]=undefined;this.computeState({subItems:newSubItems});},});}}else{subItems.push({id:nextItemId++,isChild:true,searchItemId:searchItem.id,label:_t("(no result)"),unselectable:true,});}
return subItems;}
focusFacet(index){const facets=this.root.el.getElementsByClassName("o_searchview_facet");if(facets.length){if(index===undefined){facets[facets.length-1].focus();}else{facets[index].focus();}}}
removeFacet(facet){this.env.searchModel.deactivateGroup(facet.groupId);this.inputRef.el.focus();}
resetState(options={focus:true}){this.state.subItemsLimits={};this.computeState({expanded:[],focusedIndex:0,query:"",subItems:[]});if(options.focus){this.inputRef.el.focus();}}
selectItem(item){if(item.isAddCustomFilterButton){return this.env.searchModel.spawnCustomFilterDialog();}
const searchItem=this.getSearchItem(item.searchItemId);if((searchItem.type==="field"&&searchItem.fieldType==="properties")||(searchItem.type==="field_property"&&item.unselectable)){this.toggleItem(item,!item.isExpanded);return;}
if(!item.unselectable){const{searchItemId,label,operator,value}=item;const autoCompleteValues={label,operator,value};if(value&&value[0]==='"'&&value[value.length-1]==='"'){autoCompleteValues.value=value.slice(1,-1);autoCompleteValues.label=label.slice(1,-1);autoCompleteValues.operator="=";autoCompleteValues.enforceEqual=true;}
this.env.searchModel.addAutoCompletionValues(searchItemId,autoCompleteValues);}
if(item.loadMore){item.loadMore();}else{this.resetState();}}
toggleItem(item,shouldExpand){const id=item.searchItemId;const expanded=[...this.state.expanded];const index=expanded.findIndex((id0)=>id0===id);if(shouldExpand===true){if(index<0){expanded.push(id);}}else{if(index>=0){expanded.splice(index,1);}}
this.computeState({expanded});}
onFacetLabelClick(target,facet){const{domain,groupId}=facet;if(this.env.searchModel.canOrderByCount&&facet.type==="groupBy"){this.env.searchModel.switchGroupBySort();return;}else if(!domain){return;}
const{resModel}=this.env.searchModel;this.dialogService.add(DomainSelectorDialog,{resModel,domain,context:this.env.searchModel.domainEvalContext,onConfirm:(domain)=>this.env.searchModel.splitAndAddDomain(domain,groupId),disableConfirmButton:(domain)=>domain===`[]`,title:_t("Modify Condition"),isDebugMode:this.env.searchModel.isDebugMode,});}
onFacetKeydown(facet,facetIndex,ev){switch(ev.key){case"ArrowLeft":{if(facetIndex===0){this.inputRef.el.focus();}else{this.focusFacet(facetIndex-1);}
break;}
case"ArrowRight":{const facets=this.root.el.getElementsByClassName("o_searchview_facet");if(facetIndex===facets.length-1){this.inputRef.el.focus();}else{this.focusFacet(facetIndex+1);}
break;}
case"Backspace":{this.removeFacet(facet);break;}}}
onFacetRemove(facet){this.removeFacet(facet);}
onItemMousemove(focusedIndex){this.state.focusedIndex=focusedIndex;this.inputRef.el.focus();}
onSearchKeydown(ev){if(ev.isComposing){return;}
const focusedItem=this.items[this.state.focusedIndex];let focusedIndex;switch(ev.key){case"ArrowDown":ev.preventDefault();if(this.items.length){if(this.state.focusedIndex>=this.items.length-1){focusedIndex=0;}else{focusedIndex=this.state.focusedIndex+1;}}else{this.env.searchModel.trigger("focus-view");}
break;case"ArrowUp":ev.preventDefault();if(this.items.length){if(this.state.focusedIndex===0||this.state.focusedIndex>this.items.length-1){focusedIndex=this.items.length-1;}else{focusedIndex=this.state.focusedIndex-1;}}
break;case"ArrowLeft":if(focusedItem&&focusedItem.isParent&&focusedItem.isExpanded){ev.preventDefault();this.toggleItem(focusedItem,false);}else if(focusedItem&&focusedItem.isChild){ev.preventDefault();focusedIndex=this.items.findIndex((item)=>item.isParent&&item.searchItemId===focusedItem.searchItemId);}else if(focusedItem&&focusedItem.isFieldProperty){ev.preventDefault();focusedIndex=this.items.findIndex((item)=>item.isParent&&item.searchItemId===focusedItem.propertyItemId);}else if(ev.target.selectionStart===0){this.focusFacet();}else{}
break;case"ArrowRight":if(ev.target.selectionStart===this.state.query.length){if(focusedItem&&focusedItem.isParent){ev.preventDefault();if(focusedItem.isExpanded){focusedIndex=this.state.focusedIndex+1;}else{this.toggleItem(focusedItem,true);}}else if(ev.target.selectionStart===this.state.query.length){this.focusFacet(0);}}
break;case"Backspace":if(!this.state.query.length){const facets=this.env.searchModel.facets;if(facets.length){this.removeFacet(facets[facets.length-1]);}}
break;case"Enter":if(!this.state.query.length){this.env.searchModel.search();break;}else if(focusedItem){ev.preventDefault();this.selectItem(focusedItem);}
break;case"Tab":if(this.state.query.length&&focusedItem){ev.preventDefault();this.selectItem(focusedItem);}
break;case"Escape":this.resetState();break;}
if(focusedIndex!==undefined){this.state.focusedIndex=focusedIndex;}}
onSearchClick(){if(!hasTouch()&&!this.inputRef.el.value.length){this.searchBarDropdownState.open();}}
onSearchInput(ev){if(!hasTouch()){this.searchBarDropdownState.close();}
const query=ev.target.value;if(query.trim()){this.computeState({query,expanded:[],focusedIndex:0,subItems:[]});}else if(this.items.length){this.resetState();}}
onClickSearchIcon(){const focusedItem=this.items[this.state.focusedIndex];if(!this.state.query.length){this.env.searchModel.search();}else if(focusedItem){this.selectItem(focusedItem);}}
onToggleSearchBar(){this.state.showSearchBar=!this.state.showSearchBar;}
onWindowClick(ev){if(this.items.length&&!this.root.el.contains(ev.target)){this.resetState({focus:false});}}
onWindowKeydown(ev){if(this.items.length&&ev.key==="Escape"){this.resetState();}}}
return __exports;});;

/* /web/static/src/search/search_bar/search_bar_toggler.js */
odoo.define('@web/search/search_bar/search_bar_toggler',['@odoo/owl','@web/core/browser/browser','@web/core/utils/hooks','@web/core/utils/timing'],function(require){'use strict';let __exports={};const{Component,useEffect,useState}=require("@odoo/owl");const{browser}=require("@web/core/browser/browser");const{useService}=require("@web/core/utils/hooks");const{useDebounced}=require("@web/core/utils/timing");const SearchBarToggler=__exports.SearchBarToggler=class SearchBarToggler extends Component{static template="web.SearchBar.Toggler";static props={isSmall:Boolean,showSearchBar:Boolean,toggleSearchBar:Function,};}
__exports.useSearchBarToggler=useSearchBarToggler;function useSearchBarToggler(){const ui=useService("ui");let isToggled=false;const state=useState({isSmall:ui.isSmall,showSearchBar:false,});const updateState=()=>{state.isSmall=ui.isSmall;state.showSearchBar=!ui.isSmall||isToggled;};updateState();function toggleSearchBar(){isToggled=!isToggled;updateState();}
const onResize=useDebounced(updateState,200);useEffect(()=>{browser.addEventListener("resize",onResize);return()=>browser.removeEventListener("resize",onResize);},()=>[]);return{state,component:SearchBarToggler,get props(){return{isSmall:state.isSmall,showSearchBar:state.showSearchBar,toggleSearchBar,};},};}
return __exports;});;

/* /web/static/src/search/search_bar_menu/search_bar_menu.js */
odoo.define('@web/search/search_bar_menu/search_bar_menu',['@odoo/owl','@web/core/confirmation_dialog/confirmation_dialog','@web/core/dropdown/dropdown','@web/search/properties_group_by_item/properties_group_by_item','@web/core/dropdown/dropdown_item','@web/core/registry','@web/core/utils/arrays','@web/core/utils/hooks','@web/core/dropdown/accordion_item','@web/search/custom_group_by_item/custom_group_by_item','@web/core/dropdown/checkbox_item','@web/search/utils/misc','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{Dropdown}=require("@web/core/dropdown/dropdown");const{PropertiesGroupByItem}=require("@web/search/properties_group_by_item/properties_group_by_item");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{registry}=require("@web/core/registry");const{sortBy}=require("@web/core/utils/arrays");const{useBus,useService}=require("@web/core/utils/hooks");const{AccordionItem}=require("@web/core/dropdown/accordion_item");const{CustomGroupByItem}=require("@web/search/custom_group_by_item/custom_group_by_item");const{CheckboxItem}=require("@web/core/dropdown/checkbox_item");const{FACET_ICONS,GROUPABLE_TYPES}=require("@web/search/utils/misc");const{_t}=require("@web/core/l10n/translation");const favoriteMenuRegistry=registry.category("favoriteMenu");const SearchBarMenu=__exports.SearchBarMenu=class SearchBarMenu extends Component{static template="web.SearchBarMenu";static components={Dropdown,DropdownItem,CheckboxItem,CustomGroupByItem,AccordionItem,PropertiesGroupByItem,};static props={slots:{type:Object,optional:true,shape:{default:{optional:true},},},dropdownState:{type:Object,optional:true,shape:{isOpen:Boolean,open:Function,close:Function,},},};setup(){this.facet_icons=FACET_ICONS;this.dialogService=useService("dialog");const fields=[];for(const[fieldName,field]of Object.entries(this.env.searchModel.searchViewFields)){if(this.validateField(fieldName,field)){fields.push(Object.assign({name:fieldName},field));}}
this.fields=sortBy(fields,"string");useBus(this.env.searchModel,"update",this.render);}
get filterItems(){return this.env.searchModel.getSearchItems((searchItem)=>["filter","dateFilter"].includes(searchItem.type));}
async onAddCustomFilterClick(){this.env.searchModel.spawnCustomFilterDialog();}
onFilterSelected({itemId,optionId}){if(optionId){this.env.searchModel.toggleDateFilter(itemId,optionId);}else{this.env.searchModel.toggleSearchItem(itemId);}}
get hideCustomGroupBy(){return this.env.searchModel.hideCustomGroupBy||false;}
get groupByItems(){return this.env.searchModel.getSearchItems((searchItem)=>["groupBy","dateGroupBy"].includes(searchItem.type)&&!searchItem.isProperty);}
validateField(fieldName,field){const{groupable,type}=field;return groupable&&fieldName!=="id"&&GROUPABLE_TYPES.includes(type);}
onGroupBySelected({itemId,optionId}){if(optionId){this.env.searchModel.toggleDateGroupBy(itemId,optionId);}else{this.env.searchModel.toggleSearchItem(itemId);}}
onAddCustomGroup(fieldName){this.env.searchModel.createNewGroupBy(fieldName);}
get showComparisonMenu(){return(this.env.searchModel.searchMenuTypes.has("comparison")&&this.env.searchModel.getSearchItems((i)=>i.type==="comparison").length>0);}
get comparisonItems(){return this.env.searchModel.getSearchItems((searchItem)=>searchItem.type==="comparison");}
onComparisonSelected(itemId){this.env.searchModel.toggleSearchItem(itemId);}
get favorites(){return this.env.searchModel.getSearchItems((searchItem)=>searchItem.type==="favorite"&&searchItem.userId!==false);}
get sharedFavorites(){return this.env.searchModel.getSearchItems((searchItem)=>searchItem.type==="favorite"&&searchItem.userId===false);}
get otherItems(){const registryMenus=[];for(const item of favoriteMenuRegistry.getAll()){if("isDisplayed"in item?item.isDisplayed(this.env):true){registryMenus.push({Component:item.Component,groupNumber:item.groupNumber,key:item.Component.name,});}}
return registryMenus;}
onFavoriteSelected(itemId){this.env.searchModel.toggleSearchItem(itemId);}
openConfirmationDialog(itemId,userId){const dialogProps={title:_t("Warning"),body:userId?_t("Are you sure that you want to remove this filter?"):_t("This filter is global and will be removed for everyone."),confirmLabel:_t("Delete Filter"),confirm:()=>this.env.searchModel.deleteFavorite(itemId),cancel:()=>{},};this.dialogService.add(ConfirmationDialog,dialogProps);}}
return __exports;});;

/* /web/static/src/search/search_model.js */
odoo.define('@web/search/search_model',['@web/core/context','@web/core/domain','@web/core/py_js/py','@web/core/user','@web/core/utils/arrays','@web/core/utils/objects','@web/search/search_arch_parser','@web/search/utils/dates','@web/search/utils/misc','@odoo/owl','@web/core/tree_editor/condition_tree','@web/core/l10n/translation','@web/core/tree_editor/utils','@web/core/domain_selector_dialog/domain_selector_dialog','@web/core/domain_selector/utils'],function(require){'use strict';let __exports={};const{makeContext}=require("@web/core/context");const{Domain}=require("@web/core/domain");const{evaluateExpr}=require("@web/core/py_js/py");const{user}=require("@web/core/user");const{sortBy,groupBy}=require("@web/core/utils/arrays");const{deepCopy}=require("@web/core/utils/objects");const{SearchArchParser}=require("@web/search/search_arch_parser");const{constructDateDomain,DEFAULT_INTERVAL,getComparisonOptions,getIntervalOptions,getPeriodOptions,rankInterval,yearSelected,}=require("@web/search/utils/dates");const{FACET_ICONS,FACET_COLORS}=require("@web/search/utils/misc");const{EventBus,toRaw}=require("@odoo/owl");const{domainFromTree,treeFromDomain}=require("@web/core/tree_editor/condition_tree");const{_t}=require("@web/core/l10n/translation");const{useGetTreeDescription,useMakeGetFieldDef}=require("@web/core/tree_editor/utils");const{DomainSelectorDialog}=require("@web/core/domain_selector_dialog/domain_selector_dialog");const{getDefaultDomain}=require("@web/core/domain_selector/utils");const{DateTime}=luxon;function hasValues(section){const{errorMsg,type,values}=section;if(errorMsg){return true;}
switch(type){case"category":{return values&&values.size>1;}
case"filter":{return values&&values.size>0;}}}
function mapToArray(map){const result=[];for(const[key,val]of map){const valCopy=Object.assign({},val);result.push([key,valCopy]);}
return result;}
function arraytoMap(array){return new Map(array);}
function execute(op,source,target){const{query,nextId,nextGroupId,nextGroupNumber,searchItems,searchPanelInfo,sections}=source;target.nextGroupId=nextGroupId;target.nextGroupNumber=nextGroupNumber;target.nextId=nextId;target.query=query;target.searchItems=searchItems;target.searchPanelInfo=searchPanelInfo;target.sections=op(sections);for(const[,section]of target.sections){section.values=op(section.values);if(section.groups){section.groups=op(section.groups);for(const[,group]of section.groups){group.values=op(group.values);}}}}
const FAVORITE_PRIVATE_GROUP=1;const FAVORITE_SHARED_GROUP=2;const SearchModel=__exports.SearchModel=class SearchModel extends EventBus{constructor(env,services,args){super();this.env=env;this.setup(services,args);}
setup(services){const{field:fieldService,name:nameService,orm,view,dialog}=services;this.orm=orm;this.fieldService=fieldService;this.viewService=view;this.dialog=dialog;this.orderByCount=false;this.getDomainTreeDescription=useGetTreeDescription(fieldService,nameService);this.makeGetFieldDef=useMakeGetFieldDef(fieldService);this.referenceMoment=DateTime.local();this.comparisonOptions=getComparisonOptions();this.intervalOptions=getIntervalOptions();}
async load(config){const{resModel}=config;if(!resModel){throw Error(`SearchPanel config should have a "resModel" key`);}
this.resModel=resModel;this._reset();const{comparison,context,domain,groupBy,hideCustomGroupBy,orderBy}=config;this.globalComparison=comparison;this.globalContext=toRaw(Object.assign({},context));this.globalDomain=domain||[];this.globalGroupBy=groupBy||[];this.globalOrderBy=orderBy||[];this.hideCustomGroupBy=hideCustomGroupBy;this.searchMenuTypes=new Set(config.searchMenuTypes||["filter","groupBy","favorite"]);this.canOrderByCount=config.canOrderByCount;let{irFilters,loadIrFilters,searchViewArch,searchViewFields,searchViewId}=config;const loadSearchView=searchViewId!==undefined&&(!searchViewArch||!searchViewFields||(!irFilters&&loadIrFilters));const searchViewDescription={};if(loadSearchView){const result=await this.viewService.loadViews({context:this.globalContext,resModel,views:[[searchViewId,"search"]],},{actionId:this.env.config.actionId,embeddedActionId:this.env.config.currentEmbeddedActionId,loadIrFilters:loadIrFilters||false,});Object.assign(searchViewDescription,result.views.search);searchViewFields=searchViewFields||result.fields;}
if(searchViewArch){searchViewDescription.arch=searchViewArch;}
if(irFilters){searchViewDescription.irFilters=irFilters;}
if(searchViewId!==undefined){searchViewDescription.viewId=searchViewId;}
this.searchViewArch=searchViewDescription.arch||"<search/>";this.searchViewFields=searchViewFields||{};if(searchViewDescription.irFilters){this.irFilters=searchViewDescription.irFilters;}
if(searchViewDescription.viewId!==undefined){this.searchViewId=searchViewDescription.viewId;}
const{searchDefaults,searchPanelDefaults}=this._extractSearchDefaultsFromGlobalContext();if(config.state){this._importState(config.state);this.__legacyParseSearchPanelArchAnyway(searchViewDescription,searchViewFields);this.display=this._getDisplay(config.display);if(!this.searchPanelInfo.loaded){return this._reloadSections();}
return;}
this.blockNotification=true;this.searchItems={};this.query=[];this.nextId=1;this.nextGroupId=1;this.nextGroupNumber=1;const parser=new SearchArchParser(searchViewDescription,searchViewFields,searchDefaults,searchPanelDefaults);const{labels,preSearchItems,searchPanelInfo,sections}=parser.parse();this.searchPanelInfo={...searchPanelInfo,loaded:false,shouldReload:false};await Promise.all(labels.map((cb)=>cb(this.orm)));for(const preGroup of preSearchItems||[]){this._createGroupOfSearchItems(preGroup);}
this.nextGroupNumber=1+Math.max(...Object.values(this.searchItems).map((i)=>i.groupNumber||0),0);const dateFilters=Object.values(this.searchItems).filter((searchElement)=>searchElement.type==="dateFilter");if(dateFilters.length){this._createGroupOfComparisons(dateFilters);}
const{dynamicFilters}=config;if(dynamicFilters){this._createGroupOfDynamicFilters(dynamicFilters);}
const defaultFavoriteId=this._createGroupOfFavorites(this.irFilters||[]);const activateFavorite="activateFavorite"in config?config.activateFavorite:true;this._activateDefaultSearchItems(activateFavorite?defaultFavoriteId:null);this.sections=new Map(sections||[]);this.display=this._getDisplay(config.display);if(this.display.searchPanel){this.searchDomain=this._getDomain({withSearchPanel:false});this.sectionsPromise=this._fetchSections(this.categories,this.filters).then(()=>{for(const{fieldName,values}of this.filters){const filterDefaults=searchPanelDefaults[fieldName]||[];for(const valueId of filterDefaults){const value=values.get(valueId);if(value){value.checked=true;}}}});if(Object.keys(searchPanelDefaults).length||this._shouldWaitForData(false)){await this.sectionsPromise;}}
this.blockNotification=false;}
async reload(config={}){this._reset();const{comparison,context,domain,groupBy,orderBy}=config;this.globalContext=Object.assign({},context);this.globalDomain=domain||[];this.globalComparison=comparison;this.globalGroupBy=groupBy||[];this.globalOrderBy=orderBy||[];this._extractSearchDefaultsFromGlobalContext();await this._reloadSections();}
get categories(){return[...this.sections.values()].filter((s)=>s.type==="category");}
get context(){if(!this._context){this._context=makeContext([this.globalContext,this._getContext()]);}
return deepCopy(this._context);}
get domain(){if(!this._domain){this._domain=this._getDomain();}
return deepCopy(this._domain);}
get domainString(){return this._getDomain({raw:true}).toString();}
get domainEvalContext(){return Object.assign({},this.globalContext,user.context);}
get comparison(){if(!this.searchMenuTypes.has("comparison")){return null;}
if(this._comparison===undefined){if(this.globalComparison){this._comparison=this.globalComparison;}else{const comparison=this.getFullComparison();if(comparison){const{fieldName,range,rangeDescription,comparisonRange,comparisonRangeDescription,}=comparison;const domains=[{arrayRepr:Domain.and([this.domain,range]).toList(),description:rangeDescription,},{arrayRepr:Domain.and([this.domain,comparisonRange]).toList(),description:comparisonRangeDescription,},];this._comparison={domains,fieldName};}else{this._comparison=null;}}}
return deepCopy(this._comparison);}
get facets(){const isValidType=(type)=>!["groupBy","comparison"].includes(type)||this.searchMenuTypes.has(type);const facets=[];for(const facet of this._getFacets()){if(!isValidType(facet.type)){continue;}
facets.push(facet);}
return facets;}
get filters(){return[...this.sections.values()].filter((s)=>s.type==="filter");}
get groupBy(){if(!this.searchMenuTypes.has("groupBy")){return[];}
if(!this._groupBy){this._groupBy=this._getGroupBy();}
return deepCopy(this._groupBy);}
get orderBy(){if(!this._orderBy){this._orderBy=this._getOrderBy();}
return deepCopy(this._orderBy);}
get isDebugMode(){return!!this.env.debug;}
addAutoCompletionValues(searchItemId,autocompleteValue){const searchItem=this.searchItems[searchItemId];if(!["field","field_property"].includes(searchItem.type)){return;}
const{label,value,operator}=autocompleteValue;const queryElem=this.query.find((queryElem)=>queryElem.searchItemId===searchItemId&&"autocompleteValue"in queryElem&&queryElem.autocompleteValue.value===value&&queryElem.autocompleteValue.operator===operator);if(!queryElem){this.query.push({searchItemId,autocompleteValue});}else{queryElem.autocompleteValue.label=label;}
this._notify();}
clearQuery(){this.query=[];this.orderByCount=false;this._notify();}
async createNewFavorite(params){const{preFavorite,irFilter}=this._getIrFilterDescription(params);const serverSideId=await this._createIrFilters(irFilter);this.blockNotification=true;this.clearQuery();const favorite={...preFavorite,type:"favorite",id:this.nextId,groupId:this.nextGroupId,groupNumber:preFavorite.userId?FAVORITE_PRIVATE_GROUP:FAVORITE_SHARED_GROUP,removable:true,serverSideId,};this.searchItems[this.nextId]=favorite;this.query.push({searchItemId:this.nextId});this.nextGroupId++;this.nextId++;this.blockNotification=false;this._notify();}
async _createIrFilters(irFilter){const serverSideId=await this.orm.call("ir.filters","create_or_replace",[irFilter]);this.env.bus.trigger("CLEAR-CACHES");return serverSideId;}
createNewFilters(prefilters){if(!prefilters.length){return[];}
prefilters.forEach((preFilter)=>{const filter=Object.assign(preFilter,{groupId:this.nextGroupId,groupNumber:this.nextGroupNumber,id:this.nextId,type:"filter",});this.searchItems[this.nextId]=filter;this.query.push({searchItemId:this.nextId});this.nextId++;});this.nextGroupId++;this.nextGroupNumber++;this._notify();}
createNewGroupBy(fieldName,{interval,invisible}={}){const field=this.searchViewFields[fieldName];const{string,type:fieldType}=field;const firstGroupBy=Object.values(this.searchItems).find((f)=>f.type==="groupBy");const preSearchItem={description:string||fieldName,fieldName,fieldType,groupId:firstGroupBy?firstGroupBy.groupId:this.nextGroupId++,groupNumber:this.nextGroupNumber,id:this.nextId,custom:true,};if(invisible){preSearchItem.invisible="True";}
if(["date","datetime"].includes(fieldType)){this.searchItems[this.nextId]=Object.assign({type:"dateGroupBy",defaultIntervalId:interval||DEFAULT_INTERVAL},preSearchItem);this.toggleDateGroupBy(this.nextId);}else{this.searchItems[this.nextId]=Object.assign({type:"groupBy"},preSearchItem);this.toggleSearchItem(this.nextId);}
this.nextGroupNumber++;this.nextId++;this._notify();}
deactivateGroup(groupId){this.query=this.query.filter((queryElem)=>{const searchItem=this.searchItems[queryElem.searchItemId];return searchItem.groupId!==groupId;});this._checkComparisonStatus();this._checkOrderByCountStatus();this._notify();}
async deleteFavorite(favoriteId){const searchItem=this.searchItems[favoriteId];if(searchItem.type!=="favorite"){return;}
await this._deleteIrFilters(searchItem);const index=this.query.findIndex((queryElem)=>queryElem.searchItemId===favoriteId);delete this.searchItems[favoriteId];if(index>=0){this.query.splice(index,1);}
this._notify();}
async _deleteIrFilters(searchItem){const{serverSideId}=searchItem;await this.orm.unlink("ir.filters",[serverSideId]);this.env.bus.trigger("CLEAR-CACHES");}
exportState(){const state={};execute(mapToArray,this,state);return state;}
getFullComparison(){let searchItem=null;for(const queryElem of this.query.slice().reverse()){const item=this.searchItems[queryElem.searchItemId];if(item.type==="comparison"){searchItem=item;break;}else if(item.type==="favorite"&&item.comparison){searchItem=item;break;}}
if(!searchItem){return null;}else if(searchItem.type==="favorite"){return searchItem.comparison;}
const{dateFilterId,comparisonOptionId}=searchItem;const dateFilter=this.searchItems[dateFilterId];const{fieldName,description:dateFilterDescription}=dateFilter;const selectedGeneratorIds=this._getSelectedGeneratorIds(dateFilterId);const{domain:range,description:rangeDescription}=constructDateDomain(this.referenceMoment,dateFilter,selectedGeneratorIds);const{domain:comparisonRange,description:comparisonRangeDescription}=constructDateDomain(this.referenceMoment,dateFilter,selectedGeneratorIds,comparisonOptionId);return{comparisonId:comparisonOptionId,fieldName,fieldDescription:dateFilterDescription,range:range.toList(),rangeDescription,comparisonRange:comparisonRange.toList(),comparisonRangeDescription,};}
getIrFilterValues(params){const{irFilter}=this._getIrFilterDescription(params);return irFilter;}
getPreFavoriteValues(params){const{preFavorite}=this._getIrFilterDescription(params);return preFavorite;}
getSearchItems(predicate){const searchItems=[];for(const searchItem of Object.values(this.searchItems)){const enrichedSearchitem=this._enrichItem(searchItem);if(enrichedSearchitem){const isInvisible="invisible"in searchItem&&evaluateExpr(searchItem.invisible,this.globalContext);if(!isInvisible&&(!predicate||predicate(enrichedSearchitem))){searchItems.push(enrichedSearchitem);}}}
if(searchItems.some((f)=>f.type==="favorite")){searchItems.sort((f1,f2)=>f1.groupNumber-f2.groupNumber);}
return searchItems;}
getSections(predicate){let sections=[...this.sections.values()].map((section)=>Object.assign({},section,{empty:!hasValues(section)}));if(predicate){sections=sections.filter(predicate);}
return sections.sort((s1,s2)=>s1.index-s2.index);}
search(){this.trigger("update");}
async splitAndAddDomain(domain,groupId){const group=groupId?this._getGroups().find((g)=>g.id===groupId):null;let context;if(group){const contexts=[];for(const activeItem of group.activeItems){const context=this._getSearchItemContext(activeItem);if(context){contexts.push(context);}}
context=makeContext(contexts);}
const getFieldDef=await this.makeGetFieldDef(this.resModel,treeFromDomain(domain));const tree=treeFromDomain(domain,{distributeNot:!this.isDebugMode,getFieldDef});const trees=!tree.negate&&tree.value==="&"?tree.children:[tree];const promises=trees.map(async(tree)=>{const description=await this.getDomainTreeDescription(this.resModel,tree);const preFilter={description,domain:domainFromTree(tree),invisible:"True",type:"filter",};if(context){preFilter.context=context;}
return preFilter;});const preFilters=await Promise.all(promises);this.blockNotification=true;if(group){const firstActiveItem=group.activeItems[0];const firstSearchItem=this.searchItems[firstActiveItem.searchItemId];const{type}=firstSearchItem;if(type==="favorite"){const activeItemGroupBys=this._getSearchItemGroupBys(firstActiveItem);for(const activeItemGroupBy of activeItemGroupBys){const[fieldName,interval]=activeItemGroupBy.split(":");this.createNewGroupBy(fieldName,{interval,invisible:true});}
const index=this.query.length-activeItemGroupBys.length;this.query=[...this.query.slice(index),...this.query.slice(0,index)];}
this.deactivateGroup(groupId);}
for(const preFilter of preFilters){this.createNewFilters([preFilter]);}
this.blockNotification=false;this._notify();}
toggleCategoryValue(sectionId,valueId){const category=this.sections.get(sectionId);category.activeValueId=valueId;this._notify();}
toggleFilterValues(sectionId,valueIds,forceTo=null){const filter=this.sections.get(sectionId);for(const valueId of valueIds){const value=filter.values.get(valueId);value.checked=forceTo===null?!value.checked:forceTo;}
this._notify();}
clearSections(sectionIds){for(const sectionId of sectionIds){const section=this.sections.get(sectionId);if(section.type==="category"){section.activeValueId=false;}else{for(const[,value]of section.values){value.checked=false;}}}
this._notify();}
toggleSearchItem(searchItemId){const searchItem=this.searchItems[searchItemId];switch(searchItem.type){case"dateFilter":case"dateGroupBy":case"field_property":case"field":{return;}}
const index=this.query.findIndex((queryElem)=>queryElem.searchItemId===searchItemId);if(index>=0){this.query.splice(index,1);this._checkOrderByCountStatus();}else{if(searchItem.type==="favorite"){this.query=[];}else if(searchItem.type==="comparison"){this.query=this.query.filter((queryElem)=>{const{type}=this.searchItems[queryElem.searchItemId];return type!=="comparison";});}
this.query.push({searchItemId});}
this._notify();}
toggleDateFilter(searchItemId,generatorId){const searchItem=this.searchItems[searchItemId];if(searchItem.type!=="dateFilter"){return;}
const generatorIds=generatorId?[generatorId]:searchItem.defaultGeneratorIds;for(const generatorId of generatorIds){const index=this.query.findIndex((queryElem)=>queryElem.searchItemId===searchItemId&&"generatorId"in queryElem&&queryElem.generatorId===generatorId);if(index>=0){this.query.splice(index,1);if(!yearSelected(this._getSelectedGeneratorIds(searchItemId))){this.query=this.query.filter((queryElem)=>queryElem.searchItemId!==searchItemId);}}else{if(generatorId.startsWith("custom")){const comparisonId=this._getActiveComparison()?.id;this.query=this.query.filter((queryElem)=>![searchItemId,comparisonId].includes(queryElem.searchItemId));this.query.push({searchItemId,generatorId});continue;}
this.query=this.query.filter((queryElem)=>queryElem.searchItemId!==searchItemId||!queryElem.generatorId.startsWith("custom"));this.query.push({searchItemId,generatorId});if(!yearSelected(this._getSelectedGeneratorIds(searchItemId))){const{defaultYearId}=getPeriodOptions(this.referenceMoment,searchItem.optionsParams).find((o)=>o.id===generatorId);this.query.push({searchItemId,generatorId:defaultYearId});}}}
this._checkComparisonStatus();this._notify();}
toggleDateGroupBy(searchItemId,intervalId){const searchItem=this.searchItems[searchItemId];if(searchItem.type!=="dateGroupBy"){return;}
intervalId=intervalId||searchItem.defaultIntervalId;const index=this.query.findIndex((queryElem)=>queryElem.searchItemId===searchItemId&&"intervalId"in queryElem&&queryElem.intervalId===intervalId);if(index>=0){this.query.splice(index,1);this._checkOrderByCountStatus();}else{this.query.push({searchItemId,intervalId});}
this._notify();}
async spawnCustomFilterDialog(){const domain=getDefaultDomain(this.searchViewFields);this.dialog.add(DomainSelectorDialog,{resModel:this.resModel,defaultConnector:"|",domain,context:this.domainEvalContext,onConfirm:(domain)=>this.splitAndAddDomain(domain),disableConfirmButton:(domain)=>domain===`[]`,title:_t("Add Custom Filter"),confirmButtonText:_t("Add"),discardButtonText:_t("Cancel"),isDebugMode:this.isDebugMode,});}
switchGroupBySort(){if(this.orderByCount==="Desc"){this.orderByCount="Asc";}else{this.orderByCount="Desc";}
this._notify();}
async getSearchItemsProperties(searchItem){if(searchItem.type!=="field"||searchItem.fieldType!=="properties"){return[];}
const field=this.searchViewFields[searchItem.fieldName];const definitionRecord=field.definition_record;const result=await this._fetchPropertiesDefinition(this.resModel,searchItem.fieldName);const searchItemIds=new Set();const existingFieldProperties={};for(const item of Object.values(this.searchItems)){if(item.type==="field_property"&&item.propertyItemId===searchItem.id){existingFieldProperties[item.propertyFieldDefinition.name]=item;}}
for(const{definitionRecordId,definitionRecordName,definitions}of result){for(const definition of definitions){if(definition.type==="separator"){continue;}
const existingSearchItem=existingFieldProperties[definition.name];if(existingSearchItem){existingSearchItem.description=`${definition.string} (${definitionRecordName})`;searchItemIds.add(existingSearchItem.id);continue;}
const id=this.nextId++;const newSearchItem={id,type:"field_property",fieldName:searchItem.fieldName,propertyDomain:[definitionRecord,"=",definitionRecordId],propertyFieldDefinition:definition,propertyItemId:searchItem.id,description:`${definition.string} (${definitionRecordName})`,groupId:this.nextGroupId++,};if(["many2many","tags"].includes(definition.type)){newSearchItem.operator="in";}
this.searchItems[id]=newSearchItem;searchItemIds.add(id);}}
return this.getSearchItems((searchItem)=>searchItemIds.has(searchItem.id));}
async fillSearchViewItemsProperty(){if(!this.searchViewFields){return;}
const fields=Object.values(this.searchViewFields);for(const field of fields){if(field.type!=="properties"){continue;}
const result=await this._fetchPropertiesDefinition(this.resModel,field.name);const searchItemsNames=Object.values(this.searchItems).filter((item)=>item.isProperty&&["groupBy","dateGroupBy"].includes(item.type)).map((item)=>item.fieldName);for(const{definitionRecordId,definitionRecordName,definitions}of result){const groupNames=definitions.map((definition)=>`group_by_${field.name}.${definition.name}`);Object.values(this.searchItems).forEach((searchItem)=>{if(searchItem.isProperty&&searchItem.definitionRecordId===definitionRecordId&&["groupBy","dateGroupBy"].includes(searchItem.type)&&!groupNames.includes(searchItem.name)){searchItem.type="group_by_property_deleted";}});for(const definition of definitions){const fullName=`${field.name}.${definition.name}`;this.searchViewFields[fullName]={name:fullName,readonly:false,relation:definition.comodel,required:false,searchable:false,selection:definition.selection,sortable:true,store:true,string:`${definition.string} (${definitionRecordName})`,type:definition.type,relatedPropertyField:field,};if(!searchItemsNames.includes(fullName)){const groupByItem={description:definition.string,definitionRecordId,definitionRecordName,fieldName:fullName,fieldType:definition.type,isProperty:true,name:`group_by_${field.name}.${definition.name}`,propertyFieldName:field.name,type:["datetime","date"].includes(definition.type)?"dateGroupBy":"groupBy",};this._createGroupOfSearchItems([groupByItem]);}}}}}
async _fetchPropertiesDefinition(resModel,fieldName){const domain=[];if(this.context.active_id){domain.push(["id","=",this.context.active_id]);}
const definitions=await this.fieldService.loadPropertyDefinitions(resModel,fieldName,domain);const result=groupBy(Object.values(definitions),(definition)=>definition.record_id);return Object.entries(result).map(([recordId,definitions])=>{return{definitionRecordId:parseInt(recordId),definitionRecordName:definitions[0]?.record_name,definitions,};});}
_activateDefaultSearchItems(defaultFavoriteId){if(defaultFavoriteId){this.toggleSearchItem(defaultFavoriteId);}else{Object.values(this.searchItems).filter((f)=>f.isDefault&&f.type!=="favorite").sort((f1,f2)=>(f1.defaultRank||100)-(f2.defaultRank||100)).forEach((f)=>{if(f.type==="dateFilter"){this.toggleDateFilter(f.id);}else if(f.type==="dateGroupBy"){this.toggleDateGroupBy(f.id);}else if(f.type==="field"){this.addAutoCompletionValues(f.id,f.defaultAutocompleteValue);}else{this.toggleSearchItem(f.id);}});}}
_checkComparisonStatus(){const activeComparison=this._getActiveComparison();if(!activeComparison){return;}
const{dateFilterId,id}=activeComparison;const dateFilterIsActive=this.query.some((queryElem)=>queryElem.searchItemId===dateFilterId);if(!dateFilterIsActive){this.query=this.query.filter((queryElem)=>queryElem.searchItemId!==id);}}
_checkOrderByCountStatus(){if(this.orderByCount&&!this.query.some((item)=>["dateGroupBy","groupBy"].includes(this.searchItems[item.searchItemId].type))){this.orderByCount=false;}}
_createCategoryTree(sectionId,result){const category=this.sections.get(sectionId);let{error_msg,parent_field:parentField,values}=result;if(error_msg){category.errorMsg=error_msg;values=[];}
if(category.hierarchize){category.parentField=parentField;}
for(const value of values){category.values.set(value.id,Object.assign({},value,{childrenIds:[],parentId:value[parentField]||false,}));}
for(const value of values){const{parentId}=category.values.get(value.id);if(parentId&&category.values.has(parentId)){category.values.get(parentId).childrenIds.push(value.id);}}
category.rootIds=[false];for(const value of values){const{parentId}=category.values.get(value.id);if(!parentId){category.rootIds.push(value.id);}}
const valueIds=[false,...values.map((val)=>val.id)];this._ensureCategoryValue(category,valueIds);}
_createFilterTree(sectionId,result){const filter=this.sections.get(sectionId);let{error_msg,values}=result;if(error_msg){filter.errorMsg=error_msg;values=[];}
values.forEach((value)=>{const oldValue=filter.values.get(value.id);value.checked=oldValue?oldValue.checked:false;});filter.values=new Map();const groupIds=[];if(filter.groupBy){const groups=new Map();for(const value of values){const groupId=value.group_id;if(!groups.has(groupId)){if(groupId){groupIds.push(groupId);}
groups.set(groupId,{id:groupId,name:value.group_name,values:new Map(),tooltip:value.group_tooltip,sequence:value.group_sequence,color_index:value.color_index,});const oldGroup=filter.groups&&filter.groups.get(groupId);groups.get(groupId).state=(oldGroup&&oldGroup.state)||false;}
groups.get(groupId).values.set(value.id,value);}
filter.groups=groups;filter.sortedGroupIds=sortBy(groupIds,(id)=>groups.get(id).sequence||groups.get(id).name);for(const group of filter.groups.values()){for(const[valueId,value]of group.values){filter.values.set(valueId,value);}}}else{for(const value of values){filter.values.set(value.id,value);}}}
_createGroupOfComparisons(dateFilters){const preSearchItem=[];for(const dateFilter of dateFilters){for(const comparisonOption of this.comparisonOptions){const{id:dateFilterId,description}=dateFilter;const preFilter={type:"comparison",comparisonOptionId:comparisonOption.id,description:`${description}: ${comparisonOption.description}`,dateFilterId,};preSearchItem.push(preFilter);}}
this._createGroupOfSearchItems(preSearchItem);}
_createGroupOfDynamicFilters(dynamicFilters){const pregroup=dynamicFilters.map((filter)=>{return{groupNumber:this.nextGroupNumber,description:filter.description,domain:filter.domain,isDefault:"is_default"in filter?filter.is_default:true,type:"filter",};});this.nextGroupNumber++;this._createGroupOfSearchItems(pregroup);}
_createGroupOfFavorites(irFilters){let defaultFavoriteId=null;irFilters.forEach((irFilter)=>{const favorite=this._irFilterToFavorite(irFilter);this._createGroupOfSearchItems([favorite]);if(favorite.isDefault){defaultFavoriteId=favorite.id;}});return defaultFavoriteId;}
_createGroupOfSearchItems(pregroup){pregroup.forEach((preSearchItem)=>{const searchItem=Object.assign(preSearchItem,{groupId:this.nextGroupId,id:this.nextId,});this.searchItems[this.nextId]=searchItem;this.nextId++;});this.nextGroupId++;}
_enrichItem(searchItem){if(searchItem.type==="field"&&searchItem.fieldType==="properties"){return{...searchItem};}
const queryElements=this.query.filter((queryElem)=>queryElem.searchItemId===searchItem.id);const isActive=Boolean(queryElements.length);const enrichSearchItem=Object.assign({isActive},searchItem);function _enrichOptions(options,selectedIds){return options.map((o)=>{const{description,id,groupNumber}=o;const isActive=selectedIds.some((optionId)=>optionId===id);return{description,id,groupNumber,isActive};});}
switch(searchItem.type){case"comparison":{const{dateFilterId}=searchItem;const dateFilterIsActive=this.query.some((queryElem)=>queryElem.searchItemId===dateFilterId&&!queryElem.generatorId.startsWith("custom"));if(!dateFilterIsActive){return null;}
break;}
case"dateFilter":enrichSearchItem.options=_enrichOptions(getPeriodOptions(this.referenceMoment,searchItem.optionsParams),queryElements.map((queryElem)=>queryElem.generatorId));break;case"dateGroupBy":enrichSearchItem.options=_enrichOptions(this.intervalOptions,queryElements.map((queryElem)=>queryElem.intervalId));break;case"field":case"field_property":enrichSearchItem.autocompleteValues=queryElements.map((queryElem)=>queryElem.autocompleteValue);break;}
return enrichSearchItem;}
_ensureCategoryValue(category,valueIds){if(!valueIds.includes(category.activeValueId)){category.activeValueId=valueIds[0];}}
_extractSearchDefaultsFromGlobalContext(){const searchDefaults={};const searchPanelDefaults={};for(const key in this.globalContext){const defaultValue=this.globalContext[key];const searchDefaultMatch=/^search_default_(.*)$/.exec(key);if(searchDefaultMatch){if(defaultValue){searchDefaults[searchDefaultMatch[1]]=defaultValue;}
delete this.globalContext[key];continue;}
const searchPanelDefaultMatch=/^searchpanel_default_(.*)$/.exec(key);if(searchPanelDefaultMatch){searchPanelDefaults[searchPanelDefaultMatch[1]]=defaultValue;delete this.globalContext[key];}}
return{searchDefaults,searchPanelDefaults};}
async _fetchCategories(categories){const filterDomain=this._getFilterDomain();const searchDomain=this.searchDomain;await Promise.all(categories.map(async(category)=>{const result=await this.orm.call(this.resModel,"search_panel_select_range",[category.fieldName],{category_domain:this._getCategoryDomain(category.id),context:this.globalContext,enable_counters:category.enableCounters,expand:category.expand,filter_domain:filterDomain,hierarchize:category.hierarchize,limit:category.limit,search_domain:searchDomain,});this._createCategoryTree(category.id,result);}));}
async _fetchFilters(filters){const evalContext={};for(const category of this.categories){evalContext[category.fieldName]=category.activeValueId;}
const categoryDomain=this._getCategoryDomain();const searchDomain=this.searchDomain;await Promise.all(filters.map(async(filter)=>{const result=await this.orm.call(this.resModel,"search_panel_select_multi_range",[filter.fieldName],{category_domain:categoryDomain,comodel_domain:new Domain(filter.domain).toList(evalContext),context:this.globalContext,enable_counters:filter.enableCounters,filter_domain:this._getFilterDomain(filter.id),expand:filter.expand,group_by:filter.groupBy||false,group_domain:this._getGroupDomain(filter),limit:filter.limit,search_domain:searchDomain,});this._createFilterTree(filter.id,result);}));}
async _fetchSections(categoriesToLoad,filtersToLoad){await this._fetchCategories(categoriesToLoad);await this._fetchFilters(filtersToLoad);this.searchPanelInfo.loaded=true;}
_getActiveComparison(){for(const queryElem of this.query){const searchItem=this.searchItems[queryElem.searchItemId];if(searchItem.type==="comparison"){return searchItem;}}
return null;}
_getCategoryDomain(excludedCategoryId){const domain=[];for(const category of this.categories){if(category.id===excludedCategoryId||!category.activeValueId){continue;}
const field=this.searchViewFields[category.fieldName];const operator=field.type==="many2one"&&category.parentField?"child_of":"=";domain.push([category.fieldName,operator,category.activeValueId]);}
return domain;}
_getContext(){const groups=this._getGroups();const contexts=[user.context];for(const group of groups){for(const activeItem of group.activeItems){const context=this._getSearchItemContext(activeItem);if(context){contexts.push(context);}}}
let context;try{context=makeContext(contexts);return context;}catch(error){throw new Error(_t("Failed to evaluate the context: %(context)s.\n%(error)s",{context,error:error.message,}));}}
_getDateFilterDomain(dateFilter,generatorIds,key="domain"){const dateFilterRange=constructDateDomain(this.referenceMoment,dateFilter,generatorIds);return dateFilterRange[key];}
_getDisplay(display={}){const{viewTypes}=this.searchPanelInfo;const{bannerRoute,viewType}=this.env.config;return{controlPanel:"controlPanel"in display?display.controlPanel:{},searchPanel:this.sections.size&&(!viewType||viewTypes.includes(viewType))&&("searchPanel"in display?display.searchPanel:true),banner:Boolean(bannerRoute),};}
_getDomain(params={}){const withSearchPanel="withSearchPanel"in params?params.withSearchPanel:true;const withGlobal="withGlobal"in params?params.withGlobal:true;const groups=this._getGroups();const domains=[];if(withGlobal){domains.push(this.globalDomain);}
for(const group of groups){const groupActiveItemDomains=[];for(const activeItem of group.activeItems){const domain=this._getSearchItemDomain(activeItem);if(domain){groupActiveItemDomains.push(domain);}}
const groupDomain=Domain.or(groupActiveItemDomains);domains.push(groupDomain);}
if(this.display.searchPanel&&withSearchPanel){domains.push(this._getSearchPanelDomain());}
let domain;try{domain=Domain.and(domains);return params.raw?domain:domain.toList(this.domainEvalContext);}catch(error){throw new Error(_t("Failed to evaluate the domain: %(domain)s.\n%(error)s",{domain:domain.toString(),error:error.message,}));}}
_getFacets(){const facets=[];const groups=this._getGroups();for(const group of groups){const groupActiveItemDomains=[];const values=[];let title;let type;for(const activeItem of group.activeItems){const domain=this._getSearchItemDomain(activeItem,{withDateFilterDomain:true,});if(domain){groupActiveItemDomains.push(domain);}
const searchItem=this.searchItems[activeItem.searchItemId];switch(searchItem.type){case"field_property":case"field":{type="field";title=searchItem.description;for(const autocompleteValue of activeItem.autocompletValues){values.push(autocompleteValue.label);}
break;}
case"groupBy":{type="groupBy";values.push(searchItem.description);break;}
case"dateGroupBy":{type="groupBy";for(const intervalId of activeItem.intervalIds){const option=this.intervalOptions.find((o)=>o.id===intervalId);values.push(`${searchItem.description}: ${option.description}`);}
break;}
case"dateFilter":{type="filter";const periodDescription=this._getDateFilterDomain(searchItem,activeItem.generatorIds,"description");values.push(`${searchItem.description}: ${periodDescription}`);break;}
default:{type=searchItem.type;values.push(searchItem.description);}}}
const facet={groupId:group.id,type,values,separator:type==="groupBy"?">":_t("or"),};if(type==="field"){facet.title=title;}else{if(type==="groupBy"&&this.orderByCount){facet.icon=FACET_ICONS[this.orderByCount==="Asc"?"groupByAsc":"groupByDesc"];}else{facet.icon=FACET_ICONS[type];}
facet.color=FACET_COLORS[type];}
if(groupActiveItemDomains.length){facet.domain=Domain.or(groupActiveItemDomains).toString();}
facets.push(facet);}
return facets;}
_getFieldDomain(field,autocompleteValues){const domains=autocompleteValues.map(({label,value,operator,enforceEqual})=>{let domain;if(field.filterDomain){let filterDomain=field.filterDomain;if(enforceEqual){filterDomain=field.filterDomain.replaceAll("'ilike'","'='").replaceAll('"ilike"','"="');}
domain=new Domain(filterDomain).toList({self:label.trim(),raw_value:value,});}else if(field.type==="field"){domain=[[field.fieldName,operator,value]];}else if(field.type==="field_property"){domain=[field.propertyDomain,[`${field.fieldName}.${field.propertyFieldDefinition.name}`,operator,value],];}
return new Domain(domain);});return Domain.or(domains);}
_getFilterDomain(excludedFilterId){const domain=[];function addCondition(fieldName,valueMap){const ids=[];for(const[valueId,value]of valueMap){if(value.checked){ids.push(valueId);}}
if(ids.length){domain.push([fieldName,"in",ids]);}}
for(const filter of this.filters){if(filter.id===excludedFilterId){continue;}
const{fieldName,groups,values}=filter;if(groups){for(const group of groups.values()){addCondition(fieldName,group.values);}}else{addCondition(fieldName,values);}}
return domain;}
_getGroupBy(){const groups=this._getGroups();const groupBys=[];for(const group of groups){for(const activeItem of group.activeItems){const activeItemGroupBys=this._getSearchItemGroupBys(activeItem);if(activeItemGroupBys){groupBys.push(...activeItemGroupBys);}}}
const groupBy=groupBys.length?groupBys:this.globalGroupBy.slice();return typeof groupBy==="string"?[groupBy]:groupBy;}
_getGroupDomain(filter){const{fieldName,groups,enableCounters}=filter;const{type:fieldType}=this.searchViewFields[fieldName];if(!enableCounters||!groups){return{many2one:[],many2many:{},}[fieldType];}
let groupDomain=null;if(fieldType==="many2one"){for(const group of groups.values()){const valueIds=[];let active=false;for(const[valueId,value]of group.values){const{checked}=value;valueIds.push(valueId);if(checked){active=true;}}
if(active){if(groupDomain){groupDomain=[[0,"=",1]];break;}else{groupDomain=[[fieldName,"in",valueIds]];}}}}else if(fieldType==="many2many"){const checkedValueIds=new Map();groups.forEach(({values},groupId)=>{values.forEach(({checked},valueId)=>{if(checked){if(!checkedValueIds.has(groupId)){checkedValueIds.set(groupId,[]);}
checkedValueIds.get(groupId).push(valueId);}});});groupDomain={};for(const[gId,ids]of checkedValueIds.entries()){for(const groupId of groups.keys()){if(gId!==groupId){const key=JSON.stringify(groupId);if(!groupDomain[key]){groupDomain[key]=[];}
groupDomain[key].push([fieldName,"in",ids]);}}}}
return groupDomain;}
_getGroups(){const preGroups=[];for(const queryElem of this.query){const{searchItemId}=queryElem;const{groupId}=this.searchItems[searchItemId];let preGroup=preGroups.find((group)=>group.id===groupId);if(!preGroup){preGroup={id:groupId,queryElements:[]};preGroups.push(preGroup);}
preGroup.queryElements.push(queryElem);}
const groups=[];for(const preGroup of preGroups){const{queryElements,id}=preGroup;const activeItems=[];for(const queryElem of queryElements){const{searchItemId}=queryElem;let activeItem=activeItems.find(({searchItemId:id})=>id===searchItemId);if("generatorId"in queryElem){if(!activeItem){activeItem={searchItemId,generatorIds:[]};activeItems.push(activeItem);}
activeItem.generatorIds.push(queryElem.generatorId);}else if("intervalId"in queryElem){if(!activeItem){activeItem={searchItemId,intervalIds:[]};activeItems.push(activeItem);}
activeItem.intervalIds.push(queryElem.intervalId);}else if("autocompleteValue"in queryElem){if(!activeItem){activeItem={searchItemId,autocompletValues:[]};activeItems.push(activeItem);}
activeItem.autocompletValues.push(queryElem.autocompleteValue);}else{if(!activeItem){activeItem={searchItemId};activeItems.push(activeItem);}}}
for(const activeItem of activeItems){if("intervalIds"in activeItem){activeItem.intervalIds.sort((g1,g2)=>rankInterval(g1)-rankInterval(g2));}}
groups.push({id,activeItems});}
return groups;}
_getIrFilterDescription(params={}){const{description,isDefault,isShared,embeddedActionId}=params;const fns=this.env.__getContext__.callbacks;const localContext=Object.assign({},...fns.map((fn)=>fn()));const gs=this.env.__getOrderBy__.callbacks;let localOrderBy;if(gs.length){localOrderBy=gs.flatMap((g)=>g());}
const context=makeContext([this._getContext(),localContext]);const userContext=user.context;for(const key in context){if(key in userContext||/^search(panel)?_default_/.test(key)){delete context[key];}}
const domain=this._getDomain({raw:true,withGlobal:false}).toString();const groupBys=this._getGroupBy();const comparison=this.getFullComparison();const orderBy=localOrderBy||this._getOrderBy();const userId=isShared?false:user.userId;const preFavorite={description,isDefault,domain,context,groupBys,orderBy,userId,};const irFilter={name:description,action_id:this.env.config.actionId,model_id:this.resModel,domain,embedded_action_id:embeddedActionId,embedded_parent_res_id:this.globalContext.active_id||false,is_default:isDefault,sort:JSON.stringify(orderBy.map((o)=>`${o.name}${o.asc === false ? " desc" : ""}`)),user_id:userId,context:{group_by:groupBys,...context},};if(comparison){preFavorite.comparison=comparison;irFilter.context.comparison=comparison;}
return{preFavorite,irFilter};}
_getOrderBy(){const groups=this._getGroups();const orderBy=[];if(this.groupBy.length&&this.orderByCount){orderBy.push({name:"__count",asc:this.orderByCount==="Asc"});}
for(const group of groups){for(const activeItem of group.activeItems){const{searchItemId}=activeItem;const searchItem=this.searchItems[searchItemId];if(searchItem.type==="favorite"){orderBy.push(...searchItem.orderBy);}}}
return orderBy.length?orderBy:this.globalOrderBy;}
_getSearchItemContext(activeItem){const{searchItemId}=activeItem;const searchItem=this.searchItems[searchItemId];switch(searchItem.type){case"field":{let context={};if(searchItem.context){try{const self=activeItem.autocompletValues.map((autocompleValue)=>autocompleValue.value);context=evaluateExpr(searchItem.context,{self});if(typeof context!=="object"){throw Error();}}catch(error){throw new Error(_t("Failed to evaluate the context: %(context)s.\n%(error)s",{context:searchItem.context,error:error.message,}));}}
if(searchItem.isDefault&&searchItem.fieldType==="many2one"){context[`default_${searchItem.fieldName}`]=searchItem.defaultAutocompleteValue.value;}
return context;}
case"favorite":case"filter":{return makeContext([searchItem.context&&deepCopy(searchItem.context)]);}
default:{return null;}}}
_getSearchItemDomain(activeItem,options={}){const{searchItemId}=activeItem;const searchItem=this.searchItems[searchItemId];switch(searchItem.type){case"field_property":case"field":{return this._getFieldDomain(searchItem,activeItem.autocompletValues);}
case"dateFilter":{const{dateFilterId}=this._getActiveComparison()||{};if(options.withDateFilterDomain||!(this.searchMenuTypes.has("comparison")&&dateFilterId===searchItemId)){return this._getDateFilterDomain(searchItem,activeItem.generatorIds);}
return new Domain([]);}
case"filter":case"favorite":{return searchItem.domain;}
default:{return null;}}}
_getSearchItemGroupBys(activeItem){const{searchItemId}=activeItem;const searchItem=this.searchItems[searchItemId];switch(searchItem.type){case"dateGroupBy":{const{fieldName}=searchItem;return activeItem.intervalIds.map((intervalId)=>`${fieldName}:${intervalId}`);}
case"groupBy":{return[searchItem.fieldName];}
case"favorite":{return searchItem.groupBys;}
default:{return null;}}}
_getSelectedGeneratorIds(dateFilterId){const selectedOptionIds=[];for(const queryElem of this.query){if(queryElem.searchItemId===dateFilterId&&"generatorId"in queryElem){selectedOptionIds.push(queryElem.generatorId);}}
return selectedOptionIds;}
_getSearchPanelDomain(){return Domain.and([this._getCategoryDomain(),this._getFilterDomain()]);}
_importState(state){execute(arraytoMap,state,this);}
_irFilterToFavorite(irFilter){let userId=false;if(Array.isArray(irFilter.user_id)){userId=irFilter.user_id[0];}
const groupNumber=userId?FAVORITE_PRIVATE_GROUP:FAVORITE_SHARED_GROUP;const context=evaluateExpr(irFilter.context,user.context);let groupBys=[];if(context.group_by){groupBys=context.group_by;delete context.group_by;}
let comparison;if(context.comparison){comparison=context.comparison;if(typeof comparison.range==="string"){comparison.range=new Domain(comparison.range).toList();}
if(typeof comparison.comparisonRange==="string"){comparison.comparisonRange=new Domain(comparison.comparisonRange).toList();}
delete context.comparison;}
let sort;try{sort=JSON.parse(irFilter.sort);}catch(err){if(err instanceof SyntaxError){sort=[];}else{throw err;}}
const orderBy=sort.map((order)=>{let fieldName;let asc;const sqlNotation=order.split(" ");if(sqlNotation.length>1){fieldName=sqlNotation[0];asc=sqlNotation[1]==="asc";}else{fieldName=order[0]==="-"?order.slice(1):order;asc=order[0]==="-"?false:true;}
return{asc:asc,name:fieldName,};});const favorite={context,description:irFilter.name,domain:irFilter.domain,groupBys,groupNumber,orderBy,removable:true,serverSideId:irFilter.id,type:"favorite",userId,};if(irFilter.is_default){favorite.isDefault=irFilter.is_default;}
if(comparison){favorite.comparison=comparison;}
return favorite;}
async _notify(){if(this.blockNotification){return;}
this._reset();await this._reloadSections();this.trigger("update");}
async _reloadSections(){this.blockNotification=true;const searchDomain=this._getDomain({withSearchPanel:false});const searchDomainChanged=this.searchPanelInfo.shouldReload||JSON.stringify(this.searchDomain)!==JSON.stringify(searchDomain);this.searchDomain=searchDomain;const toFetch=(section)=>section.enableCounters||(searchDomainChanged&&!section.expand);const categoriesToFetch=this.categories.filter(toFetch);const filtersToFetch=this.filters.filter(toFetch);if(searchDomainChanged||Boolean(categoriesToFetch.length+filtersToFetch.length)){if(this.display.searchPanel){this.sectionsPromise=this._fetchSections(categoriesToFetch,filtersToFetch);if(this._shouldWaitForData(searchDomainChanged)){await this.sectionsPromise;}}
this.searchPanelInfo.shouldReload=!this.display.searchPanel;}
this.blockNotification=false;}
_reset(){delete this._comparison;this._context=null;this._domain=null;this._groupBy=null;this._orderBy=null;}
_shouldWaitForData(searchDomainChanged){if(this.categories.length&&this.filters.some((filter)=>filter.domain!=="[]")){return true;}
if(!this.searchDomain.length){return false;}
return[...this.sections.values()].some((section)=>!section.expand&&searchDomainChanged);}
__legacyParseSearchPanelArchAnyway(searchViewDescription,searchViewFields){if(this.searchPanelInfo){return;}
const parser=new SearchArchParser(searchViewDescription,searchViewFields);const{searchPanelInfo}=parser.parse();this.searchPanelInfo={...searchPanelInfo,loaded:false,shouldReload:false};}}
return __exports;});;

/* /web/static/src/search/search_panel/search_panel.js */
odoo.define('@web/search/search_panel/search_panel',['@web/core/dropdown/dropdown','@web/core/utils/hooks','@odoo/owl','@web/search/action_hook'],function(require){'use strict';let __exports={};const{Dropdown}=require("@web/core/dropdown/dropdown");const{useBus}=require("@web/core/utils/hooks");const{Component,onMounted,onWillStart,onWillUpdateProps,reactive,useEffect,useRef,useState,}=require("@odoo/owl");const{useSetupAction}=require("@web/search/action_hook");const isFilter=(s)=>s.type==="filter";const isActiveCategory=(s)=>s.type==="category"&&s.activeValueId;const nameOfCheckedValues=(values)=>{const names=[];for(const[,value]of values){if(value.checked){names.push(value.display_name);}}
return names;};const SearchPanel=__exports.SearchPanel=class SearchPanel extends Component{static template="web.SearchPanel";static props={};static components={Dropdown,};static subTemplates={section:"web.SearchPanel.Section",category:"web.SearchPanel.Category",filtersGroup:"web.SearchPanel.FiltersGroup",};setup(){this.state=useState({active:{},expanded:{},showMobileSearch:false,sidebarExpanded:!this.env.searchModel.searchPanelInfo.fold,});this.hasImportedState=false;this.root=useRef("root");this.scrollTop=0;this.dropdownStates={};this.width="10px";this.importState(this.env.searchPanelState);useBus(this.env.searchModel,"update",async()=>{await this.env.searchModel.sectionsPromise;this.updateActiveValues();this.render();});useEffect((el)=>{if(el&&this.hasImportedState){el.style["min-width"]=this.width;el.scroll({top:this.scrollTop});}},()=>[this.root.el]);useSetupAction({getGlobalState:()=>{return{searchPanel:this.exportState(),};},});onWillStart(async()=>{await this.env.searchModel.sectionsPromise;this.expandDefaultValue();this.updateActiveValues();});onWillUpdateProps(async()=>{await this.env.searchModel.sectionsPromise;this.updateActiveValues();});onMounted(()=>{this.updateGroupHeadersChecked();});}
get sections(){return this.env.searchModel.getSections((s)=>!s.empty);}
exportState(){const exported={expanded:this.state.expanded,scrollTop:this.root.el?.scrollTop||0,sidebarExpanded:this.state.sidebarExpanded,width:this.width,};return JSON.stringify(exported);}
importState(state){this.hasImportedState=Boolean(state);if(this.hasImportedState){this.state.expanded=state.expanded;this.scrollTop=state.scrollTop;this.state.sidebarExpanded=state.sidebarExpanded;this.width=state.width;}}
getDropdownState(sectionId){if(!this.dropdownStates[sectionId]){const state=reactive({isOpen:false,open:()=>(state.isOpen=true),close:()=>(state.isOpen=false),});this.dropdownStates[sectionId]=reactive(state);}
return this.dropdownStates[sectionId];}
expandDefaultValue(){if(this.hasImportedState){return;}
const categories=this.env.searchModel.getSections((s)=>s.type==="category");for(const category of categories){this.state.expanded[category.id]={};if(category.activeValueId){const ancestorIds=this.getAncestorValueIds(category,category.activeValueId);for(const ancestorId of ancestorIds){this.state.expanded[category.id][ancestorId]=true;}}}}
getAncestorValueIds(category,categoryValueId){const{parentId}=category.values.get(categoryValueId);return parentId?[...this.getAncestorValueIds(category,parentId),parentId]:[];}
getCategorySelection(){const activeCategories=this.env.searchModel.getSections(isActiveCategory);const selection=[];for(const category of activeCategories){const parentIds=this.getAncestorValueIds(category,category.activeValueId);const orderedCategoryNames=[...parentIds,category.activeValueId].map((valueId)=>category.values.get(valueId).display_name);selection.push({values:orderedCategoryNames,icon:category.icon,color:category.color,});}
return selection;}
getFilterSelection(){const filters=this.env.searchModel.getSections(isFilter);const selection=[];for(const{groups,values,icon,color}of filters){let filterValues;if(groups){filterValues=Object.keys(groups).map((groupId)=>nameOfCheckedValues(groups[groupId].values)).flat();}else if(values){filterValues=nameOfCheckedValues(values);}
if(filterValues.length){selection.push({values:filterValues,icon,color});}}
return selection;}
hasSelection(sectionId=0){if(sectionId){const sectionState=this.state.active[sectionId];if(sectionState instanceof Object){return Object.values(sectionState).some((val)=>val);}
return Boolean(sectionState);}
return Object.keys(this.state.active).some((key)=>this.hasSelection(key));}
clearSelection(sectionId=0){const sectionIds=sectionId?[sectionId]:Object.keys(this.state.active).map(Number);this.env.searchModel.clearSections(sectionIds);}
async toggleCategory(category,value){if(value.childrenIds.length){const categoryState=this.state.expanded[category.id];if(categoryState[value.id]&&category.activeValueId===value.id){delete categoryState[value.id];}else{categoryState[value.id]=true;}}else{this.getDropdownState(category.id).close();}
if(category.activeValueId!==value.id){this.env.searchModel.toggleCategoryValue(category.id,value.id);}}
toggleSidebar(){this.state.sidebarExpanded=!this.state.sidebarExpanded;}
toggleFilterGroup(filterId,{values}){const valueIds=[];const checked=[...values.values()].every((value)=>this.state.active[filterId][value.id]);values.forEach(({id})=>{valueIds.push(id);this.state.active[filterId][id]=!checked;});this.env.searchModel.toggleFilterValues(filterId,valueIds,!checked);}
toggleFilterValue(filterId,valueId,{currentTarget}){this.state.active[filterId][valueId]=currentTarget.checked;this.updateGroupHeadersChecked();this.env.searchModel.toggleFilterValues(filterId,[valueId]);}
updateActiveValues(){for(const section of this.sections){if(section.type==="category"){this.state.active[section.id]=section.activeValueId;}else{this.state.active[section.id]={};if(section.groups){for(const group of section.groups.values()){for(const value of group.values.values()){this.state.active[section.id][value.id]=value.checked;}}}
if(section&&section.values){for(const value of section.values.values()){this.state.active[section.id][value.id]=value.checked;}}}}}
updateGroupHeadersChecked(){const groups=document.querySelectorAll(".o_search_panel_filter_group");for(const group of groups){const header=group.querySelector(":scope .o_search_panel_group_header input");const vals=[...group.querySelectorAll(":scope .o_search_panel_filter_value input")];header.checked=false;header.indeterminate=false;if(vals.every((v)=>v.checked)){header.checked=true;}else if(vals.some((v)=>v.checked)){header.indeterminate=true;}}}
_onStartResize(ev){if(ev.button!==0){return;}
const initialX=ev.pageX;const initialWidth=this.root.el.offsetWidth;const resizeStoppingEvents=["keydown","pointerdown","pointerup"];const resizePanel=(ev)=>{ev.preventDefault();ev.stopPropagation();const maxWidth=Math.max(0.5*window.innerWidth,initialWidth);const delta=ev.pageX-initialX;const newWidth=Math.min(maxWidth,Math.max(10,initialWidth+delta));this.width=`${newWidth}px`;this.root.el.style["min-width"]=this.width;};document.addEventListener("pointermove",resizePanel,true);const stopResize=(ev)=>{if(ev.type==="pointerdown"&&ev.button===0){return;}
ev.preventDefault();ev.stopPropagation();document.removeEventListener("pointermove",resizePanel,true);resizeStoppingEvents.forEach((stoppingEvent)=>{document.removeEventListener(stoppingEvent,stopResize,true);});document.activeElement.blur();};resizeStoppingEvents.forEach((stoppingEvent)=>{document.addEventListener(stoppingEvent,stopResize,true);});}}
return __exports;});;

/* /web/static/src/search/utils/dates.js */
odoo.define('@web/search/utils/dates',['@web/core/l10n/translation','@web/core/domain','@web/core/l10n/dates','@web/core/l10n/localization','@web/core/utils/numbers','@web/core/utils/objects'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{Domain}=require("@web/core/domain");const{serializeDate,serializeDateTime}=require("@web/core/l10n/dates");const{localization}=require("@web/core/l10n/localization");const{clamp}=require("@web/core/utils/numbers");const{pick}=require("@web/core/utils/objects");const QUARTERS=__exports.QUARTERS={1:{description:_t("Q1"),coveredMonths:[1,2,3]},2:{description:_t("Q2"),coveredMonths:[4,5,6]},3:{description:_t("Q3"),coveredMonths:[7,8,9]},4:{description:_t("Q4"),coveredMonths:[10,11,12]},};const QUARTER_OPTIONS=__exports.QUARTER_OPTIONS={fourth_quarter:{id:"fourth_quarter",groupNumber:1,description:QUARTERS[4].description,setParam:{quarter:4},granularity:"quarter",},third_quarter:{id:"third_quarter",groupNumber:1,description:QUARTERS[3].description,setParam:{quarter:3},granularity:"quarter",},second_quarter:{id:"second_quarter",groupNumber:1,description:QUARTERS[2].description,setParam:{quarter:2},granularity:"quarter",},first_quarter:{id:"first_quarter",groupNumber:1,description:QUARTERS[1].description,setParam:{quarter:1},granularity:"quarter",},};const DEFAULT_INTERVAL=__exports.DEFAULT_INTERVAL="month";const INTERVAL_OPTIONS=__exports.INTERVAL_OPTIONS={year:{description:_t("Year"),id:"year",groupNumber:1},quarter:{description:_t("Quarter"),id:"quarter",groupNumber:1},month:{description:_t("Month"),id:"month",groupNumber:1},week:{description:_t("Week"),id:"week",groupNumber:1},day:{description:_t("Day"),id:"day",groupNumber:1},};const COMPARISON_OPTIONS=__exports.COMPARISON_OPTIONS={previous_period:{description:_t("Previous Period"),id:"previous_period",},previous_year:{description:_t("Previous Year"),id:"previous_year",plusParam:{years:-1},},};const PER_YEAR=__exports.PER_YEAR={year:1,quarter:4,month:12,};__exports.constructDateDomain=constructDateDomain;function constructDateDomain(referenceMoment,searchItem,selectedOptionIds,comparisonOptionId){let plusParam;let selectedOptions;if(comparisonOptionId){[plusParam,selectedOptions]=getComparisonParams(referenceMoment,searchItem,selectedOptionIds,comparisonOptionId);}else{selectedOptions=getSelectedOptions(referenceMoment,searchItem,selectedOptionIds);}
if("withDomain"in selectedOptions){return{description:selectedOptions.withDomain[0].description,domain:Domain.and([selectedOptions.withDomain[0].domain,searchItem.domain]),};}
const yearOptions=selectedOptions.year;const otherOptions=[...(selectedOptions.quarter||[]),...(selectedOptions.month||[])];sortPeriodOptions(yearOptions);sortPeriodOptions(otherOptions);const ranges=[];const{fieldName,fieldType}=searchItem;for(const yearOption of yearOptions){const constructRangeParams={referenceMoment,fieldName,fieldType,plusParam,};if(otherOptions.length){for(const option of otherOptions){const setParam=Object.assign({},yearOption.setParam,option?option.setParam:{});const{granularity}=option;const range=constructDateRange(Object.assign({granularity,setParam},constructRangeParams));ranges.push(range);}}else{const{granularity,setParam}=yearOption;const range=constructDateRange(Object.assign({granularity,setParam},constructRangeParams));ranges.push(range);}}
let domain=Domain.combine(ranges.map((range)=>range.domain),"OR");domain=Domain.and([domain,searchItem.domain]);const description=ranges.map((range)=>range.description).join("/");return{domain,description};}
__exports.constructDateRange=constructDateRange;function constructDateRange(params){const{referenceMoment,fieldName,fieldType,granularity,setParam,plusParam}=params;if("quarter"in setParam){setParam.month=QUARTERS[setParam.quarter].coveredMonths[0];delete setParam.quarter;}
const date=referenceMoment.set(setParam).plus(plusParam||{});const leftDate=date.startOf(granularity);const rightDate=date.endOf(granularity);let leftBound;let rightBound;if(fieldType==="date"){leftBound=serializeDate(leftDate);rightBound=serializeDate(rightDate);}else{leftBound=serializeDateTime(leftDate);rightBound=serializeDateTime(rightDate);}
const domain=new Domain(["&",[fieldName,">=",leftBound],[fieldName,"<=",rightBound]]);const descriptions=[date.toFormat("yyyy")];const method=localization.direction==="rtl"?"push":"unshift";if(granularity==="month"){descriptions[method](date.toFormat("MMMM"));}else if(granularity==="quarter"){const quarter=date.quarter;descriptions[method](QUARTERS[quarter].description.toString());}
const description=descriptions.join(" ");return{domain,description};}
__exports.getComparisonOptions=getComparisonOptions;function getComparisonOptions(){return getOptionsWithDescriptions(COMPARISON_OPTIONS);}
__exports.getComparisonParams=getComparisonParams;function getComparisonParams(referenceMoment,searchItem,selectedOptionIds,comparisonOptionId){const comparisonOption=COMPARISON_OPTIONS[comparisonOptionId];const selectedOptions=getSelectedOptions(referenceMoment,searchItem,selectedOptionIds);if(comparisonOption.plusParam){return[comparisonOption.plusParam,selectedOptions];}
const plusParam={};let globalGranularity="year";if(selectedOptions.month){globalGranularity="month";}else if(selectedOptions.quarter){globalGranularity="quarter";}
const granularityFactor=PER_YEAR[globalGranularity];const years=selectedOptions.year.map((o)=>o.setParam.year);const yearMin=Math.min(...years);const yearMax=Math.max(...years);let optionMin=0;let optionMax=0;if(selectedOptions.quarter){const quarters=selectedOptions.quarter.map((o)=>o.setParam.quarter);if(globalGranularity==="month"){delete selectedOptions.quarter;for(const quarter of quarters){for(const month of QUARTERS[quarter].coveredMonths){const monthOption=selectedOptions.month.find((o)=>o.setParam.month===month);if(!monthOption){selectedOptions.month.push({setParam:{month},granularity:"month",});}}}}else{optionMin=Math.min(...quarters);optionMax=Math.max(...quarters);}}
if(selectedOptions.month){const months=selectedOptions.month.map((o)=>o.setParam.month);optionMin=Math.min(...months);optionMax=Math.max(...months);}
const num=-1+granularityFactor*(yearMin-yearMax)+optionMin-optionMax;const key=globalGranularity==="year"?"years":globalGranularity==="month"?"months":"quarters";plusParam[key]=num;return[plusParam,selectedOptions];}
__exports.getIntervalOptions=getIntervalOptions;function getIntervalOptions(){return getOptionsWithDescriptions(INTERVAL_OPTIONS);}
__exports.getOptionsWithDescriptions=getOptionsWithDescriptions;function getOptionsWithDescriptions(OPTIONS){const options=[];for(const option of Object.values(OPTIONS)){options.push(Object.assign({},option,{description:option.description.toString()}));}
return options;}
__exports.getPeriodOptions=getPeriodOptions;function getPeriodOptions(referenceMoment,optionsParams){return[...getMonthPeriodOptions(referenceMoment,optionsParams),...getQuarterPeriodOptions(optionsParams),...getYearPeriodOptions(referenceMoment,optionsParams),...getCustomPeriodOptions(optionsParams),];}
__exports.toGeneratorId=toGeneratorId;function toGeneratorId(unit,offset){if(!offset){return unit;}
const sep=offset>0?"+":"-";const val=Math.abs(offset);return`${unit}${sep}${val}`;}
function getMonthPeriodOptions(referenceMoment,optionsParams){const{startYear,endYear,startMonth,endMonth}=optionsParams;return[...Array(endMonth-startMonth+1).keys()].map((i)=>{const monthOffset=startMonth+i;const date=referenceMoment.plus({months:monthOffset,years:clamp(0,startYear,endYear),});const yearOffset=date.year-referenceMoment.year;return{id:toGeneratorId("month",monthOffset),defaultYearId:toGeneratorId("year",clamp(yearOffset,startYear,endYear)),description:date.toFormat("MMMM"),granularity:"month",groupNumber:1,plusParam:{months:monthOffset},};}).reverse();}
function getQuarterPeriodOptions(optionsParams){const{startYear,endYear}=optionsParams;const defaultYearId=toGeneratorId("year",clamp(0,startYear,endYear));return Object.values(QUARTER_OPTIONS).map((quarter)=>({...quarter,defaultYearId,}));}
function getYearPeriodOptions(referenceMoment,optionsParams){const{startYear,endYear}=optionsParams;return[...Array(endYear-startYear+1).keys()].map((i)=>{const offset=startYear+i;const date=referenceMoment.plus({years:offset});return{id:toGeneratorId("year",offset),description:date.toFormat("yyyy"),granularity:"year",groupNumber:2,plusParam:{years:offset},};}).reverse();}
function getCustomPeriodOptions(optionsParams){const{customOptions}=optionsParams;return customOptions.map((option)=>({id:option.id,description:option.description,granularity:"withDomain",groupNumber:3,domain:option.domain,}));}
__exports.getSelectedOptions=getSelectedOptions;function getSelectedOptions(referenceMoment,searchItem,selectedOptionIds){const selectedOptions={year:[]};const periodOptions=getPeriodOptions(referenceMoment,searchItem.optionsParams);for(const optionId of selectedOptionIds){const option=periodOptions.find((option)=>option.id===optionId);const granularity=option.granularity;if(!selectedOptions[granularity]){selectedOptions[granularity]=[];}
if(option.domain){selectedOptions[granularity].push(pick(option,"domain","description"));}else{const setParam=getSetParam(option,referenceMoment);selectedOptions[granularity].push({granularity,setParam});}}
return selectedOptions;}
__exports.getSetParam=getSetParam;function getSetParam(periodOption,referenceMoment){if(periodOption.granularity==="quarter"){return periodOption.setParam;}
const date=referenceMoment.plus(periodOption.plusParam);const granularity=periodOption.granularity;const setParam={[granularity]:date[granularity]};return setParam;}
__exports.rankInterval=rankInterval;function rankInterval(intervalOptionId){return Object.keys(INTERVAL_OPTIONS).indexOf(intervalOptionId);}
__exports.sortPeriodOptions=sortPeriodOptions;function sortPeriodOptions(options){options.sort((o1,o2)=>{var _a,_b;const granularity1=o1.granularity;const granularity2=o2.granularity;if(granularity1===granularity2){return(((_a=o1.setParam[granularity1])!==null&&_a!==void 0?_a:0)-
((_b=o2.setParam[granularity1])!==null&&_b!==void 0?_b:0));}
return granularity1<granularity2?-1:1;});}
__exports.yearSelected=yearSelected;function yearSelected(selectedOptionIds){return selectedOptionIds.some((optionId)=>optionId.startsWith("year"));}
return __exports;});;

/* /web/static/src/search/utils/group_by.js */
odoo.define('@web/search/utils/group_by',['@web/search/utils/dates'],function(require){'use strict';let __exports={};const{DEFAULT_INTERVAL,INTERVAL_OPTIONS}=require("@web/search/utils/dates");function errorMsg(descr){return`Invalid groupBy description: ${descr}`;}
__exports.getGroupBy=getGroupBy;function getGroupBy(descr,fields){let fieldName;let interval;let spec;[fieldName,interval]=descr.split(":");if(!fieldName){throw Error();}
if(fields){if(!fields[fieldName]&&!fieldName.includes(".")){throw Error(errorMsg(descr));}
const fieldType=fields[fieldName]?.type;if(["date","datetime"].includes(fieldType)){if(!interval){interval=DEFAULT_INTERVAL;}else if(!Object.keys(INTERVAL_OPTIONS).includes(interval)){throw Error(errorMsg(descr));}
spec=`${fieldName}:${interval}`;}else if(interval){throw Error(errorMsg(descr));}else{spec=fieldName;interval=null;}}else{if(interval){if(!Object.keys(INTERVAL_OPTIONS).includes(interval)){throw Error(errorMsg(descr));}
spec=`${fieldName}:${interval}`;}else{spec=fieldName;interval=null;}}
return{fieldName,interval,spec,toJSON(){return spec;},};}
return __exports;});;

/* /web/static/src/search/utils/misc.js */
odoo.define('@web/search/utils/misc',[],function(require){'use strict';let __exports={};const FACET_ICONS=__exports.FACET_ICONS={filter:"fa fa-filter",groupBy:"oi oi-group",groupByAsc:"fa fa-sort-numeric-asc",groupByDesc:"fa fa-sort-numeric-desc",favorite:"fa fa-star",comparison:"fa fa-adjust",};const FACET_COLORS=__exports.FACET_COLORS={filter:"primary",groupBy:"action",favorite:"warning",comparison:"danger",};const GROUPABLE_TYPES=__exports.GROUPABLE_TYPES=["boolean","char","date","datetime","integer","many2one","many2many","selection","tags",];return __exports;});;

/* /web/static/src/search/utils/order_by.js */
odoo.define('@web/search/utils/order_by',[],function(require){'use strict';let __exports={};__exports.orderByToString=orderByToString;function orderByToString(orderBy){return orderBy.map((o)=>`${o.name} ${o.asc ? "ASC" : "DESC"}`).join(", ");}
__exports.stringToOrderBy=stringToOrderBy;function stringToOrderBy(string){if(!string){return[];}
return string.split(",").map((order)=>{const splitOrder=order.trim().split(" ");if(splitOrder.length===2){return{name:splitOrder[0],asc:splitOrder[1].toLowerCase()==="asc",};}else{return{name:splitOrder[0],asc:true,};}});}
return __exports;});;

/* /web/static/src/search/with_search/with_search.js */
odoo.define('@web/search/with_search/with_search',['@odoo/owl','@web/search/action_hook','@web/search/search_model','@web/core/utils/hooks'],function(require){'use strict';let __exports={};const{Component,onWillStart,onWillUpdateProps,toRaw,useSubEnv}=require("@odoo/owl");const{CallbackRecorder,useSetupAction}=require("@web/search/action_hook");const{SearchModel}=require("@web/search/search_model");const{useBus,useService}=require("@web/core/utils/hooks");const SEARCH_KEYS=__exports.SEARCH_KEYS=["comparison","context","domain","groupBy","orderBy"];const WithSearch=__exports.WithSearch=class WithSearch extends Component{static template="web.WithSearch";static props={slots:Object,SearchModel:{type:Function,optional:true},resModel:String,globalState:{type:Object,optional:true},searchModelArgs:{type:Object,optional:true},display:{type:Object,optional:true},comparison:{type:[Object,{value:null}],optional:true},context:{type:Object,optional:true},domain:{type:Array,element:[String,Array],optional:true},groupBy:{type:Array,element:String,optional:true},orderBy:{type:Array,element:Object,optional:true},searchViewArch:{type:String,optional:true},searchViewFields:{type:Object,optional:true},searchViewId:{type:[Number,Boolean],optional:true},irFilters:{type:Array,element:Object,optional:true},loadIrFilters:{type:Boolean,optional:true},activateFavorite:{type:Boolean,optional:true},dynamicFilters:{type:Array,element:Object,optional:true},hideCustomGroupBy:{type:Boolean,optional:true},searchMenuTypes:{type:Array,element:String,optional:true},canOrderByCount:{type:Boolean,optional:true},};setup(){if(!this.env.__getContext__){useSubEnv({__getContext__:new CallbackRecorder()});}
if(!this.env.__getOrderBy__){useSubEnv({__getOrderBy__:new CallbackRecorder()});}
const SearchModelClass=this.props.SearchModel||SearchModel;this.searchModel=new SearchModelClass(this.env,{orm:useService("orm"),view:useService("view"),field:useService("field"),name:useService("name"),dialog:useService("dialog"),},this.props.searchModelArgs);const searchPanelState=this.props.globalState?.searchPanel?JSON.parse(this.props.globalState?.searchPanel):null;useSubEnv({searchModel:this.searchModel,searchPanelState});useBus(this.searchModel,"update",this.render);useSetupAction({getGlobalState:()=>{return{searchModel:JSON.stringify(this.searchModel.exportState()),};},});onWillStart(async()=>{const config={...toRaw(this.props)};if(config.globalState&&config.globalState.searchModel){config.state=JSON.parse(config.globalState.searchModel);delete config.globalState;}
await this.searchModel.load(config);});onWillUpdateProps(async(nextProps)=>{const config={};for(const key of SEARCH_KEYS){if(nextProps[key]!==undefined){config[key]=nextProps[key];}}
await this.searchModel.reload(config);});}}
return __exports;});;

/* /web/static/src/webclient/actions/action_container.js */
odoo.define('@web/webclient/actions/action_container',['@web/webclient/actions/action_dialog','@odoo/owl'],function(require){'use strict';let __exports={};const{ActionDialog}=require("@web/webclient/actions/action_dialog");const{Component,xml,onWillDestroy}=require("@odoo/owl");const ActionContainer=__exports.ActionContainer=class ActionContainer extends Component{static components={ActionDialog};static props={};static template=xml`
        <t t-name="web.ActionContainer">
          <div class="o_action_manager">
            <t t-if="info.Component" t-component="info.Component" className="'o_action'" t-props="info.componentProps" t-key="info.id"/>
          </div>
        </t>`;setup(){this.info={};this.onActionManagerUpdate=({detail:info})=>{this.info=info;this.render();};this.env.bus.addEventListener("ACTION_MANAGER:UPDATE",this.onActionManagerUpdate);onWillDestroy(()=>{this.env.bus.removeEventListener("ACTION_MANAGER:UPDATE",this.onActionManagerUpdate);});}}
return __exports;});;

/* /web/static/src/webclient/actions/action_dialog.js */
odoo.define('@web/webclient/actions/action_dialog',['@web/core/dialog/dialog','@web/core/debug/debug_menu','@web/core/debug/debug_context','@odoo/owl'],function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{DebugMenu}=require("@web/core/debug/debug_menu");const{useOwnDebugContext}=require("@web/core/debug/debug_context");const{useEffect}=require("@odoo/owl");const ActionDialog=__exports.ActionDialog=class ActionDialog extends Dialog{static components={...Dialog.components,DebugMenu};static template="web.ActionDialog";static props={...Dialog.props,close:Function,slots:{optional:true},ActionComponent:{optional:true},actionProps:{optional:true},actionType:{optional:true},title:{optional:true},};static defaultProps={...Dialog.defaultProps,withBodyPadding:false,};setup(){super.setup();useOwnDebugContext();useEffect(()=>{if(this.modalRef.el.querySelector(".modal-footer")?.childElementCount>1){const defaultButton=this.modalRef.el.querySelector(".modal-footer button.o-default-button");defaultButton.classList.add("d-none");}},()=>[]);}}
return __exports;});;

/* /web/static/src/webclient/actions/action_install_kiosk_pwa.js */
odoo.define('@web/webclient/actions/action_install_kiosk_pwa',['@web/core/registry','@web/core/utils/hooks','@web/webclient/actions/action_service','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{standardActionServiceProps}=require("@web/webclient/actions/action_service");const{Component,onWillStart}=require("@odoo/owl");const InstallKiosk=__exports.InstallKiosk=class InstallKiosk extends Component{static template="web.ActionInstallKioskPWA";static props={...standardActionServiceProps};setup(){this.resModel=this.props.action.res_model;this.orm=useService("orm");this.dialog=useService("dialog");onWillStart(async()=>{this.url=await this.orm.call(this.resModel,"get_kiosk_url",[this.props.action.context.active_id,]);});}
get appId(){return this.props.action.context.app_id||this.resModel;}
get installURL(){return`/scoped_app?app_id=${this.appId}&path=${encodeURIComponent(
            this.url.replace(document.location.origin + "/", "")
        )}`;}}
registry.category("actions").add("install_kiosk_pwa",InstallKiosk);return __exports;});;

/* /web/static/src/webclient/actions/action_service.js */
odoo.define('@web/webclient/actions/action_service',['@web/core/l10n/translation','@web/core/browser/browser','@web/core/context','@web/core/debug/debug_context','@web/core/py_js/py','@web/core/network/rpc','@web/core/registry','@web/core/user','@web/core/utils/concurrency','@web/core/utils/hooks','@web/views/view','@web/webclient/actions/action_dialog','@web/webclient/actions/reports/report_action','@web/core/orm_service','@web/search/action_hook','@web/search/control_panel/control_panel','@web/core/browser/router','@odoo/owl','@web/webclient/actions/reports/utils','@web/core/utils/objects','@web/core/utils/arrays','@web/session','@web/core/utils/strings'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{browser}=require("@web/core/browser/browser");const{makeContext}=require("@web/core/context");const{useDebugCategory}=require("@web/core/debug/debug_context");const{evaluateExpr}=require("@web/core/py_js/py");const{rpc,rpcBus}=require("@web/core/network/rpc");const{registry}=require("@web/core/registry");const{user}=require("@web/core/user");const{Deferred,KeepLast}=require("@web/core/utils/concurrency");const{useBus,useService}=require("@web/core/utils/hooks");const{View,ViewNotFoundError}=require("@web/views/view");const{ActionDialog}=require("@web/webclient/actions/action_dialog");const{ReportAction}=require("@web/webclient/actions/reports/report_action");const{UPDATE_METHODS}=require("@web/core/orm_service");const{CallbackRecorder}=require("@web/search/action_hook");const{ControlPanel}=require("@web/search/control_panel/control_panel");const{PATH_KEYS,router:_router,stateToUrl}=require("@web/core/browser/router");const{Component,markup,onMounted,onWillUnmount,onError,useChildSubEnv,xml,reactive,status,}=require("@odoo/owl");const{downloadReport,getReportUrl}=require("@web/webclient/actions/reports/utils");const{omit,pick,shallowEqual}=require("@web/core/utils/objects");const{zip}=require("@web/core/utils/arrays");const{session}=require("@web/session");const{exprToBoolean}=require("@web/core/utils/strings");class BlankComponent extends Component{static props=["onMounted","withControlPanel","*"];static template=xml`
        <ControlPanel display="{disableDropdown: true}" t-if="props.withControlPanel and !env.isSmall">
            <t t-set-slot="layout-buttons">
                <button class="btn btn-primary invisible"> empty </button>
            </t>
        </ControlPanel>`;static components={ControlPanel};setup(){useChildSubEnv({config:{breadcrumbs:[],noBreadcrumbs:true}});onMounted(()=>this.props.onMounted());}}
const actionHandlersRegistry=registry.category("action_handlers");const actionRegistry=registry.category("actions");__exports.clearUncommittedChanges=clearUncommittedChanges;async function clearUncommittedChanges(env){const callbacks=[];env.bus.trigger("CLEAR-UNCOMMITTED-CHANGES",callbacks);const res=await Promise.all(callbacks.map((fn)=>fn()));return!res.includes(false);}
const standardActionServiceProps=__exports.standardActionServiceProps={action:Object,actionId:{type:Number,optional:true},className:{type:String,optional:true},globalState:{type:Object,optional:true},state:{type:Object,optional:true},resId:{type:[Number,Boolean],optional:true},updateActionState:{type:Function,optional:true},};function parseActiveIds(ids){const activeIds=[];if(typeof ids==="string"){activeIds.push(...ids.split(",").map(Number));}else if(typeof ids==="number"){activeIds.push(ids);}
return activeIds;}
const DIALOG_SIZES={"extra-large":"xl",large:"lg",medium:"md",small:"sm",};const ControllerNotFoundError=__exports.ControllerNotFoundError=class ControllerNotFoundError extends Error{}
const InvalidButtonParamsError=__exports.InvalidButtonParamsError=class InvalidButtonParamsError extends Error{}
const CTX_KEY_REGEX=/^(?:(?:default_|search_default_|show_).+|.+_view_ref|group_by|active_id|active_ids|orderedBy)$/;const EMBEDDED_ACTIONS_CTX_KEYS=["current_embedded_action_id","parent_action_embedded_actions","parent_action_id","from_embedded_action",];const ControllerComponentTemplate=xml`<t t-component="Component" t-props="componentProps"/>`;__exports.makeActionManager=makeActionManager;function makeActionManager(env,router=_router){const breadcrumbCache={};const keepLast=new KeepLast();let id=0;let controllerStack=[];let dialogCloseProm;let actionCache={};let dialog=null;let nextDialog=null;router.hideKeyFromUrl("globalState");env.bus.addEventListener("CLEAR-CACHES",()=>{actionCache={};});rpcBus.addEventListener("RPC:RESPONSE",(ev)=>{const{model,method}=ev.detail.data.params;if(model==="ir.actions.act_window"&&UPDATE_METHODS.includes(method)){actionCache={};}});async function _controllersFromState(){const state=router.current;if(!state?.actionStack?.length){return[];}
const controllers=state.actionStack.slice(0,-1).map((actionState,index)=>{const controller=_makeController({displayName:actionState.displayName,virtual:true,action:{},props:{},state:{...actionState,actionStack:state.actionStack.slice(0,index+1)},currentState:{},});if(actionState.action){controller.action.id=actionState.action;const[actionRequestKey,clientAction]=actionRegistry.contains(actionState.action)?[actionState.action,actionRegistry.get(actionState.action)]:actionRegistry.getEntries().find((a)=>a[1].path===actionState.action)??[];if(actionRequestKey&&clientAction){if(state.actionStack[index+1]?.action===actionState.action){return;}
controller.action.tag=actionRequestKey;controller.action.type="ir.actions.client";controller.displayName=clientAction.displayName?.toString();}
if(actionState.active_id){controller.action.context={active_id:actionState.active_id};controller.currentState.active_id=actionState.active_id;}}
if(actionState.model){controller.action.type="ir.actions.act_window";controller.props.resModel=actionState.model;}
if(actionState.resId){controller.action.type||="ir.actions.act_window";controller.props.resId=actionState.resId;controller.currentState.resId=actionState.resId;controller.props.type="form";}
return controller;}).filter(Boolean);if(state.action&&state.resId&&controllers.at(-1)?.action?.id===state.action){const bcControllers=await _loadBreadcrumbs(controllers.slice(0,-1));controllers.at(-1).lazy=true;return[...bcControllers,controllers.at(-1)];}
return _loadBreadcrumbs(controllers);}
async function _loadBreadcrumbs(controllers){const toFetch=[];const keys=[];for(const{action,state,displayName}of controllers){if(action.id==="menu"||(action.type==="ir.actions.client"&&!displayName)){continue;}
const actionInfo=pick(state,"action","model","resId");const key=JSON.stringify(actionInfo);keys.push(key);if(displayName){breadcrumbCache[key]={display_name:displayName};}
if(key in breadcrumbCache){continue;}
toFetch.push(actionInfo);}
if(toFetch.length){const req=rpc("/web/action/load_breadcrumbs",{actions:toFetch});for(const[i,info]of toFetch.entries()){const key=JSON.stringify(info);breadcrumbCache[key]=req.then((res)=>{breadcrumbCache[key]=res[i];return res[i];});}}
const results=await Promise.all(keys.map((k)=>breadcrumbCache[k]));const controllersToRemove=[];for(const[controller,res]of zip(controllers,results)){if("display_name"in res){controller.displayName=res.display_name;}else{controllersToRemove.push(controller);if("error"in res){console.warn("The following element was removed from the breadcrumb and from the url.\n",controller.state,"\nThis could be because the action wasn't found or because the user doesn't have the right to access to the record, the original error is :\n",res.error);}}}
return controllers.filter((c)=>!controllersToRemove.includes(c));}
function _removeDialog(){if(dialog){const{onClose,remove}=dialog;dialog=null;remove();return onClose;}}
function _getCurrentController(){const stack=controllerStack;return stack.length?stack[stack.length-1]:null;}
async function _loadAction(actionRequest,context={}){if(typeof actionRequest==="string"&&actionRegistry.contains(actionRequest)){return{target:"current",tag:actionRequest,type:"ir.actions.client",};}
if(typeof actionRequest==="string"||typeof actionRequest==="number"){const ctx=makeContext([user.context,context]);delete ctx.params;const key=`${JSON.stringify(actionRequest)},${JSON.stringify(ctx)}`;let action=await actionCache[key];if(!action){actionCache[key]=rpc("/web/action/load",{action_id:actionRequest,context:ctx,});action=await actionCache[key];if(action.help){action.help=markup(action.help);}}
return Object.assign({},action);}
return actionRequest;}
function _makeController(params){return{...params,jsId:`controller_${++id}`,isMounted:false,};}
function _preprocessAction(action,context={}){try{action._originalAction=JSON.stringify(action);}catch{}
action.context=makeContext([context,action.context],user.context);const domain=action.domain||[];action.domain=typeof domain==="string"?evaluateExpr(domain,Object.assign({},user.context,action.context)):domain;if(action.help){const htmlHelp=document.createElement("div");htmlHelp.innerHTML=action.help;if(!htmlHelp.innerText.trim()){delete action.help;}}
action={...action};action.jsId=`action_${++id}`;if(action.type==="ir.actions.act_window"||action.type==="ir.actions.client"){action.target=action.target||"current";}
if(action.type==="ir.actions.act_window"){action.views=[...action.views.map((v)=>[v[0],v[1]])];action.controllers={};const target=action.target;if(target!=="inline"&&!(target==="new"&&action.views[0][1]==="form")){const searchViewId=action.search_view_id?action.search_view_id[0]:false;action.views.push([searchViewId,"search"]);}}
return action;}
function _getView(viewType){const currentController=controllerStack[controllerStack.length-1];if(currentController.action.type!=="ir.actions.act_window"){throw new Error(`switchView called but the current controller isn't a view`);}
const view=currentController.views.find((view)=>view.type===viewType);return view||null;}
function _getBreadcrumbs(stack){return stack.filter((controller)=>controller.action.tag!=="menu").map((controller)=>{return{jsId:controller.jsId,get name(){return controller.displayName;},get isFormView(){return controller.props?.type==="form";},get url(){return stateToUrl(controller.state);},onSelected(){restore(controller.jsId);},};});}
function _getActionParams(state=router.current){const options={};let actionRequest=null;if(state.action){const context={};if(state.active_id){context.active_id=state.active_id;}
if(state.active_ids){context.active_ids=parseActiveIds(state.active_ids);}else if(state.active_id){context.active_ids=[state.active_id];}
const[actionRequestKey,clientAction]=actionRegistry.contains(state.action)?[state.action,actionRegistry.get(state.action)]:actionRegistry.getEntries().find((a)=>a[1].path===state.action)??[];if(actionRequestKey&&clientAction){actionRequest={context,params:state,tag:actionRequestKey,type:"ir.actions.client",};if(clientAction.path){actionRequest.path=clientAction.path;}}else{actionRequest=state.action;context.params=state;Object.assign(options,{additionalContext:context,viewType:state.resId?"form":state.view_type,});}
if((state.resId&&state.resId!=="new")||state.globalState){options.props={};if(state.resId&&state.resId!=="new"){options.props.resId=state.resId;}
if(state.globalState){options.props.globalState=state.globalState;}}}else if(state.model){if(state.resId||state.view_type==="form"){actionRequest={res_model:state.model,res_id:state.resId==="new"?undefined:state.resId,type:"ir.actions.act_window",views:[[state.view_id?state.view_id:false,"form"]],};}else{const storedAction=browser.sessionStorage.getItem("current_action");const lastAction=JSON.parse(storedAction||"{}");if(lastAction.help){lastAction.help=markup(lastAction.help);}
if(lastAction.res_model===state.model){if(lastAction.context){delete lastAction.context.allowed_company_ids;}
actionRequest=lastAction;options.viewType=state.view_type;}}}
if(!actionRequest){const{actionStack}=state;if(actionStack?.length>1){const nextState={actionStack:actionStack.slice(0,-1)};Object.assign(nextState,nextState.actionStack.at(-1));const params=_getActionParams(nextState);if(params.options&&params.options.index===undefined){params.options.index=nextState.actionStack.length-1;}
return params;}
actionRequest=user.homeActionId;}
return actionRequest?{actionRequest,options}:null;}
function _getActionInfo(action,props){const actionProps=Object.assign({},props,{action,actionId:action.id});const currentState={resId:actionProps.resId||false,active_id:action.context.active_id||false,};actionProps.updateActionState=(controller,patchState)=>{const oldState={...currentState};Object.assign(currentState,patchState);const changed=!shallowEqual(currentState,oldState);if(changed&&action.target!=="new"&&controller.isMounted){pushState();}};return{props:actionProps,currentState,config:{actionId:action.id,actionType:"ir.actions.client",actionFlags:action.flags,},displayName:action.display_name||action.name||"",};}
function _getActionMode(action){if(action.target==="new"){return"new";}
if(action.type==="ir.actions.client"){const clientAction=actionRegistry.get(action.tag);if(clientAction.target){return clientAction.target;}}
if(action.target==="fullscreen"){return"fullscreen";}
return"current";}
function _getViewInfo(view,action,views,props={}){const target=action.target;const viewSwitcherEntries=views.filter((v)=>v.multiRecord===view.multiRecord).map((v)=>{const viewSwitcherEntry={icon:v.icon,name:v.display_name,type:v.type,multiRecord:v.multiRecord,};if(view.type===v.type){viewSwitcherEntry.active=true;}
return viewSwitcherEntry;});const context=action.context||{};let groupBy=context.group_by||[];if(typeof groupBy==="string"){groupBy=[groupBy];}
const openFormView=(resId,{activeIds,mode,force}={})=>{if(target!=="new"){if(_getView("form")){return switchView("form",{mode,resId,resIds:activeIds});}else if(force||!resId){return doAction({type:"ir.actions.act_window",res_model:action.res_model,views:[[false,"form"]],},{props:{mode,resId,resIds:activeIds}});}}};const viewProps=Object.assign({},props,{context,display:{mode:target==="new"?"inDialog":target},domain:action.domain||[],groupBy,loadActionMenus:target!=="new"&&target!=="inline",loadIrFilters:action.views.some((v)=>v[1]==="search"),resModel:action.res_model,type:view.type,selectRecord:openFormView,createRecord:()=>openFormView(false),});if(view.type==="form"){if(target==="new"){viewProps.mode="edit";if(!viewProps.onSave){viewProps.onSave=(record,params)=>{if(params&&params.closable){doAction({type:"ir.actions.act_window_close"});}};}}
if(action.flags&&"mode"in action.flags){viewProps.mode=action.flags.mode;}}
if(target==="inline"){viewProps.searchMenuTypes=[];}
const specialKeys=["help","useSampleModel","limit","count"];for(const key of specialKeys){if(key in action){if(key==="help"){viewProps.noContentHelp=action.help;}else{viewProps[key]=action[key];}}}
if(context.search_disable_custom_filters){viewProps.activateFavorite=false;}
if(!viewProps.resId){viewProps.resId=action.res_id||false;}
const currentState={resId:viewProps.resId,active_id:action.context.active_id||false,};viewProps.updateActionState=(controller,patchState)=>{const oldState={...currentState};Object.assign(currentState,patchState);const changed=!shallowEqual(currentState,oldState);if(changed&&target!=="new"&&controller.isMounted){pushState();}};viewProps.noBreadcrumbs="no_breadcrumbs"in action.context?action.context.no_breadcrumbs:target==="new";delete action.context.no_breadcrumbs;const embeddedActions=view.type==="form"?[]:context.parent_action_embedded_actions||action.embedded_action_ids;const parentActionId=(view.type!=="form"&&context.parent_action_id)||false;const currentEmbeddedActionId=context.current_embedded_action_id||false;return{props:viewProps,currentState,config:{actionId:action.id,actionName:action.name,actionType:"ir.actions.act_window",embeddedActions,parentActionId,currentEmbeddedActionId,actionFlags:action.flags,views:action.views,viewSwitcherEntries,},displayName:action.display_name||action.name||"",};}
function _computeStackIndex(options){if(options.clearBreadcrumbs){return 0;}else if(options.stackPosition==="replaceCurrentAction"){const currentController=controllerStack[controllerStack.length-1];if(currentController){return controllerStack.findIndex((ct)=>ct.action.jsId===currentController.action.jsId);}}else if(options.stackPosition==="replacePreviousAction"){let last;for(let i=controllerStack.length-1;i>=0;i--){const action=controllerStack[i].action.jsId;if(!last){last=action;}
if(action!==last){last=action;break;}}
if(last){return controllerStack.findIndex((ct)=>ct.action.jsId===last);}}else if(options.index!==undefined){return options.index;}
return controllerStack.length;}
async function _updateUI(controller,options={}){let resolve;let reject;let dialogCloseResolve;let removeDialogFn;const currentActionProm=new Promise((_res,_rej)=>{resolve=_res;reject=_rej;});const action=controller.action;if(action.target!=="new"&&"newStack"in options){controllerStack=options.newStack;}
const index=_computeStackIndex(options);const nextStack=[...controllerStack.slice(0,index),controller];controller.config.breadcrumbs=reactive(action.target==="new"?[]:_getBreadcrumbs(nextStack));controller.config.getDisplayName=()=>controller.displayName;controller.config.setDisplayName=(displayName)=>{controller.displayName=displayName;if(controller===_getCurrentController()){env.services.title.setParts({action:controller.displayName});}
if(action.target!=="new"){controller.config.breadcrumbs.push(undefined);controller.config.breadcrumbs.pop();}};controller.config.setCurrentEmbeddedAction=(embeddedActionId)=>{controller.currentEmbeddedActionId=embeddedActionId;};controller.config.setEmbeddedActions=(embeddedActions)=>{controller.embeddedActions=embeddedActions;};controller.config.historyBack=()=>{if(dialog){_executeCloseAction();}else{const previousController=controllerStack[controllerStack.length-2];if(previousController){restore(previousController.jsId);}else{env.bus.trigger("WEBCLIENT:LOAD_DEFAULT_APP");}}};class ControllerComponent extends Component{static template=ControllerComponentTemplate;static Component=controller.Component;static props={"*":true,};setup(){this.Component=controller.Component;this.titleService=useService("title");useDebugCategory("action",{action});useChildSubEnv({config:controller.config,pushStateBeforeReload:()=>{if(controller.isMounted){return;}
pushState(nextStack);},});if(action.target!=="new"){this.__beforeLeave__=new CallbackRecorder();this.__getGlobalState__=new CallbackRecorder();this.__getLocalState__=new CallbackRecorder();useBus(env.bus,"CLEAR-UNCOMMITTED-CHANGES",(ev)=>{const callbacks=ev.detail;const beforeLeaveFns=this.__beforeLeave__.callbacks;callbacks.push(...beforeLeaveFns);});if(this.constructor.Component!==View){useChildSubEnv({__beforeLeave__:this.__beforeLeave__,__getGlobalState__:this.__getGlobalState__,__getLocalState__:this.__getLocalState__,});}}
onMounted(this.onMounted);onWillUnmount(this.onWillUnmount);onError(this.onError);}
onError(error){if(controller.isMounted){Promise.reject(error);return;}
if(!controller.isMounted&&status(this)==="mounted"){env.bus.trigger("ACTION_MANAGER:UPDATE",{id:++id,Component:BlankComponent,componentProps:{onMounted:()=>{},withControlPanel:action.type==="ir.actions.act_window",},});Promise.reject(error);return;}
reject(error);if(action.target==="new"){removeDialogFn?.();return;}
const index=controllerStack.findIndex((ct)=>ct.jsId===controller.jsId);if(index>0){return restore(controllerStack[index-1].jsId);}
if(index===0){return;}
const lastController=controllerStack.at(-1);if(lastController){if(lastController.jsId!==controller.jsId){return restore(lastController.jsId);}}else{env.bus.trigger("ACTION_MANAGER:UPDATE",{});}}
onMounted(){if(action.target==="new"){dialogCloseProm=new Promise((_r)=>{dialogCloseResolve=_r;}).then(()=>{dialogCloseProm=undefined;});dialog=nextDialog;}else{controller.getGlobalState=()=>{const exportFns=this.__getGlobalState__.callbacks;if(exportFns.length){return Object.assign({},...exportFns.map((fn)=>fn()));}};controller.getLocalState=()=>{const exportFns=this.__getLocalState__.callbacks;if(exportFns.length){return Object.assign({},...exportFns.map((fn)=>fn()));}};controllerStack=nextStack;pushState();this.titleService.setParts({action:controller.displayName});browser.sessionStorage.setItem("current_action",action._originalAction||"{}");}
resolve();env.bus.trigger("ACTION_MANAGER:UI-UPDATED",_getActionMode(action));controller.isMounted=true;}
onWillUnmount(){controller.isMounted=false;if(action.target==="new"&&dialogCloseResolve){dialogCloseResolve();}}
get componentProps(){const componentProps={...this.props};const updateActionState=componentProps.updateActionState;componentProps.updateActionState=(newState)=>updateActionState(controller,newState);if(this.constructor.Component===View){componentProps.__beforeLeave__=this.__beforeLeave__;componentProps.__getGlobalState__=this.__getGlobalState__;componentProps.__getLocalState__=this.__getLocalState__;}
return componentProps;}}
if(action.target==="new"){const actionDialogProps={ActionComponent:ControllerComponent,actionProps:controller.props,actionType:action.type,};if(action.name){actionDialogProps.title=action.name;}
const size=DIALOG_SIZES[action.context.dialog_size];if(size){actionDialogProps.size=size;}
actionDialogProps.footer=action.context.footer??actionDialogProps.footer;const onClose=_removeDialog();removeDialogFn=env.services.dialog.add(ActionDialog,actionDialogProps,{onClose:()=>{const onClose=_removeDialog();if(onClose){onClose();}},});if(nextDialog){nextDialog.remove();}
nextDialog={remove:removeDialogFn,onClose:onClose||options.onClose,};return currentActionProm;}
const currentController=_getCurrentController();if(currentController&&currentController.getLocalState){currentController.exportedState=currentController.getLocalState();}
if(controller.exportedState){controller.props.state=controller.exportedState;}
if(currentController&&currentController.getGlobalState){const globalState=Object.assign({},currentController.action.globalState,currentController.getGlobalState());currentController.action.globalState=globalState;if(currentController.state.action===router.current.action&&currentController.state.active_id===router.current.active_id&&currentController.state.resId===router.current.resId){router.pushState({globalState},{sync:true});}}
if(controller.action.globalState){controller.props.globalState=controller.action.globalState;}
const closingProm=_executeCloseAction();if(options.clearBreadcrumbs&&!options.noEmptyTransition){const def=new Deferred();env.bus.trigger("ACTION_MANAGER:UPDATE",{id:++id,Component:BlankComponent,componentProps:{onMounted:()=>def.resolve(),withControlPanel:action.type==="ir.actions.act_window",},});await def;}
if(options.onActionReady){options.onActionReady(action);}
controller.__info__={id:++id,Component:ControllerComponent,componentProps:controller.props,};env.services.dialog.closeAll();env.bus.trigger("ACTION_MANAGER:UPDATE",controller.__info__);return Promise.all([currentActionProm,closingProm]).then((r)=>r[0]);}
function _executeActURLAction(action,options){let url=action.url;if(url&&!(url.startsWith("http")||url.startsWith("/"))){url="/"+url;}
if(action.target==="download"||action.target==="self"){browser.location.assign(url);}else{const w=browser.open(url,"_blank");if(!w||w.closed||typeof w.closed==="undefined"){const msg=_t("A popup window has been blocked. You may need to change your "+"browser settings to allow popup windows for this page.");env.services.notification.add(msg,{sticky:true,type:"warning",});}
if(action.close){return doAction({type:"ir.actions.act_window_close"},{onClose:options.onClose});}else if(options.onClose){options.onClose();}}}
async function _executeActWindowAction(action,options){const views=[];const unknown=[];for(const[,type]of action.views){if(type==="search"){continue;}
if(session.view_info[type]){const{icon,display_name,multi_record:multiRecord}=session.view_info[type];views.push({icon,display_name,multiRecord,type});}else{unknown.push(type);}}
if(unknown.length){throw new Error(`View types not defined ${unknown.join(", ")} found in act_window action ${
                    action.id
                }`);}
if(!views.length){throw new Error(`No view found for act_window action ${action.id}`);}
let view=(options.viewType&&views.find((v)=>v.type===options.viewType))||views[0];if(env.isSmall){view=_findView(views,view.multiRecord,action.mobile_view_mode)||view;}
const controller=_makeController({Component:View,action,view,views,..._getViewInfo(view,action,views,options.props),});action.controllers[view.type]=controller;const newStackLastController=options.newStack?.at(-1);if(newStackLastController?.lazy){const multiView=action.views.find((view)=>view[1]!=="form"&&view[1]!=="search");if(multiView){delete newStackLastController.lazy;newStackLastController.displayName=action.display_name||action.name||"";newStackLastController.action=action;newStackLastController.props.type=multiView[1];}else{options.newStack.splice(-1);}}
return _updateUI(controller,options);}
function _findView(views,multiRecord,viewType){return views.find((v)=>v.type===viewType&&v.multiRecord==multiRecord);}
async function _executeClientAction(action,options){const clientAction=actionRegistry.get(action.tag);action.path||=clientAction.path;if(clientAction.prototype instanceof Component){if(action.target!=="new"){const canProceed=await clearUncommittedChanges(env);if(!canProceed){return;}
if(clientAction.target){action.target=clientAction.target;}}
const controller=_makeController({Component:clientAction,action,..._getActionInfo(action,options.props),});controller.displayName||=clientAction.displayName?.toString()||"";return _updateUI(controller,options);}else{const next=await clientAction(env,action);if(next){return doAction(next,options);}}}
function _executeReportClientAction(action,options){const props=Object.assign({},options.props,{data:action.data,display_name:action.display_name,name:action.name,report_file:action.report_file,report_name:action.report_name,report_url:getReportUrl(action,"html",user.context),context:Object.assign({},action.context),});const controller=_makeController({Component:ReportAction,action,..._getActionInfo(action,props),});return _updateUI(controller,options);}
async function _executeReportAction(action,options){const handlers=registry.category("ir.actions.report handlers").getAll();for(const handler of handlers){const result=await handler(action,options,env);if(result){return result;}}
if(action.report_type==="qweb-html"){return _executeReportClientAction(action,options);}else if(action.report_type==="qweb-pdf"||action.report_type==="qweb-text"){const type=action.report_type.slice(5);let success,message;env.services.ui.block();try{const downloadContext={...user.context};if(action.context){Object.assign(downloadContext,action.context);}
({success,message}=await downloadReport(rpc,action,type,downloadContext));}finally{env.services.ui.unblock();}
if(message){env.services.notification.add(message,{sticky:true,title:_t("Report"),});}
if(!success){return _executeReportClientAction(action,options);}
const{onClose}=options;if(action.close_on_report_download){return doAction({type:"ir.actions.act_window_close"},{onClose});}else if(onClose){onClose();}}else{console.error(`The ActionManager can't handle reports of type ${action.report_type}`,action);}}
async function _executeServerAction(action,options){const runProm=rpc("/web/action/run",{action_id:action.id,context:makeContext([user.context,action.context]),});let nextAction=await keepLast.add(runProm);if(nextAction.help){nextAction.help=markup(nextAction.help);}
nextAction=nextAction||{type:"ir.actions.act_window_close"};if(typeof nextAction==="object"){nextAction.path||=action.path;}
return doAction(nextAction,options);}
async function _executeCloseAction(params={}){let onClose;if(dialog){onClose=_removeDialog();}else{onClose=params.onClose;}
if(onClose){await onClose(params.onCloseInfo);}
return dialogCloseProm;}
async function doAction(actionRequest,options={}){const actionProm=_loadAction(actionRequest,options.additionalContext);let action=await keepLast.add(actionProm);action=_preprocessAction(action,options.additionalContext);options.clearBreadcrumbs=action.target==="main"||options.clearBreadcrumbs;switch(action.type){case"ir.actions.act_url":return _executeActURLAction(action,options);case"ir.actions.act_window":if(action.target!=="new"){const canProceed=await clearUncommittedChanges(env);if(!canProceed){return new Promise(()=>{});}}
return _executeActWindowAction(action,options);case"ir.actions.act_window_close":return _executeCloseAction({onClose:options.onClose,onCloseInfo:action.infos});case"ir.actions.client":return _executeClientAction(action,options);case"ir.actions.server":return _executeServerAction(action,options);case"ir.actions.report":return _executeReportAction(action,options);default:{const handler=actionHandlersRegistry.get(action.type,null);if(handler!==null){return handler({env,action,options});}
throw new Error(`The ActionManager service can't handle actions of type ${action.type}`);}}}
async function doActionButton(params,{isEmbeddedAction}={}){let action;if(!isEmbeddedAction){for(const key of EMBEDDED_ACTIONS_CTX_KEYS){delete params.context?.[key];}}
const context=makeContext([params.context,params.buttonContext]);const blockUi=exprToBoolean(params["block-ui"]);if(blockUi){env.services.ui.block();}
if(params.special){action={type:"ir.actions.act_window_close",infos:{special:true}};}else if(params.type==="object"){let args=params.resId?[[params.resId]]:[params.resIds];if(params.args){let additionalArgs;try{additionalArgs=JSON.parse(params.args.replace(/'/g,'"'));}catch{browser.console.error("Could not JSON.parse arguments",params.args);}
args=args.concat(additionalArgs);}
const callProm=rpc(`/web/dataset/call_button/${params.resModel}/${params.name}`,{args,kwargs:{context},method:params.name,model:params.resModel,});action=await keepLast.add(callProm);action=action&&typeof action==="object"?action:{type:"ir.actions.act_window_close"};if(action.help){action.help=markup(action.help);}}else if(params.type==="action"){context.active_id=params.resId||null;context.active_ids=params.resIds;context.active_model=params.resModel;action=await keepLast.add(_loadAction(params.name,context));}else{if(blockUi){env.services.ui.unblock();}
throw new InvalidButtonParamsError("Missing type for doActionButton request");}
if(!isEmbeddedAction&&action.embedded_action_ids?.length){const embeddedActionsOrder=JSON.parse(browser.localStorage.getItem(`orderEmbedded${action.id}+${params.resId || ""}+${user.userId}`));const embeddedActionId=embeddedActionsOrder?.[0];const embeddedAction=action.embedded_action_ids?.find((embeddedAction)=>embeddedAction.id===embeddedActionId);if(embeddedAction){const embeddedActions=[...action.embedded_action_ids,{id:false,name:action.name,parent_action_id:action.id,parent_res_model:action.res_model,action_id:action.id,user_id:false,context:{},},];const context={...action.context,...(embeddedAction.context?makeContext([embeddedAction.context]):{}),active_id:params.resId,active_model:params.resModel,current_embedded_action_id:embeddedActionId,parent_action_embedded_actions:embeddedActions,parent_action_id:action.id,};await this.doActionButton({name:embeddedAction.python_method||embeddedAction.action_id[0]||embeddedAction.action_id,resId:params.resId,context,type:embeddedAction.python_method?"object":"action",resModel:embeddedAction.parent_res_model,viewType:embeddedAction.default_view_mode,},{isEmbeddedAction:true});return;}}
const currentCtx={};for(const key in params.context){if(key.match(CTX_KEY_REGEX)===null){currentCtx[key]=params.context[key];}}
const activeCtx={active_model:params.resModel};if(params.resId){activeCtx.active_id=params.resId;activeCtx.active_ids=[params.resId];}
action.context=makeContext([currentCtx,params.buttonContext,activeCtx,action.context]);const effect=params.effect?evaluateExpr(params.effect):action.effect;const{onClose,stackPosition,viewType}=params;const options={onClose,stackPosition,viewType};await doAction(action,options);if(params.close){await _executeCloseAction();}
if(blockUi){env.services.ui.unblock();}
if(effect){env.services.effect.add(effect);}}
async function switchView(viewType,props={}){await keepLast.add(Promise.resolve());if(dialog){return;}
const controller=controllerStack[controllerStack.length-1];const view=_getView(viewType);if(!view){throw new ViewNotFoundError(_t("No view of type '%s' could be found in the current action.",viewType));}
const newController=controller.action.controllers[viewType]||_makeController({Component:View,action:controller.action,views:controller.views,view,});const canProceed=await clearUncommittedChanges(env);if(!canProceed){return;}
Object.assign(newController,_getViewInfo(view,controller.action,controller.views,props));controller.action.controllers[viewType]=newController;let index;if(view.multiRecord){index=controllerStack.findIndex((ct)=>ct.action.jsId===controller.action.jsId);index=index>-1?index:controllerStack.length-1;}else{index=controllerStack.findIndex((ct)=>ct.action.jsId===controller.action.jsId&&!ct.view.multiRecord);index=index>-1?index:controllerStack.length;}
return _updateUI(newController,{index});}
async function restore(jsId){await keepLast.add(Promise.resolve());let index;if(!jsId){index=controllerStack.length-2;}else{index=controllerStack.findIndex((controller)=>controller.jsId===jsId);}
if(index<0){const msg=jsId?"Invalid controller to restore":"No controller to restore";throw new ControllerNotFoundError(msg);}
const canProceed=await clearUncommittedChanges(env);if(!canProceed){return;}
const controller=controllerStack[index];if(controller.virtual){const actionParams=_getActionParams(controller.state);if(!actionParams){throw new Error("Attempted to restore a virtual controller whose state is invalid");}
const{actionRequest,options}=actionParams;controllerStack=controllerStack.slice(0,index);return doAction(actionRequest,options);}
if(controller.action.type==="ir.actions.act_window"){if(controller.isMounted){controller.exportedState=controller.getLocalState();}
const{action,exportedState,view,views}=controller;const props={...controller.props};if(exportedState&&"resId"in exportedState){props.resId=exportedState.resId;}
Object.assign(controller,_getViewInfo(view,action,views,props));}
return _updateUI(controller,{index});}
async function loadState(){const newStack=await _controllersFromState();const actionParams=_getActionParams();if(actionParams){const{actionRequest,options}=actionParams;if(options.index){options.newStack=newStack.slice(0,options.index);delete options.index;}else{options.newStack=newStack;}
await doAction(actionRequest,options);return true;}}
function pushState(cStack=controllerStack){if(!cStack.length){return;}
const actions=cStack.map((controller)=>{const{action,props,displayName}=controller;const actionState={displayName};if(action.path||action.id){actionState.action=action.path||action.id;}else if(action.type==="ir.actions.client"){actionState.action=action.tag;}else if(action.type==="ir.actions.act_window"){actionState.model=props.resModel;}
if(action.type==="ir.actions.act_window"){actionState.view_type=props.type;if(props.type==="form"&&action.res_model!=="res.config.settings"){actionState.resId=controller.currentState.resId||"new";}}
if(action.type==="ir.actions.client"&&controller.currentState?.resId){actionState.resId=controller.currentState.resId;}
if(controller.currentState?.active_id){const activeId=controller.currentState.active_id;if(activeId){actionState.active_id=activeId;}}
Object.assign(actionState,omit(controller.currentState||{},...PATH_KEYS));return actionState;});const newState={actionStack:actions,};const stateKeys=[...PATH_KEYS];const{action,props,currentState}=cStack.at(-1);if(props.type!=="form"&&props.type!==action.views?.[0][1]){stateKeys.push("view_type");}
if(currentState){stateKeys.push(...Object.keys(omit(currentState,...PATH_KEYS)));}
Object.assign(newState,pick(newState.actionStack.at(-1),...stateKeys));cStack.at(-1).state=newState;router.pushState(newState,{replace:true});}
return{doAction,doActionButton,switchView,restore,loadState,async loadAction(actionRequest,context){const action=await _loadAction(actionRequest,context);return _preprocessAction(action,context);},get currentController(){return _getCurrentController();},};}
const actionService=__exports.actionService={dependencies:["dialog","effect","localization","notification","title","ui"],start(env){return makeActionManager(env);},};registry.category("services").add("action",actionService);return __exports;});;

/* /web/static/src/webclient/actions/client_actions.js */
odoo.define('@web/webclient/actions/client_actions',['@web/core/browser/browser','@web/core/browser/router','@web/core/network/rpc','@web/core/registry','@web/core/utils/strings','@odoo/owl'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{router}=require("@web/core/browser/router");const{rpc}=require("@web/core/network/rpc");const{registry}=require("@web/core/registry");const{escape,sprintf}=require("@web/core/utils/strings");const{markup}=require("@odoo/owl");__exports.displayNotificationAction=displayNotificationAction;function displayNotificationAction(env,action){const params=action.params||{};const options={className:params.className||"",sticky:params.sticky||false,title:params.title,type:params.type||"info",};const links=(params.links||[]).map((link)=>{return`<a href="${escape(link.url)}" target="_blank">${escape(link.label)}</a>`;});const message=markup(sprintf(escape(params.message),...links));env.services.notification.add(message,options);return params.next;}
registry.category("actions").add("display_notification",displayNotificationAction);function reload(env,action){const{menu_id,action_id}=action.params||{};let route={...router.current};if(menu_id||action_id){route={};if(menu_id){route.menu_id=menu_id;}
if(action_id){route.action=action_id;}}
env.bus.trigger("CLEAR-CACHES");router.pushState(route,{replace:true,reload:true});}
registry.category("actions").add("reload",reload);async function home(){await new Promise((resolve)=>{const waitForServer=(delay)=>{browser.setTimeout(async()=>{rpc("/web/webclient/version_info",{}).then(resolve).catch(()=>waitForServer(250));},delay);};waitForServer(1000);});const url="/"+(browser.location.search||"");browser.location.assign(url);}
registry.category("actions").add("home",home);async function reloadContext(env,action){await rpc("/web/session/get_session_info");reload(env,action);}
registry.category("actions").add("reload_context",reloadContext);async function softReload(env,action){const controller=env.services.action.currentController;if(controller){await env.services.action.restore(controller.jsId);}}
registry.category("actions").add("soft_reload",softReload);return __exports;});;

/* /web/static/src/webclient/actions/debug_items.js */
odoo.define('@web/webclient/actions/debug_items',['@web/core/l10n/translation','@web/core/debug/debug_utils','@web/core/registry'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{editModelDebug}=require("@web/core/debug/debug_utils");const{registry}=require("@web/core/registry");const debugRegistry=registry.category("debug");function editAction({action,env}){if(!action.id){return null;}
const description=_t("Action");return{type:"item",description,callback:()=>{editModelDebug(env,description,action.type,action.id);},sequence:220,section:"ui",};}
function viewFields({action,env}){if(!action.res_model){return null;}
const description=_t("Fields");return{type:"item",description,callback:async()=>{const modelId=(await env.services.orm.search("ir.model",[["model","=",action.res_model]],{limit:1,}))[0];env.services.action.doAction({res_model:"ir.model.fields",name:description,views:[[false,"list"],[false,"form"],],domain:[["model_id","=",modelId]],type:"ir.actions.act_window",context:{default_model_id:modelId,},});},sequence:250,section:"ui",};}
function ViewModel({action,env}){if(!action.res_model){return null;}
const modelName=action.res_model;return{type:"item",description:_t("Model: %s",modelName),callback:async()=>{const modelId=(await env.services.orm.search("ir.model",[["model","=",modelName]],{limit:1,}))[0];editModelDebug(env,modelName,"ir.model",modelId);},sequence:210,section:"ui",};}
function manageFilters({action,env}){if(!action.res_model){return null;}
const description=_t("Filters");return{type:"item",description,callback:()=>{env.services.action.doAction({res_model:"ir.filters",name:description,views:[[false,"list"],[false,"form"],],type:"ir.actions.act_window",context:{search_default_my_filters:true,search_default_model_id:action.res_model,},});},sequence:260,section:"ui",};}
function viewAccessRights({accessRights,action,env}){if(!action.res_model||!accessRights.canSeeModelAccess){return null;}
const description=_t("Access Rights");return{type:"item",description,callback:async()=>{const modelId=(await env.services.orm.search("ir.model",[["model","=",action.res_model]],{limit:1,}))[0];env.services.action.doAction({res_model:"ir.model.access",name:description,views:[[false,"list"],[false,"form"],],domain:[["model_id","=",modelId]],type:"ir.actions.act_window",context:{default_model_id:modelId,},});},sequence:350,section:"security",};}
function viewRecordRules({accessRights,action,env}){if(!action.res_model||!accessRights.canSeeRecordRules){return null;}
const description=_t("Model Record Rules");return{type:"item",description:_t("Record Rules"),callback:async()=>{const modelId=(await env.services.orm.search("ir.model",[["model","=",action.res_model]],{limit:1,}))[0];env.services.action.doAction({res_model:"ir.rule",name:description,views:[[false,"list"],[false,"form"],],domain:[["model_id","=",modelId]],type:"ir.actions.act_window",context:{default_model_id:modelId,},});},sequence:360,section:"security",};}
debugRegistry.category("action").add("editAction",editAction).add("viewFields",viewFields).add("ViewModel",ViewModel).add("manageFilters",manageFilters).add("viewAccessRights",viewAccessRights).add("viewRecordRules",viewRecordRules);return __exports;});;

/* /web/static/src/webclient/actions/reports/report_action.js */
odoo.define('@web/webclient/actions/reports/report_action',['@web/core/utils/hooks','@web/search/action_hook','@web/search/layout','@web/views/view','@web/webclient/actions/reports/report_hook','@odoo/owl'],function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{useSetupAction}=require("@web/search/action_hook");const{Layout}=require("@web/search/layout");const{getDefaultConfig}=require("@web/views/view");const{useEnrichWithActionLinks}=require("@web/webclient/actions/reports/report_hook");const{Component,useRef,useSubEnv}=require("@odoo/owl");const ReportAction=__exports.ReportAction=class ReportAction extends Component{static components={Layout};static template="web.ReportAction";static props=["*"];setup(){useSubEnv({config:{...getDefaultConfig(),...this.env.config,},});useSetupAction();this.action=useService("action");this.title=this.props.display_name||this.props.name;this.reportUrl=this.props.report_url;this.iframe=useRef("iframe");useEnrichWithActionLinks(this.iframe);}
onIframeLoaded(ev){const iframeDocument=ev.target.contentWindow.document;iframeDocument.body.classList.add("o_in_iframe","container-fluid");iframeDocument.body.classList.remove("container");}
print(){this.action.doAction({type:"ir.actions.report",report_type:"qweb-pdf",report_name:this.props.report_name,report_file:this.props.report_file,data:this.props.data||{},context:this.props.context||{},display_name:this.title,});}}
return __exports;});;

/* /web/static/src/webclient/actions/reports/report_hook.js */
odoo.define('@web/webclient/actions/reports/report_hook',['@odoo/owl'],function(require){'use strict';let __exports={};const{useComponent,useEffect}=require("@odoo/owl");__exports.useEnrichWithActionLinks=useEnrichWithActionLinks;function useEnrichWithActionLinks(ref,selector=null){const comp=useComponent();useEffect((element)=>{if(element.matches("iframe")){element.onload=()=>enrich(comp,element,selector,true);}else{enrich(comp,element,selector);}},()=>[ref.el]);}
function enrich(component,targetElement,selector,isIFrame=false){let doc=window.document;if(isIFrame){targetElement=targetElement.contentDocument;doc=targetElement;}
const targets=[];if(selector){targets.push(...targetElement.querySelectorAll(selector));}else{targets.push(targetElement);}
for(const currentTarget of targets){const elementsToWrap=currentTarget.querySelectorAll("[res-id][res-model][view-type]");for(const element of elementsToWrap.values()){const wrapper=doc.createElement("a");wrapper.setAttribute("href","#");wrapper.addEventListener("click",(ev)=>{ev.preventDefault();component.env.services.action.doAction({type:"ir.actions.act_window",view_mode:element.getAttribute("view-type"),res_id:Number(element.getAttribute("res-id")),res_model:element.getAttribute("res-model"),views:[[element.getAttribute("view-id"),element.getAttribute("view-type")]],});});element.parentNode.insertBefore(wrapper,element);wrapper.appendChild(element);}}}
return __exports;});;

/* /web/static/src/webclient/company_service.js */
odoo.define('@web/webclient/company_service',['@web/core/browser/browser','@web/core/network/rpc','@web/core/registry','@web/session','@web/core/orm_service','@web/core/browser/cookie','@web/core/user','@web/core/browser/router'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{rpcBus}=require("@web/core/network/rpc");const{registry}=require("@web/core/registry");const{session}=require("@web/session");const{UPDATE_METHODS}=require("@web/core/orm_service");const{cookie}=require("@web/core/browser/cookie");const{user}=require("@web/core/user");const{router}=require("@web/core/browser/router");const CIDS_SEPARATOR="-";function parseCompanyIds(cids,separator=CIDS_SEPARATOR){if(typeof cids==="string"){return cids.split(separator).map(Number);}else if(typeof cids==="number"){return[cids];}
return[];}
function computeActiveCompanyIds(cids){const{user_companies}=session;let activeCompanyIds=cids||[];const availableCompaniesFromSession=user_companies.allowed_companies;const notAllowedCompanies=activeCompanyIds.filter((id)=>!(id in availableCompaniesFromSession));if(!activeCompanyIds.length||notAllowedCompanies.length){activeCompanyIds=[user_companies.current_company];}
return activeCompanyIds;}
function getCompanyIds(){let cids;const state=router.current;if("cids"in state){if(typeof state.cids==="string"&&!state.cids.includes(CIDS_SEPARATOR)){cids=parseCompanyIds(state.cids,",");}else{cids=parseCompanyIds(state.cids);}}else if(cookie.get("cids")){cids=parseCompanyIds(cookie.get("cids"));}
return cids||[];}
const companyService=__exports.companyService={dependencies:["action","orm"],start(env,{action,orm}){const allowedCompanies=session.user_companies.allowed_companies;const disallowedAncestorCompanies=session.user_companies.disallowed_ancestor_companies;const allowedCompaniesWithAncestors={...allowedCompanies,...disallowedAncestorCompanies,};const activeCompanyIds=computeActiveCompanyIds(getCompanyIds());cookie.set("cids",activeCompanyIds.join(CIDS_SEPARATOR));user.updateContext({allowed_company_ids:activeCompanyIds});rpcBus.addEventListener("RPC:RESPONSE",(ev)=>{const{data,error}=ev.detail;const{model,method}=data.params;if(!error&&model==="res.company"&&UPDATE_METHODS.includes(method)){if(!browser.localStorage.getItem("running_tour")){action.doAction("reload_context");}}});return{allowedCompanies,allowedCompaniesWithAncestors,disallowedAncestorCompanies,get activeCompanyIds(){return activeCompanyIds.slice();},get currentCompany(){return allowedCompanies[activeCompanyIds[0]];},getCompany(companyId){return allowedCompaniesWithAncestors[companyId];},async setCompanies(companyIds,includeChildCompanies=true){const newCompanyIds=companyIds.length?companyIds:[activeCompanyIds[0]];function addCompanies(companyIds){for(const companyId of companyIds){if(!newCompanyIds.includes(companyId)){newCompanyIds.push(companyId);addCompanies(allowedCompanies[companyId].child_ids);}}}
if(includeChildCompanies){addCompanies(companyIds.flatMap((companyId)=>allowedCompanies[companyId].child_ids));}
cookie.set("cids",newCompanyIds.join(CIDS_SEPARATOR));user.updateContext({allowed_company_ids:newCompanyIds});const controller=action.currentController;const state={};const options={reload:true};if(controller?.props.resId&&controller?.props.resModel){const hasReadRights=await user.checkAccessRight(controller.props.resModel,"read",controller.props.resId);if(!hasReadRights){options.replace=true;state.actionStack=router.current.actionStack.slice(0,-1);}}
router.pushState(state,options);},};},};registry.category("services").add("company",companyService);return __exports;});;

/* /pos_restaurant/static/src/app/bill_screen/bill_screen.js */
odoo.define('@pos_restaurant/app/bill_screen/bill_screen',['@web/core/dialog/dialog','@point_of_sale/app/screens/receipt_screen/receipt/order_receipt','@odoo/owl','@point_of_sale/app/store/pos_hook','@web/core/utils/hooks'],function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{OrderReceipt}=require("@point_of_sale/app/screens/receipt_screen/receipt/order_receipt");const{Component,useState}=require("@odoo/owl");const{usePos}=require("@point_of_sale/app/store/pos_hook");const{useService}=require("@web/core/utils/hooks");const BillScreen=__exports.BillScreen=class BillScreen extends Component{static template="pos_restaurant.BillScreen";static components={OrderReceipt,Dialog};static props={close:Function,};setup(){this.pos=usePos();this.printer=useState(useService("printer"));}
async print(){await this.pos.printReceipt({printBillActionTriggered:true,});}}
return __exports;});;

/* /pos_restaurant/static/src/app/control_buttons/control_buttons.js */
odoo.define('@pos_restaurant/app/control_buttons/control_buttons',['@point_of_sale/app/screens/product_screen/control_buttons/control_buttons','@point_of_sale/app/screens/product_screen/control_buttons/select_partner_button/select_partner_button','@point_of_sale/app/screens/receipt_screen/receipt/order_receipt','@point_of_sale/app/utils/input_popups/number_popup','@web/core/l10n/translation','@web/core/utils/hooks','@point_of_sale/app/utils/hooks','@web/core/utils/patch','@pos_restaurant/app/bill_screen/bill_screen','@point_of_sale/app/utils/input_popups/text_input_popup'],function(require){'use strict';let __exports={};const{ControlButtons}=require("@point_of_sale/app/screens/product_screen/control_buttons/control_buttons");const{SelectPartnerButton}=require("@point_of_sale/app/screens/product_screen/control_buttons/select_partner_button/select_partner_button");const{OrderReceipt}=require("@point_of_sale/app/screens/receipt_screen/receipt/order_receipt");const{NumberPopup}=require("@point_of_sale/app/utils/input_popups/number_popup");const{_t}=require("@web/core/l10n/translation");const{useService}=require("@web/core/utils/hooks");const{useAsyncLockedMethod}=require("@point_of_sale/app/utils/hooks");const{patch}=require("@web/core/utils/patch");const{BillScreen}=require("@pos_restaurant/app/bill_screen/bill_screen");const{TextInputPopup}=require("@point_of_sale/app/utils/input_popups/text_input_popup");patch(ControlButtons.prototype,{setup(){super.setup(...arguments);this.alert=useService("alert");this.printer=useService("printer");this.clickPrintBill=useAsyncLockedMethod(this.clickPrintBill);},async clickPrintBill(){(await this.printer.print(OrderReceipt,{data:this.pos.orderExportForPrinting(this.pos.get_order()),formatCurrency:this.env.utils.formatCurrency,}))||this.dialog.add(BillScreen);},clickTableGuests(){this.dialog.add(NumberPopup,{startingValue:this.currentOrder?.getCustomerCount()||0,title:_t("Guests?"),feedback:(buffer)=>{const value=this.env.utils.formatCurrency(this.currentOrder?.amountPerGuest(parseInt(buffer,10)||0)||0);return value?`${value} / ${_t("Guest")}`:"";},getPayload:(inputNumber)=>{const guestCount=parseInt(inputNumber,10)||0;if(guestCount==0&&this.currentOrder.lines.length===0){this.pos.removeOrder(this.currentOrder);this.pos.showScreen("FloorScreen");return;}
this.currentOrder.setCustomerCount(guestCount);this.pos.addPendingOrder([this.currentOrder.id]);},});},clickTransferOrder(){this.dialog.closeAll();this.pos.isOrderTransferMode=true;const orderUuid=this.pos.get_order().uuid;this.pos.get_order().setBooked(true);this.pos.showScreen("FloorScreen");const onClickWhileTransfer=async(ev)=>{if(ev.target.closest(".button-floor")){return;}
this.pos.isOrderTransferMode=false;const tableElement=ev.target.closest(".table");if(!tableElement){return;}
const table=this.pos.getTableFromElement(tableElement);await this.pos.transferOrder(orderUuid,table);this.pos.setTableFromUi(table);document.removeEventListener("click",onClickWhileTransfer);};document.addEventListener("click",onClickWhileTransfer);},async clickTakeAway(){const isTakeAway=!this.currentOrder.takeaway;const defaultFp=this.pos.config?.default_fiscal_position_id??false;const takeawayFp=this.pos.config.takeaway_fp_id;this.currentOrder.takeaway=isTakeAway;this.currentOrder.update({fiscal_position_id:isTakeAway?takeawayFp:defaultFp});if(typeof this.currentOrder.id=="number"){this.pos.data.write("pos.order",[this.currentOrder.id],{takeaway:isTakeAway?true:false,});}},editFloatingOrderName(order){this.dialog.add(TextInputPopup,{title:_t("Edit Order Name"),placeholder:_t("18:45 John 4P"),startingValue:order.floating_order_name||"",getPayload:async(newName)=>{if(typeof order.id=="number"){this.pos.data.write("pos.order",[order.id],{floating_order_name:newName,});}else{order.floating_order_name=newName;}},});},});patch(ControlButtons,{components:{...ControlButtons.components,SelectPartnerButton,},});return __exports;});;

/* /pos_restaurant/static/src/app/floor_screen/floor_screen.js */
odoo.define('@pos_restaurant/app/floor_screen/floor_screen',['@web/core/l10n/translation','@web/core/utils/strings','@web/core/utils/timing','@web/core/registry','@point_of_sale/app/utils/input_popups/text_input_popup','@point_of_sale/app/utils/input_popups/number_popup','@web/core/confirmation_dialog/confirmation_dialog','@point_of_sale/app/store/pos_hook','@web/core/utils/hooks','@odoo/owl','@point_of_sale/app/store/make_awaitable_dialog','@point_of_sale/utils','@web/core/utils/urls','@web/core/browser/feature_detection','@point_of_sale/app/generic_components/numpad/numpad','@web/core/utils/draggable_hook_builder_owl','@web/core/utils/objects','@point_of_sale/app/models/utils/order_change','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@point_of_sale/app/utils/hooks'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{sprintf}=require("@web/core/utils/strings");const{debounce}=require("@web/core/utils/timing");const{registry}=require("@web/core/registry");const{TextInputPopup}=require("@point_of_sale/app/utils/input_popups/text_input_popup");const{NumberPopup}=require("@point_of_sale/app/utils/input_popups/number_popup");const{AlertDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{usePos}=require("@point_of_sale/app/store/pos_hook");const{useService}=require("@web/core/utils/hooks");const{Component,onMounted,useRef,useState,useEffect,useExternalListener}=require("@odoo/owl");const{ask}=require("@point_of_sale/app/store/make_awaitable_dialog");const{loadImage}=require("@point_of_sale/utils");const{getDataURLFromFile}=require("@web/core/utils/urls");const{hasTouch}=require("@web/core/browser/feature_detection");const{getButtons,DECIMAL,ZERO,BACKSPACE,}=require("@point_of_sale/app/generic_components/numpad/numpad");const{makeDraggableHook}=require("@web/core/utils/draggable_hook_builder_owl");const{pick}=require("@web/core/utils/objects");const{getOrderChanges}=require("@point_of_sale/app/models/utils/order_change");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{useTrackedAsync}=require("@point_of_sale/app/utils/hooks");function constrain(num,min,max){return Math.min(Math.max(num,min),max);}
function getLimits(el,limitEl){const limitRect=limitEl.getBoundingClientRect();const offsetParentRect=el.offsetParent.getBoundingClientRect();return{minX:limitRect.left-offsetParentRect.left,maxX:limitRect.left-offsetParentRect.left+limitRect.width,minY:limitRect.top-offsetParentRect.top,maxY:limitRect.top-offsetParentRect.top+limitRect.height,};}
const areElementsIntersecting=(el1,el2)=>{const rect1=el1.getBoundingClientRect();const rect2=el2.getBoundingClientRect();return!(rect1.right<rect2.left||rect1.left>rect2.right||rect1.bottom<rect2.top||rect1.top>rect2.bottom);};const useDraggable=makeDraggableHook({name:"useDraggable",onComputeParams({ctx}){ctx.followCursor=false;},onWillStartDrag:({ctx})=>pick(ctx.current,"element"),onDragStart:({ctx})=>pick(ctx.current,"element"),onDrag:({ctx})=>pick(ctx.current,"element"),onDrop:({ctx})=>pick(ctx.current,"element"),});const GRID_SIZE=10;const FloorScreen=__exports.FloorScreen=class FloorScreen extends Component{static components={Dropdown,DropdownItem};static template="pos_restaurant.FloorScreen";static props={floor:{type:true,optional:true}};static storeOnOrder=false;setup(){this.pos=usePos();this.dialog=useService("dialog");this.ui=useService("ui");const floor=this.pos.currentFloor;this.state=useState({selectedFloorId:floor?floor.id:null,floorHeight:"100%",floorWidth:"100%",selectedTableIds:[],potentialLink:null,});this.doCreateTable=useTrackedAsync(async()=>{await this.createTable();});this.floorMapRef=useRef("floor-map-ref");this.floorScrollBox=useRef("floor-map-scroll");this.map=useRef("map");this.alert=useService("alert");const getTableElem=(table)=>{return this.map.el.querySelector(`.tableId-${table.id}`);};const findIntersectingTableElem=(tableElem)=>{const table=this.getPosTable(tableElem);return[...tableElem.parentElement.getElementsByClassName("table")].find((t)=>t!==tableElem&&areElementsIntersecting(t,tableElem)&&!table.isParent(this.getPosTable(t)));};const TABLE_LINKING_DELAY=400;let offsetX,offsetY;const suggestLinkingPositions=()=>this.state.potentialLink?.parent&&this.state.potentialLink.time+TABLE_LINKING_DELAY<Date.now();useExternalListener(window,"keydown",(ev)=>{const overlayElements=document.querySelectorAll(".o-overlay-item");if(overlayElements.length==0&&ev.key==="Escape"&&this.pos.isEditMode&&this.state.selectedTableIds.length==0&&!this.state.potentialLink){this.pos.isEditMode=false;}});useDraggable({ref:this.map,elements:".table",ignore:"span.table-handle",enabled:!this.pos.isEditMode,onDragStart:(ctx)=>{ctx.addClass(ctx.element,"shadow");if(this.pos.isEditMode){return;}
const table=this.getPosTable(ctx.element);this.state.potentialLink={child:table};table.uiState.initialPosition=pick(table,"position_h","position_v");table.position_h=table.getX();table.position_v=table.getY();if(table.parent_id){this.pos.data.write("restaurant.table",[table.id],{parent_id:null,});}},onWillStartDrag:({element,x,y})=>{offsetX=x-element.getBoundingClientRect().left;offsetY=y-element.getBoundingClientRect().top;},onDrag:({element,x,y})=>{const table=this.getPosTable(element);if(!suggestLinkingPositions()){table.position_h=x-offsetX+this.map.el.parentElement.parentElement.scrollLeft;table.position_v=y-offsetY-this.map.el.getBoundingClientRect().top;if(this.pos.isEditMode&&!this.activeFloor.floor_background_image){table.position_h-=table.position_h%GRID_SIZE;table.position_v-=table.position_v%GRID_SIZE;}
if(this.pos.isEditMode||this.state.potentialLink?.parent){return;}
const potentialParentElem=findIntersectingTableElem(element);if(!potentialParentElem){this.alert.add("Link Table");return;}
this.state.potentialLink={child:table,parent:this.getPosTable(potentialParentElem),time:Date.now(),};this.alert.add(`Link Table ${table.table_number} with ${this.state.potentialLink.parent.table_number}`);return;}
const{child,parent}=this.state.potentialLink;const{left,top,width,height}=getTableElem(parent).getBoundingClientRect();const dx=x-left-width/2;const dy=y-top-height/2;if(Math.abs(dx)>parent.width/2+child.width/2||Math.abs(dy)>parent.height/2+child.height/2){this.state.potentialLink={child:table};return;}
table.setPositionAsIfLinked(this.state.potentialLink.parent,Math.abs(dx)>Math.abs(dy)?dx>0?"left":"right":dy<0?"top":"bottom");},onDrop:({element})=>{this.alert.dismiss();const table=this.getPosTable(element);if(this.pos.isEditMode){this.pos.data.write("restaurant.table",[table.id],{position_h:table.position_h,position_v:table.position_v,});return;}
table.position_h=table.uiState.initialPosition.position_h;table.position_v=table.uiState.initialPosition.position_v;if(!suggestLinkingPositions()){this.state.potentialLink=null;return;}
const oToTrans=this.pos.getActiveOrdersOnTable(table)[0];if(oToTrans){this.pos.transferOrder(oToTrans.uuid,this.state.potentialLink.parent);}
this.pos.data.write("restaurant.table",[table.id],{parent_id:this.state.potentialLink.parent.id,});this.state.potentialLink=null;},});this.useResizeHook();onMounted(()=>{this.pos.openOpeningControl();this.pos.searchProductWord="";this.pos.unsetTable();});useEffect(()=>{this.computeFloorSize();},()=>[this.activeFloor,this.pos.floorPlanStyle]);useEffect((tableL)=>{if(hasTouch()){if(tableL){this.floorScrollBox.el.classList.remove("overflow-auto");this.floorScrollBox.el.classList.add("overflow-hidden");}else{this.floorScrollBox.el.classList.remove("overflow-hidden");this.floorScrollBox.el.classList.add("overflow-auto");}}},()=>[this.state.selectedTableIds.length]);}
getPosTable(el){return this.pos.getTableFromElement(el);}
useResizeHook(){let startX,startY;let startPosH,startPosV,startWidth,startHeight;let table;useDraggable({ref:this.map,elements:"span.table-handle",onDragStart:(ctx)=>{table=this.getPosTable(ctx.element.parentElement);startX=ctx.x;startY=ctx.y;startPosH=table.position_h;startPosV=table.position_v;startWidth=table.width;startHeight=table.height;},onDrag:(ctx)=>{const newPosition={minX:startPosH,minY:startPosV,maxX:startPosH+startWidth,maxY:startPosV+startHeight,};const dx=ctx.x-startX;const dy=ctx.y-startY;const limits=getLimits(ctx.element.parentElement,this.map.el);const MIN_TABLE_SIZE=30;const bounds={maxX:[startPosH+MIN_TABLE_SIZE,limits.maxX+startWidth],minX:[limits.minX,newPosition.maxX-MIN_TABLE_SIZE],maxY:[startPosV+MIN_TABLE_SIZE,limits.maxY+startHeight],minY:[limits.minY,newPosition.maxY-MIN_TABLE_SIZE],};const moveX=ctx.element.classList.contains("left")?"minX":"maxX";const moveY=ctx.element.classList.contains("top")?"minY":"maxY";newPosition[moveX]=constrain(newPosition[moveX]+dx,...bounds[moveX]);newPosition[moveY]=constrain(newPosition[moveY]+dy,...bounds[moveY]);if(!this.activeFloor.floor_background_image){newPosition[moveX]-=newPosition[moveX]%GRID_SIZE;newPosition[moveY]-=newPosition[moveY]%GRID_SIZE;}
table.position_h=newPosition.minX;table.position_v=newPosition.minY;table.width=newPosition.maxX-newPosition.minX;table.height=newPosition.maxY-newPosition.minY;},onDrop:(ctx)=>{const table=this.getPosTable(ctx.element.parentElement);this.pos.data.write("restaurant.table",[table.id],pick(table,"position_h","position_v","width","height"));},});}
computeFloorSize(){if(this.pos.floorPlanStyle==="kanban"){this.state.floorHeight="100%";this.state.floorWidth=window.innerWidth+"px";return;}
if(!this.activeFloor){return;}
const tables=this.activeFloor.table_ids;const floorV=this.floorMapRef.el.clientHeight;const floorH=this.floorMapRef.el.offsetWidth;const positionH=Math.max(...tables.map((table)=>table.position_h+table.width),floorH);const positionV=Math.max(...tables.map((table)=>table.position_v+table.height),floorV);if(this.activeFloor.floor_background_image){const img=new Image();img.onload=()=>{const height=Math.max(img.height,positionV);const width=Math.max(img.width,positionH);this.state.floorHeight=`${height}px`;this.state.floorWidth=`${width}px`;};img.src="data:image/png;base64,"+this.activeFloor.floor_background_image;}else{this.state.floorHeight=`${positionV}px`;this.state.floorWidth=`${positionH}px`;}}
get floorBackround(){return this.activeFloor.floor_background_image?"data:image/png;base64,"+this.activeFloor.floor_background_image:"none";}
getTableHandleOffset(table){return table.shape==="round"?-12+Math.min(table.width/2,table.height/2)*0.2929:-12;}
onClickFloorMap(ev){if(ev.target.closest(".table")){return;}
for(const tableId of this.state.selectedTableIds){const table=this.pos.models["restaurant.table"].get(tableId);this.pos.data.write("restaurant.table",[tableId],{...table.serialize({orm:true}),});}
this.state.selectedTableIds=[];}
_computePinchHypo(ev,callbackFunction){const touches=ev.touches;if(touches.length===2){const deltaX=touches[0].pageX-touches[1].pageX;const deltaY=touches[0].pageY-touches[1].pageY;callbackFunction(Math.hypot(deltaX,deltaY));}}
_onPinchStart(ev){ev.currentTarget.style.setProperty("touch-action","none");this._computePinchHypo(ev,this.startPinch.bind(this));}
_onPinchEnd(ev){ev.currentTarget.style.removeProperty("touch-action");}
_onPinchMove(ev){debounce(this._computePinchHypo,10,true)(ev,this.movePinch.bind(this));}
async _createTableHelper(copyTable,duplicateFloor=false){const existingTable=this.activeFloor.table_ids;let newTableData;if(copyTable){newTableData=copyTable.serialize({orm:true});if(!duplicateFloor){newTableData.position_h+=10;newTableData.position_v+=10;}
delete newTableData.id;}else{let posV=0;let posH=10;const referenceScreenWidth=1180;const spaceBetweenTable=15*(screen.width/referenceScreenWidth);const h_min=spaceBetweenTable;const h_max=screen.width;const v_max=screen.height;let potentialWidth=100*(h_max/referenceScreenWidth);if(potentialWidth>130){potentialWidth=130;}else if(potentialWidth<75){potentialWidth=75;}
const heightTable=potentialWidth;const widthTable=potentialWidth;const positionTable=[];existingTable.forEach((table)=>{positionTable.push([table.position_v,table.position_v+table.height,table.position_h,table.position_h+table.width,]);});positionTable.sort((tableA,tableB)=>{if(tableA[0]<tableB[0]){return-1;}else if(tableA[0]>tableB[0]){return 1;}else if(tableA[2]<tableB[2]){return-1;}else{return 1;}});let actualHeight=100;let impossible=true;while(actualHeight<=v_max-heightTable-spaceBetweenTable&&impossible){const tableIntervals=[[h_min,h_min,v_max],[h_max,h_max,v_max],];for(let i=0;i<positionTable.length;i++){if(positionTable[i][0]>=actualHeight+heightTable+spaceBetweenTable){continue;}else if(positionTable[i][1]+spaceBetweenTable<=actualHeight){continue;}else{tableIntervals.push([positionTable[i][2],positionTable[i][3],positionTable[i][1],]);}}
tableIntervals.sort((a,b)=>{if(a[0]<b[0]){return-1;}else if(a[0]>b[0]){return 1;}else if(a[1]<b[1]){return-1;}else{return 1;}});let nextHeight=v_max;for(let i=0;i<tableIntervals.length-1;i++){if(tableIntervals[i][2]<nextHeight){nextHeight=tableIntervals[i][2];}
if(tableIntervals[i+1][0]-tableIntervals[i][1]>widthTable+spaceBetweenTable){impossible=false;posV=actualHeight;posH=tableIntervals[i][1]+spaceBetweenTable;break;}}
actualHeight=nextHeight+spaceBetweenTable;}
if(impossible){posV=positionTable[0][0]+10;posH=positionTable[0][2]+10;}
newTableData={active:true,position_v:posV,position_h:posH,width:widthTable,height:heightTable,shape:"square",seats:2,color:"rgb(53, 211, 116)",floor_id:this.activeFloor.id,};}
if(!duplicateFloor){newTableData.table_number=this._getNewTableNumber();}
const table=await this.createTableFromRaw(newTableData);return table;}
async createTableFromRaw(newTableData){newTableData.active=true;const table=await this.pos.data.create("restaurant.table",[newTableData]);return table[0];}
_getNewTableNumber(){let firstNum=1;const tablesNumber=this.activeTables.map((table)=>table.table_number).sort(function(a,b){return a-b;});for(let i=0;i<tablesNumber.length;i++){if(tablesNumber[i]==firstNum){firstNum+=1;}else{break;}}
return firstNum;}
get activeFloor(){return this.state.selectedFloorId?this.pos.models["restaurant.floor"].get(this.state.selectedFloorId):null;}
get activeTables(){return this.activeFloor?.table_ids;}
get selectedTables(){return this.state.selectedTableIds.map((id)=>this.pos.models["restaurant.table"].get(id));}
get nbrFloors(){return this.pos.models["restaurant.floor"].length;}
movePinch(hypot){const delta=hypot/this.scalehypot;const value=this.initalScale*delta;this.setScale(value);}
startPinch(hypot){this.scalehypot=hypot;this.initalScale=this.getScale();}
getScale(){const scale=this.map.el.style.getPropertyValue("--scale");const parsedScaleValue=parseFloat(scale);return isNaN(parsedScaleValue)?1:parsedScaleValue;}
setScale(value){if(value>0){this.map.el.style.setProperty("--scale",value);}}
selectFloor(floor){this.pos.currentFloor=floor;this.state.selectedFloorId=floor.id;this.unselectTables();}
async onClickTable(table,ev){if(this.pos.isEditMode){if(this.state.selectedTableIds.includes(table.id)){this.state.selectedTableIds=this.state.selectedTableIds.filter((id)=>id!==table.id);return;}
if(!ev.ctrlKey&&!ev.metaKey){this.unselectTables();}
this.state.selectedTableIds.push(table.id);return;}
if(table.parent_id){this.onClickTable(table.parent_id,ev);return;}
if(!this.pos.isOrderTransferMode){await this.pos.setTableFromUi(table);}}
unselectTables(){if(this.selectedTables.length){for(const table of this.selectedTables){this.pos.data.write("restaurant.table",[table.id],table.serialize({orm:true}));}}
this.state.selectedTableIds=[];}
closeEditMode(){this.pos.isEditMode=false;this.unselectTables();}
async addFloor(){this.dialog.add(TextInputPopup,{title:_t("New Floor"),placeholder:_t("Floor name"),getPayload:async(newName)=>{const floor=await this.pos.data.create("restaurant.floor",[{name:newName,background_color:"#FFFFFF",pos_config_ids:[this.pos.config.id],},],false);this.selectFloor(floor[0]);this.pos.isEditMode=true;},});}
async createTable(){const newTable=await this._createTableHelper();if(newTable){this.state.selectedTableIds=[newTable.id];}}
async duplicateFloor(){const floor=this.activeFloor;const tables=this.activeFloor.table_ids;const newFloorName=floor.name+" (copy)";const copyFloor=await this.pos.data.create("restaurant.floor",[{name:newFloorName,background_color:"#ACADAD",pos_config_ids:[this.pos.config.id],},]);this.selectFloor(copyFloor[0]);this.pos.isEditMode=true;for(const table of tables){const tableSerialized=table.serialize({orm:true});tableSerialized.floor_id=copyFloor[0].id;await this.createTableFromRaw(tableSerialized);}}
async duplicateTable(){const selectedTables=this.selectedTables;this.state.selectedTableIds=[];for(const table of selectedTables){const newTable=await this._createTableHelper(table);if(newTable){this.state.selectedTableIds.push(newTable.id);}}}
async renameFloor(){this.dialog.add(TextInputPopup,{startingValue:this.activeFloor.name,title:_t("Floor Name ?"),getPayload:(newName)=>{if(newName!==this.activeFloor.name){this.activeFloor.name=newName;this.pos.data.write("restaurant.floor",[this.activeFloor.id],{name:newName,});}},});}
async renameTable(){if(this.selectedTables.length>1){return;}
if(this.selectedTables.length===1){this.dialog.add(NumberPopup,{startingValue:parseInt(this.selectedTables[0].table_number)||false,title:_t("Change table number?"),placeholder:_t("Enter a table number"),buttons:getButtons([{...DECIMAL,disabled:true},ZERO,BACKSPACE]),isValid:(x)=>x,getPayload:(newNumber)=>{if(parseInt(newNumber)!==this.selectedTables[0].table_number){this.pos.data.write("restaurant.table",[this.selectedTables[0].id],{table_number:parseInt(newNumber),});}},});}else{this.dialog.add(TextInputPopup,{startingValue:this.activeFloor.name,title:_t("Floor Name ?"),getPayload:(newName)=>{if(newName!==this.activeFloor.name){this.activeFloor.name=newName;this.pos.data.write("restaurant.floor",[this.activeFloor.id],{name:newName,});}},});}}
async changeSeatsNum(){const selectedTables=this.selectedTables;if(selectedTables.length==0){return;}
this.dialog.add(NumberPopup,{title:_t("Number of Seats?"),getPayload:(num)=>{const newSeatsNum=parseInt(num,10);selectedTables.forEach((selectedTable)=>{if(newSeatsNum!==selectedTable.seats){this.pos.data.write("restaurant.table",[selectedTable.id],{seats:newSeatsNum,});}});},});}
changeShape(form){for(const table of this.selectedTables){this.pos.data.write("restaurant.table",[table.id],{shape:form});}}
setFloorColor(color){this.activeFloor.background_color=color;this.pos.data.write("restaurant.floor",[this.activeFloor.id],{background_color:color,floor_background_image:false,});}
setTableColor(color){if(this.selectedTables.length>0){for(const table of this.selectedTables){this.pos.data.write("restaurant.table",[table.id],{color:color});}}}
_getColors(){return{white:[255,255,255],red:[235,109,109],green:[53,211,116],blue:[108,109,236],orange:[235,191,109],yellow:[235,236,109],purple:[172,109,173],grey:[108,109,109],lightGrey:[172,173,173],turquoise:[78,210,190],};}
formatColor(color){return`rgb(${color})`;}
getColors(){return Object.fromEntries(Object.entries(this._getColors()).map(([k,v])=>[k,this.formatColor(v)]));}
getLighterShade(color){return this.formatColor([...this._getColors()[color],0.75]);}
async deleteFloor(){const confirmed=await ask(this.dialog,{title:`Removing floor ${this.activeFloor.name}`,body:sprintf(_t("Removing a floor cannot be undone. Do you still want to remove %s?"),this.activeFloor.name),});if(!confirmed){return;}
const activeFloor=this.activeFloor;try{await this.pos.data.call("restaurant.floor","deactivate_floor",[activeFloor.id,this.pos.session.id,]);}catch{this.dialog.add(AlertDialog,{title:_t("Delete Error"),body:_t("You cannot delete a floor with orders still in draft for this floor."),});return;}
const orderList=[...this.pos.get_open_orders()];for(const order of orderList){if(activeFloor.table_ids.includes(order.tableId)){this.pos.removeOrder(order,false);}}
for(const table_id of activeFloor.table_ids){table_id.delete();}
activeFloor.delete();if(this.pos.models["restaurant.floor"].length>0){this.selectFloor(this.pos.models["restaurant.floor"].getAll()[0]);}else{this.pos.isEditMode=false;this.pos.floorPlanStyle="default";}
return;}
async deleteTable(){const confirmed=await ask(this.dialog,{title:_t("Are you sure?"),body:_t("Removing a table cannot be undone"),});if(!confirmed){return;}
const originalSelectedTableIds=[...this.state.selectedTableIds];try{const response=await this.pos.data.call("restaurant.table","are_orders_still_in_draft",[originalSelectedTableIds]);if(response){for(const id of originalSelectedTableIds){for(const order of this.pos.get_open_orders()){if(order.table_id==id){this.pos.removeOrder(order,false);}}
const records=this.pos.data.write("restaurant.table",[id],{active:false,});records[0].delete();}}}catch{this.dialog.add(AlertDialog,{title:_t("Delete Error"),body:_t("You cannot delete a table with orders still in draft for this table."),});}
const equalsCheck=(a,b)=>{return JSON.stringify(a)===JSON.stringify(b);};if(equalsCheck(this.state.selectedTableIds,originalSelectedTableIds)){this.state.selectedTableIds=[];}}
getFloorChangeCount(floor){let changeCount=0;if(!floor){return changeCount;}
const table_ids=floor.table_ids;for(const table of table_ids){changeCount+=this.getChangeCount(table)||0;}
return changeCount;}
getChildren(table){return this.pos.models["restaurant.table"].filter((t)=>t.parent_id?.id===table.id);}
async uploadImage(event){const file=event.target.files[0];if(!file){return;}
if(!file.type.match(/image.*/)){this.dialog.add(AlertDialog,{title:_t("Unsupported File Format"),body:_t("Only web-compatible Image formats such as .png or .jpeg are supported."),});}else{const imageUrl=await getDataURLFromFile(file);const loadedImage=await loadImage(imageUrl);if(loadedImage){this.env.services.ui.block();await this.pos.data.ormWrite("restaurant.floor",[this.activeFloor.id],{floor_background_image:imageUrl.split(",")[1],});await this.pos.data.read("restaurant.floor",[this.activeFloor.id]);this.env.services.ui.unblock();}else{this.dialog.add(AlertDialog,{title:_t("Loading Image Error"),body:_t("Encountered error when loading image. Please try again."),});}}}
getChangeCount(table){let changeCount=0;let skipCount=0;const tableOrders=this.pos.models["pos.order"].filter((o)=>o.table_id?.id===table.id&&!o.finalized);for(const order of tableOrders){const changes=getOrderChanges(order,false,this.pos.orderPreparationCategories);changeCount+=changes.nbrOfChanges;skipCount+=changes.nbrOfSkipped;}
return{changes:changeCount,skip:skipCount};}
setColor(hasSelectedTable,color){if(hasSelectedTable){return this.setTableColor(color);}else{return this.setFloorColor(color);}}
rename(hasSelectedTable){if(hasSelectedTable){return this.renameTable();}else{return this.renameFloor();}}
duplicate(hasSelectedTable){if(hasSelectedTable){return this.duplicateTable();}else{return this.duplicateFloor();}}
delete(hasSelectedTable){if(hasSelectedTable){return this.deleteTable();}else{return this.deleteFloor();}}}
registry.category("pos_screens").add("FloorScreen",FloorScreen);return __exports;});;

/* /pos_restaurant/static/src/app/models/restaurant_table.js */
odoo.define('@pos_restaurant/app/models/restaurant_table',['@web/core/registry','@point_of_sale/app/models/related_models'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{Base}=require("@point_of_sale/app/models/related_models");const RestaurantTable=__exports.RestaurantTable=class RestaurantTable extends Base{static pythonModel="restaurant.table";setup(vals){super.setup(vals);this.table_number=vals.table_number||0;this.uiState={initialPosition:{},orderCount:0,changeCount:0,skipCount:0,};}
isParent(t){return t.parent_id&&(t.parent_id.id===this.id||this.isParent(t.parent_id));}
getParent(){return this.parent_id?.getParent()||this;}
getParentSide(){if(!this.parent_id){return;}
const dx=this.position_h-this.parent_id.getX();const dy=this.position_v-this.parent_id.getY();if(Math.abs(dx)>Math.abs(dy)){return dx<0?"right":"left";}
return dy>0?"bottom":"top";}
getX(){if(!this.parent_id){return this.position_h;}
const parent_side=this.parent_side||this.getParentSide();if(["top","bottom"].includes(parent_side)){return this.parent_id.getX();}
if(parent_side==="left"){return this.parent_id.getX()+this.parent_id.width;}
return this.parent_id.getX()-this.width;}
getY(){if(!this.parent_id){return this.position_v;}
const parent_side=this.parent_side||this.getParentSide();this.parent_side=parent_side;if(["left","right"].includes(parent_side)){return this.parent_id.getY();}
if(parent_side==="bottom"){return this.parent_id.getY()+this.parent_id.height;}
return this.parent_id.getY()-this.height;}
getCenter(){return{x:this.getX()+this.width/2,y:this.getY()+this.height/2,};}
get orders(){return this.models["pos.order"].filter((o)=>o.table_id?.id===this.id&&(!o.finalized||o.uiState.screen_data?.value?.name==="TipScreen"));}
getOrder(){return(this.parent_id?.getOrder?.()||this["<-pos.order.table_id"].find((o)=>!o.finalized));}
setPositionAsIfLinked(parent,side){this.parent_id=parent;this.parent_side=side;this.position_h=this.getX();this.position_v=this.getY();this.parent_id=null;}
getName(){return this.table_number.toString();}}
registry.category("pos_available_models").add(RestaurantTable.pythonModel,RestaurantTable);return __exports;});;

/* /pos_restaurant/static/src/app/product_screen/order_summary/order_summary.js */
odoo.define('@pos_restaurant/app/product_screen/order_summary/order_summary',['@web/core/utils/patch','@point_of_sale/app/screens/product_screen/order_summary/order_summary'],function(require){'use strict';let __exports={};const{patch}=require("@web/core/utils/patch");const{OrderSummary}=require("@point_of_sale/app/screens/product_screen/order_summary/order_summary");patch(OrderSummary.prototype,{bookTable(){this.pos.get_order().setBooked(true);this.pos.showScreen("FloorScreen");},showBookButton(){if(!this.pos.selectedTable){return false;}
return(this.pos.config.module_pos_restaurant&&!this.pos.models["pos.order"].some((o)=>o.table_id?.id===this.pos.selectedTable.id&&o.finalized===false&&o.isBooked));},async unbookTable(){const order=this.pos.get_order();await this.pos._onBeforeDeleteOrder(order);order.state="cancel";this.pos.showScreen("FloorScreen");},showUnbookButton(){if(this.pos.selectedTable){return(this.pos.config.module_pos_restaurant&&!this.pos.models["pos.order"].some((o)=>o.table_id?.id===this.pos.selectedTable.id&&o.finalized===false&&!o.isBooked)&&this.pos.get_order().lines.length===0);}
const currentOrder=this.pos.get_order();return(this.pos.config.module_pos_restaurant&&!currentOrder.finalized&&currentOrder.isBooked&&currentOrder.lines.length===0);},});return __exports;});;

/* /pos_restaurant/static/src/app/split_bill_screen/split_bill_screen.js */
odoo.define('@pos_restaurant/app/split_bill_screen/split_bill_screen',['@web/core/registry','@point_of_sale/app/store/pos_hook','@odoo/owl','@point_of_sale/app/generic_components/orderline/orderline','@point_of_sale/app/generic_components/order_widget/order_widget'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{usePos}=require("@point_of_sale/app/store/pos_hook");const{Component,useState}=require("@odoo/owl");const{Orderline}=require("@point_of_sale/app/generic_components/orderline/orderline");const{OrderWidget}=require("@point_of_sale/app/generic_components/order_widget/order_widget");const SplitBillScreen=__exports.SplitBillScreen=class SplitBillScreen extends Component{static template="pos_restaurant.SplitBillScreen";static components={Orderline,OrderWidget};static props={};setup(){this.pos=usePos();this.qtyTracker=useState({});this.priceTracker=useState({});}
get currentOrder(){return this.pos.get_order();}
get orderlines(){return this.currentOrder.get_orderlines();}
get newOrderPrice(){return Object.values(this.priceTracker).reduce((a,b)=>a+b,0);}
onClickLine(line){const lines=line.getAllLinesInCombo();for(const line of lines){if(!line.is_pos_groupable()){if(this.qtyTracker[line.uuid]===line.get_quantity()){this.qtyTracker[line.uuid]=0;}else{this.qtyTracker[line.uuid]=line.get_quantity();}}else if(!this.qtyTracker[line.uuid]){this.qtyTracker[line.uuid]=1;}else if(this.qtyTracker[line.uuid]===line.get_quantity()){this.qtyTracker[line.uuid]=0;}else{this.qtyTracker[line.uuid]+=1;}
if(this.qtyTracker[line.uuid]>line.get_quantity()){this.qtyTracker[line.uuid]=line.get_quantity();}
this.priceTracker[line.uuid]=(line.get_price_with_tax()/line.qty)*this.qtyTracker[line.uuid];}}
_getOrderName(order){return order.table_id?.table_number.toString()||order.getFloatingOrderName()||"";}
_getLatestOrderNameStartingWith(name){return(this.pos.get_open_orders().map((order)=>this._getOrderName(order)).filter((orderName)=>orderName.slice(0,-1)===name).sort((a,b)=>a.slice(-1).localeCompare(b.slice(-1))).at(-1)||name);}
_getSplitOrderName(originalOrderName){const latestOrderName=this._getLatestOrderNameStartingWith(originalOrderName);if(latestOrderName===originalOrderName){return`${originalOrderName}B`;}
const lastChar=latestOrderName[latestOrderName.length-1];if(lastChar==="Z"){throw new Error("You cannot split the order into more than 26 parts!");}
const nextChar=String.fromCharCode(lastChar.charCodeAt(0)+1);return`${latestOrderName.slice(0, -1)}${nextChar}`;}
async preSplitOrder(originalOrder,newOrder){}
async postSplitOrder(originalOrder,newOrder){}
_getSentQty(ogLine,newLine,orderedQty){const unorderedQty=ogLine.qty-orderedQty;const delta=newLine.qty-unorderedQty;const newQty=delta>0?delta:0;return{[ogLine.preparationKey]:orderedQty-newQty,[newLine.preparationKey]:newQty,};}
async createSplittedOrder(){const curOrderUuid=this.currentOrder.uuid;const originalOrder=this.pos.models["pos.order"].find((o)=>o.uuid===curOrderUuid);this.pos.selectedTable=null;const originalOrderName=this._getOrderName(originalOrder);const newOrderName=this._getSplitOrderName(originalOrderName);const newOrder=this.pos.createNewOrder();newOrder.floating_order_name=newOrderName;newOrder.uiState.splittedOrderUuid=curOrderUuid;await this.preSplitOrder(originalOrder,newOrder);const lineToDel=[];for(const line of originalOrder.lines){if(this.qtyTracker[line.uuid]){const data=line.serialize();delete data.uuid;const newLine=this.pos.models["pos.order.line"].create({...data,qty:this.qtyTracker[line.uuid],order_id:newOrder.id,},false,true);const ordered=originalOrder.last_order_preparation_change.lines[line.preparationKey];if(line.get_quantity()===this.qtyTracker[line.uuid]){delete originalOrder.last_order_preparation_change.lines[line.preparationKey];lineToDel.push(line);if(ordered){const newOrdered={...ordered};newOrdered.uuid=newLine.uuid;newOrder.last_order_preparation_change.lines[newLine.preparationKey]=newOrdered;}}else{const newQty=line.get_quantity()-this.qtyTracker[line.uuid];line.update({qty:newQty});if(ordered){const orderedQty=ordered["quantity"];const newOrderedQty=orderedQty>newQty?newQty:orderedQty;ordered["quantity"]=newOrderedQty;if(orderedQty>newQty){const newOrdered={...ordered};newOrdered.uuid=newLine.uuid;newOrdered.quantity=orderedQty-newQty;newOrder.last_order_preparation_change.lines[newLine.preparationKey]=newOrdered;}}}}}
for(const line of lineToDel){line.delete();}
await this.pos.syncAllOrders({orders:[originalOrder,newOrder]});originalOrder.customer_count-=1;await this.postSplitOrder(originalOrder,newOrder);originalOrder.set_screen_data({name:"ProductScreen"});this.pos.selectedOrderUuid=null;this.pos.set_order(newOrder);this.back();}
getLineData(line){const splitQty=this.qtyTracker[line.uuid];if(!splitQty){return line.getDisplayData();}
return{...line.getDisplayData(),qty:`${splitQty} / ${line.get_quantity_str()}`};}
back(){this.pos.showScreen("ProductScreen");}}
registry.category("pos_screens").add("SplitBillScreen",SplitBillScreen);return __exports;});;

/* /pos_restaurant/static/src/app/tip_receipt/tip_receipt.js */
odoo.define('@pos_restaurant/app/tip_receipt/tip_receipt',['@odoo/owl','@point_of_sale/app/screens/receipt_screen/receipt/receipt_header/receipt_header'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{ReceiptHeader}=require("@point_of_sale/app/screens/receipt_screen/receipt/receipt_header/receipt_header");const TipReceipt=__exports.TipReceipt=class TipReceipt extends Component{static template="pos_restaurant.TipReceipt";static components={ReceiptHeader};static props=["headerData","data","total"];get total(){return this.props.total;}}
return __exports;});;

/* /pos_restaurant/static/src/app/tip_screen/tip_screen.js */
odoo.define('@pos_restaurant/app/tip_screen/tip_screen',['@web/core/l10n/translation','@web/core/registry','@web/core/confirmation_dialog/confirmation_dialog','@point_of_sale/app/store/pos_hook','@web/core/utils/hooks','@odoo/owl','@pos_restaurant/app/tip_receipt/tip_receipt','@point_of_sale/app/store/make_awaitable_dialog'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{AlertDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{usePos}=require("@point_of_sale/app/store/pos_hook");const{useService}=require("@web/core/utils/hooks");const{Component,useRef,onMounted}=require("@odoo/owl");const{TipReceipt}=require("@pos_restaurant/app/tip_receipt/tip_receipt");const{ask}=require("@point_of_sale/app/store/make_awaitable_dialog");const TipScreen=__exports.TipScreen=class TipScreen extends Component{static template="pos_restaurant.TipScreen";static props={};setup(){this.pos=usePos();this.posReceiptContainer=useRef("pos-receipt-container");this.dialog=useService("dialog");this.printer=useService("printer");this.state=this.currentOrder.uiState.TipScreen;this._totalAmount=this.currentOrder.get_total_with_tax();onMounted(async()=>{await this.printTipReceipt();});}
get overallAmountStr(){const tipAmount=this.env.utils.parseValidFloat(this.state.inputTipAmount);const original=this.env.utils.formatCurrency(this.totalAmount);const tip=this.env.utils.formatCurrency(tipAmount);const overall=this.env.utils.formatCurrency(this.totalAmount+tipAmount);return`${original} + ${tip} tip = ${overall}`;}
get totalAmount(){return this._totalAmount;}
get currentOrder(){return this.pos.get_order();}
get percentageTips(){return[{percentage:"15%",amount:0.15*this.totalAmount},{percentage:"20%",amount:0.2*this.totalAmount},{percentage:"25%",amount:0.25*this.totalAmount},];}
async validateTip(){const amount=this.env.utils.parseValidFloat(this.state.inputTipAmount);const order=this.pos.get_order();const serverId=typeof order.id==="number"&&order.id;if(!serverId){this.dialog.add(AlertDialog,{title:_t("Unsynced order"),body:_t("This order is not yet synced to server. Make sure it is synced then try again."),});return;}
if(!amount){await this.pos.data.write("pos.order",[serverId],{is_tipped:true,tip_amount:0});this.goNextScreen();return;}
if(amount>0.25*this.totalAmount){const confirmed=await ask(this.dialog,{title:"Are you sure?",body:`${this.env.utils.formatCurrency(
                    amount
                )} is more than 25% of the order's total amount. Are you sure of this tip amount?`,});if(!confirmed){return;}}
order.state="draft";await this.pos.set_tip(amount);order.state="paid";const paymentline=this.pos.get_order().payment_ids[0];if(paymentline.payment_method_id.payment_terminal){paymentline.amount+=amount;await paymentline.payment_method_id.payment_terminal.send_payment_adjust(paymentline.uuid);}
const serializedTipLine=order.get_selected_orderline().serialize({orm:true});order.get_selected_orderline().delete();const serverTipLine=await this.pos.data.create("pos.order.line",[serializedTipLine]);await this.pos.data.write("pos.order",[serverId],{is_tipped:true,tip_amount:serverTipLine[0].price_subtotal_incl,});this.goNextScreen();}
goNextScreen(){if(!this.pos.config.module_pos_restaurant){this.pos.add_new_order();}
const{name,props}=this.nextScreen;this.pos.showScreen(name,props);}
get nextScreen(){return{name:"ReceiptScreen"};}
async printTipReceipt(){const order=this.currentOrder;const receipts=[order.get_selected_paymentline().ticket,order.get_selected_paymentline().cashier_receipt,];for(let i=0;i<receipts.length;i++){await this.printer.print(TipReceipt,{headerData:this.pos.getReceiptHeaderData(order),data:receipts[i]||{},total:this.env.utils.formatCurrency(this.totalAmount),},{webPrintFallback:false});}}}
registry.category("pos_screens").add("TipScreen",TipScreen);return __exports;});;

/* /pos_restaurant/static/src/overrides/components/navbar/navbar.js */
odoo.define('@pos_restaurant/overrides/components/navbar/navbar',['@point_of_sale/app/navbar/navbar','@web/core/utils/patch','@web/core/l10n/translation','@point_of_sale/app/generic_components/numpad/numpad','@pos_restaurant/overrides/components/navbar/table_selector/table_selector'],function(require){'use strict';let __exports={};const{Navbar}=require("@point_of_sale/app/navbar/navbar");const{patch}=require("@web/core/utils/patch");const{_t}=require("@web/core/l10n/translation");const{getButtons,EMPTY,ZERO,BACKSPACE,}=require("@point_of_sale/app/generic_components/numpad/numpad");const{TableSelector}=require("@pos_restaurant/overrides/components/navbar/table_selector/table_selector");patch(Navbar.prototype,{get orderCount(){if(this.pos.config.module_pos_restaurant&&this.pos.selectedTable){return this.pos.getTableOrders(this.pos.selectedTable.id).length;}
return super.orderCount;},onSwitchButtonClick(){const mode=this.pos.floorPlanStyle==="kanban"?"default":"kanban";localStorage.setItem("floorPlanStyle",mode);this.pos.floorPlanStyle=mode;},get showEditPlanButton(){return true;},setFloatingOrder(floatingOrder){this.pos.selectedTable=null;this.pos.set_order(floatingOrder);this.pos.showScreen("ProductScreen");},async onClickTableTab(){await this.pos.syncAllOrders();this.dialog.add(TableSelector,{title:_t("Table Selector"),placeholder:_t("Enter a table number"),buttons:getButtons([EMPTY,ZERO,{...BACKSPACE,class:"o_colorlist_item_color_transparent_1"},]),confirmButtonLabel:_t("Jump"),getPayload:async(table_number)=>{const find_table=(t)=>t.table_number===parseInt(table_number);const table=this.pos.currentFloor?.table_ids.find(find_table)||this.pos.models["restaurant.table"].find(find_table);if(table){return this.pos.setTableFromUi(table);}
const floating_order=this.pos.get_open_orders().find((o)=>o.getFloatingOrderName()===table_number);if(floating_order){return this.setFloatingOrder(floating_order);}
if(!table&&!floating_order){this.pos.selectedTable=null;const newOrder=this.pos.add_new_order();newOrder.floating_order_name=table_number;newOrder.setBooked(true);return this.setFloatingOrder(newOrder);}},});},onClickPlanButton(){this.pos.showScreen("FloorScreen",{floor:this.floor});},});return __exports;});;

/* /pos_restaurant/static/src/overrides/components/navbar/table_selector/table_selector.js */
odoo.define('@pos_restaurant/overrides/components/navbar/table_selector/table_selector',['@point_of_sale/app/store/pos_hook','@point_of_sale/app/components/order_tabs/order_tabs','@point_of_sale/app/utils/input_popups/number_popup'],function(require){'use strict';let __exports={};const{usePos}=require("@point_of_sale/app/store/pos_hook");const{OrderTabs}=require("@point_of_sale/app/components/order_tabs/order_tabs");const{NumberPopup}=require("@point_of_sale/app/utils/input_popups/number_popup");const TableSelector=__exports.TableSelector=class TableSelector extends NumberPopup{static template="pos_restaurant.TableSelector";static components={...super.components,OrderTabs};setup(){this.pos=usePos();super.setup();}}
return __exports;});;

/* /pos_restaurant/static/src/overrides/components/order_tabs/order_tabs.js */
odoo.define('@pos_restaurant/overrides/components/order_tabs/order_tabs',['@point_of_sale/app/components/order_tabs/order_tabs','@web/core/utils/patch'],function(require){'use strict';let __exports={};const{OrderTabs}=require("@point_of_sale/app/components/order_tabs/order_tabs");const{patch}=require("@web/core/utils/patch");patch(OrderTabs.prototype,{newFloatingOrder(){const order=super.newFloatingOrder(...arguments);if(this.pos.config.module_pos_restaurant){order.setBooked(true);}},});return __exports;});;

/* /pos_restaurant/static/src/overrides/components/order_widget/order_widget.js */
odoo.define('@pos_restaurant/overrides/components/order_widget/order_widget',['@point_of_sale/app/generic_components/order_widget/order_widget','@web/core/utils/patch','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{OrderWidget}=require("@point_of_sale/app/generic_components/order_widget/order_widget");const{patch}=require("@web/core/utils/patch");const{_t}=require("@web/core/l10n/translation");patch(OrderWidget,{props:{...OrderWidget.props,isConfigRestaurant:{type:Boolean,optional:true},isOrderBooked:{type:Boolean,optional:true},},});patch(OrderWidget.prototype,{emptyCartText(){let text=super.emptyCartText(...arguments);if(this.props.isConfigRestaurant&&!this.props.isOrderBooked){text+=" "+_t("or book the table for later");}
return text;},});return __exports;});;

/* /pos_restaurant/static/src/overrides/components/payment_screen/payment_screen.js */
odoo.define('@pos_restaurant/overrides/components/payment_screen/payment_screen',['@point_of_sale/app/screens/payment_screen/payment_screen','@web/core/utils/patch'],function(require){'use strict';let __exports={};const{PaymentScreen}=require("@point_of_sale/app/screens/payment_screen/payment_screen");const{patch}=require("@web/core/utils/patch");patch(PaymentScreen.prototype,{get nextScreen(){const order=this.currentOrder;if(!this.pos.config.set_tip_after_payment||order.is_tipped){return super.nextScreen;}
const mainPayment=order.payment_ids[0];if(mainPayment&&mainPayment.canBeAdjusted()){return"TipScreen";}
return super.nextScreen;},async afterOrderValidation(suggestToSync=true){const changedTables=this.pos.models["restaurant.table"]?.filter((t)=>t.parent_id&&t.parent_id.id===this.currentOrder.table_id?.id);if(changedTables?.length){for(const table of changedTables){this.pos.data.write("restaurant.table",[table.id],{parent_id:null});}}
return await super.afterOrderValidation(...arguments);},});return __exports;});;

/* /pos_restaurant/static/src/overrides/components/product_screen/actionpad_widget/actionpad_widget.js */
odoo.define('@pos_restaurant/overrides/components/product_screen/actionpad_widget/actionpad_widget',['@web/core/utils/patch','@point_of_sale/app/screens/product_screen/action_pad/action_pad','@point_of_sale/app/screens/ticket_screen/ticket_screen'],function(require){'use strict';let __exports={};const{patch}=require("@web/core/utils/patch");const{ActionpadWidget}=require("@point_of_sale/app/screens/product_screen/action_pad/action_pad");const{TicketScreen}=require("@point_of_sale/app/screens/ticket_screen/ticket_screen");patch(ActionpadWidget.prototype,{setup(){super.setup();},get swapButton(){return(this.pos.config.module_pos_restaurant&&this.pos.mainScreen.component!==TicketScreen);},get currentOrder(){return this.pos.get_order();},get hasChangesToPrint(){let hasChange=this.pos.getOrderChanges();hasChange=hasChange.generalNote==""?true:hasChange.count||hasChange.generalNote||hasChange.modeUpdate;return hasChange;},get swapButtonClasses(){return{"highlight btn-primary justify-content-between":this.displayCategoryCount.length,"btn-light pe-none disabled justify-content-center":!this.displayCategoryCount.length,altlight:!this.hasChangesToPrint&&this.currentOrder?.hasSkippedChanges(),};},submitOrder(){this.pos.sendOrderInPreparationUpdateLastChange(this.currentOrder);},hasQuantity(order){if(!order){return false;}else{return order.lines.reduce((totalQty,line)=>totalQty+line.get_quantity(),0)>0;}},get highlightPay(){return(this.currentOrder?.lines?.length&&!this.hasChangesToPrint&&this.hasQuantity(this.currentOrder));},get displayCategoryCount(){return this.pos.categoryCount.slice(0,4);},get isCategoryCountOverflow(){if(this.pos.categoryCount.length>4){return true;}
return false;},});return __exports;});;

/* /pos_restaurant/static/src/overrides/components/product_screen/product_screen.js */
odoo.define('@pos_restaurant/overrides/components/product_screen/product_screen',['@point_of_sale/app/screens/product_screen/product_screen','@web/core/utils/patch'],function(require){'use strict';let __exports={};const{ProductScreen}=require("@point_of_sale/app/screens/product_screen/product_screen");const{patch}=require("@web/core/utils/patch");patch(ProductScreen.prototype,{setup(){super.setup(...arguments);},get selectedOrderlineQuantity(){const order=this.pos.get_order();const orderline=order.get_selected_orderline();const isForPreparation=orderline.product_id.pos_categ_ids.map((categ)=>categ.id).some((id)=>this.pos.orderPreparationCategories.has(id));if(this.pos.config.module_pos_restaurant&&this.pos.orderPreparationCategories.size&&isForPreparation){const changes=Object.values(this.pos.getOrderChanges().orderlines).find((change)=>change.name==orderline.get_full_product_name());return changes?changes.quantity:false;}
return super.selectedOrderlineQuantity;},get nbrOfChanges(){return this.pos.getOrderChanges().nbrOfChanges;},get swapButton(){return this.pos.config.module_pos_restaurant&&this.pos.orderPreparationCategories.size;},get displayCategoryCount(){return this.pos.categoryCount.slice(0,3);},async submitOrder(){await this.pos.sendOrderInPreparationUpdateLastChange(this.currentOrder);this.pos.addPendingOrder([this.currentOrder.id]);},get primaryReviewButton(){return(!this.primaryOrderButton&&!this.pos.get_order().is_empty()&&this.pos.config.module_pos_restaurant);},get primaryOrderButton(){return(this.pos.getOrderChanges().nbrOfChanges!==0&&this.pos.config.module_pos_restaurant);},});return __exports;});;

/* /pos_restaurant/static/src/overrides/components/receipt_screen/receipt_screen.js */
odoo.define('@pos_restaurant/overrides/components/receipt_screen/receipt_screen',['@point_of_sale/app/screens/receipt_screen/receipt_screen','@web/core/utils/patch'],function(require){'use strict';let __exports={};const{ReceiptScreen}=require("@point_of_sale/app/screens/receipt_screen/receipt_screen");const{patch}=require("@web/core/utils/patch");patch(ReceiptScreen.prototype,{_addNewOrder(){if(!this.pos.config.module_pos_restaurant){super._addNewOrder(...arguments);}},continueSplitting(){const originalOrderUuid=this.currentOrder.uiState.splittedOrderUuid;this.currentOrder.uiState.screen_data.value="";this.currentOrder.uiState.locked=true;this.pos.selectedOrderUuid=originalOrderUuid;this.pos.showScreen("ProductScreen");},isContinueSplitting(){if(this.pos.config.module_pos_restaurant&&this.currentOrder.originalSplittedOrder){const o=this.currentOrder.originalSplittedOrder;return!o.finalized&&o.lines.length;}else{return false;}},get nextScreen(){if(this.pos.config.module_pos_restaurant){const table=this.pos.selectedTable;return{name:"FloorScreen",props:{floor:table?table.floor_id:null}};}else{return super.nextScreen;}},});return __exports;});;

/* /pos_restaurant/static/src/overrides/components/ticket_screen/ticket_screen.js */
odoo.define('@pos_restaurant/overrides/components/ticket_screen/ticket_screen',['@web/core/l10n/translation','@point_of_sale/app/screens/ticket_screen/ticket_screen','@web/core/utils/hooks','@web/core/utils/patch','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{TicketScreen}=require("@point_of_sale/app/screens/ticket_screen/ticket_screen");const{useAutofocus}=require("@web/core/utils/hooks");const{patch}=require("@web/core/utils/patch");const{Component,useState}=require("@odoo/owl");patch(TicketScreen.prototype,{_getScreenToStatusMap(){return Object.assign(super._getScreenToStatusMap(...arguments),{PaymentScreen:this.pos.config.set_tip_after_payment?"OPEN":super._getScreenToStatusMap(...arguments).PaymentScreen,TipScreen:"TIPPING",});},getTable(order){const table=order.getTable();if(table){let floorAndTable="";if(this.pos.models["restaurant.floor"].length>0){floorAndTable=`${table.floor_id.name}/`;}
floorAndTable+=table.getName();return floorAndTable;}},_getSearchFields(){if(!this.pos.config.module_pos_restaurant){return super._getSearchFields(...arguments);}
return Object.assign({},super._getSearchFields(...arguments),{TABLE:{repr:(order)=>order.table_id?.getName()||"",displayName:_t("Table"),modelField:"table_id.table_number",},});},async _setOrder(order){const shouldBeOverridden=this.pos.config.module_pos_restaurant&&order.table_id;if(!shouldBeOverridden){return super._setOrder(...arguments);}
const orderTable=order.getTable();await this.pos.setTable(orderTable,order.uuid);this.closeTicketScreen();},async settleTips(){const promises=[];for(const order of this.getFilteredOrderList()){const amount=this.env.utils.parseValidFloat(order.uiState.TipScreen.inputTipAmount);if(typeof order.id==="string"){console.warn(`${order.name} is not yet sync. Sync it to server before setting a tip.`);continue;}
order.state="draft";this.pos.selectedOrderUuid=order.uuid;this.pos.set_tip(amount);order.state="paid";order.uiState.screen_data.value={name:"",props:{}};const serializedTipLine=order.get_selected_orderline().serialize({orm:true});order.get_selected_orderline().delete();promises.push(new Promise((resolve)=>{const fn=async()=>{const tipLine=await this.pos.data.create("pos.order.line",[serializedTipLine,]);const state=await this.pos.data.ormWrite("pos.order",[order.id],{is_tipped:true,tip_amount:tipLine[0].price_unit,});if(state){order.update({isTipped:true,tipAmount:tipLine[0].price_unit,});}
resolve();};fn();}));}
await Promise.all(promises);},_getOrderStates(){const result=super._getOrderStates(...arguments);if(this.pos.config.set_tip_after_payment){result.delete("PAYMENT");result.set("OPEN",{text:_t("Open"),indented:true});result.set("TIPPING",{text:_t("Tipping"),indented:true});}
return result;},async onDoRefund(){const order=this.getSelectedOrder();if(this.pos.config.module_pos_restaurant&&order&&!this.pos.selectedTable){await this.pos.setTable(order.table?order.table:this.pos.models["restaurant.table"].getAll()[0]);}
await super.onDoRefund(...arguments);},isDefaultOrderEmpty(order){if(this.pos.config.module_pos_restaurant){return false;}
return super.isDefaultOrderEmpty(...arguments);},});const TipCell=__exports.TipCell=class TipCell extends Component{static template="pos_restaurant.TipCell";static props={order:Object,};setup(){this.state=useState({isEditing:false});this.orderUiState=this.props.order.uiState.TipScreen;useAutofocus();}
get tipAmountStr(){return this.env.utils.formatCurrency(this.env.utils.parseValidFloat(this.orderUiState.inputTipAmount));}
onBlur(){this.state.isEditing=false;}
onKeydown(event){if(event.key==="Enter"){this.state.isEditing=false;}}
editTip(){this.state.isEditing=true;}}
patch(TicketScreen,{components:{...TicketScreen.components,TipCell},});return __exports;});;

/* /pos_restaurant/static/src/overrides/models/devices_synchronisation.js */
odoo.define('@pos_restaurant/overrides/models/devices_synchronisation',['@point_of_sale/app/store/devices_synchronisation','@web/core/utils/patch'],function(require){'use strict';let __exports={};const DevicesSynchronisation=require("@point_of_sale/app/store/devices_synchronisation")[Symbol.for("default")];const{patch}=require("@web/core/utils/patch");patch(DevicesSynchronisation.prototype,{processDynamicRecords(dynamicRecords){const result=super.processDynamicRecords(dynamicRecords);if(!dynamicRecords["pos.order"]?.length){return result;}
const orderByTableId=this.models["pos.order"].reduce((acc,order)=>{if(!order.finalized&&order.table_id?.id){acc[order.table_id.id]=acc[order.table_id.id]||[];acc[order.table_id.id].push(order);}
return acc;},{});for(const orders of Object.values(orderByTableId)){if(orders.length>1){const localOrders=orders.filter((order)=>typeof order.id!=="number");const syncedOrder=orders.filter((order)=>typeof order.id==="number").sort((a,b)=>a.id-b.id);if((syncedOrder.length===0||localOrders.length===0)&&syncedOrder.length<=1&&localOrders.length<=1){continue;}
const uniqOrder=syncedOrder.pop();for(const order of[...localOrders,...syncedOrder]){let watcher=0;while(order.lines.length>0){if(watcher>1000){break;}
const line=order.lines.pop();line.update({order_id:uniqOrder});line.setDirty();watcher++;}}
const localIds=[...localOrders.map((order)=>order.uuid),...syncedOrder.map((order)=>order.uuid),];if(localIds.includes(this.pos.selectedOrderUuid)){this.pos.set_order(uniqOrder);this.pos.addPendingOrder([uniqOrder.id]);}
this.pos.deleteOrders(syncedOrder);this.pos.models["pos.order"].deleteMany(localOrders);}}},});return __exports;});;

/* /pos_restaurant/static/src/overrides/models/payment.js */
odoo.define('@pos_restaurant/overrides/models/payment',['@point_of_sale/app/payment/payment_interface','@web/core/utils/patch'],function(require){'use strict';let __exports={};const{PaymentInterface}=require("@point_of_sale/app/payment/payment_interface");const{patch}=require("@web/core/utils/patch");patch(PaymentInterface.prototype,{canBeAdjusted(uuid){return false;},send_payment_adjust(uuid){},});return __exports;});;

/* /pos_restaurant/static/src/overrides/models/pos_order.js */
odoo.define('@pos_restaurant/overrides/models/pos_order',['@point_of_sale/app/models/pos_order','@web/core/utils/patch'],function(require){'use strict';let __exports={};const{PosOrder}=require("@point_of_sale/app/models/pos_order");const{patch}=require("@web/core/utils/patch");patch(PosOrder.prototype,{setup(_defaultObj,options){super.setup(...arguments);if(this.config.module_pos_restaurant){this.customer_count=this.customer_count||1;}},getCustomerCount(){return this.customer_count;},setCustomerCount(count){this.customer_count=Math.max(count,0);},getTable(){return this.table_id;},amountPerGuest(numCustomers=this.customer_count){if(numCustomers===0){return 0;}
return this.getTotalDue()/numCustomers;},export_for_printing(baseUrl,headerData){return{...super.export_for_printing(...arguments),set_tip_after_payment:this.config.set_tip_after_payment,isRestaurant:this.config.module_pos_restaurant,};},setBooked(booked){this.uiState.booked=booked;},getName(){if(this.config.module_pos_restaurant&&this.getTable()){const table=this.getTable();const child_tables=this.models["restaurant.table"].filter((t)=>{if(t.floor_id.id===table.floor_id.id){return table.isParent(t);}});let name=table.table_number.toString();for(const child_table of child_tables){name+=` & ${child_table.table_number}`;}
return name;}
return super.getName(...arguments);},});return __exports;});;

/* /pos_restaurant/static/src/overrides/models/pos_order_line.js */
odoo.define('@pos_restaurant/overrides/models/pos_order_line',['@point_of_sale/app/models/pos_order_line','@web/core/utils/patch'],function(require){'use strict';let __exports={};const{PosOrderline}=require("@point_of_sale/app/models/pos_order_line");const{patch}=require("@web/core/utils/patch");patch(PosOrderline.prototype,{setup(){super.setup(...arguments);this.note=this.note||"";},clone(){const orderline=super.clone(...arguments);orderline.note=this.note;return orderline;},get_line_diff_hash(){if(this.getNote()){return this.id+"|"+this.getNote();}else{return""+this.id;}},toggleSkipChange(){if(this.uiState.hasChange||this.skip_change){this.setDirty();this.skip_change=!this.skip_change;}},getDisplayClasses(){return{...super.getDisplayClasses(),"has-change":this.uiState.hasChange&&this.config.module_pos_restaurant,"skip-change":this.skip_change&&this.config.module_pos_restaurant,};},});return __exports;});;

/* /pos_restaurant/static/src/overrides/models/pos_payment.js */
odoo.define('@pos_restaurant/overrides/models/pos_payment',['@point_of_sale/app/models/pos_payment','@web/core/utils/patch'],function(require){'use strict';let __exports={};const{PosPayment}=require("@point_of_sale/app/models/pos_payment");const{patch}=require("@web/core/utils/patch");patch(PosPayment.prototype,{canBeAdjusted(){if(this.payment_method_id.payment_terminal){return this.payment_method_id.payment_terminal.canBeAdjusted(this.uuid);}
return!this.payment_method_id.is_cash_count;},});return __exports;});;

/* /pos_restaurant/static/src/overrides/models/pos_store.js */
odoo.define('@pos_restaurant/overrides/models/pos_store',['@web/core/utils/patch','@point_of_sale/app/store/pos_store','@web/core/network/rpc','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{patch}=require("@web/core/utils/patch");const{PosStore}=require("@point_of_sale/app/store/pos_store");const{ConnectionLostError}=require("@web/core/network/rpc");const{_t}=require("@web/core/l10n/translation");patch(PosStore.prototype,{async setup(){this.isEditMode=false;this.tableSyncing=false;await super.setup(...arguments);},get idleTimeout(){return[...super.idleTimeout,{timeout:180000,action:()=>this.config.module_pos_restaurant&&this.mainScreen.component.name!=="PaymentScreen"&&this.showScreen("FloorScreen"),},];},get firstScreen(){const screen=super.firstScreen;if(!this.config.module_pos_restaurant){return screen;}
return screen==="LoginScreen"?"LoginScreen":"FloorScreen";},async onDeleteOrder(order){const orderIsDeleted=await super.onDeleteOrder(...arguments);if(this.config.module_pos_restaurant&&orderIsDeleted&&this.mainScreen.component.name!=="TicketScreen"){this.showScreen("FloorScreen");}
return orderIsDeleted;},async closingSessionNotification(){await super.closingSessionNotification(...arguments);this.computeTableCount();},computeTableCount(){const tables=this.models["restaurant.table"].getAll();const orders=this.get_open_orders();for(const table of tables){const tableOrders=orders.filter((order)=>order.table_id?.id===table.id&&!order.finalized);const qtyChange=tableOrders.reduce((acc,order)=>{const quantityChange=this.getOrderChanges(false,order);const quantitySkipped=this.getOrderChanges(true,order);acc.changed+=quantityChange.count;acc.skipped+=quantitySkipped.count;return acc;},{changed:0,skipped:0});table.uiState.orderCount=tableOrders.length;table.uiState.changeCount=qtyChange.changed;}},get categoryCount(){const orderChanges=this.getOrderChanges();const linesChanges=orderChanges.orderlines;const categories=Object.values(linesChanges).reduce((acc,curr)=>{const categories=this.models["product.product"].get(curr.product_id)?.pos_categ_ids||[];for(const category of categories.slice(0,1)){if(!acc[category.id]){acc[category.id]={count:curr.quantity,name:category.name,};}else{acc[category.id].count+=curr.quantity;}}
return acc;},{});const nbNoteChange=Object.keys(orderChanges.noteUpdated).length;if(nbNoteChange){categories["noteUpdate"]={count:nbNoteChange,name:_t("Note")};}
const currentOrder=this.get_order();if(orderChanges.modeUpdate&&Object.keys(currentOrder.last_order_preparation_change.lines).length){const displayName=currentOrder.takeaway?_t("Take out"):_t("Dine in");categories["modeUpdate"]={count:1,name:displayName};}
return[...Object.values(categories),...("generalNote"in orderChanges?[{count:1,name:_t("Message")}]:[]),];},createNewOrder(){const order=super.createNewOrder(...arguments);if(this.config.module_pos_restaurant&&this.selectedTable&&!order.table_id){order.update({table_id:this.selectedTable});}
return order;},getReceiptHeaderData(order){const json=super.getReceiptHeaderData(...arguments);if(this.config.module_pos_restaurant&&order){if(order.getTable()){json.table=order.getTable().table_number;}
json.customer_count=order.getCustomerCount();}
return json;},closeScreen(){if(this.config.module_pos_restaurant&&!this.get_order()){return this.showScreen("FloorScreen");}
return super.closeScreen(...arguments);},addOrderIfEmpty(){if(!this.config.module_pos_restaurant){return super.addOrderIfEmpty(...arguments);}},async afterProcessServerData(){this.floorPlanStyle=localStorage.getItem("floorPlanStyle")||(this.ui.isSmall?"kanban":"default");if(this.config.module_pos_restaurant){this.currentFloor=this.config.floor_ids?.length>0?this.config.floor_ids[0]:null;}
const res=await super.afterProcessServerData(...arguments);if(this.config.module_pos_restaurant){this.selectedTable=null;}
return res;},add_new_order(){const order=super.add_new_order(...arguments);this.addPendingOrder([order.id]);return order;},async addLineToCurrentOrder(vals,opts={},configure=true){if(this.config.module_pos_restaurant&&!this.get_order().uiState.booked){this.get_order().setBooked(true);}
return super.addLineToCurrentOrder(vals,opts,configure);},async getServerOrders(){if(this.config.module_pos_restaurant){const tableIds=[].concat(...this.models["restaurant.floor"].map((floor)=>floor.table_ids.map((table)=>table.id)));await this.syncAllOrders({table_ids:tableIds});}
return await super.getServerOrders();},getDefaultSearchDetails(){if(this.selectedTable&&this.selectedTable.id){return{fieldName:"TABLE",searchTerm:this.selectedTable.getName(),};}
return super.getDefaultSearchDetails();},async setTable(table,orderUuid=null){this.deviceSync.readDataFromServer();this.selectedTable=table;const tableOrders=table.orders;let currentOrder=tableOrders.find((order)=>orderUuid?order.uuid===orderUuid:!order.finalized);if(currentOrder){this.set_order(currentOrder);}else{const potentialsOrders=this.models["pos.order"].filter((o)=>!o.table_id&&!o.finalized&&o.lines.length===0);if(potentialsOrders.length){currentOrder=potentialsOrders[0];currentOrder.update({table_id:table});this.selectedOrderUuid=currentOrder.uuid;}else{this.add_new_order();}}},async setTableFromUi(table,orderUuid=null){try{this.tableSyncing=true;if(table.parent_id){table=table.getParent();}
await this.setTable(table,orderUuid);}catch(e){if(!(e instanceof ConnectionLostError)){throw e;}
Promise.reject(e);}finally{this.tableSyncing=false;const orders=this.getTableOrders(table.id);if(orders.length>0){this.set_order(orders[0]);const props={};if(orders[0].get_screen_data().name==="PaymentScreen"){props.orderUuid=orders[0].uuid;}
this.showScreen(orders[0].get_screen_data().name,props);}else{this.add_new_order();this.showScreen("ProductScreen");}}},getTableOrders(tableId){return this.get_open_orders().filter((order)=>order.table_id?.id===tableId);},async unsetTable(){this.selectedTable=null;const order=this.get_order();if(order&&!order.isBooked){this.removeOrder(order);}else if(order&&this.previousScreen!=="ReceiptScreen"){if(!this.orderToTransferUuid){this.syncAllOrders({orders:[order]});}else{await this.syncAllOrders({orders:[order]});}}
this.set_order(null);},getActiveOrdersOnTable(table){return this.models["pos.order"].filter((o)=>o.table_id?.id===table.id&&!o.finalized&&o.lines.length);},tableHasOrders(table){return Boolean(table.getOrder());},getTableFromElement(el){return this.models["restaurant.table"].get([...el.classList].find((c)=>c.includes("tableId")).split("-")[1]);},async transferOrder(orderUuid,destinationTable){const order=this.models["pos.order"].getBy("uuid",orderUuid);const destinationOrder=this.getActiveOrdersOnTable(destinationTable)[0];const originalTable=order.table_id;this.loadingOrderState=false;this.alert.dismiss();if(destinationTable.id===originalTable?.id){this.set_order(order);await this.setTable(destinationTable);return;}
if(!this.tableHasOrders(destinationTable)){order.update({table_id:destinationTable});this.set_order(order);this.addPendingOrder([order.id]);}else{for(const orphanLine of order.lines){const adoptingLine=destinationOrder.lines.find((l)=>l.can_be_merged_with(orphanLine));if(adoptingLine){adoptingLine.merge(orphanLine);}else{const serialized=orphanLine.serialize();serialized.order_id=destinationOrder.id;delete serialized.uuid;delete serialized.id;this.models["pos.order.line"].create(serialized,false,true);}}
this.set_order(destinationOrder);await this.deleteOrders([order]);}
await this.syncAllOrders({orders:[destinationOrder||order]});await this.setTable(destinationTable);},getCustomerCount(tableId){const tableOrders=this.getTableOrders(tableId).filter((order)=>!order.finalized);return tableOrders.reduce((count,order)=>count+order.getCustomerCount(),0);},isOpenOrderShareable(){return super.isOpenOrderShareable(...arguments)||this.config.module_pos_restaurant;},toggleEditMode(){this.isEditMode=!this.isEditMode;},_shouldLoadOrders(){return super._shouldLoadOrders()||this.config.module_pos_restaurant;},});return __exports;});;

/* /pos_epson_printer/static/src/app/epson_printer.js */
odoo.define('@pos_epson_printer/app/epson_printer',['@point_of_sale/app/printer/base_printer','@web/core/l10n/translation','@web/core/templates','@web/core/utils/xml'],function(require){'use strict';let __exports={};const{BasePrinter}=require("@point_of_sale/app/printer/base_printer");const{_t}=require("@web/core/l10n/translation");const{getTemplate}=require("@web/core/templates");const{createElement,append,createTextNode}=require("@web/core/utils/xml");function ePOSPrint(children){let ePOSLayout=getTemplate("pos_epson_printer.ePOSLayout");if(!ePOSLayout){throw new Error("'ePOSLayout' not loaded");}
ePOSLayout=ePOSLayout.cloneNode(true);const[eposPrintEl]=ePOSLayout.getElementsByTagName("epos-print");append(eposPrintEl,children);return ePOSLayout.innerHTML.replaceAll(`xmlns=""`,"");}
const EpsonPrinter=__exports.EpsonPrinter=class EpsonPrinter extends BasePrinter{setup({ip}){super.setup(...arguments);this.url=window.location.protocol+"//"+ip;this.address=this.url+"/cgi-bin/epos/service.cgi?devid=local_printer";}
processCanvas(canvas){const rasterData=this.canvasToRaster(canvas);const encodedData=this.encodeRaster(rasterData);return ePOSPrint([createElement("image",{width:canvas.width,height:canvas.height,align:"center",},[createTextNode(encodedData)]),createElement("cut",{type:"feed"}),]);}
openCashbox(){const pulse=ePOSPrint([createElement("pulse")]);this.sendPrintingJob(pulse);}
async sendPrintingJob(img){const res=await fetch(this.address,{method:"POST",body:img,});const body=await res.text();const parser=new DOMParser();const parsedBody=parser.parseFromString(body,"application/xml");const response=parsedBody.querySelector("response");return{result:response.getAttribute("success")==="true",printerErrorCode:response.getAttribute("code"),};}
canvasToRaster(canvas){const imageData=canvas.getContext("2d").getImageData(0,0,canvas.width,canvas.height);const pixels=imageData.data;const width=imageData.width;const height=imageData.height;const errors=Array.from(Array(width),(_)=>Array(height).fill(0));const rasterData=new Array(width*height).fill(0);for(let y=0;y<height;y++){for(let x=0;x<width;x++){let oldColor,newColor;const idx=(y*width+x)*4;oldColor=pixels[idx]*0.299+pixels[idx+1]*0.587+pixels[idx+2]*0.114;oldColor+=errors[x][y];oldColor=Math.min(255,Math.max(0,oldColor));if(oldColor<128){newColor=0;rasterData[y*width+x]=1;}else{newColor=255;rasterData[y*width+x]=0;}
const error=oldColor-newColor;if(error){if(x<width-1){errors[x+1][y]+=(7/16)*error;}
if(x>0&&y<height-1){errors[x-1][y+1]+=(3/16)*error;}
if(y<height-1){errors[x][y+1]+=(5/16)*error;}
if(x<width-1&&y<height-1){errors[x+1][y+1]+=(1/16)*error;}}}}
return rasterData.join("");}
encodeRaster(rasterData){let encodedData="";for(let i=0;i<rasterData.length;i+=8){const sub=rasterData.substr(i,8);encodedData+=String.fromCharCode(parseInt(sub,2));}
return btoa(encodedData);}
getActionError(){const printRes=super.getResultsError();if(window.location.protocol==="https:"){printRes.message.body+=_t("If you are on a secure server (HTTPS) please make sure you manually accepted the certificate by accessing %s. ",this.url);}
return printRes;}
getResultsError(printResult){const errorCode=printResult.printerErrorCode;let message=_t("The printer was successfully reached, but it wasn't able to print.")+"\n";if(errorCode){message+="\n"+_t("The following error code was given by the printer:")+"\n"+errorCode;const extra_messages={DeviceNotFound:_t("Check on the printer configuration for the 'Device ID' setting. "+"It should be set to: ")+"\nlocal_printer",EPTR_REC_EMPTY:_t("No paper was detected by the printer"),};if(errorCode in extra_messages){message+="\n"+extra_messages[errorCode];}
message+="\n"+
_t("To find more details on the error reason, please search online for:")+"\n"+" Epson Server Direct Print "+
errorCode;}else{message+=_t("Please check if the printer has enough paper and is ready to print.");}
return{successful:false,errorCode:errorCode,message:{title:_t("Printing failed"),body:message,},};}}
return __exports;});;

/* /pos_epson_printer/static/src/overrides/models/pos_store.js */
odoo.define('@pos_epson_printer/overrides/models/pos_store',['@point_of_sale/app/store/pos_store','@pos_epson_printer/app/epson_printer','@web/core/utils/patch'],function(require){'use strict';let __exports={};const{PosStore}=require("@point_of_sale/app/store/pos_store");const{EpsonPrinter}=require("@pos_epson_printer/app/epson_printer");const{patch}=require("@web/core/utils/patch");patch(PosStore.prototype,{afterProcessServerData(){var self=this;return super.afterProcessServerData(...arguments).then(function(){if(self.config.other_devices&&self.config.epson_printer_ip){self.hardwareProxy.printer=new EpsonPrinter({ip:self.config.epson_printer_ip});}});},create_printer(config){if(config.printer_type==="epson_epos"){return new EpsonPrinter({ip:config.epson_printer_ip});}else{return super.create_printer(...arguments);}},});return __exports;});;

/* /pos_sale/static/src/overrides/components/control_buttons/control_buttons.js */
odoo.define('@pos_sale/overrides/components/control_buttons/control_buttons',['@web/core/utils/patch','@point_of_sale/app/screens/product_screen/control_buttons/control_buttons','@web/views/view_dialogs/select_create_dialog'],function(require){'use strict';let __exports={};const{patch}=require("@web/core/utils/patch");const{ControlButtons}=require("@point_of_sale/app/screens/product_screen/control_buttons/control_buttons");const{SelectCreateDialog}=require("@web/views/view_dialogs/select_create_dialog");patch(ControlButtons.prototype,{onClickQuotation(){this.dialog.add(SelectCreateDialog,{resModel:"sale.order",noCreate:true,multiSelect:false,domain:[["state","!=","cancel"],["invoice_status","!=","invoiced"],["currency_id","=",this.pos.currency.id],],onSelected:async(resIds)=>{await this.pos.onClickSaleOrder(resIds[0]);},});},});return __exports;});;

/* /pos_sale/static/src/overrides/components/orderline/orderline.js */
odoo.define('@pos_sale/overrides/components/orderline/orderline',['@point_of_sale/app/generic_components/orderline/orderline','@web/core/utils/patch'],function(require){'use strict';let __exports={};const{Orderline}=require("@point_of_sale/app/generic_components/orderline/orderline");const{patch}=require("@web/core/utils/patch");patch(Orderline,{props:{...Orderline.props,line:{...Orderline.props.line,shape:{...Orderline.props.line.shape,so_reference:{type:String,optional:true},details:{type:Array,optional:true,element:{type:Object,shape:{product_uom_qty:Number,product_name:String,total:String,},},},},},},});return __exports;});;

/* /pos_sale/static/src/overrides/models/data_service_options.js */
odoo.define('@pos_sale/overrides/models/data_service_options',['@point_of_sale/app/models/data_service_options','@web/core/utils/patch'],function(require){'use strict';let __exports={};const{DataServiceOptions}=require("@point_of_sale/app/models/data_service_options");const{patch}=require("@web/core/utils/patch");patch(DataServiceOptions.prototype,{get databaseTable(){return{...super.databaseTable,"sale.order":{key:"id",condition:(record)=>{return record.models["pos.order.line"].find((l)=>l.sale_order_origin_id?.id===record.id);},},"sale.order.line":{key:"id",condition:(record)=>{return record.models["pos.order.line"].find((l)=>l.sale_order_line_id?.id===record.id);},},};},});return __exports;});;

/* /pos_sale/static/src/overrides/models/pos_order.js */
odoo.define('@pos_sale/overrides/models/pos_order',['@point_of_sale/app/models/pos_order','@web/core/utils/patch'],function(require){'use strict';let __exports={};const{PosOrder}=require("@point_of_sale/app/models/pos_order");const{patch}=require("@web/core/utils/patch");patch(PosOrder.prototype,{_get_ignored_product_ids_total_discount(){const productIds=super._get_ignored_product_ids_total_discount(...arguments);if(this.config.down_payment_product_id){productIds.push(this.config.down_payment_product_id.id);}
return productIds;},});return __exports;});;

/* /pos_sale/static/src/overrides/models/pos_order_line.js */
odoo.define('@pos_sale/overrides/models/pos_order_line',['@point_of_sale/app/models/pos_order_line','@point_of_sale/app/models/utils/currency','@web/core/utils/patch'],function(require){'use strict';let __exports={};const{PosOrderline}=require("@point_of_sale/app/models/pos_order_line");const{formatCurrency}=require("@point_of_sale/app/models/utils/currency");const{patch}=require("@web/core/utils/patch");patch(PosOrderline.prototype,{setup(_defaultObj){super.setup(...arguments);if(this.sale_order_origin_id?.shipping_date){this.order_id.setShippingDate(this.sale_order_origin_id.shipping_date);}},get_sale_order(){if(this.sale_order_origin_id){const value={name:this.sale_order_origin_id.name,details:this.down_payment_details||false,};return value;}
return false;},getDisplayData(){let down_payment_details=[];try{down_payment_details=JSON.parse(this.down_payment_details);}catch{down_payment_details=this.down_payment_details;}
return{...super.getDisplayData(),so_reference:this.sale_order_origin_id?.name,details:down_payment_details?.map?.((detail)=>({product_uom_qty:detail.product_uom_qty,product_name:detail.product_name,total:formatCurrency(detail.total,this.currency),})),};},async setQuantityFromSOL(saleOrderLine){if(!saleOrderLine.has_valued_move_ids){this.set_quantity(saleOrderLine.product_uom_qty);}else if(this.product_id.type==="service"&&!["sent","draft"].includes(this.sale_order_origin_id.state)){this.set_quantity(saleOrderLine.qty_to_invoice);}else{this.set_quantity(saleOrderLine.product_uom_qty-
Math.max(saleOrderLine.qty_delivered,saleOrderLine.qty_invoiced));}},});return __exports;});;

/* /pos_sale/static/src/overrides/models/pos_store.js */
odoo.define('@pos_sale/overrides/models/pos_store',['@web/core/l10n/translation','@web/core/utils/strings','@web/views/fields/parsers','@point_of_sale/app/utils/input_popups/selection_popup','@web/core/confirmation_dialog/confirmation_dialog','@point_of_sale/app/utils/input_popups/number_popup','@point_of_sale/app/store/make_awaitable_dialog','@point_of_sale/app/generic_components/numpad/numpad','@web/core/utils/patch','@point_of_sale/app/store/pos_store','@point_of_sale/app/models/utils/tax_utils'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{sprintf}=require("@web/core/utils/strings");const{parseFloat}=require("@web/views/fields/parsers");const{SelectionPopup}=require("@point_of_sale/app/utils/input_popups/selection_popup");const{AlertDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{NumberPopup}=require("@point_of_sale/app/utils/input_popups/number_popup");const{ask,makeAwaitable}=require("@point_of_sale/app/store/make_awaitable_dialog");const{enhancedButtons}=require("@point_of_sale/app/generic_components/numpad/numpad");const{patch}=require("@web/core/utils/patch");const{PosStore}=require("@point_of_sale/app/store/pos_store");const{compute_price_force_price_include}=require("@point_of_sale/app/models/utils/tax_utils");patch(PosStore.prototype,{async onClickSaleOrder(clickedOrderId){const selectedOption=await makeAwaitable(this.dialog,SelectionPopup,{title:_t("What do you want to do?"),list:[{id:"0",label:_t("Settle the order"),item:"settle"},{id:"1",label:_t("Apply a down payment (percentage)"),item:"dpPercentage",},{id:"2",label:_t("Apply a down payment (fixed amount)"),item:"dpAmount",},],});if(!selectedOption){return;}
const sale_order=await this._getSaleOrder(clickedOrderId);const currentSaleOrigin=this.get_order().get_orderlines().find((line)=>line.sale_order_origin_id)?.sale_order_origin_id;if(currentSaleOrigin?.id){const linkedSO=await this._getSaleOrder(currentSaleOrigin.id);if(linkedSO.partner_id?.id!==sale_order.partner_id?.id||linkedSO.partner_invoice_id?.id!==sale_order.partner_invoice_id?.id||linkedSO.partner_shipping_id?.id!==sale_order.partner_shipping_id?.id){this.add_new_order({partner_id:sale_order.partner_id,});this.notification.add(_t("A new order has been created."));}}
const orderFiscalPos=sale_order.fiscal_position_id&&this.models["account.fiscal.position"].find((position)=>position.id===sale_order.fiscal_position_id);if(orderFiscalPos){this.get_order().update({fiscal_position_id:orderFiscalPos,});}
if(sale_order.partner_id){this.get_order().set_partner(sale_order.partner_id);}
selectedOption=="settle"?await this.settleSO(sale_order,orderFiscalPos):await this.downPaymentSO(sale_order,selectedOption=="dpPercentage");this.selectOrderLine(this.get_order(),this.get_order().lines.at(-1));},async _getSaleOrder(id){const sale_order=(await this.data.read("sale.order",[id]))[0];return sale_order;},async settleSO(sale_order,orderFiscalPos){if(sale_order.pricelist_id){this.get_order().set_pricelist(sale_order.pricelist_id);}
let useLoadedLots=false;let userWasAskedAboutLoadedLots=false;let previousProductLine=null;for(const line of sale_order.order_line){if(line.display_type==="line_note"){if(previousProductLine){const previousNote=previousProductLine.customer_note;previousProductLine.customer_note=previousNote?previousNote+"--"+line.name:line.name;}
continue;}
if(line.is_downpayment){line.product_id=this.config.down_payment_product_id;}
const newLineValues={product_id:line.product_id,qty:line.product_uom_qty,price_unit:line.price_unit,price_type:"automatic",tax_ids:orderFiscalPos||!line.tax_id?undefined:line.tax_id.map((t)=>["link",t]),sale_order_origin_id:sale_order,sale_order_line_id:line,customer_note:line.customer_note,description:line.name,order_id:this.get_order(),};if(line.display_type==="line_section"){continue;}
const newLine=await this.addLineToCurrentOrder(newLineValues,{},false);previousProductLine=newLine;if(newLine.get_product().tracking!=="none"&&(this.pickingType.use_create_lots||this.pickingType.use_existing_lots)&&line.pack_lot_ids?.length>0){if(!useLoadedLots&&!userWasAskedAboutLoadedLots){useLoadedLots=await ask(this.dialog,{title:_t("SN/Lots Loading"),body:_t("Do you want to load the SN/Lots linked to the Sales Order?"),});userWasAskedAboutLoadedLots=true;}
if(useLoadedLots){newLine.setPackLotLines({modifiedPackLotLines:[],newPackLotLines:(line.lot_names||[]).map((name)=>({lot_name:name,})),});}}
line.has_valued_move_ids=await this.data.call("sale.order.line","has_valued_move_ids",[line.id]);newLine.setQuantityFromSOL(line);newLine.set_unit_price(line.price_unit);newLine.set_discount(line.discount);const product_unit=line.product_id.uom_id;if(product_unit&&!product_unit.is_pos_groupable){let remaining_quantity=newLine.qty;newLine.delete();while(!this.env.utils.floatIsZero(remaining_quantity)){const splitted_line=this.models["pos.order.line"].create({...newLineValues,});splitted_line.set_quantity(Math.min(remaining_quantity,1.0),true);splitted_line.set_discount(line.discount);remaining_quantity-=splitted_line.qty;}}}},async downPaymentSO(sale_order,isPercentage){if(!this.config.down_payment_product_id&&this.config.raw.down_payment_product_id){await this.data.read("product.product",[this.config.raw.down_payment_product_id]);}
if(!this.config.down_payment_product_id){this.dialog.add(AlertDialog,{title:_t("No down payment product"),body:_t("It seems that you didn't configure a down payment product in your point of sale. You can go to your point of sale configuration to choose one."),});return;}
const payload=await makeAwaitable(this.dialog,NumberPopup,{title:_t("Down Payment"),subtitle:sprintf(_t("Due balance: %s"),this.env.utils.formatCurrency(sale_order.amount_unpaid)),buttons:enhancedButtons(),formatDisplayedValue:(x)=>(isPercentage?`% ${x}`:x),feedback:(buffer)=>isPercentage&&buffer?`(${this.env.utils.formatCurrency(
                          (sale_order.amount_unpaid * parseFloat(buffer)) / 100
                      )})`:"",});if(!payload){return;}
const userValue=parseFloat(payload);let proposed_down_payment=userValue;if(isPercentage){const down_payment_tax=this.models["account.tax"].get(this.config.down_payment_product_id.taxes_id);const percentageBase=!down_payment_tax||down_payment_tax.price_include?sale_order.amount_unpaid:sale_order.amount_untaxed;proposed_down_payment=(percentageBase*userValue)/100;}
if(proposed_down_payment>sale_order.amount_unpaid){this.dialog.add(AlertDialog,{title:_t("Error amount too high"),body:_t("You have tried to charge a down payment of %s but only %s remains to be paid, %s will be applied to the purchase order line.",this.env.utils.formatCurrency(proposed_down_payment),this.env.utils.formatCurrency(sale_order.amount_unpaid),this.env.utils.formatCurrency(sale_order.amount_unpaid||0)),});proposed_down_payment=sale_order.amount_unpaid||0;}
this._createDownpaymentLines(sale_order,proposed_down_payment);},async _createDownpaymentLines(sale_order,total_down_payment){const percentage=total_down_payment/sale_order.amount_total;const grouped=Object.groupBy(sale_order.order_line.filter((ol)=>ol.product_id),(ol)=>ol.tax_id.map((tax_id)=>tax_id.id).sort((a,b)=>a-b));let fixed_taxes_downpayment=0;const fixed_taxes_tab=[];const down_payment_line_to_create=[];Object.keys(grouped).forEach(async(key)=>{const group=grouped[key];const fixed_taxes=group[0].tax_id.filter((tax)=>tax.amount_type==="fixed");const total_qty=group.reduce((total,line)=>(total+=line.product_uom_qty),0);fixed_taxes.forEach((tax)=>{fixed_taxes_downpayment+=tax.amount*total_qty*percentage;fixed_taxes_tab.push(group);});const fixed_tax_total_amount=fixed_taxes.reduce((total,tax)=>{return total+tax.amount;},0);const total_price=group.reduce((total,line)=>(total+=line.price_total-line.product_uom_qty*fixed_tax_total_amount),0);const down_payment_line_price=total_price*percentage;const taxes_to_apply=group[0].tax_id.filter((tax)=>tax.amount_type!=="fixed");const new_price=compute_price_force_price_include(taxes_to_apply,down_payment_line_price,this.config.down_payment_product_id,this.config._product_default_values,this.company,this.currency,this.models);down_payment_line_to_create.push({price:new_price,tab:group,tax_ids:taxes_to_apply,});});if(fixed_taxes_downpayment!==0){const line=down_payment_line_to_create.find((line)=>!line.tax_ids.length);if(line){line.price+=fixed_taxes_downpayment;}else{down_payment_line_to_create.push({price:fixed_taxes_downpayment,tab:fixed_taxes_tab.flat(),tax_ids:[],});}}
for(const down_payment_line of down_payment_line_to_create){this.addLineToCurrentOrder({pos:this,order:this.get_order(),product_id:this.config.down_payment_product_id,price:down_payment_line.price,price_unit:down_payment_line.price,price_type:"automatic",sale_order_origin_id:sale_order,down_payment_details:down_payment_line.tab.filter((line)=>line.product_id&&line.product_id.id!==this.config.down_payment_product_id.id).map((line)=>({product_name:line.product_id.display_name,product_uom_qty:line.product_uom_qty,price_unit:line.price_unit,total:line.price_total,})),tax_ids:[["link",...down_payment_line.tax_ids]],});}},selectOrderLine(order,line){super.selectOrderLine(...arguments);if(line&&this.config.down_payment_product_id&&line.product_id.id===this.config.down_payment_product_id.id){this.numpadMode="price";}},});return __exports;});;

/* /pos_self_order/static/src/overrides/components/product_info_banner/product_info_banner.js */
odoo.define('@pos_self_order/overrides/components/product_info_banner/product_info_banner',['@point_of_sale/app/components/product_info_banner/product_info_banner','@web/core/utils/patch'],function(require){'use strict';let __exports={};const{ProductInfoBanner}=require("@point_of_sale/app/components/product_info_banner/product_info_banner");const{patch}=require("@web/core/utils/patch");patch(ProductInfoBanner.prototype,{get bannerClass(){const result=super.bannerClass;return`${result} ${this.props.product.self_order_available ? "bg-success" : "bg-danger"}`;},});return __exports;});;

/* /pos_self_order/static/src/overrides/components/product_info_popup/product_info_popup.js */
odoo.define('@pos_self_order/overrides/components/product_info_popup/product_info_popup',['@point_of_sale/app/screens/product_screen/product_info_popup/product_info_popup','@web/core/utils/patch'],function(require){'use strict';let __exports={};const{ProductInfoPopup}=require("@point_of_sale/app/screens/product_screen/product_info_popup/product_info_popup");const{patch}=require("@web/core/utils/patch");patch(ProductInfoPopup.prototype,{async switchSelfAvailability(){await this.pos.data.write("product.product",[this.props.product.id],{self_order_available:!this.props.product.self_order_available,});},});return __exports;});;

/* /pos_self_order/static/src/overrides/models/pos_store.js */
odoo.define('@pos_self_order/overrides/models/pos_store',['@point_of_sale/app/store/pos_store','@web/core/utils/patch','@point_of_sale/app/models/pos_order'],function(require){'use strict';let __exports={};const{PosStore}=require("@point_of_sale/app/store/pos_store");const{patch}=require("@web/core/utils/patch");const{PosOrder}=require("@point_of_sale/app/models/pos_order");patch(PosStore.prototype,{async getServerOrders(){if(this.session._self_ordering){await this.loadServerOrders([["company_id","=",this.config.company_id.id],["state","=","draft"],"|",["pos_reference","ilike","Kiosk"],["pos_reference","ilike","Self-Order"],["table_id","=",false],]);}
return await super.getServerOrders(...arguments);},_shouldLoadOrders(){return super._shouldLoadOrders()||this.session._self_ordering;},});patch(PosOrder.prototype,{setup(){super.setup(...arguments);if(this.pos_reference?.startsWith("Self-Order")){this.tracking_number="S"+this.tracking_number;}},});return __exports;});;

/* /point_of_sale/static/src/app/main.js */
odoo.define('@point_of_sale/app/main',['@point_of_sale/app/loader/loader','@web/core/templates','@odoo/owl','@web/core/l10n/translation','@web/core/browser/feature_detection','@web/core/l10n/localization','@web/core/user','@web/session','@web/env','@point_of_sale/app/pos_app'],function(require){'use strict';let __exports={};const{Loader}=require("@point_of_sale/app/loader/loader");const{getTemplate}=require("@web/core/templates");const{mount,reactive,whenReady}=require("@odoo/owl");const{_t}=require("@web/core/l10n/translation");const{hasTouch}=require("@web/core/browser/feature_detection");const{localization}=require("@web/core/l10n/localization");const{user}=require("@web/core/user");const{session}=require("@web/session");const{mountComponent}=require("@web/env");const{Chrome}=require("@point_of_sale/app/pos_app");const loader=reactive({isShown:true});whenReady(()=>{mount(Loader,document.body,{getTemplate,translateFn:_t,props:{loader}});});(async function startPosApp(){odoo.info={db:session.db,server_version:session.server_version,server_version_info:session.server_version_info,isEnterprise:session.server_version_info.slice(-1)[0]==="e",};await whenReady();const app=await mountComponent(Chrome,document.body,{name:"Odoo Point of Sale",props:{disableLoader:()=>(loader.isShown=false)},});window.addEventListener("beforeunload",function(event){if(!navigator.onLine){var confirmationMessage=_t("You are currently offline. Reloading the page may cause you to lose unsaved data.");event.returnValue=confirmationMessage;return confirmationMessage;}});const classList=document.body.classList;if(localization.direction==="rtl"){classList.add("o_rtl");}
if(user.userId===1){classList.add("o_is_superuser");}
if(app.env.debug){classList.add("o_debug");}
if(hasTouch()){classList.add("o_touch_device");classList.add("o_mobile_overscroll");document.documentElement.classList.add("o_mobile_overscroll");}})();return __exports;});;

/* /pos_online_payment/static/src/app/models/pos_payment.js */
odoo.define('@pos_online_payment/app/models/pos_payment',['@point_of_sale/app/models/pos_payment','@web/core/utils/patch'],function(require){'use strict';let __exports={};const{PosPayment}=require("@point_of_sale/app/models/pos_payment");const{patch}=require("@web/core/utils/patch");patch(PosPayment.prototype,{canBeAdjusted(){if(this.payment_method_id.is_online_payment){return false;}else{return super.canBeAdjusted();}},});return __exports;});;

/* /pos_online_payment/static/src/app/online_payment_popup/online_payment_popup.js */
odoo.define('@pos_online_payment/app/online_payment_popup/online_payment_popup',['@odoo/owl','@web/core/dialog/dialog'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{Dialog}=require("@web/core/dialog/dialog");const OnlinePaymentPopup=__exports.OnlinePaymentPopup=class OnlinePaymentPopup extends Component{static template="pos_online_payment.OnlinePaymentPopup";static components={Dialog};static props={qrCode:String,formattedAmount:String,orderName:String,close:Function,};}
return __exports;});;

/* /pos_online_payment/static/src/overrides/pos_overrides/components/payment_screen/payment_screen.js */
odoo.define('@pos_online_payment/overrides/pos_overrides/components/payment_screen/payment_screen',['@web/core/l10n/translation','@point_of_sale/app/screens/payment_screen/payment_screen','@web/core/utils/patch','@pos_online_payment/app/online_payment_popup/online_payment_popup','@web/core/confirmation_dialog/confirmation_dialog','@point_of_sale/utils','@point_of_sale/app/store/make_awaitable_dialog'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{PaymentScreen}=require("@point_of_sale/app/screens/payment_screen/payment_screen");const{patch}=require("@web/core/utils/patch");const{OnlinePaymentPopup}=require("@pos_online_payment/app/online_payment_popup/online_payment_popup");const{AlertDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{qrCodeSrc}=require("@point_of_sale/utils");const{ask}=require("@point_of_sale/app/store/make_awaitable_dialog");patch(PaymentScreen.prototype,{async addNewPaymentLine(paymentMethod){if(paymentMethod.is_online_payment&&typeof this.currentOrder.id==="string"){this.currentOrder.date_order=luxon.DateTime.now().toFormat("yyyy-MM-dd HH:mm:ss");this.pos.addPendingOrder([this.currentOrder.id]);await this.pos.syncAllOrders();}
return await super.addNewPaymentLine(...arguments);},getRemainingOnlinePaymentLines(){return this.paymentLines.filter((line)=>line.payment_method_id.is_online_payment&&line.get_payment_status()!=="done");},checkRemainingOnlinePaymentLines(unpaidAmount){const remainingLines=this.getRemainingOnlinePaymentLines();let remainingAmount=0;let amount=0;for(const line of remainingLines){amount=line.get_amount();if(amount<=0){this.dialog.add(AlertDialog,{title:_t("Invalid online payment"),body:_t("Online payments cannot have a negative amount (%s: %s).",line.payment_method_id.name,this.env.utils.formatCurrency(amount)),});return false;}
remainingAmount+=amount;}
if(!this.env.utils.floatIsZero(unpaidAmount-remainingAmount)){this.dialog.add(AlertDialog,{title:_t("Invalid online payments"),body:_t("The total amount of remaining online payments to execute (%s) doesn't correspond to the remaining unpaid amount of the order (%s).",this.env.utils.formatCurrency(remainingAmount),this.env.utils.formatCurrency(unpaidAmount)),});return false;}
return true;},async _isOrderValid(isForceValidate){if(!(await super._isOrderValid(...arguments))){return false;}
if(!this.payment_methods_from_config.some((pm)=>pm.is_online_payment)){return true;}
if(this.currentOrder.finalized){this.afterOrderValidation(false);return false;}
const onlinePaymentLines=this.getRemainingOnlinePaymentLines();if(onlinePaymentLines.length>0){if(!this.currentOrder.id){this.cancelOnlinePayment(this.currentOrder);this.dialog.add(AlertDialog,{title:_t("Online payment unavailable"),body:_t("The QR Code for paying could not be generated."),});return false;}
let prevOnlinePaymentLine=null;let lastOrderServerOPData=null;for(const onlinePaymentLine of onlinePaymentLines){const onlinePaymentLineAmount=onlinePaymentLine.get_amount();lastOrderServerOPData=await this.pos.update_online_payments_data_with_server(this.currentOrder,onlinePaymentLineAmount);if(!lastOrderServerOPData){this.dialog.add(AlertDialog,{title:_t("Online payment unavailable"),body:_t("There is a problem with the server. The order online payment status cannot be retrieved."),});return false;}
if(!lastOrderServerOPData.is_paid){if(lastOrderServerOPData.modified_payment_lines){this.cancelOnlinePayment(this.currentOrder);this.dialog.add(AlertDialog,{title:_t("Updated online payments"),body:_t("There are online payments that were missing in your view."),});return false;}
if((prevOnlinePaymentLine&&prevOnlinePaymentLine?.get_payment_status()!=="done")||!this.checkRemainingOnlinePaymentLines(lastOrderServerOPData.amount_unpaid)){this.cancelOnlinePayment(this.currentOrder);return false;}
onlinePaymentLine.set_payment_status("waiting");this.currentOrder.select_paymentline(onlinePaymentLine);const onlinePaymentData={formattedAmount:this.env.utils.formatCurrency(onlinePaymentLineAmount),qrCode:qrCodeSrc(`${this.pos.session._base_url}/pos/pay/${this.currentOrder.id}?access_token=${this.currentOrder.access_token}`),orderName:this.currentOrder.name,};this.currentOrder.onlinePaymentData=onlinePaymentData;const qrCodePopupCloser=this.dialog.add(OnlinePaymentPopup,onlinePaymentData,{onClose:()=>{onlinePaymentLine.onlinePaymentResolver(false);},});const paymentResult=await new Promise((r)=>(onlinePaymentLine.onlinePaymentResolver=r));if(!paymentResult){this.cancelOnlinePayment(this.currentOrder);onlinePaymentLine.set_payment_status(undefined);return false;}
qrCodePopupCloser();if(onlinePaymentLine.get_payment_status()==="waiting"){onlinePaymentLine.set_payment_status(undefined);}
prevOnlinePaymentLine=onlinePaymentLine;}}
if(!lastOrderServerOPData||!lastOrderServerOPData.is_paid){lastOrderServerOPData=await this.pos.update_online_payments_data_with_server(this.currentOrder,0);}
if(!lastOrderServerOPData||!lastOrderServerOPData.is_paid){return false;}
await this.afterPaidOrderSavedOnServer(lastOrderServerOPData.paid_order);return false;}else if(typeof this.currentOrder.id==="number"){const orderServerOPData=await this.pos.update_online_payments_data_with_server(this.currentOrder,0);if(!orderServerOPData){return ask(this.dialog,{title:_t("Online payment unavailable"),body:_t("There is a problem with the server. The order online payment status cannot be retrieved. Are you sure there is no online payment for this order ?"),confirmLabel:_t("Yes"),});}
if(orderServerOPData.is_paid){await this.afterPaidOrderSavedOnServer(orderServerOPData.paid_order);return false;}
if(orderServerOPData.modified_payment_lines){this.dialog.add(AlertDialog,{title:_t("Updated online payments"),body:_t("There are online payments that were missing in your view."),});return false;}}
return true;},cancelOnlinePayment(order){this.pos.update_online_payments_data_with_server(order,0);},async afterPaidOrderSavedOnServer(orderJSON){if(!orderJSON){this.dialog.add(AlertDialog,{title:_t("Server error"),body:_t("The saved order could not be retrieved."),});return;}
const isInvoiceRequested=this.currentOrder.is_to_invoice();if(!orderJSON[0]||this.currentOrder.id!==orderJSON[0].id){this.dialog.add(AlertDialog,{title:_t("Order saving issue"),body:_t("The order has not been saved correctly on the server."),});return;}
this.currentOrder.state="paid";this.pos.validated_orders_name_server_id_map[this.currentOrder.name]=this.currentOrder.id;if((this.currentOrder.is_paid_with_cash()||this.currentOrder.get_change())&&this.pos.config.iface_cashdrawer){this.hardwareProxy.printer.openCashbox();}
if(isInvoiceRequested){if(!orderJSON[0].raw.account_move){this.dialog.add(AlertDialog,{title:_t("Invoice could not be generated"),body:_t("The invoice could not be generated."),});}else{await this.invoiceService.downloadPdf(orderJSON[0].raw.account_move);}}
await this.postPushOrderResolve([this.currentOrder.server_id]);this.afterOrderValidation(true);},});return __exports;});;

/* /pos_online_payment/static/src/overrides/pos_overrides/models/pos_order.js */
odoo.define('@pos_online_payment/overrides/pos_overrides/models/pos_order',['@web/core/utils/patch','@point_of_sale/app/models/pos_order'],function(require){'use strict';let __exports={};const{patch}=require("@web/core/utils/patch");const{PosOrder}=require("@point_of_sale/app/models/pos_order");patch(PosOrder.prototype,{getCustomerDisplayData(){return{...super.getCustomerDisplayData(),onlinePaymentData:{...this.onlinePaymentData},};},});return __exports;});;

/* /pos_online_payment/static/src/overrides/pos_overrides/models/pos_store.js */
odoo.define('@pos_online_payment/overrides/pos_overrides/models/pos_store',['@web/core/utils/patch','@point_of_sale/app/store/pos_store','@web/core/utils/numbers'],function(require){'use strict';let __exports={};const{patch}=require("@web/core/utils/patch");const{PosStore}=require("@point_of_sale/app/store/pos_store");const{floatIsZero}=require("@web/core/utils/numbers");patch(PosStore.prototype,{async setup(){await super.setup(...arguments);this.data.connectWebSocket("ONLINE_PAYMENTS_NOTIFICATION",({id})=>{if(this.get_order()?.id===id){this.update_online_payments_data_with_server(this.get_order(),false);}});},async update_online_payments_data_with_server(order,next_online_payment_amount){if(!order.id){return false;}
try{const opData=await this.data.call("pos.order","get_and_set_online_payments_data",[order.id,next_online_payment_amount,]);return this.process_online_payments_data_from_server(order,opData);}catch(ex){console.error("update_online_payments_data_with_server failed: ",ex);return null;}},process_online_payments_data_from_server(order,opData){if(!opData){return false;}
if(opData.id!==order.id){console.error("Called process_online_payments_data_from_server on the wrong order.");}
if("paid_order"in opData){opData.is_paid=true;order.payment_ids.forEach((line)=>line.onlinePaymentResolver?.(true));return opData;}else{opData.is_paid=false;}
if(opData["deleted"]===true){const onlinePm=order.payment_ids.filter((line)=>line.payment_method_id.is_online_payment);for(const line of onlinePm){line.delete();}
return opData;}
let newDoneOnlinePayment=false;const opLinesToUpdate=order.payment_ids.filter((line)=>line.payment_method_id.is_online_payment&&["waiting","done"].includes(line.get_payment_status()));for(const op of opData.online_payments){const matchingLineIndex=opLinesToUpdate.findIndex((pl)=>pl.payment_method_id.id===op.payment_method_id&&floatIsZero(pl.amount-op.amount,this.currency.decimal_places));let opLine=null;if(matchingLineIndex>-1){opLine=opLinesToUpdate[matchingLineIndex];opLinesToUpdate.splice(matchingLineIndex,1);}
if(!opLine){opLine=this.models["pos.payment"].create({pos_order_id:order,payment_method_id:op.payment_method_id,amount:op.amount,});opData["modified_payment_lines"]=true;}
opLine.set_amount(op.amount);opLine.can_be_reversed=false;if(opLine.get_payment_status()!=="done"){newDoneOnlinePayment=true;}
opLine.set_payment_status("done");}
for(const missingInServerLine of opLinesToUpdate){if(missingInServerLine.get_payment_status()==="done"){this.paymentlines=order.payment_ids.filter((l)=>l.uuid!==missingInServerLine.uuid);opData["modified_payment_lines"]=true;}}
if(newDoneOnlinePayment||opData["modified_payment_lines"]){order.payment_ids.forEach((line)=>line.onlinePaymentResolver?.());}
return opData;},});return __exports;});

                    /*******************************************
                    *  Templates                               *
                    *******************************************/

                    odoo.define("point_of_sale.assets_prod.bundle.xml", ["@web/core/templates"], function(require) {
                        "use strict";
                        const { checkPrimaryTemplateParents, registerTemplate, registerTemplateExtension } = require("@web/core/templates");
                        /* point_of_sale.assets_prod */
                        registerTemplate("web.ActionSwiper", `/web/static/src/core/action_swiper/action_swiper.xml`, `<t t-name="web.ActionSwiper" xml:space="preserve">
        <t t-if="props.onRightSwipe || props.onLeftSwipe">
            <div class="o_actionswiper" t-on-touchend="_onTouchEndSwipe" t-on-touchmove="_onTouchMoveSwipe" t-on-touchstart="_onTouchStartSwipe" t-ref="root">
                <div class="o_actionswiper_overflow_container position-relative overflow-hidden">
                    <div class="o_actionswiper_target_container" t-ref="targetContainer" t-att-style="state.containerStyle" t-att-class="{ o_actionswiper_swiping: state.isSwiping }">
                        <t t-slot="default"/>
                        <t t-if="localizedProps.onRightSwipe and (localizedProps.onRightSwipe.icon or localizedProps.onRightSwipe.bgColor)">
                            <div t-att-style="'max-width: ' + swipedDistance + 'px;'" class="o_actionswiper_right_swipe_area position-absolute overflow-hidden w-100 h-100 d-flex align-items-center justify-content-center rounded-end" t-att-class="localizedProps.onRightSwipe.bgColor">
                                <span><i class="fa fa-2x" t-att-class="localizedProps.onRightSwipe.icon"/></span>
                            </div>
                        </t>
                        <t t-if="localizedProps.onLeftSwipe and (localizedProps.onLeftSwipe.icon or localizedProps.onLeftSwipe.bgColor)">
                            <div t-att-style="'max-width: ' + -swipedDistance + 'px;'" class="o_actionswiper_left_swipe_area position-absolute overflow-hidden w-100 h-100 d-flex align-items-center justify-content-center rounded-start" t-att-class="localizedProps.onLeftSwipe.bgColor">
                                <span><i class="fa fa-2x" t-att-class="localizedProps.onLeftSwipe.icon"/></span>
                            </div>
                        </t>
                    </div>
                </div>
            </div>
        </t>
        <t t-else="">
            <t t-slot="default"/>
        </t>
    </t>
`);
registerTemplate("web.AutoComplete", `/web/static/src/core/autocomplete/autocomplete.xml`, `<t t-name="web.AutoComplete" xml:space="preserve">
        <div class="o-autocomplete" t-ref="root" t-att-class="autoCompleteRootClass">
            <input type="text" t-att-id="props.id" class="o-autocomplete--input o_input pe-3" autocomplete="off" t-att-placeholder="props.placeholder" role="combobox" t-att-aria-activedescendant="activeSourceOptionId" t-att-aria-expanded="displayOptions ? 'true' : 'false'" aria-autocomplete="list" aria-haspopup="listbox" t-model="state.value" t-on-blur="onInputBlur" t-on-click="onInputClick" t-on-change="onInputChange" t-on-input="onInput" t-on-keydown="onInputKeydown" t-on-focus="onInputFocus" t-ref="input"/>
            <t t-if="displayOptions">
                <ul role="menu" class="o-autocomplete--dropdown-menu ui-widget show" t-att-class="ulDropdownClass" t-ref="sourcesList">
                    <t t-foreach="sources" t-as="source" t-key="source.id">
                        <t t-if="source.isLoading">
                            <li class="ui-menu-item" t-att-class="{                                     'o-autocomplete--dropdown-item': props.dropdown,                                     'd-block': !props.dropdown                                 }">
                                <a t-attf-id="{{props.id or 'autocomplete'}}_{{source_index}}_loading" role="option" href="#" class="dropdown-item ui-menu-item-wrapper" aria-selected="true">
                                    <i class="fa fa-spin fa-circle-o-notch"/> <t t-esc="source.placeholder"/>
                                </a>
                            </li>
                        </t>
                        <t t-else="">
                            <t t-foreach="source.options" t-as="option" t-key="option.id">
                                <li class="o-autocomplete--dropdown-item ui-menu-item d-block" t-att-class="option.classList" t-on-mouseenter="() =&gt; this.onOptionMouseEnter([source_index, option_index])" t-on-mouseleave="() =&gt; this.onOptionMouseLeave([source_index, option_index])" t-on-click="() =&gt; this.onOptionClick(option)" t-on-pointerdown="() =&gt; this.ignoreBlur = true">
                                    <a t-attf-id="{{props.id or 'autocomplete'}}_{{source_index}}_{{option_index}}" role="option" href="#" class="dropdown-item ui-menu-item-wrapper text-truncate" t-att-class="{ 'ui-state-active': isActiveSourceOption([source_index, option_index]) }" t-att-aria-selected="isActiveSourceOption([source_index, option_index]) ? 'true' : 'false'">
                                        <t t-if="source.optionTemplate">
                                            <t t-call="{{ source.optionTemplate }}"/>
                                        </t>
                                        <t t-else="">
                                            <t t-esc="option.label"/>
                                        </t>
                                    </a>
                                </li>
                            </t>
                        </t>
                    </t>
                </ul>
            </t>
        </div>
    </t>

`);
registerTemplate("web.BarcodeDialog", `/web/static/src/core/barcode/barcode_dialog.xml`, `<t t-name="web.BarcodeDialog" xml:space="preserve">
        <Dialog title.translate="Barcode Scanner" fullscreen="true" footer="false" contentClass="'o-barcode-modal'">
            <BarcodeVideoScanner t-if="state.barcodeScannerSupported" t-props="props" onError.bind="onError" onResult.bind="onResult"/>
            <div t-else="" t-ref="videoPreview" class="h-100 d-flex flex-column justify-content-center align-items-center gap-1">
                <i class="fa fa-2x fa-camera text-muted"/>
                <strong>Unable to access camera</strong>
                <span class="text-muted" t-out="state.errorMessage"/>
            </div>
        </Dialog>
    </t>
`);
registerTemplate("web.BarcodeVideoScanner", `/web/static/src/core/barcode/barcode_video_scanner.xml`, `<t t-name="web.BarcodeVideoScanner" xml:space="preserve">
        <CropOverlay onResize.bind="this.onResize" isReady="state.isReady">
            <video t-ref="videoPreview" muted="true" autoplay="true" playsinline="true" t-att-class="props.cssClass"/>
        </CropOverlay>
    </t>
`);
registerTemplate("web.CropOverlay", `/web/static/src/core/barcode/crop_overlay.xml`, `<t t-name="web.CropOverlay" xml:space="preserve">
        <div t-ref="crop-container" t-on-mousedown="pointerDown" t-on-touchstart="pointerDown" t-on-mousemove="pointerMove" t-on-touchmove="pointerMove" t-on-mouseup="pointerUp" t-on-touchend="pointerUp" class="d-grid align-content-center justify-content-center h-100 o_crop_container">
            <t t-slot="default"/>
            <t t-if="props.isReady">
                <div class="o_crop_overlay"/>
                <img class="o_crop_icon" src="/web/static/img/transform.svg" draggable="false"/>
            </t>
        </div>
    </t>
`);
registerTemplate("web.CheckBox", `/web/static/src/core/checkbox/checkbox.xml`, `<t t-name="web.CheckBox" xml:space="preserve">
    <div class="o-checkbox form-check" t-attf-class="{{ props.slots ? 'form-check' : '' }}" t-att-class="props.className" t-on-click="onClick" t-ref="root">
        <input t-att-id="props.id or id" type="checkbox" class="form-check-input" t-att-disabled="props.disabled" t-att-checked="props.value" t-att-name="props.name" t-on-change="onChange"/>
        <label t-att-for="props.id or id" class="form-check-label">
            <t t-slot="default"/>
        </label>
    </div>
</t>

`);
registerTemplate("web.CodeEditor", `/web/static/src/core/code_editor/code_editor.xml`, `<t t-name="web.CodeEditor" xml:space="preserve">
        <div t-ref="editorRef" class="w-100" t-att-class="props.class" t-att-data-mode="state.activeMode"/>
    </t>

`);
registerTemplate("web.ColorList", `/web/static/src/core/colorlist/colorlist.xml`, `<t t-name="web.ColorList" xml:space="preserve">
        <div class="o_colorlist d-flex flex-wrap align-items-center mw-100 gap-2" aria-atomic="true" t-ref="colorlist">
            <t t-if="!props.forceExpanded and !state.isExpanded">
                <button t-on-click="onToggle" role="menuitem" t-att-title="colors[props.selectedColor]" t-att-data-color="props.selectedColor" t-att-aria-label="colors[props.selectedColor]" t-attf-class="btn p-0 rounded-0 o_colorlist_toggler o_colorlist_item_color_{{ props.selectedColor }}"/>
            </t>
            <t t-else="" t-foreach="props.colors" t-as="colorId" t-key="colorId">
                <button t-on-click.prevent.stop="() =&gt; this.onColorSelected(colorId)" role="menuitem" t-att-title="colors[colorId]" t-att-data-color="colorId" t-att-aria-label="colors[colorId]" t-attf-class="btn p-0 rounded-0 o_colorlist_item_color_{{ colorId }} {{ colorId === props.selectedColor ? 'o_colorlist_selected' : '' }}"/>
            </t>
        </div>
    </t>

`);
registerTemplate("web.Colorpicker", `/web/static/src/core/colorpicker/colorpicker.xml`, `<t t-name="web.Colorpicker" xml:space="preserve">
    <div class="o_colorpicker_widget" t-ref="el" t-on-click="onClick" t-on-keydown="onKeydown">
        <div class="d-flex justify-content-between align-items-stretch mb-2">
            <div t-ref="colorPickerArea" class="o_color_pick_area position-relative w-75" t-att-style="props.noTransparency ? 'width: 89%;' : None" t-on-mousedown="onMouseDownPicker">
                <div t-ref="colorPickerPointer" class="o_picker_pointer rounded-circle p-1 position-absolute" tabindex="-1"/>
            </div>
            <div t-ref="colorSlider" class="o_color_slider position-relative" t-on-mousedown="onMouseDownSlider">
                <div t-ref="colorSliderPointer" class="o_slider_pointer" tabindex="-1"/>
            </div>
            <div t-ref="opacitySlider" class="o_opacity_slider position-relative" t-if="!props.noTransparency" t-on-mousedown="onMouseDownOpacitySlider">
                <div t-ref="opacitySliderPointer" class="o_opacity_pointer" tabindex="-1"/>
            </div>
        </div>
        <div class="o_color_picker_inputs d-flex justify-content-between mb-2" t-on-change="debouncedOnChangeInputs">
            <t t-set="input_classes" t-value="'p-0 border-0 text-center font-monospace bg-transparent'"/>

            <div class="o_hex_div px-1 d-flex align-items-baseline">
                <input type="text" t-attf-class="o_hex_input {{input_classes}}" data-color-method="hex" size="1" t-on-input="onHexColorInput"/>
                <label class="flex-grow-0 ms-1 mb-0">hex</label>
            </div>
            <div class="o_rgba_div px-1 d-flex align-items-baseline">
                <input type="text" t-attf-class="o_red_input {{input_classes}}" data-color-method="rgb" size="1"/>
                <input type="text" t-attf-class="o_green_input {{input_classes}}" data-color-method="rgb" size="1"/>
                <input type="text" t-attf-class="o_blue_input {{input_classes}}" data-color-method="rgb" size="1"/>
                <t t-if="!props.noTransparency">
                    <input type="text" t-attf-class="o_opacity_input {{input_classes}}" data-color-method="opacity" size="1"/>
                    <label class="flex-grow-0 ms-1 mb-0">
                        RGBA
                    </label>
                </t>
                <label t-else="" class="flex-grow-0 ms-1 mb-0">
                    RGB
                </label>
            </div>
        </div>
    </div>
</t>

`);
registerTemplate("web.DefaultFooter", `/web/static/src/core/commands/command_items.xml`, `<t t-name="web.DefaultFooter" owl="1" xml:space="preserve">
    <span>
      <span class="fw-bolder text-primary">TIP</span> — search for
      <t t-foreach="elements" t-as="element" t-key="element.namespace">
          <t t-if="!(element_first || element_last)">, </t>
          <t t-if="element_last and !element_first"> and </t>
          <span class="o_namespace btn-link text-primary cursor-pointer" t-on-click="() =&gt; this.onClick(element.namespace)">
              <span t-out="element.namespace" class="fw-bolder text-primary"/><t t-out="element.name"/>
          </span>
      </t>
    </span>
  </t>

  `);
registerTemplate("web.DefaultCommandItem", `/web/static/src/core/commands/command_items.xml`, `<t t-name="web.DefaultCommandItem" xml:space="preserve">
    <div class="o_command_default d-flex align-items-center justify-content-between px-4 py-2 cursor-pointer">
      <t t-slot="name"/>
      <t t-slot="focusMessage"/>
    </div>
  </t>

  `);
registerTemplate("web.HotkeyCommandItem", `/web/static/src/core/commands/command_items.xml`, `<t t-name="web.HotkeyCommandItem" xml:space="preserve">
    <div class="o_command_hotkey d-flex align-items-center justify-content-between px-4 py-2 cursor-pointer">
      <t t-slot="name"/>
      <span>
        <t t-foreach="getKeysToPress(props)" t-as="key" t-key="key_index">
          <kbd t-out="key" class="d-inline-block px-3 py-1"/>
          <span t-if="!key_last"> + </span>
        </t>
      </span>
    </div>
  </t>

`);
registerTemplate("web.CommandPalette", `/web/static/src/core/commands/command_palette.xml`, `<t t-name="web.CommandPalette" xml:space="preserve">
    <Dialog header="false" footer="false" size="'md'" contentClass="'o_command_palette'">
      <div t-ref="root">
        <div class="o_command_palette_search input-group mb-2 px-4 py-3 border-bottom">
          <span t-if="state.namespace !== 'default'" class="o_namespace d-flex align-items-center me-1" t-out="state.namespace"/>
          <input class="form-control border-0 p-0" type="text" data-allow-hotkeys="true" t-att-value="state.searchValue" t-ref="autofocus" t-att-placeholder="state.placeholder" t-on-input="onSearchInput" t-on-keydown="onKeyDown" role="combobox" t-attf-aria-activedescendant="o_command_{{state.commands.length ? state.commands.indexOf(state.selectedCommand) : 'empty'}}" aria-expanded="true" aria-autocomplete="list" aria-haspopup="listbox"/>
          <div class="input-group-text border-0 bg-transparent">
              <i t-if="state.isLoading" title="Loading..." role="img" aria-label="Loading..." class="fa fa-spinner fa-spin"/>
              <i t-else="" t-att-title="state.placeholder" role="img" t-att-aria-label="state.placeholder" class="oi oi-search"/>
          </div>
        </div>

        <div t-ref="listbox" role="listbox" class="o_command_palette_listbox position-relative overflow-auto">
          <div t-if="!state.commands.length" id="o_command_empty" role="option" aria-selected="true" class="o_command_palette_listbox_empty px-4 py-3 fst-italic" t-out="state.emptyMessage"/>
          <t t-if="!isFuzzySearch" t-foreach="commandsByCategory" t-as="category" t-key="category.keyId">
            <div class="o_command_category px-0">
              <span t-if="category.name" class="text-truncate text-uppercase fw-bold fs-6 px-3" t-out="category.name"/>
              <t t-foreach="category.commands" t-as="command" t-key="command.keyId">
                <t t-set="commandIndex" t-value="state.commands.indexOf(command)"/>
                <div t-attf-id="o_command_{{commandIndex}}" class="o_command" role="option" t-att-aria-selected="state.selectedCommand === command ? 'true' : 'false'" t-att-class="{ focused: state.selectedCommand === command }" t-on-click="(event) =&gt; this.onCommandClicked(event, commandIndex)" t-on-mouseenter="() =&gt; this.onCommandMouseEnter(commandIndex)" t-on-close="() =&gt; this.props.closeMe()">
                  <a t-att-href="command.href">
                    <t t-component="command.Component || DefaultCommandItem" name="command.name" searchValue="state.searchValue" t-props="command.props" executeCommand="() =&gt; this.executeCommand(command)">
                      <t t-set-slot="name">
                        <span class="o_command_name text-ellipsis" t-att-title="command.name">
                          <t t-foreach="command.splitName" t-as="name" t-key="name_index">
                            <b t-if="name_index % 2" t-out="name" class="text-primary"/>
                            <t t-else="" t-out="name"/>
                          </t>
                        </span>
                      </t>
                      <t t-set-slot="focusMessage">
                          <small t-if="!isMobileOS and command.href and state.selectedCommand === command" class="o_command_focus text-muted"><kbd><t t-if="isMacOS">CMD</t><t t-else="">CTRL</t></kbd>+<kbd>⏎</kbd><span class="ms-1">new tab</span></small>
                      </t>
                    </t>
                  </a>
                </div>
              </t>
            </div>

            <hr class="my-2 mx-0" t-if="!category_last"/>
          </t>
        </div>

        <div t-if="state.FooterComponent" class="o_command_palette_footer mt-2 px-4 py-2 border-top rounded-bottom bg-100 text-muted">
          <t t-component="state.FooterComponent" switchNamespace="(namespace) =&gt; this.debounceSearch(namespace.concat(this.state.searchValue))"/>
        </div>
      </div>
    </Dialog>
  </t>

`);
registerTemplate("web.ConfirmationDialog", `/web/static/src/core/confirmation_dialog/confirmation_dialog.xml`, `<t t-name="web.ConfirmationDialog" xml:space="preserve">
    <Dialog size="'md'" title="props.title" modalRef="modalRef">
      <p t-out="props.body" class="text-prewrap"/>
      <t t-set-slot="footer">
        <button class="btn" t-att-class="props.confirmClass" t-on-click="_confirm" t-esc="props.confirmLabel"/>
        <button t-if="props.cancel" class="btn btn-secondary" t-on-click="_cancel" t-esc="props.cancelLabel"/>
      </t>
    </Dialog>
  </t>

  `);
registerTemplate("web.AlertDialog", `/web/static/src/core/confirmation_dialog/confirmation_dialog.xml`, `<t t-name="web.AlertDialog" xml:space="preserve">
    <Dialog size="'sm'" title="props.title" contentClass="props.contentClass">
      <p t-out="props.body" class="text-prewrap"/>
      <t t-set-slot="footer">
        <button class="btn" t-att-class="props.confirmClass" t-on-click="_confirm" t-esc="props.confirmLabel"/>
        <button t-if="props.cancel" class="btn btn-secondary" t-on-click="_cancel" t-esc="props.cancelLabel"/>
      </t>
    </Dialog>
  </t>

`);
registerTemplate("web.CopyButton", `/web/static/src/core/copy_button/copy_button.xml`, `<t t-name="web.CopyButton" xml:space="preserve">
        <button class="text-nowrap" t-ref="button" t-att-disabled="props.disabled" t-attf-class="btn o_clipboard_button {{ props.className || '' }}" t-on-click.stop="onClick">
            <span class="mx-1" t-attf-class="fa {{ props.icon || 'fa-clipboard' }}"/>
            <span t-if="props.copyText" t-esc="props.copyText"/>
        </button>
    </t>

`);
registerTemplate("web.DateTimeInput", `/web/static/src/core/datetime/datetime_input.xml`, `<t t-name="web.DateTimeInput" xml:space="preserve">
        <input type="text" t-ref="start-date" t-att-id="props.id" class="o_datetime_input o_input cursor-pointer" autocomplete="off" t-att-placeholder="props.placeholder"/>
    </t>
`);
registerTemplate("web.DateTimePicker.Days", `/web/static/src/core/datetime/datetime_picker.xml`, `<t t-name="web.DateTimePicker.Days" xml:space="preserve">
        <div class="d-flex gap-3">
            <t t-foreach="items" t-as="month" t-key="month.id">
                <div class="o_date_picker d-grid flex-grow-1 bg-view rounded overflow-auto" t-on-pointerleave="() =&gt; (state.hoveredDate = null)">
                    <t t-foreach="month.daysOfWeek" t-as="dayOfWeek" t-key="dayOfWeek[0]">
                        <div class="o_day_of_week_cell o_text_sm o_cell_md fw-bolder bg-100 border-bottom border-2 d-flex align-items-center justify-content-center" t-att-title="dayOfWeek[1]">
                            <div class="text-nowrap overflow-hidden" t-esc="props.daysOfWeekFormat === 'narrow' ? dayOfWeek[2] : dayOfWeek[0]"/>
                        </div>
                    </t>
                    <t t-foreach="month.weeks" t-as="week" t-key="week.number">
                        <t t-if="props.showWeekNumbers ?? !props.range">
                            <div class="o_week_number_cell o_center o_cell_md o_text_sm bg-100 fw-bolder" t-att-class="{ 'border-bottom': !week_last }" t-esc="week.number"/>
                        </t>
                        <t t-foreach="week.days" t-as="itemInfo" t-key="itemInfo.id">
                            <t t-set="arInfo" t-value="getActiveRangeInfo(itemInfo)"/>
                            <t t-if="itemInfo.isOutOfRange">
                                <div class="o_date_item_cell o_out_of_range o_cell_md"/>
                            </t>
                            <t t-else="">
                                <button class="o_date_item_cell o_datetime_button o_center o_cell_md btn p-1 border-0 fw-normal" tabindex="-1" t-att-class="{                                         'o_selected': arInfo.isSelected,                                         o_select_start: arInfo.isSelectStart,                                         o_select_end: arInfo.isSelectEnd,                                         o_highlighted: arInfo.isHighlighted,                                         o_current: arInfo.isCurrent,                                         o_today: itemInfo.includesToday,                                         [itemInfo.extraClass]: true,                                     }" t-att-disabled="!itemInfo.isValid" t-on-pointerenter="() =&gt; (state.hoveredDate = itemInfo.range[0])" t-on-click="() =&gt; this.zoomOrSelect(itemInfo)">
                                    <span t-esc="itemInfo.label" class="z-1"/>
                                </button>
                            </t>
                        </t>
                    </t>
                </div>
            </t>
        </div>
        <div t-attf-class="position-relative d-flex flex-column flex-md-row gap-4 gap-md-3 {{ props.type === 'datetime' ? 'justify-content-center' : 'justify-content-end' }}">
            <div t-attf-class="d-flex gap-3 w-100 {{ props.type === 'datetime' ? 'justify-content-center' : 'd-none' }}">
                <t t-if="props.type === 'datetime'">
                    <t t-foreach="state.timeValues" t-as="timeValue" t-key="timeValue_index">
                        <div t-if="timeValue" class="o_time_picker d-flex align-items-center justify-content-center w-lg-50 w-100 gap-1">
                            <t t-call="web.DateTimePicker.Select">
                                <t t-set="unitIndex" t-value="0"/>
                                <t t-set="unitList" t-value="availableHours"/>
                            </t>
                            <span>:</span>
                            <t t-call="web.DateTimePicker.Select">
                                <t t-set="unitIndex" t-value="1"/>
                                <t t-set="unitList" t-value="availableMinutes"/>
                            </t>
                            <t t-if="availableSeconds.length">
                                <span>:</span>
                                <t t-call="web.DateTimePicker.Select">
                                    <t t-set="unitIndex" t-value="2"/>
                                    <t t-set="unitList" t-value="availableSeconds"/>
                                </t>
                            </t>
                            <t t-if="meridiems">
                                <t t-call="web.DateTimePicker.Select">
                                    <t t-set="unitIndex" t-value="3"/>
                                    <t t-set="unitList" t-value="meridiems"/>
                                </t>
                            </t>
                        </div>
                    </t>
                </t>
            </div>

            <div t-attf-class="o_datetime_buttons {{ props.type === 'datetime' ? 'position-md-absolute h-100 start-0' : '' }}">
                <t t-slot="bottom_left"/>
            </div>
            <div t-attf-class="o_datetime_buttons {{ props.type === 'datetime' ? 'position-md-absolute h-100 end-0' : '' }}">
                <t t-slot="buttons"/>
            </div>
        </div>
    </t>

    `);
registerTemplate("web.DateTimePicker.Grid", `/web/static/src/core/datetime/datetime_picker.xml`, `<t t-name="web.DateTimePicker.Grid" xml:space="preserve">
        <div class="o_date_item_picker d-grid">
            <t t-foreach="items" t-as="itemInfo" t-key="itemInfo.id">
                <t t-set="arInfo" t-value="getActiveRangeInfo(itemInfo)"/>
                <button class="o_date_item_cell o_datetime_button btn o_center o_cell_lg btn p-1 border-0" tabindex="-1" t-att-class="{                         o_selected: arInfo.isSelected,                         o_select_start: arInfo.isSelectStart,                         o_select_end: arInfo.isSelectEnd,                         o_highlighted: arInfo.isHighlighted,                         o_today: itemInfo.includesToday,                     }" t-att-disabled="!itemInfo.isValid" t-on-click="() =&gt; this.zoomOrSelect(itemInfo)">
                    <span t-esc="itemInfo.label" class="z-1"/>
                </button>
            </t>
        </div>
    </t>

    `);
registerTemplate("web.DateTimePicker.Select", `/web/static/src/core/datetime/datetime_picker.xml`, `<t t-name="web.DateTimePicker.Select" xml:space="preserve">

        <select class="o_time_picker_select form-control form-control-sm w-auto" tabindex="-1" t-model="timeValue[unitIndex]" t-on-change="() =&gt; this.selectTime(timeValue_index)">
            <option t-if="unitIndex === 1 and !!(timeValue[unitIndex] % props.rounding)" class="text-center" value="" selected="true"/>
            <t t-foreach="unitList" t-as="unit" t-key="unit[0]">
                <option class="text-center" t-att-value="unit[0]" t-esc="unit[1]" t-att-selected="timeValue[unitIndex] === unit[0].toString()"/>
            </t>
        </select>
    </t>

    `);
registerTemplate("web.DateTimePicker", `/web/static/src/core/datetime/datetime_picker.xml`, `<t t-name="web.DateTimePicker" xml:space="preserve">
        <div class="o_datetime_picker d-flex flex-column gap-2 user-select-none p-2 p-lg-3" t-attf-style="--DateTimePicker__Day-template-columns: {{ props.showWeekNumbers ?? !props.range ? 8 : 7 }}">
            <nav class="o_datetime_picker_header btn-group">
                <button class="o_previous btn btn-light flex-grow-0" t-on-click="previous" tabindex="-1">
                    <i class="oi oi-chevron-left" t-att-title="activePrecisionLevel.prevTitle"/>
                </button>
                <button class="o_zoom_out o_datetime_button btn d-flex align-items-center px-0 text-truncate justify-content-around" tabindex="-1" t-att-class="{ 'btn-light': !isLastPrecisionLevel }" t-att-title="!isLastPrecisionLevel and activePrecisionLevel.mainTitle" t-on-click="zoomOut">
                    <t t-foreach="titles" t-as="title" t-key="title">
                        <strong t-attf-class="o_header_part fs-5 {{ props.range ? 'flex-basis-50' : 'flex-basis-100' }}" t-esc="title"/>
                    </t>
                </button>
                <button class="o_next btn btn-light flex-grow-0" t-on-click="next" tabindex="-1">
                    <i class="oi oi-chevron-right" t-att-title="activePrecisionLevel.nextTitle"/>
                </button>
            </nav>
            <t t-if="state.precision === 'days'">
                <t t-call="web.DateTimePicker.Days"/>
            </t>
            <t t-else="">
                <t t-call="web.DateTimePicker.Grid"/>
            </t>
        </div>
    </t>
`);
registerTemplate("web.DateTimePickerPopover", `/web/static/src/core/datetime/datetime_picker_popover.xml`, `<t t-name="web.DateTimePickerPopover" xml:space="preserve">
        <DateTimePicker t-props="props.pickerProps">
            <t t-set-slot="buttons">
                <t t-if="isDateTimeRange">
                    <button class="o_apply btn btn-primary btn-sm h-100 w-100 w-md-auto d-flex align-items-center justify-content-center gap-1" tabindex="-1" t-on-click="props.close">
                        <i class="fa fa-check"/>
                        <span>Apply</span>
                    </button>
                </t>
            </t>
            <t t-set-slot="bottom_left">
                <t t-if="isDateTimeRange">
                    <button class="btn btn-secondary btn-sm h-100 w-100 w-md-auto d-flex align-items-center justify-content-center" tabindex="-1" t-on-click="props.close">
                        <span>Close</span>
                    </button>
                </t>
            </t>
        </DateTimePicker>
    </t>
`);
registerTemplate("web.Dialog", `/web/static/src/core/dialog/dialog.xml`, `<t t-name="web.Dialog" xml:space="preserve">
        <div class="o_dialog" t-att-id="id" t-att-class="{ o_inactive_modal: !data.isActive }">
            <div role="dialog" class="modal d-block" tabindex="-1" t-att-class="{ o_technical_modal: props.technical, o_modal_full: isFullscreen, o_inactive_modal: !data.isActive }" t-ref="modalRef">
                <div class="modal-dialog modal-dialog-centered" t-attf-class="modal-{{props.size}}">
                    <div class="modal-content" t-att-class="props.contentClass" t-att-style="contentStyle">
                        <header t-if="props.header" class="modal-header">
                            <t t-slot="header" close="data.close" isFullscreen="isFullscreen">
                                <t t-call="web.Dialog.header">
                                    <t t-set="fullscreen" t-value="isFullscreen"/>
                                    <t t-set="onExpand" t-value="props.onExpand"/>
                                </t>
                            </t>
                        </header>
                        <main class="modal-body" t-attf-class="{{ props.bodyClass }} {{ !props.withBodyPadding ? 'p-0': '' }}">
                            <t t-slot="default" close="() =&gt; this.data.close()"/>
                        </main>
                        <footer t-if="props.footer" class="modal-footer justify-content-around justify-content-md-start flex-wrap gap-1 w-100">
                            <t t-slot="footer" close="() =&gt; this.data.close()">
                                <button class="btn btn-primary o-default-button" t-on-click="() =&gt; this.data.close()">
                                    <t>Ok</t>
                                </button>
                            </t>
                        </footer>
                    </div>
                </div>
            </div>
        </div>
    </t>

    `);
registerTemplate("web.Dialog.header", `/web/static/src/core/dialog/dialog.xml`, `<t t-name="web.Dialog.header" xml:space="preserve">
        <t t-if="fullscreen">
            <button class="btn oi oi-arrow-left" data-bs-dismiss="modal" aria-label="Close" t-on-click="dismiss"/>
        </t>
        <h4 class="modal-title text-break flex-grow-1" t-att-class="{ 'me-auto': fullscreen }">
            <t t-esc="props.title"/>
        </h4>
        <t t-if="!isFullscreen and onExpand">
            <button type="button" class="fa fa-expand btn o_expand_button" aria-label="Expand" tabindex="-1" t-on-click="onExpand"/>
        </t>
        <t t-if="!fullscreen">
            <button type="button" class="btn-close" aria-label="Close" tabindex="-1" t-on-click="dismiss"/>
        </t>
    </t>
`);
registerTemplate("web.DomainSelector", `/web/static/src/core/domain_selector/domain_selector.xml`, `<t t-name="web.DomainSelector" xml:space="preserve">
        <div class="o_domain_selector w-100" aria-atomic="true" t-att-class="props.className">
            <t t-if="tree">
                <TreeEditor resModel="props.resModel" tree="tree" update.bind="update" readonly="props.readonly" isDebugMode="props.isDebugMode" defaultConnector="props.defaultConnector" getDefaultCondition.bind="getDefaultCondition" getOperatorEditorInfo.bind="getOperatorEditorInfo" getDefaultOperator.bind="getDefaultOperator" getPathEditorInfo.bind="getPathEditorInfo">
                    <CheckBox t-if="showArchivedCheckbox" value="includeArchived" disabled="props.readonly" className="'form-switch'" onChange.bind="toggleIncludeArchived">
                        Include archived
                    </CheckBox>
                </TreeEditor>
            </t>
            <t t-else="">
                <div class="o_domain_selector_row d-flex align-items-center">
                    This domain is not supported.
                    <t t-if="!props.readonly">
                        <button class="btn btn-sm btn-primary ms-2" t-on-click="() =&gt; this.resetDomain()">Reset domain</button>
                    </t>
                </div>
            </t>
            <t t-if="props.isDebugMode and (!tree or !props.readonly)">
                <label class="o_domain_selector_debug_container d-block mt-3 border rounded p-3 bg-100 text-muted font-monospace">
                    <span class="small"># Code editor</span>
                    <textarea class="pt-2 border-0 bg-transparent text-body" type="text" t-att-readonly="props.readonly" spellcheck="false" t-att-value="props.domain" t-on-input="(ev) =&gt; this.onDomainInput(ev.target.value)" t-on-change="(ev) =&gt; this.onDomainChange(ev.target.value)"/>
                </label>
            </t>
        </div>
    </t>

`);
registerTemplate("web.DomainSelectorDialog", `/web/static/src/core/domain_selector_dialog/domain_selector_dialog.xml`, `<t t-name="web.DomainSelectorDialog" xml:space="preserve">
        <Dialog title="dialogTitle">
            <div t-if="props.text" class="mb-3" t-out="props.text"/>
            <DomainSelector t-props="domainSelectorProps"/>
            <t t-set-slot="footer">
                <t t-if="props.readonly">
                    <button class="btn btn-secondary" t-on-click="() =&gt; props.close()">Close</button>
                </t>
                <t t-else="">
                    <button class="btn btn-primary" t-att-disabled="disabled" t-on-click="onConfirm" t-ref="confirm"><t t-esc="confirmButtonText"/></button>
                    <button class="btn btn-secondary" t-on-click="onDiscard"><t t-esc="discardButtonText"/></button>
                </t>
            </t>
        </Dialog>
    </t>

`);
registerTemplate("web.AccordionItem", `/web/static/src/core/dropdown/accordion_item.xml`, `<t t-name="web.AccordionItem" xml:space="preserve">
        <div class="o_accordion position-relative">
            <button class="o_menu_item o_accordion_toggle dropdown-item o-navigable" tabindex="0" t-att-class="{'selected': props.selected, 'open': state.open}" t-attf-class="{{ props.class }}" t-att-aria-expanded="state.open ? 'true' : 'false'" t-esc="props.description" t-on-click="() =&gt; state.open = !state.open"/>
            <t t-if="state.open">
                <div class="o_accordion_values ms-4 border-start">
                    <t t-slot="default"/>
                </div>
            </t>
        </div>
    </t>

`);
registerTemplate("web.DropdownItem", `/web/static/src/core/dropdown/dropdown_item.xml`, `<t t-name="web.DropdownItem" xml:space="preserve">
    <t t-tag="props.attrs and props.attrs.href ? 'a' : 'span'" class="o-dropdown-item dropdown-item o-navigable" t-att-class="props.class" t-on-click.stop="onClick" t-on-mouseenter="() =&gt; this.dropdownControl.closeChildren()" role="menuitem" tabindex="0" t-att="props.attrs">
      <t t-slot="default"/>
    </t>
  </t>


  `);
registerTemplate("web.CheckboxItem", `/web/static/src/core/dropdown/dropdown_item.xml`, `<t t-name="web.CheckboxItem" t-inherit="web.DropdownItem" t-inherit-mode="primary" xml:space="preserve">
    <xpath expr="//t[@role='menuitem']" position="attributes">
      <attribute name="role">menuitemcheckbox</attribute>
      <attribute name="t-att-aria-checked">props.checked ? 'true' : 'false'</attribute>
    </xpath>
  </t>

`);
registerTemplate("web.Dropzone", `/web/static/src/core/dropzone/dropzone.xml`, `<t t-name="web.Dropzone" xml:space="preserve">
    <div class="o-Dropzone position-fixed align-items-center justify-content-center d-flex border-primary bg-100 text-primary opacity-75" t-att-class="{ 'o-dragging-inside': state.isDraggingInside }" t-attf-class="{{ props.extraClass }}" t-on-dragenter="() =&gt; state.isDraggingInside = true" t-on-dragleave="() =&gt; state.isDraggingInside = false" t-on-drop="props.onDrop" t-ref="root">
        <t t-slot="default">
            <h4>Drag Files Here <i class="fa fa-download"/></h4>
        </t>
    </div>
</t>

`);
registerTemplate("web.RainbowMan", `/web/static/src/core/effects/rainbow_man.xml`, `<t t-name="web.RainbowMan" xml:space="preserve">
        <div class="o_reward position-fixed top-0 start-0 w-100 h-100" t-att-class="{ o_reward_fading: state.isFading }" t-on-animationend="onAnimationEnd">
            <svg class="o_reward_rainbow_man position-absolute top-0 bottom-0 start-0 end-0 m-auto overflow-visible" viewBox="0 0 400 400">
                <defs>
                    <radialGradient id="o_reward_gradient_bg" cx="200" cy="200" r="200" gradientUnits="userSpaceOnUse">
                        <stop offset="0.3" stop-color="#edeff4"/>
                        <stop offset="1" stop-color="#edeff4" stop-opacity="0"/>
                    </radialGradient>
                    <symbol id="o_reward_star">
                        <path d="M33 15.9C26.3558 13.6951 21.1575 8.4597 19 1.8 19 1.2477 18.5523.8 18 .8 17.4477.8 17 1.2477 17 1.8 14.6431 8.6938 9.0262 13.9736 2 15.9 1.3649 15.9.85 16.4149.85 17.05.85 17.6851 1.3649 18.2 2 18.2 8.6215 20.3845 13.8155 25.5785 16 32.2 16 32.7523 16.4477 33.2 17 33.2 17.5523 33.2 18 32.7523 18 32.2 20.3569 25.3062 25.9738 20.0264 33 18.1 33.6351 18.1 34.15 17.5851 34.15 16.95 34.15 16.3149 33.6351 15.8 33 15.8" fill="#FFFFFF"/>
                    </symbol>
                    <symbol id="o_reward_thumb">
                        <path d="M10 52C6 51 3 48 3 44 2 42 3 39 5 38 3 36 2 34 2 32 2 29 3 27 5 26 3 24 2 21 2 19 2 15 7 12 10 12L23 12C23 11 23 11 23 11L23 10C23 8 24 6 25 4 27 2 29 2 31 2 33 2 35 2 36 4 38 5 39 7 39 10L39 38C39 41 37 45 35 47 32 50 28 51 25 52L10 52 10 52Z" fill="#FBFBFC"/>
                        <polygon fill="#ECF1FF" points="25 11 25 51 5 52 5 12"/>
                        <path d="M31 0C28 0 26 1 24 3 22 5 21 7 21 10L10 10C8 10 6 11 4 12 2 14 1 16 1 19 1 21 1 24 2 26 1 27 1 29 1 32 1 34 1 36 2 38 1 40 0 42 1 45 1 50 5 53 10 54L25 54C29 54 33 52 36 49 39 46 41 42 41 38L41 10C41 4 36 0 31 0M31 4C34 4 37 6 37 10L37 38C37 41 35 44 33 46 31 48 28 49 25 50L10 50C7 49 5 47 5 44 4 41 6 38 9 37L9 37C6 37 5 35 5 32 5 28 6 26 9 26L9 26C6 26 5 22 5 19 5 16 8 14 11 14L23 14C24 14 25 12 25 11L25 10C25 7 28 4 31 4" fill="#A1ACBA"/>
                    </symbol>
                </defs>
                <rect width="400" height="400" fill="url(#o_reward_gradient_bg)"/>
                <g transform="translate(47 45) scale(0.9)" class="o_reward_rainbow">
                    <path d="M270,170a100,100,0,0,0-200,0" class="o_reward_rainbow_line" stroke="#FF9E80" stroke-linecap="round" stroke-width="21" fill="none" stroke-dasharray="600 600" stroke-dashoffset="-600"/>
                    <path d="M290,170a120,120,0,0,0-240,0" class="o_reward_rainbow_line" stroke="#FFE57F" stroke-linecap="round" stroke-width="21" fill="none" stroke-dasharray="600 600" stroke-dashoffset="-600"/>
                    <path d="M310,170a140,140,0,0,0-280,0" class="o_reward_rainbow_line" stroke="#80D8FF" stroke-linecap="round" stroke-width="21" fill="none" stroke-dasharray="600 600" stroke-dashoffset="-600"/>
                    <path d="M330,170a160,160,0,0,0-320,0" class="o_reward_rainbow_line" stroke="#C794BA" stroke-linecap="round" stroke-width="21" fill="none" stroke-dasharray="600 600" stroke-dashoffset="-600"/>
                </g>
                <g transform="translate(80 125)">
                    <use href="#o_reward_star" transform-origin="center" class="o_reward_box o_reward_star_01"/>
                </g>
                <g transform="translate(140 75)">
                    <use href="#o_reward_star" transform-origin="center" class="o_reward_box o_reward_star_02"/>
                </g>
                <g transform="translate(230 90)">
                    <use href="#o_reward_star" transform-origin="center" class="o_reward_box o_reward_star_03"/>
                </g>
                <g transform="translate(275 120)">
                    <use href="#o_reward_star" transform-origin="center" class="o_reward_box o_reward_star_04"/>
                </g>
                <g class="o_reward_face_group o_reward_box" transform-origin="center top">
                    <g class="o_reward_shadow_container o_reward_box">
                        <ellipse class="o_reward_shadow o_reward_box" cx="200" cy="105%" rx="100" ry="6" fill="#000" opacity="0.25" transform-origin="center"/>
                    </g>
                    <g class="o_reward_face_wrap o_reward_box" transform-origin="center">
                        <image class="o_reward_face" x="132" y="125" width="136" height="136" t-attf-href="{{props.imgUrl}}"/>
                    </g>
                    <g transform="translate(258 174)">
                        <use href="#o_reward_thumb" class="o_reward_box o_reward_thumbup" transform-origin="center"/>
                    </g>
                </g>
            </svg>
            <div class="o_reward_rainbow_man o_reward_msg_container position-absolute top-0 bottom-0 start-0 end-0 m-auto">
                <div class="o_reward_face_group h-100 w-75 mx-auto">
                    <svg viewBox="0 0 42 60" preserveAspectRatio="xMinYMax meet" width="37" height="65%" class="overflow-visible position-relative ms-5">
                        <g class="o_reward_box">
                            <use href="#o_reward_thumb" x="-60%" y="0" transform="rotate(-90) scale(1 -1)" transform-origin="center"/>
                        </g>
                    </svg>
                    <div class="o_reward_msg mx-4">
                        <div class="o_reward_msg_card">
                            <div class="o_reward_msg_content text-muted px-3 py-4 bg-view d-inline-block border border-light border-top-0">
                                <t t-if="!props.Component">
                                    <t t-out="props.message"/>
                                </t>
                                <t t-else="" t-component="props.Component" t-props="props.props"/>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </t>
`);
registerTemplate("web.EmojiPicker", `/web/static/src/core/emoji_picker/emoji_picker.xml`, `<t t-name="web.EmojiPicker" xml:space="preserve">
    <div class="o-EmojiPicker d-flex flex-column justify-content-center rounded-3 bg-100" t-att-class="{ 'align-items-center': emojis.length === 0 }" t-on-click="onClick" t-on-keydown="onKeydown">
        <t t-if="emojis.length === 0">
            <span class="o-EmojiPicker-empty">😵‍💫</span>
            <span class="fs-5 text-muted">Failed to load emojis...</span>
        </t>
        <t t-else="">
            <div class="o-EmojiPicker-search d-flex align-items-center mx-2 mt-2 rounded">
                <span class="d-flex mx-1 w-100 rounded o-active align-items-center justify-content-center border border-secondary bg-white">
                    <t t-call="web.EmojiPicker.searchInput">
                        <t t-if="props.state" t-set="localState" t-value="props.state"/>
                        <t t-else="" t-set="localState" t-value="state"/>
                    </t>
                    <i class="oi oi-search px-2 py-1 fs-7 rounded-start-0 rounded-3 o-active opacity-50" title="Search..." role="img" aria-label="Search..."/>
                </span>
            </div>
            <t t-set="itemIndex" t-value="0"/>
            <t t-set="emojisFromSearch" t-value="getEmojisFromSearch()"/>
            <div class="o-EmojiPicker-content overflow-auto d-flex flex-grow-1 w-100 flex-wrap align-items-center user-select-none mt-1" t-att-class="emojisFromSearch.length === 0 ? 'flex-column justify-content-center' : 'align-content-start'" t-ref="emoji-grid" t-on-scroll="highlightActiveCategory">
                <t t-if="searchTerm and emojisFromSearch.length === 0" class="d-flex flex-column">
                    <span class="o-EmojiPicker-empty">😢</span>
                    <span class="fs-5 text-muted">No emoji matches your search</span>
                </t>
                <t t-if="recentEmojis.length &gt; 0">
                    <t t-if="!searchTerm" t-call="web.EmojiPicker.section">
                        <t t-set="category" t-value="recentCategory"/>
                    </t>
                    <t t-foreach="recentEmojis" t-as="emoji" t-key="'recent_' + emoji_index">
                        <t t-call="web.EmojiPicker.emoji">
                            <t t-set="inRecent" t-value="true"/>
                            <t t-set="emoji" t-value="emoji"/>
                        </t>
                        <t t-set="itemIndex" t-value="itemIndex + 1"/>
                    </t>
                </t>
                <t t-set="current" t-value=""/>
                <t t-foreach="getEmojis()" t-as="emoji" t-key="emoji_index">
                    <t t-if="!searchTerm and current !== emoji.category">
                        <t t-set="current" t-value="emoji.category"/>
                        <t t-set="category" t-value="categories.find(c =&gt; c.name === current)"/>
                        <t t-call="web.EmojiPicker.section">
                            <t t-set="category" t-value="category"/>
                        </t>
                    </t>
                    <t t-elif="searchTerm" t-set="categorySortId" t-value="null"/>
                    <t t-call="web.EmojiPicker.emoji">
                        <t t-set="emoji" t-value="emoji"/>
                    </t>
                    <t t-set="itemIndex" t-value="itemIndex + 1"/>
                </t>
            </div>
            <div class="o-EmojiPicker-navbar d-flex flex-shrink-0 w-100 align-items-center justify-content-center overflow-auto px-1 gap-1 border-top border-secondary" t-att-class="{ 'opacity-0': !state.emojiNavbarRepr }" t-ref="navbar">
                <t t-if="currentNavbarPanel">
                    <t t-set="allCategories" t-value="getAllCategories()"/>
                    <t t-foreach="currentNavbarPanel" t-as="navbarItemId" t-key="navbarItemId">
                        <t t-if="navbarItemId === 'next'" t-call="web.EmojiPicker.tabNext"/>
                        <t t-elif="navbarItemId === 'previous'" t-call="web.EmojiPicker.tabPrev"/>
                        <t t-elif="typeof navbarItemId === 'string' and navbarItemId.startsWith('empty')" t-call="web.EmojiPicker.tabEmpty"/>
                        <t t-else="">
                            <t t-set="category" t-value="allCategories.find(cat =&gt; cat.sortId === navbarItemId)"/>
                            <t t-if="category" t-call="web.EmojiPicker.tab">
                                <t t-set="category" t-value="category"/>
                            </t>
                        </t>
                    </t>
                </t>
            </div>
        </t>
    </div>
</t>

`);
registerTemplate("web.EmojiPicker.tab", `/web/static/src/core/emoji_picker/emoji_picker.xml`, `<t t-name="web.EmojiPicker.tab" xml:space="preserve">
    <span class="o-Emoji text-center fs-5 rounded-3 cursor-pointer d-flex align-items-center align-self-stretch" t-att-class="{'o-active': category.sortId === state.categoryId}" t-att-title="category.name" t-att-data-id="category.sortId" t-on-click="() =&gt; this.selectCategory(category.sortId)">
        <span t-esc="category.title"/>
    </span>
</t>

`);
registerTemplate("web.EmojiPicker.tabNext", `/web/static/src/core/emoji_picker/emoji_picker.xml`, `<t t-name="web.EmojiPicker.tabNext" xml:space="preserve">
    <span class="o-Emoji text-center fs-5 rounded-3 cursor-pointer d-flex align-items-center align-self-stretch" title="To previous categories" t-on-click="onClickToNextCategories">
        <span class="position-relative">
            <i class="oi oi-chevron-right fa-fw smaller opacity-0"/>
            <i class="oi oi-chevron-right fa-fw smaller position-absolute opacity-75" style="left: 3px; transform: translateY(75%);"/>
            <i class="oi oi-chevron-right fa-fw smaller position-absolute opacity-75" style="left: -3px; transform: translateY(75%);"/>
        </span>
    </span>
</t>

`);
registerTemplate("web.EmojiPicker.tabPrev", `/web/static/src/core/emoji_picker/emoji_picker.xml`, `<t t-name="web.EmojiPicker.tabPrev" xml:space="preserve">
    <span class="o-Emoji text-center fs-5 rounded-3 cursor-pointer d-flex align-items-center align-self-stretch" title="To next categories" t-on-click="onClickToPreviousCategories">
        <span class="position-relative">
            <i class="oi oi-chevron-left fa-fw smaller opacity-0"/>
            <i class="oi oi-chevron-left fa-fw smaller position-absolute opacity-75" style="left: 3px; transform: translateY(75%);"/>
            <i class="oi oi-chevron-left fa-fw smaller position-absolute opacity-75" style="left: -3px; transform: translateY(75%);"/>
        </span>
    </span>
</t>

`);
registerTemplate("web.EmojiPicker.tabEmpty", `/web/static/src/core/emoji_picker/emoji_picker.xml`, `<t t-name="web.EmojiPicker.tabEmpty" xml:space="preserve">
    <span class="o-Emoji text-center fs-5 rounded-3 cursor-pointer d-flex align-items-center align-self-stretch opacity-0">
        <span>🫥</span>
    </span>
</t>

`);
registerTemplate("web.EmojiPicker.section", `/web/static/src/core/emoji_picker/emoji_picker.xml`, `<t t-name="web.EmojiPicker.section" xml:space="preserve">
    <span class="w-100 fs-7 px-2 py-1 position-sticky top-0 bg-100 align-self-stretch" t-att-data-category="category.sortId"><span class="o-EmojiPicker-sectionIcon fs-5 opacity-50" t-esc="category.title"/><span class="ms-2 text-muted text-uppercase fs-7 opacity-50" t-esc="category.displayName"/></span>
    <span class="o-EmojiPicker-category opacity-100 fs-7 py-2" t-att-data-category="category.sortId"/>
</t>

`);
registerTemplate("web.EmojiPicker.emoji", `/web/static/src/core/emoji_picker/emoji_picker.xml`, `<t t-name="web.EmojiPicker.emoji" xml:space="preserve">
    <span class="o-Emoji cursor-pointer d-flex justify-content-center rounded-3 align-items-center align-self-stretch" t-att-class="{ 'o-active': state.activeEmojiIndex === itemIndex, 'fs-2': !ui.isSmall, 'fs-1': ui.isSmall }" t-att-title="emoji.name" t-att-data-codepoints="emoji.codepoints" t-att-data-index="itemIndex" t-att-data-category="inRecent ? recentCategory.sortId : categories.find(c =&gt; c.name === emoji.category).sortId" t-on-click="selectEmoji">
        <span t-esc="emoji.codepoints"/>
    </span>
</t>

`);
registerTemplate("web.EmojiPicker.searchInput", `/web/static/src/core/emoji_picker/emoji_picker.xml`, `<t t-name="web.EmojiPicker.searchInput" xml:space="preserve">
    <input class="form-control border-0 flex-grow-1 rounded-3 rounded-end-0 o-active lh-1" placeholder="Search emoji" t-model="localState.searchTerm" t-ref="autofocus" t-att-model="localState.searchTerm" t-on-input="() =&gt; this.state.activeEmojiIndex = 0" t-att-tabindex="isMobileOS ? -1 : 0"/>
</t>

`);
registerTemplate("web.WarningDialog", `/web/static/src/core/errors/error_dialogs.xml`, `<t t-name="web.WarningDialog" xml:space="preserve">
        <Dialog title="title" size="'xl'" contentClass="'o_error_dialog'">
            <div role="alert">
                <p t-esc="message" class="text-prewrap"/>
            </div>
            <t t-set-slot="footer">
                <button class="btn btn-primary o-default-button" t-on-click="props.close">Close</button>
            </t>
        </Dialog>
    </t>

    `);
registerTemplate("web.RedirectWarningDialog", `/web/static/src/core/errors/error_dialogs.xml`, `<t t-name="web.RedirectWarningDialog" xml:space="preserve">
        <Dialog title="title" size="'xl'" contentClass="'o_error_dialog'">
            <div role="alert">
                <p t-esc="message" class="text-prewrap"/>
            </div>
            <t t-set-slot="footer">
                <button class="btn btn-primary" t-on-click="onClick" t-esc="buttonText"/>
                <button class="btn btn-secondary" t-on-click="props.close">Close</button>
            </t>
        </Dialog>
    </t>

    `);
registerTemplate("web.Error504Dialog", `/web/static/src/core/errors/error_dialogs.xml`, `<t t-name="web.Error504Dialog" xml:space="preserve">
        <Dialog title.translate="Request timeout" size="'xl'" contentClass="'o_error_dialog'">
            <div role="alert">
                <p class="text-prewrap">
                    The operation was interrupted. This usually means that the current operation is taking too much time.
                </p>
            </div>
            <t t-set-slot="footer">
                <button class="btn btn-primary o-default-button" t-on-click="props.close">Close</button>
            </t>
        </Dialog>
    </t>

    `);
registerTemplate("web.SessionExpiredDialog", `/web/static/src/core/errors/error_dialogs.xml`, `<t t-name="web.SessionExpiredDialog" xml:space="preserve">
        <Dialog title.translate="Odoo Session Expired" size="'xl'" contentClass="'o_error_dialog'">
            <div role="alert">
                <p class="text-prewrap">
                    Your Odoo session expired. The current page is about to be refreshed.
                </p>
            </div>
            <t t-set-slot="footer">
                <button class="btn btn-primary o-default-button" t-on-click="onClick">Close</button>
            </t>
        </Dialog>
    </t>

    `);
registerTemplate("web.ErrorDialog", `/web/static/src/core/errors/error_dialogs.xml`, `<t t-name="web.ErrorDialog" xml:space="preserve">
        <Dialog title.translate="Oops!" size="'xl'" contentClass="'o_error_dialog'">
            <div role="alert">
                <p class="text-prewrap">
                    Something went wrong... If you really are stuck, share the report with your friendly support service
                </p>
                <button class="btn btn-link p-0" t-on-click="() =&gt; { state.showTraceback = !state.showTraceback }" t-esc="state.showTraceback ? this.constructor.hideTracebackButtonText : this.constructor.showTracebackButtonText"/>
                <div t-if="state.showTraceback" class="bg-100 mb-0 clearfix mt-3 position-relative o_error_detail">
                    <button class="btn position-absolute bg-100" t-ref="copyButton" t-on-click="onClickClipboard">
                        <span class="fa fa-clone"/>
                    </button>
                    <div class="ps-3 pt-3">
                        <p class="m-0"><b t-esc="title or this.constructor.title"/></p>
                        <code t-if="props.name" t-esc="props.name"/>
                        <p class="m-0" t-if="props.message" t-esc="props.message"/>
                        <p class="m-0" t-if="contextDetails" t-esc="contextDetails"/>
                        <pre class="m-0 p-0 mt-2" t-esc="traceback or props.traceback"/>
                    </div>
                </div>
            </div>
            <t t-set-slot="footer">
                <button class="btn btn-primary o-default-button" t-on-click="props.close">Close</button>
            </t>
        </Dialog>
    </t>

`);
registerTemplate("web.ExpressionEditor", `/web/static/src/core/expression_editor/expression_editor.xml`, `<t t-name="web.ExpressionEditor" xml:space="preserve">
        <div class="o_expression_editor w-100" aria-atomic="true">
            <t t-if="tree">
                <TreeEditor resModel="props.resModel" tree="tree" isDebugMode="isDebugMode" update.bind="update" getDefaultCondition.bind="getDefaultCondition" getDefaultOperator.bind="getDefaultOperator" getOperatorEditorInfo.bind="getOperatorEditorInfo" getPathEditorInfo.bind="getPathEditorInfo"/>
            </t>
            <t t-else="">
                This expression is not supported.
                <button t-on-click="() =&gt; this.resetExpression()">Reset expression</button>
            </t>
            <t t-if="isDebugMode">
                <div class="o_expression_editor_debug_container d-block mt-3 border rounded p-3 bg-100 text-muted font-monospace">
                    <span class="small"># Code editor</span>
                    <textarea class="pt-2 border-0 bg-transparent text-body" type="text" spellcheck="false" t-att-value="props.expression" t-on-change="(ev) =&gt; this.onExpressionChange(ev.target.value)"/>
                </div>
            </t>
        </div>
    </t>

`);
registerTemplate("web.ExpressionEditorDialog", `/web/static/src/core/expression_editor_dialog/expression_editor_dialog.xml`, `<t t-name="web.ExpressionEditorDialog" xml:space="preserve">
        <Dialog title.translate="Edit Condition">
            <ExpressionEditor t-props="expressionEditorProps"/>
            <t t-set-slot="footer">
                <button class="btn btn-primary" t-on-click="onConfirm" t-ref="confirm">Confirm</button>
                <button class="btn btn-secondary" t-on-click="onDiscard">Discard</button>
            </t>
        </Dialog>
    </t>

`);
registerTemplate("web.FileInput", `/web/static/src/core/file_input/file_input.xml`, `<t t-name="web.FileInput" xml:space="preserve">
        <span class="o_file_input" t-att-class="{ 'd-none': props.hidden, 'show opacity-50 pe-none': state.isDisable}" aria-atomic="true">
            <span t-if="!props.hidden" class="o_file_input_trigger" t-on-click.prevent="onTriggerClicked">
                <t t-slot="default">
                    <button class="btn btn-primary">Choose File</button>
                </t>
            </span>
            <input type="file" name="ufile" class="o_input_file d-none" t-att-multiple="props.multiUpload" t-att-accept="props.acceptedFileExtensions" t-ref="file-input" t-att-disabled="state.isDisable" t-on-change="onFileInputChange"/>
        </span>
    </t>

`);
registerTemplate("web.FileUploadProgressBar", `/web/static/src/core/file_upload/file_upload_progress_bar.xml`, `<t t-name="web.FileUploadProgressBar" xml:space="preserve">
        <div class="position-absolute top-0 start-0 h-100 w-100">
            <div class="o-file-upload-progress-bar-value h-100" t-ref="bar" t-att-style="'width: ' + (this.props.fileUpload.progress * 100) + '%;'"/>
            <span class="position-absolute top-0 end-0 cursor-pointer o-file-upload-progress-bar-abort fa fa-times-circle" title="Cancel Upload" aria-label="Cancel Upload" t-on-click.stop.prevent="onCancel"/>
        </div>
    </t>
`);
registerTemplate("web.FileUploadProgressContainer", `/web/static/src/core/file_upload/file_upload_progress_container.xml`, `<t t-name="web.FileUploadProgressContainer" xml:space="preserve">
        <t t-foreach="Object.values(props.fileUploads)" t-as="fileUpload" t-key="fileUpload.id">
            <t t-if="!props.shouldDisplay || props.shouldDisplay(fileUpload)" t-component="props.Component" fileUpload="fileUpload" selector="props.selector"/>
        </t>
    </t>
`);
registerTemplate("web.FileUploadProgressKanbanRecord", `/web/static/src/core/file_upload/file_upload_progress_record.xml`, `<t t-name="web.FileUploadProgressKanbanRecord" xml:space="preserve">
        <t t-set="progressTexts" t-value="getProgressTexts()"/>
        <div class="o_kanban_record d-flex flex-grow-1 flex-md-shrink-1 flex-shrink-0">
            <div class="o_kanban_progress_card o_kanban_attachment position-relative p-0 cursor-pointer">
                <div class="o_kanban_image">
                    <div class="o_kanban_image_wrapper">
                        <div class="o_image o_image_thumbnail" t-att-data-mimetype="props.fileUpload.type"/>
                    </div>
                </div>
                <div class="o_kanban_details">
                    <div class="o_kanban_details_wrapper">
                        <div t-att-title="props.fileUpload.title" t-att-aria-label="props.fileUpload.title" class="o_kanban_record_title">
                            <span t-esc="props.fileUpload.title"/>
                        </div>
                        <div class="o_kanban_record_body"/>
                        <div class="o_kanban_record_bottom">
                            <div class="oe_kanban_bottom_left">
                                <div class="o_file_upload_progress_text_left" t-esc="progressTexts.left"/>
                            </div>
                            <div class="oe_kanban_bottom_right">
                                <span class="o_file_upload_progress_text_right" t-esc="progressTexts.right"/>
                            </div>
                        </div>
                    </div>
                </div>
                <FileUploadProgressBar fileUpload="props.fileUpload"/>
            </div>
        </div>
    </t>

    `);
registerTemplate("web.FileUploadProgressDataRow", `/web/static/src/core/file_upload/file_upload_progress_record.xml`, `<t t-name="web.FileUploadProgressDataRow" xml:space="preserve">
        <t t-set="progressTexts" t-value="getProgressTexts()"/>
        <div class="o_data_row o_list_progress_card position-relative align-middle p-0">
            <span class="o_file_upload_upload_title" t-esc="props.fileUpload.title"/>
            <span class="o_file_upload_progress_text_left" t-esc="progressTexts.left"/>
            <span class="o_file_upload_progress_text_right" t-esc="progressTexts.right"/>
            <FileUploadProgressBar fileUpload="props.fileUpload"/>
        </div>
    </t>

`);
registerTemplate("web.FileViewer", `/web/static/src/core/file_viewer/file_viewer.xml`, `<t t-name="web.FileViewer" xml:space="preserve">
        <div class="d-flex justify-content-center" t-att-class="{ 'modal fixed-top bottom-0': props.modal }">
            <div class="o-FileViewer flex-column align-items-center d-flex w-100 h-100" tabindex="0" t-ref="autofocus" t-on-keydown.stop="(ev) =&gt; this.onKeydown(ev)">
                <div class="o-FileViewer-header position-absolute top-0 d-flex w-100" t-on-click.stop="">
                    <div t-if="isViewable" class="d-flex align-items-center ms-4 me-2">
                        <i t-if="state.file.isImage" class="fa fa-picture-o" role="img" title="Image"/>
                        <i t-if="state.file.isPdf" class="fa fa-file-text" role="img" title="PDF file"/>
                        <i t-if="state.file.isText" class="fa fa-file-text" role="img" title="Text file"/>
                        <i t-if="state.file.isVideo" class="fa fa-video-camera" role="img" title="Video"/>
                    </div>
                    <div class="d-flex align-items-center ms-4 overflow-auto">
                        <span class="text-truncate" t-out="state.file.displayName"/>
                    </div>
                    <div class="flex-grow-1"/>
                    <div class="o-FileViewer-download o-FileViewer-headerButton d-flex align-items-center px-3 cursor-pointer" role="button" title="Download" t-on-click.stop="">
                        <a t-att-href="state.file.downloadUrl" class="text-reset d-flex align-items-baseline" download="">
                            <i class="fa fa-download fa-fw me-1" role="img"/>
                            <span>Download</span>
                        </a>
                    </div>

                    <div t-on-click.stop="close" class="o-FileViewer-headerButton d-flex align-items-center mb-0 px-3 h4 text-reset cursor-pointer" role="button" title="Close (Esc)" aria-label="Close">
                        <i class="fa fa-fw fa-times" role="img"/>
                    </div>
                </div>
                <div t-on-click.stop="close" t-on-mousemove="onMousemoveView" class="o-FileViewer-main position-absolute top-0 bottom-0 start-0 end-0 align-items-center justify-content-center d-flex" t-att-class="{ 'o_with_img overflow-hidden': state.file.isImage }">
                    <div t-if="state.file.isImage" class="o-FileViewer-zoomer position-absolute align-items-center justify-content-center d-flex w-100 h-100" t-ref="zoomer">
                        <div t-if="!state.imageLoaded" class="position-absolute">
                            <i class="fa fa-3x fa-circle-o-notch fa-fw fa-spin text-white" role="img" title="Loading"/>
                        </div>
                        <img t-on-click.stop="" t-on-load="onImageLoaded" t-on-wheel="onWheelImage" t-on-mousedown.stop="onMousedownImage" t-on-mouseup.stop="onMouseupImage" class="o-FileViewer-view o-FileViewer-viewImage mw-100 mh-100 transition-base" t-att-src="state.file.defaultSource" t-att-style="imageStyle" draggable="false" alt="Viewer" t-ref="image"/>
                    </div>
                    <iframe t-if="state.file.isPdf" class="o-FileViewer-view w-75 h-100 border-0" t-ref="iframeViewerPdf" t-att-class="{ 'w-100': ui.isSmall }" t-att-src="state.file.defaultSource"/>
                    <iframe t-if="state.file.isText" class="o-FileViewer-view o-isText o_text w-75 h-100 border-0" t-att-src="state.file.defaultSource"/>
                    <iframe t-if="state.file.isUrlYoutube" allow="autoplay; encrypted-media" class="o-FileViewer-view w-75 h-100 border-0" t-att-src="state.file.defaultSource" height="315" width="560"/>
                    <video t-if="state.file.isVideo" class="o-FileViewer-view w-75 h-75" t-att-class="{ 'w-100 h-100': ui.isSmall }" t-on-click.stop="" controls="controls">
                        <source t-att-data-type="state.file.mimetype" t-att-src="state.file.defaultSource"/>
                    </video>
                </div>
                <div t-if="state.file.isImage" class="position-absolute bottom-0 d-flex" role="toolbar">
                    <div class="o-FileViewer-toolbarButton p-3 rounded-0" t-on-click.stop="zoomIn" title="Zoom In (+)" role="button">
                        <i class="fa fa-fw fa-plus" role="img"/>
                    </div>
                    <div class="o-FileViewer-toolbarButton p-3 rounded-0" t-att-class="{ 'o_disabled opacity-50': state.scale === 1 }" t-on-click.stop="resetZoom" role="button" title="Reset Zoom (0)">
                        <i class="fa fa-fw fa-search" role="img"/>
                    </div>
                    <div class="o-FileViewer-toolbarButton p-3 rounded-0" t-att-class="{ 'o_disabled opacity-50': state.scale === minScale }" t-on-click.stop="zoomOut" title="Zoom Out (-)" role="button">
                        <i class="fa fa-fw fa-minus" role="img"/>
                    </div>
                    <div class="o-FileViewer-toolbarButton p-3 rounded-0" t-on-click.stop="rotate" title="Rotate (r)" role="button">
                        <i class="fa fa-fw fa-repeat" role="img"/>
                    </div>
                    <div class="o-FileViewer-toolbarButton p-3 rounded-0" t-on-click.stop="onClickPrint" title="Print" role="button">
                        <i class="fa fa-fw fa-print" role="img"/>
                    </div>
                    <div class="o-FileViewer-download o-FileViewer-toolbarButton p-3 rounded-0 cursor-pointer" title="Download" role="button" t-on-click.stop="">
                        <a t-att-href="state.file.downloadUrl" class="text-reset" download="">
                            <i class="fa fa-download fa-fw" role="img"/>
                        </a>
                    </div>
                </div>
                <t t-if="props.files.length &gt; 1">
                    <div class="o-FileViewer-navigation position-absolute top-0 bottom-0 start-0 align-items-center justify-content-center d-flex my-auto ms-3 rounded-circle bg-dark text-white" t-on-click.stop="previous" title="Previous (Left-Arrow)" aria-label="Previous" role="button">
                        <span class="oi oi-chevron-left" role="img"/>
                    </div>
                    <div class="o-FileViewer-navigation position-absolute top-0 bottom-0 end-0 align-items-center justify-content-center d-flex my-auto me-3 rounded-circle bg-dark text-white" t-on-click.stop="next" title="Next (Right-Arrow)" aria-label="Next" role="button">
                        <span class="oi oi-chevron-right" role="img"/>
                    </div>
                </t>
            </div>
        </div>
    </t>

`);
registerTemplate("web.InstallScopedApp", `/web/static/src/core/install_scoped_app/install_scoped_app.xml`, `<t t-name="web.InstallScopedApp" xml:space="preserve">
        <div class="o_install_scoped_app o_home_menu_background h-100 w-100 d-flex align-items-center justify-content-center user-select-none">
            <button class="btn btn-link m-1 position-absolute start-0 top-0" t-on-click="() =&gt; window.close()">
                <svg xmlns="http://www.w3.org/2000/svg" style="transform:rotate(135deg);" width="28" height="28" viewBox="-7 -7 24 24" preserveAspectRatio="xMinYMin">
                    <path fill="#000" d="M8 8V1a1 1 0 1 1 2 0v8a1 1 0 0 1-1 1H1a1 1 0 1 1 0-2h7z"/>
                </svg>
            </button>
            <i t-if="!state.showInstallUI" class="fa fa-spinner fa-spin fa-2x text-primary position-absolute"/>
            <div t-attf-class="h-100 w-100 d-flex align-items-center justify-content-center flex-column fade {{state.showInstallUI ? 'show': ''}}">
                <div class="d-flex align-items-center justify-content-center flex-wrap gap-3 m-4 mw-75 mw-md-50">
                    <img style="height:100px;width:100px;" class="rounded-4 p-4 bg-white shadow" t-att-src="state.manifest.icons?.[0]?.src"/>
                    <div class="d-inline-block">
                        <div class="d-flex align-items-center">
                            <h1 class="mb-0" t-esc="state.manifest.name"/>
                            <Dropdown t-if="pwa.isAvailable" menuClass="'p-2'">
                                <button class="btn btn-link fa fa-pencil"/>
                                <t t-set-slot="content">
                                    <label class="mb-1">Application name</label>
                                    <input class="form-control" t-att-value="state.manifest.name" t-on-change="onChangeName"/>
                                </t>
                            </Dropdown>
                        </div>
                        <a class="text-primary text-decoration-none" href="https://odoo.com" alt="Odoo" target="_blank">Odoo S.A.</a>
                    </div>
                </div>
                <button t-if="pwa.isAvailable" class="btn btn-primary btn-lg rounded-5 shadow py-2 px-3" t-on-click="onInstall">Install</button>
                <div t-else="" class="p-2 px-4 overflow-hidden rounded-2 mw-75 bg-info text-white">
                    <t t-if="pwa.isSupportedOnBrowser">
                        <span t-if="pwa.hasScopeBeenInstalled()">The app seems to be installed on your device</span>
                        <span t-else="">You can install the app from the browser menu</span>
                    </t>
                    <span t-else="">The app cannot be installed with this browser</span>
                </div>
            </div>
        </div>
    </t>
`);
registerTemplate("web._ModelFieldSelector", `/web/static/src/core/model_field_selector/model_field_selector.xml`, `<t t-name="web._ModelFieldSelector" xml:space="preserve">
        <div class="o_model_field_selector d-flex" aria-atomic="true" t-att-class="props.readonly ? 'o_read_mode' : 'o_edit_mode o_input'" t-on-click="(ev) =&gt; this.openPopover(ev.currentTarget)">
            <div class="o_model_field_selector_value flex-grow-1 h-100" tabindex="0" t-att-data-tooltip="state.displayNames.join(' &gt; ')" data-tooltip-position="top">
                <t t-foreach="state.displayNames" t-as="displayName" t-key="displayName_index">
                    <t t-if="!displayName_first">
                        <i class="oi oi-chevron-right m-1" role="img" aria-label="Followed by" title="Followed by"/>
                    </t>
                    <span t-attf-class="o_model_field_selector_chain_part mb-1 #{props.readonly ? 'border-0 fw-bolder' : 'px-1'} text-nowrap">
                        <t t-esc="displayName"/>
                    </span>
                </t>
            </div>
            <div t-if="!props.readonly and state.isInvalid" class="o_model_field_selector_controls ms-2" tabindex="0">
                <i class="fa fa-exclamation-triangle text-warning o_model_field_selector_warning" role="alert" aria-label="Invalid field chain" title="Invalid field chain"/>
            </div>
            <div t-if="!props.readonly and props.allowEmpty and state.displayNames.length" class="o_model_field_selector_controls ms-2" tabindex="0">
                <i class="fa fa-times" t-on-click.stop="clear" aria-label="Clear" title="Clear"/>
            </div>
        </div>
    </t>

`);
registerTemplate("web.ModelFieldSelectorPopover", `/web/static/src/core/model_field_selector/model_field_selector_popover.xml`, `<t t-name="web.ModelFieldSelectorPopover" xml:space="preserve">
        <div class="o_model_field_selector_popover" tabindex="-1" t-ref="root" t-on-keydown="onInputKeydown">
            <div class="border-bottom p-2 text-dark fw-bolder">
                <div class="d-flex justify-content-between align-items-center">
                    <t t-if="state.page.previousPage">
                        <i class="o_model_field_selector_popover_prev_page btn btn-link oi oi-arrow-left ms-n2 text-dark" title="Previous" role="img" aria-label="Previous" t-on-click="() =&gt; this.goToPreviousPage()"/>
                    </t>
                    <div class="o_model_field_selector_popover_title px-2 text-truncate">
                        <t t-esc="state.page.title"/>
                    </div>
                    <i class="o_model_field_selector_popover_close btn btn-link me-n2 fa fa-times text-dark" title="Close" role="img" aria-label="Close" t-on-click="() =&gt; props.close()"/>
                </div>
                <t t-if="props.showSearchInput">
                    <div class="o_model_field_selector_popover_search mt-1">
                        <input type="text" placeholder="Search..." class="o_input p-1 border rounded-1 bg-view" t-att-value="state.page.query" t-on-input="(ev) =&gt; this.debouncedSearchFields(ev.target.value)"/>
                    </div>
                </t>
            </div>
            <div class="o_model_field_selector_popover_body">
                <ul class="o_model_field_selector_popover_page list-unstyled mb-0 overflow-auto">
                    <t t-foreach="state.page.fieldNames" t-as="fieldName" t-key="fieldName">
                        <t t-set="fieldDef" t-value="state.page.fieldDefs[fieldName]"/>
                        <li class="o_model_field_selector_popover_item d-flex border-bottom" t-att-class="{ 'active': fieldName === state.page.focusedFieldName }" t-att-data-name="fieldName">
                            <button t-attf-class="o_model_field_selector_popover_item_name btn btn-light flex-fill border-0 rounded-0 text-start fw-normal" t-on-click="() =&gt; this.selectField(fieldDef)">
                                <t t-esc="fieldDef.string"/>
                                <t t-if="fieldDef.record_name"> (<t t-esc="fieldDef.record_name"/>)</t>
                                <div t-if="props.isDebugMode" class="o_model_field_selector_popover_item_title text-muted small"><t t-esc="fieldName"/> (<t t-esc="fieldDef.type"/>)</div>
                            </button>
                            <t t-if="(!fieldDef.is_property and fieldDef.relation and props.followRelations) or fieldDef.type === 'properties'">
                                <button class="o_model_field_selector_popover_item_relation btn btn-light border-0 border-start rounded-0" t-on-click.stop="() =&gt; this.followRelation(fieldDef)">
                                    <i class="oi oi-chevron-right o_model_field_selector_popover_relation_icon" role="img" aria-label="Relation to follow" title="Relation to follow"/>
                                </button>
                            </t>
                        </li>
                    </t>
                </ul>
            </div>
            <t t-if="showDebugInput">
                <div class="o_model_field_selector_popover_footer border-top py-1 px-2">
                    <input type="text" class="o_model_field_selector_debug o_input" t-att-value="state.page.path" t-on-change="(ev) =&gt; this.loadNewPath(ev.target.value)" t-on-keydown="onDebugInputKeydown" t-on-input="(ev) =&gt; this.props.update(ev.target.value, null, true)"/>
                </div>
            </t>
        </div>
    </t>

`);
registerTemplate("web.ModelSelector", `/web/static/src/core/model_selector/model_selector.xml`, `<t t-name="web.ModelSelector" xml:space="preserve">
        <div class="o_model_selector" t-ref="autocomplete_container">
            <input t-if="env.isSmall" type="text" class="o_input" readonly="" t-att-id="props.id" t-att-value="props.value"/>
            <AutoComplete t-else="" id="props.id" value="props.value || ''" sources="sources" placeholder.translate="Type a model here..." autoSelect="props.autoSelect" onSelect.bind="onSelect"/>
            <span class="o_dropdown_button"/>
        </div>
    </t>
`);
registerTemplate("web.Notebook", `/web/static/src/core/notebook/notebook.xml`, `<t t-name="web.Notebook" xml:space="preserve">
        <div t-attf-class="o_notebook d-flex w-100 {{ props.orientation === 'horizontal' ? 'horizontal flex-column' : 'vertical flex-row' }} {{ props.className }}" t-if="state.currentPage">
            <div class="o_notebook_headers" t-att-class="{ 'm-0': props.orientation === 'vertical' }">
                <ul t-attf-class="nav nav-tabs {{ props.orientation === 'horizontal' ? 'flex-row flex-nowrap' : 'flex-column p-0' }}">
                    <li t-foreach="navItems" t-as="navItem" t-key="navItem[0]" class="nav-item flex-nowrap cursor-pointer" t-if="navItem[1].isVisible" t-attf-class="{{ navItem[1].isDisabled ? 'disabled' : '' }}">
                        <a class="nav-link" t-attf-class="{{ navItem[0] === state.currentPage ? 'active' : '' }} {{ props.orientation === 'vertical' ? 'p-3 rounded-0' : '' }} {{ navItem[1].className || '' }}" t-att-name="navItem[1].name" t-on-click.prevent="() =&gt; this.activatePage(navItem[0])" href="#" role="tab" tabindex="0">
                            <i t-if="props.icons and props.icons[navItem[0]]" t-attf-class="fa {{ props.icons[navItem[0]] }} me-2"/>
                            <t t-esc="navItem[1].title"/>
                        </a>
                    </li>
                </ul>
            </div>
            <div class="o_notebook_content tab-content">
                <div class="tab-pane active fade" t-ref="activePane">
                    <t t-if="page" t-component="page.Component" t-key="state.currentPage" t-props="page.props"/>
                    <t t-else="" t-slot="{{ state.currentPage }}"/>
                </div>
            </div>
        </div>
    </t>

`);
registerTemplate("web.NotificationWowl", `/web/static/src/core/notifications/notification.xml`, `<t t-name="web.NotificationWowl" xml:space="preserve">
        <div t-on-mouseenter="this.props.freeze" t-on-mouseleave="this.props.refresh" t-attf-class="o_notification {{props.className}} d-flex mb-2 position-relative rounded shadow-lg" role="alert" aria-live="assertive" aria-atomic="true">
            <span t-attf-class="o_notification_bar bg-{{props.type}} rounded-start"/>
            <div class="w-100 py-3 ps-3 pe-5 border border-start-0 rounded-end text-break">
                <h5 t-if="props.title" class="o_notification_title m-0" t-out="props.title"/>
                <button type="button" class="o_notification_close btn-close position-absolute top-0 end-0 mt-3 me-3" aria-label="Close" t-on-click="props.close"/>
                <div class="o_notification_body" t-att-class="{'mt-2' : props.title}">
                    <div t-if="props.message" class="me-auto o_notification_content" t-out="props.message"/>
                    <div t-if="props.buttons.length" class="o_notification_buttons d-flex gap-2 mt-3">
                        <button t-foreach="props.buttons" t-as="button" type="button" t-key="button_index" t-attf-class="btn {{button.primary ? 'btn-primary' : 'btn-secondary'}}" t-on-click="button.onClick">
                            <t t-if="button.icon">
                                <i t-if="button.icon.indexOf('fa-') === 0" role="img" t-att-aria-label="button.name" t-att-title="button.name" t-attf-class="fa fa-fw {{button.icon}} me-1"/>
                                <img t-else="" t-att-src="button.icon" t-att-alt="button.name"/>
                            </t>
                            <span t-esc="button.name"/>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </t>

`);
registerTemplate("web.OverlayContainer", `/web/static/src/core/overlay/overlay_container.xml`, `<t t-name="web.OverlayContainer" xml:space="preserve">
        <div class="o-overlay-container" t-ref="root">
            <t t-foreach="sortedOverlays" t-as="overlay" t-key="overlay.id">
                <ErrorHandler t-if="isVisible(overlay)" onError="(error) =&gt; this.handleError(overlay, error)">
                    <OverlayItem env="overlay.env" component="overlay.component" props="overlay.props"/>
                </ErrorHandler>
            </t>
        </div>
    </t>

    `);
registerTemplate("web.OverlayContainer.Item", `/web/static/src/core/overlay/overlay_container.xml`, `<t t-name="web.OverlayContainer.Item" xml:space="preserve">
        <div t-ref="rootRef" class="o-overlay-item">
            <t t-component="props.component" t-props="props.props"/>
        </div>
    </t>

`);
registerTemplate("web.Pager", `/web/static/src/core/pager/pager.xml`, `<t t-name="web.Pager" xml:space="preserve">
        <nav class="o_pager d-flex gap-2 h-100" aria-label="Pager">
            <span t-if="!env.isSmall" class="o_pager_counter align-self-center" t-on-click.stop="">
                <t t-if="state.isEditing">
                    <input type="text" class="o_pager_value o_input d-inline-block w-auto text-end mb-n1" size="7" t-ref="autofocus" t-att-value="value" t-on-blur="onInputBlur" t-on-change="onInputChange" t-on-keydown.stop="onInputKeydown"/>
                </t>
                <t t-else="">
                    <span class="o_pager_value d-inline-block border-bottom border-transparent mb-n1" t-esc="value" t-on-click="onValueClick"/>
                </t>
                <span> / </span>
                <t t-if="props.updateTotal">
                    <span class="o_pager_limit o_pager_limit_fetch" t-att-class="{ 'disabled': state.isDisabled }" t-on-click.stop="updateTotal"><t t-esc="props.total"/>+</span>
                </t>
                <t t-else="">
                    <span class="o_pager_limit" t-esc="props.total"/>
                </t>
            </span>
            <span class="btn-group d-print-none" aria-atomic="true">

                <button type="button" class="btn btn-secondary o_pager_previous px-2 rounded-start" aria-label="Previous" data-tooltip="Previous" tabindex="-1" t-att-data-hotkey="props.withAccessKey ? 'p' : false" t-att-disabled="state.isDisabled or isSinglePage" t-on-click.stop="() =&gt; this.navigate(-1)">
                    <i class="oi oi-chevron-left"/>
                </button>
                <button type="button" class="btn btn-secondary o_pager_next px-2 rounded-end" aria-label="Next" data-tooltip="Next" tabindex="-1" t-att-data-hotkey="props.withAccessKey ? 'n' : false" t-att-disabled="state.isDisabled or isSinglePage" t-on-click.stop="() =&gt; this.navigate(1)">
                    <i class="oi oi-chevron-right"/>
                </button>
            </span>
        </nav>
    </t>

`);
registerTemplate("web.PagerIndicator", `/web/static/src/core/pager/pager_indicator.xml`, `<t t-name="web.PagerIndicator" xml:space="preserve">
        <Transition visible="state.show" name="'o-fade'" t-slot-scope="transition" leaveDuration="400">
            <div class="o_pager_indicator position-fixed top-0 end-0 m-1 d-flex" t-att-class="transition.className">
                <span class="o_pager_indicator_inner m-1 px-1 text-center shadow">
                    <span class="o_pager_value" t-esc="state.value"/>
                    <span> / </span>
                    <span class="o_pager_limit" t-esc="state.total"/>
                </span>
            </div>
        </Transition>
    </t>

`);
registerTemplate("web.Popover", `/web/static/src/core/popover/popover.xml`, `<t t-name="web.Popover" xml:space="preserve">
        <div t-ref="ref" t-att-class="defaultClassObj" t-att-role="props.role" t-on-pointerenter="() =&gt; props.holdOnHover and position.lock()" t-on-pointerleave="() =&gt; props.holdOnHover and position.unlock()">
            <t t-component="props.component" t-props="props.componentProps" close="props.close"/>
            <div t-if="props.arrow" class="popover-arrow"/>
        </div>
    </t>

`);
registerTemplate("web.InstallPrompt", `/web/static/src/core/pwa/install_prompt.xml`, `<t t-name="web.InstallPrompt" xml:space="preserve">
        <Dialog contentClass="'o_install_prompt position-fixed px-2 py-3 m-2 user-select-none'" size="'md'" footer="false">
            <t t-set-slot="header">
                <div class="d-flex w-100">
                    <h4>How to get the application</h4>
                    <div t-on-click="onClose" type="button" class="btn-close" aria-label="Close"/>
                </div>
            </t>
            <p>Install the app on your device to access it easily. Here are the steps to follow:</p>
            <t t-call="web.InstallStepsSafari"/>
        </Dialog>
    </t>
    `);
registerTemplate("web.InstallStepsSafari", `/web/static/src/core/pwa/install_prompt.xml`, `<t t-name="web.InstallStepsSafari" xml:space="preserve">
        <t t-if="isMobileSafari">
            <ul class="mb-0">
                <li>
                    Tap on the share icon
                </li>
                <li>
                    Select "Add to home screen"
                </li>
            </ul>
        </t>
        <t t-else="">
            <ul class="mb-0">
                <li>
                    Open "File" menu from your browser
                </li>
                <li>
                    Select "Add to dock"
                </li>
            </ul>
        </t>
    </t>
`);
registerTemplate("web.MultiRecordSelector", `/web/static/src/core/record_selectors/multi_record_selector.xml`, `<t t-name="web.MultiRecordSelector" xml:space="preserve">
        <div class="o_input d-flex flex-wrap gap-1 o_multi_record_selector" t-ref="multiRecordSelector">
            <TagsList tags="tags"/>
            <RecordAutocomplete resModel="props.resModel" value="''" domain="props.domain" context="props.context" className="'o_record_autocomplete_with_caret flex-grow-1'" fieldString="props.fieldString" placeholder="placeholder" multiSelect="true" getIds.bind="getIds" update.bind="update"/>
        </div>
    </t>

`);
registerTemplate("web.RecordAutocomplete", `/web/static/src/core/record_selectors/record_autocomplete.xml`, `<t t-name="web.RecordAutocomplete" xml:space="preserve">
        <AutoComplete placeholder="props.placeholder" value="props.value" autoSelect="true" resetOnSelect="props.multiSelect" class="props.className" sources="sources" onSelect.bind="onSelect" onChange.bind="onChange"/>
    </t>

`);
registerTemplate("web.RecordSelector", `/web/static/src/core/record_selectors/record_selector.xml`, `<t t-name="web.RecordSelector" xml:space="preserve">
        <div class="o_input d-flex flex-wrap gap-1 o_record_selector">
            <RecordAutocomplete resModel="props.resModel" value="displayName" domain="props.domain" context="props.context" className="'h-100 flex-grow-1'" fieldString="props.fieldString" placeholder="props.placeholder" multiSelect="false" getIds="() =&gt; []" update.bind="update"/>
            <span class="o_dropdown_button"/>
        </div>
    </t>

`);
registerTemplate("web_studio.ResizablePanel", `/web/static/src/core/resizable_panel/resizable_panel.xml`, `<t t-name="web_studio.ResizablePanel" xml:space="preserve">
        <div class="o_resizable_panel d-flex flex-column" t-att-class="class" t-ref="containerRef">
            <t t-slot="default"/>
            <div class="o_resizable_panel_handle position-absolute top-0 bottom-0 end-0" t-att-class="props.handleSide === 'start' ? 'start-0' : 'end-0'" t-ref="handleRef"/>
        </div>
    </t>

`);
registerTemplate("web.SelectMenu", `/web/static/src/core/select_menu/select_menu.xml`, `<t t-name="web.SelectMenu" xml:space="preserve">
        <div t-att-class="\`o_select_menu border w-auto rounded-2 overflow-hidden \${props.class || ''}\`">
            <Dropdown menuClass="this.menuClass" menuRef="this.menuRef" position="'bottom-fit'" beforeOpen.bind="onBeforeOpen" onStateChanged.bind="onStateChanged" navigationOptions="{ virtualFocus: this.props.searchable }">
                <button type="button" t-att-class="\`o_select_menu_toggler btn btn-light w-100 bg-light \${props.togglerClass || ''} \${canDeselect ? 'o_can_deselect' : ''}\`" t-att-disabled="props.disabled">
                    <t t-if="props.multiSelect">
                        <div class="text-wrap text-start">
                            <t t-if="props.placeholder and !props.value.length">
                                <span class="text-muted fst-italic" t-out="props.placeholder"/>
                            </t>
                            <t else="">
                                <TagsList tags="multiSelectChoices"/>
                            </t>
                        </div>
                    </t>
                    <t t-else="">
                        <span class="o_select_menu_toggler_slot text-start text-truncate">
                            <span t-if="props.placeholder and !props.value" class="text-muted fst-italic" t-out="props.placeholder"/>
                            <t t-if="!props.slots or !props.slots.default" t-esc="displayValue"/>
                            <t t-else="" t-slot="default"/>
                        </span>
                        <span t-if="canDeselect" t-on-click.stop="() =&gt; this.props.onSelect(null)" class="o_select_menu_toggler_clear p-0 m-0">
                            <i class="fa fa-times"/>
                        </span>
                    </t>
                    <span class="o_select_menu_toggler_caret p-0 m-0">
                        <i class="fa fa-caret-down"/>
                    </span>
                </button>

                <t t-set-slot="content">
                    <input t-if="props.searchable" type="text" class="dropdown-item o_select_menu_sticky px-3 py-3 position-sticky top-0 start-0 border-bottom" t-ref="inputRef" t-on-input="debouncedOnInput" t-att-placeholder="props.searchPlaceholder" autocomplete="selectMenuAutocompleteOff" autocorrect="off" spellcheck="false"/>
                    <t t-if="state.choices.length === 0">
                        <span class="text-muted fst-italic mx-3">No result found</span>
                    </t>
                    <t t-foreach="state.displayedOptions" t-as="choice" t-key="choice_index">
                        <t t-call="{{ this.constructor.choiceItemTemplate }}">
                            <t t-set="choice" t-value="choice"/>
                        </t>
                    </t>
                    <t t-if="props.slots and props.slots.bottomArea" t-slot="bottomArea" data="state"/>
                </t>
            </Dropdown>
        </div>
    </t>

    `);
registerTemplate("web.SelectMenu.ChoiceItem", `/web/static/src/core/select_menu/select_menu.xml`, `<t t-name="web.SelectMenu.ChoiceItem" xml:space="preserve">
        <div t-if="choice.isGroup" class="o_select_menu_group position-sticky bg-light pt-2 px-1 fst-italic fw-bolder user-select-none" t-att-class="{'o_select_menu_searchable_group': props.searchable }">
            <span t-esc="choice.label"/>
            <hr class="mt-2 mb-1"/>
        </div>
        <DropdownItem t-if="!choice.isGroup" onSelected="() =&gt; this.onItemSelected(choice.value)" class="getItemClass(choice) + ' d-flex align-items-center'">
            <t t-if="props.slots and props.slots.choice" t-slot="choice" data="choice"/>
            <t t-else="">
                <div class="o_select_menu_item_label text-wrap" t-esc="choice.label || choice.value"/>
            </t>
        </DropdownItem>
    </t>

`);
registerTemplate("web.sign_svg_text", `/web/static/src/core/signature/name_and_signature.xml`, `<t t-name="web.sign_svg_text" name="SVG Signature Text" xml:space="preserve">
        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" t-att-width="width" t-att-height="height">
            <defs>
                <style type="text/css">
                    @font-face {
                        font-family: "font";
                        src: url(data:font/ttf;base64,<t t-esc="font"/>) format("woff");
                        font-weight: normal;
                        font-style: normal;
                    }
                </style>
            </defs>

            <text t-esc="text" x="50%" t-att-y="height * 3 / 5" t-att-font-size="height * 3 / 5" t-att-textLength="width * 4 / 5 * (type === 'signature' ? Math.min(1, text.length / 7) : 1)" t-att-lengthAdjust="'spacing' + (type === 'signature' ? 'AndGlyphs' : '')" t-attf-style="font-family:'font'; stroke: none; fill: {{color}};" text-anchor="middle"/>
        </svg>
    </t>


    `);
registerTemplate("web.NameAndSignature", `/web/static/src/core/signature/name_and_signature.xml`, `<t t-name="web.NameAndSignature" xml:space="preserve">
        <div class="o_web_sign_name_and_signature">
            <div t-if="!props.noInputName" class="o_web_sign_name_group">
                <label class="col-form-label" t-att-for="'o_web_sign_name_input_' + htmlId">Full Name</label>
                <input type="text" name="signer" t-att-id="'o_web_sign_name_input_' + htmlId" class="o_web_sign_name_input form-control" t-on-input="onInputSignName" t-att-value="props.signature.name" t-ref="signNameInput" placeholder="Type your name to sign" required=""/>
            </div>


            <div t-if="state.showSignatureArea" class="o_web_sign_signature_group bg-100 card mt-3" style="overflow: hidden;">
                <div class="card-header bg-transparent">
                    <div class="row g-0">
                        <div t-if="!props.noInputName or defaultName" class="col-auto">
                            <a role="button" href="#" t-on-click.prevent="onClickSignAuto" t-attf-class="o_web_sign_auto_button me-2 btn btn-light {{ state.signMode === 'auto' ? 'active': '' }}">
                                Auto
                            </a>
                        </div>
                        <div class="col-auto">
                            <a role="button" href="#" t-on-click.prevent="() =&gt; this.setMode('draw')" t-attf-class="o_web_sign_draw_button me-2 btn btn-light {{ state.signMode === 'draw' ? 'active': '' }}">
                                Draw
                            </a>
                        </div>
                        <div class="col-auto">
                            <a role="button" href="#" t-on-click.prevent="onClickSignLoad" t-attf-class="o_web_sign_load_button me-2 btn btn-light {{ state.signMode === 'load' ? 'active': '' }}">
                                Load
                            </a>
                        </div>

                        <div class="col-auto division ms-auto"/>

                        <div t-if="state.signMode === 'auto'" class="o_web_sign_auto_select_style col-auto">
                            <Dropdown>
                                <button type="button" class="btn btn-link fa fa-font o-dropdown-caret"/>
                                <t t-set-slot="content">
                                    <t t-foreach="fonts" t-as="font" t-key="font_index">
                                        <DropdownItem onSelected="() =&gt; this.onSelectFont(font_index)">
                                            <img class="img-fluid" t-att-src="getSVGTextFont(font)"/>
                                        </DropdownItem>
                                    </t>
                                </t>
                            </Dropdown>
                        </div>

                        <div t-if="state.signMode === 'draw'" t-attf-class="o_web_sign_draw_clear col-auto">
                            <a role="button" href="#" t-on-click.prevent="onClickSignDrawClear" class="btn btn-link fa fa-trash"/>
                        </div>

                        <div t-if="state.signMode === 'load'" class="o_web_sign_load_file col-auto">
                            <button type="button" id="loadFileXml" t-on-click="uploadFile" class="btn btn-link fa fa-upload"/>
                            <input t-ref="signInputLoad" type="file" role="button" name="files[]" class="d-none" t-on-change="onChangeSignLoadInput"/>
                        </div>
                    </div>
                </div>

                <div class="o_web_sign_signature_container position-relative">
                    <div class="o_signature_stroke position-absolute"/>
                    <canvas t-if="state.showSignatureArea" t-ref="signature" class="o_web_sign_signature z-1"/>
                </div>

                <div t-if="loadIsInvalid" t-attf-class="o_web_sign_load_invalid card-footer d-none">
                    <div class="alert alert-danger mb-0" role="alert">
                        This file is invalid. Please select an image.
                    </div>
                </div>
            </div>
        </div>
    </t>
`);
registerTemplate("web.SignatureDialog", `/web/static/src/core/signature/signature_dialog.xml`, `<t t-name="web.SignatureDialog" xml:space="preserve">
      <Dialog title.translate="Adopt Your Signature">
         <div>
            <NameAndSignature t-props="nameAndSignatureProps"/>
            <div class="mt16 small">By clicking Adopt &amp; Sign, I agree that the chosen signature/initials will be a valid electronic representation of my hand-written signature/initials for all purposes when it is used on documents, including legally binding contracts.</div>
        </div>
        <t t-set-slot="footer">
          <button class="btn btn-primary" t-att-disabled="signature.isSignatureEmpty" t-on-click="onClickConfirm">Adopt &amp; Sign</button>
          <button class="btn btn-secondary" t-on-click="props.close">Cancel</button>
        </t>
      </Dialog>
    </t>

`);
registerTemplate("web.TagsList", `/web/static/src/core/tags_list/tags_list.xml`, `<t t-name="web.TagsList" xml:space="preserve">
        <t t-foreach="visibleTags" t-as="tag" t-key="tag.id or tag_index">
            <span class="o_tag position-relative d-inline-flex align-items-center user-select-none mw-100" t-att-class="{                     'o_avatar opacity-trigger-hover' : tag.img,                     'o_badge badge rounded-pill lh-1': !tag.img,                     'cursor-pointer': tag.canEdit,                 }" t-attf-class="{{ !tag.img ? 'o_tag_color_' + (tag.colorIndex ? tag.colorIndex : '0') : '' }}" tabindex="-1" t-att-data-color="tag.colorIndex" t-att-title="tag.text" t-on-click="(ev) =&gt; tag.onClick and tag.onClick(ev)" t-on-keydown="tag.onKeydown">


                <span t-if="tag.img and props.displayText and tag.onDelete" class="o_avatar_backdrop position-absolute top-0 end-0 bottom-0 start-0 ms-n2 mt-n1 mb-n1 bg-view rounded border shadow opacity-0 opacity-100-hover"/>

                <img t-if="tag.img" t-att-src="tag.img" class="o_avatar o_m2m_avatar position-relative rounded" t-att-class="tag.imageClass"/>

                <i t-if="tag.icon" t-attf-class="p-1 fa {{ tag.icon }}" t-att-class="tag.className"/>

                <div t-if="props.displayText" class="o_tag_badge_text text-truncate" t-att-class="{'position-relative ms-1' : tag.img}" t-out="tag.text"/>

                <a t-if="tag.onDelete" t-on-click.stop.prevent="(ev) =&gt; tag.onDelete and tag.onDelete(ev)" class="o_delete d-flex align-items-center opacity-100-hover" t-att-class="{                             'btn btn-link position-relative py-0 px-1 text-danger opacity-0': tag.img,                             'ps-1 opacity-75': !tag.img                         }" title="Delete" aria-label="Delete" tabIndex="-1" href="#">
                        <i class="oi oi-close align-text-top"/>
                </a>
            </span>
        </t>
        <span t-if="props.tags and otherTags.length" class="o_m2m_avatar_empty rounded text-center fw-bold" data-tooltip-template="web.TagsList.Tooltip" data-tooltip-position="right" t-att-data-tooltip-info="tooltipInfo">
            <span t-if="otherTags.length &gt; 9" t-esc="'9+'"/>
            <span t-else="" t-esc="'+' + otherTags.length"/>
        </span>
    </t>

    `);
registerTemplate("web.TagsList.Tooltip", `/web/static/src/core/tags_list/tags_list.xml`, `<t t-name="web.TagsList.Tooltip" xml:space="preserve">
        <t t-foreach="tags" t-as="tag" t-key="tag.id">
            <div t-esc="tag.text"/>
        </t>
    </t>

`);
registerTemplate("web.Tooltip", `/web/static/src/core/tooltip/tooltip.xml`, `<t t-name="web.Tooltip" xml:space="preserve">
        <div class="o-tooltip tooltip-inner d-print-none text-start">
            <t t-if="props.template" t-call="{{props.template}}" t-call-context="{ env, ...props.info }"/>
            <span t-else="" t-esc="props.tooltip"/>
        </div>
    </t>

`);
registerTemplate("web.TreeEditor", `/web/static/src/core/tree_editor/tree_editor.xml`, `<t t-name="web.TreeEditor" xml:space="preserve">
        <div class="o_tree_editor w-100" aria-atomic="true" t-att-class="className">
            <div t-attf-class="o_tree_editor_node d-flex flex-column #{props.readonly ? (props.isSubTree ? 'gap-0' : 'gap-2') : 'gap-1'}">
                <t t-set="node" t-value="tree"/>
                <div class="o_tree_editor_row d-flex align-items-center flex-wrap" t-att-class="{'ps-4': props.isSubTree}">
                    <div class="o_tree_editor_connector d-flex flex-grow-1 align-items-center">
                        <t t-if="node.children.length">
                            <span t-if="!props.isSubTree">Match</span>
                            <t t-if="node.children.length &gt; 1">
                                <t t-call="web.TreeEditor.connector.dropdown"/>
                            </t>
                            <t t-else="">
                                <span class="px-1">
                                    <t t-call="web.TreeEditor.connector.title"/>
                                </span>
                            </t>
                            <span t-if="props.isSubTree">of:</span>
                            <span t-else="">of the following rules:</span>
                        </t>
                        <t t-else="">
                            <span><span t-if="!props.isSubTree">Match </span><strong>all records</strong></span>
                        </t>
                    </div>
                    <t t-slot="default"/>
                </div>
                <t t-if="node.children.length" t-call="web.TreeEditor.connector.children"/>
                <t t-if="!props.readonly">
                    <div class="o_tree_editor_row d-flex align-items-center" t-att-class="{ 'ps-4': addPadding || props.isSubTree }">
                        <a href="#" role="button" t-on-click="() =&gt; this.insertRootLeaf(node)">New Rule</a>
                    </div>
                </t>
            </div>
        </div>
    </t>

    `);
registerTemplate("web.TreeEditor.controls", `/web/static/src/core/tree_editor/tree_editor.xml`, `<t t-name="web.TreeEditor.controls" xml:space="preserve">
        <div class="o_tree_editor_node_control_panel d-flex" role="toolbar" aria-label="Domain node">
            <button class="btn px-2 fs-4" role="button" title="Add New Rule" aria-label="Add New Rule" t-on-click="() =&gt; this.insertLeaf(parent, node)" t-on-mouseenter="(ev) =&gt; this.highlightNode(ev.target, true)" t-on-mouseleave="(ev) =&gt; this.highlightNode(ev.target, false)">
                <i class="fa fa-plus"/>
            </button>
            <button class="btn px-2 fs-4" role="button" title="Add branch" aria-label="Add branch" t-on-click="() =&gt; this.insertBranch(parent, node)" t-on-mouseenter="(ev) =&gt; this.highlightNode(ev.target, true)" t-on-mouseleave="(ev) =&gt; this.highlightNode(ev.target, false)">
                <i class="fa fa-sitemap"/>
            </button>
            <button class="btn btn-link px-2 text-danger fs-4" role="button" title="Delete node" aria-label="Delete node" t-on-click="() =&gt; this.delete(parent, node)" t-on-mouseenter="(ev) =&gt; this.highlightNode(ev.target, true)" t-on-mouseleave="(ev) =&gt; this.highlightNode(ev.target, false)">
                <i class="fa fa-trash"/>
            </button>
        </div>
    </t>

    `);
registerTemplate("web.TreeEditor.connector.title", `/web/static/src/core/tree_editor/tree_editor.xml`, `<t t-name="web.TreeEditor.connector.title" xml:space="preserve">
        <t t-set="title">
            <t t-if="node.value === '|'">
                <t t-if="node.negate">none</t>
                <t t-else="">any</t>
            </t>
            <t t-else="">
                <t t-if="node.negate">not all</t>
                <t t-else="">all</t>
            </t>
        </t>
        <t t-esc="title"/>
    </t>

    `);
registerTemplate("web.TreeEditor.connector.dropdown", `/web/static/src/core/tree_editor/tree_editor.xml`, `<t t-name="web.TreeEditor.connector.dropdown" xml:space="preserve">
        <t t-if="props.readonly">
            <strong class="px-1">
                <t t-call="web.TreeEditor.connector.title"/>
            </strong>
        </t>
        <t t-else="">
            <div aria-atomic="true">
                <Dropdown>
                    <button class="btn btn-link btn-primary py-0 px-1 o-dropdown-caret">
                        <t t-call="web.TreeEditor.connector.title"/>
                    </button>
                    <t t-set-slot="content">
                        <DropdownItem onSelected="() =&gt; this.updateConnector(node, '&amp;')">all</DropdownItem>
                        <DropdownItem onSelected="() =&gt; this.updateConnector(node, '|')">any</DropdownItem>
                    </t>
                </Dropdown>
            </div>
        </t>
    </t>

    `);
registerTemplate("web.TreeEditor.connector.children", `/web/static/src/core/tree_editor/tree_editor.xml`, `<t t-name="web.TreeEditor.connector.children" xml:space="preserve">
        <t t-foreach="node.children" t-as="child" t-key="child.type + '_' + child_index">
            <div class="o_tree_editor_node" t-att-class="{ 'ps-4': addPadding || props.isSubTree }">
                <t t-call="web.TreeEditor.{{ child.type }}">
                    <t t-set="parent" t-value="node"/>
                    <t t-set="node" t-value="child"/>
                </t>
            </div>
        </t>
    </t>

    `);
registerTemplate("web.TreeEditor.connector", `/web/static/src/core/tree_editor/tree_editor.xml`, `<t t-name="web.TreeEditor.connector" xml:space="preserve">
        <div class="o_tree_editor_row d-flex align-items-center">
            <div class="o_tree_editor_connector d-flex flex-grow-1">
                <t t-call="web.TreeEditor.connector.dropdown"/>
                <span>of:</span>
            </div>
            <t t-if="!props.readonly">
                <t t-call="web.TreeEditor.controls"/>
            </t>
        </div>
        <t t-call="web.TreeEditor.connector.children">
            <t t-set="addPadding" t-value="true"/>
        </t>
    </t>

    `);
registerTemplate("web.TreeEditor.condition", `/web/static/src/core/tree_editor/tree_editor.xml`, `<t t-name="web.TreeEditor.condition" xml:space="preserve">
        <div class="o_tree_editor_row d-flex align-items-center">
            <t t-if="props.readonly">
                <t t-call="web.TreeEditor.condition:readonly"/>
            </t>
            <t t-else="">
                <t t-call="web.TreeEditor.condition:editable"/>
                <t t-call="web.TreeEditor.controls"/>
            </t>
        </div>
        <t t-if="isTree(node.value)">
            <TreeEditor t-props="props" update="(value) =&gt; this.updateLeafValue(node, value)" slots="{}" isSubTree="true" tree="node.value" resModel="getResModel(node)"/>
        </t>
    </t>

    `);
registerTemplate("web.TreeEditor.condition:readonly", `/web/static/src/core/tree_editor/tree_editor.xml`, `<t t-name="web.TreeEditor.condition:readonly" xml:space="preserve">
        <t t-set="description" t-value="getConditionDescription(node)"/>
        <div class="o_tree_editor_condition d-flex gap-1 px-2 border bg-100">
            <div class="fw-bolder text-nowrap" t-esc="description.pathDescription"/>
            <div class="fst-italic text-nowrap" t-esc="description.operatorDescription"/>
            <t t-if="description.valueDescription">
                <t t-set="values" t-value="description.valueDescription.values"/>
                <t t-set="join" t-value="description.valueDescription.join"/>
                <t t-set="addParenthesis" t-value="description.valueDescription.addParenthesis"/>
                <t t-if="addParenthesis">( </t>
                <t t-foreach="values" t-as="val" t-key="val_index">
                    <span class="text-primary fw-bolder"><t t-esc="val"/></span>
                    <t t-if="!val_last"> <t t-esc="join"/> </t>
                </t>
                <t t-if="addParenthesis"> )</t>
            </t>
        </div>
    </t>

    `);
registerTemplate("web.TreeEditor.Editor", `/web/static/src/core/tree_editor/tree_editor.xml`, `<t t-name="web.TreeEditor.Editor" xml:space="preserve">
        <t t-if="!info.isSupported(value)">
            <div t-attf-class="o_tree_editor_editor #{_classes}">
                <div class="o_input d-flex align-items-center">
                    <span class="flex-grow-1 text-truncate" t-esc="info.stringify(value)"/>
                    <i role="alert" class="fa fa-exclamation-triangle text-warning mx-2" t-att-title="(typeof info.message === 'function') ? info.message(value) : info.message"/>
                    <i class="fa fa-times" title="Clear" t-on-click="() =&gt; update(info.defaultValue())"/>
                </div>
            </div>
        </t>
        <t t-elif="info.component">
            <div t-attf-class="o_tree_editor_editor #{_classes}">
                <t t-component="info.component" t-props="info.extractProps({ update, value })"/>
            </div>
        </t>
    </t>

    `);
registerTemplate("web.TreeEditor.condition:editable", `/web/static/src/core/tree_editor/tree_editor.xml`, `<t t-name="web.TreeEditor.condition:editable" xml:space="preserve">
        <div class="o_tree_editor_condition d-flex flex-grow-1 align-items-end gap-2">
            <t t-call="web.TreeEditor.Editor">
                <t t-set="_classes" t-value="'col col-md-4 pe-0'"/>
                <t t-set="info" t-value="getPathEditorInfo()"/>
                <t t-set="value" t-value="node.path"/>
                <t t-set="update" t-value="(path) =&gt; this.updatePath(node, path)"/>
            </t>
            <t t-call="web.TreeEditor.Editor">
                <t t-set="_classes" t-value="'col col-md-2 px-3'"/>
                <t t-set="info" t-value="getOperatorEditorInfo(node)"/>
                <t t-set="value" t-value="[node.operator, node.negate]"/>
                <t t-set="update" t-value="(operator, negate) =&gt; this.updateLeafOperator(node, operator, negate)"/>
            </t>
            <t t-call="web.TreeEditor.Editor">
                <t t-set="_classes" t-value="'col ps-0 overflow-hidden'"/>
                <t t-set="info" t-value="getValueEditorInfo(node)"/>
                <t t-set="value" t-value="node.value"/>
                <t t-set="update" t-value="(value) =&gt; this.updateLeafValue(node, value)"/>
            </t>
        </div>
    </t>

    `);
registerTemplate("web.TreeEditor.complex_condition", `/web/static/src/core/tree_editor/tree_editor.xml`, `<t t-name="web.TreeEditor.complex_condition" xml:space="preserve">
        <div class="o_tree_editor_row d-flex align-items-center">
            <div class="o_tree_editor_complex_condition flex-grow-1">
                <input class="o_input w-100" t-att-value="node.value" t-att-readonly="props.readonly or !isDebugMode" t-on-change="(ev) =&gt; this.updateComplexCondition(node, ev.target.value)"/>
            </div>
            <t t-call="web.TreeEditor.controls"/>
        </div>
    </t>


`);
registerTemplate("web.TreeEditor.Input", `/web/static/src/core/tree_editor/tree_editor_components.xml`, `<t t-name="web.TreeEditor.Input" xml:space="preserve">
        <input type="text" class="o_input" t-att-value="props.startEmpty ? '' : props.value" t-on-change="(ev) =&gt; props.update(ev.target.value)"/>
    </t>

    `);
registerTemplate("web.TreeEditor.Select", `/web/static/src/core/tree_editor/tree_editor_components.xml`, `<t t-name="web.TreeEditor.Select" xml:space="preserve">
        <select class="o_input pe-3 text-truncate" t-on-change="(ev) =&gt; props.update(deserialize(ev.target.value))">
            <option t-if="props.addBlankOption" hidden="true"/>
            <t t-foreach="props.options" t-as="option" t-key="serialize(option[0])">
                <option t-att-value="serialize(option[0])" t-att-selected="!props.addBlankOption and option[0] === props.value" t-esc="option[1]"/>
            </t>
        </select>
    </t>

    `);
registerTemplate("web.TreeEditor.Range", `/web/static/src/core/tree_editor/tree_editor_components.xml`, `<t t-name="web.TreeEditor.Range" xml:space="preserve">
        <div class="d-flex align-items-center">
            <t t-call="web.TreeEditor.Editor">
                <t t-set="_classes" t-value="'overflow-hidden flex-grow-1'"/>
                <t t-set="info" t-value="props.editorInfo"/>
                <t t-set="value" t-value="props.value[0]"/>
                <t t-set="update" t-value="(val) =&gt; this.update(0, val)"/>
            </t>
            <i class="fa fa-long-arrow-right mx-2" aria-label="Arrow icon" title="Arrow"/>
            <t t-call="web.TreeEditor.Editor">
                <t t-set="_classes" t-value="'overflow-hidden flex-grow-1'"/>
                <t t-set="info" t-value="props.editorInfo"/>
                <t t-set="value" t-value="props.value[1]"/>
                <t t-set="update" t-value="(val) =&gt; this.update(1, val)"/>
            </t>
        </div>
    </t>

    `);
registerTemplate("web.TreeEditor.Within", `/web/static/src/core/tree_editor/tree_editor_components.xml`, `<t t-name="web.TreeEditor.Within" xml:space="preserve">
        <div class="d-flex align-items-center gap-2">
            <t t-call="web.TreeEditor.Editor">
                <t t-set="_classes" t-value="'overflow-hidden flex-grow-1'"/>
                <t t-set="info" t-value="props.amountEditorInfo"/>
                <t t-set="value" t-value="props.value[0]"/>
                <t t-set="update" t-value="(val) =&gt; this.update(0, val)"/>
            </t>
            <t t-call="web.TreeEditor.Editor">
                <t t-set="_classes" t-value="'overflow-hidden flex-grow-1'"/>
                <t t-set="info" t-value="props.optionEditorInfo"/>
                <t t-set="value" t-value="props.value[1]"/>
                <t t-set="update" t-value="(val) =&gt; this.update(1, val)"/>
            </t>
        </div>
    </t>

    `);
registerTemplate("web.TreeEditor.List", `/web/static/src/core/tree_editor/tree_editor_components.xml`, `<t t-name="web.TreeEditor.List" xml:space="preserve">
        <div class="o_input d-flex flex-wrap gap-1">
            <TagsList tags="tags"/>
            <div class="flex-grow-1">
                <t t-call="web.TreeEditor.Editor">
                    <t t-set="info" t-value="props.editorInfo"/>
                    <t t-set="value" t-value="props.editorInfo.defaultValue()"/>
                    <t t-set="update" t-value="(val) =&gt; this.update(val)"/>
                </t>
            </div>
        </div>
    </t>

`);
registerTemplate("web.login_user_switch", `/web/static/src/core/user_switch/user_switch.xml`, `<t t-name="web.login_user_switch" xml:space="preserve">
        <t t-if="state.users.length">
            <t t-if="state.displayUserChoice">
                <div class="oe_login_form o_user_switch user-select-none my-4" t-ref="root">
                    <p>Choose a user</p>
                    <div class="list-group my-3">
                        <t t-foreach="state.users" t-as="user" t-key="user_index">
                            <button type="button" class="list-group-item list-group-item-action d-flex justify-content-between align-items-center" t-on-click="() =&gt; this.fillForm(user.login)">
                                <span class="d-flex justify-content-begin align-items-center">
                                    <img class="o_avatar o_user_avatar rounded me-2" t-attf-src="{{getAvatarUrl(user)}}" t-att-alt="user.login"/>
                                    <t t-esc="user.name"/>
                                </span>
                                <i class="fa fa-times" title="Remove user from switcher" t-on-click.stop="() =&gt; this.remove(user)"/>
                            </button>
                        </t>
                    </div>
                    <button type="button" class="btn btn-link btn-sm w-100" t-on-click="() =&gt; this.fillForm()">
                        <i class="fa fa-user-circle-o"/> <span class="ms-1">Use another user</span>
                    </button>
                </div>
            </t>
            <t t-else="" t-portal="'label.form-label'">
                <button type="button" class="o_user_switch_btn btn btn-sm btn-link m-0 p-0" tabindex="1" t-on-click="() =&gt; this.toggleFormDisplay()">
                    Choose a user
                </button>
            </t>
        </t>
    </t>
`);
registerTemplate("point_of_sale.OrderTabs", `/point_of_sale/static/src/app/components/order_tabs/order_tabs.xml`, `<t t-name="point_of_sale.OrderTabs" xml:space="preserve">
        <ListContainer items="orders" onClickPlus="() =&gt; this.newFloatingOrder()" t-slot-scope="scope" class="props.class" forceSmall="ui.isSmall and !env.inDialog">
            <t t-set="order" t-value="scope.item"/>
            <button t-esc="order.getName()" t-attf-class="{{pos.get_order()?.id === order.id ? 'btn-secondary active' : ''}}" class="btn btn-lg btn-secondary text-truncate mx-1" style="min-width: 4rem;" t-on-click="() =&gt; this.selectFloatingOrder(order)"/>
        </ListContainer>
    </t>
`);
registerTemplate("point_of_sale.PaymentMethodBreakdown", `/point_of_sale/static/src/app/components/payment_method_breakdown/payment_method_breakdown.xml`, `<t t-name="point_of_sale.PaymentMethodBreakdown" xml:space="preserve">
        <AccordionItem disabled="props.transactions.length === 0">
            <t t-set-slot="header">
                <div class="name-amount d-flex justify-content-between w-100">
                    <span t-esc="props.title"/>
                    <span>
                        <span class="cash-sign me-1" t-esc="props.total_amount &lt; 0 ? '-' : '+'"/>
                        <t t-esc="env.utils.formatCurrency(Math.abs(props.total_amount))"/>
                    </span>
                </div>
            </t>
            <t t-set-slot="content">
                <div class="border-start small text-muted d-flex flex-column ps-2 ms-1">
                    <div t-foreach="props.transactions" t-as="payment" t-key="payment.id" class="d-flex justify-content-between">
                        <span t-esc="payment.name"/>
                        <span>
                            <span class="cash-sign me-1" t-esc="payment.amount &lt; 0 ? '-' : '+'"/>
                            <t t-esc="env.utils.formatCurrency(Math.abs(payment.amount))"/>
                        </span>
                    </div>
                </div>
            </t>
        </AccordionItem>
    </t>
`);
registerTemplate("point_of_sale.ProductInfoBanner", `/point_of_sale/static/src/app/components/product_info_banner/product_info_banner.xml`, `<t t-name="point_of_sale.ProductInfoBanner" xml:space="preserve">
        <div t-attf-class="{{ bannerClass }}" class="section-product-info-title d-flex flex-column text-info bg-opacity-25 mx-n3 mt-n3 mb-3 px-3 py-3">
            <div class="d-flex" t-att-class="{ 'justify-content-between': !this.ui.isSmall }">
                <div>
                    <div class="h4" t-esc="props.product.productDisplayName"/>
                    <div t-if="this.props.product.is_storable" class="h4">
                        <span>On hand: </span>
                        <span t-if="this.fetchStock.status === 'success' || this.props.info"><t t-esc="this.state.available_quantity"/> Units</span>
                        <span t-elif="this.fetchStock.status === 'error'">N/A</span>
                        <i t-else="" class="fa fa-fw fa-spin fa-circle-o-notch" aria-hidden="true"/>
                    </div>
                </div>
                <div t-att-class="{ 'text-end': !this.ui.isSmall }">
                    <div class="h4"><t t-esc="this.env.utils.formatCurrency(state.price_with_tax)"/></div>
                    <div class="h4">VAT: <t t-esc="state.tax_name || 0"/> (= <t t-esc="this.env.utils.formatCurrency(state.tax_amount)"/>)</div>
                </div>
            </div>
            <AccordionItem t-if="state.other_warehouses.length &gt; 0">
                <t t-set-slot="header">
                    Inventory
                </t>
                <t t-set-slot="content">
                    <div class="border-start border-info text-muted small text-muted d-flex flex-column ps-2 ms-1">
                        <t t-foreach="state.other_warehouses" t-as="warehouse" t-key="warehouse.id">
                            <div class="d-flex gap-2">
                                <div>
                                    <t t-esc="warehouse.name"/>
                                    :
                                </div>
                                <div>
                                    <span class="me-1 fw-bolder"><t t-esc="warehouse.available_quantity"/></span>
                                    <t t-esc="warehouse.uom"/> available,
                                </div>
                                <div>
                                    <span class="me-1 fw-bolder"><t t-esc="warehouse.forecasted_quantity"/></span>
                                    forecasted
                                </div>
                            </div>
                        </t>
                    </div>             
                </t>
            </AccordionItem>
        </div>
    </t>
`);
registerTemplate("point_of_sale.TourSelectorPopup", `/point_of_sale/static/src/app/components/tour_selector_popup/tour_selector_popup.xml`, `<t t-name="point_of_sale.TourSelectorPopup" xml:space="preserve">
        <Dialog>
            <t t-set-slot="header">
                <h4 class="modal-title">Launch fake tours</h4>
            </t>
            <div class="alert alert-warning" role="alert">
                Running a fake tour will create random orders. Use at your own risk.
            </div>
            <div class="payment-methods-overview overflow-auto w-100 d-flex flex-wrap gap-1">
                <div t-foreach="this.tours" t-as="name" t-key="name">
                    <input class="form-check-input d-none" type="checkbox" t-att-name="name" t-att-id="name" t-on-change="onCheck"/>
                    <label class="btn btn-secondary btn d-flex" t-att-for="name" t-att-class="{'active': this.state.selectedTours.has(name)}">
                        <span t-esc="name"/>
                    </label>
                </div>
            </div>
            <t t-set-slot="footer">
                <div class="modal-footer-left d-flex gap-2">
                    <div class="modal-footer-left d-flex gap-2">
                        <button class="button highlight btn btn btn-primary" t-on-click="confirm">Confirm</button>
                        <button class="button btn btn btn-secondary" t-on-click="props.close">Close</button>
                    </div>
                </div>
            </t>
        </Dialog>
    </t>

`);
registerTemplate("point_of_sale.DebugWidget", `/point_of_sale/static/src/app/debug/debug_widget.xml`, `<t t-name="point_of_sale.DebugWidget" xml:space="preserve">
        <Transition visible="props.state.showWidget" name="'o-fade'" leaveDuration="200" t-slot-scope="transition">
            <div class="debug-widget bg-100 p-2 position-absolute shadow-lg" t-att-class="transition.className" t-ref="root" t-att-style="\`                 top: \${this.position.top}px;                 left: \${this.position.left}px;             \`">
                <header class="drag-handle">
                    <h2>Debug Window</h2>
                </header>
                <div class="toggle position-absolute top-0 end-0 p-2" t-on-click="() =&gt; debug.toggleWidget()" title="Dismiss" role="img" aria-label="Dismiss"><i class="fa fa-fw fa-times"/></div>
                <div class="content overflow-hidden">

                    <div class="debug-electronic-scale">
                        <h5 class="category">Electronic Scale</h5>
                        <input t-model="state.weightInput" type="text" class="weight form-control"/>
                        <ul class="d-flex flex-column align-items-start mb-3">
                            <li class="set_weight btn btn-link" t-on-click="setWeight">Set Weight</li>
                            <li class="reset_weight btn btn-link" t-on-click="resetWeight">Reset</li>
                        </ul>
                    </div>

                    <div class="debug-barcode-scanner">
                        <h5 class="category">Barcode Scanner</h5>
                        <ul class="d-flex flex-column align-items-start mb-3">
                            <li>
                                <input t-model="state.barcodeInput" type="text" class="ean form-control" t-att-disabled="!barcodeReader" t-attf-placeholder="{{ !barcodeReader ? 'No nomenclature' : '' }}"/>
                            </li>
                            <li class="button btn btn-link barcode" t-on-click="barcodeScan">Scan</li>
                            <li class="button btn btn-link custom_ean" t-on-click="barcodeScanEAN">Scan EAN-13</li>
                        </ul>
                    </div>

                    <div class="debug-orders">
                        <h5 class="category">Orders</h5>
                        <ul class="mb-3">
                            <li class="button btn btn-link" t-on-click="() =&gt; this.deleteOrders({ paid: true })">
                                Delete Paid Orders
                            </li>
                            <li class="button btn btn-link" t-on-click="() =&gt; this.deleteOrders({ paid: false })">
                                Delete Unpaid Orders
                            </li>
                            <li class="button btn btn-link" t-on-click="() =&gt; this.exportOrders({ paid: true })">
                                Export Paid Orders
                            </li>
                            <li class="button btn btn-link" t-on-click="() =&gt; this.exportOrders({ paid: false })">
                                Export Unpaid Orders
                            </li>
                            <li class="button btn btn-link import_orders" style="position:relative">
                                Import Orders
                                <input t-on-change="importOrders" type="file" style="opacity:0;position:absolute;top:0;left:0;right:0;bottom:0;margin:0;cursor:pointer"/>
                            </li>
                        </ul>
                    </div>

                    <div class="debug-hardware-status d-flex flex-column">
                        <h5 class="category">Hardware Status</h5>
                        <ul class="mb-3">
                            <li class="status weighing">Weighing</li>
                            <li class="button btn btn-link display_refresh" t-on-click="refreshDisplay">
                                Refresh Display
                            </li>
                        </ul>
                    </div>

                    <div class="debug-hardware-events">
                        <h5 class="category">Hardware Events</h5>
                        <ul class="mb-3">
                            <li class="event" t-ref="open_cashbox">Open Cashbox</li>
                            <li class="event" t-ref="print_receipt">Print Receipt</li>
                            <li class="event" t-ref="scale_read">Read Weighing Scale</li>
                        </ul>
                    </div>

                    <div class="debug-others">
                        <h5 class="category">Others</h5>
                        <ul class="mb-3">
                            <li class="event">
                                <span>Buffer: </span>
                                <t t-esc="bufferRepr"/>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </Transition>
    </t>

`);
registerTemplate("pos_hr.AccordionItem", `/point_of_sale/static/src/app/generic_components/accordion_item/accordion_item.xml`, `<t t-name="pos_hr.AccordionItem" xml:space="preserve">
        <div class="accordion position-relative" t-att-class="{'disabled': props.disabled}">
            <button class="accordion-header dropdown-item" tabindex="0" t-att-class="{'open': state.open}" t-att-aria-expanded="state.open ? 'true' : 'false'" t-on-click="toggle">
                <t t-slot="header"/>
            </button>
            <div t-ref="content_container" class="accordion-content-container" t-attf-style="max-height: {{state.open ? contentHeight : 0}}px;">
                <div class="accordion-content">
                    <t t-slot="content"/>
                </div>
            </div>
        </div>
    </t>
`);
registerTemplate("point_of_sale.CategorySelector", `/point_of_sale/static/src/app/generic_components/category_selector/category_selector.xml`, `<t t-name="point_of_sale.CategorySelector" xml:space="preserve">
        <div t-att-class="props.class" class="d-grid product-list category-list gap-2" t-att-style="props.style">
            <t t-foreach="props.categories" t-as="category" t-key="category.id">
                <button t-on-click="() =&gt; props.onClick(category.id)" t-attf-class="o_colorlist_item_color_{{!category.isSelected and !category.isChildren ? 'transparent_': ''}}{{category.color or 'none'}}" t-att-class="{'opacity-50': !category.isChildren and !category.isSelected, 'justify-content-center': ui.isSmall}" class="category-button px-1 btn btn-light d-flex align-items-center rounded-3" style="height: 4rem;">
                    <img t-if="category.imgSrc and !ui.isSmall" t-att-src="category.imgSrc" class="category-img-thumb h-100 rounded-3 object-fit-cover me-1" alt="Category"/>
                    <span t-if="category.name" class="text-wrap-categ text-center fs-5" t-esc="category.name"/>
                </button>
            </t>
        </div>
    </t>
`);
registerTemplate("point_of_sale.input", `/point_of_sale/static/src/app/generic_components/inputs/input/input.xml`, `<t t-name="point_of_sale.input" xml:space="preserve">
        <div t-attf-class="{{props.class}} d-flex">
            <button t-if="props.isSmall" class="p-2 rounded btn btn-secondary" t-on-click="() =&gt; state.isOpen = !state.isOpen">
                <i t-if="state.isOpen" class="fa fa-arrow-right"/>
                <t t-else="props.iconOnLeftSide" t-call="point_of_sale.inputIcon"/>
            </button>
            <div t-if="!props.isSmall || state.isOpen" class="input-group">
                <div class="form-control form-control-lg input-container d-flex align-items-center bg-view" t-att-class="{'is-invalid': !props.isValid(getValue())}">
                    <t t-if="props.iconOnLeftSide" t-call="point_of_sale.inputIcon"/>
                    <input class="border-0 mx-2" type="text" style="min-width: 60px;" t-on-focus="ev=&gt;ev.target.select()" t-att-placeholder="props.placeholder" t-ref="input" t-att-value="getValue()" t-on-input="(event) =&gt; this.setValue(event.target.value)"/>
                    <t t-if="!props.iconOnLeftSide" t-call="point_of_sale.inputIcon"/>
                    <i t-att-class="{ 'invisible': !getValue() }" class="fa fa-times mx-2" t-on-click="() =&gt; this.setValue('')"/>
                </div>
            </div>
        </div>
    </t>
    `);
registerTemplate("point_of_sale.inputIcon", `/point_of_sale/static/src/app/generic_components/inputs/input/input.xml`, `<t t-name="point_of_sale.inputIcon" xml:space="preserve">
        <i t-if="props.icon.type === 'fa'" t-attf-class="fa {{props.icon.value}} {{margin}}"/>
        <span t-if="props.icon.type === 'string'" t-attf-class="{{margin}}" t-esc="props.icon.value"/>
    </t>

`);
registerTemplate("point_of_sale.NumericInput", `/point_of_sale/static/src/app/generic_components/inputs/numeric_input/numeric_input.xml`, `<t t-name="point_of_sale.NumericInput" xml:space="preserve">
        <div t-attf-class="{{props.class}} d-flex input-group">
            <button class="btn btn-secondary border" t-on-click="() =&gt; this.setValue(this.getValue() - 1)" t-att-disabled="getValue() lte props.min">
                <i class="fa fa-minus center"/>
            </button>
            <div class="form-control border-top border-bottom">
                <input class="border-0 text-center text-bg-light py-1" type="number" t-on-focus="ev=&gt;ev.target.select()" t-att-value="getValue()" t-att-min="props.min" t-on-input="(event) =&gt; this.setValue(parseInt(event.target.value))"/>
            </div>
            <button class="btn btn-secondary border" t-on-click="() =&gt; this.setValue(this.getValue() + 1)">
                <i class="fa fa-plus"/>
            </button>
        </div>
    </t>
`);
registerTemplate("point_of_sale.Numpad", `/point_of_sale/static/src/app/generic_components/numpad/numpad.xml`, `<t t-name="point_of_sale.Numpad" xml:space="preserve">
    <div t-attf-class="d-grid numpad numpad-{{buttons.length / 4}}-cols m-n1 {{props.class}}">
      <t t-foreach="buttons.map((b) =&gt; typeof b === 'object' ? b : { value: b })" t-as="button" t-key="button.value">
        <span t-if="Object.keys(button).length === 0"/>
        <button t-else="" t-attf-class="numpad-button btn btn-light btn-lg fs-3 lh-lg m-1 {{ button.class  or '' }}" t-att-value="button.text or button.value" t-on-click="() =&gt; this.onClick(button.value)" t-att-disabled="button.disabled" t-esc="button.text or button.value"/>
      </t>
    </div>
  </t>
`);
registerTemplate("point_of_sale.OdooLogo", `/point_of_sale/static/src/app/generic_components/odoo_logo/odoo_logo.xml`, `<t t-name="point_of_sale.OdooLogo" xml:space="preserve">
        <div t-attf-class="{{ props.class }}" t-attf-style="{{ props.style }}">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 919 495">
                <path d="M695,346a75,75,0,1,1,75-75A75,75,0,0,1,695,346Zm0-31a44,44,0,1,0-44-44A44,44,0,0,0,695,315ZM538,346a75,75,0,1,1,75-75A75,75,0,0,1,538,346Zm0-31a44,44,0,1,0-44-44A44,44,0,0,0,538,315Zm-82-45c0,41.9-33.6,76-75,76s-75-34-75-75.9S336.5,196,381,196c16.4,0,31.6,3.5,44,12.6V165.1c0-8.3,7.3-15.1,15.5-15.1s15.5,6.8,15.5,15.1Zm-75,45a44,44,0,1,0-44-44A44,44,0,0,0,381,315Z" t-attf-style="fill:{{ props.monochrome ? '#FFF' : '#8f8f8f' }}"/>
                <path d="M224,346a75,75,0,1,1,75-75A75,75,0,0,1,224,346Zm0-31a44,44,0,1,0-44-44A44,44,0,0,0,224,315Z" t-attf-style="fill:{{ props.monochrome ? '#FFF' : '#714b67' }}"/>
            </svg>
        </div>
    </t>
`);
registerTemplate("point_of_sale.OrderWidget", `/point_of_sale/static/src/app/generic_components/order_widget/order_widget.xml`, `<t t-name="point_of_sale.OrderWidget" xml:space="preserve">
        <t t-if="props.lines?.length">
            <div class="d-flex flex-column flex-grow-1 rounded-3 bg-white overflow-hidden">
                <div t-ref="scrollable" t-att-style="props.style" t-att-class="props.class" class="order-container d-flex flex-column flex-grow-1 overflow-y-auto text-start">
                    <t t-foreach="props.lines" t-as="line" t-key="line_index">
                        <t t-if="props.slots?.default" t-slot="default" line="line"/>
                        <Orderline t-else="" line="line"/>
                    </t>
                    <div class="mt-1 bg-opacity-75" t-attf-class="{{ props.screenName == 'ReceiptScreen' ? 'p-0' : 'p-2 border-bottom border-top border-opacity-75'}}" t-if="props.generalNote">
                        <b class="fw-bolder">General Note</b>
                        <t t-foreach="props.generalNote.split('\\n')" t-as="subNote" t-key="subNote_index">
                            <br/>• <t t-esc="subNote"/>
                        </t>
                    </div>
                </div>
                <t t-set="taxTotals" t-value="props.taxTotals"/>
                <div t-if="taxTotals" class="order-summary d-flex flex-column gap-1 px-3 py-2 border-top fw-bolder lh-sm">
                    <div t-if="taxTotals.has_tax_groups" class="tax-info subentry d-flex justify-content-between w-100 fs-6 text-muted">
                        Taxes
                        <div id="order-widget-taxes">
                            <span t-esc="formatMonetary(taxTotals.order_sign * taxTotals.tax_amount_currency, {currencyId: taxTotals.currency_id})" class="tax"/>
                        </div>
                    </div>
                    <div class="d-flex justify-content-between w-100 fs-2">
                        Total
                        <span t-esc="formatMonetary(taxTotals.order_sign * taxTotals.order_total, {currencyId: taxTotals.currency_id})" class="total"/>
                    </div>
                </div>
            </div>
            <t t-slot="details"/>
        </t>
        <t t-else="">
            <div t-if="!props.slots?.emptyCart" class="d-flex flex-column align-items-center justify-content-center flex-grow-1 bg-100 rounded-3 gap-3">
                <CenteredIcon icon="'fa-shopping-cart fa-4x'" text="emptyCartText()" class="'h-unset'"/>
                <t t-slot="details"/>
            </div>
            <t t-else="" t-slot="emptyCart"/>
        </t>
    </t>
`);
registerTemplate("point_of_sale.Orderline", `/point_of_sale/static/src/app/generic_components/orderline/orderline.xml`, `<t t-name="point_of_sale.Orderline" xml:space="preserve">
        <t t-set="line" t-value="props.line"/>
        <li class="orderline position-relative d-flex align-items-center p-2 lh-sm cursor-pointer" t-attf-class="{{ line.comboParent ? 'orderline-combo ms-4 fst-italic' : '' }}" t-att-class="props.class">
            <div class="product-order"/>
            <div t-if="line.imageSrc" class="o_line_container d-flex align-items-center justify-content-center">
                <img t-attf-style="border-radius: 1rem;" t-att-src="line.imageSrc"/>
            </div>
            <div class="d-flex flex-column w-100 gap-1">
                <div class="d-flex justify-content-between">
                    <div class="product-name d-inline-block flex-grow-1 fw-bolder pe-1 text-truncate">
                        <span class="text-wrap" t-esc="line.productName"/>
                        <t t-slot="product-name"/>
                    </div>
                    <div t-if="!props.basic_receipt" class="product-price price fw-bolder">
                        <t t-if="line.price === 'free'">Free</t>
                        <t t-else="" t-esc="line.price"/>
                    </div>
                    <div t-if="props.showTaxGroupLabels" t-esc="line.taxGroupLabels" class="text-end" style="width: 2rem"/>
                </div>
                <ul class="info-list d-flex flex-column">
                    <li class="price-per-unit">
                        <span class="qty px-1 border rounded text-bg-view fw-bolder me-1" t-esc="line.qty"/>
                        <t t-if="!props.basic_receipt">
                            x
                            <t t-if="line.price !== 0">
                                <s t-esc="line.oldUnitPrice" t-if="line.oldUnitPrice"/>
                                <t t-esc="line.unitPrice"/>
                            </t>
                            /
                        </t>
                        <t t-if="line.unit" t-esc="line.unit"/>
                    </li>
                    <li t-if="line.price !== 0 and line.discount and line.discount !== '0' and !props.basic_receipt">
                        <t t-esc="line.price_without_discount"/> With a <em><t t-esc="line.discount"/>% </em> discount
                    </li>
                    <li t-if="line.customerNote" class="customer-note w-100 p-2 mt-2 rounded text-break text-bg-warning bg-opacity-25">
                        <i class="fa fa-sticky-note me-1" role="img" aria-label="Customer Note" title="Customer Note"/>
                        <t t-esc="line.customerNote"/>
                    </li>
                    <div class="internal-note-container d-flex gap-2">
                        <t t-foreach="line.internalNote?.split?.('\\n') or []" t-as="note" t-key="note_index">
                            <li t-if="note.trim() !== ''" t-esc="note" class="internal-note badge mt-2 p-2 rounded-pill bg-info text-info bg-opacity-25" style="font-size: 0.85rem;"/>
                        </t>
                    </div>
                    <li t-foreach="line.packLotLines or []" t-as="lot" t-key="lot_index" t-esc="lot"/>
                    <t t-slot="default"/>
                </ul>
            </div>
        </li>
    </t>
`);
registerTemplate("point_of_sale.ProductCard", `/point_of_sale/static/src/app/generic_components/product_card/product_card.xml`, `<t t-name="point_of_sale.ProductCard" xml:space="preserve">
        <article tabindex="0" t-attf-class="{{props.class}} {{props.color ? \`o_colorlist_item_color_transparent_\${props.color}\` : ''}} product position-relative btn btn-light d-flex align-items-stretch p-0 m-0 rounded-3 text-start cursor-pointer transition-base" t-on-keypress="(event) =&gt; event.code === 'Space' ? props.onClick(event) : ()=&gt;{}" t-on-click="props.onClick" t-att-data-product-id="props.productId" t-attf-aria-labelledby="article_product_{{props.productId}}">
            <div t-if="props.productInfo" class="product-information-tag" t-on-click.stop="props.onProductInfoClick" t-att-class="{'red-tag' : props.showWarning}">
                <i class="product-information-tag-logo fa fa-info" role="img" aria-label="Product Information" title="Product Information"/>
            </div>
            <div t-if="props.imageUrl" class="product-img rounded-top rounded-3">
                <img class="w-100 bg-100" t-att-src="props.imageUrl" t-att-alt="props.name"/>
            </div>
            <div class="product-content d-flex flex-row px-2 justify-content-between rounded-bottom rounded-3 flex-shrink-1" t-att-class="{'h-100' : !props.imageUrl}">
                <div class="overflow-hidden lh-sm product-name my-2" t-att-class="{'no-image d-flex justify-content-center align-items-center text-center fs-4': !props.imageUrl}" t-attf-id="article_product_{{props.productId}}" t-esc="props.name"/>
                <h1 t-if="props.productCartQty" t-out="props.productCartQty" class="product-cart-qty text-muted display-6 fw-bolder m-0 mt-auto"/>
            </div>
        </article>
    </t>
`);
registerTemplate("point_of_sale.Loader", `/point_of_sale/static/src/app/loader/loader.xml`, `<t t-name="point_of_sale.Loader" xml:space="preserve">
        <div class="pos-loader" t-att-style="props.loader.isShown ? '' : 'opacity: 0'">
            <div class="loader-feedback">

                <div class="lds-ellipsis"><div/><div/><div/><div/></div>


            </div>
        </div>
    </t>
`);
registerTemplate("point_of_sale.CashMovePopup", `/point_of_sale/static/src/app/navbar/cash_move_popup/cash_move_popup.xml`, `<t t-name="point_of_sale.CashMovePopup" xml:space="preserve">
        <Dialog header="false">
            <div class="input-amount d-flex mb-2 gap-2">
                <div class="input-group" t-att-class="{ 'w-50' : this.ui.isSmall }">
                    <button t-on-click="() =&gt; this.onClickButton('in')" t-attf-class="input-type btn btn-secondary lh-lg #{this.ui.isSmall ? 'btn-md' : 'btn-lg'} #{state.type === 'in' ? 'highlight btn-success' : '' }">
                        Cash In
                    </button>
                    <button t-on-click="() =&gt; this.onClickButton('out')" t-attf-class="input-type btn btn-secondary lh-lg #{this.ui.isSmall ? 'btn-md' : 'btn-lg'} #{state.type === 'out' ? 'red-highlight btn-danger' : '' }">
                        Cash Out
                    </button>
                </div>
                <div t-attf-class="{{this.ui.isSmall ? 'mw-50 h-50' : 'w-25'}}">
                    <Input tModel="[state, 'amount']" icon="{type: 'string', value: pos.currency.symbol}" iconOnLeftSide="pos.currency.position === 'before'" isValid.bind="env.utils.isValidFloat" autofocus="true" getRef="(ref) =&gt; this.inputRef = ref"/>
                </div>
            </div> 
            <div class="form-floating">
                <textarea class="form-control cash-reason" placeholder="Leave a reason here" name="reason" id="reason" t-model="state.reason" style="height:100px;"/>
                <label for="reason">Reason</label>
            </div>
            <t t-set-slot="footer">
                <button class="button confirm btn btn-lg lh-lg btn-primary" t-on-click="confirm" t-att-disabled="!isValidCashMove()">
                    Confirm
                </button>
                <button class="button cancel btn btn-lg lh-lg btn-secondary" t-on-click="props.close">
                    Discard
                </button>
            </t>
        </Dialog>
    </t>

`);
registerTemplate("point_of_sale.CashMoveReceipt", `/point_of_sale/static/src/app/navbar/cash_move_popup/cash_move_receipt/cash_move_receipt.xml`, `<t t-name="point_of_sale.CashMoveReceipt" xml:space="preserve">
        <div class="pos-receipt">
            <ReceiptHeader data="props.headerData"/>
            <div class="pos-receipt-center-align">
                CASH
                <t t-esc="props.translatedType.toUpperCase()"/>
            </div>
            <br/>
            <div>
                AMOUNT
                <span t-esc="props.formattedAmount" class="pos-receipt-right-align"/>
            </div>
            <div>
                REASON
                <span t-esc="props.reason" class="pos-receipt-right-align"/>
            </div>
            <br/>
            <div class="pos-receipt-order-data">
                <div><t t-esc="props.date"/></div>
            </div>
        </div>
    </t>

`);
registerTemplate("point_of_sale.CashierName", `/point_of_sale/static/src/app/navbar/cashier_name/cashier_name.xml`, `<t t-name="point_of_sale.CashierName" xml:space="preserve">
        <button t-att-class="cssClass" class="cashier-name btn btn-light btn-lg lh-lg d-flex align-items-center gap-2 flex-shrink-0 h-100">
            <img t-att-src="avatar" t-att-alt="username" class="avatar rounded-3"/>
            <span t-if="!ui.isSmall" t-esc="username" class="username d-none d-xl-inline-block text-truncate"/>
        </button>
    </t>

`);
registerTemplate("point_of_sale.ClosePosPopup", `/point_of_sale/static/src/app/navbar/closing_popup/closing_popup.xml`, `<t t-name="point_of_sale.ClosePosPopup" xml:space="preserve">
        <Dialog contentClass="'close-pos-popup'">
            <t t-set-slot="header">
                <div class="d-flex flex-grow-1 justify-content-between">
                    <h4 class="align-middle my-1">Closing Register</h4>
                    <div class="total-orders fw-bolder align-middle my-1">
                        <t t-esc="props.orders_details.quantity"/> orders:
                        <span class="amount" t-esc="env.utils.formatCurrency(props.orders_details.amount)"/>
                    </div>
                </div>
            </t>
                <div class="payment-methods-overview">
                    <div t-if="pos.config.cash_control" class="w-100 mb-3">
                        <t t-set="diff" t-value="getDifference(props.default_cash_details.id)"/>
                        <t t-set="counted" t-value="state.payments[props.default_cash_details.id]?.counted || '0'"/>
                        <div class="d-flex align-items-center justify-content-between fs-3">
                            <span t-esc="props.default_cash_details.name"/>
                            <span t-esc="env.utils.formatCurrency(props.default_cash_details.amount)"/>
                        </div>
                        <div class="d-flex align-items-center justify-content-between text-muted border-start ps-2">
                            <span>Opening</span>
                            <span t-esc="env.utils.formatCurrency(props.default_cash_details.opening)"/>
                        </div>
                        <div t-if="props.default_cash_details.payment_amount" class="d-flex align-items-center justify-content-between text-muted border-start ps-2">
                            <span>Payments in <t t-esc="props.default_cash_details.name"/></span>
                            <span class="align-top" t-esc="env.utils.formatCurrency(Math.abs(props.default_cash_details.payment_amount))"/>
                        </div>
                        <t t-set="moveData" t-value="cashMoveData"/>
                        <PaymentMethodBreakdown title.translate="Cash In / Out" total_amount="cashMoveData.total" transactions="cashMoveData.moves"/>
                        <div class="d-flex align-items-center justify-content-between text-muted border-start ps-2">
                            <span>Counted</span>
                            <span t-esc="env.utils.formatCurrency(env.utils.parseValidFloat(counted))"/>
                        </div>
                        <div class="d-flex align-items-center justify-content-between text-muted border-start ps-2" t-att-class="{'text-danger fw-bold': diff}">
                            <span>Difference</span>
                            <span class="cash-difference" t-esc="env.utils.formatCurrency(diff)"/>
                        </div>
                    </div>
                    <div class="w-100 mb-3" t-foreach="props.non_cash_payment_methods" t-as="pm" t-key="pm.id">
                        <t t-set="_showDiff" t-value="pm.type === 'bank' and pm.number !== 0"/>
                        <t t-set="diff" t-value="_showDiff ? getDifference(pm.id) : 0"/>
                        <t t-set="counted" t-value="_showDiff ? env.utils.parseValidFloat(state.payments[pm.id].counted) : 0"/>
                        <div class="d-flex align-items-center justify-content-between fs-3">
                            <span t-esc="pm.name"/>
                            <span t-esc="env.utils.formatCurrency(pm.amount)"/>
                        </div>
                        <div class="d-flex align-items-center justify-content-between text-muted border-start ps-2">
                            <span>Counted</span>
                            <span t-esc="env.utils.formatCurrency(counted)"/>
                        </div>
                        <div class="d-flex align-items-center justify-content-between text-muted border-start ps-2" t-att-class="{'text-danger fw-bold': diff}">
                            <span>Difference</span>
                            <span t-esc="env.utils.formatCurrency(diff)"/>
                        </div>
                    </div>
                </div>
                <hr/>
                <div t-if="pos.config.cash_control" class="mb-3">
                    <label class="form-label">Cash Count</label>
                    <div class="d-flex w-100 gap-2 mt-1">
                        <Input tModel="[state.payments[props.default_cash_details.id], 'counted']" callback.bind="(value) =&gt;  this.setManualCashInput(value)" isValid.bind="env.utils.isValidFloat" class="'cash-input w-100'"/>
                        <button class="icon fa fa-money btn btn-secondary" t-on-click="openDetailsPopup"/>
                        <button class="icon fa fa-clone btn btn-secondary" t-on-click="autoFillCashCount"/>
                    </div>
                </div>
                <div class="w-100 mb-3" t-foreach="props.non_cash_payment_methods" t-as="pm" t-key="pm.id">
                    <t t-set="_showDiff" t-value="pm.type === 'bank' and pm.number !== 0"/>
                    <t t-if="_showDiff">
                        <span><t t-esc="pm.name"/> Count</span>
                        <Input tModel="[state.payments[pm.id], 'counted']" isValid.bind="env.utils.isValidFloat"/>
                    </t>
                </div>
                <div class="notes-container d-flex flex-column flex-sm-row gap-3 pt-3">
                    <div class="opening-notes-container d-flex flex-column flex-grow-1 align-items-start" t-if="props.opening_notes">
                        <label class="form-label" for="props.opening_notes">Opening note</label>
                        <textarea class="opening-notes form-control" rows="7" id="props.opening_notes" style="height: 60px">
                            <t t-esc="props.opening_notes"/>
                        </textarea>
                    </div>
                    <div class="closing-notes-container d-flex flex-column flex-grow-1 align-items-start">
                        <label class="form-label" for="closingNotes">Closing note</label>
                        <textarea class="closing-notes form-control" style="height: 60px" rows="7" id="closingNotes" placeholder="Add a closing note..." t-model="state.notes"/>
                    </div>
                </div>
            <t t-set-slot="footer">
                <div class="w-100 d-flex flex-wrap justify-content-between gap-2" t-att-class="{'container-fluid row p-0': this.ui.isSmall}">

                    <div t-att-class="{'col-12 col-md-6 p-0': this.ui.isSmall}" class="d-flex gap-2">
                        <button class="button highlight btn btn-primary" t-att-disabled="!canConfirm()" t-on-click="confirm" t-att-class="this.ui.isSmall ? 'w-100' : 'btn-lg'">Close Register</button>
                        <button class="button btn btn-secondary" t-att-disabled="!canCancel()" t-on-click="cancel" t-att-class="this.ui.isSmall ? 'w-100' : 'btn-lg'">Discard</button>
                    </div>


                    <div t-att-class="{'col-12 col-md-6 p-0': this.ui.isSmall}" class=" d-flex gap-2">
                        <button class="button btn btn-secondary" t-att-class="this.ui.isSmall ? 'w-100' : 'btn-lg'" t-on-click="() =&gt; this.cashMove()">Cash In/Out</button>
                        <button class="button icon btn btn-secondary" t-on-click="downloadSalesReport" t-att-class="this.ui.isSmall ? 'w-100' : 'btn-lg ms-auto'" title="Download a report with all the sales of the current PoS Session">
                                Daily Sale
                                <i t-if="!this.ui.isSmall" class="fa fa-download" role="img"/>
                        </button>
                        <button t-if="hardwareProxy.printer" class="button icon btn btn-secondary" t-att-class="{'btn-lg': !this.ui.isSmall}">
                            <SaleDetailsButton/>
                        </button>
                    </div>
                </div>
            </t>
        </Dialog>
    </t>
`);
registerTemplate("point_of_sale.Navbar", `/point_of_sale/static/src/app/navbar/navbar.xml`, `<t t-name="point_of_sale.Navbar" xml:space="preserve">
        <div class="pos-topheader navbar-height d-flex align-items-center justify-content-between px-2 py-1 m-0 bg-white border-bottom">
            <div class="pos-leftheader d-flex align-items-center overflow-hidden">
                <OrderTabs orders="getOrderTabs()"/>
            </div>
            <div t-if="!ui.isSmall" class="pos-centerheader d-flex justify-content-center overflow-hidden">
                <img class="pos-logo pos-logo mw-100" height="42" t-on-click="() =&gt; debug.toggleWidget()" src="/web/static/img/logo.png" alt="Logo"/>
            </div>
            <div class="pos-rightheader d-flex justify-content-end overflow-hidden" t-att-class="{ 'ms-auto': !ui.isSmall, 'me-1 position-absolute end-0 width-100 pos-nav-small': ui.isSmall }">
                <div class="status-buttons d-flex flex-grow-1 align-items-center justify-content-end gap-1">
                    <Input tModel="[pos, 'searchProductWord']" class="'p-0'" isSmall="ui.isSmall" placeholder.translate="Search products..." icon="{type: 'fa', value: 'fa-search fa-lg fa-fw'}" debounceMillis="500" t-if="pos.showSearchButton()"/>
                    <button class="btn btn-light btn-lg lh-lg" t-if="isBarcodeScannerSupported() and pos.mainScreen.component.name == 'ProductScreen'" t-on-click="onClickScan">
                        <i class="fa fa-fw fa-lg fa-barcode"/><span t-if="this.pos.scanning" class="ms-1">Stop</span>
                    </button>
                    <div t-if="this.pos.data.network.offline or this.pos.data.network.loading" class="oe_status btn btn-light btn-lg lh-lg h-100 pe-none" t-on-click="onSyncNotificationClick">
                        <span t-if="this.pos.data.network.unsyncData.length &gt; 0" t-esc="this.pos.data.network.unsyncData.length"/> 
                        <div t-if="this.pos.data.network.offline" class="fa fa-fw fa-chain-broken text-danger"/>
                        <div t-else="" class="fa fa-fw fa-spin fa-circle-o-notch text-warning"/>
                    </div>

                    <CashierName t-if="!ui.isSmall"/>
                    <Dropdown>
                        <button class="btn btn-light btn-lg lh-lg">
                            <i class="fa fa-fw fa-lg fa-bars"/>
                        </button>
                        <t t-set-slot="content">
                            <div t-if="customerFacingDisplayButtonIsShown" class="d-flex gap-2 p-2 border-bottom">
                                <ProxyStatus t-if="pos.config.use_proxy"/>
                                <span t-on-click="openCustomerDisplay" class="btn btn-secondary btn-lg w-100 text-center" title="Customer Display">
                                    <i class="fa fa-fw fa-desktop"/>
                                </span>
                            </div>
                            <div class="p-2 pos-burger-menu-items">
                                <DropdownItem t-if="!isDisplayStandalone" onSelected="() =&gt; window.open(this.appUrl)">
                                    Install App
                                </DropdownItem>
                                <DropdownItem onSelected="() =&gt; this.pos.showScreen('TicketScreen')">
                                    Orders <span t-if="orderCount gt 0" class="badge text-bg-info rounded-pill py-1 ms-2 float-end" t-esc="orderCount"/>
                                </DropdownItem>
                                <DropdownItem t-if="showCashMoveButton" onSelected="() =&gt; this.pos.cashMove()">
                                    Cash In/Out
                                </DropdownItem>
                                <DropdownItem t-if="showToggleProductView" onSelected="() =&gt; this.toggleProductView()">
                                    Switch Product View
                                </DropdownItem>
                                <DropdownItem t-if="showCreateProductButton" onSelected="() =&gt; this.pos.editProduct()">
                                    Create Product
                                </DropdownItem>
                                <DropdownItem t-if="hardwareProxy.printer" onSelected="() =&gt; this.showSaleDetails()">
                                    Print Report
                                </DropdownItem>
                                <DropdownItem onSelected="() =&gt; pos.closePos()">
                                    Backend
                                </DropdownItem>
                                <DropdownItem onSelected="() =&gt; this.pos.closeSession()">
                                    Close Register
                                </DropdownItem>
                                <DropdownItem t-if="this.env.debug" onSelected="() =&gt; this.clearCache()">
                                    Clear Cache
                                </DropdownItem>
                                <DropdownItem t-if="this.env.debug" onSelected="() =&gt; debug.toggleWidget()">
                                    Debug Window
                                </DropdownItem>
                            </div>
                        </t>
                    </Dropdown>
                </div> 
            </div>
        </div>
    </t>

`);
registerTemplate("point_of_sale.ProxyStatus", `/point_of_sale/static/src/app/navbar/proxy_status/proxy_status.xml`, `<t t-name="point_of_sale.ProxyStatus" xml:space="preserve">
        <button class="oe_status js_proxy btn btn-light" t-on-click="() =&gt; this.pos.connectToProxy()">
            <span t-if="this.message and !ui.isSmall" class="js_msg">
                <t t-esc="this.message"/>
            </span>
            <span t-if="connectionInfo.status === 'connected' and !this.message" class="js_connected text-success">
                <i class="fa fa-fw fa-sitemap" role="img" aria-label="Proxy Connected" title="Proxy Connected"/>
            </span>
            <span t-if="connectionInfo.status === 'connecting'" class="js_connecting">
                <i class="fa fa-fw fa-spin fa-circle-o-notch" role="img" aria-label="Connecting to Proxy" title="Connecting to Proxy"/>
            </span>
            <span t-elif="connectionInfo.status === 'disconnected'" class="js_disconnected text-danger">
                <i class="fa fa-fw fa-sitemap" role="img" aria-label="Proxy Disconnected" title="Proxy Disconnected"/>
            </span>
            <span t-elif="connectionInfo.status === 'warning' or this.message" class="js_warning text-warning">
                <i class="fa fa-fw fa-sitemap" role="img" aria-label="Proxy Warning" title="Proxy Warning"/>
            </span>
        </button>
    </t>

`);
registerTemplate("point_of_sale.SaleDetailsButton", `/point_of_sale/static/src/app/navbar/sale_details_button/sale_details_button.xml`, `<t t-name="point_of_sale.SaleDetailsButton" xml:space="preserve">
        <div t-att-class="{'oe_status cursor-pointer': props.isHeaderButton }" t-on-click="onClick">
            <div class="js_connected oe_icon" title="Print a report with all the sales of the current PoS Session">
                <i class="fa fa-fw fa-print" role="img" aria-label="Print"/>
            </div>
        </div>
    </t>

`);
registerTemplate("point_of_sale.SaleDetailsReport", `/point_of_sale/static/src/app/navbar/sale_details_button/sales_detail_report.xml`, `<t t-name="point_of_sale.SaleDetailsReport" xml:space="preserve">
        <div class="pos-receipt">
            <t t-if="pos.company_logo_base64">
                <img class="pos-receipt-logo" t-att-src="pos.company_logo_base64" alt="Logo"/>
                <br/>
            </t>
            <t t-if="!pos.company_logo_base64" class="pos-receipt-center-align">
                <h1 t-esc="pos.company.name"/>
                <br/>
            </t>
            <br/><br/>

            <div>
                SOLD:
            </div>

            <div class="orderlines">
                <t t-foreach="products" t-as="category" t-key="category['name']">
                    <t t-foreach="category['products']" t-as="line" t-key="line_index">
                        <div class="responsive-price">
                            <t t-esc="line['product_name'].substr(0,20)"/>
                            <span class="pos-receipt-right-align">
                                <t t-esc="Math.round(line.quantity * Math.pow(10, pos.models['decimal.precision'].find((dp) =&gt; dp.name === 'Product Unit of Measure').digits)) / Math.pow(10, pos.models['decimal.precision'].find((dp) =&gt; dp.name === 'Product Unit of Measure').digits)"/>
                                <t t-if="line.uom !== 'Units'">
                                    <t t-esc="line.uom"/>
                                </t>
                                x
                                <t t-esc="formatCurrency(line.price_unit, false)"/>
                            </span>
                        </div>
                        <t t-if="line.discount !== 0">
                            <div class="pos-receipt-left-padding">Discount: <t t-esc="line.discount"/>%</div>
                        </t>
                    </t>
                </t>
            </div>

            <br/>
            <div>------------------------</div>
            <br/>

            <div>
                REFUNDED:
            </div>

            <div class="orderlines">
                <t t-foreach="refund_products" t-as="category" t-key="category['name']">
                    <t t-foreach="category['products']" t-as="line" t-key="line_index">
                        <div class="responsive-price">
                            <t t-esc="line['product_name'].substr(0,20)"/>
                            <span class="pos-receipt-right-align">
                                <t t-esc="Math.round(line.quantity * Math.pow(10, pos.models['decimal.precision'].find((dp) =&gt; dp.name === 'Product Unit of Measure')?.digits)) / Math.pow(10, pos.models['decimal.precision'].find((dp) =&gt; dp.name === 'Product Unit of Measure')?.digits)"/>
                                <t t-if="line.uom !== 'Units'">
                                    <t t-esc="line.uom"/>
                                </t>
                                x
                                <t t-esc="formatCurrency(line.price_unit, false)"/>
                            </span>
                        </div>
                        <t t-if="line.discount !== 0">
                            <div class="pos-receipt-left-padding">Discount: <t t-esc="line.discount"/>%</div>
                        </t>
                    </t>
                </t>
            </div>

            <br/>
            <div>------------------------</div>
            <br/>

            <div>
                Payments:
            </div>
            <div t-foreach="payments" t-as="payment" t-key="payment_index">
                <t t-esc="payment['name']"/>
                <span t-esc="formatCurrency(payment['total'], false)" class="pos-receipt-right-align"/>
            </div>

            <br/>
            <div>------------------------</div>
            <br/>

            <div>
                Taxes:
            </div>
            <div t-foreach="taxes" t-as="tax" t-key="tax_index">
                <t t-esc="tax.name"/>
                <span t-esc="formatCurrency(tax.tax_amount, false)" class="pos-receipt-right-align"/>
            </div>

            <br/>
            <div>------------------------</div>
            <br/>

            <div>
                Total:
                <span t-esc="formatCurrency(currency.total_paid, false)" class="pos-receipt-right-align"/>
            </div>

            <br/>
            <div class="pos-receipt-order-data">
                <div><t t-esc="date"/></div>
            </div>
        </div>
    </t>

`);
registerTemplate("point_of_sale.SyncPopup", `/point_of_sale/static/src/app/navbar/sync_popup/sync_popup.xml`, `<t t-name="point_of_sale.SyncPopup" xml:space="preserve">
        <Dialog class="'p-0'">
            <t t-set-slot="header">
                <h4 class="modal-title">Records to synchronize</h4>
                <div class="total-orders fw-bolder">
                    Total <t t-esc="pos.data.network.unsyncData.length"/>
                </div>
            </t>
            <div class="payment-methods-overview overflow-auto">
                <div class="w-100">
                    <t t-foreach="this.pos.data.network.unsyncData" t-as="data" t-key="data_index">
                        <div class="d-flex align-item-center border rounded mb-1">
                            <div class="col wide p-2 d-flex flex-column">
                                <span class="fw-bolder">Model</span>
                                <span t-esc="data.args[0].model"/>
                            </div>
                            <div class="col wide p-2 d-flex flex-column">
                                <span class="fw-bolder">Date</span>
                                <span t-esc="data.date.toFormat('dd/MM/yyyy HH:mm:ss')"/>
                            </div>
                            <div class="col wide p-2 d-flex flex-column">
                                <span class="fw-bolder">Count</span>
                                <span t-esc="this.getCount(data.args[0])"/>
                            </div>
                            <div class="col wide p-2 d-flex flex-column">
                                <span class="fw-bolder">Retry</span>
                                <span t-esc="data.try"/>
                            </div>
                            <div class="col p-2 d-flex flex-column">
                                <span class="fw-bolder">Delete</span>
                                <i class="fa fa-trash cursor-pointer" aria-hidden="true" t-on-click="() =&gt; this.delete(data.uuid)"/>
                            </div>
                        </div>
                    </t>
                </div>
            </div>
            <t t-set-slot="footer">
                <div class="modal-footer-left d-flex gap-2">
                    <div class="modal-footer-left d-flex gap-2">
                        <button class="button highlight btn btn-lg btn-primary" t-on-click="confirm">Synchronize</button>
                        <button class="button btn btn-lg btn-secondary" t-on-click="props.close">Close</button>
                    </div>
                </div>
            </t>
        </Dialog>
    </t>

`);
registerTemplate("point_of_sale.Chrome", `/point_of_sale/static/src/app/pos_app.xml`, `<t t-name="point_of_sale.Chrome" xml:space="preserve">
        <div class="pos dvh-100 d-flex flex-column">
            <Navbar/>
            <div class="pos-content flex-grow-1 overflow-auto bg-200">

                <t t-component="pos.mainScreen.component" t-props="pos.mainScreen.props"/>
            </div>
        </div>
        <MainComponentsContainer/>
    </t>

`);
registerTemplate("point_of_sale.LoginScreen", `/point_of_sale/static/src/app/screens/login_screen/login_screen.xml`, `<t t-name="point_of_sale.LoginScreen" xml:space="preserve">
        <div class="login-overlay o_attendance_background fixed-top w-100 h-100 p-4 d-flex flex-column">
            <div class="screen-login-header d-flex justify-content-between">
                <div t-if="!ui.isSmall" class="screen-login-timer d-flex align-items-center gap-2 bg-transparent">
                    <div class="timer-hours fs-1" t-esc="time.hours"> </div>
                    <div class="timer-date-container d-flex flex-column smaller">
                        <div class="timer-day" t-esc="time.day"> </div>
                        <div class="timer-date" t-esc="time.date"> </div>
                    </div>
                </div>
                <div t-attf-class="screen-login-logo {{ ui.isSmall ? 'mx-auto' : 'ms-auto'}}">
                    <img t-attf-src="/web/image?model=res.company&amp;id={{pos.company.id}}&amp;field=logo" alt="Logo"/>
                </div>
            </div>
            <div class="screen-login flex-grow-1 d-flex flex-column">
                <div class="login-body d-flex flex-column flex-md-row gap-3 m-auto">
                    <button class="open-register-btn btn btn-light btn-lg d-flex flex-column align-items-center flex-grow-1 flex-basis-100 gap-2 p-5 rounded-4 lh-lg" t-on-click="() =&gt; this.openRegister()">
                        <i class="fa fa-shopping-basket fa-3x" aria-hidden="true"/>
                        <span class="d-flex flex-grow-1 align-items-center">Open Register</span>
                    </button>
                </div>
            </div>
            <div class="w-100 d-flex justify-content-center">
                <button class="select-logout btn btn-dark btn-lg" t-on-click="() =&gt; this.clickBack()">
                    <span class="d-flex flex-grow-1 align-items-center" t-esc="backBtnName"/>
                </button>
            </div>
        </div>
    </t>
`);
registerTemplate("point_of_sale.PartnerLine", `/point_of_sale/static/src/app/screens/partner_list/partner_line/partner_line.xml`, `<t t-name="point_of_sale.PartnerLine" xml:space="preserve">
        <t t-if="ui.isSmall">
            <div class="partner-info d-flex flex-column p-1 border-bottom" t-att-class="{'bg-primary-subtle': props.isSelected}" t-att-data-id="props.partner.id" t-on-click="() =&gt; this.props.onClickPartner(props.partner)">
                <div class="d-flex justify-content-between align-items-center p-1">
                    <div>
                        <b t-esc="props.partner.name or ''"/>
                        <div class="company-field text-bg-muted" t-esc="props.partner.parent_name or ''"/>
                    </div>
                    <Dropdown>
                        <button class="btn btn-ligth fa fa-bars"/>
                        <t t-set-slot="content">
                            <DropdownItem onSelected="() =&gt; props.onClickEdit(props.partner)">
                                Edit Details
                            </DropdownItem>
                            <DropdownItem onSelected="() =&gt; props.onClickOrders(props.partner)">
                                All Orders
                            </DropdownItem>
                        </t>
                    </Dropdown>
                </div>
                <div class="partner-line-adress p-1" t-if="props.partner.contact_address" t-esc="props.partner.contact_address"/>
                <div class="partner-line-email p-1">
                    <div class="mb-1" t-if="props.partner.phone">
                        <i class="fa fa-fw fa-phone me-2"/><t t-esc="props.partner.phone"/>
                    </div>
                    <div class="mb-1" t-if="props.partner.mobile">
                        <i class="fa fa-fw fa-mobile me-2"/><t t-esc="props.partner.mobile"/>
                    </div>
                    <div t-if="props.partner.email" class="email-field mb-1">
                        <i class="fa fa-fw fa-paper-plane-o me-2"/><t t-esc="props.partner.email"/>
                    </div>
                </div>
                <div class="d-flex justify-content-between align-items-center p-1">
                    <button t-if="props.isSelected" t-on-click.stop="props.onClickUnselect" class="unselect-tag-mobile d-inline-block d-lg-none btn btn-light border ms-2">
                        <i class="fa fa-times me-1"/>
                        <span>UNSELECT</span>
                    </button>
                </div>
            </div>
        </t>
        <t t-else="">
            <tr class="partner-line partner-info" t-att-class="{'selected': props.isSelected}" t-att-data-id="props.partner.id" t-on-click="() =&gt; this.props.onClickPartner(props.partner)">
                <td>
                    <b t-esc="props.partner.name or ''"/>
                    <div class="company-field text-bg-muted" t-esc="props.partner.parent_name or ''"/>
                </td>
                <td>
                    <div class="partner-line-adress" t-if="props.partner.contact_address" t-esc="props.partner.contact_address"/>
                </td>
                <td class="partner-line-email ">
                    <div t-if="props.partner.phone">
                        <i class="fa fa-fw fa-phone me-2"/><t t-esc="props.partner.phone"/>
                    </div>
                    <div t-if="props.partner.mobile">
                        <i class="fa fa-fw fa-mobile me-2"/><t t-esc="props.partner.mobile"/>
                    </div>
                    <div t-if="props.partner.email" class="email-field">
                        <i class="fa fa-fw fa-paper-plane-o me-2"/><t t-esc="props.partner.email"/>
                    </div>
                </td>

                <td class="partner-line-balance" t-if="props.isBalanceDisplayed"/>
                <td class="edit-partner-button-cell align-middle pe-0">
                    <button t-if="props.isSelected" t-on-click.stop="props.onClickUnselect" class="unselect-tag d-lg-inline-block d-none btn btn-link btn-lg mt-1 float-end">
                        <i class="fa fa-check"/>
                    </button>
                </td>
                <td class="edit-partner-button-cell align-middle">
                    <Dropdown>
                        <button class="btn btn-light btn-lg lh-lg border float-end">
                            <i class="fa fa-fw fa-bars"/>
                        </button>
                        <t t-set-slot="content">
                            <DropdownItem onSelected="() =&gt; props.onClickEdit(props.partner)">
                                Edit Details
                            </DropdownItem>
                            <DropdownItem onSelected="() =&gt; props.onClickOrders(props.partner)">
                                All Orders
                            </DropdownItem>
                        </t>
                    </Dropdown>
                </td>
            </tr>
        </t>
    </t>

`);
registerTemplate("point_of_sale.PartnerList", `/point_of_sale/static/src/app/screens/partner_list/partner_list.xml`, `<t t-name="point_of_sale.PartnerList" xml:space="preserve">
        <Dialog bodyClass="'partner-list overflow-y-auto'" contentClass="'h-100'">
            <t t-set-slot="header">
                <button t-if="!ui.isSmall" class="btn btn-primary btn-lg lh-lg" role="img" aria-label="Add a customer" t-on-click="() =&gt; this.editPartner()" title="Add a customer">
                Create 
                </button>
                <Input tModel="[state, 'query']" class="'ms-auto'" isSmall="ui.isSmall" placeholder.translate="Search Customers..." icon="{type: 'fa', value: 'fa-search'}" autofocus="true" debounceMillis="100"/>
            </t>
            <table class="table table-hover">
                <thead t-if="!ui.isSmall">
                    <tr>
                        <th class="py-2">Name</th>
                        <th class="py-2">Address</th>
                        <th class="partner-line-email py-2">Contact</th>
                        <th class="pos-right-align py-2" t-if="isBalanceDisplayed">Balance</th>
                        <th class="py-2"/>
                    </tr>
                </thead>
                <tbody>
                    <t t-foreach="getPartners()" t-as="partner" t-key="partner.id">
                        <PartnerLine close="props.close" partner="partner" isSelected="props.partner?.id === partner.id" isBalanceDisplayed="isBalanceDisplayed" onClickEdit.bind="(p) =&gt; this.editPartner(p)" onClickUnselect.bind="() =&gt; this.clickPartner()" onClickOrders.bind="(p) =&gt; this.goToOrders(p)" onClickPartner.bind="clickPartner"/>
                    </t>
                </tbody>
            </table>
            <div t-if="state.query" class="search-more-button d-flex justify-content-center my-2">
                <button class="btn btn-lg btn-primary" t-on-click="onEnter">Search more</button>
            </div>
            <t t-set-slot="footer">
                <div class="d-flex justify-content-start flex-wrap gap-2 w-100">
                    <button t-if="ui.isSmall" class="btn btn-primary btn-lg lh-lg" role="img" aria-label="Add a customer" t-on-click="() =&gt; this.editPartner()" title="Add a customer">
                    New 
                    </button>
                    <button class="btn btn-secondary btn-lg lh-lg o-default-button" t-on-click="() =&gt; this.clickPartner(this.props.partner)">Discard</button>
                </div>
            </t>
        </Dialog>
    </t>

`);
registerTemplate("point_of_sale.PaymentScreenPaymentLines", `/point_of_sale/static/src/app/screens/payment_screen/payment_lines/payment_lines.xml`, `<t t-name="point_of_sale.PaymentScreenPaymentLines" xml:space="preserve">
            <div class="paymentlines d-flex flex-column overflow-y-auto gap-1">
                <t t-foreach="props.paymentLines" t-as="line" t-key="line.uuid">
                    <t t-if="line.isSelected()">
                        <div t-attf-class="paymentline selected d-flex align-items-center {{ this.ui.isSmall ? 'bg-100' : 'bg-200'}} border rounded-3" t-att-class="selectedLineClass(line)">
                            <div class="payment-infos d-flex align-items-center justify-content-between flex-grow-1 px-3 py-3 text-truncate cursor-pointer fs-2" t-on-click="() =&gt; this.selectLine(line)">
                                 <span class="payment-name"><t t-esc="line.payment_method_id.name"/></span>
                                 <div class="payment-amount px-3">
                                    <t t-esc="env.utils.formatCurrency(line.get_amount())"/>
                                </div>
                            </div>
                            <t t-if="!line.payment_status or !['done', 'reversed', 'waitingCard', 'waitingCapture'].includes(line.payment_status)">
                                <button class="delete-button btn btn-link mx-2 px-3" t-on-click="() =&gt; this.props.deleteLine(line.uuid)" aria-label="Delete" title="Delete">
                                    <i class="oi oi-close text-danger"/>
                                </button>
                            </t>
                           <t t-elif="line.payment_status and ['waitingCard', 'waitingCapture'].includes(line.payment_status)">
                                <div class="mx-2 px-3">
                                    <i class="fa fa-circle-o-notch fa-spin" role="img"/>
                                </div>
                            </t>
                        </div>
                        <t t-if="line and line.payment_status">
                            <div t-attf-class="{{ this.ui.isSmall ? 'bg-100' : 'bg-200'}} paymentline electronic_payment">
                                <t t-if="line.payment_status == 'pending'">
                                    <div class="electronic_status">
                                        Payment request pending
                                    </div>
                                    <div class="button send_payment_request highlight text-bg-primary" title="Send Payment Request" t-on-click="() =&gt; this.props.sendPaymentRequest(line)">
                                        Send
                                    </div>
                                </t>
                                <t t-elif="line.payment_status == 'retry'">
                                    <div class="electronic_status">
                                        Transaction cancelled
                                    </div>
                                    <div class="button send_payment_request highlight text-bg-primary" title="Send Payment Request" t-on-click="() =&gt; this.props.sendPaymentRequest(line)">
                                        Retry
                                    </div>
                                </t>
                                <t t-elif="line.payment_status == 'force_done'">
                                    <div class="electronic_status">
                                        Connection error
                                    </div>
                                    <div class="button send_force_done" title="Force Done" t-on-click="() =&gt; this.props.sendForceDone(line)">
                                        Force done
                                    </div>
                                </t>
                                <t t-elif="line.payment_status == 'waitingCard'">
                                    <div class="electronic_status">
                                        Waiting for card
                                    </div>
                                    <div class="button send_payment_cancel" title="Cancel Payment Request" t-on-click="() =&gt; this.props.sendPaymentCancel(line)">
                                        Cancel
                                    </div>
                                </t>
                                <t t-elif="['waiting', 'waitingCancel', 'waitingCapture'].includes(line.payment_status)">
                                    <div class="electronic_status">
                                        Request sent
                                    </div>
                                    <div>
                                        <i class="fa fa-circle-o-notch fa-spin" role="img"/>
                                    </div>
                                </t>
                                <t t-elif="line.payment_status == 'reversing'">
                                    <div class="electronic_status">
                                        Reversal request sent to terminal
                                    </div>
                                    <div>
                                        <i class="fa fa-circle-o-notch fa-spin" role="img"/>
                                    </div>
                                </t>
                                <t t-elif="line.payment_status == 'done'">
                                    <div class="electronic_status">
                                        Payment Successful
                                    </div>
                                    <t t-if="line.can_be_reversed">
                                        <div class="button send_payment_reversal" title="Reverse Payment" t-on-click="() =&gt; this.props.sendPaymentReverse(line)">
                                            Reverse
                                        </div>
                                    </t>
                                    <t t-else="">
                                        <div/>
                                    </t>
                                </t>
                                <t t-elif="line.payment_status == 'reversed'">
                                    <div class="electronic_status">
                                        Payment reversed
                                    </div>
                                    <div/>
                                </t>
                            </div>
                        </t>
                    </t>
                    <t t-else="">
                        <div class="paymentline d-flex align-items-center bg-view border rounded-3" t-att-class="unselectedLineClass(line)">
                             <div class="payment-infos d-flex align-items-center justify-content-between flex-grow-1 px-3 py-3 text-truncate cursor-pointer fs-2" t-on-click="() =&gt; this.selectLine(line)">
                                 <t t-esc="line.payment_method_id.name"/>
                                 <div class="payment-amount px-3">
                                    <t t-esc="env.utils.formatCurrency(line.get_amount())"/>
                                </div>
                             </div>
                            <t t-if="!line.payment_status or !['done', 'reversed'].includes(line.payment_status)">
                                <div class="delete-button delete-button btn btn-link mx-2 px-3" t-on-click="() =&gt; this.props.deleteLine(line.uuid)" aria-label="Delete" title="Delete">
                                    <i class="oi oi-close text-danger"/>
                                </div>
                            </t>
                        </div>
                    </t>
                </t>
            </div>
    </t>

`);
registerTemplate("point_of_sale.PaymentScreen", `/point_of_sale/static/src/app/screens/payment_screen/payment_screen.xml`, `<t t-name="point_of_sale.PaymentScreen" xml:space="preserve">
        <t t-if="ui.isSmall">
            <div class="payment-screen screen d-flex flex-column h-100 p-2 bg-200">
                <t t-call="point_of_sale.PaymentScreenDue"/>
                <t t-call="point_of_sale.PaymentScreenMethods"/>
                <div class="d-flex flex-grow-1 flex-column overflow-y-auto gap-1">
                    <PaymentScreenStatus order="currentOrder"/>
                    <PaymentScreenPaymentLines paymentLines="paymentLines" deleteLine.bind="deletePaymentLine" sendForceDone.bind="sendForceDone" sendPaymentReverse.bind="sendPaymentReverse" sendPaymentCancel.bind="sendPaymentCancel" sendPaymentRequest.bind="sendPaymentRequest" selectLine.bind="selectPaymentLine" updateSelectedPaymentline.bind="updateSelectedPaymentline"/>
                </div>
                <t t-call="point_of_sale.PaymentScreenButtons"/>
                <div t-attf-class="d-flex switchpane gap-2 mt-2">
                    <t t-call="point_of_sale.PaymentScreenBack"/>
                    <t t-call="point_of_sale.PaymentScreenValidate"/>
                </div>
            </div>
        </t>
        <t t-else="">
            <div class="payment-screen screen d-flex flex-column h-100 ">
                <div class="main-content d-flex gap-2 h-100 bg-200 overflow-auto">
                    <div class="left-content d-flex flex-column col-md-4 p-2">
                        <t t-call="point_of_sale.PaymentScreenMethods"/>
                        <t t-call="point_of_sale.PaymentScreenButtons"/>
                        <Numpad class="'py-2'" buttons="getNumpadButtons()"/>
                        <div t-attf-class="d-flex flex-row gap-2">
                            <t t-call="point_of_sale.PaymentScreenBack"/>
                            <t t-call="point_of_sale.PaymentScreenValidate"/>
                        </div>
                    </div>
                    <div class="center-content d-flex flex-column flex-grow-1 gap-2 py-2">
                        <t t-call="point_of_sale.PaymentScreenDue"/>
                        <div class="payment-summary d-flex flex-grow-1 flex-column gap-2 overflow-y-auto justify-content-center rounded-3 bg-view">
                            <PaymentScreenStatus order="currentOrder"/>
                            <PaymentScreenPaymentLines paymentLines="paymentLines" deleteLine.bind="deletePaymentLine" sendForceDone.bind="sendForceDone" sendPaymentReverse.bind="sendPaymentReverse" sendPaymentCancel.bind="sendPaymentCancel" sendPaymentRequest.bind="sendPaymentRequest" selectLine.bind="selectPaymentLine" updateSelectedPaymentline.bind="updateSelectedPaymentline"/>
                        </div>
                    </div>
                </div>
            </div>
        </t>
    </t>

    `);
registerTemplate("point_of_sale.PaymentScreenDue", `/point_of_sale/static/src/app/screens/payment_screen/payment_screen.xml`, `<t t-name="point_of_sale.PaymentScreenDue" xml:space="preserve">
        <section class="paymentlines-container rounded-3 bg-view" t-att-class="{'paymentlines-empty': paymentLines.length === 0 }">
            <div class="total text-center py-2 py-lg-4 text-success">
                <t t-esc="this.env.utils.formatCurrency(currentOrder.getTotalDue())"/>
            </div>
        </section>
    </t>

    `);
registerTemplate("point_of_sale.PaymentScreenValidate", `/point_of_sale/static/src/app/screens/payment_screen/payment_screen.xml`, `<t t-name="point_of_sale.PaymentScreenValidate" xml:space="preserve">
        <t t-if="ui.isSmall">
            <button class="btn-switchpane validation-button btn btn-primary btn-lg flex-fill py-3 lh-lg" t-att-class="{ secondary: !(currentOrder.is_paid() and currentOrder._isValidEmptyOrder()) }" t-on-click="() =&gt; this.validateOrder()">
                <span>Validate</span>
            </button>
        </t>
        <t t-else="">
            <button class="button next validation btn btn-primary btn-lg w-50 py-3 lh-lg" t-attf-class="{{currentOrder.is_paid() and currentOrder._isValidEmptyOrder() ? 'highlight' : 'disabled'}}" t-on-click="() =&gt; this.validateOrder()">
                <span class="next_text">Validate</span>
            </button>
        </t>
    </t>

    `);
registerTemplate("point_of_sale.PaymentScreenBack", `/point_of_sale/static/src/app/screens/payment_screen/payment_screen.xml`, `<t t-name="point_of_sale.PaymentScreenBack" xml:space="preserve">
        <t t-if="ui.isSmall">
            <button class="btn-switchpane back-button validation-button btn btn-light btn-lg lh-lg " t-on-click="() =&gt; pos.onClickBackButton()">
                <i class="oi oi-chevron-left fa-fw" role="img" aria-label="Go Back" title="Go Back"/>
            </button>
        </t>
        <t t-else="">
            <button class="button back back-button validation btn btn-light btn-lg w-50 py-3 lh-lg " t-on-click="() =&gt; pos.onClickBackButton()">
                <span class="back_text">Back</span>
            </button>
        </t>
    </t>

    `);
registerTemplate("point_of_sale.PaymentScreenButtons", `/point_of_sale/static/src/app/screens/payment_screen/payment_screen.xml`, `<t t-name="point_of_sale.PaymentScreenButtons" xml:space="preserve">
        <div class="payment-buttons d-flex flex-column gap-2">
            <div class="d-flex flex-column flex-sm-row gap-2 w-100">
                <t t-set="hasOptionalButtons" t-value="pos.config.iface_tipproduct and pos.config.tip_product_id or pos.config.iface_cashdrawer or pos.config.ship_later"/>
                <button class="button partner-button btn btn-light btn-lg w-100 w-md-50 lh-lg text-truncate" t-att-class="{ 'highlight text-action': currentOrder.get_partner() }" t-on-click="() =&gt; this.pos.selectPartner()">
                    <i class="fa fa-user me-2" role="img" title="Customer"/>
                    <span class="partner-name">
                        <t t-if="currentOrder.get_partner()" t-esc="currentOrder.get_partner().name"/>
                        <t t-else="">Customer</t>
                    </span>
                </button>
                <button class="button js_invoice btn btn-light btn-lg d-flex justify-content-between align-items-baseline w-100 w-md-50 lh-lg" t-att-class="{ 'highlight active': currentOrder.is_to_invoice() }" t-on-click="toggleIsToInvoice">
                    <span><i class="fa fa-file-text-o me-2"/>Invoice</span>
                    <i class="fa me-2" t-attf-class="{{ currentOrder.is_to_invoice() ? 'fa-check-square text-action' : 'fa-square-o' }}"/> 
                </button>
            </div>
            <div t-if="(pos.config.iface_tipproduct and pos.config.tip_product_id) or pos.config.iface_cashdrawer or pos.config.ship_later" class="d-flex flex-column gap-2 w-100">
                <button t-if="pos.config.iface_tipproduct and pos.config.tip_product_id" class="button btn btn-light btn-lg d-flex justify-content-between align-items-baseline w-100 lh-lg" t-att-class="{ 'highlight active text-action': currentOrder.get_tip() }" t-on-click="addTip">
                    <span t-attf-class="{{currentOrder.get_tip() ? 'me-auto' : 'mx-auto' }}"><i class="fa fa-heart me-2"/>Tip</span>
                    <t t-if="currentOrder.get_tip() != 0">
                        <t t-esc="env.utils.formatCurrency(currentOrder.get_tip())"/>
                    </t>
                </button>
                <button t-if="pos.config.iface_cashdrawer" class="button col js_cashdrawer btn btn-light py-3 text-start rounded-0 border-top border-start border-end" t-on-click="openCashbox">
                    <i class="fa fa-archive me-2"/>Open Cashbox 
                </button>
                <button t-if="pos.config.ship_later" class="button btn btn-light btn-lg d-flex justify-content-between align-items-baseline w-100 lh-lg" t-att-class="{ 'highlight active text-action': currentOrder.getShippingDate() }" t-on-click="toggleShippingDatePicker">
                    <span t-attf-class="{{currentOrder.getShippingDate() ? 'me-auto' : 'mx-auto' }}"><i class="fa fa-clock-o me-2"/>Ship Later</span>
                    <span t-if="currentOrder.getShippingDate()">
                        <t t-esc="currentOrder.getShippingDate()"/>
                    </span>
                </button>
            </div>
        </div>
    </t>

    `);
registerTemplate("point_of_sale.PaymentScreenMethods", `/point_of_sale/static/src/app/screens/payment_screen/payment_screen.xml`, `<t t-name="point_of_sale.PaymentScreenMethods" xml:space="preserve">
        <div class="paymentmethods-container mb-3" t-att-class="ui.isSmall ? 'my-2 rounded-3' : 'flex-grow-1'">
            <div class="paymentmethods  gap-1 gap-lg-2" t-att-class="{ 'd-grid p-1 gap-1 overflow-y-auto rounded-3 bg-300': ui.isSmall, 'd-flex flex-column gap-lg-2': !ui.isSmall }">
                <t t-foreach="payment_methods_from_config" t-as="paymentMethod" t-key="paymentMethod.id">
                    <div class="button paymentmethod btn btn-light btn-lg lh-lg flex-fill" t-att-class="{'opacity-50': this.pos.paymentTerminalInProgress and paymentMethod.use_payment_terminal}" t-on-click="() =&gt; this.addNewPaymentLine(paymentMethod)">
                        <div class="payment-method-display d-flex align-items-center gap-2 text-wrap text-start lh-sm">
                            <img class="payment-method-icon" t-att-src="paymentMethodImage(paymentMethod.id)"/>
                            <span class="payment-name" t-esc="pos.getPaymentMethodDisplayText(paymentMethod, currentOrder)"/>
                        </div>
                    </div>
                </t>
            </div>
        </div>
    </t>

`);
registerTemplate("point_of_sale.PaymentScreenStatus", `/point_of_sale/static/src/app/screens/payment_screen/payment_status/payment_status.xml`, `<t t-name="point_of_sale.PaymentScreenStatus" xml:space="preserve">
        <div t-if="props.order.payment_ids.length == 0" class="text-center py-4 fs-4 my-auto">
    Please select a payment method 
        </div>
        <section t-else="" t-attf-class="paymentlines-container p-3 rounded-3 border {{ props.order.get_due() &gt; 0 ? 'bg-danger-subtle border-danger text-danger' : 'bg-success-subtle border-success text-success'}}">
            <div class="payment-status-container d-flex flex-column-reverse flex-lg-row justify-content-between fs-2 pe-4 me-2">
                <div t-if="this.props.order.hasRemainingAmount()" class="payment-status-remaining d-flex justify-content-between flex-grow-1">
                    <span class="label pe-2">Remaining</span>
                    <span class="amount align-self-end pe-5" t-att-class="{ 'highlight text-danger fw-bolder': props.order.get_due() &gt; 0 }">
                        <t t-esc="remainingText"/>
                    </span>
                </div>
                <div t-else="" class="payment-status-change d-flex justify-content-between flex-grow-1">
                    <span class="label pe-2">Change</span>
                    <span class="amount align-self-end pe-5" t-att-class="{ 'highlight text-success fw-bolder': props.order.get_change() &gt; 0 }">
                        <t t-esc="changeText"/>
                    </span>
                </div>
            </div>
        </section>
    </t>
`);
registerTemplate("point_of_sale.ActionpadWidget", `/point_of_sale/static/src/app/screens/product_screen/action_pad/action_pad.xml`, `<t t-name="point_of_sale.ActionpadWidget" xml:space="preserve">
        <div class="actionpad d-flex flex-column gap-2">
            <div t-if="ui.isSmall" class="d-flex gap-2">
                <BackButton t-if="!props.showActionButton and pos.showBackButton()" onClick="() =&gt; pos.onClickBackButton()"/>
                <SelectPartnerButton partner="props.partner"/>
                <button class="button mobile-more-button btn btn-light btn-lg flex-fill" t-if="props.onClickMore" t-on-click="props.onClickMore">
                    <span>Actions</span>
                </button>
            </div>
            <div t-if="props.showActionButton" class="validation d-flex gap-2">
                <BackButton t-if="pos.showBackButton()" onClick="() =&gt; pos.onClickBackButton()"/>
                <button class="pay pay-order-button button btn btn-primary btn-lg py-3 d-flex align-items-center justify-content-center flex-fill" t-on-click="props.actionToTrigger" t-esc="props.actionName"/>
            </div>
        </div>
    </t>

`);
registerTemplate("point_of_sale.BackButton", `/point_of_sale/static/src/app/screens/product_screen/action_pad/back_button/back_button.xml`, `<t t-name="point_of_sale.BackButton" xml:space="preserve">
        <button class="back-button btn btn-light btn-lg lh-lg" t-on-click="props.onClick">
            <i class="oi oi-chevron-left fa-fw" role="img" aria-label="Go Back" title="Go Back"/>
        </button>
    </t>

`);
registerTemplate("point_of_sale.ControlButtons", `/point_of_sale/static/src/app/screens/product_screen/control_buttons/control_buttons.xml`, `<t t-name="point_of_sale.ControlButtons" xml:space="preserve">

        <SelectPartnerButton partner="partner" t-if="!props.showRemainingButtons"/>
        <t t-if="!props.showRemainingButtons || (ui.isSmall and props.showRemainingButtons)">
            <OrderlineNoteButton label="internalNoteLabel()" getter="(orderline) =&gt; orderline.getNote()" class="buttonClass" setter="(orderline, note) =&gt; orderline.setNote(note)"/>
        </t>
        <button class="btn btn-light btn-lg flex-shrink-0 ms-auto" t-if="!props.showRemainingButtons and !ui.isSmall and props.onClickMore" t-on-click="props.onClickMore">
            Actions
        </button>

        <t t-if="props.showRemainingButtons">
            <div class="control-buttons control-buttons-modal d-grid gap-2 mt-2">
                <OrderlineNoteButton class="buttonClass" label="internalNoteLabel(this.pos.get_order())"/>
                <OrderlineNoteButton class="buttonClass" icon="'fa fa-sticky-note'"/>
                <button class="o_pricelist_button btn btn-secondary btn-lg py-5" t-on-click="() =&gt; this.clickPricelist()">
                    <i class="fa fa-th-list me-2" role="img" aria-label="Price list" title="Price list"/>
                    <t t-if="currentOrder?.pricelist_id" t-esc="currentOrder.pricelist_id.display_name"/>
                    <t t-else="">Pricelist</t>
                </button>
                <button class="btn btn-secondary btn-lg py-5" t-on-click="() =&gt; this.clickRefund()">
                    <i class="fa fa-undo me-1" role="img" aria-label="Refund" title="Refund"/>
                    Refund
                </button>
                <button t-if="pos.models['account.fiscal.position'].length" class="control-button o_fiscal_position_button" t-att-class="buttonClass" t-on-click="() =&gt; this.clickFiscalPosition()">
                    <i class="fa fa-book me-1" role="img" aria-label="Set fiscal position" title="Set fiscal position"/>
                    <t t-if="currentOrder?.fiscal_position_id" t-esc="currentOrder.fiscal_position_id.display_name"/>
                    <t t-else="">Tax</t>
                </button>
                <button class="btn btn-secondary btn-lg py-5" t-on-click="() =&gt; this.pos.onDeleteOrder(this.pos.get_order())">
                    <i class="fa fa-trash me-1" role="img"/> Cancel Order 
                </button>
            </div>
        </t>
    </t>
`);
registerTemplate("point_of_sale.OrderlineNoteButton", `/point_of_sale/static/src/app/screens/product_screen/control_buttons/customer_note_button/customer_note_button.xml`, `<t t-name="point_of_sale.OrderlineNoteButton" xml:space="preserve">
        <button t-attf-class="{{this.props.class}} flex-shrink-0" t-att-disabled="!pos.get_order()?.get_selected_orderline()" t-on-click="onClick">
            <t t-if="this.props.icon">
                <i t-attf-class="{{this.props.icon}} me-1"/>
            </t>
            <span t-esc="this.props.label"/>
        </button>
    </t>
`);
registerTemplate("point_of_sale.SelectPartnerButton", `/point_of_sale/static/src/app/screens/product_screen/control_buttons/select_partner_button/select_partner_button.xml`, `<t t-name="point_of_sale.SelectPartnerButton" xml:space="preserve">
        <button class="set-partner btn btn-light btn-lg lh-lg text-truncate w-auto" t-on-click="() =&gt; this.pos.selectPartner()">
            <div t-if="props.partner" t-esc="props.partner.name" class="text-truncate text-action"/>
            <t t-else="">Customer</t>
        </button>
    </t>
`);
registerTemplate("point_of_sale.OrderSummary", `/point_of_sale/static/src/app/screens/product_screen/order_summary/order_summary.xml`, `<t t-name="point_of_sale.OrderSummary" xml:space="preserve">
      <OrderWidget lines="currentOrder.getSortedOrderlines()" t-slot-scope="scope" class="'bg-light'" taxTotals="currentOrder.taxTotals" generalNote="currentOrder.general_note or ''">
          <t t-set="line" t-value="scope.line"/>
          <Orderline line="line.getDisplayData()" t-on-click="(event) =&gt; this.clickLine(event, line)" class="{ ...line.getDisplayClasses(), 'selected' : line.isSelected() }">
              <t t-set-slot="product-name">


                  <i t-if="line.get_product()?.isTracked()" t-on-click.stop="() =&gt; this.editPackLotLines(line)" role="img" t-attf-class="{{ line.has_valid_product_lot() ? 'text-success' : 'text-danger'}} fa fa-list line-lot-icon ms-1" t-attf-title="{{ line.has_valid_product_lot() ? 'Valid product lot' : 'Invalid product lot'}}"/>
              </t>
          </Orderline>
          <t t-set-slot="details"/>
      </OrderWidget>
    </t>
`);
registerTemplate("point_of_sale.ProductInfoPopup", `/point_of_sale/static/src/app/screens/product_screen/product_info_popup/product_info_popup.xml`, `<t t-name="point_of_sale.ProductInfoPopup" xml:space="preserve">
        <Dialog title.translate="Product information">
            <ProductInfoBanner t-if="!props.product.isConfigurable()" product="props.product" info="props.info"/>
            <div class="section-inventory mt-3 mb-4 pb-4 border-bottom text-start" t-if="!isVariant and props.info.productInfo.warehouses.length &gt; 0">
                <h3 class="section-title">
                    Inventory
                    <t t-if="pos.session.update_stock_at_closing">(as of opening)</t>
                </h3>
                <div class="section-inventory-body">
                    <t t-foreach="props.info.productInfo.warehouses" t-as="warehouse" t-key="warehouse.name">
                        <div class="d-flex flex-column flex-md-row gap-2">
                            <div>
                                <t t-esc="warehouse.name" class="table-name"/>
                                :
                            </div>
                            <div>
                                <span class="me-1 fw-bolder"><t t-esc="warehouse.available_quantity" class="table-name"/></span>
                                <t t-esc="warehouse.uom"/> available,
                            </div>
                            <div>
                                <span class="me-1 fw-bolder"><t t-esc="warehouse.forecasted_quantity"/></span>
                                forecasted
                            </div>
                        </div>
                    </t>
                </div>
            </div>
            <div class="section-supplier mt-3 mb-4 pb-4 border-bottom text-start" t-if="props.info.productInfo.suppliers.length &gt; 0">
                <h3 class="section-title">Replenishment</h3>
                <div class="section-supplier-body">
                    <t t-foreach="props.info.productInfo.suppliers" t-as="supplier" t-key="supplier.id">
                        <div class="d-flex flex-column flex-md-row gap-2">
                            <div>
                                <span t-esc="supplier.name" class="table-name"/>:
                            </div>
                            <span class="me-1 fw-bolder">
                                <t t-esc="supplier.delay"/> 
                                Days
                            </span>
                            <span t-if="_hasMarginsCostsAccessRights()">
                                <t t-esc="env.utils.formatCurrency(supplier.price)"/>
                            </span>
                        </div>
                    </t>
                </div>
            </div>
            <div class="financials-order d-grid gap-2 mt-3" style="grid-template-columns: repeat(2, 1fr);">
                <div class="section-financials text-start">
                    <h3 class="section-title">Financials</h3>
                    <div class="section-financials-body d-flex flex-column">
                        <table class="table table-borderless mb-0">
                            <tr>
                                <td>Price excl. Tax:</td>
                                <td><t t-esc="env.utils.formatCurrency(props.info.productInfo.all_prices.price_without_tax)"/></td>
                            </tr>
                            <tr t-if="_hasMarginsCostsAccessRights()">
                                <td>Cost:</td>
                                <td><t t-esc="props.info.costCurrency"/></td>
                            </tr>
                            <tr t-if="_hasMarginsCostsAccessRights()">
                                <td>Margin:</td>
                                <td><t t-esc="props.info.marginCurrency"/> (<t t-esc="props.info.marginPercent"/>%) </td>
                            </tr>
                        </table>
                        <table class="table table-borderless">
                            <t t-foreach="props.info.productInfo.pricelists" t-as="pricelist" t-key="pricelist.name">
                                <tr>
                                    <td t-esc="pricelist.name"/>
                                    <td t-esc="env.utils.formatCurrency(pricelist.price)"/>
                                </tr>
                            </t>
                        </table>
                    </div>
                </div>
                <div class="section-order text-start">
                    <h3 class="section-title">Order</h3>
                    <div class="section-order-body">
                        <table class="table table-borderless w-100 mb-0">
                            <tr>
                                <td>Total Price excl. Tax:</td>
                                <td t-esc="props.info.orderPriceWithoutTaxCurrency" class="table-value"/>
                            </tr>
                            <tr t-if="_hasMarginsCostsAccessRights()">
                                <td>Total Cost:</td>
                                <td t-esc="props.info.orderCostCurrency" class="table-value"/>
                            </tr>
                            <tr t-if="_hasMarginsCostsAccessRights()">
                                <td>Total Margin:</td>
                                <td class="table-value"><t t-esc="props.info.orderMarginCurrency"/> (<t t-esc="props.info.orderMarginPercent"/>%)</td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
            <t t-set-slot="footer">
                <button class="btn btn-primary btn-lg lh-lg" t-on-click="props.close">Ok</button>
                <button t-if="allowProductEdition" class="btn btn-secondary btn-lg lh-lg" t-on-click="editProduct">Edit</button>
            </t>
        </Dialog>
    </t>
`);
registerTemplate("point_of_sale.ProductScreen", `/point_of_sale/static/src/app/screens/product_screen/product_screen.xml`, `<t t-name="point_of_sale.ProductScreen" xml:space="preserve">
        <div class="product-screen d-flex h-100">
            <div t-att-class="{'flex-grow-1 w-100 mw-100': ui.isSmall, 'd-none': ui.isSmall and pos.mobile_pane !== 'left'}" class="leftpane d-flex flex-column p-2">
                <OrderSummary/>
                <div class="pads">
                    <div t-attf-class="control-buttons d-flex justify-content-between gap-2 w-100 py-2">
                        <ControlButtons t-if="!ui.isSmall" onClickMore.bind="displayAllControlPopup"/>
                    </div>
                    <div class="subpads d-flex flex-column gap-2">
                        <Numpad t-if="!currentOrder?.is_empty() and pos.get_order()?.uiState.selected_orderline_uuid" class="'d-grid m-n1'" buttons="getNumpadButtons()" onClick.bind="onNumpadClick"/>
                        <ActionpadWidget partner="currentOrder?.get_partner()" onClickMore.bind="displayAllControlPopup" actionName.translate="Payment" actionToTrigger="() =&gt; pos.pay()" showActionButton="!currentOrder?.is_empty()"/>
                    </div>
                </div>
            </div>
            <div class="rightpane d-flex flex-grow-1 flex-column" t-if="!ui.isSmall || pos.mobile_pane === 'right'">
                <div class="position-relative d-flex flex-column flex-grow-1 overflow-hidden">
                    <CategorySelector t-if="!ui.isSmall || !pos.scanning" class="'p-2'" categories="getCategoriesAndSub()" onClick="(id) =&gt; this.pos.setSelectedCategory(id)"/>
                    <CameraBarcodeScanner t-if="pos.scanning"/>
                    <div t-elif="productsToDisplay.length != 0 and pos.session._has_available_products" t-attf-class="product-list {{this.pos.productListViewMode}} overflow-y-auto px-2 pt-0 pb-2">
                        <ProductCard t-foreach="productsToDisplay" t-as="product" t-key="product.id" productId="product.id" product="product" class="pos.productViewMode" name="getProductName(product)" color="product.pos_categ_ids?.at(-1)?.color" price="this.getProductPrice(product)" imageUrl="pos.config.show_product_images and this.getProductImage(product)" onClick.bind="() =&gt; this.addProductToOrder(product)" productInfo="true" productCartQty="this.state.quantityByProductTmplId[product.raw.product_tmpl_id]" onProductInfoClick.bind="() =&gt; this.onProductInfoClick(product)"/>
                    </div>
                    <div t-else="" class="flex-grow-1 text-center mt-5">
                        <p t-if="searchWord">No products found for <b>"<t t-esc="searchWord"/>"</b> in this category.</p>
                        <p t-elif="pos.session._has_available_products">There are no products in this category.</p>
                    </div>
                    <div t-if="searchWord" class="search-more-button d-flex justify-content-center m-2">
                        <button class="btn btn-primary btn-lg lh-lg" t-on-click="onPressEnterKey">Search more</button>
                    </div>
                    <t t-if="ui.isSmall">
                        <div class="product-reminder position-absolute bottom-0 d-flex justify-content-center align-items-center w-100 py-1 px-2" t-if="pos.get_order().get_selected_orderline() and pos.hasJustAddedProduct" t-key="animationKey">
                            <span class="flex-fill py-2 rounded-3 text-bg-info text-center fw-bolder"><t t-esc="selectedOrderlineQuantity"/> <t t-esc="selectedOrderlineDisplayName"/> <t t-esc="selectedOrderlineTotal"/></span>
                        </div>
                    </t>
                </div>
                <t t-if="ui.isSmall">
                    <div class="switchpane d-flex gap-2 p-2 border-top bg-view">
                        <button t-if="!pos.scanning" class="btn-switchpane pay-button btn btn-lg w-50" t-attf-class="{{ currentOrder.is_empty() ? 'btn-secondary' : 'btn-primary' }}" t-on-click="() =&gt; this.pos.pay()">
                            <span class="d-block">Pay</span>
                            <span t-esc="total"/>
                        </button>
                        <button class="btn-switchpane btn btn-secondary review-button w-50" t-on-click="switchPane">
                            <span class="d-block">Cart</span>
                            <small><t t-esc="items"/> items</small>
                        </button>
                        <button t-if="pos.scanning" class="btn-switchpane btn btn-secondary btn-lg w-50" t-on-click="() =&gt; this.pos.scanning = false">
                            <span class="d-block">Products</span>
                        </button>
                    </div>
                </t>
            </div>
        </div>
    </t>

`);
registerTemplate("point_of_sale.OrderReceipt", `/point_of_sale/static/src/app/screens/receipt_screen/receipt/order_receipt.xml`, `<t t-name="point_of_sale.OrderReceipt" xml:space="preserve">
        <div class="pos-receipt p-2">
            <t t-set="showTaxGroupLabels" t-value="doesAnyOrderlineHaveTaxLabel()"/>
            <ReceiptHeader data="props.data.headerData"/>
            <OrderWidget t-if="props.data.orderlines?.length" lines="props.data.orderlines" t-slot-scope="scope" generalNote="props.data.generalNote or ''" screenName="props.data.screenName">
                <t t-set="line" t-value="scope.line"/>
                <Orderline basic_receipt="props.basic_receipt" line="omit(scope.line, 'customerNote')" class="{ 'px-0': true }" showTaxGroupLabels="showTaxGroupLabels">
                    <li t-if="line.customerNote" class="customer-note w-100 p-2 my-1 rounded text-break">
                        <i class="fa fa-sticky-note me-1" role="img" aria-label="Customer Note" title="Customer Note"/>
                        <t t-esc="line.customerNote"/>
                    </li>
                </Orderline>
            </OrderWidget>
            <t t-if="!props.basic_receipt">
                <t t-set="taxTotals" t-value="props.data.taxTotals"/>
                <div t-if="taxTotals and taxTotals.has_tax_groups" class="pos-receipt-taxes">
                    <div class="text-center">--------------------------------</div>
                    <t t-foreach="taxTotals.subtotals" t-as="subtotal" t-key="subtotal.name">
                        <div class="d-flex">
                            <span t-if="showTaxGroupLabels" class="me-2" style="visibility: hidden;">A</span>
                            <span class="fw-bolder text-nowrap mw-100" t-out="subtotal.name"/>
                            <span t-esc="props.formatCurrency(subtotal.base_amount_currency)" class="ms-auto"/>
                        </div>

                        <div t-foreach="subtotal.tax_groups" t-as="tax_group" t-key="tax_group.id" class="d-flex">
                            <t t-if="showTaxGroupLabels">
                                <span t-if="tax_group.group_label" t-out="tax_group.group_label" class="me-2"/>
                                <span t-else="" class="me-2" style="visibility: hidden;">A</span>
                            </t>
                            <span>
                                <span t-esc="tax_group.group_name"/>
                                <t t-if="!taxTotals.same_tax_base">
                                    on
                                    <span t-esc="props.formatCurrency(tax_group.base_amount_currency)"/>
                                </t>
                            </span>
                            <span t-esc="props.formatCurrency(tax_group.tax_amount_currency)" class="ms-auto"/>
                        </div>
                    </t>
                </div>

                <div class="text-center">--------------------------------</div>
                <div class="pos-receipt-amount receipt-total">
                    <t t-out="props.data.label_total"/>
                    <span t-esc="props.formatCurrency(taxTotals.order_sign * taxTotals.order_total)" class="pos-receipt-right-align"/>
                </div>
                <t t-if="props.data.show_rounding">
                    <div class="pos-receipt-amount receipt-rounding">
                        <t t-out="props.data.label_rounding"/>
                        <span t-esc="props.formatCurrency(taxTotals.order_sign * taxTotals.order_rounding)" class="pos-receipt-right-align"/>
                    </div>
                    <div class="pos-receipt-amount receipt-to-pay">
                        To Pay
                        <span t-esc="props.formatCurrency(taxTotals.order_sign * (taxTotals.order_total + taxTotals.order_rounding))" class="pos-receipt-right-align"/>
                    </div>
                </t>



                <div class="paymentlines text-start" t-foreach="props.data.paymentlines" t-as="line" t-key="line_index">
                    <t t-esc="line.name"/>
                    <span t-esc="props.formatCurrency(line.amount)" class="pos-receipt-right-align"/>
                </div>

                <div t-if="props.data.show_change" class="pos-receipt-amount receipt-change">
                    <t t-out="props.data.label_change"/>
                    <span t-esc="props.formatCurrency(props.data.order_change)" class="pos-receipt-right-align"/>
                </div>



                <t t-if="props.data.total_discount">
                    <div class="text-center">
                        <t t-out="props.data.label_discounts"/>
                        <span t-esc="props.formatCurrency(props.data.total_discount)" class="pos-receipt-right-align"/>
                    </div>
                </t>

                <div class="before-footer"/>


                <div class="pos-receipt-order-data"/>

                <div t-if="props.data.pos_qr_code">
                    <br/>
                    <div class="pos-receipt-order-data mb-2">
                        Need an invoice for your purchase ?
                    </div>
                </div>

                <div t-if="['qr_code', 'qr_code_and_url'].includes(props.data.headerData.company.point_of_sale_ticket_portal_url_display_mode) and props.data.pos_qr_code" class="mb-2">
                    <img id="posqrcode" t-att-src="props.data.pos_qr_code" class="pos-receipt-logo"/>
                </div>

                <div t-if="props.data.pos_qr_code">
                    <div class="pos-receipt-order-data">
                        Unique Code: <t t-esc="props.data.ticket_code"/>
                    </div>
                </div>

                <div t-if="['url', 'qr_code_and_url'].includes(props.data.headerData.company.point_of_sale_ticket_portal_url_display_mode) and props.data.pos_qr_code">
                    <div class="pos-receipt-order-data" t-attf-class="{{ props.data.ticket_portal_url_display_mode === 'qr_code_and_url' ? 'mt-3' : '' }}">
                        Portal URL: <t t-esc="getPortalURL()"/>
                    </div>
                </div>
            </t>


           <div t-if="props.data.footer" class="pos-receipt-center-align" style="white-space:pre-line">
               <br/>
               <t t-esc="props.data.footer"/>
                <br/>
                <br/>
            </div>

            <div class="after-footer">
                <t t-foreach="props.data.paymentlines" t-as="line" t-key="line_index">
                    <t t-if="line.ticket">
                        <br/>
                        <div class="pos-payment-terminal-receipt">
                            <pre t-esc="line.ticket"/>
                        </div>
                    </t>
                </t>
            </div>

            <br/>
            <t t-if="props.data.shippingDate">
                <div class="pos-receipt-order-data">
                    Expected delivery:
                    <div><t t-esc="props.data.shippingDate"/></div>
                </div>
            </t>

            <br/>
            <div class="pos-receipt-order-data">
                <p>Powered by Odoo</p>
                <div t-esc="props.data.name"/>
                <div id="order-date" t-esc="props.data.date"/>
            </div>

        </div>
    </t>
`);
registerTemplate("point_of_sale.ReceiptHeader", `/point_of_sale/static/src/app/screens/receipt_screen/receipt/receipt_header/receipt_header.xml`, `<t t-name="point_of_sale.ReceiptHeader" xml:space="preserve">
        <img t-attf-src="/web/image?model=res.company&amp;id={{props.data.company.id}}&amp;field=logo" alt="Logo" class="pos-receipt-logo"/>
        <br/>
        <h1 class="tracking-number text-center" style="font-size: 100px" t-if="props.data.trackingNumber and props.data.bigTrackingNumber" t-esc="props.data.trackingNumber"/>
        <div class="d-flex flex-column align-items-center">
            <div class="pos-receipt-contact">

                <div t-if="props.data.company.name" t-esc="props.data.company.name"/>
                <t t-if="props.data.company.phone">
                    <div>Tel:<t t-esc="props.data.company.phone"/></div>
                </t>
                <t t-if="props.data.company.vat">
                    <div t-esc="vatText"/>
                </t>
                <div t-if="props.data.company.email" t-esc="props.data.company.email"/>
                <div t-if="props.data.company.website" t-esc="props.data.company.website"/>
                <div t-if="props.data.header" style="white-space:pre-line" t-esc="props.data.header"/>
                <div t-if="props.data.cashier" class="cashier">
                    <div>--------------------------------</div>
                    <div t-esc="props.data.cashier"/>
                </div>
                <div t-if="props.data.trackingNumber and !props.data.bigTrackingNumber">
                    <span class="tracking-number fs-1" t-esc="props.data.trackingNumber"/>
                </div>
            </div>
        </div>
        <br/>
    </t>
`);
registerTemplate("point_of_sale.ReceiptScreen", `/point_of_sale/static/src/app/screens/receipt_screen/receipt_screen.xml`, `<t t-name="point_of_sale.ReceiptScreen" xml:space="preserve">
        <div class="receipt-screen screen h-100 bg-100">
            <div class="screen-content d-flex flex-column h-100">
                <div class="default-view d-flex flex-lg-row flex-column overflow-hidden flex-grow-1">
                    <div class="actions d-flex flex-column justify-content-between flex-lg-grow-1 flex-grow-0 flex-shrink-1 flex-basis-0 border-end">
                        <div class="o_payment_successful d-flex flex-column w-100 w-xxl-75 p-3 pt-xxl-5 mx-auto">
                            <div class="d-flex flex-column align-items-center p-1 p-lg-3 border border-success rounded-3 bg-success-subtle text-success fs-3">
                                <i t-if="!ui.isSmall" class="fa fa-fw fa-2x fa-check-circle"/>
                                <span class="fs-3 fw-bolder">Payment Successful</span>
                                <div class="fs-4 fw-bold d-flex justify-content-center align-items-center gap-2">
                                    <span t-esc="orderAmountPlusTip"/>
                                    <span t-if="this.currentOrder.nb_print === 0" class="edit-order-payment badge bg-success text-white rounded cursor-pointer pt-1" t-on-click="() =&gt; this.pos.orderDetails(this.currentOrder)">Edit Payment</span>
                                </div>
                            </div>
                            <hr/>
                            <div class="receipt-options d-flex flex-column gap-2">
                                <div class="d-flex gap-1">
                                    <button class="button print btn btn-lg btn-secondary w-100 py-3" t-on-click="() =&gt; doFullPrint.call()">
                                        <i t-attf-class="fa {{doFullPrint.status === 'loading' ? 'fa-fw fa-spin fa-circle-o-notch' : 'fa-print'}} me-1"/>Print Full Receipt
                                    </button>
                                    <button t-if="pos.config.basic_receipt" class="button print btn btn-lg btn-secondary w-100 py-3" t-on-click="() =&gt; doBasicPrint.call()">
                                        <i t-attf-class="fa {{doBasicPrint.status === 'loading' ? 'fa-fw fa-spin fa-circle-o-notch' : 'fa-print'}} me-1"/>Print Basic Receipt
                                    </button>
                                </div>
                                <div class="d-flex flex-column gap-2">
                                    <div class="d-flex">
                                        <input type="text" class="flex-grow-1 border p-3 bg-view pe-5 border-end-0 rounded-start-2 position-relative send-receipt-email-input" t-attf-placeholder="e.g. john.doe@mail.com" t-model="state.email"/>
                                        <div>
                                            <button t-att-style="\`width: \${this.ui.isSmall ? '4rem' : '8rem'}\`" class="btn btn-primary btn-lg lh-lg rounded-start-0 h-100" t-att-disabled="!isValidEmail" t-on-click="() =&gt; this.actionSendReceiptOnEmail()">
                                                <i t-attf-class="fa {{sendReceipt.status === 'loading' and sendReceipt.lastArgs?.[0]?.name === 'Email' ? 'fa-fw fa-spin fa-circle-o-notch' : 'fa-paper-plane'}}"/>
                                            </button>
                                        </div>
                                    </div>
                                    <div class="d-flex gap-1">
                                        <input t-if="showPhoneInput()" type="text" class="flex-grow-1 border p-3 bg-view pe-5 rounded-2 position-relative send-receipt-phone-input" t-attf-placeholder="e.g. 0123456789" t-model="state.phone"/>
                                        <div class="sending-receipt-management d-flex gap-1"/>
                                    </div>
                                </div>
                                <div class="notice text-center">
                                    <t t-set="usedMethod" t-value="sendReceipt.lastArgs?.[0]?.name"/>
                                    <div t-if="sendReceipt.status === 'loading'" class="text-info">Sending <t t-esc="usedMethod"/> in progress</div>
                                    <div t-if="sendReceipt.status === 'success'" class="text-success"><t t-esc="usedMethod"/> is sent successfully</div>
                                    <div t-if="sendReceipt.status === 'error'" class="text-danger">Sending <t t-esc="usedMethod"/> failed. Please try again</div>
                                </div>
                            </div>
                        </div>
                        <t t-set="splittedOrder" t-value="this.currentOrder.originalSplittedOrder and !this.currentOrder.originalSplittedOrder.finalized"/>
                        <div id="action_btn_desktop" t-if="!ui.isSmall" class="validation-buttons d-flex w-100 gap-2 p-2 sticky-bottom">
                            <button class="button next validation btn btn-primary btn-lg w-100 py-4 lh-lg" t-att-class="{ highlight: !locked }" t-if="!splittedOrder" t-on-click="orderDone" name="done">
                                New Order
                            </button>
                        </div>
                    </div>
                    <div class="pos-receipt-container d-flex flex-grow-1 flex-lg-grow-0 w-100 w-lg-50 user-select-none justify-content-center bg-200 text-center overflow-hidden">
                        <div t-att-class="{ 'w-50': !ui.isSmall }" class="d-inline-block m-2 m-lg-3 p-3 border rounded bg-view text-start overflow-y-auto">
                            <OrderReceipt data="pos.orderExportForPrinting(pos.get_order())" formatCurrency="env.utils.formatCurrency"/>
                        </div>
                    </div>
                </div>
                <div id="action_btn_mobile" t-if="ui.isSmall" class="switchpane d-flex gap-2 p-2">
                    <div class="btn-switchpane validation-button btn btn-primary btn-lg py-3 flex-fill lh-lg" t-att-class="{ highlight: !locked }" t-if="!splittedOrder" t-on-click="orderDone" name="done">
                                New Order
                    </div>
                </div>
            </div>
        </div>
    </t>

`);
registerTemplate("point_of_sale.SaverScreen", `/point_of_sale/static/src/app/screens/saver_screen/saver_screen.xml`, `<t t-name="point_of_sale.SaverScreen" xml:space="preserve">
        <div class="login-overlay fixed-top w-100 h-100 p-4 d-flex flex-column">
            <div class="position-absolute screen-login-header d-flex" t-attf-class="{{ env.isSmall ? 'justify-content-center' : 'justify-content-between'}}">
                <div class="d-flex align-items-center gap-2 bg-transparent">
                    <div class="timer-hours fs-1" t-esc="time.hours"/>
                    <div class="timer-date-container d-flex flex-column smaller">
                        <div class="timer-day" t-esc="time.day"/>
                        <div class="timer-date" t-esc="time.date"/>
                    </div>
                </div>
            </div>
            <div class="flex-grow-1 d-flex h-100 w-100 justify-content-center align-items-center">
                <img t-att-height="env.isSmall ? 40 : 182" src="/web/static/img/odoo_logo.svg" alt="Logo"/>
            </div>
        </div>
    </t>
`);
registerTemplate("point_of_sale.ScaleScreen", `/point_of_sale/static/src/app/screens/scale_screen/scale_screen.xml`, `<t t-name="point_of_sale.ScaleScreen" xml:space="preserve">
        <Dialog size="'md'" title="props.product?.display_name || 'Unnamed Product'">
            <t t-set-slot="header">
                <t t-if="this.env.isSmall">
                    <button class="btn oi oi-arrow-left" data-bs-dismiss="modal" aria-label="Close" t-on-click="props.close"/>
                </t>
                <h4 class="modal-title text-break text-center w-100" t-att-class="{ 'me-auto': this.env.isSmall }">
                    <t t-esc="props.productName || 'Unnamed Product'"/>
                </h4>
                <t t-if="!this.env.isSmall">
                    <button type="button" class="btn-close" aria-label="Close" tabindex="-1" t-on-click="props.close"/>
                </t>
            </t>
            <div class="d-flex flex-column">
                <div class="d-flex gap-2 align-items-center mb-2">
                    <div class="w-60 fs-3 me-2">Gross Weight:</div>
                    <div class="weight fs-3 px-5 js-weight text-end form-control-plaintext" t-esc="productWeightString"/>
                </div>
                <div class="d-flex gap-5 align-items-center mb-2">
                <div class="w-50">
                    <button class="btn w-50 fs-3" t-att-class="this.state.tareLoading ? 'btn-secondary' : 'btn-primary'" t-on-click="handleTareButtonClick">
                        <t t-if="!this.state.tareLoading">Tare</t>
                        <t t-if="this.state.tareLoading">
                            <i class="fa fa-spinner fa-spin"/>
                        </t>
                    </button>
                    </div>
                    <div class="d-flex flex-row justify-content-end w-50 align-items-center px-5">
                        <input type="number" class="form-control me-2" t-model="this.state.tare" t-on-input="handleInputChange"/>

                        <span class="text-end fs-3" t-esc="props.uomName"/>
                    </div>
                </div>
                <div class="d-flex gap-2 align-items-center mb-2">
                    <div class="w-60 fs-3 me-2">Net Weight:</div>
                    <div class="text-end fs-3 px-5 form-control-plaintext" t-esc="netWeight.toFixed(3) + ' ' + props.uomName"/>
                </div>
                <div class="d-flex px-5 flex-row gap-2 m-2 align-items-center">
                    <div class="product-price w-50 fs-2 text-center" t-esc="props.productPrice + '/' + props.uomName"/>
                    <div class="computed-price fd-flex flex-grow-1 p-3 rounded text-center text-bg-info bg-opacity-25 text-info fs-2 fw-bold" t-esc="computedPriceString"/>
                </div>
            </div>
            <t t-set-slot="footer">
                <div class="buy-product btn btn-lg btn-primary d-flex align-items-center justify-content-center mx-2 mb-2 cursor-pointer w-100" t-on-click="confirm">
                    Order
                    <i class="fa fa-angle-double-right ms-2"/>
                </div>
            </t>
        </Dialog>
    </t>
`);
registerTemplate("point_of_sale.InvoiceButton", `/point_of_sale/static/src/app/screens/ticket_screen/invoice_button/invoice_button.xml`, `<t t-name="point_of_sale.InvoiceButton" xml:space="preserve">
        <button class="control-button btn btn-light btn-lg lh-lg flex-grow-1 flex-shrink-1" t-on-click="() =&gt; this.click()" t-ref="invoice-button">
            <i class="fa fa-file-pdf-o me-1"/>
            <span> </span>
            <span><t t-esc="commandName"/></span>
        </button>
    </t>

`);
registerTemplate("point_of_sale.SearchBar", `/point_of_sale/static/src/app/screens/ticket_screen/search_bar/search_bar.xml`, `<t t-name="point_of_sale.SearchBar" xml:space="preserve">
        <div class="pos-search-bar d-flex align-items-center flex-grow-1 rounded">
            <div class="search position-relative h-100 d-flex flex-grow-1">
                <div class="input-group">
                    <input class="form-control form-control-lg bg-view border-light ps-2 ps-lg-5" t-ref="autofocus" t-model="state.searchInput" t-on-keydown="onSearchInputKeydown" t-on-keyup="onSearchInputKeyup" type="text" t-att-placeholder="props.placeholder"/>
                    <div t-if="state.showSearchFields and state.searchInput" class="fields">
                        <ul class="py-1 bg-view small">
                            <t t-foreach="searchFieldsList" t-as="fieldName" t-key="fieldName">
                                <li class="ps-5 py-1 text-start" t-att-class="{ highlight: fieldName == searchFieldsList[state.selectedSearchFieldId] }" t-on-click="() =&gt; this._onClickSearchField(fieldName)">
                                    <span class="field">
                                        <t t-esc="props.config.searchFields.get(fieldName)"/>
                                    </span>
                                    <span>: </span>
                                    <span class="term text-primary fw-bolder">
                                        <t t-esc="state.searchInput"/>
                                    </span>
                                </li>
                            </t>
                        </ul>
                    </div>
                    <div t-if="props.config.filter.show" class="filter btn btn-secondary d-flex align-items-center dropdown-toggle" t-on-click.stop="() =&gt; { state.showFilterOptions = !state.showFilterOptions }">
                        <span>
                            <t t-esc="props.config.filter.options.get(state.selectedFilter).text"/>
                        </span>
                        <ul t-if="state.showFilterOptions" class="options dropdown-menu dropdown-menu-end py-1">
                            <t t-foreach="filterOptionsList" t-as="key" t-key="key">
                                <t t-set="_option" t-value="props.config.filter.options.get(key)"/>
                                <li class="dropdown-item" t-on-click="() =&gt; this._onSelectFilter(key)" t-att-class="{ 'indented': _option.indented }">
                                    <t t-esc="_option.text"/>
                                </li>
                            </t>
                        </ul>
                    </div>
                </div>
                <span class="search-icon position-absolute start-0 top-50 translate-middle ms-4 z-3" t-if="!ui.isSmall"><i class="oi oi-search"/></span>
            </div>
        </div>
    </t>

`);
registerTemplate("point_of_sale.TicketScreen", `/point_of_sale/static/src/app/screens/ticket_screen/ticket_screen.xml`, `<t t-name="point_of_sale.TicketScreen" xml:space="preserve">
        <t t-set="_filteredOrderList" t-value="getFilteredOrderList()"/>
        <div class="ticket-screen screen h-100 bg-100">
            <div class="screen-full-width d-flex w-100 h-100">
                <div t-if="!ui.isSmall || pos.ticket_screen_mobile_pane === 'left'" class="rightpane pane-border d-flex flex-column flex-grow-1 w-100 h-100 h-lg-100 bg-200 overflow-y-auto">
                    <div class="controls d-grid d-sm-flex align-items-center justify-content-between gap-2 gap-sm-3 p-2 bg-300">
                        <div class="buttons d-flex gap-2">
                            <button class="discard btn btn-lg btn-light text-nowrap" t-on-click="() =&gt; this.closeTicketScreen()">
                                <i class="oi oi-chevron-left"/>
                                <span t-if="!ui.isSmall" class="ms-2">Back</span>
                            </button>
                        </div>
                        <SearchBar config="getSearchBarConfig()" placeholder.translate="Search Orders..." onSearch.bind="onSearch" onFilterSelected.bind="onFilterSelected"/>
                        <div class="item d-flex align-items-center justify-content-end">
                            <span class="page me-2"><t t-esc="getPageNumber()"/></span>
                            <div class="page-controls d-flex align-items-center gap-1">
                                <button class="previous btn btn-light btn-lg" t-on-click="() =&gt; this.onPrevPage()">
                                    <i class="fa fa-fw fa-caret-left" role="img" aria-label="Previous Order List" title="Previous Order List"/>
                                </button>
                                <button class="next btn btn-light btn-lg" t-on-click="() =&gt; this.onNextPage()">
                                    <i class="fa fa-fw fa-caret-right" role="img" aria-label="Next Order List" title="Next Order List"/>
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="orders overflow-y-auto flex-grow-1">
                        <t t-if="_filteredOrderList.length !== 0">
                            <div class="header-row d-flex text-bg-700 fw-bolder" t-att-class="{ 'd-none': ui.isSmall }">
                                <div class="col wide p-2">Date</div>
                                <div class="col wide p-2">Receipt Number</div>
                                <div class="col wide p-2">Order number</div>
                                <div class="col p-2">Customer</div>
                                <div class="col wide p-2" t-if="showCardholderName()">Cardholder Name</div>
                                <div class="col p-2">Cashier</div>
                                <div class="col end p-2">Total</div>
                                <div class="col narrow p-2">Status</div>
                                <div class="col very-narrow p-2" name="delete"/>
                            </div>
                            <t t-if="!ui.isSmall" t-foreach="_filteredOrderList" t-as="order" t-key="order.uuid">
                                <div class="order-row" t-att-class="{ 'highlight bg-primary text-white': isHighlighted(order) }" t-on-click="() =&gt; this.onClickOrder(order)" t-on-dblclick="() =&gt; order.uiState.locked ? ()=&gt;{} : this._setOrder(order)">
                                    <div class="col wide p-2 ">
                                        <div><t t-esc="getDate(order)"/></div>
                                    </div>
                                    <div class="col wide p-2">
                                        <div><t t-esc="order.pos_reference"/></div>
                                    </div>
                                    <div class="col wide p-2">
                                        <div><t t-esc="order.tracking_number"/></div>
                                    </div>
                                    <div class="col p-2">

                                        <div><t t-esc="order.partner_id?.name"/></div>
                                    </div>
                                    <div t-if="showCardholderName()" class="col p-2">
                                        <div><t t-esc="getCardholderName(order)"/></div>
                                    </div>
                                    <div class="col p-2">
                                        <t t-esc="getCashier(order)"/>
                                    </div>
                                    <div class="col end p-2">
                                        <div><t t-esc="getTotal(order)"/></div>
                                    </div>
                                    <div class="col narrow p-2">
                                        <div><t t-esc="getStatus(order)"/></div>
                                    </div>
                                    <div t-if="!shouldHideDeleteButton(order)" class="col very-narrow delete-button p-2" name="delete" t-on-click.stop="() =&gt; this.pos.onDeleteOrder(order)">
                                        <i class="fa fa-trash" aria-hidden="true"/>
                                    </div>
                                    <div t-else="" class="col very-narrow p-2"/>
                                </div>
                            </t>
                            <t t-if="ui.isSmall" t-foreach="_filteredOrderList" t-as="order" t-key="order.uuid">
                                <div class="mobileOrderList order-row rounded-3" t-att-class="{ 'highlight bg-primary text-white': isHighlighted(order) }" t-on-click="() =&gt; this.onClickOrder(order)" t-on-dblclick="() =&gt;  order.uiState.locked ? ()=&gt;{} : this._setOrder(order)">
                                    <div class="col p-2 d-flex justify-content-between align-items-center">
                                        <div><t t-esc="order.pos_reference"/> / <t t-esc="order.tracking_number"/></div>
                                        <div><t t-esc="getTotal(order)"/></div>
                                    </div>
                                    <div class="col p-2 d-flex justify-content-between align-items-center">
                                        <div><t t-esc="getDate(order)"/></div>
                                        <div class="orderStatus"><t t-esc="getStatus(order)"/></div>
                                    </div>
                                    <div class="col p-2">
                                        <div t-if="!shouldHideDeleteButton(order)" class="col very-narrow delete-button p-2 rounded-2" name="delete" t-on-click.stop="() =&gt; this.pos.onDeleteOrder(order)">
                                            <i class="fa fa-trash" aria-hidden="true"/> Delete
                                        </div>
                                    </div>
                                </div>
                            </t>
                        </t>
                        <CenteredIcon t-else="" icon="this.pos.data.network.loading ? 'fa-spinner fa-spin' : 'fa-shopping-cart fa-4x'" text="this.pos.data.network.loading ? 'Loading...' : 'No orders found'" class="'h-100'"/>
                    </div>
                    <div class="switchpane d-flex w-100 gap-2 p-2 mt-2" t-if="ui.isSmall">
                        <t t-set="_selectedSyncedOrder" t-value="getSelectedOrder()"/>
                        <button class="btn-switchpane load-order-button primary btn btn-primary btn-lg lh-lg w-50 py-3" t-att-disabled="!_selectedSyncedOrder" t-if="!isOrderSynced" t-on-click="() =&gt; this._setOrder(_selectedSyncedOrder)">
                            <span class="d-block">Load Order</span>
                        </button>
                        <button class="btn-switchpane btn btn-lg lh-lg w-50 py-3 secondary review-button" t-att-class="{'btn-primary': isOrderSynced, 'btn-light': !isOrderSynced}" t-on-click="switchPane">
                            <span class="d-block">Review</span>
                        </button>
                    </div>
                </div>

                <div t-if="(!ui.isSmall || pos.ticket_screen_mobile_pane === 'right')" class="leftpane d-flex flex-column flex-grow-1 gap-2 w-100 h-100 h-lg-100 bg-200 p-2">
                    <t t-set="_selectedSyncedOrder" t-value="getSelectedOrder()"/>
                    <t t-set="_selectedOrderlineId" t-value="getSelectedOrderlineId()"/>
                    <t t-if="_selectedSyncedOrder?.get_orderlines()?.length"> 
                        <div t-if="isOrderSynced" t-att-class="{ 'highlight text-danger': !getHasItemsToRefund() }" class="py-2 px-3 rounded-3 bg-100 text-center">
                            Select the product(s) to refund and set the quantity
                        </div>
                        <OrderWidget lines="_selectedSyncedOrder.lines" t-slot-scope="scope" taxTotals="_selectedSyncedOrder.taxTotals" generalNote="_selectedSyncedOrder?.general_note or ''">
                            <t t-set="line" t-value="scope.line"/>
                            <Orderline line="line.getDisplayData()" class="{'selected': line.id === getSelectedOrderlineId()}" t-on-click="() =&gt; this.onClickOrderline(line)">
                                <t t-set="toRefundDetail" t-value="line.order_id?.uiState?.lineToRefund?.[line.uuid]"/>
                                <li t-if="!pos.isProductQtyZero(line.refunded_qty)" class="info refund-note mt-1">
                                    <strong t-esc="env.utils.formatProductQty(line.refunded_qty)"/>
                                    <span> Refunded</span>
                                </li>
                                <li t-if="!pos.isProductQtyZero(toRefundDetail?.qty)" class="info to-refund-highlight refund-note mt-1 fw-bold text-primary">
                                    <t t-set="_destinationOrderUid" t-value="toRefundDetail.destination_order_uuid"/>
                                    <t t-set="refundQty" t-value="env.utils.formatProductQty(toRefundDetail.qty)"/>
                                    <t t-if="_destinationOrderUid">
                                        Refunding <t t-esc="refundQty"/> in
                                        <span t-esc="_destinationOrderUid" class="order-link ms-1 text-decoration-underline cursor-pointer" t-on-click.stop="() =&gt; this.onClickRefundOrderUid(_destinationOrderUid)"/>
                                    </t>
                                    <t t-else="">
                                        To Refund: <t t-esc="refundQty"/>
                                    </t>
                                </li>
                            </Orderline>
                        </OrderWidget>
                        <div class="pads">
                            <t t-if="isOrderSynced">
                                <div class="control-buttons d-flex gap-2 pb-2">
                                    <button class="edit-order-payment control-button btn btn-light btn-lg lh-lg flex-grow-1 flex-shrink-1" t-on-click="() =&gt; this.pos.orderDetails(_selectedSyncedOrder)">
                                        <i class="fa fa-pencil-square-o me-1"/> Details
                                    </button>
                                    <InvoiceButton onInvoiceOrder.bind="onInvoiceOrder" order="_selectedSyncedOrder"/>
                                    <button class="control-button btn btn-light btn-lg lh-lg flex-grow-1 flex-shrink-1" t-on-click="() =&gt; doPrint.call(_selectedSyncedOrder)">
                                        <i t-attf-class="fa {{doPrint.status === 'loading' ? 'fa-fw fa-spin fa-circle-o-notch' : 'fa-print'}} me-1"/>Print Receipt
                                    </button>
                                </div>
                                <div class="subpads d-flex flex-column">
                                    <Numpad class="'pb-2'" buttons="getNumpadButtons()"/>
                                    <ActionpadWidget partner="getSelectedOrder()?.get_partner()" actionName.translate="Refund" actionToTrigger.bind="onDoRefund"/>
                                </div>
                            </t>
                            <div t-else="" class="pads border-top d-flex gap-2">
                                <BackButton onClick="() =&gt; pos.onClickBackButton()"/>
                                <button class="button validation load-order-button w-100 btn btn-lg btn-primary py-3" t-att-disabled="!_selectedSyncedOrder" t-on-click="() =&gt; this._setOrder(_selectedSyncedOrder)">
                                    <span class="d-block">Load Order</span>
                                </button>
                            </div>
                        </div>
                    </t>
                    <t t-else="">
                        <CenteredIcon icon="'fa-shopping-cart fa-4x'" text.translate="'Select an order'" class="'bg-100 h-100'"/>
                        <BackButton t-if="ui.isSmall" onClick="() =&gt; pos.onClickBackButton()"/>
                    </t>
                </div>
            </div>
        </div>
    </t>

`);
registerTemplate("point_of_sale.ComboConfiguratorPopup", `/point_of_sale/static/src/app/store/combo_configurator_popup/combo_configurator_popup.xml`, `<t t-name="point_of_sale.ComboConfiguratorPopup" xml:space="preserve">
        <Dialog title="props.product.display_name" contentClass="'combo-configurator-popup'">
            <div t-if="isArchivedProductSelected()" class="alert alert-warning mt-3">
                <span>This combination does not exist.</span>
            </div>
            <div t-foreach="props.product.combo_ids" t-as="combo" t-key="combo.id" class="d-flex flex-column m-3 mb-4">
                <t t-if="shouldShowCombo(combo)">
                    <h3 class="me-auto mb-3" t-esc="combo.name"/>
                    <div class="product-list d-grid gap-1">
                        <div t-foreach="combo.combo_item_ids" t-as="combo_item" t-key="combo_item.id" class="m-2" t-att-class="{'ptav-not-available' : isArchived(combo_item)}">
                            <t t-set="product" t-value="combo_item.product_id"/>
                            <input type="radio" t-attf-name="combo-{{combo.id}}" t-attf-id="combo-{{combo.id}}-combo_item-{{combo_item.id}}" t-attf-value="{{combo_item.id}}" t-model="state.combo[combo.id]" t-att-class="{ 'selected': state.combo[combo.id] == combo_item.id }"/>
                            <label t-attf-for="combo-{{combo.id}}-combo_item-{{combo_item.id}}" class="combo-item h-100 w-100 rounded cursor-pointer transition-base">
                                <ProductCard name="product.display_name" class="'flex-column h-100 border'" productId="product.id" product="product" price="formattedComboPrice(combo_item)" imageUrl="product.getImageUrl()" onClick="(ev) =&gt; this.onClickProduct({ product, combo_item }, ev)"/>
                            </label>
                        </div>
                    </div>
                </t>
            </div>
            <t t-set-slot="footer">
                <div class="d-flex w-100 justify-content-start gap-2">
                    <button class="confirm btn btn-lg btn-primary" t-att-disabled="!areAllCombosSelected() || isArchivedProductSelected()" t-on-click="confirm">
                        Add to order
                    </button>
                    <div class="ms-auto">
                        <t t-if="!areAllCombosSelected()">
                            Complete the selection to proceed
                        </t>
                    </div>
                </div>
            </t>
        </Dialog>
    </t>
`);
registerTemplate("point_of_sale.OpeningControlPopup", `/point_of_sale/static/src/app/store/opening_control_popup/opening_control_popup.xml`, `<t t-name="point_of_sale.OpeningControlPopup" xml:space="preserve">
        <Dialog size="'md'">
            <t t-set-slot="header">
                <h4 class="modal-title text-break">
                    Opening Control
                </h4>
            </t>
            <div class="opening-cash-section mb-3" t-if="this.cashMethodCount">
                <label class="form-label">Opening cash</label>
                <div t-att-class="{ 'w-50': !ui.isSmall }" class="cash-input-sub-section d-flex gap-1">
                    <Input tModel="[state, 'openingCash']" isValid.bind="env.utils.isValidFloat" callback.bind="handleInputChange" autofocus="true" placeholder.translate="Opening Balance Eg: 123"/>
                    <div class="button icon btn btn-secondary btn-lg lh-lg" t-on-click="openDetailsPopup">
                        <i class="fa fa-money" role="img" title="Open the money details popup"/>
                    </div>
                </div>
            </div>
            <div class="opening-notes-container d-flex flex-column align-items-start">
                <label class="form-label" for="openingNotes">Opening note</label>
                <textarea class="opening-notes form-control" id="openingNotes" rows="4" t-model="state.notes" placeholder="Add an opening note..."/>
            </div>
            <t t-set-slot="footer">
                <button class="button btn btn-lg btn-primary" t-on-click="confirm" t-att-disabled="!env.utils.isValidFloat(state.openingCash)">
                    Open Register
                </button>
                <button class="backend-button button btn btn-lg btn-secondary" t-on-click="() =&gt; this.pos.showLoginScreen()">
                    Discard
                </button>
            </t>
        </Dialog>
    </t>
`);
registerTemplate("point_of_sale.OrderChangeReceipt", `/point_of_sale/static/src/app/store/order_change_receipt_template.xml`, `<t t-name="point_of_sale.OrderChangeReceipt" xml:space="preserve">
        <div class="pos-receipt m-0 p-0">

            <div class="receipt-header text-center">
                <div class="pos-receipt-title">
                    <t t-if="changes.diningModeUpdate">
                        <t t-if="changes.takeaway">Dine In -&gt; Take Out</t>
                        <t t-else="">Take Out -&gt; Dine In</t>
                    </t>
                    <t t-else="">
                        <t t-if="changes.takeaway">Take Out</t>
                        <t t-else="">Dine In</t>
                    </t>
                </div>
                <div style="font-size: 78%;">
                    <span><t t-esc="changes.config_name"/> : <t t-esc="changes.time"/></span><br/>
                    <span>By: <t t-esc="changes.employee_name"/></span>
                </div>
                <span class="my-4" style="font-size: 120%;">
                    <t t-if="changes.table_name">Table <strong><t t-esc="changes.table_name"/></strong></t>
                    <t t-if="changes.tracking_number" class="fw-light my-3"> # <strong><t t-esc="changes.tracking_number"/></strong></t>
                </span>
            </div>
            <hr style="border: none; border-top: 4px dashed black;"/>


            <div class="pos-receipt-body pb-5">

                <t t-if="operational_title">
                    <div class="pos-receipt-title text-center" t-esc="operational_title"/>
                </t>

                <div t-foreach="changedlines" t-as="line" t-key="change_index" style="font-size: 120%;">
                    <div t-attf-class="orderline #{line.isCombo ? 'mx-5 px-2' : 'mx-1'}">
                        <div class="d-flex medium">
                            <span class="me-3" t-esc="line.quantity"/> <span class="product-name" t-esc="line.display_name"/>
                        </div>
                        <div t-if="line.attribute_value_ids?.length" class="mx-5" style="font-size: 91%;">
                            <t t-foreach="line.attribute_value_ids" t-as="attribute" t-key="attribute.id">
                                <p class="p-0 m-0">
                                    - <t t-esc="attribute.name"/><br/>
                                </p>
                            </t>
                        </div>
                        <div t-if="line.note" class="fst-italic" style="font-size: 91%;">
                            <t t-esc="line.note.split('\\n').join(', ')"/><br/>
                        </div>
                    </div>
                </div>


                <t t-if="(!changedlines.length or fullReceipt) and changes.order_note.length">
                    <div class="mt-5 fst-italic" style="font-size: 109%;">
                        <t t-if="changes.order_note">
                            <t t-esc="changes.order_note.split('\\n').join(', ')"/><br/>
                        </t>
                    </div>
                </t>
            </div>
        </div>
    </t>
`);
registerTemplate("point_of_sale.RadioProductAttribute", `/point_of_sale/static/src/app/store/product_configurator_popup/product_configurator_popup.xml`, `<t t-name="point_of_sale.RadioProductAttribute" xml:space="preserve">
        <div class="configurator_radio" t-ref="root">
            <div class="d-flex flex-wrap gap-3">
                <t t-foreach="values" t-as="value" t-key="value.id">
                    <div class="attribute-name-cell form-check" t-att-class="{'ptav-not-available': value.excluded}">
                        <input class="form-check-input radio-check" type="radio" t-model="state.attribute_value_ids" t-att-name="value.attribute_id.id" t-attf-id="{{ value.attribute_id.id }}_{{ value.id }}" t-att-value="value.id"/>
                        <label t-attf-for="{{ value.attribute_id.id }}_{{ value.id }}" class="form-check-label">
                            <span t-esc="value.name"/>
                        </label>
                        <div t-if="value.price_extra" class="price-extra-cell d-inline-block ms-2">
                            <span class="price_extra px-2 py-1 rounded-pill text-bg-info">
                                <t t-esc="getFormatPriceExtra(value.price_extra)"/>
                            </span>
                        </div>
                    </div>
                    <div t-if="value.id == state.attribute_value_ids and value.is_custom" class="custom-value-cell">
                        <input class="custom_value form-control form-control-lg mt-2" type="text" t-model="state.custom_value"/>
                    </div>
                </t>
            </div>
        </div>
    </t>

    `);
registerTemplate("point_of_sale.PillsProductAttribute", `/point_of_sale/static/src/app/store/product_configurator_popup/product_configurator_popup.xml`, `<t t-name="point_of_sale.PillsProductAttribute" xml:space="preserve">
        <div class="configurator_radio" t-ref="root">
            <div class="d-flex flex-wrap gap-2">
                <t t-foreach="values" t-as="value" t-key="value.id">
                    <div class="attribute-name-cell" t-att-class="{'ptav-not-available': value.excluded}">
                        <input class="form-check-input d-none" type="radio" t-model="state.attribute_value_ids" t-att-name="value.attribute_id.id" t-attf-id="{{ value.attribute_id.id }}_{{ value.id }}" t-att-value="value.id"/>
                        <label t-attf-class="btn btn-secondary btn-lg lh-lg d-flex {{ value.id == state.attribute_value_ids ? 'active' : '' }}" t-att-name="value.name" t-attf-for="{{ value.attribute_id.id }}_{{ value.id }}">
                            <span t-esc="value.name"/>
                            <div t-if="value.price_extra" class="price-extra-cell d-inline-block ms-2">
                                <span class="price_extra px-2 py-1 rounded-pill text-bg-info">
                                    <t t-esc="getFormatPriceExtra(value.price_extra)"/>
                                </span>
                            </div>
                        </label>
                    </div>
                    <div t-if="value.id == state.attribute_value_ids and value.is_custom" class="custom-value-cell">
                        <input class="custom_value form-control form-control-lg mt-2" type="text" t-model="state.custom_value"/>
                    </div>
                </t>
            </div>
        </div>
    </t>

    `);
registerTemplate("point_of_sale.SelectProductAttribute", `/point_of_sale/static/src/app/store/product_configurator_popup/product_configurator_popup.xml`, `<t t-name="point_of_sale.SelectProductAttribute" xml:space="preserve">
        <div>
            <t t-set="is_custom" t-value="false"/>

            <select class="configurator_select form-select form-select-md" t-model="state.attribute_value_ids">
                <option t-foreach="values" t-as="value" t-key="value.id" t-att-value="value.id" t-att-class="{'ptav-not-available': value.excluded}">
                    <t t-set="is_custom" t-value="is_custom || (value.is_custom and value.id == state.attribute_value_ids)"/>
                    <t t-esc="value.name"/>
                    <t t-if="value.price_extra">
                        <t t-esc="getFormatPriceExtra(value.price_extra)"/>
                    </t>
                </option>
            </select>

            <input class="custom_value form-control form-control-lg mt-2" t-if="is_custom" type="text" t-model="state.custom_value"/>
        </div>
    </t>

    `);
registerTemplate("point_of_sale.ColorProductAttribute", `/point_of_sale/static/src/app/store/product_configurator_popup/product_configurator_popup.xml`, `<t t-name="point_of_sale.ColorProductAttribute" xml:space="preserve">
        <div>
            <t t-set="is_custom" t-value="false"/>

            <ul class="color_attribute_list d-flex gap-3">
                <li t-foreach="values" t-as="value" t-key="value.id" class="color_attribute_list_item">
                    <t t-set="is_custom" t-value="is_custom || (value.is_custom and value.id == state.attribute_value_ids)"/>
                    <t t-set="img_style" t-value="value.image ? 'background:url(/web/image/product.template.attribute.value/' + value.id + '/image); background-size:cover;' : ''"/>
                    <t t-set="color_style" t-value="value.is_custom ? '' : 'background-color: ' + value.html_color"/>
                    <span class="d-flex flex-row justify-content-center align-items-center">
                        <label t-attf-class="configurator_color rounded-circle border position-relative {{ value.id == state.attribute_value_ids ? 'active border-3 border-primary' : 'border-3 border-secondary' }}" t-att-class="{'ptav-not-available' : value.excluded}" t-attf-style="{{ img_style or color_style }}" t-att-data-color="value.name">
                            <input class="m-2 opacity-0" type="radio" t-model="state.attribute_value_ids" t-att-value="value.id" t-att-name="value.attribute_id.id"/>
                        </label>
                        <div t-if="value.price_extra" class="price-extra-cell d-inline-block ms-2" t-att-class="{'ptav-not-available' : value.excluded}">
                            <span class="price_extra px-2 py-1 rounded-pill text-bg-info">
                                <t t-esc="getFormatPriceExtra(value.price_extra)"/>
                            </span>
                        </div>
                    </span>
                </li>
            </ul>

            <input class="custom_value form-control form-control-lg mt-2" t-if="is_custom" type="text" t-model="state.custom_value"/>
        </div>
    </t>

    `);
registerTemplate("point_of_sale.MultiProductAttribute", `/point_of_sale/static/src/app/store/product_configurator_popup/product_configurator_popup.xml`, `<t t-name="point_of_sale.MultiProductAttribute" xml:space="preserve">
        <div class="d-flex gap-2 flex-wrap">
            <div t-foreach="values" t-as="value" t-key="value.id">
                <input class="form-check-input d-none" type="checkbox" t-attf-id="multi-{{value.id}}" t-attf-name="multi-{{value.id}}" t-model="state.attribute_value_ids[value.id]"/>
                <label t-attf-class="form-check-label btn btn-secondary btn-lg lh-lg d-flex {{ state.attribute_value_ids[value.id] === true ? 'active' : '' }}" t-attf-name="multi-{{value.id}}" t-attf-for="multi-{{value.id}}">
                    <span t-esc="value.name"/>
                    <div t-if="value.price_extra" class="price-extra-cell d-inline-block ms-2">
                        <span class="price_extra px-2 py-1 rounded-pill text-bg-info">
                            <t t-esc="getFormatPriceExtra(value.price_extra)"/>
                        </span>
                    </div>
                </label>
            </div>
        </div>
    </t>

    `);
registerTemplate("point_of_sale.ProductConfiguratorPopup", `/point_of_sale/static/src/app/store/product_configurator_popup/product_configurator_popup.xml`, `<t t-name="point_of_sale.ProductConfiguratorPopup" xml:space="preserve">
        <Dialog title.translate="Attribute selection">
            <ProductInfoBanner product="this.state.product"/>
            <div t-ref="input-area">
                <div t-if="isArchivedCombination()" class="alert alert-warning mt-3">
                    <span>This combination does not exist.</span>
                </div>
                <div t-foreach="this.props.product.attribute_line_ids" t-as="attributeLine" t-key="attributeLine.id" class="attribute mb-3">
                    <div class="attribute_name mb-2 fw-bolder" t-esc="attributeLine.attribute_id.name"/>
                    <RadioProductAttribute t-if="attributeLine.attribute_id.display_type === 'radio'" attributeLine="attributeLine"/>
                    <PillsProductAttribute t-elif="attributeLine.attribute_id.display_type === 'pills'" attributeLine="attributeLine"/>
                    <SelectProductAttribute t-elif="attributeLine.attribute_id.display_type === 'select'" attributeLine="attributeLine"/>
                    <ColorProductAttribute t-elif="attributeLine.attribute_id.display_type === 'color'" attributeLine="attributeLine"/>
                    <MultiProductAttribute t-elif="attributeLine.attribute_id.display_type === 'multi'" attributeLine="attributeLine"/>
                </div>
            </div>
            <t t-set-slot="footer">
                <button class="btn btn-primary btn-lg lh-lg o-default-button" t-att-class="{'disabled': isArchivedCombination()}" t-on-click="confirm">
                        Add
                    </button>
                <button class="btn btn-secondary btn-lg lh-lg o-default-button" t-on-click="close">Discard</button>
            </t>
        </Dialog>
    </t>
`);
registerTemplate("point_of_sale.EditListInput", `/point_of_sale/static/src/app/store/select_lot_popup/edit_list_input/edit_list_input.xml`, `<t t-name="point_of_sale.EditListInput" xml:space="preserve">
        <div class="input-group mb-3">
            <input type="text" placeholder="Serial/Lot Number" t-att-readOnly="!props.customInput" t-att-value="props.item.text" class="popup-input list-line-input form-control form-control-lg w-75 mx-auto" t-att-class="{'is-invalid': props.hasInvalidValue}" t-on-input="onInput" t-on-keyup="onKeyup" t-on-keydown="onKeydown" t-on-focus="onFocus" t-on-blur="onBlur" t-on-click="onClick"/>
            <button t-if="props.deletable" class="btn btn-danger btn-lg" t-on-click="props.removeItem">
                <i class="oe_link_icon fa fa-trash-o" role="img" aria-label="Remove" title="Remove"/>
            </button>
            <div class="options-dropdown" t-ref="options-dropdown" t-if="props.shouldShowOptions and !state.hideOptions">
                <span t-if="displayedOptions.length === 0" class="no-match">No existing serial/lot number matching...</span>
                <t t-foreach="displayedOptions" t-as="option" t-key="option">
                    <div class="option" t-att-class="{'selected': option === state.selectedOptionValue}" t-on-click="() =&gt; this.onSelectOption(option)">
                        <span t-esc="option"/>
                    </div>
                </t>
            </div>
        </div>
    </t>

`);
registerTemplate("point_of_sale.EditListPopup", `/point_of_sale/static/src/app/store/select_lot_popup/select_lot_popup.xml`, `<t t-name="point_of_sale.EditListPopup" xml:space="preserve">
        <Dialog title="props.title">
            <t t-set-slot="header">
                <h4 class="modal-title title" t-esc="props.title"/>
                <span class="sub-title" t-esc="props.name"/>
            </t>
            <div t-ref="root">
                <div class="edit-list-inputs" t-ref="edit-list-inputs" t-on-scroll="onScroll">
                    <t t-foreach="state.array" t-as="item" t-key="item._id">
                        <EditListInput item="item" shouldShowOptions="this.shouldShowOptionsForItem(item)" hasInvalidValue="!!(item.text and !this.hasValidValue(item._id, item.text))" getOptions="() =&gt; this.getRemainingOptions()" customInput="props.customInput" createNewItem.bind="createNewItem" removeItem="() =&gt; this.removeItem(item._id)" deletable="_hasMoreThanOneItem()" onInputChange.bind="onInputChange" onSelectItem.bind="onSelectItem" onUnselectItem.bind="onUnselectItem"/>
                    </t>
                </div>
             </div>
            <t t-set-slot="footer">
                <button class="btn btn-primary btn-lg lh-lg o-default-button" t-on-click="confirm">Ok</button>
            </t>
       </Dialog>
    </t>
`);
registerTemplate("point_of_sale.DatePickerPopup", `/point_of_sale/static/src/app/utils/date_picker_popup/date_picker_popup.xml`, `<t t-name="point_of_sale.DatePickerPopup" xml:space="preserve">
        <Dialog title="props.title">
            <input class="form-control form-control-lg w-75 mx-auto" type="date" t-model="state.shippingDate" t-ref="input" t-att-min="_today()"/>
            <t t-set-slot="footer">
                <button class="btn btn-lg btn-primary" t-on-click="confirm" t-esc="props.confirmLabel"/>
            </t>
        </Dialog>
    </t>
`);
registerTemplate("point_of_sale.NumberPopup", `/point_of_sale/static/src/app/utils/input_popups/number_popup.xml`, `<t t-name="point_of_sale.NumberPopup" xml:space="preserve">
        <Dialog title="props.title" bodyClass="'d-flex flex-column justify-content-center'" size="'sm'">
            <div t-if="props.subtitle" class="subtitle p-1 mx-auto" t-esc="props.subtitle"/>
            <div class="input-symbol mb-3">
                <div class="popup-input value active form-control form-control-lg text-center">
                    <span t-if="this.state.buffer || !props.placeholder" class="input-value" t-esc="props.formatDisplayedValue(this.state.buffer || '')"/>
                    <span t-else="" class="text-muted" t-esc="props.placeholder"/>
                </div>
            </div>
            <div t-if="props.feedback(this.state.buffer)" class="p-2 mx-auto mt-n2 mb-2" t-esc="props.feedback(this.state.buffer)"/>
            <Numpad buttons="props.buttons" class="'p-1 rounded-3 bg-200'"/>
            <t t-set-slot="footer">
                <div class="d-flex flex-grow-1 justify-content-center">
                    <button t-att-disabled="!props.isValid(state.buffer)" class="btn btn-primary btn-lg lh-lg o-default-button me-2" tabindex="1" t-on-click="confirm">
                        <t t-esc="props.confirmButtonLabel || 'Ok'"/>
                    </button>
                    <button class="btn btn-secondary btn-lg lh-lg o-default-button" tabindex="1" t-on-click="cancel">
                        <t t-esc="'Discard'"/>
                    </button>
                </div>
            </t>
        </Dialog>
    </t>
`);
registerTemplate("point_of_sale.SelectionPopup", `/point_of_sale/static/src/app/utils/input_popups/selection_popup.xml`, `<t t-name="point_of_sale.SelectionPopup" xml:space="preserve">
        <Dialog title="props.title" footer="false" contentClass="'pb-5'" bodyClass="'d-flex flex-column gap-2 border-bottom'">
            <button t-foreach="props.list" t-as="item" t-key="item.id" class="selection-item d-flex align-items-center justify-content-between btn btn-lg btn-outline-secondary w-100 p-3 text-start" t-att-class="{ 'selected active': item.isSelected }" t-on-click="() =&gt; this.selectItem(item.id)">
                <div class="d-flex flex-column">
                    <span t-esc="item.label"/>
                    <span t-esc="item.description" t-if="item.description"/>
                </div>
                <i t-attf-class="{{ item.isSelected ? 'fa fa-check text-action' : 'oi oi-chevron-right' }}"/>
            </button>
        </Dialog>
    </t>

`);
registerTemplate("point_of_sale.TextInputPopup", `/point_of_sale/static/src/app/utils/input_popups/text_input_popup.xml`, `<t t-name="point_of_sale.TextInputPopup" xml:space="preserve">
        <Dialog title="props.title">
            <t t-foreach="props.buttons" t-as="button" t-key="button_index">
                <button t-on-click="() =&gt; this.buttonClick(button)" type="button" t-attf-class="btn btn-lg me-2 mb-2 toggle-button {{button.isSelected? 'btn-primary' : 'btn-secondary'}} lh-lg">
                    <t t-esc="button.label"/>
                </button>
            </t>
            <textarea t-att-rows="props.rows" class="form-control form-control-lg mx-auto" type="text" t-model="state.inputValue" t-ref="input" t-att-placeholder="props.placeholder" t-on-keydown="onKeydown"/>
            <t t-set-slot="footer">
                <button class="btn btn-primary btn-lg lh-lg o-default-button" t-on-click="confirm">Apply</button>
                <button class="btn btn-secondary btn-lg lh-lg o-default-button" t-on-click="close">Discard</button>
            </t>
        </Dialog>
    </t>

`);
registerTemplate("point_of_sale.MoneyDetailsPopup", `/point_of_sale/static/src/app/utils/money_details_popup/money_details_popup.xml`, `<t t-name="point_of_sale.MoneyDetailsPopup" xml:space="preserve">
        <Dialog title.translate="Coins/Notes" size="'md'">
            <t t-set="bills" t-value="Object.keys(state.moneyDetails).sort((a, b) =&gt; b - a)"/>
            <div t-attf-style="display: grid; grid-template-rows: repeat(calc({{bills.length}}/{{ui.isSmall ? 1 : 2}}), auto); grid-auto-flow: column;">
                <div t-foreach="bills" t-as="moneyValue" t-key="moneyValue" class="d-flex align-items-center justify-content-center my-1 ">
                    <NumericInput class="'w-50'" tModel="[state.moneyDetails, moneyValue]" min="0"/>
                    <label class="oe_link_icon w-25 text-center" t-att-for="moneyValue">
                        <span class="ms-1" t-esc="env.utils.formatCurrency(_parseFloat(moneyValue))"/>
                    </label>
                </div>
            </div>
            <t t-set-slot="footer">
                <div class="button highlight btn btn-lg btn-primary" t-on-click="confirm">Confirm</div>
                <h4 class="total-section ms-auto py-2">
                    Total <t t-esc="env.utils.formatCurrency(computeTotal())"/>
                </h4>
            </t>
        </Dialog>
    </t>
`);
registerTemplate("point_of_sale.QRConfirmationDialog", `/point_of_sale/static/src/app/utils/qr_code_popup/qr_code_popup.xml`, `<t t-name="point_of_sale.QRConfirmationDialog" t-inherit="web.ConfirmationDialog" t-inherit-mode="primary" xml:space="preserve">
        <xpath expr="//p" position="replace">
            <div class="d-flex flex-column align-items-center justify-content-center">
                <p t-out="props.body" class="text-prewrap" style="font-weight: bold;"/>
                <img t-att-src="props.qrCode" alt="QR Code" style="width: 200px; height: 200px;"/>
                <div class="mt-1">
                    <strong>Amount: </strong>
                    <t t-out="amount"/>
                </div>
            </div>
        </xpath>
        <xpath expr="//button[@t-on-click='_confirm']" position="attributes">
            <attribute name="class" add="btn-secondary" remove="btn-primary" separator=" "/>
        </xpath>
        <xpath expr="//button[@t-on-click='_cancel']" position="attributes">
            <attribute name="class" add="btn-primary" remove="btn-secondary" separator=" "/>
        </xpath>
    </t>

`);
registerTemplateExtension("web.Dialog.header", `/point_of_sale/static/src/overrides/core/dialog/dialog.xml`, `<t t-name="point_of_sale.Dialog.header" t-inherit="web.Dialog.header" t-inherit-mode="extension" xml:space="preserve">
        <xpath expr="//button[hasclass('o_expand_button')]" position="attributes">
            <attribute name="t-if">false</attribute>
        </xpath>
    </t>
`);
registerTemplate("web_tour.TourPointer", `/web_tour/static/src/tour_pointer/tour_pointer.xml`, `<t t-name="web_tour.TourPointer" xml:space="preserve">
        <div t-if="props.pointerState.isVisible" t-ref="pointer" t-attf-class="                 o_tour_pointer                 o_{{ position }}                 {{ isOpen ? 'o_open' : (props.bounce ? 'o_bouncing' : '') }}                 {{ props.pointerState.onClick ? 'cursor-pointer' : '' }}             " t-attf-style="                 --TourPointer__width: {{ constructor.width }}px;                 --TourPointer__height: {{ constructor.height }}px;             " t-on-mouseenter="props.pointerState.onMouseEnter or (() =&gt; {})" t-on-mouseleave="props.pointerState.onMouseLeave or (() =&gt; {})" t-on-click="props.pointerState.onClick or (() =&gt; {})">
            <div class="o_tour_pointer_tip position-absolute"/>
            <div class="o_tour_pointer_content rounded overflow-hidden px-3 py-2 w-100 h-100 position-relative" t-att-class="{ 'invisible': !isOpen }">
                <t t-out="content"/>
            </div>
        </div>
        <div class="o_tour_dropzone position-fixed pe-none" t-if="props.pointerState.isVisible and props.pointerState.isZone" t-ref="zone" style="border: 3px dashed #714b67;"/>
    </t>
`);
registerTemplate("web_tour.TourRecorder", `/web_tour/static/src/tour_service/tour_recorder/tour_recorder.xml`, `<t t-name="web_tour.TourRecorder" xml:space="preserve">
    <div class="d-flex position-fixed bottom-0 start-0 bg-primary o_tour_recorder">
        <div t-ref="tour_recorder" class="d-flex">
            <button class="o_button_record btn btn-primary rounded-0" t-on-click.prevent.stop="toggleRecording">
                <span class="px-2 me-1 rounded-circle" t-att-class="state.recording ? 'bg-danger': 'bg-secondary'" role="status" aria-hidden="true"/>
                Record
                <span class="fst-italic fw-lighter" t-if="state.editedElement"> (recording keyboard)</span>
            </button>
            <Dropdown position="'top-end'">
                <button class="o_button_steps btn btn-primary rounded-0">
                    Steps <span class="badge rounded-pill bg-danger"><t t-esc="state.steps.length"/></span>
                </button>
                <t t-set-slot="content">
                    <div class="o_tour_recorder p-2">
                        <h4>Steps:</h4>
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <td>n°</td>
                                    <td>trigger</td>
                                    <td/>
                                </tr>
                            </thead>
                            <tbody>
                                <t t-foreach="state.steps" t-as="step" t-key="step_index">
                                    <tr class="o_tour_step" t-att-class="step.triggerNotUnique ? 'text-danger' : ''">
                                        <td><t t-esc="step_index + 1"/>.</td>
                                        <td class="o_tour_step_trigger">
                                            <t t-esc="step.trigger"/>
                                            <span t-if="step.run and step.run != 'click'" class="fst-italic fw-lighter"><br/>(run: <t t-esc="step.run"/>) </span>
                                        </td>
                                        <td><button class="o_button_delete_step btn btn-link text-danger fa fa-trash mx-1" t-on-click.prevent.stop="() =&gt; state.steps.splice(step_index, 1)"/></td>
                                    </tr>
                                </t>
                            </tbody>
                        </table>
                    </div>
                </t>
            </Dropdown>
            <Dropdown t-if="state.steps.length" position="'top-end'">
                <button class="o_button_save btn btn-primary px-1 rounded-0">
                    <i class="fa fa-floppy-o"/>
                </button>
                <t t-set-slot="content">
                    <div class="o_tour_recorder p-1" style="min-width: 30vw;">
                        <form class="p-1" t-on-submit.prevent="saveTour">
                            <label for="name" class="o_form_label my-1">Name:</label><br/>
                            <input t-att-value="state.tourName" t-on-change="(ev) =&gt; state.tourName = ev.target.value" class="o_input" placeholder="name_of_the_tour" type="text" name="name"/>
                            <label for="url" class="o_form_label my-1">Url:</label><br/>
                            <input t-att-value="state.url" t-on-change="(ev) =&gt; state.url = ev.target.value" class="o_input" type="text" name="url"/>
                            <button class="o_button_save_confirm btn btn-primary mt-3">Save</button>
                        </form>
                    </div>
                </t>
            </Dropdown>
            <button t-if="state.steps.length" class="btn btn-primary px-1" t-on-click="resetTourRecorderState"><i class="fa fa-undo"/></button>
            <button class="btn btn-primary position-absolute bottom-0 start-100 rounded-0 border-1 o_tour_recorder_close_button" t-on-click.prevent.stop="() =&gt; props.onClose()"><i class="fa fa-close"/></button>
        </div>
    </div>
</t>
`);
registerTemplate("web.DebugMenu", `/web/static/src/core/debug/debug_menu.xml`, `<t t-name="web.DebugMenu" xml:space="preserve">
        <div class="o_debug_manager">
            <Dropdown beforeOpen.bind="loadGroupedItems" position="'bottom-end'">
                <button t-att-class="\`o-dropdown--narrow \${env.inDialog?'btn btn-link':''}\`">
                    <i class="fa fa-bug" role="img" aria-label="Open developer tools"/>
                </button>
                <t t-set-slot="content">
                    <t t-foreach="sectionEntries" t-as="entry" t-key="entry[0]">
                        <div class="dropdown-menu_group dropdown-header">
                            <t t-esc="getSectionLabel(entry[0])"/>
                        </div>
                        <t t-foreach="entry[1]" t-as="element" t-key="element_index">
                            <DropdownItem t-if="element.type == 'item'" onSelected="element.callback" attrs="{ href: element.href }">
                                <span t-att-style="entry[0] and 'padding-left: 12px;'" t-esc="element.description"/>
                            </DropdownItem>
                            <t t-if="element.type == 'component'" t-component="element.Component" t-props="element.props"/>
                        </t>
                    </t>
                </t>
            </Dropdown>
        </div>
    </t>

`);
registerTemplate("web.DebugMenu.SetDefaultDialog", `/web/static/src/core/debug/debug_menu_items.xml`, `<t t-name="web.DebugMenu.SetDefaultDialog" xml:space="preserve">
        <Dialog title.translate="Set Default Values">
            <table style="width: 100%">
                <tr>
                    <td>
                        <label for="formview_default_fields" class="oe_label oe_align_right">
                            Default:
                        </label>
                    </td>
                    <td class="oe_form_required">
                        <select id="formview_default_fields" class="o_input" t-model="state.fieldToSet">
                            <option value=""/>
                            <option t-foreach="defaultFields" t-as="field" t-att-value="field.name" t-key="field.name">
                                <t t-esc="field.string"/> = <t t-esc="field.displayed"/>
                            </option>
                        </select>
                    </td>
                </tr>
                <tr t-if="conditions.length">
                    <td>
                        <label for="formview_default_conditions" class="oe_label oe_align_right">
                            Condition:
                        </label>
                    </td>
                    <td>
                        <select id="formview_default_conditions" class="o_input" t-model="state.condition">
                            <option value=""/>
                            <option t-foreach="conditions" t-as="cond" t-att-value="cond.name + '=' + cond.value" t-key="cond.name">
                                <t t-esc="cond.string"/>=<t t-esc="cond.displayed"/>
                            </option>
                        </select>
                    </td>
                </tr>
                <tr>
                    <td colspan="2">
                        <input type="radio" id="formview_default_self" value="self" name="scope" t-model="state.scope"/>
                        <label for="formview_default_self" class="oe_label" style="display: inline;">
                            Only you
                        </label>
                        <br/>
                        <input type="radio" id="formview_default_all" value="all" name="scope" t-model="state.scope"/>
                        <label for="formview_default_all" class="oe_label" style="display: inline;">
                            All users
                        </label>
                    </td>
                </tr>
            </table>
            <t t-set-slot="footer">
                <button class="btn btn-secondary" t-on-click="props.close">Close</button>
                <button class="btn btn-secondary" t-on-click="saveDefault">Save default</button>
            </t>
        </Dialog>
    </t>

    `);
registerTemplate("web.DebugMenu.GetMetadataDialog", `/web/static/src/core/debug/debug_menu_items.xml`, `<t t-name="web.DebugMenu.GetMetadataDialog" xml:space="preserve">
        <Dialog title.translate="Metadata">
            <table class="table table-sm table-striped">
                <tr>
                    <th>ID:</th>
                    <td><t t-esc="state.id"/></td>
                </tr>
                <tr>
                    <th>XML ID:</th>
                    <td>
                        <t t-if="state.xmlids.length &gt; 1">
                            <t t-foreach="state.xmlids" t-as="imd" t-key="imd['xmlid']">
                                <div t-att-class="&quot;p-0 &quot; + (imd[&quot;xmlid&quot;] === state.xmlid ? &quot;fw-bolder &quot; : &quot;&quot;) + (imd[&quot;noupdate&quot;] === true ? &quot;fst-italic &quot; : &quot;&quot;)" t-esc="imd['xmlid']"/>
                            </t>
                        </t>
                        <t t-elif="state.xmlid" t-esc="state.xmlid"/>
                        <t t-else="">
                            / <a t-on-click="onClickCreateXmlid"> (create)</a>
                        </t>
                    </td>
                </tr>
                <tr>
                    <th>No Update:</th>
                    <td>
                        <t t-esc="state.noupdate"/>
                        <t t-if="state.xmlid">
                            <a t-on-click="toggleNoupdate"> (change)</a>
                        </t>
                    </td>
                </tr>
                <tr>
                    <th>Creation User:</th>
                    <td><t t-esc="state.creator"/></td>
                </tr>
                <tr>
                    <th>Creation Date:</th>
                    <td><t t-esc="state.createDate"/></td>
                </tr>
                <tr>
                    <th>Latest Modification by:</th>
                    <td><t t-esc="state.lastModifiedBy"/></td>
                </tr>
                <tr>
                    <th>Latest Modification Date:</th>
                    <td><t t-esc="state.writeDate"/></td>
                </tr>
            </table>
        </Dialog>
    </t>

    `);
registerTemplate("web.DebugMenu.GetViewDialog", `/web/static/src/core/debug/debug_menu_items.xml`, `<t t-name="web.DebugMenu.GetViewDialog" xml:space="preserve">
        <Dialog title.translate="Get View">
            <pre t-esc="props.arch"/>
            <t t-set-slot="footer">
                <button class="btn btn-primary o-default-button" t-on-click="() =&gt; props.close()">Close</button>
            </t>
        </Dialog>
    </t>
`);
registerTemplate("web.CalendarCommonPopover", `/web/static/src/views/calendar/calendar_common/calendar_common_popover.xml`, `<t t-name="web.CalendarCommonPopover" xml:space="preserve">
        <t t-if="env.isSmall">
            <Dialog title="props.record.title" contentClass="'o_calendar_color_'+ props.record.colorIndex">
                <t t-call="{{ constructor.subTemplates.body }}"/>
                <t t-set-slot="footer">
                    <t t-call="{{ constructor.subTemplates.footer }}"/>
                </t>
            </Dialog>
        </t>
        <t t-else="">
            <t t-call="{{ constructor.subTemplates.popover }}"/>
        </t>
    </t>

    `);
registerTemplate("web.CalendarCommonPopover.popover", `/web/static/src/views/calendar/calendar_common/calendar_common_popover.xml`, `<t t-name="web.CalendarCommonPopover.popover" xml:space="preserve">
        <div class="card-header d-flex justify-content-between py-2 pe-2">
            <span class="popover-header border-0 text-truncate" t-esc="props.record.title" t-att-data-tooltip="props.record.title"/>
            <span class="o_cw_popover_close ms-4 mt-2 me-2" t-on-click.stop="() =&gt; props.close()">
                <i class="fc-close fc-icon fc-icon-x"/>
            </span>
        </div>
        <div class="o_cw_body">
            <t t-call="{{ constructor.subTemplates.body }}"/>
            <div class="card-footer d-flex gap-1 border-top" t-att-class="{ 'o_footer_shrink': !hasFooter }">
                <t t-call="{{ constructor.subTemplates.footer }}"/>
            </div>
        </div>
    </t>

    `);
registerTemplate("web.CalendarCommonPopover.body", `/web/static/src/views/calendar/calendar_common/calendar_common_popover.xml`, `<t t-name="web.CalendarCommonPopover.body" xml:space="preserve">
        <ul class="list-group list-group-flush">
            <li t-if="date" class="list-group-item">
                <i class="fa fa-fw fa-calendar text-400"/>
                <span class="fw-bold ms-2" t-esc="date"/> <small t-if="dateDuration != 'All day'"><b t-esc="dateDuration"/></small>
            </li>
            <li t-if="time" class="list-group-item">
                <i class="fa fa-fw fa-clock-o text-400"/>
                <span class="fw-bold ms-2" t-esc="time"/> <small t-if="timeDuration"><b t-esc="\`(\${timeDuration})\`"/></small>
            </li>
        </ul>
        <ul class="list-group list-group-flush o_cw_popover_fields_secondary">
            <Record resModel="props.model.resModel" resId="props.record.id" fields="props.model.fields" activeFields="activeFields" mode="'readonly'" values="props.record.rawRecord" t-slot-scope="slot">
                <t t-foreach="Object.keys(props.model.popoverFieldNodes)" t-as="fieldId" t-key="fieldId">
                    <t t-set="fieldInfo" t-value="props.model.popoverFieldNodes[fieldId]"/>
                    <t t-set="fieldType" t-value="props.model.fields[fieldId].type"/>
                    <t t-if="!isInvisible(fieldInfo, slot.record)">
                        <li class="list-group-item d-flex text-nowrap align-items-center" t-att-class="fieldInfo.attrs.class" t-att-data-tooltip="fieldType === 'html' ? '' : getFormattedValue(fieldId, slot.record)">
                            <span class="fw-bold me-2" t-if="!fieldInfo.options.noLabel">
                                <t t-if="fieldInfo.options.icon">
                                    <i t-attf-class="fa-fw {{fieldInfo.options.icon}} text-400"/>
                                </t>
                                <t t-else="">
                                    <t t-esc="fieldInfo.string"/>
                                </t>
                            </span>
                            <div class="flex-grow-1 o_cw_popover_field overflow-hidden">
                                <Field name="fieldInfo.name" record="slot.record" fieldInfo="fieldInfo" type="fieldInfo.widget"/>
                            </div>
                        </li>
                    </t>
                </t>
            </Record>
        </ul>
    </t>

    `);
registerTemplate("web.CalendarCommonPopover.footer", `/web/static/src/views/calendar/calendar_common/calendar_common_popover.xml`, `<t t-name="web.CalendarCommonPopover.footer" xml:space="preserve">
        <t t-if="isEventEditable">
            <a href="#" class="btn btn-primary o_cw_popover_edit" t-on-click="onEditEvent">Edit</a>
        </t>
        <t t-if="isEventDeletable">
            <a href="#" class="btn btn-secondary o_cw_popover_delete" t-on-click="onDeleteEvent">Delete</a>
        </t>
    </t>

`);
registerTemplate("web.CalendarCommonRenderer", `/web/static/src/views/calendar/calendar_common/calendar_common_renderer.xml`, `<t t-name="web.CalendarCommonRenderer" xml:space="preserve">
        <div class="o_calendar_widget" t-ref="fullCalendar"/>
    </t>

    `);
registerTemplate("web.CalendarCommonRenderer.event", `/web/static/src/views/calendar/calendar_common/calendar_common_renderer.xml`, `<t t-name="web.CalendarCommonRenderer.event" xml:space="preserve">
            <t t-if="!isTimeHidden">
                <span class="d-none d-lg-inline fc-time" t-esc="startTime"/>
                <t> </t>
            </t>
            <div class="o_event_title text-truncate" t-out="title"/>
    </t>

    `);
registerTemplate("web.CalendarCommonRendererHeader", `/web/static/src/views/calendar/calendar_common/calendar_common_renderer.xml`, `<t t-name="web.CalendarCommonRendererHeader" xml:space="preserve">
        <span class="o_cw_day_name" t-esc="scale == 'day' ? weekdayLong : weekdayShort "/> <span t-if="scale != 'month'" class="fc-day-number o_cw_day_number" t-esc="day"/>
    </t>

`);
registerTemplate("web.CalendarController", `/web/static/src/views/calendar/calendar_controller.xml`, `<t t-name="web.CalendarController" xml:space="preserve">
        <div t-att-class="className" t-ref="root">
            <Layout className="model.useSampleModel ? 'o_view_sample_data' : ''" display="props.display">
                <t t-set-slot="control-panel-additional-actions">
                    <CogMenu/>
                </t>
                <t t-set-slot="layout-buttons">
                    <t t-call="{{ props.buttonTemplate }}"/>
                </t>
                <t t-set-slot="layout-actions">
                    <SearchBar toggler="searchBarToggler"/>
                </t>
                <t t-set-slot="control-panel-navigation-additional">
                    <t t-component="searchBarToggler.component" t-props="searchBarToggler.props"/>
                </t>
                <div class="o_calendar_container d-grid h-100 bg-view">
                    <div class="o_calendar_header d-flex align-items-center gap-1 px-3 pe-md-1 py-2 px-print-0 pt-print-0 border-bottom">
                        <div t-if="!env.isSmall" class="o_calendar_navigation_buttons btn-group d-print-none">
                            <button class="o_calendar_button_prev btn btn-secondary d-none d-md-block" title="Previous" aria-label="Previous" t-on-click.stop="() =&gt; this.setDate('previous')"><i class="oi oi-arrow-left"/></button>
                            <button class="o_calendar_button_next btn btn-secondary d-none d-md-block" title="Next" aria-label="Next" t-on-click.stop="() =&gt; this.setDate('next')"><i class="oi oi-arrow-right"/></button>
                        </div>
                        <ViewScaleSelector scales="scales" currentScale="model.scale" isWeekendVisible="state.isWeekendVisible" setScale.bind="setScale" toggleWeekendVisibility.bind="toggleWeekendVisibility" dropdownClass="'d-print-none order-3 order-lg-0'"/>
                        <button class="btn btn-secondary o_calendar_button_today d-print-none order-2 order-lg-0 ms-auto ms-lg-0" t-att-class="env.isSmall ? 'btn-sm btn-light' : 'btn-secondary'" t-on-click.stop="() =&gt; this.setDate('today')">   <span t-if="env.isSmall" class="position-relative pt-1"><t t-esc="today"/><i class="fa fa-calendar-o position-absolute top-50 start-50 translate-middle fs-1"/></span>
                            <t t-else="">Today</t>
                        </button>
                        <h5 class="d-inline-flex ps-lg-2 ps-print-0 mb-0">
                            <t t-if="model.meta.scale === 'year'">
                                <t t-esc="currentYear"/>
                            </t>
                            <t t-elif="model.meta.scale === 'month'">
                                <t t-esc="currentMonth"/>
                            </t>
                            <t t-elif="model.meta.scale === 'week'">
                                <t t-esc="weekHeader"/> <span t-if="model.meta.scale === 'week'" class="badge bg-100 rounded px-1 ms-1">Week <t t-esc="currentWeek"/></span>
                            </t>
                            <t t-else="">
                                <t t-esc="dayHeader"/>
                            </t>
                        </h5>
                    </div>
                    <div class="o_sidebar_toggler d-none d-md-flex d-print-none align-items-center border-bottom pe-3">
                        <button class="btn btn-light oi oi-panel-right collapsed ms-2 lh-base" t-on-click="toggleSideBar"/>
                    </div>
                    <MobileFilterPanel t-if="env.isSmall" t-props="mobileFilterPanelProps"/>
                    <div class="o_calendar_wrapper d-flex overflow-hidden">
                        <t t-if="showCalendar" t-component="props.Renderer" t-props="rendererProps"/>
                        <div t-if="showSideBar" class="o_calendar_sidebar_container d-print-none position-relative w-100 w-md-auto bg-view overflow-x-hidden overflow-y-auto">
                            <div class="o_calendar_sidebar">
                                <DatePicker t-if="!env.isSmall" t-props="datePickerProps"/>
                                <FilterPanel t-props="filterPanelProps"/>
                            </div>
                        </div>
                    </div>
                </div>
            </Layout>
        </div>
    </t>

    `);
registerTemplate("web.CalendarController.controlButtons", `/web/static/src/views/calendar/calendar_controller.xml`, `<t t-name="web.CalendarController.controlButtons" xml:space="preserve"/>

`);
registerTemplate("web.CalendarRenderer", `/web/static/src/views/calendar/calendar_renderer.xml`, `<t t-name="web.CalendarRenderer" xml:space="preserve">
        <div class="o_calendar_renderer h-100 flex-grow-1">
            <ActionSwiper t-props="actionSwiperProps">
                <t t-component="calendarComponent" t-props="props" t-key="calendarKey"/>
            </ActionSwiper>
        </div>
    </t>

`);
registerTemplate("web.CalendarYearPopover", `/web/static/src/views/calendar/calendar_year/calendar_year_popover.xml`, `<t t-name="web.CalendarYearPopover" xml:space="preserve">
        <t t-if="env.isSmall">
            <Dialog title="dialogTitle">
                <t t-call="{{ constructor.subTemplates.body }}"/>
                <t t-set-slot="footer">
                    <t t-call="{{ constructor.subTemplates.footer }}"/>
                </t>
            </Dialog>
        </t>
        <t t-else="">
            <t t-call="{{ constructor.subTemplates.popover }}"/>
        </t>
    </t>

    `);
registerTemplate("web.CalendarYearPopover.popover", `/web/static/src/views/calendar/calendar_year/calendar_year_popover.xml`, `<t t-name="web.CalendarYearPopover.popover" xml:space="preserve">
        <div class="position-absolute" style="top: .75rem; right: 1rem;">
            <span class="o_cw_popover_close" t-on-click.stop="() =&gt; props.close()">
                <i class="fc-close fc-icon fc-icon-x"/>
            </span>
        </div>
        <div class="o_cw_body popover-body d-flex flex-column gap-2">
            <t t-call="{{ constructor.subTemplates.body }}"/>
            <t t-if="props.model.canCreate">
                <t t-call="{{ constructor.subTemplates.footer }}"/>
            </t>
        </div>
    </t>

    `);
registerTemplate("web.CalendarYearPopover.body", `/web/static/src/views/calendar/calendar_year/calendar_year_popover.xml`, `<t t-name="web.CalendarYearPopover.body" xml:space="preserve">
        <div t-foreach="recordGroups" t-as="recordGroup" t-key="recordGroup.title">
            <h5 t-out="recordGroup.title"/>
            <t t-foreach="recordGroup.records" t-as="record" t-key="record.id">
                <t t-call="{{ constructor.subTemplates.record }}"/>
            </t>
        </div>
    </t>

    `);
registerTemplate("web.CalendarYearPopover.footer", `/web/static/src/views/calendar/calendar_year/calendar_year_popover.xml`, `<t t-name="web.CalendarYearPopover.footer" xml:space="preserve">
        <t t-if="props.model.canCreate">
            <a href="#" class="btn-link o_cw_popover_create" t-on-click.prevent="onCreateButtonClick">
                <i class="fa fa-plus"/>
                Create
            </a>
        </t>
        <t t-else="">
            <button class="btn btn-primary o-default-button" t-on-click="props.close">
                <t>Ok</t>
            </button>
        </t>
    </t>

    `);
registerTemplate("web.CalendarYearPopover.record", `/web/static/src/views/calendar/calendar_year/calendar_year_popover.xml`, `<t t-name="web.CalendarYearPopover.record" xml:space="preserve">
        <a href="#" t-on-click.prevent="() =&gt; this.onRecordClick(record)" t-attf-style="{{ getRecordStyle(record) }}" t-attf-class="o_cw_popover_link d-flex align-items-center gap-1 {{ getRecordClass(record) }} {{record.startHour ? 'o_event_dot' : 'o_event_allday'}}" t-att-data-id="record.id" t-att-data-title="record.title">
            <span t-if="record.startHour"><t t-out="record.startHour"/></span>
            <span t-esc="record.title"/>
        </a>
    </t>

`);
registerTemplate("web.CalendarYearRenderer", `/web/static/src/views/calendar/calendar_year/calendar_year_renderer.xml`, `<t t-name="web.CalendarYearRenderer" xml:space="preserve">
        <div class="o_calendar_widget overflow-y-auto" t-ref="root">
            <div class="fc-view-container">
                <div class="fc fc-dayGridYear-view d-flex flex-wrap justify-content-evenly gap-3 px-2 py-3">
                    <t t-foreach="months" t-as="month" t-key="month">
                        <div class="fc-month-container">
                            <div class="fc-month" t-ref="fullCalendar-{{ month }}"/>
                        </div>
                    </t>
                </div>
            </div>
        </div>
    </t>

`);
registerTemplate("web.CalendarFilterPanel", `/web/static/src/views/calendar/filter_panel/calendar_filter_panel.xml`, `<t t-name="web.CalendarFilterPanel" xml:space="preserve">
        <t t-foreach="props.model.filterSections" t-as="section" t-key="section.fieldName">
            <t t-if="section.filters.length gt 0">
                <div class="o_calendar_filter d-flex flex-column gap-1 mt-4 mb-2" t-att-class="{'o-calendar-filter-panel--section-collapsed': isSectionCollapsed(section)}" t-att-data-name="section.fieldName">
                    <t t-if="section.label">
                        <div class="o_calendar_filter_items_checkall o-checkbox form-check" data-value="section">
                            <t t-set="filterId" t-value="nextFilterId"/>
                            <input type="checkbox" name="select-all" class="form-check-input" t-attf-id="o_calendar_filter_{{filterId}}" t-att-checked="isAllActive(section)" t-on-change="(ev) =&gt; this.onAllFilterInputChange(section, ev)"/>
                             <t t-if="section.canCollapse">
                                <label class="d-flex align-items-center" type="button" t-on-click.stop.prevent="() =&gt; this.toggleSection(section, ev)">
                                    <span class="o_cw_filter_label fw-bolder" t-esc="section.label"/>
                                    <i class="o_cw_filter_collapse_icon fa ms-1" t-attf-class="fa-caret-{{ isSectionCollapsed(section) ? 'left' : 'down' }}"/>
                                </label>
                            </t>
                            <t t-else="">
                                <label class="o_cw_filter_label fw-bolder" t-esc="section.label"/>
                            </t>
                        </div>
                    </t>
                    <Transition visible="!isSectionCollapsed(section)" name="'o-section-slide'" leaveDuration="350" t-slot-scope="transition">
                        <div class="o_calendar_filter_items d-flex flex-column gap-1" t-att-class="transition.className">
                            <t t-foreach="getSortedFilters(section)" t-as="filter" t-key="filter.value">
                                <t t-set="filterId" t-value="nextFilterId"/>
                                <t t-call="{{ constructor.subTemplates.filter }}"/>
                            </t>
                        </div>
                    </Transition>
                    <t t-if="section.canAddFilter">
                        <AutoComplete t-props="getAutoCompleteProps(section)"/>
                    </t>
                </div>
            </t>
        </t>
    </t>

    `);
registerTemplate("web.CalendarFilterPanel.filter", `/web/static/src/views/calendar/filter_panel/calendar_filter_panel.xml`, `<t t-name="web.CalendarFilterPanel.filter" xml:space="preserve">
        <div class="o_calendar_filter_item o-checkbox form-check position-relative w-100 overflow-hidden cursor-pointer" t-att-class="getFilterColor(filter)" t-att-data-value="filter.value">
            <input type="checkbox" name="selection" class="o_cw_filter_input_bg form-check-input" t-att-style="filter.colorIndex and typeof filter.colorIndex !== 'number' ? \`border-color: \${filter.colorIndex}; background-color: \${filter.colorIndex};\` : ''" t-attf-id="o_calendar_filter_item_{{filterId}}" t-att-checked="filter.active" t-on-change="(ev) =&gt; this.onFilterInputChange(section, filter, ev)"/>
            <label class="d-flex align-items-center gap-1" t-attf-for="o_calendar_filter_item_{{filterId}}">
                <t t-if="section.hasAvatar and filter.hasAvatar">
                    <img class="o_cw_filter_avatar o_avatar rounded" t-attf-src="/web/image/{{ section.avatar.model }}/{{ filter.value }}/{{ section.avatar.field }}" alt="Avatar"/>
                </t>
                <t t-elif="filter.type === 'all'">
                    <i class="o_cw_filter_avatar o_avatar fa fa-users fa-fw flex-shrink-0 me-1" role="img" aria-label="Avatar" title="Avatar"/>
                </t>
                <span class="o_cw_filter_title flex-grow-1 text-truncate lh-base" t-esc="filter.label"/>
            </label>
            <t t-if="filter.canRemove">
                <button class="o_remove btn position-absolute top-50 end-0 py-0 px-2 bg-view text-700 transition-base" role="img" title="Remove this favorite from the list" aria-label="Remove this favorite from the list" t-on-click="() =&gt; this.onFilterRemoveBtnClick(section, filter)">
                    <i class="oi oi-close"/>
                </button>
            </t>
        </div>
    </t>

    `);
registerTemplate("web.CalendarFilterPanel.autocomplete.options", `/web/static/src/views/calendar/filter_panel/calendar_filter_panel.xml`, `<t t-name="web.CalendarFilterPanel.autocomplete.options" xml:space="preserve">
        <img t-if="option.value" t-attf-src="/web/image/{{option.model}}/{{option.value}}/avatar_128" class="rounded me-1 o_avatar"/>
        <t t-esc="option.label"/>
    </t>
`);
registerTemplate("web.CalendarMobileFilterPanel", `/web/static/src/views/calendar/mobile_filter_panel/calendar_mobile_filter_panel.xml`, `<t t-name="web.CalendarMobileFilterPanel" xml:space="preserve">
        <div class="o_other_calendar_panel d-flex align-items-center d-print-none" t-on-click="props.toggleSideBar">
            <div class="o_filter me-auto d-flex overflow-auto">
                <t t-foreach="props.model.filterSections" t-as="section" t-key="section.fieldName">
                    <t t-if="section.filters.length gt 0">

                        <t t-foreach="getSortedFilters(section)" t-as="filter" t-key="filter.value">
                            <span t-if="filter.active" class="d-flex align-items-center text-nowrap ms-1 me-2">
                                <i class="fa fa-fw" t-att-class="getFilterColor(filter) !== 'o_color_false' ? 'fa-circle ' + getFilterColor(filter) : 'fa-circle-o'"/>
                                <span class="ms-1 fw-bold text-nowrap" t-esc="filter.label"/>
                            </span>
                        </t>
                    </t>
                </t>
            </div>
            <i t-attf-class="oi fa-fw oi-chevron-{{caretDirection}} ms-2"/>
        </div>
    </t>

`);
registerTemplate("web.CalendarQuickCreate", `/web/static/src/views/calendar/quick_create/calendar_quick_create.xml`, `<t t-name="web.CalendarQuickCreate" xml:space="preserve">
        <Dialog size="'sm'" title="dialogTitle">
            <div class="o-calendar-quick-create mb-3">
                <label for="title" class="col-form-label o_form_label">
                    Name:
                </label>
                <input type="text" class="o_input o_required_modifier o-calendar-quick-create--input" name="title" t-ref="title" t-on-keyup="onInputKeyup" t-att-value="props.title"/>
            </div>
            <t t-set-slot="footer">
                <button class="btn btn-primary o-calendar-quick-create--create-btn" t-on-click="onCreateBtnClick">
                    Create
                </button>
                <button class="btn btn-secondary o-calendar-quick-create--edit-btn" t-on-click="onEditBtnClick">
                    Edit
                </button>
                <button class="btn btn-secondary o-calendar-quick-create--cancel-btn" t-on-click="onCancelBtnClick">
                    Cancel
                </button>
            </t>
        </Dialog>
    </t>

`);
registerTemplate("web.AceField", `/web/static/src/views/fields/ace/ace_field.xml`, `<t t-name="web.AceField" xml:space="preserve">

        <div class="o_field_widget oe_form_field o_ace_view_editor oe_ace_open">
            <CodeEditor value="state.initialValue" mode="mode" readonly="props.readonly" onBlur.bind="commitChanges" onChange.bind="handleChange" class="'ace-view-editor'" theme="theme" maxLines="200"/>
        </div>
    </t>

`);
registerTemplate("web.AttachmentImageField", `/web/static/src/views/fields/attachment_image/attachment_image_field.xml`, `<t t-name="web.AttachmentImageField" xml:space="preserve">
        <div class="o_attachment_image">
            <img t-if="props.record.data[props.name]" t-attf-src="/web/image/{{ props.record.data[props.name][0] }}?unique=1" t-att-title="!!env.debug and props.record.data[props.name][1]" alt="Image"/>
        </div>
    </t>

`);
registerTemplate("web.BadgeField", `/web/static/src/views/fields/badge/badge_field.xml`, `<t t-name="web.BadgeField" xml:space="preserve">
        <span t-if="props.record.data[props.name]" class="badge rounded-pill" t-att-class="classFromDecoration" t-esc="formattedValue"/>
    </t>

`);
registerTemplate("web.BadgeSelectionField", `/web/static/src/views/fields/badge_selection/badge_selection_field.xml`, `<div t-name="web.BadgeSelectionField" class="d-flex flex-wrap gap-1 mb-3" xml:space="preserve">
        <t t-if="props.readonly">
            <span t-esc="string" t-att-raw-value="value"/>
        </t>
        <t t-else="">
            <t t-foreach="options" t-as="option" t-key="option[0]">
                <span class="o_selection_badge btn btn-secondary mb-1" t-att-class="{ 'active': value === option[0], 'btn-sm': props.size === 'sm', 'btn-lg': props.size === 'lg' }" t-att-value="stringify(option[0])" t-esc="option[1]" t-on-click="() =&gt; this.onChange(option[0])"/>
            </t>
        </t>
    </div>

`);
registerTemplate("web.BinaryField", `/web/static/src/views/fields/binary/binary_field.xml`, `<t t-name="web.BinaryField" xml:space="preserve">
        <t t-if="!props.readonly">
            <t t-if="props.record.data[props.name]">
                <div class="w-100 d-inline-flex gap-1">
                    <FileUploader acceptedFileExtensions="props.acceptedFileExtensions" onUploaded.bind="update">
                        <t name="download" t-if="props.record.resId and !props.record.dirty">
                            <button class="btn btn-link btn-sm lh-1 fa fa-download o_download_file_button" data-tooltip="Download" aria-label="Download" t-on-click="onFileDownload">
                            </button>
                        </t>
                        <t t-set-slot="toggler">
                            <input type="text" class="o_input" t-att-value="fileName" readonly="readonly"/>
                            <button class="btn btn-link btn-sm lh-1 fa fa-pencil o_select_file_button" data-tooltip="Edit" aria-label="Edit">
                            </button>
                        </t>
                        <button class="btn btn-link btn-sm lh-1 fa fa-trash o_clear_file_button" data-tooltip="Clear" aria-label="Clear" t-on-click="() =&gt; this.update({})">
                        </button>
                    </FileUploader>
                </div>
            </t>
            <t t-else="">
                <label class="o_select_file_button btn btn-primary">
                    <FileUploader acceptedFileExtensions="props.acceptedFileExtensions" onUploaded.bind="update">
                        <t t-set-slot="toggler">
                            Upload your file
                        </t>
                    </FileUploader>
                </label>
            </t>
        </t>
        <t t-elif="props.record.resId and props.record.data[props.name]">
            <a class="o_form_uri" href="#" t-on-click.prevent="onFileDownload">
                <span class="fa fa-download me-2"/>
                <t t-if="fileName" t-esc="fileName"/>
            </a>
        </t>
    </t>

    `);
registerTemplate("web.ListBinaryField", `/web/static/src/views/fields/binary/binary_field.xml`, `<t t-name="web.ListBinaryField" t-inherit="web.BinaryField" xml:space="preserve">
        <xpath expr="//label[hasclass('o_select_file_button')]" position="replace">
            <label class="o_select_file_button btn btn-sm btn-link p-0">
                <FileUploader acceptedFileExtensions="props.acceptedFileExtensions" onUploaded.bind="update">
                    <t t-set-slot="toggler">
                        <i class="fa fa-upload fa-fw"/> Upload your file
                    </t>
                </FileUploader>
            </label>
        </xpath>
    </t>

`);
registerTemplate("web.BooleanField", `/web/static/src/views/fields/boolean/boolean_field.xml`, `<t t-name="web.BooleanField" xml:space="preserve">
        <CheckBox id="props.id" value="state.value" className="'d-inline-block'" disabled="props.readonly" onChange.bind="onChange"/>
    </t>

`);
registerTemplate("web.BooleanFavoriteField", `/web/static/src/views/fields/boolean_favorite/boolean_favorite_field.xml`, `<t t-name="web.BooleanFavoriteField" xml:space="preserve">
        <div class="o_favorite" t-on-click.prevent.stop="update">
            <a href="#" t-att-class="{'pe-none' : props.readonly}">
                <i t-att-class="iconClass" role="img" t-att-title="label" t-att-aria-label="label"/>
                <t t-if="!props.readonly and !props.noLabel" t-esc="label"/>
            </a>
        </div>
    </t>

`);
registerTemplate("web.BooleanIconField", `/web/static/src/views/fields/boolean_icon/boolean_icon_field.xml`, `<t t-name="web.BooleanIconField" xml:space="preserve">
        <button t-attf-class="btn btn-sm btn-{{props.record.data[props.name] ? 'primary' : 'outline-secondary'}} mx-2 py-1 fa {{props.icon}}" t-att-data-tooltip="props.label" t-on-click.prevent.stop="update"/>
    </t>

`);
registerTemplate("web.BooleanToggleField", `/web/static/src/views/fields/boolean_toggle/boolean_toggle_field.xml`, `<t t-name="web.BooleanToggleField" t-inherit="web.BooleanField" t-inherit-mode="primary" xml:space="preserve">
        <xpath expr="//CheckBox" position="attributes">
            <attribute name="className">'o_field_boolean o_boolean_toggle form-switch'</attribute>
        </xpath>
        <xpath expr="//CheckBox" position="inside">
            ​ 
        </xpath>
    </t>

`);
registerTemplate("web.ListBooleanToggleField", `/web/static/src/views/fields/boolean_toggle/list_boolean_toggle_field.xml`, `<t t-name="web.ListBooleanToggleField" xml:space="preserve">
        <div t-on-click="onClick">
            <t t-call="web.BooleanToggleField"/>
        </div>
    </t>

`);
registerTemplate("web.CharField", `/web/static/src/views/fields/char/char_field.xml`, `<t t-name="web.CharField" xml:space="preserve">
        <t t-if="props.readonly">
            <span t-esc="formattedValue"/>
        </t>
        <t t-else="">
            <input class="o_input" t-att-class="{                     'o_field_translate': isTranslatable,                     'o_field_placeholder': hasDynamicPlaceholder                 }" t-att-id="props.id" t-att-type="props.isPassword ? 'password' : 'text'" t-att-autocomplete="props.autocomplete or (props.isPassword ? 'new-password' : 'off')" t-att-maxlength="maxLength &gt; 0 and maxLength" t-att-placeholder="placeholder" t-on-blur="onBlur" t-ref="input"/>
            <div class="o_field_input_buttons">
                <t t-if="isTranslatable">
                    <TranslationButton fieldName="props.name" record="props.record"/>
                </t>
                <button t-if="hasDynamicPlaceholder" class="btn m-0 py-0 px-2 fa fa-magic" title="Insert Field" t-on-click="onDynamicPlaceholderOpen"/>
            </div>
        </t>
    </t>

`);
registerTemplate("web.ColorField", `/web/static/src/views/fields/color/color_field.xml`, `<t t-name="web.ColorField" xml:space="preserve">
        <div class="o_field_color d-flex" t-att-class="{ 'o_field_cursor_disabled': props.readonly }" t-attf-style="background: #{color or 'url(/web/static/img/transparent.png)'}">
            <input t-on-click.stop="" class="w-100 h-100 opacity-0" type="color" t-att-value="color" t-att-disabled="props.readonly" t-on-input="(ev) =&gt; this.color = ev.target.value" t-on-change="(ev) =&gt; this.props.record.update({ [this.props.name]: ev.target.value })"/>
        </div>
    </t>

`);
registerTemplate("web.ColorPickerField", `/web/static/src/views/fields/color_picker/color_picker_field.xml`, `<t t-name="web.ColorPickerField" xml:space="preserve">
        <ColorList canToggle="props.canToggle" colors="constructor.RECORD_COLORS" forceExpanded="isExpanded" onColorSelected.bind="switchColor" selectedColor="props.record.data[props.name] || 0"/>
    </t>

`);
registerTemplate("web.CopyClipboardField", `/web/static/src/views/fields/copy_clipboard/copy_clipboard_field.xml`, `<t t-name="web.CopyClipboardField" xml:space="preserve">
        <div class="d-grid rounded-2 overflow-hidden">
            <Field t-props="fieldProps"/>
            <CopyButton className="copyButtonClassName" content="props.record.data[props.name]" icon="copyButtonIcon" successText="successText"/>
        </div>
    </t>

    `);
registerTemplate("web.CopyClipboardButtonField", `/web/static/src/views/fields/copy_clipboard/copy_clipboard_field.xml`, `<t t-name="web.CopyClipboardButtonField" xml:space="preserve">
        <CopyButton t-if="props.record.data[props.name]" className="copyButtonClassName" content="props.record.data[props.name]" copyText="copyText" disabled="disabled" successText="successText"/>
    </t>

`);
registerTemplate("web.DateTimeField", `/web/static/src/views/fields/datetime/datetime_field.xml`, `<t t-name="web.DateTimeField" xml:space="preserve">
        <t t-set="showSeparator" t-value="shouldShowSeparator()"/>
        <div class="d-flex gap-2 align-items-center" t-ref="root">

            <t t-if="props.readonly">
                <span class="text-truncate" t-esc="getFormattedValue(0)"/>
            </t>
            <t t-elif="!props.required and !props.alwaysRange and isEmpty(startDateField) and !isEmpty(endDateField)">
                <button class="o_add_date o_add_start_date btn btn-secondary btn-sm w-100" t-on-click="() =&gt; this.addDate(0)">
                    <i class="fa fa-plus me-2"/>
                    Add start date
                </button>
            </t>
            <t t-elif="props.required or props.alwaysRange or !isEmpty(startDateField) or startDateField === props.name">
                <input t-ref="start-date" type="text" t-att-id="showSeparator ? props.endDateField and props.id : props.id" class="o_input cursor-pointer" autocomplete="off" t-att-placeholder="props.placeholder" t-att-data-field="startDateField" t-on-input="onInput"/>
                <span t-if="props.warnFuture and isDateInTheFuture(0)" class="fa fa-exclamation-triangle text-danger" title="This date is on the future. Make sure it is what you expected."/>
            </t>


            <t t-if="showSeparator">
                <i class="fa fa-long-arrow-right" aria-label="Arrow icon" title="Arrow"/>
            </t>


            <t t-if="endDateField">
                <t t-if="props.readonly">
                    <span class="text-truncate" t-esc="getFormattedValue(1)"/>
                </t>
                <t t-elif="!props.required and !props.alwaysRange and !isEmpty(startDateField) and isEmpty(endDateField)">
                    <button class="o_add_date o_add_end_date btn btn-secondary btn-sm w-100" t-on-click="() =&gt; this.addDate(1)">
                        <i class="fa fa-plus me-2"/>
                        Add end date
                    </button>
                </t>
                <t t-elif="props.required or props.alwaysRange or !isEmpty(endDateField) or endDateField === props.name">
                    <input t-ref="end-date" type="text" t-att-id="props.startDateField and props.id" class="o_input cursor-pointer" autocomplete="off" t-att-placeholder="props.placeholder" t-att-data-field="endDateField" t-on-input="onInput"/>
                    <span t-if="props.warnFuture and isDateInTheFuture(1)" class="fa fa-exclamation-triangle text-danger" title="This date is on the future. Make sure it is what you expected."/>
                </t>
            </t>
        </div>
    </t>
`);
registerTemplate("web.DomainField", `/web/static/src/views/fields/domain/domain_field.xml`, `<t t-name="web.DomainField" xml:space="preserve">
        <div t-att-class="{ o_inline_mode: !props.editInDialog }">
            <t t-set="resModel" t-value="getResModel()"/>
            <t t-if="resModel">
                <t t-if="props.isFoldable and state.folded and state.isValid">
                    <div class="d-flex align-items-center" t-on-click="() =&gt; state.folded = false">
                        <i data-tooltip="Modify filter" class="fa fa-lg fa-caret-right pe-2"/>
                        <div class="d-print-contents">
                            <t t-if="!state.facets.length">
                                <span>Match <strong>all records</strong></span>
                                <t t-if="!props.readonly">
                                    <button class="btn btn-sm btn-primary o_domain_add_first_node_button mx-2" t-on-click.stop="() =&gt; this.addCondition()">
                                        <i class="fa fa-plus"/> Add condition
                                    </button>
                                </t>
                            </t>
                            <t t-foreach="state.facets" t-as="facet" t-key="facet_index">
                                <div class="d-inline-flex align-items-stretch text-nowrap px-1 position-relative" role="listitem" tabindex="0">
                                    <div class="o_searchview_facet_label rounded-start-2 btn btn-primary rounded-end-0 p-0" role="button">
                                        <i class="px-1 small fa fa-filter" role="image"/>
                                    </div>
                                    <div class="o_facet_values d-flex align-items-center px-2 bg-200 rounded-end-2 text-wrap">
                                        <small class="o_facet_value" t-esc="facet"/>
                                    </div>
                                </div>
                            </t>
                            <t t-if="state.isValid">
                                <button class="btn btn-sm btn-link o_domain_show_selection_button" data-tooltip="Show matching records" type="button" t-on-click.stop="onButtonClick">
                                    <t t-esc="state.recordCount"/> record(s)
                                </button>
                            </t>
                        </div>
                    </div>
                </t>
                <t t-else="">
                    <div class="d-flex">
                        <a t-if="props.isFoldable and state.isValid" t-on-click="fold">
                            <i class="fa fa-lg fa-caret-down pe-2"/>
                        </a>
                        <DomainSelector resModel="resModel" domain="getDomain()" readonly="props.readonly or props.editInDialog" debugUpdate.bind="debugUpdate" update.bind="update" isDebugMode="!!env.debug" className="props.readonly ? 'o_read_mode' : 'o_edit_mode'"/>
                    </div>
                    <div class="o_field_domain_panel d-flex align-items-center gap-2 mt-1">
                        <i class="oi oi-arrow-right" role="img" aria-label="Domain" title="Domain"/>
                        <t t-if="state.isValid === null and state.recordCount === null">
                            <i class="fa fa-circle-o-notch fa-spin ms-2" role="img" aria-label="Loading" title="Loading"/>
                        </t>
                        <t t-else="">
                            <t t-if="state.isValid">
                                <button class="btn btn-sm btn-link o_domain_show_selection_button" type="button" t-on-click.stop="onButtonClick">
                                    <t t-esc="state.recordCount"/> record(s)
                                </button>
                            </t>
                            <t t-else="">
                                <span class="text-warning" role="alert">
                                    <i class="fa fa-exclamation-triangle" role="img" aria-label="Warning" title="Warning"/> Invalid domain
                                </span>
                            </t>
                            <t t-if="!!env.debug and !props.readonly">
                                <button class="btn btn-sm btn-icon fa fa-refresh o_refresh_count" role="img" aria-label="Refresh" title="Refresh" t-on-click="() =&gt; this.checkProps()"/>
                            </t>
                        </t>
                        <t t-if="props.editInDialog and !props.readonly">
                            <button class="btn btn-sm btn-primary o_field_domain_dialog_button" t-on-click.prevent="onEditDialogBtnClick">Edit Domain</button>
                        </t>
                    </div>
                </t>
            </t>
            <t t-else="">
                <div>Select a model to add a filter.</div>
            </t>
        </div>
    </t>

`);
registerTemplate("web.DynamicPlaceholderPopover", `/web/static/src/views/fields/dynamic_placeholder_popover.xml`, `<t t-name="web.DynamicPlaceholderPopover" xml:space="preserve">
        <t t-if="state.isPathSelected">
            <div class="o_model_field_selector_popover" t-on-keydown="onInputKeydown" tabindex="-1">
                <div class="border-bottom p-2">
                    <div class="d-flex justify-content-between align-items-center text-dark fw-bolder">
                        <i class="btn btn-link me-n2 fa fa-arrow-left text-dark" title="Back" role="img" aria-label="Back" t-on-click="onBack"/>
                        <div class="o_model_field_selector_popover_title">Enter a default value</div>
                        <i class="o_model_field_selector_popover_close btn btn-link me-n2 fa fa-times text-dark" title="Close" role="img" aria-label="Close" t-on-click="props.close"/>
                    </div>
                    <t t-if="state.fieldName">
                        <span t-out="state.fieldName"/>
                        <br/>
                        <span>or</span>
                    </t>
                    <div class="o_model_field_selector_default_value_input mt-2">
                        <input type="text" placeholder="What should we write if the field is empty" class="o_input" t-att-value="state.defaultValue" t-on-input="(ev) =&gt; this.setDefaultValue(ev.target.value)" t-ref="autofocus"/>
                    </div>
                </div>
                <div class="o_model_field_selector_popover_footer border-top py-1 my-2 px-2">
                    <input type="text" class="o_input o_model_field_selector_debug" disabled="disabled" t-att-value="state.path"/>
                </div>
                <div class="d-flex flex-row justify-content-around py-2">
                    <button class="btn btn-primary" t-on-click="validate">
                        Insert
                    </button>
                    <button class="btn btn-secondary" t-on-click="() =&gt; this.props.close()">
                        Discard
                    </button>
                </div>
            </div>
        </t>
        <t t-else="">
            <ModelFieldSelectorPopover close.bind="closeFieldSelector" filter.bind="filter" followRelations="true" isDebugMode="!!env.debug" path="state.path" resModel="props.resModel" showSearchInput="true" update.bind="setPath"/>
        </t>
    </t>

`);
registerTemplate("web.DynamicModelFieldSelectorChar", `/web/static/src/views/fields/dynamic_widget/dynamic_model_field_selector_char.xml`, `<t t-name="web.DynamicModelFieldSelectorChar" t-inherit="web.CharField" t-inherit-mode="primary" xml:space="preserve">
        <xpath expr="//input" position="attributes">
            <attribute name="class" add="d-none" separator=" "/>
        </xpath>
        <xpath expr="//span" position="attributes">
            <attribute name="class" add="d-none" separator=" "/>
        </xpath>
        <xpath expr="//t[@t-if='props.readonly']" position="before">
            <DynamicModelFieldSelector t-props="getSelectorProps"/>
        </xpath>
    </t>
`);
registerTemplate("web.EmailField", `/web/static/src/views/fields/email/email_field.xml`, `<t t-name="web.EmailField" xml:space="preserve">
        <t t-if="props.readonly">
            <div class="d-grid">
                <a class="o_form_uri o_text_overflow" t-on-click.stop="" t-att-href="props.record.data[props.name] ? 'mailto:'+props.record.data[props.name] : undefined" t-esc="props.record.data[props.name] || ''"/>
            </div>
        </t>
        <t t-else="">
            <div class="d-inline-flex w-100">
                <input class="o_input" t-att-id="props.id" type="email" autocomplete="off" t-att-placeholder="props.placeholder" t-att-required="props.required" t-ref="input"/>
            </div>
        </t>
    </t>

    `);
registerTemplate("web.FormEmailField", `/web/static/src/views/fields/email/email_field.xml`, `<t t-name="web.FormEmailField" t-inherit="web.EmailField" t-inherit-mode="primary" xml:space="preserve">
        <xpath expr="//input" position="after">
            <a t-if="props.record.data[props.name]" t-att-href="'mailto:'+props.record.data[props.name]" class="ms-3 d-inline-flex align-items-center" target="_blank">
                <i class="fa fa-envelope" data-tooltip="Send Email" aria-label="Send Email"/>
            </a>
        </xpath>
    </t>

`);
registerTemplate("web.Field", `/web/static/src/views/fields/field.xml`, `<t t-name="web.Field" xml:space="preserve">
        <div t-att-name="props.name" t-att-class="classNames" t-att-style="props.style" t-att-data-tooltip-template="tooltip and 'web.FieldTooltip'" t-att-data-tooltip-info="tooltip">
            <t t-component="field.component" t-props="fieldComponentProps"/>
        </div>
    </t>

`);
registerTemplate("web.FieldTooltip", `/web/static/src/views/fields/field_tooltip.xml`, `<t t-name="web.FieldTooltip" xml:space="preserve">

        <p t-if="field.help" class="o-tooltip--help" role="tooltip">
            <t t-esc="field.help"/>
        </p>

        <ul class="o-tooltip--technical" t-if="debug" role="tooltip">
            <li data-item="label" t-if="field and field.label">
                <span class="o-tooltip--technical--title">Label:</span>
                <t t-esc="field.label"/>
            </li>
            <li data-item="field" t-if="field and field.name">
                <span class="o-tooltip--technical--title">Field:</span>
                <t t-esc="field.name"/>
            </li>
            <li data-item="object" t-if="resModel">
                <span class="o-tooltip--technical--title">Model:</span>
                <t t-esc="resModel"/>
            </li>
            <t t-if="field">
                <li t-if="field.type" data-item="type">
                    <span class="o-tooltip--technical--title">Type:</span>
                    <t t-esc="field.type"/>
                </li>
                <li t-if="field.model_field" data-item="model_field">
                    <span class="o-tooltip--technical--title">Model field:</span>
                    <t t-esc="field.model_field"/>
                </li>
                <li t-if="field.widget" data-item="widget">
                    <span class="o-tooltip--technical--title">Widget:</span>
                    <t t-if="field.widgetDescription" t-esc="field.widgetDescription"/>
                    <t t-if="field.widget">
                        (<t t-esc="field.widget"/>)
                    </t>
                </li>
                <li t-if="field.context" data-item="context">
                    <span class="o-tooltip--technical--title">Context:</span>
                    <t t-esc="field.context"/>
                </li>
                <li t-if="field.domain" data-item="domain">
                    <span class="o-tooltip--technical--title">Domain:</span>
                    <t t-esc="field.domain.length === 0 ? '[]' : field.domain"/>
                </li>
                <li t-if="field.invisible" data-item="invisible">
                    <span class="o-tooltip--technical--title">Invisible:</span>
                    <t t-esc="field.invisible"/>
                </li>
                <li t-if="field.column_invisible" data-item="column_invisible">
                    <span class="o-tooltip--technical--title">Column invisible:</span>
                    <t t-esc="field.column_invisible"/>
                </li>
                <li t-if="field.required" data-item="required">
                    <span class="o-tooltip--technical--title">Required:</span>
                    <t t-esc="field.required"/>
                </li>
                <li t-if="field.readonly" data-item="readonly">
                    <span class="o-tooltip--technical--title">Readonly:</span>
                    <t t-esc="field.readonly"/>
                </li>
                <li t-if="field.default" data-item="default">
                    <span class="o-tooltip--technical--title">Default:</span>
                    <t t-esc="field.default"/>
                </li>
                <li t-if="field.changeDefault" data-item="changeDefault">
                    <span class="o-tooltip--technical--title">Change default:</span>
                    Yes
                </li>
                <li t-if="field.relation" data-item="relation">
                    <span class="o-tooltip--technical--title">Relation:</span>
                    <t t-esc="field.relation"/>
                </li>
                <li t-if="field.selection" data-item="selection">
                    <span class="o-tooltip--technical--title">Selection:</span>
                    <ul class="o-tooltip--technical">
                        <li t-foreach="field.selection" t-as="option" t-key="option_index">
                            [<t t-esc="option[0]"/>]
                            <t t-if="option[1]"> - </t>
                            <t t-esc="option[1]"/>
                        </li>
                    </ul>
                </li>
            </t>
        </ul>
    </t>

`);
registerTemplate("web.FileUploader", `/web/static/src/views/fields/file_handler.xml`, `<t t-name="web.FileUploader" xml:space="preserve">
        <t t-if="state.isUploading and props.showUploadingText">Uploading...</t>
        <span t-else="" t-on-click.prevent="onSelectFileButtonClick" style="display:contents">
            <t t-slot="toggler"/>
        </span>
        <t t-slot="default"/>
        <input type="file" t-att-name="props.inputName" t-ref="fileInput" t-attf-class="o_input_file d-none {{ props.fileUploadClass or '' }}" t-att-multiple="props.multiUpload ? 'multiple' : false" t-att-accept="props.acceptedFileExtensions or '*'" t-on-change="onFileChange"/>
    </t>

`);
registerTemplate("web.FloatField", `/web/static/src/views/fields/float/float_field.xml`, `<t t-name="web.FloatField" xml:space="preserve">
        <span t-if="props.readonly" t-esc="formattedValue"/>
        <input t-else="" t-on-focusin="onFocusIn" t-on-focusout="onFocusOut" t-att-id="props.id" t-ref="numpadDecimal" t-att-placeholder="props.placeholder" t-att-type="props.inputType" inputmode="decimal" class="o_input" autocomplete="off" t-att-step="props.step"/>
    </t>

`);
registerTemplate("web.FloatTimeField", `/web/static/src/views/fields/float_time/float_time_field.xml`, `<t t-name="web.FloatTimeField" xml:space="preserve">
        <span t-if="props.readonly" t-esc="formattedValue"/>
        <input t-else="" t-att-id="props.id" t-att-type="props.inputType" t-ref="numpadDecimal" t-att-placeholder="props.placeholder" class="o_input" autocomplete="off"/>
    </t>

`);
registerTemplate("web.FloatToggleField", `/web/static/src/views/fields/float_toggle/float_toggle_field.xml`, `<t t-name="web.FloatToggleField" xml:space="preserve">
        <span t-if="props.readonly and !props.disableReadOnly" t-esc="formattedValue"/>
        <button t-else="" class="o_field_float_toggle" t-on-click="onChange"><t t-esc="formattedValue"/></button>
    </t>

`);
registerTemplate("web.GaugeField", `/web/static/src/views/fields/gauge/gauge_field.xml`, `<t t-name="web.GaugeField" xml:space="preserve">
        <div class="oe_gauge position-relative">
            <canvas t-ref="canvas"/>
            <span class="o_gauge_value position-absolute start-0 end-0 bottom-0 text-center" t-esc="props.record.data[props.name]"/>
        </div>
    </t>

`);
registerTemplate("web.GoogleSlideViewer", `/web/static/src/views/fields/google_slide_viewer/google_slide_viewer.xml`, `<t t-name="web.GoogleSlideViewer" t-inherit="web.CharField" xml:space="preserve">
        <xpath expr="//t[@t-else='']" position="after">
            <t t-if="url">
                <div>
                    <iframe class="o_embed_iframe w-100" alt="Google Slide Viewer" t-att-src="url" t-att-name="props.name" t-on-error="onLoadFailed"/>
                </div>
            </t>
        </xpath>
    </t>

`);
registerTemplate("web.HandleField", `/web/static/src/views/fields/handle/handle_field.xml`, `<t t-name="web.HandleField" xml:space="preserve">
        <span class="o_row_handle oi oi-draggable ui-sortable-handle" t-on-click.stop=""/>
    </t>

`);
registerTemplate("web.HtmlField", `/web/static/src/views/fields/html/html_field.xml`, `<t t-name="web.HtmlField" xml:space="preserve">
        <t t-if="props.readonly">
            <span t-out="props.record.data[props.name] or ''"/>
        </t>
        <t t-else="" t-call="web.TextField"/>
    </t>

`);
registerTemplate("web.IframeWrapperField", `/web/static/src/views/fields/iframe_wrapper/iframe_wrapper_field.xml`, `<t t-name="web.IframeWrapperField" xml:space="preserve">
        <div class="o_preview_iframe_wrapper">
            <iframe src="about:blank" class="o_preview_iframe" t-ref="iframe"/>
        </div>
    </t>

`);
registerTemplate("web.ImageField", `/web/static/src/views/fields/image/image_field.xml`, `<t t-name="web.ImageField" xml:space="preserve">
        <div class="d-inline-block position-relative opacity-trigger-hover">
            <div t-if="!props.readonly and fieldType !== 'many2one'" t-attf-class="position-absolute d-flex justify-content-between w-100 bottom-0 opacity-0 opacity-100-hover {{isMobile ? 'o_mobile_controls' : ''}}" aria-atomic="true" t-att-style="sizeStyle">
                <FileUploader acceptedFileExtensions="props.acceptedFileExtensions" t-key="props.record.resId" onUploaded.bind="onFileUploaded">
                    <t t-set-slot="toggler">
                        <button class="o_select_file_button btn btn-light border-0 rounded-circle m-1 p-1" data-tooltip="Edit" aria-label="Edit">
                            <i class="fa fa-pencil fa-fw"/>
                        </button>
                    </t>
                    <button t-if="props.record.data[props.name] and state.isValid" class="o_clear_file_button btn btn-light border-0 rounded-circle m-1 p-1" data-tooltip="Clear" aria-label="Clear" t-on-click="onFileRemove">
                        <i class="fa fa-trash-o fa-fw"/>
                    </button>
                </FileUploader>
            </div>
            <img loading="lazy" t-att-class="imgClass" t-att-alt="imgAlt" t-att-src="this.getUrl(props.previewImage or props.name)" t-att-name="props.name" t-att-height="props.height" t-att-width="props.width" t-att-style="sizeStyle" t-on-error.stop="onLoadFailed" t-att-data-tooltip-template="hasTooltip and tooltipAttributes.template" t-att-data-tooltip-info="hasTooltip and tooltipAttributes.info" t-att-data-tooltip-delay="hasTooltip and props.zoomDelay"/>
        </div>
    </t>

    `);
registerTemplate("web.ImageZoomTooltip", `/web/static/src/views/fields/image/image_field.xml`, `<t t-name="web.ImageZoomTooltip" xml:space="preserve">
        <div class="o_image_zoom">
            <img t-att-src="url"/>
        </div>
    </t>

`);
registerTemplate("web.ImageUrlField", `/web/static/src/views/fields/image_url/image_url_field.xml`, `<t t-name="web.ImageUrlField" xml:space="preserve">
        <img t-if="props.record.data[props.name]" class="img img-fluid" alt="Image" t-att-src="state.src" t-att-border="props.readonly ? 0 : 1" t-att-name="props.name" t-att-height="props.height" t-att-width="props.width" t-att-style="sizeStyle" t-on-error="onLoadFailed"/>
    </t>

`);
registerTemplate("web.IntegerField", `/web/static/src/views/fields/integer/integer_field.xml`, `<t t-name="web.IntegerField" xml:space="preserve">
        <span t-if="props.readonly" t-esc="formattedValue"/>
        <input t-else="" t-ref="numpadDecimal" t-on-focusin="onFocusIn" t-on-focusout="onFocusOut" t-att-id="props.id" t-att-type="props.inputType" t-att-placeholder="props.placeholder" inputmode="numeric" class="o_input" autocomplete="off" t-att-step="props.step"/>
    </t>

`);
registerTemplate("web.JournalDashboardGraphField", `/web/static/src/views/fields/journal_dashboard_graph/journal_dashboard_graph_field.xml`, `<t t-name="web.JournalDashboardGraphField" xml:space="preserve">
        <div class="o_dashboard_graph" t-att-class="props.className" t-attf-class="o_graph_{{ props.graphType }}chart">
            <canvas t-ref="canvas"/>
        </div>
    </t>

`);
registerTemplate("web.JsonbField", `/web/static/src/views/fields/jsonb/jsonb.xml`, `<t t-name="web.JsonbField" xml:space="preserve">
        <span t-esc="formattedValue"/>
    </t>

`);
registerTemplate("web.KanbanColorPickerField", `/web/static/src/views/fields/kanban_color_picker/kanban_color_picker_field.xml`, `<t t-name="web.KanbanColorPickerField" xml:space="preserve">
        <ul t-if="!props.readonly" class="o_kanban_colorpicker mb-0 ms-2">
            <t t-foreach="colors" t-as="color" t-key="color_index">
                <li role="menuitem" t-on-click="() =&gt; this.selectColor(color_index)" t-att-title="color" t-att-aria-label="color">
                    <a href="#" t-attf-class="o_kanban_color_{{ color_index }}"/>
                </li>
            </t>
        </ul>
    </t>

`);
registerTemplate("web.LabelSelectionField", `/web/static/src/views/fields/label_selection/label_selection_field.xml`, `<t t-name="web.LabelSelectionField" xml:space="preserve">
        <span t-attf-class="badge text-bg-{{className}} " t-esc="string" t-att-raw-value="props.record.data[props.name]"/>
    </t>

`);
registerTemplate("web.Many2ManyBinaryField", `/web/static/src/views/fields/many2many_binary/many2many_binary_field.xml`, `<t t-name="web.Many2ManyBinaryField" xml:space="preserve">
        <div t-attf-class="oe_fileupload {{props.className ? props.className : ''}}" aria-atomic="true">
            <div class="o_attachments">
                <t t-foreach="files" t-as="file" t-key="file_index">
                   <t t-call="web.Many2ManyBinaryField.attachment_preview"/>
                </t>
            </div>
            <div t-if="!props.readonly &amp;&amp; (!props.numberOfFiles or files.length &lt; props.numberOfFiles)" class="oe_add">
                <FileInput acceptedFileExtensions="props.acceptedFileExtensions" multiUpload="true" onUpload.bind="onFileUploaded" resModel="props.record.resModel" resId="props.record.resId or 0">
                    <button class="btn btn-secondary o_attach" data-tooltip="Attach">
                        <span class="fa fa-paperclip" aria-label="Attach"/> <t t-esc="uploadText"/>
                    </button>
                </FileInput>
            </div>
        </div>
    </t>

`);
registerTemplate("web.Many2ManyBinaryField.attachment_preview", `/web/static/src/views/fields/many2many_binary/many2many_binary_field.xml`, `<t t-name="web.Many2ManyBinaryField.attachment_preview" xml:space="preserve">
    <t t-set="editable" t-value="!props.readonly"/>
    <div t-attf-class="o_attachment o_attachment_many2many #{ editable ? 'o_attachment_editable' : '' } #{upload ? 'o_attachment_uploading' : ''}" t-att-title="file.name">
        <div class="o_attachment_wrap">
            <t t-set="ext" t-value="getExtension(file)"/>
            <t t-set="url" t-value="getUrl(file.id)"/>
            <div class="o_image_box float-start" t-att-data-tooltip="'Download ' + file.name">
                <a t-att-href="url" aria-label="Download" download="">
                    <span class="o_image o_hover" t-att-data-mimetype="file.mimetype" t-att-data-ext="ext" role="img"/>
                </a>
            </div>

            <div class="caption">
                <a class="ml4" t-att-data-tooltip="'Download ' + file.name" t-att-href="url" download=""><t t-esc="file.name"/></a>
            </div>
            <div class="caption small">
                <a class="ml4 small text-uppercase" t-att-href="url" download=""><b><t t-esc="ext"/></b></a>
                <div t-if="editable" class="progress o_attachment_progress_bar">
                    <div class="progress-bar progress-bar-striped active" style="width: 100%">Uploading</div>
                </div>
            </div>

            <div class="o_attachment_uploaded"><i class="text-success fa fa-check" role="img" aria-label="Uploaded" title="Uploaded"/></div>
            <div t-if="editable" class="o_attachment_delete" t-on-click.stop="() =&gt; this.onFileRemove(file.id)"><span role="img" aria-label="Delete" title="Delete">×</span></div>
        </div>
    </div>
</t>

`);
registerTemplate("web.Many2ManyCheckboxesField", `/web/static/src/views/fields/many2many_checkboxes/many2many_checkboxes_field.xml`, `<t t-name="web.Many2ManyCheckboxesField" xml:space="preserve">
        <div aria-atomic="true">
            <t t-foreach="items" t-as="item" t-key="item[0]">
                <div>
                    <CheckBox value="isSelected(item)" disabled="props.readonly" onChange="(ev) =&gt; this.onChange(item[0], ev)">
                        <t t-esc="item[1]"/>
                    </CheckBox>
                </div>
            </t>
        </div>
    </t>

`);
registerTemplate("web.KanbanMany2ManyTagsField", `/web/static/src/views/fields/many2many_tags/kanban_many2many_tags_field.xml`, `<t t-name="web.KanbanMany2ManyTagsField" xml:space="preserve">
        <div class="d-flex flex-wrap gap-1">
            <TagsList tags="tags"/>
        </div>
    </t>
`);
registerTemplate("web.Many2ManyTagsField", `/web/static/src/views/fields/many2many_tags/many2many_tags_field.xml`, `<t t-name="web.Many2ManyTagsField" xml:space="preserve">
        <div class="o_field_tags d-inline-flex flex-wrap gap-1 mw-100" t-att-class="{'o_tags_input o_input': !props.readonly}" t-ref="many2ManyTagsField">
            <TagsList tags="tags"/>
            <div t-if="showM2OSelectionField" class="o_field_many2many_selection d-inline-flex w-100" t-ref="autoComplete">
                <Many2XAutocomplete id="props.id" placeholder="tags.length ? '' : props.placeholder" resModel="relation" autoSelect="true" fieldString="string" activeActions="activeActions" update="update" quickCreate="activeActions.create ? quickCreate : null" context="props.context" getDomain.bind="getDomain" isToMany="true" nameCreateField="props.nameCreateField" noSearchMore="props.noSearchMore" getOptionClassnames.bind="getOptionClassnames"/>
            </div>
        </div>
    </t>

    `);
registerTemplate("web.Many2ManyTagsFieldColorListPopover", `/web/static/src/views/fields/many2many_tags/many2many_tags_field.xml`, `<t t-name="web.Many2ManyTagsFieldColorListPopover" xml:space="preserve">
        <div class="o_tag_popover m-2">
            <ColorList colors="props.colors" forceExpanded="true" onColorSelected="(id) =&gt; props.switchTagColor(id, props.tag)"/>
            <CheckBox className="'pt-2'" value="props.tag.colorIndex === 0" onChange.alike="(isChecked) =&gt; props.onTagVisibilityChange(isChecked, props.tag)">Hide in kanban</CheckBox>
        </div>
    </t>

`);
registerTemplate("web.Many2ManyTagsAvatarField", `/web/static/src/views/fields/many2many_tags_avatar/many2many_tags_avatar_field.xml`, `<t t-name="web.Many2ManyTagsAvatarField" xml:space="preserve">
        <div class="many2many_tags_avatar_field_container o_field_tags d-inline-flex flex-wrap mw-100 gap-1" t-att-class="{'o_tags_input o_input': !props.readonly}" t-ref="many2ManyTagsField">
            <TagsList tags="tags" visibleItemsLimit="visibleItemsLimit"/>
            <div t-if="showM2OSelectionField" class="o_field_many2many_selection d-inline-flex w-100" t-ref="autoComplete">
                <Many2XAutocomplete id="props.id" placeholder="tags.length ? '' : props.placeholder" resModel="relation" autoSelect="true" fieldString="string" activeActions="activeActions" update="update" quickCreate="activeActions.create ? quickCreate : null" context="props.context" getDomain.bind="getDomain" isToMany="true" getOptionClassnames.bind="getOptionClassnames"/>
            </div>
        </div>
    </t>

    `);
registerTemplate("web.KanbanMany2ManyTagsAvatarFieldTagsList", `/web/static/src/views/fields/many2many_tags_avatar/many2many_tags_avatar_field.xml`, `<t t-name="web.KanbanMany2ManyTagsAvatarFieldTagsList" t-inherit="web.TagsList" t-inherit-mode="primary" xml:space="preserve">
        <xpath expr="//t[@t-foreach='visibleTags']" position="before">
            <t t-if="canDisplayQuickAssignAvatar">
                <a t-on-click.stop.prevent="openPopover" tabIndex="-1" href="#" title="Assign" aria-label="Assign" class="o_quick_assign fa fa-user-plus o_m2m_avatar btn-link d-flex align-items-center text-dark" role="button"/>
            </t>
        </xpath>
        <xpath expr="//span[hasclass('o_m2m_avatar_empty')]" position="attributes">
            <attribute name="t-on-click.stop.prevent">openPopover</attribute>
        </xpath>
    </t>

    `);
registerTemplate("web.KanbanMany2ManyTagsAvatarField", `/web/static/src/views/fields/many2many_tags_avatar/many2many_tags_avatar_field.xml`, `<t t-name="web.KanbanMany2ManyTagsAvatarField" t-inherit="web.Many2ManyTagsAvatarField" t-inherit-mode="primary" xml:space="preserve">
        <xpath expr="//TagsList" position="attributes">
            <attribute name="popoverProps">popoverProps</attribute>
            <attribute name="readonly">!props.isEditable</attribute>
        </xpath>
    </t>
    `);
registerTemplate("web.Many2ManyTagsAvatarFieldPopover", `/web/static/src/views/fields/many2many_tags_avatar/many2many_tags_avatar_field.xml`, `<t t-name="web.Many2ManyTagsAvatarFieldPopover" t-inherit="web.Many2ManyTagsAvatarField" t-inherit-mode="primary" xml:space="preserve">
        <xpath expr="//div[hasclass('o_field_tags')]" position="attributes">
            <attribute name="class" add="p-2 o_m2m_tags_avatar_field_popover o_field_widget o_field_many2many_tags_avatar" remove="d-inline-flex mw-100" separator=" "/>
        </xpath>
        <xpath expr="//div[hasclass('o_field_many2many_selection')]" position="attributes">
            <attribute name="class" add="w-100" separator=" "/>
        </xpath>
        <Many2XAutocomplete position="attributes">
            <attribute name="dropdown">false</attribute>
            <attribute name="placeholder">props.placeholder</attribute>
            <attribute name="autofocus">true</attribute>
        </Many2XAutocomplete>
    </t>

`);
registerTemplate("web.Many2OneField.CreateConfirmationDialog", `/web/static/src/views/fields/many2one/many2one_field.xml`, `<t t-name="web.Many2OneField.CreateConfirmationDialog" xml:space="preserve">
        <Dialog title="title" size="'md'">
            <div>
                <t t-out="dialogContent"/>
            </div>
            <t t-set-slot="footer">
                <button class="btn btn-primary" t-on-click="onCreate">Create</button>
                <button class="btn" t-on-click="() =&gt; props.close()">Discard</button>
            </t>
        </Dialog>
    </t>

    `);
registerTemplate("web.Many2OneField", `/web/static/src/views/fields/many2one/many2one_field.xml`, `<t t-name="web.Many2OneField" xml:space="preserve">
        <t t-if="props.readonly">
            <t t-if="!props.canOpen">
                <span>
                    <span t-esc="displayName"/>
                    <t t-foreach="extraLines" t-as="extraLine" t-key="extraLine_index">
                        <br/>
                        <span t-esc="extraLine"/>
                    </t>
                </span>
            </t>
            <t t-else="">
                <a t-if="value" t-attf-class="o_form_uri #{classFromDecoration}" t-att-href="value ? \`/odoo/\${urlRelation}/\${value[0]}\` : '/'" t-on-click.prevent="onClick">
                    <span t-esc="displayName"/>
                    <t t-foreach="extraLines" t-as="extraLine" t-key="extraLine_index">
                        <br/>
                        <span t-esc="extraLine"/>
                    </t>
                </a>
            </t>
        </t>
        <t t-else="">
            <div class="o_field_many2one_selection">
                <Many2XAutocomplete t-props="Many2XAutocompleteProps"/>
                <t t-if="hasExternalButton">
                    <button type="button" class="btn btn-link text-action oi o_external_button px-1" t-att-class="env.inDialog ? 'oi-launch' : 'oi-arrow-right'" tabindex="-1" draggable="false" aria-label="Internal link" data-tooltip="Internal link" t-on-click="onExternalBtnClick"/>
                </t>
                <button t-if="hasBarcodeButton" t-on-click="onBarcodeBtnClick" type="button" class="btn ms-3 o_barcode" tabindex="-1" draggable="false" aria-label="Scan barcode" title="Scan barcode" data-tooltip="Scan barcode"/>
            </div>
            <div class="o_field_many2one_extra">
                <t t-foreach="extraLines" t-as="extraLine" t-key="extraLine_index">
                    <br t-if="!extraLine_first"/>
                    <span t-esc="extraLine"/>
                </t>
            </div>
        </t>
    </t>

`);
registerTemplate("web.Many2OneAvatarField", `/web/static/src/views/fields/many2one_avatar/many2one_avatar_field.xml`, `<t t-name="web.Many2OneAvatarField" xml:space="preserve">
        <div class="d-flex align-items-center gap-1" t-att-data-tooltip="props.record.data[props.name][1]">
            <span class="o_avatar o_m2o_avatar">
                <span t-if="props.record.data[props.name] === false and !props.readonly" class="o_avatar_empty o_m2o_avatar_empty"/>
                <img t-if="props.record.data[props.name] !== false" t-attf-src="/web/image/{{relation}}/{{props.record.data[props.name][0]}}/avatar_128" class="rounded"/>
            </span>
            <t t-call="web.Many2OneField"/>
        </div>
    </t>

    `);
registerTemplate("web.KanbanMany2OneAvatarField", `/web/static/src/views/fields/many2one_avatar/many2one_avatar_field.xml`, `<t t-name="web.KanbanMany2OneAvatarField" t-inherit="web.Many2OneAvatarField" t-inherit-mode="primary" xml:space="preserve">
        <xpath expr="//span[hasclass('o_m2o_avatar')]" position="attributes">
            <attribute name="class" separator=" " add="d-flex"/>
        </xpath>
        <xpath expr="//span[hasclass('o_m2o_avatar_empty')]" position="replace">
            <t t-if="props.record.data[props.name] === false and props.isEditable">
                <a t-on-click.stop.prevent="openPopover" tabIndex="-1" href="#" title="Assign" aria-label="Assign" class="o_quick_assign fa fa-user-plus btn-link d-flex align-items-center text-dark" role="button"/>
            </t>
        </xpath>
    </t>

`);
registerTemplate("web.Many2OneReferenceField", `/web/static/src/views/fields/many2one_reference/many2one_reference_field.xml`, `<t t-name="web.Many2OneReferenceField" xml:space="preserve">
        <Many2OneField t-props="m2oProps"/>
    </t>

`);
registerTemplate("web.MonetaryField", `/web/static/src/views/fields/monetary/monetary_field.xml`, `<t t-name="web.MonetaryField" xml:space="preserve">
        <span t-if="props.readonly" t-esc="formattedValue"/>
        <div class="text-nowrap d-inline-flex w-100 align-items-baseline position-relative" t-else="">
            <span class="o_input position-absolute pe-none d-flex w-100">
                <span t-if="!props.hideSymbol and currency and currency.position === 'before'" t-out="currencySymbol + nbsp"/>
                <span class="opacity-0 d-inline-block overflow-hidden mw-100 o_monetary_ghost_value" t-out="state.value"/>
                <span t-if="!props.hideSymbol and currency and currency.position === 'after'" t-out="nbsp + currencySymbol"/>
            </span>
            <span class="opacity-0" t-if="!props.hideSymbol and currency and currency.position === 'before'" t-out="currencySymbol + nbsp"/>
            <input t-ref="numpadDecimal" t-on-input="onInput" t-att-id="props.id" t-att-type="props.inputType" t-att-placeholder="props.placeholder" class="o_input flex-grow-1 flex-shrink-1" autocomplete="off"/>
            <span class="opacity-0" t-if="!props.hideSymbol and currency and currency.position === 'after'" t-out="nbsp + currencySymbol"/>
        </div>
    </t>

`);
registerTemplate("web.PdfViewerField", `/web/static/src/views/fields/pdf_viewer/pdf_viewer_field.xml`, `<t t-name="web.PdfViewerField" xml:space="preserve">
        <t t-if="!props.readonly">
            <div class="o_form_pdf_controls d-flex gap-1">
                <t t-if="props.record.data[props.name]">
                    <FileUploader acceptedFileExtensions="'.pdf'" onUploaded.bind="onFileUploaded">
                        <t t-set-slot="toggler">
                            <button class="btn btn-secondary fa fa-pencil o_select_file_button" data-tooltip="Edit" aria-label="Edit"/>
                        </t>
                        <button class="btn btn-secondary fa fa-trash o_clear_file_button" data-tooltip="Clear" aria-label="Clear" t-on-click="onFileRemove"/>
                    </FileUploader>
                </t>
                <t t-else="">
                    <label class="o_select_file_button btn btn-primary">
                        <FileUploader acceptedFileExtensions="'.pdf'" onUploaded.bind="onFileUploaded">
                            <t t-set-slot="toggler">
                                Upload your file
                            </t>
                        </FileUploader>
                    </label>
                </t>
            </div>
        </t>
        <t t-if="props.record.data[props.name]">
            <iframe class="o_pdfview_iframe" alt="PDF file" t-att-src="url" t-att-name="props.name" t-on-error="onLoadFailed"/>
        </t>
    </t>

`);
registerTemplate("web.PercentPieField", `/web/static/src/views/fields/percent_pie/percent_pie_field.xml`, `<t t-name="web.PercentPieField" xml:space="preserve">
        <figure class="o_pie mb-0 rounded-circle" t-attf-style="background: conic-gradient(                     var(--PercentPieField-color-active) 0% {{props.record.data[props.name]}}%,                     var(--PercentPieField-color-static) 0% 100%                 )"/>

        <div class="o_pie_info">
            <span class="o_pie_value" t-esc="formattedValue + '%'"/>
            <span class="o_pie_text" t-esc="props.string"/>
        </div>
    </t>

`);
registerTemplate("web.PercentageField", `/web/static/src/views/fields/percentage/percentage_field.xml`, `<t t-name="web.PercentageField" xml:space="preserve">
        <t t-if="props.readonly">
            <span t-esc="formattedValue"/>
        </t>
        <t t-else="">
            <div class="d-flex">
                <input t-ref="numpadDecimal" t-attf-class="o_input" t-att-placeholder="props.placeholder" type="text" inputmode="decimal" autocomplete="off"/>
                <span>%</span>
            </div>
        </t>
    </t>

`);
registerTemplate("web.PhoneField", `/web/static/src/views/fields/phone/phone_field.xml`, `<t t-name="web.PhoneField" xml:space="preserve">
        <div class="o_phone_content d-inline-flex w-100">
            <t t-if="props.readonly">
                <a t-if="props.record.data[props.name]" class="o_form_uri" t-att-href="phoneHref" t-esc="props.record.data[props.name]"/>
            </t>
            <t t-else="">
                <input class="o_input" t-att-id="props.id" type="tel" autocomplete="off" t-att-placeholder="props.placeholder" t-ref="input"/>
            </t>
        </div>
    </t>

    `);
registerTemplate("web.FormPhoneField", `/web/static/src/views/fields/phone/phone_field.xml`, `<t t-name="web.FormPhoneField" t-inherit="web.PhoneField" t-inherit-mode="primary" xml:space="preserve">
        <xpath expr="//input" position="after">
            <a t-if="props.record.data[props.name]" t-att-href="phoneHref" class="o_phone_form_link ms-3 d-inline-flex align-items-center">
                <i class="fa fa-phone"/><small class="fw-bold ms-1">Call</small>
            </a>
        </xpath>
    </t>

`);
registerTemplate("web.PriorityField", `/web/static/src/views/fields/priority/priority_field.xml`, `<t t-name="web.PriorityField" xml:space="preserve">
        <div class="o_priority" role="radiogroup" name="priority" aria-label="Priority">
            <t t-foreach="options" t-as="value" t-key="value">
                <t t-if="!value_first">
                    <t t-if="props.readonly">
                        <span class="o_priority_star fa" role="radio" t-att-class="value_index lte index ? 'fa-star' : 'fa-star-o'" tabindex="0" t-att-data-tooltip="getTooltip(value[1])" t-att-aria-checked="value_index === index ? 'true' : 'false'" t-att-aria-label="value[1]"/>
                    </t>
                    <t t-else="">
                        <a href="#" class="o_priority_star fa" role="radio" t-att-class="value_index lte index ? 'fa-star' : 'fa-star-o'" tabindex="0" t-att-data-tooltip="getTooltip(value[1])" t-att-aria-checked="value_index === index ? 'true' : 'false'" t-att-aria-label="value[1]" t-on-click.prevent.stop="() =&gt; this.onStarClicked(value[0])" t-on-mouseenter="() =&gt; state.index = value_index" t-on-mouseleave="() =&gt; state.index = -1"/>
                    </t>
                </t>
            </t>
        </div>
    </t>

`);
registerTemplate("web.ProgressBarField", `/web/static/src/views/fields/progress_bar/progress_bar_field.xml`, `<t t-name="web.ProgressBarField" xml:space="preserve">
        <div class="o_progressbar w-100 d-flex align-items-center" t-ref="numpadDecimal">
            <div t-if="props.title" class="o_progressbar_title text-nowrap pe-1"><t t-esc="props.title"/></div>
            <div class="o_progress align-middle overflow-hidden" aria-valuemin="0" t-att-aria-valuemax="this.maxValue" t-att-aria-valuenow="this.currentValue">
                <div t-attf-class="{{ progressBarColorClass }} h-100" t-att-style="'width: min(' + 100 * this.currentValue / this.maxValue + '%, 100%)'"/>
            </div>
            <div class="o_progressbar_value d-flex">
                <t t-if="isPercentage">
                    <input t-if="isEditable and props.isCurrentValueEditable" t-ref="currentValue" class="o_input h-100 text-center" type="text" inputmode="decimal" autocomplete="off" t-att-value="formatCurrentValue() or ''" t-att-required="props.required" t-on-change="onCurrentValueChange" t-on-focus="onInputFocus" t-on-blur="onInputBlur"/>
                    <span t-else="" class="mx-1" t-esc="formatCurrentValue(true)"/>
                    <span>%</span>
                </t>
                <t t-else="">
                    <input t-if="isEditable and props.isCurrentValueEditable" t-ref="currentValue" class="o_input h-100 text-center" type="text" inputmode="decimal" autocomplete="off" t-att-value="formatCurrentValue()" t-on-change="onCurrentValueChange" t-on-focus="onInputFocus" t-on-blur="onInputBlur"/>
                    <span t-else="" class="mx-1" t-esc="formatCurrentValue(true)"/>
                    /
                    <input t-if="isEditable and props.isMaxValueEditable" t-ref="maxValue" class="o_input h-100 text-center" type="text" inputmode="decimal" autocomplete="off" t-att-value="formatMaxValue()" t-on-change="onMaxValueChange" t-on-focus="onInputFocus" t-on-blur="onInputBlur"/>
                    <span t-else="" class="mx-1" t-esc="formatMaxValue(true)"/>
                </t>
            </div>
        </div>
    </t>

`);
registerTemplate("web.CardPropertiesField", `/web/static/src/views/fields/properties/card_properties_field.xml`, `<t t-name="web.CardPropertiesField" xml:space="preserve">
        <div t-ref="properties" class="w-100 fw-normal text-muted">
            <div class="o_card_property_field d-inline-flex flex-column justify-content-center align-items-start w-100 mb-1" t-foreach="propertiesList" t-as="propertyConfiguration" t-key="propertyConfiguration.name" t-if="propertyConfiguration.value and propertyConfiguration.view_in_cards">

                <div class="mw-100 text-truncate d-flex gap-2" t-att-class="{'border rounded-3 ps-2' : propertyConfiguration.type === 'boolean'}">
                    <label t-if="['integer', 'float', 'date', 'datetime', 'boolean'].includes(propertyConfiguration.type)" t-att-class="{'fw-bold' : propertyConfiguration.type !== 'boolean'}" t-out="propertyConfiguration.string"/>
                    <PropertyValue id="generateUniqueDomID()" canChangeDefinition="state.canChangeDefinition" comodel="propertyConfiguration.comodel || ''" context="props.context" domain="propertyConfiguration.domain || '[]'" readonly="props.readonly" selection="propertyConfiguration.selection" string="propertyConfiguration.string" tags="propertyConfiguration.tags" type="propertyConfiguration.type" value="propertyConfiguration.value" onChange.bind="() =&gt; {}" onTagsChange.bind="() =&gt; {}"/>
                </div>
            </div>
        </div>
    </t>
`);
registerTemplate("web.PropertiesField", `/web/static/src/views/fields/properties/properties_field.xml`, `<t t-name="web.PropertiesField" xml:space="preserve">
        <div t-ref="properties" class="row" t-att-class="{'d-none': propertiesList.length === 0 and !state.showAddButton}" t-att-columns="renderedColumnsCount">
            <t t-set="unfoldedSeparators" t-value="state.unfoldedSeparators"/>
            <t t-set="_groupedPropertiesList" t-value="groupedPropertiesList"/>
            <t t-foreach="groupedPropertiesList" t-as="propertiesListGroup" t-key="propertiesListGroup_index">
                <t t-set="foldable" t-value="propertiesListGroup.name and propertiesListGroup.title and propertiesListGroup.title.length"/>
                <t t-set="isFolded" t-value="propertiesListGroup.name and !unfoldedSeparators.includes(propertiesListGroup.name)"/>
                <div class="o_inner_group o_group col-lg-6 o_property_group" t-att-property-name="propertiesListGroup.name || ''">
                    <div t-if="!propertiesListGroup.invisibleLabel" class="o_field_property_label o_field_property_group_label d-flex flex-row w-100 mb-3 text-uppercase fw-bolder align-items-baseline pe-2" t-att-class="{'invisible': propertiesListGroup.columnSeparator}" t-on-click="() =&gt; this.onSeparatorClick(propertiesListGroup.name)">
                        <span t-if="propertiesListGroup.title" t-out="propertiesListGroup.title"/>
                        <i t-if="state.canChangeDefinition and !props.readonly and !propertiesListGroup.columnSeparator" class="o_field_property_open_popover fa fa-pencil ms-3" t-on-click.prevent.stop="(event) =&gt; this.onPropertyEdit(event, propertiesListGroup.name)"/>
                        <i t-if="state.canChangeDefinition and !props.readonly" class="oi oi-draggable ms-1 d-none d-sm-block"/>
                        <div t-if="foldable" class="ms-auto">
                            <i class="fa me-1" t-att-class="isFolded ? 'fa-caret-right' : 'fa-caret-down'"/>
                        </div>
                    </div>
                    <div t-foreach="propertiesListGroup.elements" t-as="propertyConfiguration" t-key="propertyConfiguration.name" class="o_property_field o_wrap_label" t-att-class="{                             'd-flex flex-row': !env.isSmall and !isFolded, 'o_property_folded': isFolded,                             'mb-4': renderedColumnsCount === 1, 'mb-3': renderedColumnsCount !== 1                         }" t-att-property-name="propertyConfiguration.name">
                        <t t-set="domId" t-value="generateUniqueDomID()"/>
                        <label class="o_field_property_label o_form_label text-break d-flex align-items-baseline mb-0" t-att-class="{'w-auto': env.isSmall}" t-att-for="domId">
                            <span t-if="propertyConfiguration.string and propertyConfiguration.string.length" t-out="propertyConfiguration.string" t-att-class="{'o_property_field_highlight': state.movedPropertyName === propertyConfiguration.name}"/>
                            <i t-else="" class="o_field_property_empty_label">
                                New Property
                            </i>
                            <i t-if="state.canChangeDefinition and !props.readonly" class="o_field_property_open_popover fa fa-pencil ms-2" t-on-click="(event) =&gt; this.onPropertyEdit(event, propertyConfiguration.name)"/>
                            <i t-if="state.canChangeDefinition and !props.readonly" class="oi oi-draggable ms-1 d-none d-sm-block"/>
                        </label>
                        <div class="o_property_field_value w-100">
                            <PropertyValue id="domId" canChangeDefinition="state.canChangeDefinition" checkDefinitionWriteAccess.bind="checkDefinitionWriteAccess ? checkDefinitionWriteAccess : () =&gt; {}" comodel="propertyConfiguration.comodel || ''" context="props.context" domain="propertyConfiguration.domain || '[]'" readonly="props.readonly" selection="propertyConfiguration.selection" string="propertyConfiguration.string" tags="propertyConfiguration.tags" type="propertyConfiguration.type" value="propertyConfiguration.value" onChange.bind="(value) =&gt; this.onPropertyValueChange(propertyConfiguration.name, value)" onTagsChange.bind="(newTags, newValue) =&gt; this.onTagsChange(propertyConfiguration.name, newTags, newValue)"/>
                        </div>
                    </div>
                    <div t-if="propertiesListGroup_index === _groupedPropertiesList.length - 1 and state.showAddButton" class="o_field_property_add d-none d-sm-block" t-att-class="{'g-col-2': props.columns !== 1}">
                        <button t-if="!props.readonly and state.canChangeDefinition and definitionRecordId" class="btn btn-light text-muted text-break m-0" t-on-click="onPropertyCreate">
                            <i class="fa fa-plus"/>
                            Add a Property
                        </button>
                    </div>
                </div>
            </t>
        </div>
    </t>
`);
registerTemplate("web.PropertyDefinition", `/web/static/src/views/fields/properties/property_definition.xml`, `<t t-name="web.PropertyDefinition" xml:space="preserve">
        <div class="o_field_property_definition o_field_widget o_form_view d-block" t-ref="propertyDefinition">
            <div class="d-flex justify-content-between px-3 border-bottom">
                <div t-if="!env.isSmall" class="border-end py-1">
                    <button t-attf-class="btn btn-link ps-0 {{this.isFirst ? 'disabled' : ''}}" t-on-click="() =&gt; this.onPropertyMove('up')" title="Move this Property up">
                        <i class="oi oi-chevron-up ms-2"/>
                    </button>
                    <button t-attf-class="btn btn-link pe-3 {{this.isLast ? 'disabled' : ''}}" t-on-click="() =&gt; this.onPropertyMove('down')" title="Move this Property down">
                        <i class="oi oi-chevron-down ms-2"/>
                    </button>
                </div>
                <button t-else="" class="btn oi oi-arrow-left my-2" t-on-click="() =&gt; this.props.close()"/>
                <button t-if="!props.readonly and props.canChangeDefinition" class="btn pe-0 text-danger float-end o_field_property_definition_delete" title="Remove Property" t-on-click="props.onDelete">
                    <i class="fa fa-trash"/> Delete
                </button>
            </div>
            <div class="o_modal_container p-3 o_inner_group grid">
                <div class="d-contents mb-3 mb-sm-0">
                    <label class="o_form_label align-self-center text-900">Label</label>
                    <h6 t-if="props.readonly" t-out="state.propertyDefinition.string" class="text-truncate"/>
                    <input class="o_input o_field_property_definition_header" type="text" required="" placeholder="Property Name" autocomplete="off" t-model="state.propertyDefinition.string" t-on-change="onPropertyLabelChange" t-on-keypress="onPropertyLabelKeypress"/>
                </div>
                <div class="d-contents mb-3 mb-sm-0">
                    <label t-att-for="getUniqueDomID('type')" class="o_form_label align-self-center text-900">
                        Field Type
                    </label>
                    <div class="o_field_property_definition_type">
                        <div t-if="props.readonly" class="d-flex align-items-center mb-2">
                            <img class="me-3" t-attf-src="/web/static/src/views/fields/properties/icons/{{state.propertyDefinition.type}}.png"/>
                            <span t-out="state.typeLabel"/>
                        </div>
                        <Dropdown t-else="" menuClass="'o_field_property_definition_type_menu'">
                            <button class="btn btn-link d-flex p-0 w-100" t-att-title="state.typeLabel">
                                <div class="o_input_dropdown w-100 o_field_property_dropdown">
                                    <img t-attf-src="/web/static/src/views/fields/properties/icons/{{state.propertyDefinition.type}}.png" class="position-relative z-1 me-n4"/>
                                    <input type="text" class="dropdown text-start w-100 o_input py-1 align-middle" t-att-id="getUniqueDomID('type')" t-att-value="state.typeLabel" readonly=""/>
                                    <span class="o_dropdown_button"/>
                                </div>
                            </button>
                            <t t-set-slot="content">
                                <t t-foreach="availablePropertyTypes" t-as="option" t-key="option[0]">
                                    <DropdownItem onSelected.bind="() =&gt; this.onPropertyTypeChange(option[0])">
                                        <div class="d-flex align-items-center">
                                            <img class="me-2" t-attf-src="/web/static/src/views/fields/properties/icons/{{option[0]}}.png"/>
                                            <span t-out="option[1]"/>
                                        </div>
                                    </DropdownItem>
                                </t>
                            </t>
                        </Dropdown>
                    </div>
                </div>

                <div t-if="state.propertyDefinition.type === 'selection'" class="d-contents mb-3 mb-sm-0">
                    <label class="o_form_label text-900">Values</label>
                    <PropertyDefinitionSelection readonly="props.readonly || !props.canChangeDefinition" canChangeDefinition="props.canChangeDefinition" default="state.propertyDefinition.default || ''" options="state.propertyDefinition.selection || []" onOptionsChange.bind="onSelectionOptionChange" onDefaultOptionChange.bind="onDefaultChange"/>
                </div>
                <div t-if="state.propertyDefinition.type === 'tags'" class="d-contents mb-3 mb-sm-0">
                    <label t-att-for="getUniqueDomID('tags')" class="o_form_label text-900">Tag</label>
                    <PropertyTags id="getUniqueDomID('tags')" selectedTags="propertyTagValues" tags="state.propertyDefinition.tags || []" readonly="props.readonly" canChangeTags="props.canChangeDefinition" checkDefinitionWriteAccess.bind="props.checkDefinitionWriteAccess ? props.checkDefinitionWriteAccess : () =&gt; {}" deleteAction="'tags'" onTagsChange.bind="onTagsChange"/>
                </div>
                <div t-if="state.propertyDefinition.type === 'many2one' || state.propertyDefinition.type === 'many2many'" class="o_field_property_definition_model d-contents mb-3 mb-sm-0">
                    <label t-att-for="getUniqueDomID('model')" class="o_form_label align-self-center text-900">Model</label>
                    <span t-if="props.readonly">
                        <t t-if="state.resModelDescription" t-out="state.resModelDescription"/>
                    </span>
                    <ModelSelector t-else="" id="getUniqueDomID('model')" value="state.resModelDescription" onModelSelected.bind="onModelChange"/>
                </div>
                <div t-if="(state.propertyDefinition.type === 'many2one' || state.propertyDefinition.type === 'many2many')                     and state.propertyDefinition.comodel and state.propertyDefinition.comodel.length" class="d-contents mb-3 mb-sm-0">
                    <label class="o_form_label text-900">Domain</label>
                    <div>
                        <DomainSelector resModel="state.propertyDefinition.comodel" domain="state.propertyDefinition.domain || '[]'" readonly="props.readonly" update.bind="onDomainChange" isDebugMode="!!env.debug" className="'d-inline-block me-2'"/>
                        <div t-if="state.matchingRecordsCount !== undefined" class="d-inline-block">
                            <i class="oi oi-arrow-right" role="img" title="Domain"/>
                            <button class="btn btn-sm btn-secondary" type="button" t-on-click.stop="onButtonDomainClick">
                                <t t-out="state.matchingRecordsCount"/> record(s)
                            </button>
                        </div>
                    </div>
                </div>
                <div t-if="!['tags', 'selection', 'separator'].includes(state.propertyDefinition.type)                     and (!['many2one', 'many2many'].includes(state.propertyDefinition.type)                     || (state.propertyDefinition.comodel and state.propertyDefinition.comodel.length))" class="o_field_property_definition_value d-contents mb-3 mb-sm-0">
                    <label t-att-for="getUniqueDomID('default')" class="o_form_label align-self-center text-900">
                        <t t-if="state.propertyDefinition.type === 'boolean'">Default State</t>
                        <t t-else="">Default Value</t>
                    </label>
                    <PropertyValue id="getUniqueDomID('default')" readonly="props.readonly" canChangeDefinition="props.canChangeDefinition" type="state.propertyDefinition.type" string="state.propertyDefinition.string" value="state.propertyDefinition.default" comodel="state.propertyDefinition.comodel || ''" domain="state.propertyDefinition.domain || '[]'" context="props.context" onChange.bind="onDefaultChange"/>
                </div>
                <div t-if="state.propertyDefinition.type !== 'separator'" class="o_field_property_definition_kanban d-contents mb-3 mb-sm-0">
                    <label t-att-for="getUniqueDomID('kanban')" class="o_form_label align-self-center text-900">
                        Display in Cards
                        <sup class="text-info" title="Whether or not this Property Field is displayed in the Calendar, Cards &amp; Kanban views">?</sup>
                    </label>
                    <CheckBox id="getUniqueDomID('kanban')" value="props.propertyDefinition.view_in_cards" disabled="props.readonly" onChange.bind="onViewInKanbanChange"/>
                </div>
            </div>
        </div>
    </t>
`);
registerTemplate("web.PropertyDefinitionSelection", `/web/static/src/views/fields/properties/property_definition_selection.xml`, `<t t-name="web.PropertyDefinitionSelection" xml:space="preserve">
        <div class="o_field_property_selection d-flex" t-ref="propertyDefinitionSelection">
            <div class="w-100">
                <div t-foreach="optionsVisible" t-as="option" t-key="option[0]" class="o_field_property_selection_option d-flex flex-row align-items-center justify-content-between mb-2 rounded" t-att-option-name="option[0]">
                    <i t-if="!props.readonly and props.canChangeDefinition" class="o_field_property_selection_drag oi oi-draggable ui-sortable-handle me-2 text-center"/>
                    <span t-if="props.readonly" t-out="option[1]"/>
                    <input t-else="" class="o_input me-3" type="text" placeholder="Option Name" t-att-value="option[1]" t-on-change="(event) =&gt; this.onOptionChange(event, option_index)" t-on-blur="(event) =&gt; this.onOptionBlur(event, option_index)" t-on-keydown="(event) =&gt; this.onOptionKeyDown(event, option_index)"/>
                    <button class="btn btn-link m-0 p-0 text-muted fs-5" title="Select Default" t-on-click="() =&gt; this.onOptionSetDefault(option_index)">
                        <i t-att-class="option[0] === props.default ? 'fa fa-star align-bottom' : 'fa fa-star-o align-bottom'"/>
                    </button>
                    <button t-if="!props.readonly" class="btn btn-link link-danger ms-2 p-0 fs-5" title="Remove Property" t-on-click="() =&gt; this.onOptionDelete(option_index)">
                        <i class="fa fa-trash-o align-bottom"/>
                    </button>
                </div>
                <button t-if="!props.readonly" class="btn btn-link btn-sm" t-on-click="() =&gt; this.onOptionCreate(this.options.length)" t-ref="addButton">
                    <i class="fa fa-plus"/>
                    Add a Value
                </button>
            </div>
        </div>
    </t>
`);
registerTemplate("web.PropertyTags", `/web/static/src/views/fields/properties/property_tags.xml`, `<t t-name="web.PropertyTags" xml:space="preserve">

        <div t-attf-class="o_field_property_tag o_field_widget o_field_many2many_tags d-flex {{props.readonly ? 'readonly' : ''}}">
            <TagsList tags="tagListItems"/>
            <div t-if="!props.readonly" class="o_field_property_dropdown_menu o_input_dropdown">
                <AutoComplete id="props.id" value="''" sources="autocompleteSources" onSelect.bind="({value}) =&gt; this.onOptionSelected(value)" resetOnSelect="true"/>
                <span class="o_dropdown_button"/>
            </div>
        </div>
    </t>
    `);
registerTemplate("web.PropertyTagsColorListPopover", `/web/static/src/views/fields/properties/property_tags.xml`, `<t t-name="web.PropertyTagsColorListPopover" xml:space="preserve">
        <div class="o_tag_popover m-2">
            <ColorList colors="props.colors" forceExpanded="true" onColorSelected.bind="(id) =&gt; props.switchTagColor(id, props.tag)"/>
        </div>
    </t>
    `);
registerTemplate("web.PropertyTagsField", `/web/static/src/views/fields/properties/property_tags.xml`, `<t t-name="web.PropertyTagsField" xml:space="preserve">
        <PropertyTags t-props="propertyTagsProps"/>
    </t>
`);
registerTemplate("web.PropertyValue", `/web/static/src/views/fields/properties/property_value.xml`, `<t t-name="web.PropertyValue" xml:space="preserve">
        <t t-if="props.readonly and !['boolean', 'many2one', 'many2many', 'tags'].includes(props.type)">
            <span t-if="displayValue" t-out="displayValue"/>
        </t>
        <t t-else="">
            <t t-if="props.type === 'boolean'">
                <CheckBox id="props.id" value="propertyValue" disabled="props.readonly" onChange.bind="onValueChange"/>
            </t>
            <t t-elif="['date', 'datetime'].includes(props.type)">
                <DateTimeInput id="props.id" type="props.type" value="propertyValue" onChange.bind="onValueChange"/>
            </t>
            <t t-elif="props.type === 'integer'">
                <input t-att-id="props.id" class="o_input o_field_property_input" type="text" autocomplete="off" t-att-value="displayValue" t-on-change="(event) =&gt; this.onValueChange(event.target.value)"/>
            </t>
            <t t-elif="props.type === 'float'">
                <input t-att-id="props.id" class="o_input o_field_property_input" type="text" autocomplete="off" t-att-value="displayValue" t-on-change="(event) =&gt; this.onValueChange(event.target.value)"/>
            </t>
            <t t-elif="props.type === 'selection'">
                <select class="o_input" t-on-change="event =&gt; this.onValueChange(event.target.value)" t-att-id="props.id">
                    <option t-att-value="false"/>
                    <t t-foreach="props.selection || []" t-as="option" t-key="option[0]">
                        <option t-att-selected="option[0] === propertyValue" t-att-value="option[0]" t-out="option[1]"/>
                    </t>
                </select>
            </t>
            <t t-elif="props.type === 'tags'">
                <PropertyTags id="props.id" selectedTags="propertyValue" tags="props.tags || []" deleteAction="'value'" readonly="props.readonly" canChangeTags="props.canChangeDefinition" checkDefinitionWriteAccess.bind="props.checkDefinitionWriteAccess ? props.checkDefinitionWriteAccess : () =&gt; {}" onValueChange.bind="onValueChange" onTagsChange.bind="props.onTagsChange"/>
            </t>
            <div t-elif="props.type === 'many2one'" class="o_field_property_many2one_value d-flex flex-row align-items-center" t-att-class="{'avatar': showAvatar}">
                <t t-if="props.comodel">
                    <t t-set="hasAccess" t-value="!propertyValue || propertyValue[1]"/>
                    <img t-if="showAvatar and propertyValue[0] and hasAccess" t-attf-src="/web/image/{{props.comodel}}/{{propertyValue[0]}}/avatar_128" class="o_avatar rounded me-1"/>
                    <t t-if="props.readonly || !hasAccess">
                        <a t-if="clickableRelational || !hasAccess" t-attf-class="o_form_uri {{propertyValue and propertyValue[1] ? '' : 'disabled'}}" t-att-href="propertyValue[0] ? \`#id=\${propertyValue[0]}&amp;model=\${props.comodel}\` : '#'" t-on-click.prevent="onMany2oneClick">
                            <t t-if="hasAccess" t-out="propertyValue[1]"/>
                            <t t-else="">No Access</t>
                        </a>
                        <span t-else="" t-out="propertyValue and propertyValue[1] || ''"/>
                    </t>
                    <Many2XAutocomplete t-else="" t-key="props.id + '_' + props.comodel + '_' + props.string" value="propertyValue[1] || ''" id="props.id" resModel="props.comodel" autoSelect="true" fieldString="props.string" update.bind="onValueChange" context="props.context" getDomain.bind="() =&gt; propertyDomain" quickCreate.bind="onQuickCreate" activeActions="{ create: true, createEdit: true, write: true }"/>
                    <button t-if="!props.readonly and propertyValue and propertyValue[0] and hasAccess" type="button" class="btn btn-secondary oi oi-arrow-right o_external_button o_properties_external_button py-0" tabindex="-1" draggable="false" aria-label="Internal link" data-tooltip="Internal link" t-on-click="onExternalLinkClick"/>
                </t>
            </div>
            <t t-elif="props.type === 'many2many'">
                <div t-if="props.comodel" class="o_field_property_many2many_value d-flex flex-wrap flex-row gap-1 ms-0 pe-1 w-100 " t-attf-class="o_field_widget o_field_many2many_tags {{showAvatar ? 'avatar' : ''}} {{props.readonly ? 'readonly' : ''}}">

                    <TagsList tags="propertyValue"/>
                    <Many2XAutocomplete t-if="!props.readonly" t-key="props.id + '_' + props.comodel + '_' + props.string" id="props.id" resModel="props.comodel" autoSelect="true" fieldString="props.string" update.bind="onValueChange" context="props.context" getDomain.bind="() =&gt; propertyDomain" quickCreate.bind="onQuickCreate" activeActions="{ create: true, createEdit: true, write: true }" isToMany="true"/>
                </div>
            </t>
            <t t-else="">
                <input class="o_input" t-att-id="props.id" type="text" autocomplete="off" t-att-value="propertyValue || ''" t-on-change="(event) =&gt; this.onValueChange(event.target.value)"/>
            </t>
        </t>
    </t>
`);
registerTemplate("web.RadioField", `/web/static/src/views/fields/radio/radio_field.xml`, `<t t-name="web.RadioField" xml:space="preserve">
        <div role="radiogroup" t-attf-class="o_{{ props.orientation }}" t-att-aria-label="props.label">
            <t t-foreach="items" t-as="item" t-key="item[0]">
                <div class="form-check o_radio_item" aria-atomic="true">
                    <input type="radio" class="form-check-input o_radio_input" t-att-checked="item[0] === value" t-att-disabled="props.readonly" t-att-name="id" t-att-data-value="item[0]" t-att-data-index="item_index" t-att-id="\`\${id}_\${item[0]}\`" t-on-change="() =&gt; this.onChange(item)"/>
                    <label class="form-check-label o_form_label" t-att-for="\`\${id}_\${item[0]}\`" t-esc="item[1]"/>
                </div>
            </t>
        </div>
    </t>

`);
registerTemplate("web.ReferenceField", `/web/static/src/views/fields/reference/reference_field.xml`, `<t t-name="web.ReferenceField" xml:space="preserve">
        <div class="o_row">
            <t t-if="!props.readonly and !hideModelSelector">
                <select class="o_input" t-att-tabindex="relation ? '-1': 0" t-on-change="(ev) =&gt; this.updateModel(ev.target.value || false)">
                    <option/>
                    <t t-foreach="selection" t-as="option" t-key="option[0]">
                        <option t-att-value="option[0]" t-att-selected="option[0] === relation" t-esc="option[1]"/>
                    </t>
                </select>
            </t>
            <t t-if="relation">
                <Many2OneField t-key="m2oProps.relation" t-props="m2oProps"/>
            </t>
        </div>
    </t>

`);
registerTemplate("web.X2ManyFieldDialog", `/web/static/src/views/fields/relational_utils.xml`, `<t t-name="web.X2ManyFieldDialog" xml:space="preserve">
    <Dialog t-props="dialogProps">
        <FormRenderer record="record" archInfo="archInfo"/>
        <t t-set-slot="footer">
            <t t-if="footerArchInfo">
                <FormRenderer record="record" archInfo="footerArchInfo">
                    <t t-set-slot="default_buttons">
                        <t t-call="web.X2ManyFieldDialogDefaultButtons"/>
                    </t>
                </FormRenderer>
            </t>
            <t t-else="">
                <t t-call="web.X2ManyFieldDialogDefaultButtons"/>
            </t>
        </t>
    </Dialog>
</t>

`);
registerTemplate("web.Many2XAutocomplete", `/web/static/src/views/fields/relational_utils.xml`, `<t t-name="web.Many2XAutocomplete" xml:space="preserve">
    <div class="o_input_dropdown" t-ref="autocomplete_container">
        <input t-if="env.isSmall and props.dropdown" type="text" t-att-id="props.id" class="o_input" readonly="" autocomplete="off" t-att-placeholder="props.placeholder" t-att-value="props.value" t-on-click="onSearchMore" t-on-barcode-search="onBarcodeSearch"/>
        <AutoComplete t-else="" value="props.value" id="props.id" placeholder="props.placeholder" sources="sources" autoSelect="props.autoSelect" onSelect.bind="onSelect" onInput.bind="onInput" onChange.bind="onChange" dropdown="props.dropdown" autofocus="props.autofocus" resetOnSelect="props.value === ''" onCancel.bind="onCancel"/>
        <span class="o_dropdown_button"/>
    </div>
</t>

`);
registerTemplate("web.AvatarMany2XAutocomplete", `/web/static/src/views/fields/relational_utils.xml`, `<t t-name="web.AvatarMany2XAutocomplete" xml:space="preserve">
    <span class="o_avatar_many2x_autocomplete o_avatar d-flex align-items-center">
        <img t-if="option.value" class="rounded me-1" t-attf-src="/web/image/{{option.resModel}}/{{option.value}}/avatar_128"/>
        <t t-esc="option.label"/>
    </span>
</t>

`);
registerTemplate("web.X2ManyFieldDialogDefaultButtons", `/web/static/src/views/fields/relational_utils.xml`, `<t t-name="web.X2ManyFieldDialogDefaultButtons" xml:space="preserve">
    <t t-if="record.isInEdition">
        <t t-if="canCreate">
            <button class="btn btn-primary o_form_button_save" t-on-click="save" data-hotkey="c">Save &amp; Close</button>
            <button class="btn btn-primary o_form_button_save_new" t-on-click="saveAndNew" data-hotkey="n">Save &amp; New</button>
        </t>
        <t t-else="">
            <button class="btn btn-primary o_form_button_save" t-on-click="save" data-hotkey="c">Save</button>
        </t>
        <button class="btn btn-secondary o_form_button_cancel" t-on-click="discard" data-hotkey="j">Discard</button>

        <t t-if="props.delete">
            <button class="btn btn-secondary o_btn_remove" t-on-click="remove" data-hotkey="k">
                <t t-if="props.deleteButtonLabel" t-out="props.deleteButtonLabel"/>
                <t t-else="">Remove</t>
            </button>
        </t>
    </t>
    <t t-else="">
        <button class="btn btn-primary o_form_button_cancel" t-on-click="() =&gt; this.props.close()" data-hotkey="j">Close</button>
    </t>
</t>

`);
registerTemplate("web.RemainingDaysField", `/web/static/src/views/fields/remaining_days/remaining_days_field.xml`, `<t t-name="web.RemainingDaysField" xml:space="preserve">
        <t t-if="props.readonly">
            <div t-att-class="classNames" t-att-title="formattedValue">
                <t t-esc="diffString"/>
            </div>
        </t>
        <t t-else="">
            <DateTimeField t-props="dateTimeFieldProps"/>
        </t>
    </t>
`);
registerTemplate("web.SelectionField", `/web/static/src/views/fields/selection/selection_field.xml`, `<t t-name="web.SelectionField" xml:space="preserve">
        <t t-if="props.readonly">
            <span t-esc="string" t-att-raw-value="value"/>
        </t>
        <t t-else="">
            <select class="o_input pe-3" t-on-change="onChange" t-on-click.stop="() =&gt; {}" t-att-id="props.id">
                <option t-att-selected="false === value" t-att-value="stringify(false)" t-esc="this.props.placeholder || ''" t-attf-style="{{ props.required ? 'display:none' : '' }}"/>
                <t t-foreach="options" t-as="option" t-key="option[0]">
                    <option t-att-selected="option[0] === value" t-att-value="stringify(option[0])" t-esc="option[1]"/>
                </t>
            </select>
        </t>
    </t>

`);
registerTemplate("web.SignatureField", `/web/static/src/views/fields/signature/signature_field.xml`, `<t t-name="web.SignatureField" xml:space="preserve">
        <t t-if="value">
            <img class="o_signature img img-fluid" alt="Binary file" t-att-src="getUrl" t-att-name="props.name" t-att-style="sizeStyle" t-on-click="onClickSignature" t-on-error.stop="onLoadFailed"/>
        </t>
        <t t-else="">
            <div class="o_signature o_signature_empty" t-att-style="sizeStyle" t-on-click="onClickSignature">
                <svg t-on-error.stop="onLoadFailed"/>
                <p>SIGNATURE</p>
            </div>
        </t>
    </t>

`);
registerTemplate("web.StatInfoField", `/web/static/src/views/fields/stat_info/stat_info_field.xml`, `<t t-name="web.StatInfoField" xml:space="preserve">
        <span class="o_stat_info o_stat_value" t-esc="formattedValue"/>
        <span t-if="!props.noLabel" class="o_stat_text" t-esc="label"/>
    </t>

`);
registerTemplate("web.StateSelectionField", `/web/static/src/views/fields/state_selection/state_selection_field.xml`, `<t t-name="web.StateSelectionField" xml:space="preserve">
        <t t-if="props.readonly">
            <button class="d-flex align-items-center btn fw-normal p-0">
                <span t-attf-class="o_status {{ statusColor(currentValue) }} "/>
                <span t-if="props.showLabel" class="o_status_label ms-1" t-esc="label"/>
            </button>
        </t>
        <t t-else="">
            <Dropdown menuClass="'state_selection_field_menu'">
                <button class="btn btn-link d-flex p-0">
                    <div class="d-flex align-items-center" t-att-title="props.showLabel ? '' : label">
                        <span t-attf-class="o_status {{ statusColor(currentValue) }} "/>
                        <span t-if="props.showLabel" class="o_status_label ms-1" t-esc="label"/>
                    </div>
                </button>
                <t t-set-slot="content">
                    <t t-foreach="options" t-as="option" t-key="option[0]">
                        <DropdownItem class="\`d-flex align-items-center \${option[0] === currentValue ? 'active' : ''}\`" onSelected="() =&gt; this.updateRecord(option[0])">
                                <span t-attf-class="o_status ms-2 {{ statusColor(option[0]) }} "/>
                                <span t-esc="option[1]"/>
                        </DropdownItem>
                    </t>
                </t>
            </Dropdown>
        </t>
    </t>

`);
registerTemplate("web.StatusBarField.Dropdown", `/web/static/src/views/fields/statusbar/statusbar_field.xml`, `<t t-name="web.StatusBarField.Dropdown" xml:space="preserve">
        <t t-foreach="items" t-as="item" t-key="item.value">
            <DropdownItem class="getDropdownItemClassNames(item)" onSelected="() =&gt; this.selectItem(item)">
                <span t-esc="item.label"/>
            </DropdownItem>
        </t>
    </t>

    `);
registerTemplate("web.StatusBarField", `/web/static/src/views/fields/statusbar/statusbar_field.xml`, `<t t-name="web.StatusBarField" xml:space="preserve">
        <div class="o_statusbar_status" t-ref="root" role="radiogroup" aria-label="Statusbar">
            <Dropdown position="'bottom-end'">
                <button t-ref="after" type="button" class="btn btn-secondary dropdown-toggle o_arrow_button o_first" t-att-disabled="props.isDisabled" aria-label="More...">
                    ...
                </button>
                <t t-set-slot="content">
                    <t t-call="web.StatusBarField.Dropdown">
                        <t t-set="items" t-value="items.after"/>
                    </t>
                </t>
            </Dropdown>
            <t t-foreach="items.inline" t-as="item" t-key="item.value">
                <button type="button" class="btn btn-secondary o_arrow_button" t-att-class="{                         o_first: item_first,                         o_arrow_button_current: item.isSelected,                         o_last: item_last,                     }" t-att-disabled="props.isDisabled || item.isSelected" role="radio" t-att-aria-checked="item.isSelected.toString()" t-att-aria-current="item.isSelected and 'step'" t-att-data-value="item.value" t-esc="item.label" t-on-click="() =&gt; this.selectItem(item)"/>
            </t>
            <Dropdown position="'bottom-start'">
                <button t-ref="before" type="button" class="btn btn-secondary dropdown-toggle o_arrow_button o_last" t-att-disabled="props.isDisabled" aria-label="More...">
                    ...
                </button>
                <t t-set-slot="content">
                    <t t-call="web.StatusBarField.Dropdown">
                        <t t-set="items" t-value="items.before"/>
                    </t>
                </t>
            </Dropdown>
            <Dropdown position="'bottom-end'">
                <button t-ref="dropdown" type="button" class="btn btn-secondary dropdown-toggle" t-att-disabled="props.isDisabled">
                    <t t-out="getCurrentLabel()"/>
                </button>
                <t t-set-slot="content">
                    <t t-call="web.StatusBarField.Dropdown">
                        <t t-set="items" t-value="getAllItems()"/>
                    </t>
                </t>
            </Dropdown>
        </div>
    </t>
`);
registerTemplate("web.TextField", `/web/static/src/views/fields/text/text_field.xml`, `<t t-name="web.TextField" xml:space="preserve">
        <t t-if="props.readonly">
            <span t-esc="props.record.data[props.name] or ''"/>
        </t>
        <t t-else="">
            <div t-ref="div">
                <textarea class="o_input" t-att-class="{                         'o_field_translate': isTranslatable,                         'o_field_placeholder': props.dynamicPlaceholder,                     }" t-att-id="props.id" t-att-placeholder="props.placeholder" t-att-rows="rowCount" t-ref="textarea" t-on-blur="onBlur"/>
                <div class="o_field_input_buttons">
                    <TranslationButton t-if="isTranslatable" fieldName="props.name" record="props.record"/>
                    <button t-if="props.dynamicPlaceholder" class="btn m-0 py-0 px-2 fa fa-magic position-relative" title="Insert Field" t-on-click="onDynamicPlaceholderOpen"/>
                </div>
            </div>
        </t>
    </t>

`);
registerTemplate("web.TimezoneMismatchField", `/web/static/src/views/fields/timezone_mismatch/timezone_mismatch_field.xml`, `<t t-name="web.TimezoneMismatchField" t-inherit="web.SelectionField" t-inherit-mode="primary" xml:space="preserve">
        <xpath expr="." position="inside">
            <span t-if="mismatch" class="o_tz_warning fa fa-exclamation-triangle position-static align-self-center m-0 ms-2" t-att-title="mismatchTitle"/>
        </xpath>
    </t>

`);
registerTemplate("web.TranslationButton", `/web/static/src/views/fields/translation_button.xml`, `<t t-name="web.TranslationButton" xml:space="preserve">
        <t t-if="isMultiLang">
            <span class="o_field_translate btn btn-link" t-on-click.prevent="onClick">
                <t t-esc="lang"/>
            </span>
        </t>
    </t>

`);
registerTemplate("web.TranslationDialog", `/web/static/src/views/fields/translation_dialog.xml`, `<t t-name="web.TranslationDialog" xml:space="preserve">
        <Dialog title="title">
            <div class="o_translation_dialog">
                <t t-foreach="terms" t-as="term" t-key="term.id">
                    <div class="row">
                        <div class="col-12" t-att-class="{ o_language_current: term.lang === user.lang }" t-attf-class="col-lg-{{ props.showSource ? 2 : 3 }}">
                            <t t-esc="term.langName"/>
                        </div>
                        <t t-if="props.showSource">
                            <div class="col-12 col-lg-3 source">
                                <t t-esc="term.source"/>
                            </div>
                        </t>
                        <div class="col-12 translation" t-attf-class="col-lg-{{ props.showSource ? 7 : 9 }}">
                            <t t-if="props.isText">
                                <textarea class="o_field_text o_field_translate o_field_widget o_input" t-att-value="term.value" t-att-data-id="term.id" t-att-rows="props.showSource ? 2 : 5" t-on-change="(ev) =&gt; this.updatedTerms[term.id] = ev.target.value"/>
                            </t>
                            <t t-else="">
                                <input type="text" class="o_field_char o_input" t-att-value="term.value" t-att-data-id="term.id" t-on-change="(ev) =&gt; this.updatedTerms[term.id] = ev.target.value"/>
                            </t>
                        </div>
                    </div>
                </t>
            </div>
            <t t-set-slot="footer">
                <button class="btn btn-primary" t-on-click="onSave">Save</button>
                <button class="btn" t-on-click="props.close">Discard</button>
            </t>
        </Dialog>
    </t>

`);
registerTemplate("web.UrlField", `/web/static/src/views/fields/url/url_field.xml`, `<t t-name="web.UrlField" xml:space="preserve">
        <t t-if="props.readonly">
            <a class="o_field_widget o_form_uri" t-on-click.stop="" t-att-href="formattedHref" t-esc="props.text || props.record.data[props.name] || ''" target="_blank"/>
        </t>
        <t t-else="">
            <div class="d-inline-flex w-100">
                <input class="o_input" t-att-id="props.id" type="text" autocomplete="off" t-att-placeholder="props.placeholder" t-att-required="props.required" t-ref="input"/>
            </div>
        </t>
    </t>

    `);
registerTemplate("web.FormUrlField", `/web/static/src/views/fields/url/url_field.xml`, `<t t-name="web.FormUrlField" t-inherit="web.UrlField" t-inherit-mode="primary" xml:space="preserve">
        <xpath expr="//input" position="after">
            <a t-if="props.record.data[props.name]" t-att-href="formattedHref" class="ms-3 d-inline-flex align-items-center" target="_blank">
                <i class="fa fa-globe" data-tooltip="Go to URL" aria-label="Go to URL"/>
            </a>
        </xpath>
    </t>

`);
registerTemplate("web.ListX2ManyField", `/web/static/src/views/fields/x2many/list_x2many_field.xml`, `<t t-name="web.ListX2ManyField" xml:space="preserve">
       <t t-esc="formattedValue"/>
    </t>

`);
registerTemplate("web.X2ManyField", `/web/static/src/views/fields/x2many/x2many_field.xml`, `<t t-name="web.X2ManyField" xml:space="preserve">
        <div t-att-class="className">
            <div class="o_x2m_control_panel d-empty-none mt-1 mb-4">
                <t t-if="displayControlPanelButtons">
                    <div class="o_cp_buttons gap-1" role="toolbar" aria-label="Control panel buttons" t-ref="buttons">
                        <t t-foreach="creates" t-as="create" t-key="create_index">
                            <button t-if="create.type === 'create'" type="button" class="btn btn-secondary" t-att-class="create.class" t-on-click.stop.prevent="() =&gt; this.onAdd({ context: create.context })">
                                <t t-esc="create.string"/>
                            </button>
                            <ViewButton t-if="create.type === 'button'" className="\`\${create.className}\`" clickParams="create.clickParams" icon="create.icon" record="props.record.data[props.name]" string="create.string" title="create.title"/>
                        </t>
                    </div>
                </t>
                <div t-if="props.record.data[props.name].count &gt; props.record.data[props.name].limit" class="o_cp_pager" role="search">
                    <Pager t-props="pagerProps"/>
                </div>
            </div>
            <ListRenderer t-if="props.viewMode === 'list'" t-props="this.rendererProps"/>
            <KanbanRenderer t-elif="props.viewMode" t-props="this.rendererProps"/>
        </div>
    </t>

`);
registerTemplate("web.Form.ButtonBox", `/web/static/src/views/form/button_box/button_box.xml`, `<t t-name="web.Form.ButtonBox" xml:space="preserve">
    <div class="o-form-buttonbox d-print-none position-relative d-flex w-md-auto" t-attf-class="{{ isFull ? 'o_full w-100' : 'o_not_full'}} {{this.props.class}}">
        <t t-slot="{{ button_value }}" t-foreach="visibleButtons" t-as="button" t-key="button_value"/>
        <div t-if="additionalButtons.length" class="oe_stat_button btn position-relative p-0 border-0">
            <Dropdown position="!env.isSmall ? 'bottom-end' : ''" menuClass="'o-form-buttonbox p-0 border-0 ' + (!env.isSmall ? 'o_dropdown_more' : 'o-form-buttonbox-small')">
                <button class="o_button_more btn d-flex justify-content-center align-items-center" t-att-class="!env.isSmall ? 'o-dropdown-caret btn-outline-secondary' : 'btn-secondary'">
                    <span t-if="!env.isSmall">More</span>
                    <i t-else="" class="fa fa-fw fa-bolt lh-base" aria-hidden="true"/>
                </button>
                <t t-set-slot="content">
                    <DropdownItem t-foreach="additionalButtons" t-as="button" t-key="button_value" class="'d-flex flex-column p-0'">
                        <t t-slot="{{ button_value }}"/>
                    </DropdownItem>
                </t>
            </Dropdown>
        </div>
    </div>
</t>

`);
registerTemplate("web.FormCogMenu", `/web/static/src/views/form/form_cog_menu/form_cog_menu.xml`, `<t t-name="web.FormCogMenu" t-inherit="web.CogMenu" xml:space="preserve">
        <xpath expr="//div[hasclass('o_cp_action_menus')]" position="attributes">
            <attribute name="t-if">env.isSmall or hasItems</attribute>
        </xpath>
        <xpath expr="//t[@t-if='state.printItems.length']" position="before">
            <t t-slot="default"/>
        </xpath>
        <xpath expr="//t[@t-if='state.printItems.length']/Dropdown" position="before">
            <div role="separator" class="dropdown-divider"/>
        </xpath>
    </t>

`);
registerTemplate("web.FormView", `/web/static/src/views/form/form_controller.xml`, `<t t-name="web.FormView" xml:space="preserve">
        <div t-att-class="className" t-ref="root">
            <div class="o_form_view_container">
                <Layout className="model.useSampleModel ? 'o_view_sample_data' : ''" display="display">
                    <t t-set-slot="control-panel-create-button">
                        <t t-if="canCreate">
                            <button type="button" class="btn btn-secondary o_form_button_create" data-hotkey="c" t-on-click.stop="create">New</button>
                        </t>
                    </t>

                    <t t-set-slot="layout-buttons">
                        <t t-if="env.inDialog">
                            <t t-if="footerArchInfo">
                                <t t-component="props.Renderer" record="model.root" Compiler="props.Compiler" archInfo="footerArchInfo">
                                    <t t-set-slot="default_buttons">
                                        <t t-call="{{ props.buttonTemplate }}"/>
                                    </t>
                                </t>
                            </t>
                            <t t-else="">
                                <t t-call="{{ props.buttonTemplate }}"/>
                            </t>
                        </t>
                    </t>

                    <t t-set-slot="layout-actions">
                        <t t-if="!env.isSmall and buttonBoxTemplate">
                            <t t-call="{{ buttonBoxTemplate }}" t-call-context="{ __comp__: Object.assign(Object.create(this), { this, props: { ...this.props, record: this.model.root } }) }"/>
                        </t>
                    </t>

                    <t t-set-slot="control-panel-additional-actions">
                        <CogMenu t-props="this.cogMenuProps">
                            <t t-if="env.isSmall and statusBarDropdownItemsTemplate">
                                <t t-call="{{ statusBarDropdownItemsTemplate }}" t-call-context="{ __comp__: Object.assign(Object.create(this), { this, props: { ...this.props, record: this.model.root } }) }"/>
                            </t>
                        </CogMenu>
                        <t t-if="env.isSmall and buttonBoxTemplate">
                            <t t-call="{{ buttonBoxTemplate }}" t-call-context="{ __comp__: Object.assign(Object.create(this), { this, props: { ...this.props, record: this.model.root } }) }"/>
                        </t>
                    </t>

                    <t t-set-slot="control-panel-status-indicator">
                        <t t-if="canEdit">
                            <FormStatusIndicator model="model" discard.bind="discard" save.bind="saveButtonClicked"/>
                        </t>
                    </t>
                    <t t-set-slot="control-panel-create-button">
                        <t t-if="canCreate">
                            <button type="button" class="btn btn-outline-primary o_form_button_create" data-hotkey="c" t-on-click.stop="create">New</button>
                        </t>
                    </t>
                    <t t-component="props.Renderer" record="model.root" Compiler="props.Compiler" archInfo="archInfo" translateAlert="translateAlert" onNotebookPageChange.bind="onNotebookPageChange" activeNotebookPages="props.state and props.state.activeNotebookPages"/>
                </Layout>
            </div>
        </div>
    </t>

    `);
registerTemplate("web.FormView.Buttons", `/web/static/src/views/form/form_controller.xml`, `<t t-name="web.FormView.Buttons" xml:space="preserve">
        <div t-if="model.root.isInEdition" class="o_form_buttons_edit d-flex gap-1">
            <button type="button" class="btn btn-primary o_form_button_save" data-hotkey="s" t-on-click.stop="() =&gt; this.saveButtonClicked({closable: true})">
                Save
            </button>
            <button type="button" class="btn btn-secondary o_form_button_cancel" data-hotkey="j" t-on-click.stop="discard">
                Discard
            </button>
            <button t-if="props.removeRecord" class="btn btn-secondary o_form_button_remove" t-on-click="props.removeRecord" data-hotkey="x">
                Remove
            </button>
        </div>
        <div t-elif="canCreate" class="o_form_buttons_view">
            <button type="button" class="btn btn-secondary o_form_button_create" data-hotkey="c" t-on-click.stop="create">
                New
            </button>
        </div>
    </t>

    `);
registerTemplate("web.DefaultButtonsSlot", `/web/static/src/views/form/form_controller.xml`, `<t t-name="web.DefaultButtonsSlot" xml:space="preserve">
        <t t-slot="default_buttons"/>
    </t>
`);
registerTemplate("web.FormErrorDialog", `/web/static/src/views/form/form_error_dialog/form_error_dialog.xml`, `<t t-name="web.FormErrorDialog" xml:space="preserve">
        <Dialog header="false" size="'md'" contentClass="'o_error_dialog'">
            <div role="alert">
                <h1 class="text-danger">Oh snap!</h1>
                <p t-esc="props.message" class="text-prewrap"/>
            </div>
            <t t-set-slot="footer">
                <button class="btn btn-primary" t-on-click="stay">Stay here</button>
                <button class="btn btn-secondary" t-on-click="discard">Discard changes</button>
            </t>
        </Dialog>
    </t>

`);
registerTemplate("web.Form.OuterGroup", `/web/static/src/views/form/form_group/form_group.xml`, `<t t-name="web.Form.OuterGroup" xml:space="preserve">
    <div class="o_group row align-items-start" t-attf-class="{{ allClasses }}" t-att-style="props.style">
        <t t-slot="title" t-if="props.slots and props.slots.title"/>
        <t t-foreach="getItems()" t-as="item" t-key="item_index">
            <span class="o_newline" t-if="item.newline"/>
            <t t-slot="{{ item.name }}" className="item.colspan !== props.maxCols ? 'col-lg-' + item.size : ''"/>
        </t>
    </div>
</t>

`);
registerTemplate("web.Form.InnerGroup", `/web/static/src/views/form/form_group/form_group.xml`, `<t t-name="web.Form.InnerGroup" xml:space="preserve">
    <div t-attf-class="{{ allClasses }}" class="o_inner_group grid" t-att-style="props.style">
        <div t-if="props.slots and props.slots.title" t-attf-class="g-col-sm-{{ props.maxCols }}">
            <t t-slot="title"/>
        </div>
        <div t-foreach="getRows()" t-as="row" t-key="row_index" class="o_wrap_field d-flex d-sm-contents flex-column mb-3 mb-sm-0" t-if="row.isVisible">
            <t t-foreach="row" t-as="cell" t-key="cell_index">

                <t t-if="cell.subType === 'item_component'">
                    <t t-call="web.Form.InnerGroup.ItemComponent"><t t-set="cell" t-value="cell"/></t>
                </t>

                <t t-else="">
                    <div class="o_cell" t-attf-style="{{ cell.itemSpan &gt; 1 ? 'grid-column: span ' + cell.itemSpan + ';' : '' }}" t-attf-class="{{ cell.subType === 'label' ? 'o_wrap_label text-break text-900' : null }}" t-if="cell.isVisible">
                        <t t-slot="{{ cell.name }}"/>
                    </div>
                </t>

            </t>
        </div>
    </div>
</t>

`);
registerTemplate("web.Form.InnerGroup.ItemComponent", `/web/static/src/views/form/form_group/form_group.xml`, `<t t-name="web.Form.InnerGroup.ItemComponent" xml:space="preserve">
    <t t-if="cell.props.fieldInfo.field.component.name !== 'BooleanField'">
        <div class="o_cell o_wrap_label text-break text-900">
            <t t-component="cell.Component" t-if="cell.isVisible" t-props="cell.props"/>
        </div>
        <div class="o_cell o_wrap_input text-break" t-attf-style="{{ cell.itemSpan -1 &gt; 1 ? 'grid-column: span ' + (cell.itemSpan -1) + ';' : '' }}">
            <t t-slot="{{ cell.name }}"/>
        </div>
    </t>
    <t t-else="">
        <div class="o_wrap_field_boolean d-flex d-sm-contents">
            <div class="o_cell o_wrap_label flex-sm-grow-0 text-break text-900">
                <t t-component="cell.Component" t-if="cell.isVisible" t-props="cell.props"/>
            </div>
            <div class="o_cell o_wrap_input order-first flex-sm-grow-0 order-sm-0" t-attf-style="{{ cell.itemSpan -1 &gt; 1 ? 'grid-column: span ' + (cell.itemSpan -1) + ';' : '' }}">
                <t t-slot="{{ cell.name }}"/>
            </div>
        </div>
    </t>
</t>

`);
registerTemplate("web.FormLabel", `/web/static/src/views/form/form_label.xml`, `<t t-name="web.FormLabel" xml:space="preserve">
        <label class="o_form_label" t-att-for="props.id" t-att-class="className">
            <t t-esc="props.string"/><sup class="text-info p-1" t-if="hasTooltip" t-att="{'data-tooltip-template': 'web.FieldTooltip', 'data-tooltip-info': tooltipInfo, 'data-tooltip-touch-tap-to-show': 'true'}">?</sup>
        </label>
    </t>

`);
registerTemplate("web.FormStatusIndicator", `/web/static/src/views/form/form_status_indicator/form_status_indicator.xml`, `<t t-name="web.FormStatusIndicator" xml:space="preserve">
        <div class="o_form_status_indicator d-md-flex align-items-center align-self-md-end me-auto" t-att-class="{ o_form_status_indicator_new_record: props.model.root.isNew }">
            <div class="o_form_status_indicator_buttons d-flex" t-att-class="{ invisible: !(props.model.root.isNew or displayButtons) }">
                <button type="button" class="o_form_button_save btn btn-light border-0 px-1 py-0 lh-sm" data-hotkey="s" t-on-click.stop="save" data-tooltip="Save manually" aria-label="Save manually" t-ref="save">
                    <i class="fa fa-cloud-upload fa-fw"/>
                </button>
                <button type="button" class="o_form_button_cancel btn btn-light border-0 px-1 py-0 lh-sm" data-hotkey="j" t-on-click.stop="discard" data-tooltip="Discard all changes" aria-label="Discard all changes">
                    <i class="fa fa-times fa-fw"/>
                </button>
            </div>
            <span t-if="!props.model.root.isNew and indicatorMode === 'invalid'" class="text-danger small ms-2" data-tooltip="Unable to save. Correct the issue or discard all changes">
                <i class="fa fa-warning"/>
            </span>
        </div>
    </t>
`);
registerTemplate("web.Setting", `/web/static/src/views/form/setting/setting.xml`, `<t t-name="web.Setting" xml:space="preserve">
        <div t-att-class="classNames" t-att-id="props.id">
            <div class="o_setting_left_pane" t-att-data-tooltip="props.title" data-tooltip-delay="800">
                <t t-if="props.fieldName and fieldType==='boolean'">
                    <t t-slot="fieldSlot"/>
                </t>
            </div>
            <div class="o_setting_right_pane" t-att-data-tooltip="props.title" data-tooltip-delay="800">
                <FormLabel t-if="props.fieldName and props.addLabel" notMuttedLabel="notMuttedLabel" fieldName="props.fieldName" id="props.fieldId" string="labelString" record="props.record" fieldInfo="props.fieldInfo"/>
                <t t-if="labelString and !props.fieldName and props.addLabel">
                    <span class="o_form_label"><t t-esc="labelString"/></span>
                </t>
                <t t-if="labelString and props.documentation">
                    <DocumentationLink path="props.documentation" icon="'fa-question-circle'"/>
                </t>
                <t t-if="displayCompanyDependentIcon">
                    <span class="fa fa-lg fa-building-o" title="Values set here are company-specific."/>
                </t>
                <t t-if="labelString and props.help">
                    <div class="text-muted"><t t-esc="props.help"/></div>
                </t>
                <div class="mt16">
                    <t t-if="props.fieldName and fieldType!=='boolean'">
                        <t t-slot="fieldSlot"/>
                    </t>
                    <t t-slot="default"/>
                </div>
            </div>
        </div>
    </t>
`);
registerTemplate("web.StatusBarButtons", `/web/static/src/views/form/status_bar_buttons/status_bar_buttons.xml`, `<t t-name="web.StatusBarButtons" xml:space="preserve">
        <div class="o_statusbar_buttons d-flex align-items-center align-content-around flex-wrap gap-1">
            <t t-foreach="visibleSlotNames" t-as="slot" t-key="slot">
                <t t-slot="{{ slot }}"/>
            </t>
        </div>
    </t>

`);
registerTemplate("web.StatusBarDropdownItems", `/web/static/src/views/form/status_bar_dropdown_items/status_bar_dropdown_items.xml`, `<t t-name="web.StatusBarDropdownItems" xml:space="preserve">
        <t t-foreach="visibleSlotNames" t-as="slot" t-key="slot">
            <DropdownItem class="'o-dropdown-item-unstyled-button'">
                <t t-slot="{{ slot }}"/>
            </DropdownItem>
        </t>
    </t>

`);
registerTemplate("web.GraphView.Buttons", `/web/static/src/views/graph/graph_controller.xml`, `<t t-name="web.GraphView.Buttons" xml:space="preserve">
        <div class="btn-group" role="toolbar" aria-label="Main actions">
            <ReportViewMeasures measures="model.metaData.measures" activeMeasures="[model.metaData.measure]" onMeasureSelected.bind="this.onMeasureSelected"/>
        </div>
        <div class="btn-group" role="toolbar" aria-label="Change graph">
            <button class="btn btn-secondary fa fa-bar-chart o_graph_button" data-tooltip="Bar Chart" aria-label="Bar Chart" data-mode="bar" t-on-click="() =&gt; this.onModeSelected('bar')" t-att-class="{ active: model.metaData.mode === 'bar' }"/>
            <button class="btn btn-secondary fa fa-line-chart o_graph_button" data-tooltip="Line Chart" aria-label="Line Chart" data-mode="line" t-on-click="() =&gt; this.onModeSelected('line')" t-att-class="{ active: model.metaData.mode === 'line' }"/>
            <button class="btn btn-secondary fa fa-pie-chart o_graph_button" data-tooltip="Pie Chart" aria-label="Pie Chart" data-mode="pie" t-on-click="() =&gt; this.onModeSelected('pie')" t-att-class="{ active: model.metaData.mode === 'pie' }"/>
        </div>
        <div t-if="model.metaData.mode === 'bar'" class="btn-group" role="toolbar" aria-label="Change graph">
            <button class="btn btn-secondary fa fa-database o_graph_button" data-tooltip="Stacked" aria-label="Stacked" t-on-click="toggleStacked" t-att-class="{ active: model.metaData.stacked }"/>
        </div>
        <div t-if="model.metaData.mode === 'line'" class="btn-group" role="toolbar" aria-label="Change graph">
            <button class="btn btn-secondary fa fa-database o_graph_button" data-tooltip="Stacked" aria-label="Stacked" t-on-click="toggleStacked" t-att-class="{ active: model.metaData.stacked }"/>
            <button class="btn btn-secondary fa fa-signal o_graph_button" data-tooltip="Cumulative" aria-label="Cumulative" t-on-click="toggleCumulated" t-att-class="{ active: model.metaData.cumulated }"/>
        </div>
        <div t-if="model.metaData.mode !== 'pie' and model.metaData.domains.length === 1" class="btn-group" role="toolbar" aria-label="Sort graph" name="toggleOrderToolbar">
            <button class="btn btn-secondary fa fa-sort-amount-desc o_graph_button" data-tooltip="Descending" aria-label="Descending" t-on-click="() =&gt; this.toggleOrder('DESC')" t-att-class="{ active: model.metaData.order === 'DESC' }"/>
            <button class="btn btn-secondary fa fa-sort-amount-asc o_graph_button" data-tooltip="Ascending" aria-label="Ascending" t-on-click="() =&gt; this.toggleOrder('ASC')" t-att-class="{ active: model.metaData.order === 'ASC' }"/>
        </div>
    </t>

    `);
registerTemplate("web.GraphView", `/web/static/src/views/graph/graph_controller.xml`, `<t t-name="web.GraphView" xml:space="preserve">
        <div t-att-class="props.className" t-ref="root">
            <Layout className="model.useSampleModel ? 'o_view_sample_data' : ''" display="props.display">
                <t t-set-slot="control-panel-additional-actions">
                    <CogMenu/>
                </t>
                <t t-set-slot="layout-actions">
                    <SearchBar toggler="searchBarToggler"/>
                </t>
                <t t-set-slot="control-panel-navigation-additional">
                    <t t-component="searchBarToggler.component" t-props="searchBarToggler.props"/>
                </t>
                <t t-if="model.data">
                    <t t-if="!model.hasData() or model.useSampleModel and props.info.noContentHelp" t-call="web.ActionHelper">
                        <t t-set="noContentHelp" t-value="props.info.noContentHelp"/>
                    </t>
                    <t t-if="model.data.exceeds">
                        <div class="alert alert-info text-center o_graph_alert" role="status">
                            There are too many data. The graph only shows a sample. Use the filters to refine the scope.
                            <a class="o_graph_load_all_btn" href="#" t-on-click="() =&gt; this.loadAll()">
                                Load everything anyway.
                            </a>
                        </div>
                    </t>
                    <t t-component="props.Renderer" model="model" buttonTemplate="props.buttonTemplate"/>
                </t>
                <t t-else="" t-call="web.NoContentHelper">
                    <t t-set="title">Invalid data</t>
                    <t t-set="description">Pie chart cannot mix positive and negative numbers. Try to change your domain to only display positive results</t>
                </t>
            </Layout>
        </div>
    </t>

`);
registerTemplate("web.GraphRenderer.CustomTooltip", `/web/static/src/views/graph/graph_renderer.xml`, `<t t-name="web.GraphRenderer.CustomTooltip" xml:space="preserve">
        <div class="o_graph_custom_tooltip popover show px-2 py-1 pe-none mw-100 position-absolute">
            <table class="overflow-hidden m-0">
                <thead>
                    <tr>
                        <th class="o_measure align-baseline border-0" t-esc="measure"/>
                    </tr>
                </thead>
                <tbody>
                    <tr t-foreach="tooltipItems" t-as="tooltipItem" t-key="tooltipItem_index">
                        <td>
                            <span class="o_square badge p-2 rounded-0 align-middle me-2" t-attf-style="background-color: {{ tooltipItem.boxColor }}"> </span>
                            <small class="o_label d-inline-block text-truncate align-middle smaller" t-attf-style="max-width: {{ maxWidth }}" t-esc="tooltipItem.label"/>
                        </td>
                        <td class="o_value ps-2 text-end fw-bolder">
                            <small class="smaller">
                                <t t-esc="tooltipItem.value"/>
                                <t t-if="mode === 'pie' and tooltipItem.percentage">
                                    (<t t-esc="tooltipItem.percentage"/>%)
                                </t>
                            </small>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </t>

    `);
registerTemplate("web.GraphRenderer", `/web/static/src/views/graph/graph_renderer.xml`, `<t t-name="web.GraphRenderer" xml:space="preserve">
        <div t-att-class="'o_graph_renderer o_renderer h-100 d-flex flex-column border-top ' + props.class" t-ref="root">
            <div class="d-flex d-print-none gap-1 flex-shrink-0 mt-2 mx-3 mb-3 overflow-x-auto">
                <t t-call="{{ props.buttonTemplate }}"/>
            </div>
            <div t-if="model.hasData()" class="o_graph_canvas_container flex-grow-1 position-relative px-3 pb-3" t-ref="container">
                <canvas t-ref="canvas"/>
            </div>
        </div>
    </t>

`);
registerTemplate("web.KanbanColorPicker", `/web/static/src/views/kanban/kanban_color_picker_legacy.xml`, `<t t-name="web.KanbanColorPicker" xml:space="preserve">
        <ul t-if="this.dataState.widget.editable" class="oe_kanban_colorpicker mb-0 ms-2">

            <t t-foreach="this.props.colors" t-as="color" t-key="color_index">
                <li role="menuitem" t-on-click="() =&gt; this.selectColor(color_index)" t-att-title="color" t-att-aria-label="color">
                    <a href="#" t-attf-class="oe_kanban_color_{{ color_index }}"/>
                </li>
            </t>
        </ul>
    </t>

`);
registerTemplate("web.KanbanExamplesNotebookTemplate", `/web/static/src/views/kanban/kanban_column_examples_dialog.xml`, `<t t-name="web.KanbanExamplesNotebookTemplate" xml:space="preserve">
        <div t-if="props.description" class="o_kanban_examples_description" t-out="props.description"/>
        <div class="o_kanban_examples d-flex p-2">
            <t t-foreach="columns" t-as="column" t-key="column.title">
                <div class="o_kanban_examples_group flex-grow-1 m-3">
                    <h6><b t-esc="column.title"/></h6>
                    <div t-foreach="column.records" t-as="record" t-key="record.id" class="o_kanban_examples_ghost p-2 border bg-white" t-att-class="{ 'o_collapse': record_index &gt; 0 }">
                        <div class="o_ghost_content pb-3 bg-300"/>
                        <div class="o_ghost_content o_ghost_tag d-inline-block w-50 mt-3 pb-3 bg-300"/>
                        <span class="ms-2" t-if="record.bullet" t-out="record.bullet"/>
                    </div>
                </div>
            </t>
        </div>
    </t>


    `);
registerTemplate("web.KanbanColumnExamplesDialog", `/web/static/src/views/kanban/kanban_column_examples_dialog.xml`, `<t t-name="web.KanbanColumnExamplesDialog" xml:space="preserve">
        <Dialog contentClass="'o_kanban_examples_dialog'" title.translate="Kanban Examples">
            <Notebook orientation="'vertical'" pages="pages" onPageUpdate.bind="onPageUpdate"/>
            <t t-set-slot="footer">
                <button class="btn btn-primary" t-on-click="applyExamples" t-esc="props.applyExamplesText"/>
                <button class="btn btn-secondary" t-on-click="props.close">Close</button>
            </t>
        </Dialog>
    </t>

`);
registerTemplate("web.KanbanColumnQuickCreate", `/web/static/src/views/kanban/kanban_column_quick_create.xml`, `<t t-name="web.KanbanColumnQuickCreate" xml:space="preserve">
        <div class="o_column_quick_create d-print-none flex-shrink-0 flex-grow-1 flex-md-grow-0" t-ref="root">
            <div t-if="props.folded" class="o_quick_create_folded position-sticky z-1 my-3 text-nowrap" t-on-click="unfold">
                <button class="o_kanban_add_column btn btn-light w-100" aria-label="Add column" data-tooltip="Add column">
                    <i class="fa fa-plus me-2" role="img"/><t t-out="relatedFieldName"/>
                </button>
            </div>
            <div t-else="" class="o_quick_create_unfolded pt-3 pb-2">
                <div class="o_kanban_header top-0 pb-3">
                    <div class="input-group mb-1">
                        <input type="text" class="form-control bg-view" t-attf-placeholder="{{ relatedFieldName }}..." t-ref="autofocus" t-on-focus="() =&gt; state.hasInputFocused = true" t-on-blur="() =&gt; state.hasInputFocused = false" t-on-keydown="onInputKeydown"/>
                        <button class="btn btn-primary o_kanban_add" type="button" t-on-click="validate">
                            Add
                        </button>
                    </div>
                    <div t-if="!env.isSmall and state.hasInputFocused" t-attf-class="o_discard_msg small text-muted {{ canShowExamples ? 'float-end' : 'text-end'}}">
                        Press <kbd>Esc</kbd> to discard
                    </div>
                    <t t-if="canShowExamples and !env.isSmall">
                        <button type="button" class="btn btn-link o_kanban_examples p-0" t-on-click="showExamples">See examples</button>
                    </t>
                </div>
                <div t-foreach="[,,,]" t-as="i" t-key="i_index" class="o_kanban_muted_record mb-2 py-5 bg-300 opacity-50"/>
            </div>
        </div>
    </t>

`);
registerTemplate("web.KanbanView", `/web/static/src/views/kanban/kanban_controller.xml`, `<t t-name="web.KanbanView" xml:space="preserve">
        <div t-att-class="className" t-ref="root">
            <Layout className="model.useSampleModel ? 'o_view_sample_data' : ''" display="props.display">
                <t t-set-slot="control-panel-create-button">
                    <t t-if="canCreate and props.showButtons">
                        <button type="button" class="btn btn-primary o-kanban-button-new" accesskey="c" t-on-click="() =&gt; this.createRecord()" data-bounce-button="">
                            New
                        </button>
                    </t>
                </t>
                <t t-set-slot="layout-buttons">
                    <t t-call="{{ props.buttonTemplate }}"/>
                </t>
                <t t-set-slot="control-panel-always-buttons">
                    <t t-foreach="headerButtons" t-as="button" t-key="button.id" t-if="!evalViewModifier(button.invisible)">
                        <MultiRecordViewButton t-if="button.display === 'always'" list="model.root" className="button.className" clickParams="button.clickParams" defaultRank="'btn-secondary'" domain="props.domain" icon="button.icon" string="button.string" title="button.title" attrs="button.attrs"/>
                    </t>
                </t>
                <t t-set-slot="control-panel-additional-actions">
                    <CogMenu/>
                </t>
                <t t-set-slot="layout-actions">
                    <SearchBar toggler="searchBarToggler"/>
                </t>
                <t t-set-slot="control-panel-navigation-additional">
                    <t t-component="searchBarToggler.component" t-props="searchBarToggler.props"/>
                </t>
                <t t-component="props.Renderer" list="model.root" archInfo="props.archInfo" Compiler="props.Compiler" readonly="true" forceGlobalClick="props.forceGlobalClick" deleteRecord.bind="deleteRecord" openRecord.bind="openRecord" noContentHelp="props.info.noContentHelp" scrollTop.bind="scrollTop" canQuickCreate="canQuickCreate" quickCreateState="quickCreateState" progressBarState="progressBarState"/>
            </Layout>
        </div>
    </t>

    `);
registerTemplate("web.KanbanView.Buttons", `/web/static/src/views/kanban/kanban_controller.xml`, `<t t-name="web.KanbanView.Buttons" xml:space="preserve">
        <div t-if="props.showButtons" class="o_cp_buttons d-empty-none d-flex align-items-baseline gap-1" role="toolbar" aria-label="Main actions"/>
    </t>

`);
registerTemplate("web.KanbanCoverImageDialog", `/web/static/src/views/kanban/kanban_cover_image_dialog.xml`, `<t t-name="web.KanbanCoverImageDialog" xml:space="preserve">
        <Dialog title.translate="Set a Cover Image" size="'lg'">
            <div t-if="attachments.length" class="o_kanban_cover_container bg-100">
                <t t-foreach="attachments" t-as="attachment" t-key="attachment.id">
                    <div class="o_kanban_cover_image position-relative d-inline-block m-2 border bg-white o_cursor_pointer" t-att-class="{                         'o_selected border-primary': state.selectedAttachmentId === attachment.id,                     }">
                        <img t-attf-src="/web/image/{{attachment.id}}?unique=1" class="position-absolute start-0 end-0 top-0 bottom-0 mw-100 mh-100 m-auto" alt="Attachment" t-on-click="() =&gt; this.selectAttachment(attachment, false)" t-on-dblclick="() =&gt; this.selectAttachment(attachment, true)"/>
                    </div>
                </t>
            </div>
            <t t-else="">There is no available image to be set as cover.</t>
            <t t-set-slot="footer" t-slot-scope="dialog">
                <button t-if="attachments.length" class="btn btn-primary" t-on-click="setCover" t-att-disabled="!state.selectedAttachmentId">
                    Select
                </button>
                <FileInput autoOpen="!attachments.length" acceptedFileExtensions="'image/*'" onUpload.bind="onUpload" resModel="props.record.resModel" resId="props.record.resId">
                        <button class="btn btn-primary" t-on-click="uploadImage">
                            Upload and Set
                        </button>
                </FileInput>
                <button t-if="hasCoverImage" class="btn btn-secondary" t-on-click="removeCover">
                    Remove Cover Image
                </button>
                <button class="btn btn-secondary" t-on-click="dialog.close">
                    Discard
                </button>
            </t>
        </Dialog>
    </t>

`);
registerTemplate("web.KanbanHeader", `/web/static/src/views/kanban/kanban_header.xml`, `<t t-name="web.KanbanHeader" xml:space="preserve">
        <div class="o_kanban_header position-sticky top-0 z-1" t-ref="root" t-attf-class="{{ !env.isSmall and group.isFolded ? 'd-print-none pt-2' : 'py-2 pt-print-0' }}">
            <div class="o_kanban_header_title position-relative d-flex lh-lg">
                <div t-if="group.isFolded" class="o_column_title d-flex align-items-center pt-1 fs-4 lh-1 text-nowrap opacity-50 opacity-100-hover flex-grow-1 gap-1" t-on-mouseenter="onTitleMouseEnter" t-on-mouseleave="onTitleMouseLeave">
                    <t t-esc="groupName"/>
                    <span t-if="group.count &gt; 0 and !props.list.model.useSampleModel" t-esc="'(' + group.count + ')'"/>
                </div>
                <div t-if="!group.isFolded" class="o_column_title flex-grow-1 min-w-0 mw-100 gap-1 d-flex fs-4 fw-bold align-top text-900" t-on-mouseenter="onTitleMouseEnter" t-on-mouseleave="onTitleMouseLeave">
                    <span class="text-truncate" t-esc="groupName"/>
                    <span t-if="!progressBar and !props.list.model.useSampleModel" t-esc="'(' + group.count + ')'"/>
                </div>
                <t t-if="env.isSmall or !group.isFolded">
                    <div class="o_kanban_config d-print-none">
                        <Dropdown menuClass="'o-dropdown--kanban-config-menu'" position="'bottom-end'">
                            <button class="btn px-2">
                                <i class="fa fa-gear opacity-50 opacity-100-hover" role="img" aria-label="Settings" title="Settings"/>
                            </button>
                            <t t-set-slot="content">
                                <t t-foreach="configItems" t-as="item" t-key="item.key">
                                    <DropdownItem t-if="item.isVisible" class="item.class" onSelected="() =&gt; this[item.method]()">
                                        <t t-esc="item.label"/>
                                    </DropdownItem>
                                </t>
                            </t>
                        </Dropdown>
                    </div>
                    <button t-if="canQuickCreate()" class="o_kanban_quick_add d-print-none btn pe-2 me-n2" t-on-click="() =&gt; this.quickCreate()">
                        <i class="fa fa-plus opacity-75 opacity-100-hover" role="img" aria-label="Quick add" title="Quick add"/>
                    </button>
                </t>
                <button t-else="" class="o_column_unfold btn d-flex align-items-center justify-content-between flex-nowrap pt-2 pb-3 transition-base">
                    <i class="fa fa-caret-left lh-lg transition-base" role="img" aria-label="Unfold" title="Unfold"/>
                    <i class="fa fa-caret-right lh-lg" role="img" aria-label="Unfold" title="Unfold"/>
                </button>
            </div>
            <div t-if="(env.isSmall or !group.isFolded) and progressBar" class="o_kanban_counter position-relative d-flex align-items-center justify-content-between" t-att-class="{ 'opacity-25': !group.count }">
                <ColumnProgress group="group" progressBar="progressBar" aggregate="groupAggregate" onBarClicked.bind="onBarClicked"/>
            </div>
        </div>
    </t>

    `);
registerTemplate("web.KanbanGroupTooltip", `/web/static/src/views/kanban/kanban_header.xml`, `<t t-name="web.KanbanGroupTooltip" xml:space="preserve">
        <div class="o-tooltip px-2 py-1">
            <t t-foreach="props.tooltip" t-as="entry" t-key="entry_index">
                <t t-esc="entry.title"/>
                <br/>
                <t t-esc="entry.value"/>
                <br t-if="!tooltip_last"/>
            </t>
        </div>
    </t>

`);
registerTemplate("web.KanbanRecord", `/web/static/src/views/kanban/kanban_record.xml`, `<t t-name="web.KanbanRecord" xml:space="preserve">
        <article t-att-class="getRecordClasses()" t-att-data-id="props.record.id" t-att-tabindex="props.record.model.useSampleModel ? -1 : 0" t-on-click="onGlobalClick" t-ref="root">
                <t t-call="{{ this.mainTemplate }}" t-call-context="this.renderingContext"/>
                <t t-call="{{ this.constructor.menuTemplate }}"/>
        </article>
    </t>

    `);
registerTemplate("web.KanbanRecordMenu", `/web/static/src/views/kanban/kanban_record.xml`, `<t t-name="web.KanbanRecordMenu" xml:space="preserve">
        <div t-if="showMenu" class="o_dropdown_kanban bg-transparent position-absolute end-0 top-0 w-auto">
            <Dropdown menuClass="getMenuClasses()" position="'bottom-end'">
                <button class="btn o-no-caret rounded-0" title="Dropdown menu">
                    <span class="fa fa-ellipsis-v"/>
                </button>
                <t t-set-slot="content">
                    <KanbanDropdownMenuWrapper>
                        <t t-call="{{ templates[this.menuTemplateName] }}" t-call-context="renderingContext"/>
                    </KanbanDropdownMenuWrapper>
                </t>
            </Dropdown>
        </div>
    </t>
`);
registerTemplate("web.KanbanRecordQuickCreate", `/web/static/src/views/kanban/kanban_record_quick_create.xml`, `<t t-name="web.KanbanRecordQuickCreate" xml:space="preserve">
        <KanbanQuickCreateController t-if="state.isLoaded" t-props="quickCreateProps"/>
    </t>

    `);
registerTemplate("web.KanbanQuickCreateController", `/web/static/src/views/kanban/kanban_record_quick_create.xml`, `<t t-name="web.KanbanQuickCreateController" xml:space="preserve">
        <div class="o_kanban_quick_create o_field_highlight shadow" t-att-class="{ o_disabled: state.disabled, 'w-100 mx-0': props.listIsGrouped }" t-ref="root">
            <t t-component="props.Renderer" class="'o_form_view o_xxs_form_view o_kanban_quick_create_form p-0'" record="model.root" Compiler="props.Compiler" archInfo="props.archInfo"/>
            <div class="d-flex flex-wrap justify-content-end gap-1">
                <button class="btn btn-primary o_kanban_add me-1" t-on-click="() =&gt; this.validate('add')">
                    Add
                </button>
                <button class="btn btn-secondary o_kanban_edit me-1" t-on-click="() =&gt; this.validate('edit')">
                    Edit
                </button>
                <span class="flex-grow-1"/>
                <button class="btn btn-secondary o_kanban_cancel" t-on-click="() =&gt; this.cancel(true)">
                    <i class="fa fa-trash"/>
                </button>
            </div>
        </div>
    </t>

`);
registerTemplate("web.KanbanRenderer", `/web/static/src/views/kanban/kanban_renderer.xml`, `<t t-name="web.KanbanRenderer" xml:space="preserve">
        <div class="o_kanban_renderer o_renderer d-flex" t-attf-class="{{ props.list.isGrouped ? 'o_kanban_grouped align-content-stretch' : 'o_kanban_ungrouped align-content-start flex-wrap justify-content-start' }}" t-ref="root">
            <t t-foreach="getGroupsOrRecords()" t-as="groupOrRecord" t-key="groupOrRecord.key">
                <t t-if="groupOrRecord.group">
                    <t t-set="group" t-value="groupOrRecord.group"/>
                    <t t-set="isGroupProcessing" t-value="isProcessing(group.id)"/>
                    <div class="o_kanban_group flex-shrink-0 flex-grow-1 flex-md-grow-0" t-att-class="getGroupClasses(group, isGroupProcessing)" t-attf-class="{{ !env.isSmall and group.isFolded ? 'opacity-trigger-hover' : '' }}" t-att-data-id="group.id" t-on-click="(ev) =&gt; this.onGroupClick(group, ev)">
                        <KanbanHeader activeActions="props.archInfo.activeActions" canQuickCreate="props.canQuickCreate" deleteGroup="(group) =&gt; this.deleteGroup(group)" dialogClose="dialogClose" group="group" list="props.list" quickCreateState="props.quickCreateState" scrollTop="props.scrollTop" tooltipInfo="props.archInfo.tooltipInfo" progressBarState="props.progressBarState"/>
                        <t t-if="!group.isFolded">
                            <t t-if="group.id === props.quickCreateState.groupId">
                                <KanbanRecordQuickCreate group="group" onCancel="force =&gt; this.cancelQuickCreate(force)" onValidate="(record, mode) =&gt; this.validateQuickCreate(record, mode, group)" quickCreateView="props.quickCreateState.view"/>
                            </t>
                            <t t-foreach="group.list.records" t-as="record" t-key="record.id">
                                <KanbanRecord archInfo="props.archInfo" Compiler="props.Compiler" canResequence="!isGroupProcessing and !isProcessing(record.id) and canResequenceRecords" forceGlobalClick="props.forceGlobalClick" group="group" list="props.list" deleteRecord="props.deleteRecord" archiveRecord.bind="archiveRecord" openRecord="props.openRecord" readonly="props.readonly" record="record" templates="props.archInfo.templateDocs" progressBarState="props.progressBarState"/>
                            </t>
                            <t t-set="unloadedCount" t-value="getGroupUnloadedCount(group)"/>
                            <div t-if="unloadedCount &gt; 0" class="o_kanban_load_more">
                                <button class="btn btn-outline-primary w-100 mt-4" t-on-click="() =&gt; this.loadMore(group)">Load more... (<t t-out="unloadedCount"/> remaining)</button>
                            </div>
                        </t>
                        <t t-elif="env.isSmall">
                            <t t-set="unloadedCount" t-value="getGroupUnloadedCount(group)"/>
                            <div t-if="unloadedCount &gt; 0" class="o_kanban_load_more">
                                <button class="btn btn-outline-primary w-100 mt-4" t-on-click="() =&gt; this.toggleGroup(group)">Load more... (<t t-out="unloadedCount"/> remaining)</button>
                            </div>
                        </t>
                    </div>
                </t>
                <t t-else="">
                    <KanbanRecord archInfo="props.archInfo" Compiler="props.Compiler" canResequence="!isProcessing(groupOrRecord.record.id) and canResequenceRecords" forceGlobalClick="props.forceGlobalClick" list="props.list" deleteRecord="props.deleteRecord" archiveRecord="(record, active) =&gt; this.archiveRecord(record, active)" openRecord="props.openRecord" readonly="props.readonly" record="groupOrRecord.record" templates="props.archInfo.templateDocs"/>
                </t>
            </t>
            <t t-if="props.list.isGrouped">
                <t t-if="canCreateGroup()">
                    <KanbanColumnQuickCreate folded="state.columnQuickCreateIsFolded" onFoldChange="folded =&gt; state.columnQuickCreateIsFolded = folded" onValidate="props.list.createGroup.bind(props.list)" exampleData="exampleData" groupByField="props.list.groupByField"/>

                    <div t-if="props.list.groups.length === 0" class="o_kanban_example_background_container d-flex opacity-50">
                        <div class="o_kanban_example_background flex-grow-1">
                            <div class="o_kanban_examples d-flex p-2">
                                <div t-foreach="ghostColumns" t-as="column" t-key="column.name" class="o_kanban_examples_group flex-grow-1 m-3">
                                    <h6><b t-esc="column.name"/></h6>
                                    <div t-foreach="column.cards" t-as="card" t-key="card_index" class="o_kanban_examples_ghost d-flex flex-wrap justify-content-between mb-3 p-2 border bg-light">
                                        <div class="o_ghost_content w-100 pb-3 bg-300"/>
                                        <div class="o_ghost_content o_ghost_tag d-inline-block w-50 mt-3 pb-3 bg-300"/>
                                        <span class="mt-2 rounded-circle bg-300">
                                            <img class="o_ghost_avatar" src="/base/static/img/avatar.png" alt="Avatar"/>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </t>
            </t>
            <t t-else="">

                <div t-foreach="[,,,,,,]" t-as="i" t-key="i_index" class="o_kanban_record o_kanban_ghost flex-grow-1 flex-md-shrink-1 flex-shrink-0 my-0"/>
            </t>
            <t t-if="showNoContentHelper">
                <t t-if="props.noContentHelp" t-call="web.ActionHelper">
                    <t t-set="noContentHelp" t-value="props.noContentHelp"/>
                </t>
                <t t-else="" t-call="web.NoContentHelper"/>
            </t>
        </div>
    </t>

    `);
registerTemplate("web.KanbanDropdownMenuWrapper", `/web/static/src/views/kanban/kanban_renderer.xml`, `<t t-name="web.KanbanDropdownMenuWrapper" xml:space="preserve">
        <div t-on-click="onClick" style="display:contents">
            <t t-slot="default"/>
        </div>
    </t>

`);
registerTemplate("web.ExportAll", `/web/static/src/views/list/export_all/export_all.xml`, `<t t-name="web.ExportAll" xml:space="preserve">
        <DropdownItem class="'o_export_all_menu'" onSelected.bind="onDirectExportData">
            <i class="fa fa-fw fa-upload me-1"/>Export All
        </DropdownItem>
    </t>

`);
registerTemplate("web.ListCogMenu", `/web/static/src/views/list/list_cog_menu.xml`, `<t t-name="web.ListCogMenu" t-inherit="web.CogMenu" xml:space="preserve">
        <xpath expr="//t[@t-if='state.printItems.length']" position="before">
            <t t-slot="default"/>
        </xpath>
        <xpath expr="//t[@t-if='state.printItems.length']/Dropdown" position="before">
            <div role="separator" class="dropdown-divider"/>
        </xpath>
    </t>

`);
registerTemplate("web.ListView.ConfirmationModal", `/web/static/src/views/list/list_confirmation_dialog.xml`, `<t t-name="web.ListView.ConfirmationModal" xml:space="preserve">
        <Dialog size="'md'" title="props.title">
            <main role="alert">
                <p>
                    <t t-if="props.isDomainSelected">This update will only consider the records of the current page.<br/><br/></t>
                    <t t-if="props.nbRecords != props.nbValidRecords">
                        Among the <t t-esc="props.nbRecords"/> selected records,
                        <t t-esc="props.nbValidRecords"/> are valid for this update.<br/>
                    </t>
                    Are you sure you want to perform the following update on those <t t-esc="props.nbValidRecords"/> records?
                </p>
                <div class="table-responsive">
                    <table class="o_modal_changes">
                        <tbody>
                            <t t-foreach="props.fields" t-as="field" t-key="field_index">
                                <tr>
                                    <td>Field:</td>
                                    <td><t t-esc="field.label"/></td>
                                </tr>
                                <tr>
                                    <td>Update to:</td>
                                    <td style="pointer-events: none;">
                                        <Field name="field.name" record="props.record" type="field.widget" readonly="true" fieldInfo="field.fieldNode"/>
                                    </td>
                                </tr>
                            </t>
                        </tbody>
                    </table>
                </div>
            </main>
            <t t-set-slot="footer">
                <button class="btn btn-primary" t-on-click="_confirm" t-ref="autofocus">
                Confirm
                </button>
                <button t-if="props.cancel" class="btn btn-secondary" t-on-click="_cancel">
                Cancel
                </button>
            </t>
        </Dialog>
    </t>

`);
registerTemplate("web.ListView", `/web/static/src/views/list/list_controller.xml`, `<t t-name="web.ListView" xml:space="preserve">
        <div t-att-class="className" t-ref="root">
            <Layout className="model.useSampleModel ? 'o_view_sample_data' : ''" display="display">
                <t t-set-slot="control-panel-create-button">
                    <t t-if="!editedRecord and activeActions.create and props.showButtons">
                        <button type="button" class="btn btn-primary o_list_button_add" data-hotkey="c" t-on-click="onClickCreate" data-bounce-button="">
                            New
                        </button>
                    </t>
                    <t t-if="env.isSmall" t-call="{{ props.buttonTemplate }}"/>
                </t>

                <t t-set-slot="layout-buttons">
                    <t t-if="!env.isSmall" t-call="{{ props.buttonTemplate }}"/>
                </t>
                <t t-set-slot="control-panel-always-buttons">
                    <t t-foreach="archInfo.headerButtons" t-as="button" t-key="button.id" t-if="!evalViewModifier(button.invisible)">
                        <MultiRecordViewButton t-if="button.display === 'always'" list="model.root" className="button.className" clickParams="button.clickParams" defaultRank="'btn-secondary'" domain="props.domain" icon="button.icon" string="button.string" title="button.title" attrs="button.attrs"/>
                    </t>
                </t>

                <t t-set-slot="layout-actions">
                    <SearchBar toggler="searchBarToggler" autofocus="firstLoad"/>
                </t>
                <t t-set-slot="control-panel-navigation-additional">
                    <t t-if="!hasSelectedRecords" t-component="searchBarToggler.component" t-props="searchBarToggler.props"/>
                </t>

                <t t-set-slot="control-panel-additional-actions">
                    <CogMenu t-if="!hasSelectedRecords"/>
                    <CogMenu t-elif="env.isSmall and (props.info.actionMenus or archInfo.headerButtons.length)" t-props="this.actionMenuProps" hasSelectedRecords="hasSelectedRecords">
                        <t t-foreach="archInfo.headerButtons" t-as="button" t-key="button.id" t-if="!evalViewModifier(button.invisible)">
                            <DropdownItem class="'o-dropdown-item-unstyled-button'">
                                <MultiRecordViewButton t-if="button.display !== 'always'" list="model.root" className="button.className" clickParams="button.clickParams" defaultRank="'btn-secondary'" domain="props.domain" icon="button.icon" string="button.string" title="button.title" attrs="button.attrs"/>
                            </DropdownItem>
                        </t>
                    </CogMenu>
                </t>
                <t t-set-slot="control-panel-selection-actions">
                    <div t-if="hasSelectedRecords" class="o_list_selection_container m-1 m-md-0 d-flex gap-1">
                        <t t-call="web.ListView.Selection"/>
                        <t t-if="!env.isSmall">
                            <t t-foreach="archInfo.headerButtons" t-as="button" t-key="button.id" t-if="!evalViewModifier(button.invisible)">
                                <MultiRecordViewButton t-if="button.display !== 'always'" list="model.root" className="button.className" clickParams="button.clickParams" defaultRank="'btn-secondary'" domain="props.domain" icon="button.icon" string="button.string" title="button.title" attrs="button.attrs"/>
                            </t>
                            <t t-if="props.info.actionMenus">
                                <ActionMenus t-props="this.actionMenuProps"/>
                            </t>
                        </t>
                    </div>
                </t>
                <t t-component="props.Renderer" list="model.root" activeActions="activeActions" archInfo="archInfo" allowSelectors="props.allowSelectors" editable="editable" onOpenFormView="onOpenFormView" hasOpenFormViewButton="hasOpenFormViewButton" openRecord.bind="openRecord" noContentHelp="props.info.noContentHelp" onAdd.bind="createRecord" optionalActiveFields="optionalActiveFields"/>
            </Layout>
        </div>
    </t>

    `);
registerTemplate("web.ListView.Buttons", `/web/static/src/views/list/list_controller.xml`, `<t t-name="web.ListView.Buttons" xml:space="preserve">
        <div t-if="props.showButtons" class="o_list_buttons d-flex gap-1 d-empty-none align-items-baseline" role="toolbar" aria-label="Main actions">
            <t t-if="editedRecord">
                <button type="button" class="btn btn-primary o_list_button_save" data-hotkey="s" t-on-click.stop="onClickSave">
                    Save
                </button>
                <button type="button" class="btn btn-secondary o_list_button_discard" data-hotkey="j" t-on-click.stop="onClickDiscard" t-on-mousedown="onMouseDownDiscard">
                    Discard
                </button>
            </t>
        </div>
    </t>

    `);
registerTemplate("web.ListView.Selection", `/web/static/src/views/list/list_controller.xml`, `<t t-name="web.ListView.Selection" xml:space="preserve">
        <div class="o_list_selection_box list-group flex-row w-auto" t-att-class="{'m-1 gap-1': env.isSmall}" role="alert">
            <span class="list-group-item active d-flex align-items-center pe-0 py-0 rounded-1 gap-1 flex-grow-1" t-att-class="{'shadow': env.isSmall}">
                <span t-if="isDomainSelected">All <b t-esc="nbTotal"/> selected</span>
                <t t-else="">
                    <b t-esc="nbSelected"/> selected
                    <button t-if="!env.isSmall and isPageSelected and (!model.root.isRecordCountTrustable or nbTotal &gt; nbSelected)" class="o_list_select_domain btn btn-sm btn-info p-1 ms-2 me-n2 border-0 fw-normal" title="Select all records matching the search" t-on-click="onSelectDomain">
                        <i class="oi oi-fw oi-arrow-right"/>
                        Select all <span t-if="model.root.isRecordCountTrustable" t-esc="nbTotal"/>
                    </button>
                </t>
                <button title="Unselect All" class="o_list_unselect_all btn btn-link ms-auto border-0" t-on-click="onUnselectAll">
                    <i class="oi oi-close"/>
                </button>
            </span>
            <button t-if="env.isSmall and !isDomainSelected and (!model.root.isRecordCountTrustable or nbTotal &gt; nbSelected)" class="o_list_select_domain btn btn-info shadow" title="Select all records matching the search" t-on-click="onSelectDomain">
                All
            </button>
        </div>
    </t>

`);
registerTemplate("web.ListRenderer", `/web/static/src/views/list/list_renderer.xml`, `<t t-name="web.ListRenderer" xml:space="preserve">
        <t t-set="_canSelectRecord" t-value="canSelectRecord"/>
        <div class="o_list_renderer o_renderer table-responsive" tabindex="-1" t-ref="root">
            <t t-if="showNoContentHelper" t-call="web.ActionHelper">
                <t t-set="noContentHelp" t-value="props.noContentHelp"/>
            </t>
            <table t-attf-class="o_list_table table table-sm table-hover position-relative mb-0 {{props.list.isGrouped ? 'o_list_table_grouped' : 'o_list_table_ungrouped table-striped'}}" t-ref="table">
                <thead>
                    <tr>
                        <th t-if="hasSelectors" class="o_list_record_selector o_list_controller align-middle pe-1 cursor-pointer" tabindex="-1" t-on-keydown="(ev) =&gt; this.onCellKeydown(ev)" t-on-click.stop="toggleSelection">
                            <CheckBox disabled="!_canSelectRecord" value="selectAll" className="'d-flex m-0'" onChange.bind="toggleSelection"/>
                        </th>
                        <t t-foreach="columns" t-as="column" t-key="column.id">
                            <th t-if="column.type === 'field'" t-att-data-name="column.name" t-att-class="getColumnClass(column) + ' opacity-trigger-hover w-print-auto'" t-on-pointerup="onColumnTitleMouseUp" t-on-click="() =&gt; this.onClickSortColumn(column)" t-on-keydown="(ev) =&gt; this.onCellKeydown(ev)" data-tooltip-delay="1000" tabindex="-1">
                                <t t-if="column.hasLabel and column.widget !== 'handle'">
                                <t t-set="isNumeric" t-value="isNumericColumn(column)"/>
                                    <div class="d-flex" t-att-data-tooltip-template="isDebugMode ? 'web.FieldTooltip' : 'web.ListHeaderTooltip'" t-att-data-tooltip-info="makeTooltip(column)">
                                        <span class="d-block min-w-0 text-truncate flex-grow-1 flex-shrink-1" t-att-class="isNumeric ? 'o_list_number_th' : ''" t-esc="column.label"/>
                                        <div class="o_list_header_label_spacer"/>
                                        <i class="o_list_sortable_caret" t-att-class="getSortableIconClass(column)"/>
                                    </div>
                                    <span class="o_resize position-absolute top-0 end-0 bottom-0 ps-1 bg-black-25 opacity-0 opacity-50-hover z-1" t-on-pointerdown.stop.prevent="this.columnWidths.onStartResize"/>
                                </t>
                            </th>
                            <th t-else="" t-on-keydown="(ev) =&gt; this.onCellKeydown(ev)" t-att-class="{'o_list_button w-print-0 p-print-0': column.type === 'button_group'}"/>
                        </t>
                        <th t-if="hasOpenFormViewColumn" t-on-keydown="(ev) =&gt; this.onCellKeydown(ev)" class="o_list_open_form_view w-print-0 p-print-0"/>
                        <th t-if="hasActionsColumn" t-on-keydown="(ev) =&gt; this.onCellKeydown(ev)" class="o_list_controller o_list_actions_header w-print-0 p-print-0 position-sticky end-0">
                            <div t-if="displayOptionalFields or hasOptionalOpenFormViewColumn" class="o_optional_columns_dropdown d-print-none text-center border-top-0">
                                <Dropdown position="'bottom-end'">
                                    <button class="btn p-0" tabindex="-1">
                                        <i class="o_optional_columns_dropdown_toggle oi oi-fw oi-settings-adjust"/>
                                    </button>

                                    <t t-set-slot="content">
                                        <t t-foreach="optionalFieldGroups" t-as="group" t-key="group_index">
                                            <div t-if="!group_first" role="separator" class="dropdown-divider"/>
                                            <DropdownItem t-if="group.displayName" closingMode="'none'" onSelected="() =&gt; this.toggleOptionalFieldGroup(group.id)">
                                                <div class="fw-bold" t-esc="group.displayName"/>
                                            </DropdownItem>
                                            <t t-foreach="group.optionalFields" t-as="field" t-key="field_index">
                                                <DropdownItem closingMode="'none'" onSelected="() =&gt; this.toggleOptionalField(field.name)">
                                                    <CheckBox onChange="() =&gt; this.toggleOptionalField(field.name)" value="field.value" name="field.name">
                                                        <span class="d-flex align-items-center"><span class="text-truncate" t-esc="field.label"/><span class="ps-1" t-if="env.debug" t-esc="' (' + field.name + ')'"/></span>
                                                    </CheckBox>
                                                </DropdownItem>
                                            </t>
                                        </t>
                                        <div t-if="hasOptionalOpenFormViewColumn" role="separator" class="dropdown-divider"/>
                                        <DropdownItem t-if="hasOptionalOpenFormViewColumn" closingMode="'none'" onSelected="() =&gt; this.toggleDebugOpenView()">
                                            <CheckBox onChange="() =&gt; this.toggleDebugOpenView()" value="this.debugOpenView" name="'View Button'">
                                                <span class="d-flex align-items-center"><span class="text-truncate">View Button</span></span>
                                            </CheckBox>
                                        </DropdownItem>
                                    </t>
                                </Dropdown>
                            </div>
                        </th>
                    </tr>
                </thead>
                <tbody class="ui-sortable">
                    <t t-call="{{ constructor.rowsTemplate }}">
                        <t t-set="list" t-value="props.list"/>
                    </t>
                </tbody>
                <tfoot t-on-click="() =&gt; props.list.leaveEditMode()" class="o_list_footer cursor-default" t-att-class="{o_sample_data_disabled: props.list.model.useSampleModel}">
                    <tr>
                        <td t-if="hasSelectors"/>
                        <t t-foreach="columns" t-as="column" t-key="column.id">
                            <t t-set="aggregate" t-value="aggregates[column.name]"/>
                            <td t-if="aggregate" class="o_list_number">
                                <span t-esc="aggregate.value" t-att-data-tooltip="aggregate.help"/>
                            </td>
                            <td t-elif="column.type != 'field'" class="w-print-auto"/>
                            <td t-else=""/>
                        </t>
                        <td t-if="hasOpenFormViewColumn" class="w-print-0 p-print-0"/>
                        <td t-if="displayOptionalFields or activeActions.onDelete" class="w-print-0 p-print-0"/>
                    </tr>
                </tfoot>
            </table>
        </div>
    </t>

    `);
registerTemplate("web.ListRenderer.Rows", `/web/static/src/views/list/list_renderer.xml`, `<t t-name="web.ListRenderer.Rows" xml:space="preserve">
        <t t-if="!list.isGrouped">
            <t t-foreach="list.records" t-as="record" t-key="record.id">
                <t t-call="{{ constructor.recordRowTemplate }}"/>
            </t>
            <tr t-if="displayRowCreates">
                <td t-if="withHandleColumn"/>
                <td t-att-colspan="withHandleColumn ? nbCols - 1 : nbCols" class="o_field_x2many_list_row_add" t-on-keydown="(ev) =&gt; this.onCellKeydown(ev, null)">
                    <t t-foreach="creates" t-as="create" t-key="create_index">
                        <a t-if="create.type === 'create'" href="#" role="button" t-att-class="create_index !== 0 ? 'ml16' : ''" t-att-tabindex="editedRecord ? '-1' : '0'" t-on-click.stop.prevent="() =&gt; this.add({ context: create.context })">
                            <t t-esc="create.string"/>
                        </a>
                        <ViewButton t-if="create.type === 'button'" className="\`\${create.className} \${create_index !== 0 ? 'ml16' : ''}\`" clickParams="create.clickParams" icon="create.icon" record="props.list" string="create.string" title="create.title" tabindex="editedRecord ? '-1' : '0'"/>
                    </t>
                </td>
            </tr>
            <t t-if="!props.list.isGrouped and !props.noContentHelp">
                <tr t-foreach="getEmptyRowIds" t-as="emptyRowId" t-key="emptyRowId">
                    <td t-att-colspan="nbCols">​</td>
                </tr>
            </t>
        </t>
        <t t-else="">
            <t t-foreach="list.groups" t-as="group" t-key="group.id">
                <t t-call="{{ constructor.groupRowTemplate }}"/>
                <t t-if="!group.isFolded">
                    <t t-call="{{ constructor.rowsTemplate }}">
                        <t t-set="list" t-value="group.list"/>
                    </t>
                    <tr t-if="!group.list.isGrouped and props.editable and canCreate">
                        <td t-if="hasSelectors"/>
                        <td t-att-colspan="hasSelectors ?  nbCols - 1 : nbCols" class="o_group_field_row_add">
                            <a href="#" role="button" t-on-click.stop.prevent="() =&gt; this.addInGroup(group)" t-on-keydown="(ev) =&gt; this.onCellKeydown(ev)">
                                Add a line
                            </a>
                        </td>
                    </tr>
                </t>
            </t>
        </t>
    </t>

    `);
registerTemplate("web.ListRenderer.GroupRow", `/web/static/src/views/list/list_renderer.xml`, `<t t-name="web.ListRenderer.GroupRow" xml:space="preserve">
        <tr t-attf-class="{{group.count &gt; 0 ? 'o_group_has_content' : ''}} o_group_header {{!group.isFolded ? 'o_group_open' : ''}} cursor-pointer" t-on-click="(ev) =&gt; this.onGroupHeaderClicked(ev, group)">
            <th t-on-keydown="(ev) =&gt; this.onCellKeydown(ev, group)" tabindex="-1" t-attf-class="o_group_name fs-6 fw-bold {{!group.isFolded ? 'text-900' : 'text-700'}}" t-att-colspan="getGroupNameCellColSpan(group)">
                <div class="d-flex align-items-center">
                    <span t-attf-class="o_group_caret fa fa-fw {{group.isFolded ? 'fa-caret-right' : 'fa-caret-down' }} me-1" t-attf-style="--o-list-group-level: {{getGroupLevel(group)}}"/>
                    <t t-esc="getGroupDisplayName(group)"/> (<t t-esc="group.count"/>)
                    <div t-if="(groupByButtons[group.groupByField.name] and !group.isFolded and group.record.resId)" class="o_group_buttons">
                        <t t-foreach="groupByButtons[group.groupByField.name]" t-as="button" t-key="button.id">
                            <t t-if="!evalInvisible(button.invisible, group.record)">
                                <t t-if="button.clickParams.type === 'edit'">
                                    <button t-att-title="button.title" class="btn" t-on-click="() =&gt; this.editGroupRecord(group)" tabindex="-1">
                                        <i t-attf-class="fa fa-fw {{button.icon}} o_button_icon"/>
                                    </button>
                                </t>
                                <t t-else="">
                                    <ViewButton className="button.className" clickParams="button.clickParams" icon="button.icon" record="group.record" string="button.string" title="button.title" tabindex="'-1'"/>
                                </t>
                            </t>
                        </t>
                    </div>
                    <div t-if="showGroupPager(group)" t-on-click.stop="" class="ms-auto">
                        <Pager t-props="getGroupPagerProps(group)"/>
                    </div>
                </div>
            </th>
            <td t-on-keydown="(ev) =&gt; this.onCellKeydown(ev, group)" t-foreach="getAggregateColumns(group)" t-as="column" t-key="column.id" t-att-class="{'o_list_number': column.type === 'field'}">
                <t t-if="column.type === 'field'" t-esc="formatAggregateValue(group, column)"/>
            </td>
            <t t-set="groupPagerColspan" t-value="getGroupPagerCellColspan(group)"/>
            <th t-on-keydown="(ev) =&gt; this.onCellKeydown(ev, group)" t-if="groupPagerColspan &gt; 0" t-att-colspan="groupPagerColspan"/>
        </tr>
    </t>

    `);
registerTemplate("web.ListRenderer.RecordRow", `/web/static/src/views/list/list_renderer.xml`, `<t t-name="web.ListRenderer.RecordRow" xml:space="preserve">
        <tr class="o_data_row" t-att-class="getRowClass(record)" t-att-data-id="record.id" t-on-click.capture="(ev) =&gt; this.onClickCapture(record, ev)" t-on-mouseover.capture="(ev) =&gt; this.ignoreEventInSelectionMode(ev)" t-on-mouseout.capture="(ev) =&gt; this.ignoreEventInSelectionMode(ev)" t-on-mouseenter.capture="(ev) =&gt; this.ignoreEventInSelectionMode(ev)" t-on-touchstart="(ev) =&gt; this.onRowTouchStart(record, ev)" t-on-touchend="() =&gt; this.onRowTouchEnd(record)" t-on-touchmove="() =&gt; this.onRowTouchMove(record)">
            <td t-on-keydown="(ev) =&gt; this.onCellKeydown(ev, group, record)" t-if="hasSelectors" class="o_list_record_selector user-select-none" t-on-click.stop="() =&gt; this.toggleRecordSelection(record)" tabindex="-1">
                <CheckBox disabled="!_canSelectRecord" value="record.selected" onChange.alike="() =&gt; this.toggleRecordSelection(record)"/>
            </td>
            <t t-foreach="getColumns(record)" t-as="column" t-key="column.id">
                <t t-if="column.type === 'field'">
                    <t t-set="isInvisible" t-value="evalInvisible(column.invisible, record) or !(column.name in record.data)"/>
                    <td t-on-keydown="(ev) =&gt; this.onCellKeydown(ev, group, record)" class="o_data_cell cursor-pointer" t-att-class="this.getCellClass(column, record)" t-att-name="column.name" t-att-colspan="column.colspan" t-att-data-tooltip="!isInvisible ? getCellTitle(column, record) : false" data-tooltip-delay="1000" t-on-click="(ev) =&gt; this.onCellClicked(record, column, ev)" tabindex="-1">
                        <t t-if="!isInvisible">
                            <t t-if="canUseFormatter(column, record)" t-out="getFormattedValue(column, record)"/>
                            <Field t-else="" name="column.name" record="record" type="column.widget" class="getFieldClass(column)" fieldInfo="column" t-props="getFieldProps(record, column)"/>
                        </t>
                    </td>
                </t>
                <t t-if="column.type === 'button_group'">
                    <td t-on-keydown="(ev) =&gt; this.onCellKeydown(ev, group, record)" class="o_data_cell w-print-0 p-print-0 cursor-pointer" t-att-class="this.getCellClass(column, record)" t-on-click="(ev) =&gt; this.onButtonCellClicked(record, column, ev)" tabindex="-1">
                        <div class="d-flex flex-wrap gap-1">
                            <t t-foreach="column.buttons" t-as="button" t-key="button.id">
                                <ViewButton t-if="!evalInvisible(button.invisible, record)" className="button.className" clickParams="button.clickParams" defaultRank="button.defaultRank" disabled="button.disabled" icon="button.icon" record="record" string="button.string" title="button.title" tabindex="editedRecord ? '-1' : '0'" onClick="isX2Many and record.isNew ? displaySaveNotification.bind(this) : ''"/>
                            </t>
                        </div>
                    </td>
                </t>
                <t t-if="column.type === 'widget'">
                    <td class="o_data_cell" t-att-class="this.getCellClass(column, record)">
                        <Widget t-props="column.props" record="record"/>
                    </td>
                </t>
            </t>

            <t t-if="hasOpenFormViewColumn">
                <td class="o_list_record_open_form_view w-print-0 p-print-0 text-center" t-on-keydown="(ev) =&gt; this.onCellKeydown(ev, group, record)" t-on-click.stop="() =&gt; isX2Many and record.isNew ? this.displaySaveNotification() : props.onOpenFormView(record, true)" tabindex="-1">
                    <button class="btn btn-link align-top text-end" name="Open in form view" aria-label="Open in form view" tabindex="-1">View</button>
                </td>
            </t>

            <t t-set="useUnlink" t-value="'unlink' in activeActions"/>
            <t t-set="hasX2ManyAction" t-value="isX2Many and (useUnlink ? activeActions.unlink : activeActions.delete)"/>
            <t t-if="displayOptionalFields or hasX2ManyAction">
                <t t-if="hasX2ManyAction">
                    <td class="o_list_record_remove w-print-0 p-print-0 text-center" t-on-keydown="(ev) =&gt; this.onCellKeydown(ev, group, record)" t-on-click.stop="(ev) =&gt; this.onRemoveCellClicked(record, ev)" tabindex="-1">
                        <button class="fa d-print-none" t-att-class="{                                 'fa-trash-o': !useUnlink and activeActions.delete,                                 'fa-times': useUnlink and activeActions.unlink,                             }" name="delete" aria-label="Delete row" tabindex="-1"/>
                    </td>
                </t>
                <td t-else="" tabindex="-1" class="w-print-0 p-print-0"/>
            </t>
        </tr>
    </t>

    `);
registerTemplate("web.ListHeaderTooltip", `/web/static/src/views/list/list_renderer.xml`, `<t t-name="web.ListHeaderTooltip" xml:space="preserve">
        <t t-esc="field.label"/>
        <div t-if="field.help" class="mt-2" t-esc="field.help"/>
    </t>

`);
registerTemplate("web.ActionHelper", `/web/static/src/views/no_content_helpers.xml`, `<t t-name="web.ActionHelper" xml:space="preserve">
        <div class="o_view_nocontent">
            <div class="o_nocontent_help">
                <t t-out="noContentHelp"/>
            </div>
        </div>
    </t>

    `);
registerTemplate("web.NoContentHelper", `/web/static/src/views/no_content_helpers.xml`, `<t t-name="web.NoContentHelper" xml:space="preserve">
        <div class="o_view_nocontent" role="alert">
            <div class="o_nocontent_help">
                <p class="o_view_nocontent_empty_folder">
                    <t t-if="title" t-esc="title"/>
                    <t t-else="">No data to display</t>
                </p>
                <p>
                <t t-if="description" t-esc="description"/>
                <t t-else="">Try to add some records, or make sure that there is no
                    active filter in the search bar.</t>
                </p>
            </div>
        </div>
    </t>

`);
registerTemplate("web.PivotView.Buttons", `/web/static/src/views/pivot/pivot_controller.xml`, `<t t-name="web.PivotView.Buttons" xml:space="preserve">
        <div class="o_pivot_buttons d-flex d-print-none gap-1 mt-2 mx-3 mb-3">
            <div class="btn-group" role="toolbar" aria-label="Main actions">
                <ReportViewMeasures measures="model.metaData.measures" activeMeasures="model.metaData.activeMeasures" onMeasureSelected.bind="this.onMeasureSelected"/>
            </div>
            <div class="btn-group" role="toolbar" aria-label="Pivot settings">
                <t t-set="noDataDisplayed" t-value="!model.hasData() || !model.metaData.activeMeasures.length"/>
                <button class="btn btn-secondary fa fa-exchange o_pivot_flip_button" t-on-click="onFlipButtonClicked" data-tooltip="Flip axis" aria-label="Flip axis" t-attf-disabled="{{noDataDisplayed ? 'disabled' : false}}"/>
                <button class="btn btn-secondary fa fa-arrows o_pivot_expand_button" t-on-click="onExpandButtonClicked" data-tooltip="Expand all" aria-label="Expand all" t-attf-disabled="{{noDataDisplayed ? 'disabled' : false}}"/>
                <button class="btn btn-secondary fa fa-download o_pivot_download" t-on-click="onDownloadButtonClicked" data-tooltip="Download xlsx" aria-label="Download xlsx" t-attf-disabled="{{noDataDisplayed ? 'disabled' : false}}"/>
            </div>
        </div>
    </t>

    `);
registerTemplate("web.PivotView", `/web/static/src/views/pivot/pivot_controller.xml`, `<t t-name="web.PivotView" xml:space="preserve">
        <div t-att-class="props.className" t-ref="root">
            <Layout className="model.useSampleModel ? 'o_view_sample_data' : ''" display="props.display">
                <t t-set-slot="control-panel-additional-actions">
                    <CogMenu/>
                </t>
                <t t-set-slot="layout-actions">
                    <SearchBar toggler="searchBarToggler"/>
                </t>
                <t t-set-slot="control-panel-navigation-additional">
                    <t t-component="searchBarToggler.component" t-props="searchBarToggler.props"/>
                </t>
                <t t-set="displayNoContent" t-value="                     props.info.noContentHelp !== false and (                         !(model.hasData() and model.metaData.activeMeasures.length) or                         model.useSampleModel                     )"/>
                <t t-if="displayNoContent">
                    <t t-if="props.info.noContentHelp" t-call="web.ActionHelper">
                        <t t-set="noContentHelp" t-value="props.info.noContentHelp"/>
                    </t>
                    <t t-else="" t-call="web.NoContentHelper"/>
                </t>
                <t t-component="props.Renderer" model="model" buttonTemplate="props.buttonTemplate"/>
            </Layout>
        </div>
    </t>

`);
registerTemplate("web.PivotHeader", `/web/static/src/views/pivot/pivot_header.xml`, `<t t-name="web.PivotHeader" xml:space="preserve">
        <Dropdown state="this.dropdownState" manual="true" position="props.isXAxis ? 'bottom-start' : 'bottom-end'">
            <th class="bg-view text-nowrap cursor-pointer fw-normal user-select-none" t-att-colspan="props.isXAxis ? cell.width : undefined" t-att-rowspan="props.isXAxis ? cell.height : undefined" t-att-class="{                     o_pivot_header_cell_closed: cell.isLeaf,                     o_pivot_header_cell_opened: !cell.isLeaf,                     'border-top': props.isInHead,                 }" t-attf-style="{{                     props.isXAxis                         ? undefined                         : l10n.direction === 'ltr'                             ? 'padding-left: ' + padding + 'px;'                             : 'padding-right: ' + padding + 'px;'                 }}" t-att-data-tooltip="cell.label" t-attf-data-tooltip-position="{{ l10n.direction === 'ltr' ? 'right' : 'left' }}" t-on-click.stop="this.onClick">
                <i t-attf-class="fa fa-{{ cell.isLeaf ? 'plus-square' : 'minus-square-o' }} me-1"/>
                <span t-esc="cell.title"/>
            </th>

            <t t-set-slot="content">
                <t t-set="currentGroup" t-value="null"/>
                <t t-foreach="items" t-as="item" t-key="item.id">
                    <t t-if="currentGroup !== null and currentGroup !== item.groupNumber">
                        <div class="dropdown-divider" role="separator"/>
                    </t>
                    <t t-if="item.fieldType === 'properties'">
                        <PropertiesGroupByItem item="item" onGroup.bind="onGroupBySelected"/>
                    </t>
                    <t t-elif="item.options">
                        <Dropdown>
                            <button t-att-class="'o_menu_item' + (item.isActive ? ' selected' : '')">
                                <t t-esc="item.description"/>
                            </button>
                            <t t-set-slot="content">
                                <t t-set="subGroup" t-value="null"/>
                                <t t-foreach="item.options" t-as="option" t-key="option.id">
                                    <t t-if="subGroup !== null and subGroup !== option.groupNumber">
                                        <div class="dropdown-divider" role="separator"/>
                                    </t>
                                    <CheckboxItem class="{ o_item_option: true, selected: option.isActive }" checked="option.isActive ? true : false" t-esc="option.description" onSelected="() =&gt; this.onGroupBySelected({ itemId: item.id, optionId: option.id})"/>
                                    <t t-set="subGroup" t-value="option.groupNumber"/>
                                </t>
                            </t>
                        </Dropdown>
                    </t>
                    <t t-else="">
                        <CheckboxItem class="{ o_menu_item: true, selected: item.isActive }" checked="item.isActive" t-esc="item.description" onSelected="() =&gt; this.onGroupBySelected({ itemId: item.id })"/>
                    </t>
                    <t t-set="currentGroup" t-value="item.groupNumber"/>
                </t>
                <t t-if="!hideCustomGroupBy and fields.length">
                    <div t-if="items.length" role="separator" class="dropdown-divider"/>
                    <CustomGroupByItem fields="fields" onAddCustomGroup.bind="onAddCustomGroup"/>
                </t>
            </t>
        </Dropdown>
    </t>

`);
registerTemplate("web.PivotRenderer", `/web/static/src/views/pivot/pivot_renderer.xml`, `<t t-name="web.PivotRenderer" xml:space="preserve">
        <t t-call="{{ props.buttonTemplate }}"/>
        <div t-if="model.hasData() and model.metaData.activeMeasures.length" t-att-class="env.isSmall ? 'table-responsive' : ''" class="o_pivot mx-3">
            <table class="table-hover table table-sm table-bordered table-borderless" t-att-class="{ o_enable_linking: !model.metaData.disableLinking }" t-ref="table">
                <thead>
                    <tr t-foreach="table.headers" t-as="row" t-key="'header_' + row_index" class="border-top-0">
                        <t t-foreach="row" t-as="cell" t-key="'header_row_' + cell_index">
                            <t t-if="cell.measure" t-call="web.PivotMeasure"/>
                            <PivotHeader t-elif="cell.isLeaf !== undefined" t-props="this.getHeaderProps({ cell: cell, isXAxis: true, isInHead: true })"/>
                            <th t-else="" t-att-colspan="cell.width" t-att-rowspan="cell.height" class="border-0 bg-100 fw-normal" t-att-class="{ 'border-0': cell_index != 0 }"/>
                        </t>
                    </tr>
                </thead>
                <tbody>
                    <tr t-foreach="table.rows" t-as="row" t-key="'row_' + row_index">
                        <PivotHeader t-props="this.getHeaderProps({ cell: row, isXAxis: false, isInHead: false })"/>
                        <t t-foreach="row.subGroupMeasurements" t-as="cell" t-key="'row_cell_' + cell_index">
                            <td class="o_pivot_cell_value bg-100" t-att-class="{                                     o_empty: cell.value === undefined,                                     'cursor-pointer': cell.value !== undefined,                                     'fw-bold': cell.isBold,                                 }" t-on-click="() =&gt; this.onOpenView(cell)" t-on-mouseover="onMouseEnter" t-on-mouseout="onMouseLeave">
                                <t t-if="cell.value !== undefined">
                                    <div t-if="cell.originIndexes.length &gt; 1" class="o_variation" t-att-class="{                                              'o_positive text-success': cell.value &gt; 0,                                              'o_negative text-danger': cell.value &lt; 0,                                              o_null: cell.value === 0,                                         }" t-esc="getFormattedVariation(cell)"/>
                                    <div t-elif="model.metaData.measures[cell.measure].type === 'boolean'" class="o_value">
                                        <CheckBox disabled="true" value="cell.value"/>
                                    </div>
                                    <div t-else="1" class="o_value" t-esc="getFormattedValue(cell)"/>
                                </t>
                            </td>
                        </t>
                    </tr>
                </tbody>
            </table>
        </div>
    </t>

    `);
registerTemplate("web.PivotMeasure", `/web/static/src/views/pivot/pivot_renderer.xml`, `<t t-name="web.PivotMeasure" xml:space="preserve">
        <th class="bg-view text-muted text-center text-nowrap fw-normal" t-att-colspan="cell.width" t-att-rowspan="cell.height" t-att-class="{                 'o_pivot_origin_row cursor-pointer user-select-none': cell.originIndexes,                 'o_pivot_measure_row cursor-pointer user-select-none': !cell.originIndexes,                 o_pivot_sort_order_asc: cell.order === 'asc',                 o_pivot_sort_order_desc: cell.order === 'desc',             }" t-on-click.prevent="() =&gt; this.onMeasureClick(cell)" t-on-mouseover="onMouseEnter" t-on-mouseout="onMouseLeave">
            <t t-esc="cell.title"/>
            <i t-if="cell.order === 'asc' || cell.order ==='desc'" t-attf-class="fa fa-caret-{{ cell.order === 'asc' ? 'up' : 'down' }} ms-1"/>
        </th>
    </t>

`);
registerTemplate("web.View", `/web/static/src/views/view.xml`, `<t t-name="web.View" xml:space="preserve">
      <WithSearch t-props="withSearchProps" t-slot-scope="search">
        <t t-component="Controller" t-on-click="handleActionLinks" t-props="componentProps" context="search.context" domain="search.domain" groupBy="search.groupBy" orderBy="search.orderBy" comparison="search.comparison" display="search.display"/>
      </WithSearch>
  </t>

`);
registerTemplate("web.views.ViewButton", `/web/static/src/views/view_button/view_button.xml`, `<t t-name="web.views.ViewButton" xml:space="preserve">
    <t t-tag="props.tag" t-att="props.attrs" t-att-id="props.id" t-att-class="getClassName()" t-att-disabled="disabled" t-att-name="props.clickParams.name" t-att-special="props.clickParams.special" t-att-href="props.tag === 'a' and '#'" t-att-style="props.style" t-att-type="clickParams.type" t-att-data-tooltip-template="hasBigTooltip ? 'views.ViewButtonTooltip' : false" t-att-data-tooltip-info="hasBigTooltip ? tooltip : false" t-att-data-tooltip="hasSmallToolTip ? props.title : false" t-att-tabindex="props.tabindex" t-on-click.stop="onClick">
      <t t-if="icon" t-tag="icon.tag" t-att-class="icon.class + (props.string ? ' me-1' : '')" t-att-src="icon.src"/>
      <t t-slot="contents"><span t-if="props.string" t-esc="props.string"/></t>
    </t>
  </t>

  `);
registerTemplate("views.ViewButtonTooltip", `/web/static/src/views/view_button/view_button.xml`, `<t t-name="views.ViewButtonTooltip" xml:space="preserve">
      <t t-if="debug || button.help">
        <div class="o-tooltip--string" t-if="debug || button.string" role="tooltip">
            <t t-if="debug">
                Button
                <t t-if="button.string">: </t>
                <t t-if="!button.string"> (no string)</t>
            </t>
            <t t-esc="button.string"/>
        </div>
        <p t-if="button.title" class="o-tooltip--help" role="tooltip">
            <t t-esc="button.title"/>
        </p>
        <p t-if="button.help" class="o-tooltip--help" role="tooltip">
            <t t-esc="button.help"/>
        </p>
        <ul t-if="debug" class="o-tooltip--technical" role="tooltip">
            <li data-item="object">
                <span class="o-tooltip--technical--title">Object:</span>
                <t t-esc="model"/>
            </li>
            <li t-if="button.context" data-item="context">
                <span class="o-tooltip--technical--title">Context:</span>
                <t t-esc="button.context || context"/>
            </li>
            <li t-if="'invisible' in button" data-item="invisible">
                <span class="o-tooltip--technical--title">Invisible:</span>
                <t t-esc="button.invisible"/>
            </li>
            <li t-if="'column_invisible' in button" data-item="column_invisible">
                <span class="o-tooltip--technical--title">Column invisible:</span>
                <t t-esc="button.column_invisible"/>
            </li>
            <li t-if="'required' in button" data-item="required">
                <span class="o-tooltip--technical--title">Required:</span>
                <t t-esc="button.required"/>
            </li>
            <li t-if="'readonly' in button" data-item="readonly">
                <span class="o-tooltip--technical--title">Readonly:</span>
                <t t-esc="button.readonly"/>
            </li>
            <li t-if="button.special" data-item="special">
                <span class="o-tooltip--technical--title">Special:</span>
                <t t-esc="button.special"/>
            </li>
            <t t-set="button_type" t-value="button.type"/>
            <li t-if="button_type" data-item="button_type">
                <span class="o-tooltip--technical--title">Button Type:</span>
                <t t-esc="button_type"/>
            </li>
            <li t-if="button_type === 'object'" data-item="button_method">
                <span class="o-tooltip--technical--title">Method:</span>
                <t t-esc="button.name"/>
            </li>
            <li t-if="button_type === 'action'" data-item="button_action">
                <span class="o-tooltip--technical--title">Action ID:</span>
                <t t-esc="button.name"/>
            </li>
        </ul>
      </t>
  </t>
`);
registerTemplate("web.AnimatedNumber", `/web/static/src/views/view_components/animated_number.xml`, `<t t-name="web.AnimatedNumber" xml:space="preserve">
        <div class="o_animated_number ms-2 text-900 text-nowrap cursor-default" t-att-class="state.value !== props.value and props.animationClass" t-att-title="props.title">
            <t t-slot="prefix"/>
            <span t-if="props.currency and props.currency.position === 'before'" t-esc="props.currency.symbol" class="ms-1"/>
            <b t-esc="format(state.value)"/>
            <span t-if="props.currency and props.currency.position === 'after'" t-esc="props.currency.symbol" class="ms-1"/>
        </div>
    </t>

`);
registerTemplate("web.ColumnProgress", `/web/static/src/views/view_components/column_progress.xml`, `<t t-name="web.ColumnProgress" xml:space="preserve">
        <div class="o_column_progress progress bg-300 w-75">
            <t t-set="maxWidth" t-value="100 - Math.max(0, props.progressBar.bars.filter(x =&gt; x.count &gt; 0).length - 1) * 5"/>
            <t t-foreach="props.progressBar.bars" t-as="bar" t-key="bar.value">
                <t t-set="progressWidth" t-value="Math.max(5, bar.count / (props.group.count or 1) * 100)"/>
                <div t-if="bar.count &gt; 0" role="progressbar" class="progress-bar o_bar_has_records cursor-pointer" t-att-class="{ 'progress-bar-animated progress-bar-striped': props.progressBar.activeBar === bar.value, 'border border-white': !props.group.isFolded and props.progressBar.activeBar }" t-attf-class="bg-{{ bar.color }}" t-attf-style="width: {{ Math.min(progressWidth, maxWidth) }}%;" aria-valuemin="0" t-att-aria-valuemax="props.group.count" t-att-aria-valuenow="bar.count" aria-label="Progress bar" t-attf-data-tooltip="{{ bar.count }} {{ bar.string }}" data-tooltip-delay="0" t-on-click="() =&gt; this.onBarClick(bar)"/>
            </t>
        </div>
        <AnimatedNumber value="props.aggregate.value" title="props.aggregate.title" duration="1000" currency="props.aggregate.currency" animationClass="props.aggregate.value &gt; 999 ? 'o_animated_grow' : 'o_animated_grow_huge'"/>
    </t>

`);
registerTemplate("web.ReportViewMeasures", `/web/static/src/views/view_components/report_view_measures.xml`, `<t t-name="web.ReportViewMeasures" xml:space="preserve">
      <Dropdown>
        <button class="btn btn-primary">
          Measures <i class="fa fa-caret-down ms-1"/>
        </button>
        <t t-set-slot="content">
          <t t-foreach="props.measures" t-as="measure" t-key="measure_value.name">
            <div t-if="!measure_first and measure == '__count'" role="separator" class="dropdown-divider"/>
            <DropdownItem class="{ o_menu_item: true, selected: this.props.activeMeasures.includes(measure) }" closingMode="'none'" t-esc="props.measures[measure].string" onSelected="() =&gt; this.props.onMeasureSelected({ measure: measure_value.name })"/>
          </t>
        </t>
      </Dropdown>
    </t>

`);
registerTemplate("web.ViewScaleSelector", `/web/static/src/views/view_components/view_scale_selector.xml`, `<t t-name="web.ViewScaleSelector" xml:space="preserve">
        <div t-if="Object.keys(props.scales).length &gt; 1" t-att-class="\`btn-group o_view_scale_selector \${props.dropdownClass || ''}\`">
            <Dropdown>
                <button class="btn btn-secondary scale_button_selection o-dropdown-caret" data-hotkey="v">
                    <t t-esc="props.scales[props.currentScale].description"/>
                </button>
                <t t-set-slot="content">
                    <t t-foreach="scales" t-as="scale" t-key="scale.key">
                        <DropdownItem class="\`o_scale_button_\${scale.key} \${scale.key === props.currentScale ? 'active' : ''}\`" onSelected="() =&gt; this.props.setScale(scale.key)" attrs="{ 'data-hotkey': scale.hotkey or scale.key[0] }">
                            <t t-esc="scale.description"/>
                        </DropdownItem>
                    </t>
                    <div t-if="this.props.isWeekendVisible !== undefined" class="dropdown-divider" role="separator"/>
                    <DropdownItem t-if="this.props.isWeekendVisible !== undefined" class="\`o_show_weekends \${props.isWeekendVisible ? 'active' : ''} \${props.currentScale === 'day' ? 'disabled' : ''}\`" onSelected="props.toggleWeekendVisibility">
                        Show weekends
                    </DropdownItem>
                </t>
            </Dropdown>
        </div>
    </t>

`);
registerTemplate("web.DeleteExportListDialog", `/web/static/src/views/view_dialogs/export_data_dialog.xml`, `<t t-name="web.DeleteExportListDialog" xml:space="preserve">
        <Dialog title.translate="Confirmation" size="'md'">
            <div t-esc="props.text"/>
            <t t-set-slot="footer">
                <button class="btn btn-primary" t-on-click="onDelete">Delete</button>
                <button class="btn btn-secondary" t-on-click="() =&gt; props.close()">Cancel</button>
            </t>
        </Dialog>
    </t>

    `);
registerTemplate("web.ExportDataItem", `/web/static/src/views/view_dialogs/export_data_dialog.xml`, `<t t-name="web.ExportDataItem" xml:space="preserve">
        <div t-att-data-field_id="props.field.id" t-attf-class="o_export_tree_item cursor-pointer position-relative ps-4 {{ state.subfields.length ? 'o_expanded mb-2' : '' }} {{ props.field.parent ? '' : 'pe-3'}}" role="treeitem" t-on-click.stop="() =&gt; this.toggleItem(props.field.id, true)" t-on-dblclick="() =&gt; this.onDoubleClick(props.field.id)">
            <div t-attf-class="o_tree_column d-flex align-items-center {{ props.field.required ? 'fw-bolder' : ''}}">
                <span t-if="props.isFieldExpandable(props.field.id)" t-attf-class="ms-n3 float-start o_expand_parent small oi {{ state.subfields.length ? 'oi-chevron-down' : 'oi-chevron-right' }}" role="img" aria-label="Show sub-fields" title="Show sub-fields"/>
                <span t-if="props.isDebug and props.field.id" class="overflow-hidden w-100" t-esc="\`\${props.field.string} (\${props.field.id})\`"/>
                <span t-else="" class="overflow-hidden w-100" t-esc="props.field.string"/>
                <span title="Select field" t-attf-class="fa fa-plus float-end m-1 o_add_field {{ isFieldSelected(props.field.id) ? 'o_inactive opacity-25' : '' }}" t-on-click.stop="(ev) =&gt; !this.isFieldSelected(this.props.field.id) and this.props.onAdd(this.props.field.id)"/>
            </div>
                <t t-foreach="state.subfields" t-as="field" t-key="field.id">
                    <ExportDataItem t-props="props" field="field"/>
                </t>
        </div>
    </t>

    `);
registerTemplate("web.ExportDataDialog", `/web/static/src/views/view_dialogs/export_data_dialog.xml`, `<t t-name="web.ExportDataDialog" xml:space="preserve">
        <Dialog contentClass="'o_export_data_dialog'" title.translate="Export Data" size="'lg'">
            <div class="row w-100">
                <div class="o_left_panel col-12 col-md-6 h-100 d-flex flex-column flex-nowrap">
                    <div class="o_import_compat">
                        <CheckBox className="'o_import_compat'" id="'o-update-data'" value="state.isCompatible" onChange.bind="onToggleCompatibleExport">
                            I want to update data (import-compatible export)
                        </CheckBox>
                    </div>
                    <h4 class="mt-3">Available fields</h4>
                    <input t-ref="search" type="search" class="form-control mb-3 o_export_search_input" id="o-export-search-filter" placeholder="Search" t-on-input="onSearch"/>
                    <div class="o_left_field_panel h-100 overflow-auto border">
                        <div class="o_field_tree_structure">
                            <t t-if="fieldsAvailable">
                                <t t-foreach="rootFields" t-as="field" t-key="field.id + '_' + state.search.length + '_' + state.isCompatible">
                                    <ExportDataItem exportList="state.exportList" field="field" filterSubfields.bind="filterSubfields" isFieldExpandable.bind="isFieldExpandable" isDebug="isDebug" isExpanded="state.search.length &gt; 0" loadFields.bind="loadFields" onAdd.bind="onAddItemExportList"/>
                                </t>
                            </t>
                            <h3 t-else="" class="text-center text-muted mt-5 o_no_match">No match found.</h3>
                        </div>
                    </div>
                </div>
                <div t-attf-class="o_right_panel col-12 col-md-6 {{ state.isSmall ? 'h-50' : 'h-100' }} d-flex flex-column flex-nowrap mt-3 mt-md-0">
                    <div class="o_export_format">
                        <strong>Export Format:</strong>
                        <t t-foreach="availableFormats" t-as="format" t-key="format.tag">
                            <div class="radio form-check-inline ps-5">
                                <input t-att-id="'o_radio' + format.tag" type="radio" t-att-checked="format.tag === availableFormats[state.selectedFormat].tag" name="o_export_format_name" t-att-value="format.tag" class="form-check-input" t-on-change="setFormat"/>
                                <label class="form-check-label ms-1" t-att-for="'o_radio' + format.tag" t-esc="format.label"/>
                            </div>
                        </t>
                    </div>
                    <div class="mt-3">
                        <h4>Fields to export</h4>
                    </div>
                    <div class="o_exported_lists">
                        <div class="input-group mb-3">
                            <t t-if="state.templateId === 'new_template'">
                                <label class="pt-2 mb-0 fw-bold">Save as: </label>
                                <input t-ref="exportList" class="form-control ms-4 o_save_list_name" t-att-placeholder="newTemplateText"/>
                            </t>
                            <t t-else="">
                                <label class="pt-2 mb-0 fw-bold">Template: </label>
                                <select class="form-select ms-4 o_exported_lists_select" t-on-change="onChangeExportList">
                                    <option/>
                                    <t t-foreach="templates" t-as="template" t-key="template.id">
                                        <option t-att-value="template.id" t-esc="template.name or 'undefined'" t-att-selected="state.templateId === template.id"/>
                                    </t>
                                    <option class="fst-italic" value="new_template">New template </option>
                                </select>
                            </t>
                            <t t-if="state.isEditingTemplate">
                                <button t-if="state.templateId === 'new_template'" type="button" class="btn btn-secondary ms-1 o_save_list_btn" t-on-click.stop="onSaveExportTemplate">
                                    <i class="fa fa-floppy-o"/>
                                </button>
                                <button type="button" class="btn btn-secondary ms-1 o_cancel_list_btn" t-on-click.stop="onCancelExportTemplate">
                                    <i t-attf-class="fa {{ state.templateId === 'new_template' ? 'fa-times' : 'fa-undo' }}"/>
                                </button>
                            </t>
                            <t t-else="">
                                <button t-if="state.templateId" type="button" class="btn btn-secondary ms-1 o_delete_exported_list" t-on-click.stop="onDeleteExportTemplate">
                                    <i class="fa fa-trash"/>
                                </button>
                            </t>
                        </div>
                    </div>
                    <div class="o_right_field_panel h-100 px-2 overflow-auto border">
                        <ul class="o_fields_list list-unstyled" t-ref="draggable">
                            <t t-foreach="state.exportList" t-as="field" t-key="field.id">
                                <li t-attf-class="o_export_field d-inline-block w-100 {{ state.isSmall ? '' : 'o_export_field_sortable' }}" t-att-data-field_id="field.id">
                                    <span t-if="!state.isSmall" class="fa fa-sort o_sort_field mx-1" t-attf-style="opacity:{{ state.exportList.length === 1 ? 0 : 1 }}"/>
                                    <span t-esc="isDebug and field.id ? \`\${field.string} (\${field.id})\` : field.string"/>
                                    <span class="fa fa-trash m-1 pe-2 float-end o_remove_field cursor-pointer" t-att-title="removeFieldText" t-on-click.stop="() =&gt; this.onRemoveItemExportList(field.id)"/>
                                </li>
                            </t>
                        </ul>
                    </div>
                </div>
            </div>
            <t t-set-slot="footer">
                <button class="btn btn-primary o_select_button" data-hotkey="v" t-on-click.stop="onClickExportButton" t-att-disabled="state.disabled">Export</button>
                <button class="btn o_form_button_cancel" t-att-class="(props.disableMultipleSelection &amp;&amp; props.noCreate) ? 'btn-primary' : 'btn-secondary'" data-hotkey="z" t-on-click.stop="props.close">Close</button>
            </t>
        </Dialog>
    </t>

`);
registerTemplate("web.FormViewDialog", `/web/static/src/views/view_dialogs/form_view_dialog.xml`, `<t t-name="web.FormViewDialog" xml:space="preserve">
    <Dialog size="props.size" title="props.title" withBodyPadding="false" modalRef="modalRef" onExpand.bind="onExpand">
      <View t-props="viewProps"/>
      <t t-set-slot="footer">
        <t t-if="props.preventEdit and props.preventCreate">
          <button class="btn btn-primary" t-on-click="() =&gt; props.close()">Close</button>
        </t>
        <t t-else="">
          <button class="btn btn-primary o-default-button" t-on-click="() =&gt; props.close()">Ok</button>
        </t>
      </t>
    </Dialog>
  </t>

  `);
registerTemplate("web.FormViewDialog.ToMany.buttons", `/web/static/src/views/view_dialogs/form_view_dialog.xml`, `<t t-name="web.FormViewDialog.ToMany.buttons" t-inherit="web.FormView.Buttons" xml:space="preserve">
    <xpath expr="//button[contains(@class, 'o_form_button_save')]" position="replace">
      <button class="btn btn-primary o_form_button_save" t-on-click="saveButtonClicked" data-hotkey="c">Save &amp; Close</button>
      <button class="btn btn-primary o_form_button_save_new" t-on-click="() =&gt; this.saveButtonClicked({saveAndNew: true})" data-hotkey="n">Save &amp; New</button>
    </xpath>
  </t>

  `);
registerTemplate("web.FormViewDialog.ToOne.buttons", `/web/static/src/views/view_dialogs/form_view_dialog.xml`, `<t t-name="web.FormViewDialog.ToOne.buttons" t-inherit="web.FormView.Buttons" xml:space="preserve">
    <xpath expr="//button[contains(@class, 'o_form_button_save')]" position="replace">
      <button class="btn btn-primary o_form_button_save" t-on-click="saveButtonClicked" data-hotkey="c">Save &amp; Close</button>
    </xpath>
  </t>

`);
registerTemplate("web.SelectCreateDialog", `/web/static/src/views/view_dialogs/select_create_dialog.xml`, `<t t-name="web.SelectCreateDialog" xml:space="preserve">
        <Dialog title="props.title" withBodyPadding="false">
            <t t-set-slot="header" t-slot-scope="scope">
                <t t-call="web.Dialog.header">
                    <t t-set="dismiss" t-value="scope.close"/>
                    <t t-set="fullscreen" t-value="scope.isFullscreen"/>
                </t>
                <button t-if="this.canUnselect" class="btn o_clear_button" t-on-click="() =&gt; this.unselect()">Clear</button>
            </t>
            <View t-props="viewProps"/>
            <t t-set-slot="footer">
                <t t-if="props.multiSelect">
                    <button class="btn btn-primary o_select_button" t-att-disabled="state.resIds.length === 0" data-hotkey="v" t-on-click="() =&gt; this.select(state.resIds)">
                        Select
                    </button>
                </t>
                <t t-if="!props.noCreate">
                    <button class="btn btn-primary o_create_button" data-hotkey="c" t-on-click="createEditRecord">New</button>
                </t>
                <button class="btn o_form_button_cancel" t-att-class="(!props.multiSelect &amp;&amp; props.noCreate) ? 'btn-primary' : 'btn-secondary'" data-hotkey="z" t-on-click="() =&gt; this.props.close()">Close</button>
            </t>
        </Dialog>
    </t>

    `);
registerTemplate("web.SelectCreateDialog.DefaultNoContentHelp", `/web/static/src/views/view_dialogs/select_create_dialog.xml`, `<t t-name="web.SelectCreateDialog.DefaultNoContentHelp" xml:space="preserve">
        <p>No record found</p>
        <p>Adjust your filters or create a new record.</p>
    </t>

`);
registerTemplate("web.AttachDocument", `/web/static/src/views/widgets/attach_document/attach_document.xml`, `<t t-name="web.AttachDocument" xml:space="preserve">
        <button t-attf-class="btn o_attachment_button #{props.highlight ? 'btn-primary' : 'btn-secondary'}" t-on-click="() =&gt; this.triggerUpload()">
            <span class="o_attach_document" t-esc="props.string"/>
        </button>
    </t>

`);
registerTemplate("web.DocumentationLink", `/web/static/src/views/widgets/documentation_link/documentation_link.xml`, `<t t-name="web.DocumentationLink" xml:space="preserve">
        <a t-att-href="url" title="Documentation" t-att-class="classes" target="_blank">
            <t t-if="!props.icon and !props.label">
                <i class="fa fa-external-link" aria-hidden="true"/>
                <span>View Documentation</span>
            </t>
            <t t-else="">
                <i t-if="props.icon" t-att-class="'fa ' + props.icon"/>
                <span t-esc="props.label"/>
            </t>
        </a>
    </t>
`);
registerTemplate("web.NotificationAlert", `/web/static/src/views/widgets/notification_alert/notification_alert.xml`, `<t t-name="web.NotificationAlert" xml:space="preserve">
        <div t-if="isNotificationBlocked" class="alert alert-primary text-center">
            Odoo Push notifications have been blocked. Go to your browser settings to allow them.
        </div>
    </t>
`);
registerTemplate("web.Ribbon", `/web/static/src/views/widgets/ribbon/ribbon.xml`, `<t t-name="web.Ribbon" xml:space="preserve">
        <div class="ribbon ribbon-top-right">
            <span t-att-class="classes" t-att-title="props.title">
                <t t-esc="props.text"/>
            </span>
        </div>
    </t>

`);
registerTemplate("web.SignatureWidget", `/web/static/src/views/widgets/signature/signature.xml`, `<t t-name="web.SignatureWidget" xml:space="preserve">
        <button t-attf-class="btn o_sign_button #{props.highlight ? 'btn-primary' : 'btn-secondary'}" t-on-click="onClickSignature">
            <span class="o_sign_label" t-esc="props.string"/>
        </button>
    </t>

`);
registerTemplate("web.WeekDays", `/web/static/src/views/widgets/week_days/week_days.xml`, `<t t-name="web.WeekDays" xml:space="preserve">
        <div class="o_recurrent_weekdays border mt-2 mb-2">
            <table class="table table-responsive mb-0">
                <tr>
                    <t t-foreach="weekdays" t-as="day" t-key="day">
                        <th class="text-center border fw-bold">
                            <div class="o_recurrent_weekday_label" t-att-data-tooltip="props.record.fields[day].string">
                                <t t-esc="props.record.fields[day].string"/>
                            </div>
                        </th>
                    </t>
                </tr>
                <tr>
                    <t t-foreach="weekdays" t-as="day" t-key="day">
                        <td>
                            <CheckBox disabled="props.readonly" value="data[day]" className="'o_recurrent_weekday_checkbox text-center'" onChange="(checked) =&gt; this.onChange(day, checked)"/>
                        </td>
                    </t>
                </tr>
            </table>
        </div>
    </t>

`);
registerTemplate("web.ActionMenus", `/web/static/src/search/action_menus/action_menus.xml`, `<t t-name="web.ActionMenus" xml:space="preserve">
        <div class="o_cp_action_menus d-flex pe-2 gap-1">
            <div t-if="props.items.print?.length" class="d-inline-block">
                <Dropdown beforeOpen.bind="loadPrintItems">
                    <button class="btn btn-secondary" data-hotkey="shift+u">
                        <i class="fa fa-print me-1"/>
                        <span class="o_dropdown_title" t-out="props.printDropdownTitle"/>
                    </button>
                    <t t-set-slot="content">
                        <t t-foreach="state.printItems" t-as="item" t-key="item.key">
                            <DropdownItem class="item.class" onSelected="() =&gt; this.onItemSelected(item)" t-out="item.description"/>
                        </t>
                    </t>
                </Dropdown>
            </div>

            <div t-if="actionItems.length" class="d-inline-block">
                <Dropdown>
                    <button class="btn btn-secondary" data-hotkey="u">
                        <i class="fa fa-cog me-1"/>
                        <span class="o_dropdown_title">Actions</span>
                    </button>
                    <t t-set-slot="content">
                        <t t-foreach="actionItems" t-as="item" t-key="item.key">
                            <t t-if="currentGroup !== null and currentGroup !== item.groupNumber">
                                <div role="separator" class="dropdown-divider"/>
                            </t>
                            <t t-if="item.Component" t-component="item.Component" t-props="item.props"/>
                            <DropdownItem t-else="" class="'o_menu_item'" onSelected="() =&gt; this.onItemSelected(item)">
                                <i t-if="item.icon" t-att-class="item.icon + ' me-1 fa-fw oi-fw'"/>
                                <t t-esc="item.description"/>
                            </DropdownItem>
                            <t t-set="currentGroup" t-value="item.groupNumber"/>
                        </t>
                    </t>
                </Dropdown>
        </div>
        </div>
    </t>

`);
registerTemplate("web.Breadcrumbs", `/web/static/src/search/breadcrumbs/breadcrumbs.xml`, `<t t-name="web.Breadcrumbs" xml:space="preserve">
        <t t-set="currentBreadcrumbs" t-value="props.breadcrumbs.slice(-1)"/>
        <t t-set="visiblePathBreadcrumbs" t-value="props.breadcrumbs.slice(-3, -1)"/>
        <t t-set="collapsedBreadcrumbs" t-value="props.breadcrumbs.slice(0, -3).reverse()"/>
        <t t-set="breadcrumb" t-value="currentBreadcrumbs[0] || {}"/>

        <div t-if="collapsedBreadcrumbs.length || visiblePathBreadcrumbs.length" class="o_breadcrumb d-flex flex-row flex-md-column align-self-stretch justify-content-between min-w-0">
            <t t-if="env.isSmall">
                <t t-set="previousBreadcrumb" t-value="visiblePathBreadcrumbs.at(-1)"/>
                <button class="o_back_button btn btn-link d-print-none px-1 py-0" t-on-click.prevent="previousBreadcrumb.onSelected">
                    <i class="oi oi-fw oi-arrow-left"/>
                </button>
            </t>
            <t t-else="">
                <ol class="breadcrumb flex-nowrap text-nowrap lh-sm">
                    <li t-if="collapsedBreadcrumbs.length" class="breadcrumb-item d-inline-flex min-w-0">
                        <Dropdown>
                            <button class="btn btn-light btn-sm px-1 p-0">
                                <i class="fa fa-ellipsis-h"/>
                            </button>
                            <t t-set-slot="content">
                                <t t-foreach="collapsedBreadcrumbs" t-as="breadcrumb" t-key="breadcrumb.jsId">
                                    <DropdownItem onSelected="breadcrumb.onSelected" attrs="{ href: breadcrumb.url, 'data-tooltip': getBreadcrumbTooltip(breadcrumb)}">
                                        <t t-call="web.Breadcrumb.Name"/>
                                    </DropdownItem>
                                </t>
                            </t>
                        </Dropdown>
                    </li>
                    <t t-foreach="visiblePathBreadcrumbs" t-as="breadcrumb" t-key="breadcrumb.jsId">
                        <li class="breadcrumb-item d-inline-flex min-w-0" t-att-class="{ o_back_button: breadcrumb_last }" t-att-data-hotkey="breadcrumb_last and 'b'" t-on-click.prevent="breadcrumb.onSelected">
                            <a t-att-href="breadcrumb.url" class="fw-bold text-truncate" t-att-data-tooltip="'Back to &quot;' + breadcrumb.name + '&quot;' + (breadcrumb.isFormView ? ' form' : '')"><t t-call="web.Breadcrumb.Name"/></a>
                        </li>
                    </t>
                </ol>
            </t>
            <div class="d-flex gap-1 text-truncate">
                <div class="o_last_breadcrumb_item active d-flex gap-2 align-items-center min-w-0 lh-sm">
                    <span class="min-w-0 text-truncate" t-call="web.Breadcrumb.Name"/>
                </div>
                <t t-call="web.Breadcrumb.Actions"/>
            </div>
        </div>

        <div t-else="" class="o_breadcrumb d-flex gap-1 text-truncate">
            <div class="o_last_breadcrumb_item active d-flex fs-4 min-w-0 align-items-center">
                <span class="min-w-0 text-truncate" t-call="web.Breadcrumb.Name"/>
            </div>
            <t t-call="web.Breadcrumb.Actions"/>
        </div>

        <t t-slot="breadcrumb-status-indicator"/>
    </t>

    `);
registerTemplate("web.Breadcrumb.Actions", `/web/static/src/search/breadcrumbs/breadcrumbs.xml`, `<t t-name="web.Breadcrumb.Actions" xml:space="preserve">
        <div class="o_control_panel_breadcrumbs_actions d-inline-flex d-print-none">
            <t t-slot="breadcrumb-additional-actions"/>
        </div>
    </t>

    `);
registerTemplate("web.Breadcrumb.Name", `/web/static/src/search/breadcrumbs/breadcrumbs.xml`, `<t t-name="web.Breadcrumb.Name" xml:space="preserve">
        <t t-if="breadcrumb.name" t-out="breadcrumb.name"/>
        <em t-else="" class="text-warning">Unnamed</em>
    </t>

`);
registerTemplate("web.CogMenu", `/web/static/src/search/cog_menu/cog_menu.xml`, `<t t-name="web.CogMenu" xml:space="preserve">
        <div t-if="hasItems" class="o_cp_action_menus d-flex align-items-center gap-1" t-att-class="{'pe-2': !env.isSmall}">
            <div class="lh-1">
                <Dropdown menuClass="'lh-base'" beforeOpen.bind="loadPrintItems">
                    <button class="d-print-none btn" t-att-class="env.isSmall ? 'btn-secondary' : 'lh-sm p-0 border-0'" data-hotkey="u" data-tooltip="Actions">
                        <i class="fa fa-fw fa-cog"/>
                    </button>

                    <t t-set-slot="content">
                        <t t-if="state.printItems.length">
                            <Dropdown t-if="state.printItems.length &gt; 1">
                                <button>
                                    <i class="fa fa-print me-1"/> <t t-out="props.printDropdownTitle"/>
                                </button>
                                <t t-set-slot="content">
                                    <DropdownItem t-foreach="state.printItems" t-as="item" t-key="item.key" class="'o_menu_item'" onSelected="() =&gt; this.onItemSelected(item)">
                                        <t t-esc="item.description"/>
                                    </DropdownItem>
                                </t>
                            </Dropdown>

                            <DropdownItem t-else="" class="'o_menu_item'" onSelected="() =&gt; this.onItemSelected(state.printItems[0])">
                                <i class="fa fa-print me-1"/> <t t-out="state.printItems[0].description"/>
                            </DropdownItem>
                        </t>

                        <t t-foreach="cogItems" t-as="item" t-key="item.key">
                            <t t-if="currentGroup !== null and currentGroup !== item.groupNumber">
                                <div role="separator" class="dropdown-divider"/>
                            </t>

                            <t t-if="item.Component" t-component="item.Component" t-props="item.props"/>

                            <DropdownItem t-else="" class="'o_menu_item'" onSelected="() =&gt; this.onItemSelected(item)">
                                <i t-if="item.icon" t-att-class="item.icon" class="fa-fw oi-fw me-1"/>
                                <t t-esc="item.description"/>
                            </DropdownItem>

                            <t t-set="currentGroup" t-value="item.groupNumber"/>
                        </t>
                    </t>
                </Dropdown>
            </div>
        </div>
    </t>

`);
registerTemplate("web.ControlPanel", `/web/static/src/search/control_panel/control_panel.xml`, `<t t-name="web.ControlPanel" xml:space="preserve">
        <div class="o_control_panel d-flex flex-column gap-3 px-3 pt-2 pb-3" t-ref="root" data-command-category="actions">
            <Transition t-if="!env.isSmall" visible="state.embeddedInfos.showEmbedded" name="'o-fade'" t-slot-scope="transition" leaveDuration="500">
                <div class="o_embedded_actions overflow-hidden d-flex flex-wrap w-100 align-items-center justify-content-center gap-2" t-att-class="transition.className">
                    <t t-foreach="state.embeddedInfos.embeddedActions" t-as="action" t-key="action.id">
                        <t t-if="_checkValueLocalStorage(action)">
                            <button class="btn btn-secondary o_draggable" t-att-class="{ 'active': state.embeddedInfos.currentEmbeddedAction?.id === action.id}" t-on-click="() =&gt; this.onEmbeddedActionClick(action)" t-att-data-id="action.id">
                                <span t-out="action.name"/>
                            </button>
                        </t>
                    </t>
                    <t t-call="web.embeddedActionsDropdown"/>
                </div>
            </Transition>
            <div class="o_control_panel_main d-flex flex-wrap flex-lg-nowrap justify-content-between align-items-lg-start gap-lg-3 flex-grow-1">
                <div class="o_control_panel_breadcrumbs d-flex align-items-center gap-1 order-0 h-lg-100">
                    <div class="o_control_panel_main_buttons d-flex gap-1 d-empty-none d-print-none" t-ref="mainButtons" t-on-keydown="onMainButtonsKeydown">
                        <div t-if="env.isSmall" class="btn-group o_control_panel_collapsed_create">
                            <t t-slot="control-panel-create-button"/>
                            <button t-att-class="{invisible: display.disableDropdown}" type="button" class="btn btn-primary dropdown-toggle dropdown-toggle-split o_control_panel_collapsed_create" data-bs-toggle="dropdown" aria-expanded="false">
                                 <span class="visually-hidden">Toggle Dropdown</span>
                            </button>
                            <ul class="dropdown-menu o_control_panel_collapsed_create">
                                <t t-slot="layout-buttons"/>
                                <t t-slot="control-panel-always-buttons"/>
                            </ul>
                        </div>
                        <div t-else="" class="d-inline-flex gap-1">
                            <t t-slot="control-panel-create-button"/>
                            <t t-slot="layout-buttons"/>
                            <t t-slot="control-panel-always-buttons"/>
                        </div>
                    </div>
                    <t t-if="env.config.noBreadcrumbs">
                        <section class="o_control_panel_breadcrumbs_actions d-contents d-print-none">
                            <t t-slot="control-panel-additional-actions"/>
                            <t t-slot="control-panel-status-indicator"/>
                        </section>
                    </t>
                    <t t-elif="env.isSmall">

                        <div class="o_fallback_breadcrumbs d-contents"/>
                        <Breadcrumbs breadcrumbs="breadcrumbs" t-portal="'.o_navbar_breadcrumbs, .o_fallback_breadcrumbs'"/>
                        <section class="o_control_panel_breadcrumbs_actions d-contents">
                            <t t-slot="control-panel-additional-actions"/>
                            <t t-slot="control-panel-status-indicator"/>
                        </section>
                    </t>
                    <t t-else="">
                        <Breadcrumbs breadcrumbs="breadcrumbs">
                            <t t-set-slot="breadcrumb-status-indicator">
                                <t t-slot="control-panel-status-indicator"/>
                            </t>
                            <t t-set-slot="breadcrumb-additional-actions">
                                <t t-slot="control-panel-additional-actions"/>
                            </t>
                        </Breadcrumbs>
                    </t>
                    <div t-if="!env.isSmall" class="me-auto"/> 
                </div>

                <div class="o_control_panel_actions d-empty-none d-flex align-items-center justify-content-start justify-content-lg-around order-2 order-lg-1 w-100 mw-100 w-lg-auto">
                    <t t-if="display.layoutActions" t-slot="layout-actions"/>
                    <t t-slot="control-panel-selection-actions"/>
                </div>

                <div class="o_control_panel_navigation d-flex flex-wrap flex-md-nowrap justify-content-end gap-1 gap-xl-3 order-1 order-lg-2 flex-grow-1">
                    <t t-if="state.embeddedInfos.embeddedActions?.length and env.isSmall">
                        <t t-call="web.embeddedActionsDropdown"/>
                    </t>
                    <div t-if="pagerProps and pagerProps.total &gt; 0" class="o_cp_pager text-nowrap " role="search">
                        <Pager t-props="pagerProps"/>
                    </div>
                    <button t-if="state.embeddedInfos.embeddedActions?.length and !env.isSmall" class="btn btn-secondary" t-att-class="{active: state.embeddedInfos.showEmbedded}" t-on-click="onClickShowEmbedded">
                        <i class="fa fa-sliders"/>
                    </button>
                    <t t-if="env.config.viewSwitcherEntries?.length &gt; 1">
                        <div t-if="env.isSmall" class="o_cp_switch_buttons btn-group d-print-none">
                            <Dropdown>
                                <button class="btn btn-secondary">
                                    <t t-set="activeView" t-value="env.config.viewSwitcherEntries.find((view) =&gt; view.active)"/>
                                    <i class="oi-fw" t-att-class="activeView.icon"/>
                                </button>
                                <t t-set-slot="content">
                                    <t t-foreach="env.config.viewSwitcherEntries" t-as="view" t-key="view.type">
                                        <DropdownItem onSelected="() =&gt; this.switchView(view.type)" class="view.active ? 'selected' : ''">
                                            <i class="oi-fw" t-att-class="view.icon"/>
                                            <span class="ms-1" t-out="view.name"/>
                                        </DropdownItem>
                                    </t>
                                </t>
                            </Dropdown>
                        </div>
                        <nav t-else="" class="o_cp_switch_buttons d-print-none d-inline-flex btn-group">
                            <t t-foreach="env.config.viewSwitcherEntries" t-as="view" t-key="view.type">
                                <button class="btn btn-secondary o_switch_view " t-attf-class="o_{{view.type}} {{view.active ? 'active' : ''}}" t-att-data-tooltip="view.name" t-on-click="() =&gt; this.switchView(view.type)">
                                    <i t-att-class="view.icon"/>
                                </button>
                            </t>
                        </nav>
                    </t>
                    <t t-slot="control-panel-navigation-additional"/>
                </div>
            </div>
        </div>
    </t>

    `);
registerTemplate("web.embeddedActionsDropdown", `/web/static/src/search/control_panel/control_panel.xml`, `<t t-name="web.embeddedActionsDropdown" xml:space="preserve">
        <Dropdown menuClass="'o_embedded_actions_dropdown_menu'">
            <button class="btn btn-secondary">
                <i class="fa fa-fw fa-sliders"/>
            </button>
            <t t-set-slot="content">
                <t t-foreach="state.embeddedInfos.embeddedActions" t-as="action" t-key="action.id">
                    <DropdownItem class="this.getDropdownClass(action)" onSelected="() =&gt; this.env.isSmall ? this.onEmbeddedActionClick(action) : this._setVisibility(action.id)" closingMode="'none'">
                        <div class="d-flex p-0 pe-1 align-items-center justify-content-between">
                            <span t-out="action.name"/>
                            <i t-if="action.is_deletable" class="o_icon_right btn btn-link text-danger p-0 position-absolute end-0 fa fa-trash-o" title="Delete item" t-on-click.stop="() =&gt; this.openConfirmationDialog(action)"/>
                        </div>
                    </DropdownItem>
                </t>
                <div role="separator" class="dropdown-divider"/>
                <AccordionItem class="'o_save_current_view'" description.translate="Save View">
                    <div class="px-2 py-2">
                        <input type="text" t-ref="newActionNameRef" class="o_input mb-2" t-model.trim="state.embeddedInfos.newActionName"/>
                        <CheckBox value="state.embeddedInfos.newActionIsShared" onChange.bind="_onShareCheckboxChange">
                            <span data-tooltip="Make this embedded action available to other users">Shared</span>
                        </CheckBox>
                    </div>
                    <div class="px-3 py-2">
                        <button class="o_save_favorite btn btn-primary w-100" t-on-click="_saveNewAction">
                            Save
                        </button>
                    </div>
                </AccordionItem>
            </t>
        </Dropdown>
    </t>

`);
registerTemplate("web.CustomFavoriteItem", `/web/static/src/search/custom_favorite_item/custom_favorite_item.xml`, `<t t-name="web.CustomFavoriteItem" xml:space="preserve">
        <AccordionItem class="'o_add_favorite text-truncate'" description.translate="Save current search">
            <div class="px-3 py-2">
                <input type="text" class="o_input" t-ref="description" t-model.trim="state.description" t-on-keydown="onInputKeydown"/>
                <CheckBox value="state.isDefault" onChange.bind="onDefaultCheckboxChange">
                    <span data-tooltip="Use this filter by default when opening this view">Default filter</span>
                </CheckBox>
                <CheckBox value="state.isShared" onChange.bind="onShareCheckboxChange">
                    <span data-tooltip="Make this filter available to other users">Shared</span>
                </CheckBox>
            </div>
            <div class="px-3 py-2">
                <button class="o_save_favorite btn btn-primary w-100" t-on-click="saveFavorite">
                    Save
                </button>
            </div>
        </AccordionItem>
    </t>

`);
registerTemplate("web.CustomGroupByItem", `/web/static/src/search/custom_group_by_item/custom_group_by_item.xml`, `<t t-name="web.CustomGroupByItem" xml:space="preserve">
        <select class="o_add_custom_group_menu o_menu_item dropdown-item" t-on-change="(ev) =&gt; this.onSelected(ev)">
            <option value="" disabled="true" selected="true" hidden="true">Add Custom Group</option>
            <option t-foreach="props.fields" t-as="field" t-key="field.name" t-if="field.type !== 'properties' and !field.isProperty" t-att-value="field.name" t-esc="field.string"/>
        </select>
    </t>

`);
registerTemplate("web.Layout", `/web/static/src/search/layout.xml`, `<t t-name="web.Layout" xml:space="preserve">
        <t t-if="env.inDialog" t-portal="'#' + env.dialogId + ' .modal-footer'">
            <t t-slot="layout-buttons"/>
        </t>
        <t t-component="components.ControlPanel" slots="controlPanelSlots" t-if="props.display.controlPanel" display="props.display.controlPanel"/>
        <div t-ref="content" class="o_content" t-attf-class="{{props.className}}" t-att-class="{ 'o_component_with_search_panel': props.display.searchPanel }">
            <t t-component="components.SearchPanel" t-if="props.display.searchPanel"/>
            <t t-slot="default" contentRef="contentRef"/>
        </div>
    </t>

`);
registerTemplate("web.PropertiesGroupByItem", `/web/static/src/search/properties_group_by_item/properties_group_by_item.xml`, `<t t-name="web.PropertiesGroupByItem" xml:space="preserve">
        <AccordionItem class="'o_add_custom_group_menu text-truncate'" description="props.item.description" selected="isActive">
            <t t-set="items" t-value="state.groupByItems"/>
            <t t-if="items and items.length">
                <t t-foreach="items" t-as="item" t-key="item.name">
                    <t t-set="description" t-value="isSingleParent ? item.description : \`\${item.description} (\${item.definitionRecordName})\`"/>

                    <AccordionItem t-if="item.options" description="description" selected="item.isActive">
                        <t t-foreach="item.options" t-as="option" t-key="option.id">
                            <t t-set="optionName" t-value="\`\${item.name}:\${option.id}\`"/>
                            <CheckboxItem class="{ o_item_option: true, selected: option.isActive }" checked="option.isActive" closingMode="'none'" t-esc="option.description" onSelected="() =&gt; this.onGroup({ itemId: item.id, optionId: option.id})"/>
                        </t>
                    </AccordionItem>

                    <CheckboxItem t-else="" class="{ o_menu_item: true, selected: item.isActive }" checked="item.isActive" closingMode="'none'" t-esc="description" onSelected="() =&gt; this.onGroup({ itemId: item.id })"/>
                </t>
            </t>
            <DropdownItem t-else="" closingMode="'none'" class="'fst-italic'">
                No Properties
            </DropdownItem>
        </AccordionItem>
    </t>
`);
registerTemplate("web.SearchBar.Facets", `/web/static/src/search/search_bar/search_bar.xml`, `<t t-name="web.SearchBar.Facets" xml:space="preserve">
        <t t-foreach="env.searchModel.facets" t-as="facet" t-key="facet_index">
            <div class="o_searchview_facet position-relative d-inline-flex align-items-stretch rounded-2 bg-200 text-nowrap opacity-trigger-hover mw-100" t-att-class="{o_facet_with_domain: facet.domain }" role="listitem" aria-label="search" tabindex="0" t-on-keydown="ev =&gt; this.onFacetKeydown(facet, facet_index, ev)">


                <div class="position-absolute start-0 top-0 bottom-0 end-0 bg-view border rounded-2 shadow opacity-0 opacity-100-hover"/>

                <div class="o_searchview_facet_label position-relative rounded-start-2 px-1 rounded-end-0 p-0" t-on-click="(ev) =&gt; this.onFacetLabelClick(ev.target, facet)" t-att-role="facet.domain ? 'button' : 'img'" t-att-class="{                         'text-bg-action': facet.type == 'groupBy' || facet.type == 'comparison',                         'btn': facet.type == 'groupBy' and env.searchModel.canOrderByCount,                         'btn btn-primary': facet.type == 'field' || facet.type == 'filter',                         'btn btn-favourite': facet.type == 'favorite'                     }">
                    <i t-if="facet.icon" class="small fa-fw" t-att-class="facet.icon" role="image"/>
                    <small t-else="" class="px-1" t-esc="facet.title"/>


                    <span t-if="facet.domain" class="position-absolute start-0 top-0 bottom-0 end-0 bg-inherit opacity-0 opacity-100-hover" t-att-class="{'px-2 transition-base': !facet.icon}">
                        <i class="fa fa-fw fa-cog"/>
                    </span>
                    <span t-if="env.searchModel.canOrderByCount and facet.type === 'groupBy' and !env.searchModel.orderByCount" class="position-absolute start-0 top-0 bottom-0 end-0 bg-inherit opacity-0 opacity-100-hover" t-att-class="{'px-2 transition-base': !facet.icon}">
                        <i class="fa fa-fw fa-sort"/>
                    </span>
                </div>

                <div class="o_facet_values position-relative d-flex flex-wrap align-items-center ps-2 rounded-end-2 text-wrap overflow-hidden">
                    <t t-foreach="facet.values" t-as="facetValue" t-key="facetValue_index">
                        <em t-if="!facetValue_first" class="o_facet_values_sep small fw-bold mx-1 opacity-50" t-esc="facet.separator"/>
                        <small class="o_facet_value text-truncate" t-esc="facetValue" t-att-title="facetValue"/>
                    </t>
                    <button class="o_facet_remove oi oi-close btn btn-link py-0 px-2 text-danger d-print-none" role="button" aria-label="Remove" title="Remove" t-on-click="() =&gt; this.onFacetRemove(facet)"/>
                </div>
            </div>
        </t>
    </t>

    `);
registerTemplate("web.SearchBar.Input", `/web/static/src/search/search_bar/search_bar.xml`, `<t t-name="web.SearchBar.Input" xml:space="preserve">
        <input type="text" class="o_searchview_input o_input d-print-none flex-grow-1 w-auto border-0" accesskey="Q" placeholder="Search..." role="searchbox" t-ref="autofocus" t-on-keydown="onSearchKeydown" t-on-click="onSearchClick" t-on-input="onSearchInput"/>
    </t>

    `);
registerTemplate("web.SearchBar.Items", `/web/static/src/search/search_bar/search_bar.xml`, `<t t-name="web.SearchBar.Items" xml:space="preserve">
        <ul class="o-dropdown--menu dropdown-menu o_searchview_autocomplete show" role="menu">
            <t t-foreach="items" t-as="item" t-key="item.id">
                <li class="o_menu_item dropdown-item" t-att-class="{ o_indent: item.isChild, focus: item_index === state.focusedIndex}" t-att-id="item.id" t-on-click="() =&gt; this.selectItem(item)" t-on-mousemove="() =&gt; this.onItemMousemove(item_index)">
                    <t t-if="item.isParent">
                        <a t-att-class="{ o_expand: true, 'ms-4': item.isFieldProperty}" href="#" t-on-click.stop.prevent="() =&gt; this.toggleItem(item, !item.isExpanded)">
                            <i t-attf-class="fa fa-caret-{{ item.isExpanded ? 'down' : 'right' }}"/>
                        </a>
                    </t>
                    <a href="#" t-on-click.prevent="" t-att-class="{'ps-3 pe-2 text-truncate': item.isFieldProperty }" t-att-title="item.title">
                        <t t-if="item.isAddCustomFilterButton"><span class="text-action">Add Custom Filter</span></t>
                        <t t-elif="item.loadMore"><span class="text-action"><t t-esc="item.label"/></span></t>
                        <t t-elif="item.isChild">
                            <t t-esc="item.label"/>
                        </t>
                        <t t-elif="!item.isFieldProperty"> Search </t> <b t-esc="item.searchItemDescription"/> <t t-if="item.preposition"> <t t-esc="item.preposition"/>: <b class="fst-italic text-primary" t-esc="item.label"/> </t>
                    </a>
                </li>
            </t>
        </ul>
    </t>

    `);
registerTemplate("web.SearchBar", `/web/static/src/search/search_bar/search_bar.xml`, `<t t-name="web.SearchBar" xml:space="preserve">
        <div t-if="visibilityState.showSearchBar" class="o_cp_searchview d-flex input-group mt-1 mt-md-0" role="search" t-ref="root">
            <div class="o_searchview form-control d-print-contents d-flex align-items-center py-1 border-end-0" role="search" aria-autocomplete="list">
                <button class="d-print-none btn border-0 p-0" role="button" aria-label="Search..." title="Search..." t-on-click="this.onClickSearchIcon">
                    <i class="o_searchview_icon oi oi-search me-2" role="img"/>
                </button>
                <div class="o_searchview_input_container d-flex flex-grow-1 flex-wrap gap-1 mw-100">
                    <t t-call="web.SearchBar.Facets"/>
                    <t t-call="web.SearchBar.Input"/>
                    <t t-if="items.length">
                        <t t-call="web.SearchBar.Items"/>
                    </t>
                </div>
            </div>
            <SearchBarMenu dropdownState="searchBarDropdownState">
                <t t-slot="search-bar-additional-menu"/>
            </SearchBarMenu>
        </div>
    </t>

`);
registerTemplate("web.SearchBar.Toggler", `/web/static/src/search/search_bar/search_bar_toggler.xml`, `<t t-name="web.SearchBar.Toggler" xml:space="preserve">
        <button t-if="props.isSmall" t-attf-class="btn btn-secondary {{ props.showSearchBar ? 'active' : '' }}" t-on-click="props.toggleSearchBar">
            <i class="fa fa-fw fa-search"/>
        </button>
    </t>

`);
registerTemplate("web.SearchBarMenu", `/web/static/src/search/search_bar_menu/search_bar_menu.xml`, `<t t-name="web.SearchBarMenu" xml:space="preserve">
        <Dropdown menuClass="'o_search_bar_menu d-flex flex-wrap flex-lg-nowrap w-100 w-md-auto mx-md-auto mt-2 py-3'" position="'bottom-end'" state="this.props.dropdownState" t-if="this.env.searchModel.searchMenuTypes.size">
            <button class="o_searchview_dropdown_toggler d-print-none btn btn-outline-secondary o-dropdown-caret rounded-start-0" data-hotkey="shift+q" title="Toggle Search Panel">
            </button>
            <t t-set-slot="content">

                <t t-if="this.env.searchModel.searchMenuTypes.has('filter')">
                    <div class="o_dropdown_container o_filter_menu w-100 w-lg-auto h-100 px-3 mb-4 mb-lg-0 border-end">
                        <div class="px-3 fs-5 mb-2">
                            <i class="me-2 text-primary" t-att-class="facet_icons.filter"/>
                            <h5 class="o_dropdown_title d-inline">Filters</h5>
                        </div>
                        <t t-set="currentGroup" t-value="null"/>
                        <t t-foreach="filterItems" t-as="item" t-key="item.id">
                            <t t-if="currentGroup !== null and currentGroup !== item.groupNumber">
                                <div class="dropdown-divider" role="separator"/>
                            </t>
                            <t t-if="item.options">
                                <AccordionItem class="'text-truncate'" description="item.description" selected="item.isActive">
                                    <t t-set="subGroup" t-value="null"/>
                                    <t t-foreach="item.options" t-as="option" t-key="option.id">
                                        <t t-if="subGroup !== null and subGroup !== option.groupNumber">
                                            <div class="dropdown-divider" role="separator"/>
                                        </t>
                                        <CheckboxItem class="{ o_item_option: true, selected: option.isActive }" t-esc="option.description" checked="option.isActive" closingMode="'none'" onSelected="() =&gt; this.onFilterSelected({ itemId: item.id, optionId: option.id })"/>
                                        <t t-set="subGroup" t-value="option.groupNumber"/>
                                    </t>
                                </AccordionItem>
                            </t>
                            <t t-else="">
                                <CheckboxItem class="{ 'o_menu_item text-truncate': true, selected: item.isActive }" checked="item.isActive" closingMode="'none'" t-esc="item.description" attrs="{ title: item.description.length &gt; 15 ? item.description : ''}" onSelected="() =&gt; this.onFilterSelected({ itemId: item.id })"/>
                            </t>
                            <t t-set="currentGroup" t-value="item.groupNumber"/>
                        </t>
                        <t t-if="filterItems.length">
                            <div role="separator" class="dropdown-divider"/>
                        </t>
                        <DropdownItem class="'o_menu_item o_add_custom_filter'" onSelected.bind="onAddCustomFilterClick">Add Custom Filter</DropdownItem>
                    </div>
                </t>

                <t t-if="this.env.searchModel.searchMenuTypes.has('groupBy')">
                    <div class="o_dropdown_container o_group_by_menu w-100 w-lg-auto h-100 px-3 mb-4 mb-lg-0 border-end">
                        <div class="px-3 fs-5 mb-2">
                            <i class="me-2 text-action" t-att-class="facet_icons.groupBy"/>
                            <h5 class="o_dropdown_title d-inline">Group By</h5>
                        </div>
                        <t t-set="currentGroup" t-value="null"/>
                        <t t-foreach="groupByItems" t-as="item" t-key="item.id">
                            <t t-if="currentGroup !== null and currentGroup !== item.groupNumber">
                                <div class="dropdown-divider" role="separator"/>
                            </t>
                            <t t-if="item.fieldType === 'properties'">
                                <PropertiesGroupByItem item="item" onGroup.bind="onGroupBySelected"/>
                            </t>
                            <t t-elif="item.options">
                                <AccordionItem class="'text-truncate'" description="item.description" selected="item.isActive">
                                    <t t-set="subGroup" t-value="null"/>
                                    <t t-foreach="item.options" t-as="option" t-key="option.id">
                                        <t t-if="subGroup !== null and subGroup !== option.groupNumber">
                                            <div class="dropdown-divider" role="separator"/>
                                        </t>
                                        <CheckboxItem class="{ o_item_option: true, selected: option.isActive }" checked="option.isActive ? true : false" closingMode="'none'" t-esc="option.description" attrs="{ title: option.description.length &gt; 15 ? option.description : ''}" onSelected="() =&gt; this.onGroupBySelected({ itemId: item.id, optionId: option.id})"/>
                                        <t t-set="subGroup" t-value="option.groupNumber"/>
                                    </t>
                                </AccordionItem>
                            </t>
                            <t t-else="">
                                <CheckboxItem class="{ 'o_menu_item text-truncate': true, selected: item.isActive }" checked="item.isActive" closingMode="'none'" t-esc="item.description" attrs="{ title: item.description.length &gt; 15 ? item.description : ''}" onSelected="() =&gt; this.onGroupBySelected({ itemId: item.id })"/>
                            </t>
                            <t t-set="currentGroup" t-value="item.groupNumber"/>
                        </t>
                        <t t-if="!hideCustomGroupBy and fields.length">
                            <div t-if="groupByItems.length" role="separator" class="dropdown-divider"/>
                            <CustomGroupByItem fields="fields" onAddCustomGroup.bind="onAddCustomGroup"/>
                        </t>
                    </div>
                </t>

                <t t-if="showComparisonMenu">
                    <div class="o_dropdown_container o_comparison_menu w-100 w-lg-auto h-100 px-3 border-end">
                        <div class="px-3 fs-5 mb-2">
                            <i class="me-2 text-danger" t-att-class="facet_icons.comparison"/>
                            <h5 class="o_dropdown_title d-inline">Comparison</h5>
                        </div>
                        <t t-foreach="comparisonItems" t-as="item" t-key="item.id">
                            <CheckboxItem class="{ 'o_menu_item text-truncate': true, selected: item.isActive }" checked="item.isActive" closingMode="'none'" t-esc="item.description" attrs="{ title: item.description.length &gt; 15 ? item.description : ''}" onSelected="() =&gt; this.onComparisonSelected(item.id)"/>
                        </t>
                    </div>
                </t>

                <t t-if="this.env.searchModel.searchMenuTypes.has('favorite')">
                    <div class="o_dropdown_container o_favorite_menu w-100 w-lg-auto h-100 px-3">
                        <t t-set="sharedFavoritesItems" t-value="sharedFavorites"/>
                        <t t-set="favoriteItems" t-value="favorites"/>
                        <div class="px-3 fs-5 mb-2">
                            <i class="me-2 text-favourite" t-att-class="facet_icons.favorite"/>
                            <h5 class="o_dropdown_title d-inline">Favorites</h5>
                        </div>
                        <t t-foreach="favoriteItems" t-as="item" t-key="item.id">
                            <t t-call="web.SearchBarMenu.FavoriteItem"/>
                        </t>
                        <t t-if="favoriteItems.length">
                            <div role="separator" class="dropdown-divider"/>
                        </t>
                        <t t-if="sharedFavoritesItems.length &gt; 10">
                            <AccordionItem class="'o_shared_favorites text-truncate'" description.translate="Shared filters">
                                <t t-foreach="sharedFavoritesItems" t-as="item" t-key="item.id">
                                    <t t-call="web.SearchBarMenu.FavoriteItem"/>
                                </t>
                            </AccordionItem>
                        </t>
                        <t t-else="">
                            <t t-foreach="sharedFavoritesItems" t-as="item" t-key="item.id">
                                <t t-call="web.SearchBarMenu.FavoriteItem"/>
                            </t>
                        </t>
                        <div t-if="sharedFavoritesItems.length" role="separator" class="dropdown-divider"/>
                        <t t-set="currentGroup" t-value="null"/>
                        <t t-foreach="otherItems" t-as="item" t-key="item.key">
                            <t t-if="currentGroup !== null and currentGroup !== item.groupNumber">
                                <div role="separator" class="dropdown-divider"/>
                            </t>
                            <t t-component="item.Component"/>
                            <t t-set="currentGroup" t-value="item.groupNumber"/>
                        </t>
                    </div>
                </t>
                <t t-slot="default"/>
            </t>
        </Dropdown>
    </t>

    `);
registerTemplate("web.SearchBarMenu.FavoriteItem", `/web/static/src/search/search_bar_menu/search_bar_menu.xml`, `<t t-name="web.SearchBarMenu.FavoriteItem" xml:space="preserve">
        <t t-set="item" t-value="item"/>
        <CheckboxItem class="{ 'o_menu_item text-truncate': true, selected: item.isActive }" checked="item.isActive" closingMode="'none'" onSelected="() =&gt; this.onFavoriteSelected(item.id)">
            <span class="d-flex p-0 align-items-center justify-content-between">
                <span t-esc="item.description" t-att-title="item.description.length &gt; 15 ? item.description : ''" class="text-truncate flex-grow-1"/>
                <i class="ms-1 fa fa-trash-o" title="Delete item" t-on-click.stop="() =&gt; this.openConfirmationDialog(item.id, item.userId)"/>
            </span>
        </CheckboxItem>
    </t>

`);
registerTemplate("web.SearchPanel", `/web/static/src/search/search_panel/search_panel.xml`, `<t t-name="web.SearchPanel" xml:space="preserve">
    <t t-if="env.isSmall">
        <t t-call="web.SearchPanel.Small"/>
    </t>
    <t t-else="">
        <t t-if="state.sidebarExpanded" t-call="web.SearchPanel.Regular"/>
        <t t-else="" t-call="web.SearchPanel.Sidebar"/>
    </t>
</t>

`);
registerTemplate("web.SearchPanel.Sidebar", `/web/static/src/search/search_panel/search_panel.xml`, `<t t-name="web.SearchPanel.Sidebar" xml:space="preserve">
    <div class="bg-view h-100 o_search_panel_sidebar cursor-pointer d-print-none" t-on-click="toggleSidebar">
        <t t-set="categories" t-value="getCategorySelection()"/>
        <t t-set="filters" t-value="getFilterSelection()"/>
        <div class="d-flex">
            <button class="btn btn-light btn-sm m-1 mb-2 p-2">
                <i class="fa fa-fw fa-angle-double-right"/>
            </button>
            <div class="o_search_panel_current_selection text-truncate mx-auto">
                <t t-if="!categories.length and !filters.length">
                    All
                </t>
                <t t-else="">
                    <t t-foreach="categories" t-as="category" t-key="category_index">
                        <span class="o_search_panel_category mb-2">
                            <i t-if="category.icon" t-attf-class="o_search_panel_section_icon fa {{ category.icon }} fa-rotate-90 mb-2" t-att-style="category.color and ('color: ' + category.color)"/>
                            <t t-esc="category.values.join(' / ')"/>
                        </span>
                    </t>
                    <t t-foreach="filters" t-as="filter" t-key="filter_index">
                        <span class="o_search_panel_filter mb-2">
                            <i t-if="filter.icon" t-attf-class="o_search_panel_section_icon fa {{ filter.icon }} fa-rotate-90 mb-2" t-att-style="filter.color and ('color: ' + filter.color)"/>
                            <t t-esc="filter.values.join(', ')"/>
                        </span>
                    </t>
                </t>
            </div>
        </div>
    </div>
</t>

`);
registerTemplate("web.SearchPanelContent", `/web/static/src/search/search_panel/search_panel.xml`, `<t t-name="web.SearchPanelContent" xml:space="preserve">
    <div class="o_search_panel flex-grow-0 flex-shrink-0 h-100 pb-5 bg-view overflow-auto position-relative" t-att-class="env.searchModel.searchPanelInfo.className" t-attf-class="#{env.isSmall ? 'px-3' : 'pe-1 ps-3'}" t-ref="root">
        <button t-if="!env.isSmall" class="btn btn-light btn-sm end-0 m-2 position-absolute px-2 py-1 top-0 z-1" t-on-click="toggleSidebar">
            <i class="fa fa-fw fa-angle-double-left"/>
        </button>
        <div t-if="!sections or sections.length === 0" class="o_search_panel_empty_state me-3">
            <button class="btn mt-2 w-100 overflow-visible">
                <div class="d-flex align-items-center me-2 ms-auto">All</div>
            </button>
        </div>
        <section t-foreach="sections" t-as="section" t-key="section.id" t-attf-class="o_search_panel_section o_search_panel_{{ section.type }}">
            <header class="o_search_panel_section_header pt-4 pb-2 text-uppercase cursor-default">
                <i t-attf-class="fa {{ section.icon }} o_search_panel_section_icon {{!section.color &amp;&amp; section.type == 'filter' ? 'text-warning' : !section.color ? 'text-primary': ''}} me-2" t-att-style="section.color and ('color: ' + section.color)"/>
                <b t-esc="section.description"/>
            </header>
            <t t-call="web.SearchPanel.Section"/>
        </section>
    </div>
    <div class="h-100">
        <span class="o_search_panel_resize" t-on-click.stop.prevent="" t-on-pointerdown.stop.prevent="_onStartResize"/>
    </div>
</t>

`);
registerTemplate("web.SearchPanel.Section", `/web/static/src/search/search_panel/search_panel.xml`, `<t t-name="web.SearchPanel.Section" xml:space="preserve">
    <div t-if="section.errorMsg" class="alert alert-warning">
        <span><t t-esc="section.errorMsg"/></span>
    </div>
    <ul t-else="" class="list-group d-block o_search_panel_field px-2 px-md-0">
        <t t-if="section.type === 'category'" t-call="{{ constructor.subTemplates.category }}">
            <t t-set="values" t-value="section.rootIds"/>
        </t>
        <t t-elif="section.groups">
            <li t-foreach="section.sortedGroupIds" t-as="groupId" t-key="groupId" class="o_search_panel_filter_group list-group-item p-0 border-0" t-att-class="groupId_last? 'mb-0' : 'mb-3'">

                <t t-set="_section" t-value="section"/>
                <t t-set="group" t-value="section.groups.get(groupId)"/>
                <header class="o_search_panel_group_header pb-1">
                    <div class="form-check w-100">

                        <input type="checkbox" class="form-check-input" t-attf-id="{{ section.id }}_input_{{ groupId }})" t-on-click="() =&gt; this.toggleFilterGroup(section.id, group)"/>
                        <label t-attf-for="{{ section.id }}_input_{{ groupId }})" class="o_search_panel_label form-check-label d-flex align-items-center justify-content-between w-100 cursor-pointer" t-att-class="{ o_with_counters: group.enableCounters }" t-att-title="group.tooltip or false">
                            <span class="o_search_panel_label_title text-truncate" t-attf-class="{{ group.color_index ? 'o_tag o_badge badge rounded-pill o_tag_color_' + group.color_index : ''}}">
                                <t t-esc="group.name"/>
                            </span>
                        </label>
                    </div>
                </header>
                <ul class="list-group d-block">
                    <t t-call="{{ constructor.subTemplates.filtersGroup }}">
                        <t t-set="values" t-value="group.values"/>
                        <t t-set="isChildList" t-value="true"/>

                        <t t-set="section" t-value="_section"/>
                    </t>
                </ul>
            </li>
            <ul t-if="section.groups.get(false)" class="list-group d-block">
                <t t-call="{{ constructor.subTemplates.filtersGroup }}">
                    <t t-set="group" t-value="section.groups.get(false)"/>
                    <t t-set="values" t-value="group.values"/>

                    <t t-set="section" t-value="section"/>
                </t>
            </ul>
        </t>
        <t t-else="" t-call="{{ constructor.subTemplates.filtersGroup }}">
            <t t-set="values" t-value="section.values"/>
        </t>
    </ul>
</t>

`);
registerTemplate("web.SearchPanel.Regular", `/web/static/src/search/search_panel/search_panel.xml`, `<t t-name="web.SearchPanel.Regular" t-inherit="web.SearchPanelContent" t-inherit-mode="primary" xml:space="preserve"/>

`);
registerTemplate("web.SearchPanel.Small", `/web/static/src/search/search_panel/search_panel.xml`, `<t t-name="web.SearchPanel.Small" xml:space="preserve">
    <div class="o_search_panel w-100 overflow-visible" t-ref="root">
        <div class="d-flex overflow-auto align-items-center px-2 border-top">
            <div t-if="!sections or sections.length === 0" class="o_search_panel_empty_state me-3">
                <button class="btn w-100">
                    <div class="d-flex align-items-center me-2 ms-auto">All</div>
                </button>
            </div>
            <Dropdown t-foreach="sections" t-as="section" t-key="section.id" state="getDropdownState(section.id)" menuClass="'my-2 mx-1'" onOpened.bind="updateGroupHeadersChecked">
                <span class="btn btn-secondary my-2 mx-1 o-dropdown-caret">
                    <i t-attf-class="fa {{ section.icon }} o_search_panel_section_icon {{!section.color &amp;&amp; section.type == 'filter' ? 'text-warning' : !section.color ? 'text-primary': ''}} me-2" t-att-style="section.color and ('color: ' + section.color)"/>
                    <b class="pe-2" t-if="section.type !== 'category' || !state.active[section.id]" t-esc="section.description"/>
                    <b class="pe-2" t-else="" t-esc="section.values.get(section.activeValueId)['display_name']"/>
                </span>
                <t t-set-slot="content">
                    <div t-attf-class="o_search_panel_{{ section.type }}" class="o_search_panel_section">
                        <t t-call="web.SearchPanel.Section"/>
                    </div>
                    <div t-if="section.type !== 'category' and hasSelection(section.id)" class="text-end">
                        <a href="#" title="Clear All" class="btn btn-link text-nowrap text-uppercase" t-on-click="() =&gt; this.clearSelection(section.id)">CLEAR ALL</a>
                    </div>
                </t>
            </Dropdown>
            <a href="#" t-if="hasSelection()" title="Clear All" class="btn btn-link text-nowrap text-uppercase" t-on-click="() =&gt; this.clearSelection()">CLEAR ALL</a>
            <div t-else="" class="mx-4"/>
        </div>
    </div>
</t>

`);
registerTemplate("web.SearchPanel.Category", `/web/static/src/search/search_panel/search_panel.xml`, `<t t-name="web.SearchPanel.Category" xml:space="preserve">
    <t t-foreach="values" t-as="valueId" t-key="valueId">
        <t t-set="value" t-value="section.values.get(valueId)"/>
        <li class="o_search_panel_category_value list-group-item py-1 cursor-pointer border-0 pe-0" t-att-class="isChildList ? env.isSmall ? '' : 'o_treeEntry' : 'ps-0'">
            <header class="list-group-item list-group-item-action d-flex align-items-center px-0 py-lg-0 border-0" t-att-class="{'active text-900 fw-bold': state.active[section.id] === valueId}" t-on-click="() =&gt; this.toggleCategory(section, value)">
                <div class="o_search_panel_label d-flex align-items-center overflow-hidden w-100 cursor-pointer mb-0" t-att-class="{'o_with_counters': section.enableCounters }" t-att-data-tooltip="value.display_name">
                    <button class="o_toggle_fold btn p-0 px-1 flex-shrink-0 text-center">
                        <i t-if="value.childrenIds.length" class="fa" t-att-class="{                                 'fa-caret-down' : state.expanded[section.id][valueId],                                 'fa-caret-right':  !state.expanded[section.id][valueId]                             }"/>
                    </button>
                    <span class="o_search_panel_label_title text-truncate" t-att-class="{'fw-bold' : value.bold}" t-esc="value.display_name"/>
                </div>
                <small t-if="section.enableCounters and value.__count gt 0" class="o_search_panel_counter text-muted mx-2 fw-bold" t-esc="value.__count"/>
            </header>
            <ul t-if="value.childrenIds.length and state.expanded[section.id][valueId]" class="list-group d-block">
                <t t-call="{{ constructor.subTemplates.category }}">
                    <t t-set="values" t-value="value.childrenIds"/>
                    <t t-set="isChildList" t-value="true"/>
                </t>
            </ul>
        </li>
    </t>
</t>

`);
registerTemplate("web.SearchPanel.FiltersGroup", `/web/static/src/search/search_panel/search_panel.xml`, `<t t-name="web.SearchPanel.FiltersGroup" xml:space="preserve">
    <li t-foreach="[...values.keys()]" t-as="valueId" t-key="valueId" class="o_search_panel_filter_value list-group-item p-0 mb-1 border-0 cursor-pointer" t-att-class="{ 'ps-2' : isChildList }">
        <t t-set="value" t-value="values.get(valueId)"/>
        <div class="form-check w-100">
            <input type="checkbox" t-attf-id="{{ section.id }}_input_{{ valueId }}" t-att-checked="state.active[section.id][valueId]" class="form-check-input" t-on-click="ev =&gt; this.toggleFilterValue(section.id, valueId, ev)"/>
            <label class="o_search_panel_label form-check-label d-flex align-items-center justify-content-between w-100 cursor-pointer" t-attf-for="{{ section.id }}_input_{{ valueId }}" t-att-title="(group and group.tooltip) or false">
                <span class="o_search_panel_label_title text-truncate" t-esc="value.display_name"/>
                <span t-if="section.enableCounters and value.__count gt 0" class="o_search_panel_counter text-muted mx-2 small" t-esc="value.__count"/>
            </label>
        </div>
    </li>
</t>

`);
registerTemplate("web.WithSearch", `/web/static/src/search/with_search/with_search.xml`, `<t t-name="web.WithSearch" xml:space="preserve">
    <t t-slot="default" context="searchModel.context" domain="searchModel.domain" groupBy="searchModel.groupBy" orderBy="searchModel.orderBy" comparison="searchModel.comparison" display="searchModel.display"/>
  </t>

`);
registerTemplate("web.ActionDialog.header", `/web/static/src/webclient/actions/action_dialog.xml`, `<t t-name="web.ActionDialog.header" t-inherit="web.Dialog.header" t-inherit-mode="primary" xml:space="preserve">
    <xpath expr="//h4[contains(concat(' ',normalize-space(@class),' '),' modal-title ')]" position="before">
      <DebugMenu t-if="env.debug"/>
    </xpath>
  </t>
  `);
registerTemplate("web.ActionDialog", `/web/static/src/webclient/actions/action_dialog.xml`, `<t t-name="web.ActionDialog" t-inherit="web.Dialog" t-inherit-mode="primary" xml:space="preserve">
    <xpath expr="//main[hasclass('modal-body')]" position="attributes">
      <attribute name="t-att-class">
        {"o_act_window": props.actionType === "ir.actions.act_window"}
      </attribute>
    </xpath>
    <xpath expr="//t[@t-slot='default']" position="replace">
      <t t-if="props.ActionComponent" t-component="props.ActionComponent" t-props="props.actionProps"/>
    </xpath>
    <xpath expr="//t[@t-slot='header']" position="replace">
      <t t-call="web.ActionDialog.header">
        <t t-set="fullscreen" t-value="props.isFullscreen"/>
      </t>
    </xpath>
  </t>

`);
registerTemplate("web.ActionInstallKioskPWA", `/web/static/src/webclient/actions/action_install_kiosk_pwa.xml`, `<t t-name="web.ActionInstallKioskPWA" xml:space="preserve">
        <div class="text-center my-3">
            <div class="fs-2 mb-2">From your Kiosk, open this URL:</div>
            <i class="fa fa-share-square-o me-1 mb-3"/><a t-att-href="url" target="_blank" t-esc="url"/>
        </div>
        <footer class="border-top d-flex p-3 justify-content-center justify-content-md-end flex-wrap gap-1 w-100">
            <button class="btn btn-secondary" special="cancel" t-on-click="() =&gt; this.dialog.closeAll()">Close</button>
            <a class="btn btn-primary" t-att-href="installURL" target="_blank">Install App</a>
        </footer>
    </t>

`);
registerTemplate("web.ReportAction", `/web/static/src/webclient/actions/reports/report_action.xml`, `<t t-name="web.ReportAction" xml:space="preserve">
        <div class="o_action">
            <Layout display="{ controlPanel: {} }">
                <t t-set-slot="control-panel-create-button">
                    <button t-on-click="print" type="button" class="btn btn-primary" title="Print">Print</button>
                </t>
                <iframe t-ref="iframe" t-on-load="onIframeLoaded" class="h-100 w-100 d-block" t-att-src="reportUrl"/>
            </Layout>
        </div>
    </t>

`);
registerTemplate("pos_restaurant.BillScreen", `/pos_restaurant/static/src/app/bill_screen/bill_screen.xml`, `<t t-name="pos_restaurant.BillScreen" xml:space="preserve">
        <Dialog title.translate="Bill Printing" bodyClass="'text-center'">
            <div class="d-inline-block m-3 p-3 border rounded bg-view">
                <OrderReceipt data="{...pos.orderExportForPrinting(pos.get_order()), isBill: true, show_change: false }" formatCurrency="env.utils.formatCurrency"/>
            </div>
            <t t-set-slot="footer">
                <div class="d-flex w-100 justify-content-start gap-2">
                    <div class="button print btn btn-lg btn-primary" t-on-click="print">
                        <i t-attf-class="fa {{printer.state.isPrinting ? 'fa-fw fa-spin fa-circle-o-notch' : 'fa-print'}} me-1"/>
                        Print
                    </div>
                </div>
            </t>
        </Dialog>
    </t>

`);
registerTemplateExtension("point_of_sale.ControlButtons", `/pos_restaurant/static/src/app/control_buttons/control_buttons.xml`, `<t t-name="pos_restaurant.ControlButtons" t-inherit="point_of_sale.ControlButtons" t-inherit-mode="extension" xml:space="preserve">
        <xpath expr="//t[@t-if='props.showRemainingButtons']/div/OrderlineNoteButton" position="after">
            <t t-if="pos.config.module_pos_restaurant">

                <t t-if="pos.config.iface_printbill">
                    <button t-att-class="buttonClass" t-att-disabled="!pos.get_order()?.get_orderlines()?.length" t-on-click="clickPrintBill">
                        <i class="fa fa-print me-1"/>Bill
                    </button>
                </t>
                <button t-att-class="buttonClass" t-on-click="clickTableGuests">
                    <span t-esc="currentOrder?.getCustomerCount() || 0" class="px-2 py-1 rounded-circle text-bg-dark fw-bolder small me-1"/>
                    <span>Guests</span>
                </button>
            </t>
        </xpath>
        <xpath expr="//t[@t-if='props.showRemainingButtons']/div/OrderlineNoteButton" position="after">

            <t t-if="pos.config.module_pos_restaurant">
                <button class="btn btn-secondary btn-lg py-5" t-att-disabled="pos.get_order()?.get_orderlines()?.reduce((sum, line) =&gt; sum + line.qty, 0) lt 2" t-on-click="() =&gt; pos.showScreen('SplitBillScreen')">
                    <i class="fa fa-files-o me-1"/>Split
                </button>
                <button class="btn btn-secondary btn-lg py-5" t-on-click.stop="() =&gt; this.clickTransferOrder()">
                    <i class="oi oi-arrow-right me-1"/>Transfer / Merge
                </button>
                <button t-if="!pos.get_order()?.table_id" class="btn btn-secondary btn-lg py-5" t-on-click="() =&gt; this.editFloatingOrderName(this.pos.get_order())">
                    <i class="fa fa-pencil-square-o me-1"/>Edit Order Name
                </button>
            </t>
        </xpath>
        <xpath expr="//button[hasclass('o_fiscal_position_button')]" position="after">
            <button t-if="pos.config.takeaway" t-attf-class="btn-secondary btn btn-lg py-5" t-on-click="clickTakeAway">
                <i t-attf-class="{{ currentOrder.takeaway ? 'fa fa-cutlery' : 'fa fa-car' }} me-1"/>
                <span t-if="currentOrder.takeaway">Switch to Dine in</span>
                <span t-else="">Switch to Takeaway</span>
            </button>
        </xpath>
        <xpath expr="//button[hasclass('o_fiscal_position_button')]" position="attributes">
            <attribute name="t-if">!pos.config.takeaway</attribute>
        </xpath>
    </t>
`);
registerTemplate("pos_restaurant.FloorScreen", `/pos_restaurant/static/src/app/floor_screen/floor_screen.xml`, `<t t-name="pos_restaurant.FloorScreen" xml:space="preserve">
        <div class="floor-screen screen h-100 position-relative d-flex flex-column flex-nowrap m-0 bg-300 text-start overflow-hidden">
            <t t-set="editButtonClass" t-value="'btn btn-lg'"/>
            <t t-set="hasSelectedTable" t-value="selectedTables.length &gt; 0"/>
            <t t-set="firstSelectedTable" t-value="selectedTables.length ? selectedTables[0] : null"/>
            <div class="d-flex flex-row flex-wrap justify-content-between border-bottom bg-light">

                <div class="floor-selector d-flex gap-2 p-2 align-items-center overflow-auto">
                    <t t-foreach="pos.models['restaurant.floor'].getAll()" t-as="floor" t-key="floor.id">
                        <button class="button button-floor btn btn-outline-secondary btn-lg px-3 lh-lg text-nowrap" t-attf-class="{{ floor.id === state.selectedFloorId ? 'active' : '' }}" t-on-click="() =&gt; this.selectFloor(floor)">
                            <t t-esc="floor.name"/>
                            <t t-set="changeCount" t-value="this.getFloorChangeCount(floor)"/>
                            <span t-if="changeCount &gt; 0" class="badge rounded-pill text-bg-danger ms-2 py-1 smaller fw-bolder" t-esc="changeCount"/>
                        </button>
                    </t>
                    <button t-attf-class="{{editButtonClass}} btn-secondary lh-lg" t-if="pos.isEditMode or pos.config.floor_ids?.length === 0" t-on-click="addFloor">
                        <i class="fa fa-plus fa-fw" role="img" aria-label="Add Floor" title="Add Floor"/>
                    </button>
                </div>

                <div t-if="pos.isEditMode" class="edit-buttons d-flex gap-2 m-2 px-2 px-sm-0 overflow-x-auto" t-att-class="{'mx-auto': ui.isSmall}">
                    <div class="d-flex gap-1 p-1 rounded-3 bg-200">
                        <t t-if="hasSelectedTable">
                            <span class="mx-2 align-self-center text-uppercase smaller fw-bolder">Table <t t-esc="firstSelectedTable.table_number"/></span>
                            <button t-attf-class="{{editButtonClass}} btn-light" t-on-click.stop="changeSeatsNum" t-att-disabled="!hasSelectedTable">
                                <i class="fa fa-user fa-fw" role="img" aria-label="Seats" title="Seats"/>
                            </button>
                            <t t-if="selectedTables.some((t) =&gt; t.shape === 'square')">
                                <button t-attf-class="{{editButtonClass}} btn-light" t-on-click.stop="() =&gt; this.changeShape('round')" t-att-disabled="!hasSelectedTable">
                                    <i class="fa fa-circle-o fa-fw" role="img" aria-label="Make Round" title="Round Shape"/>
                                </button>
                            </t>
                            <t t-else="">
                                <button t-attf-class="{{editButtonClass}} btn-light" t-on-click.stop="() =&gt; this.changeShape('square')" t-att-disabled="!hasSelectedTable">
                                    <i class="fa fa-square-o fa-fw" role="img" aria-label="Make Square" title="Square Shape"/>
                                </button>
                            </t>
                        </t>
                        <Dropdown menuClass="'pos-dropdown-menu px-1'">
                            <button t-attf-class="{{editButtonClass}} btn-light">
                                <i class="fa fa-paint-brush fa-fw" role="img" aria-label="Change Floor Background" title="Change Floor Background"/>
                            </button>
                            <t t-set-slot="content">
                                <div class="d-grid gap-1 py-2 px-1" style="grid-template-columns: repeat(3, 1fr);">
                                    <t t-foreach="Object.entries(getColors())" t-as="color" t-key="color[0]">
                                        <t t-set="adaptColor" t-value="!hasSelectedTable ? this.getLighterShade(color[0]) : color[0]"/>
                                        <DropdownItem closingMode="'none'" onSelected="() =&gt; this.setColor(hasSelectedTable, adaptColor)">
                                            <button class="p-4 border-1 rounded" t-attf-style="background-color: {{adaptColor}}"/>
                                        </DropdownItem>
                                    </t>
                                    <DropdownItem closingMode="'none'">
                                        <button class="floor-picture border-1 rounded position-relative text-center overflow-hidden d-flex flex-column align-items-center justify-content-center">
                                            <i class="fa fa-camera" role="img" aria-label="Picture" title="Picture"/>
                                            File
                                            <input type="file" class="image-uploader" t-on-change="uploadImage"/>
                                        </button>
                                    </DropdownItem>
                                </div>
                            </t>
                        </Dropdown>
                        <button t-attf-class="{{editButtonClass}} btn-light" t-on-click.stop="() =&gt; this.rename(hasSelectedTable)">
                            <i class="fa fa-pencil-square-o fa-fw" role="img" aria-label="Rename" title="Rename"/>
                        </button>
                        <button t-attf-class="{{editButtonClass}} btn-light" t-on-click.stop="() =&gt; this.duplicate(hasSelectedTable)">
                            <i class="fa fa-copy fa-fw" role="img" aria-label="Clone" title="Clone"/>
                        </button>
                        <button t-attf-class="{{editButtonClass}} btn-light" t-on-click.stop="() =&gt; this.delete(hasSelectedTable)">
                            <i class="fa fa-trash fa-fw" role="img" aria-label="Delete" title="Delete"/>
                        </button>
                    </div>
                    <button t-attf-class="btn btn-outline-secondary btn-lg d-flex align-items-center justify-content-center gap-2 lh-lg" t-on-click.stop="doCreateTable.call" t-att-disabled="doCreateTable.status === 'loading'">
                        <t t-if="doCreateTable.status === 'loading'">
                            <i class="fa fa-spinner fa-spin icon-button" role="img" aria-label="Loading" title="Loading"/>
                        </t>
                        <t t-else="">
                            <i class="fa fa-plus-circle" role="img" aria-label="Add Table" title="Add Table"/>
                            <t t-if="!ui.isSmall">Table</t>
                        </t>
                    </button>
                    <button t-attf-class="btn btn-primary btn-lg" t-on-click.stop="closeEditMode">
                        <t t-if="!ui.isSmall">Save</t>
                        <i t-else="" class="fa fa-floppy-o" role="img" aria-label="Save" title="Save"/>
                    </button>
                </div>
            </div>
            <t t-set="isKanban" t-value="pos.floorPlanStyle == 'kanban'"/>
            <div t-ref="floor-map-scroll" class="overflow-auto flex-grow-1 flex-shrink-1 flex-basis-0 w-auto" t-attf-style="background: {{activeFloor?.background_color}}"> 
                <div t-on-click="onClickFloorMap" t-on-touchstart="_onPinchStart" t-on-touchmove="_onPinchMove" t-on-touchend="_onPinchEnd" t-attf-class="floor-map position-relative w-100 h-100 {{ pos.isEditMode ? 'floor-grid' : ''}}" t-ref="floor-map-ref" t-attf-style="                         -webkit-touch-callout: none;                         height: {{state.floorHeight}} !important;                         width: {{state.floorWidth}} !important;                         {{ activeFloor?.floor_background_image and !isKanban ?                             'background-image: url(' + floorBackround + '); background-size: auto; background-repeat: no-repeat; background-attachment: local;' :                             ''                         }}">
                    <t t-if="pos.config.floor_ids?.length &gt; 0">
                        <div t-if="!activeTables?.length" class="empty-floor d-flex align-items-center justify-content-center h-100 fs-3 text-center text-muted" t-ref="map">
                            <span>Oops! No tables available.<br/>Add a new table to get started.</span>
                        </div>
                        <div t-else="" t-ref="map" t-att-class="{'floor-kanban d-grid gap-3 p-3': isKanban, 'h-100': !isKanban}">
                           <t t-foreach="activeTables.sort((a,b)=&gt;a.id-b.id)" t-as="table" t-key="table.id">
                                <t t-set="isOccupied" t-value="pos.tableHasOrders(table)"/>
                                <t t-set="isIntersecting" t-value="state.potentialLink?.child?.id === table.id"/>
                                <t t-set="isIntersected" t-value="state.potentialLink?.parent?.id === table.id"/>
                                <div t-on-click="(ev) =&gt; this.onClickTable(table, ev)" class="table o_draggable d-flex flex-column align-items-center justify-content-between cursor-pointer" t-att-class="{                                         'position-relative m-0': isKanban,                                         'position-absolute': pos.floorPlanStyle !== 'kanban',                                         'selected': state.selectedTableIds.includes(table.id),                                     }" t-attf-class="tableId-{{table.id}}" t-attf-style="                                                 border: 3px solid {{table.color}};                                                 border-radius: {{table.shape === 'round' ? 1000 : 6}}px;                                                 background: {{isOccupied ? table.color || 'rgb(53, 211, 116)' : '#00000020'}};                                                 color: {{!hasBg ? 'black' : 'white'}};                                                 opacity: {{state.potentialLink ? (isIntersecting or isIntersected ? 1 : 0.25) : 1}};                                                 {{isKanban ?                                                     \`                                                         width: 100%;                                                         min-height: 120px;                                                     \` :                                                     \`                                                         width: \${table.width}px;                                                         height: \${table.height}px;                                                         top: \${table.getY()}px;                                                         left: \${table.getX()}px;                                                     \`                                                 }}                                             ">
                                    <t t-set="offset" t-value="getTableHandleOffset(table)"/>
                                    <div class="info position-relative w-100 h-100 overflow-hidden" t-att-class="{'opacity-25': table.parent_id}" t-attf-style="border-radius: {{table.shape === 'round' ? 1000 : 3}}px;">
                                        <div t-esc="table.table_number" class="label fw-bolder fs-4 position-absolute top-50 start-50 translate-middle"/>
                                    </div>
                                    <t t-set="data" t-value="getChangeCount(table)"/>
                                    <div t-if="data.changes &gt; 0 || data.skip &gt; 0" t-esc="this.env.utils.formatProductQty(data.changes &gt; 0 ? data.changes : data.skip, false)" t-att-class="{                                             'text-bg-danger': data.changes,                                             'text-bg-info'  : !data.changes and data.skip,                                         }" class="order-count d-flex align-items-center justify-content-center position-absolute top-0 start-100 translate-middle rounded-circle smaller fw-bolder z-2" t-attf-style="width: 2rem; height: 2rem;"/>
                                    <t t-if="state.selectedTableIds.includes(table.id)">
                                        <span t-attf-class="tableId-{{table.id}}" class="table-handle position-absolute top left" t-attf-style="top: {{offset}}px; left: {{offset}}px"/>
                                        <span t-attf-class="tableId-{{table.id}}" class="table-handle position-absolute top right" t-attf-style="top: {{offset}}px; right: {{offset}}px"/>
                                        <span t-attf-class="tableId-{{table.id}}" class="table-handle position-absolute bottom right" t-attf-style="bottom: {{offset}}px; right: {{offset}}px"/>
                                        <span t-attf-class="tableId-{{table.id}}" class="table-handle position-absolute bottom left" t-attf-style="bottom: {{offset}}px; left: {{offset}}px"/>
                                    </t>
                                </div>
                            </t>
                        </div>
                    </t>
                    <div t-else="" class="empty-floor d-flex align-items-center justify-content-center h-100 fs-3 text-center text-muted" t-ref="map">
                        <span>Oops! No floors available.<br/>Add a new floor to get started.</span>
                    </div>
                </div>
            </div>
        </div>
    </t>
`);
registerTemplateExtension("point_of_sale.OrderSummary", `/pos_restaurant/static/src/app/product_screen/order_summary/order_summary.xml`, `<t t-name="pos_restaurant.OrderSummary" t-inherit="point_of_sale.OrderSummary" t-inherit-mode="extension" xml:space="preserve">
        <xpath expr="//OrderWidget/t[@t-set-slot='details']" position="inside">
            <div class="d-flex flex-column align-items-center gap-2">
                <button t-if="showBookButton()" class="btn btn-primary btn-lg py-2 book-table" style="border:none; font-size: 20px;" t-on-click="bookTable">Book table</button>
                <button t-if="showUnbookButton()" class="btn btn-primary btn-lg py-2 unbook-table" style="border:none; font-size: 20px;" t-on-click="unbookTable">
                    <t t-if="pos.selectedTable">Release table</t>
                    <t t-else="">Release Order</t>
                </button>    
            </div>
        </xpath>
        <xpath expr="//OrderWidget" position="attributes">
            <attribute name="isConfigRestaurant">pos.config.module_pos_restaurant</attribute>
            <attribute name="isOrderBooked">!!currentOrder.isBooked</attribute>
        </xpath>
    </t>
`);
registerTemplate("pos_restaurant.SplitBillScreen", `/pos_restaurant/static/src/app/split_bill_screen/split_bill_screen.xml`, `<t t-name="pos_restaurant.SplitBillScreen" xml:space="preserve">
        <div class="splitbill-screen screen h-100 bg-200">
            <div class="contents d-flex flex-column flex-nowrap h-100 my-0 mx-auto">
                <div class="top-content d-flex align-items-center p-2 border-bottom text-center bg-view">
                    <button class="button back back-button btn btn-secondary lh-lg" t-on-click="back">
                        <i class="oi oi-chevron-left fa-fw"/>
                    </button>
                    <div class="top-content-center flex-grow-1 pe-5">
                        <h4 class="mb-0">Bill Splitting</h4>
                    </div>
                </div>

                <div class="main d-flex flex-column flex-lg-row flex-grow-1 gap-2 p-2 overflow-hidden">
                    <div class="flex-grow-1 w-100 w-lg-50 me-0 me-lg-2 rounded-3 bg-view overflow-auto">
                        <OrderWidget lines="orderlines" t-slot-scope="scope" generalNote="currentOrder.general_note or ''">
                            <t t-set="line" t-value="scope.line"/>
                            <Orderline line="getLineData(line)" t-on-click="() =&gt; this.onClickLine(line)" class="{'selected active': qtyTracker[line.uuid] and qtyTracker[line.uuid] !== 0}"/>
                        </OrderWidget>
                    </div>
                    <div class="controls flex-column flex-nowrap w-100 w-lg-50">
                        <div class="order-info mb-2 mt-2 mt-lg-0 py-3 py-lg-4 rounded-3 text-center bg-view">
                            <span class="subtotal text-success">
                                <t t-esc="env.utils.formatCurrency(newOrderPrice)"/>
                            </span>
                        </div>
                        <div class="pay-button">
                            <div class="button btn btn-lg btn-primary py-3 py-lg-5 w-100" t-on-click="createSplittedOrder">
                                <span>Split Order</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </t>

`);
registerTemplate("pos_restaurant.TipReceipt", `/pos_restaurant/static/src/app/tip_receipt/tip_receipt.xml`, `<t t-name="pos_restaurant.TipReceipt" xml:space="preserve">
        <div class="pos-receipt">
            <ReceiptHeader data="props.headerData"/>
            <div class="pos-payment-terminal-receipt">
                <pre t-esc="data"/>
            </div>
            <br/>


            <div class="subtotal">
                <span>Subtotal</span>
                <div class="pos-receipt-right-align"><t t-esc="total"/></div>
            </div>
            <br/>

            <div class="tip">
                <span>Tip:</span>
                <div class="pos-receipt-right-align">________________________</div>
            </div>
            <br/>

            <div class="total">
                <span>Total:</span>
                <div class="pos-receipt-right-align">________________________</div>
            </div>
            <br/>
            <br/>

            <div class="signature">
                <div>______________________________________________</div>
                <div>Signature</div>
            </div>
        </div>
    </t>

`);
registerTemplate("pos_restaurant.TipScreen", `/pos_restaurant/static/src/app/tip_screen/tip_screen.xml`, `<t t-name="pos_restaurant.TipScreen" xml:space="preserve">
        <div class="tip-screen screen h-100 bg-100">
            <div class="pos-receipt-container text-center" t-ref="pos-receipt-container"/>
            <div class="screen-content d-flex flex-column h-100">
                <div class="top-content d-flex align-items-center p-2 border-bottom text-center">
                    <button class="button btn btn-lg btn-outline-primary" t-on-click="() =&gt; this.pos.showScreen('FloorScreen')">
                        <i class="fa fa-angle-double-left me-2"/>
                        <span>Back</span>
                    </button>
                    <button class="button btn btn-lg btn-outline-primary" t-if="printer.is()" t-on-click="printTipReceipt">
                        <i class="fa fa-print"/>
                        <span> </span>
                        <span>Reprint receipts</span>
                    </button>
                    <div class="top-content-center flex-grow-1">
                        <h2 class="mb-0">Add a tip</h2>
                    </div>
                    <div class="button highlight next btn btn-lg btn-primary" t-on-click="validateTip">
                        Settle <i class="fa fa-angle-double-right"/>
                    </div>
                </div>
                <div class="tip-options">
                    <div class="total-amount my-4 fs-2 text-center">
                        <t t-esc="overallAmountStr"/>
                    </div>
                    <div class="tip-amount-options d-flex flex-column gap-2 mx-4 p-3 rounded bg-view">
                        <div class="percentage-amounts d-flex gap-2">
                            <t t-foreach="percentageTips" t-as="tip" t-key="tip.percentage">
                                <button class="button btn btn-lg btn-secondary flex-fill py-5" t-on-click="() =&gt; { state.inputTipAmount = env.utils.formatCurrency(tip.amount,false); }">
                                    <div class="percentage fs-1 text-primary text-center">
                                        <t t-esc="tip.percentage"/>
                                    </div>
                                    <div class="amount text-muted">
                                        <t t-esc="env.utils.formatCurrency(tip.amount)"/>
                                    </div>
                                </button>
                            </t>
                        </div>
                        <div class="no-tip d-grid">
                            <button class="button btn btn-lg btn-secondary flex-fill py-5 fs-1 text-primary" t-on-click="() =&gt; { state.inputTipAmount = '0'; }">No Tip</button>
                        </div>
                        <div class="custom-amount-form d-flex">
                            <div class="input-group input-group-lg">
                                <span class="input-group-text bg-secondary">Tip Amount</span>
                                <input type="text" class="item form-control fs-1" aria-label="Username" t-model="state.inputTipAmount" t-att-data-amount="state.inputTipAmount"/>
                                <span class="input-group-text">
                                    <div class="currency">
                                        <t t-esc="pos.getCurrencySymbol()"/>
                                    </div>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </t>

`);
registerTemplateExtension("point_of_sale.Navbar", `/pos_restaurant/static/src/overrides/components/navbar/navbar.xml`, `<t t-name="pos_restaurant.Navbar" t-inherit="point_of_sale.Navbar" t-inherit-mode="extension" xml:space="preserve">
        <xpath expr="//DropdownItem[contains(text(), 'Backend')]" position="before">
            <t t-if="pos.mainScreen.component.name == 'FloorScreen'">
                <DropdownItem t-if="showEditPlanButton and this.pos.config.floor_ids.length" onSelected="() =&gt; this.pos.toggleEditMode()">
                    Edit Plan
                </DropdownItem>
            </t>
            <DropdownItem t-if="pos.mainScreen.component.name == 'FloorScreen'" onSelected="() =&gt; this.onSwitchButtonClick()">
                Switch Floor View
            </DropdownItem>
        </xpath>
        <xpath expr="//div[hasclass('pos-leftheader')]/OrderTabs" position="attributes">
            <attribute name="t-if">!pos.config.module_pos_restaurant or !ui.isSmall</attribute>
        </xpath>
        <xpath expr="//div[hasclass('pos-leftheader')]/OrderTabs" position="before">
            <div t-if="pos.config.module_pos_restaurant" class="d-flex flex-shrink-0 gap-1 position-relative">
               <div class="navbar-menu d-flex d-lg-grid gap-1">
                    <t t-set="screen" t-value="pos.mainScreen.component.name"/>
                    <button class="back-button btn btn-lg lh-lg" t-att-class="{'btn-primary': screen === 'FloorScreen'}" t-on-click="() =&gt; this.onClickPlanButton()">
                        <span t-if="!ui.isSmall">Plan</span>
                        <img t-else="" src="/pos_restaurant/static/img/plan.svg" class="navbar-icon" alt="Floor Plan"/>
                    </button>
                    <button class="table-free-order-label btn btn-lg lh-lg" t-att-class="{'btn-primary': !['ActionScreen', 'FloorScreen'].includes(screen)}" t-on-click="() =&gt; this.onClickTableTab()">
                        <span t-if="pos.get_order()" t-esc="pos.get_order().getName().slice(0, 7)"/>
                        <span t-elif="!ui.isSmall">Table</span>
                        <img t-else="" src="/pos_restaurant/static/img/table.svg" class="navbar-icon" alt="Table Selector"/>
                    </button>
                </div>
                <div t-if="!ui.isSmall" class="ms-1 me-2 my-2 border-start border"/>
                <div class="d-flex align-items-center" t-if="pos.isOrderTransferMode">
                    <strong class="mx-2 text-warning">
                        Select table to transfer order
                    </strong>
                </div>
            </div>
        </xpath>
    </t>
`);
registerTemplate("pos_restaurant.TableSelector", `/pos_restaurant/static/src/overrides/components/navbar/table_selector/table_selector.xml`, `<t t-name="pos_restaurant.TableSelector" t-inherit="point_of_sale.NumberPopup" t-inherit-mode="primary" xml:space="preserve">
        <xpath expr="//div[hasclass('input-symbol')]" position="before">
            <OrderTabs orders="pos.get_open_orders().filter((o) =&gt; !o.table_id)" class="'mb-3'"/>
        </xpath>
    </t>
`);
registerTemplateExtension("point_of_sale.PaymentScreenValidate", `/pos_restaurant/static/src/overrides/components/payment_screen/payment_screen.xml`, `<t t-name="pos_restaurant.PaymentScreenValidate" t-inherit="point_of_sale.PaymentScreenValidate" t-inherit-mode="extension" xml:space="preserve">
        <xpath expr="//button[hasclass('button') and hasclass('next')]" position="attributes">
            <attribute name="t-att-hidden">pos.config.set_tip_after_payment and !currentOrder.is_paid()</attribute>
        </xpath>

        <xpath expr="//button[hasclass('button') and hasclass('next')]/span[hasclass('next_text')]" position="replace">
            <t t-if="pos.config.set_tip_after_payment and currentOrder.is_paid()">
                <span class="back_text">Close Tab</span>
            </t>
            <t t-else="">$0</t>
        </xpath>
    </t>
    `);
registerTemplateExtension("point_of_sale.PaymentScreenBack", `/pos_restaurant/static/src/overrides/components/payment_screen/payment_screen.xml`, `<t t-name="pos_restaurant.PaymentScreenBack" t-inherit="point_of_sale.PaymentScreenBack" t-inherit-mode="extension" xml:space="preserve">
        <xpath expr="//button[hasclass('button') and hasclass('back')]/span[hasclass('back_text')]" position="replace">
            <t t-if="pos.config.set_tip_after_payment and currentOrder.is_paid()">
                <span class="back_text">Keep Open</span>
            </t>
            <t t-else="">$0</t>
        </xpath>
    </t>
    `);
registerTemplateExtension("point_of_sale.PaymentScreenDue", `/pos_restaurant/static/src/overrides/components/payment_screen/payment_screen.xml`, `<t t-name="pos_restaurant.PaymentScreenDue" t-inherit="point_of_sale.PaymentScreenDue" t-inherit-mode="extension" xml:space="preserve">
        <xpath expr="//section[hasclass('paymentlines-container')]" position="inside">
            <div t-if="currentOrder.getCustomerCount() &gt; 1" class="message text-center fs-4">
                <t t-esc="this.env.utils.formatCurrency(currentOrder.amountPerGuest())"/> / Guest
            </div>
        </xpath>
    </t>

`);
registerTemplateExtension("point_of_sale.PaymentScreenPaymentLines", `/pos_restaurant/static/src/overrides/components/payment_screen/payment_screen_payment_lines/payment_screen_payment_lines.xml`, `<t t-name="pos_restaurant.PaymentScreenPaymentLines" t-inherit="point_of_sale.PaymentScreenPaymentLines" t-inherit-mode="extension" xml:space="preserve">
        <xpath expr="//div[hasclass('send_payment_reversal')]/.." position="replace">
            <t t-if="line.canBeAdjusted() &amp;&amp; line.pos_order_id.get_total_paid() &lt; line.pos_order_id.get_total_with_tax()">
                <div class="button send_adjust_amount" title="Adjust Amount" t-on-click="() =&gt; this.sendPaymentAdjust(line)">
                    Adjust Amount
                </div>
            </t>
            <t t-elif="line.can_be_reversed">
                <div class="button send_payment_reversal" title="Reverse Payment" t-on-click="() =&gt; this.props.sendPaymentReverse(line)">
                    Reverse
                </div>
            </t>
        </xpath>
    </t>

`);
registerTemplateExtension("point_of_sale.ActionpadWidget", `/pos_restaurant/static/src/overrides/components/product_screen/actionpad_widget/actionpad_widget.xml`, `<t t-name="pos_restaurant.ActionpadWidget" t-inherit="point_of_sale.ActionpadWidget" t-inherit-mode="extension" xml:space="preserve">
        <xpath expr="//BackButton" position="attributes">
            <attribute name="t-if">!this.swapButton and !props.showActionButton and pos.showBackButton()</attribute>
        </xpath>
        <xpath expr="//div[hasclass('validation')]" position="attributes">
            <attribute name="t-if">this.swapButton or props.showActionButton</attribute>
        </xpath>
        <xpath expr="//div[hasclass('validation')]//button[hasclass('pay-order-button')]" position="attributes">
            <attribute name="t-if">!this.swapButton</attribute>
        </xpath>

        <xpath expr="//div[hasclass('validation')]" position="inside">
            <div t-if="this.swapButton" class="d-flex gap-2 flex-fill">
                <button class="submit-order h-100 button btn btn-lg d-flex align-items-center w-50 flex-fill position-relative px-3" t-att-class="swapButtonClasses" t-on-click="submitOrder">
                    <t t-if="!(ui.isSmall or displayCategoryCount.length &gt; 2) or (!displayCategoryCount.length and ui.isSmall)">Order</t>
                    <div t-attf-class="{{ !(displayCategoryCount.length &gt; 2) ? 'd-flex flex-column align-items-end gap-1' : 'row row-cols-2 g-1 gx-2' }} {{ isCategoryCountOverflow ? 'mt-n3' : ''}}">
                        <t t-if="displayCategoryCount.length">
                            <t t-foreach="displayCategoryCount" t-as="categoryCountLine" t-key="categoryCountLine_index">
                                <div class="d-flex align-items-center justify-content-between small" t-att-class="{ 'gap-2' : !(displayCategoryCount.length &gt; 2) }">
                                    <label class="text-truncate"><t t-esc="categoryCountLine.name"/></label>
                                    <label class="rounded px-2 py-0" style="background-color:rgba(0, 0, 0, 0.3);"><t t-esc="this.env.utils.formatProductQty(categoryCountLine.count, false)"/></label>
                                </div>
                            </t>
                        </t>
                        <t t-if="isCategoryCountOverflow">
                            <div class="position-absolute bottom-0 start-50 translate-middle-x">...</div>
                        </t>
                    </div>
                </button>
                <button t-if="!currentOrder.is_empty()" t-on-click="() =&gt; pos.pay()" class="button pay-order-button btn btn-lg w-50" t-attf-class="{{ this.highlightPay ? 'highlight btn-primary' : 'btn-light' }}">
                    Payment
                </button>
            </div>
        </xpath>
    </t>
`);
registerTemplateExtension("point_of_sale.OrderSummary", `/pos_restaurant/static/src/overrides/components/product_screen/order_summary/order_summary.xml`, `<t t-name="pos_restaurant.OrderSummary" t-inherit="point_of_sale.OrderSummary" t-inherit-mode="extension" xml:space="preserve">
        <xpath expr="//Orderline" position="attributes">
            <attribute name="t-on-dblclick">
                () =&gt; line.toggleSkipChange()
            </attribute>
        </xpath>
    </t>
`);
registerTemplateExtension("point_of_sale.ProductScreen", `/pos_restaurant/static/src/overrides/components/product_screen/product_screen.xml`, `<t t-name="pos_restaurant.ProductScreen" t-inherit="point_of_sale.ProductScreen" t-inherit-mode="extension" xml:space="preserve">

        <xpath expr="//button[hasclass('pay-button')]" position="replace">
            <t t-if="!pos.scanning">
                <button t-if="this.swapButton" class="btn-switchpane pay-button btn btn-lg w-50 position-relative lh-sm overflow-hidden" t-on-click="submitOrder" t-attf-class="{{ primaryOrderButton ? 'btn-primary' : 'btn-light' }}">

                    <span class="d-block">Order</span>
                    <small><t t-esc="nbrOfChanges"/> changes</small>
                </button>
                <t t-else="">
                    <button class="btn-switchpane pay-button btn btn-lg w-50 lh-sm" t-attf-class="{{ currentOrder.is_empty() ? 'btn-light disabled' : 'btn-primary' }}" t-on-click="() =&gt; this.pos.pay()">
                        <span class="d-block">Pay</span>
                        <small><t t-esc="total"/></small>
                    </button>
                </t>
            </t>
        </xpath>
        <xpath expr="//button[hasclass('review-button')]" position="replace">
            <button class="btn-switchpane btn btn-lg w-50 review-button lh-sm" t-attf-class="{{ primaryReviewButton ? 'btn-primary' : 'btn-secondary' }}" t-on-click="switchPane">
                <span class="d-block">Cart</span>
                <small t-if="this.swapButton"><t t-esc="total"/></small>
                <small t-else=""><t t-esc="items"/> items</small>
            </button>
        </xpath>
    </t>
`);
registerTemplateExtension("point_of_sale.OrderReceipt", `/pos_restaurant/static/src/overrides/components/receipt_screen/order_receipt/order_receipt.xml`, `<t t-name="pos_restaurant.OrderReceipt" t-inherit="point_of_sale.OrderReceipt" t-inherit-mode="extension" xml:space="preserve">
        <xpath expr="//div[hasclass('pos-receipt-order-data')]" position="inside">
            <t t-if="props.data.isBill">
                <div>PRO FORMA</div>
            </t>
        </xpath>
        <xpath expr="//div[hasclass('before-footer')]" position="after">
            <t t-if="props.data.isBill and props.data.set_tip_after_payment">
                <div class="tip-form py-3">
                    <div class="title text-center mt-3">For convenience, we are providing the following gratuity calculations:</div>
                    <div class="percentage-options percentage-options d-flex flex-nowrap mt-3">
                        <div class="option d-flex flex-column flex-nowrap align-items-center justify-content-center flex-grow-1">
                            <div>15%</div>
                            <div class="amount">
                                <t t-esc="props.formatCurrency(props.data.amount_total * 0.15)"/>
                            </div>
                        </div>
                        <div class="option d-flex flex-column flex-nowrap align-items-center justify-content-center flex-grow-1">
                            <div>20%</div>
                            <div class="amount">
                                <t t-esc="props.formatCurrency(props.data.amount_total * 0.20)"/>
                            </div>
                        </div>
                        <div class="option d-flex flex-column flex-nowrap align-items-center justify-content-center flex-grow-1">
                            <div>25%</div>
                            <div class="amount">
                                <t t-esc="props.formatCurrency(props.data.amount_total * 0.25)"/>
                            </div>
                        </div>
                    </div>
                </div>
            </t>
        </xpath>
    </t>
    `);
registerTemplateExtension("point_of_sale.ReceiptHeader", `/pos_restaurant/static/src/overrides/components/receipt_screen/order_receipt/order_receipt.xml`, `<t t-name="pos_restaurant.ReceiptHeader" t-inherit="point_of_sale.ReceiptHeader" t-inherit-mode="extension" xml:space="preserve">
        <xpath expr="//div[hasclass('cashier')]" position="after">
            <t t-if="props.data.table">Table <t t-esc="props.data.table"/></t>
            <t t-if="props.data.table and props.data.customer_count">, Guests: <t t-esc="props.data.customer_count"/></t>
        </xpath>
    </t>

`);
registerTemplateExtension("point_of_sale.ReceiptScreen", `/pos_restaurant/static/src/overrides/components/receipt_screen/receipt_screen.xml`, `<t t-name="pos_restaurant.ReceiptScreen" t-inherit="point_of_sale.ReceiptScreen" t-inherit-mode="extension" xml:space="preserve">
        <xpath expr="//div[@id='action_btn_desktop']" position="inside">
            <button t-if="isContinueSplitting()" class="button next validation btn btn-primary w-100 py-5 rounded-0 fs-2" t-att-class="{ highlight: !locked }" t-on-click="continueSplitting" name="resume">
                <i class="fa fa-chevron-right" role="img" aria-label="Pay" title="Pay"/>
                Continue
            </button>
        </xpath>
        <xpath expr="//div[@id='action_btn_mobile']" position="inside">
            <div t-if="isContinueSplitting()" class="btn-switchpane validation-button btn btn-primary flex-fill d-flex justify-content-center align-items-center rounded-0 fw-bolder fs-1" t-att-class="{ highlight: !locked }" t-on-click="continueSplitting" name="resume">
                Continue
            </div>
        </xpath>
        <xpath expr="//div[@id='action_btn_desktop']/button[hasclass('validation')]" position="attributes">
            <attribute name="t-if">!isContinueSplitting()</attribute>
        </xpath>
        <xpath expr="//div[@id='action_btn_mobile']/div[hasclass('validation-button')]" position="attributes">
            <attribute name="t-if">!isContinueSplitting()</attribute>
        </xpath>
    </t>
`);
registerTemplateExtension("point_of_sale.TicketScreen", `/pos_restaurant/static/src/overrides/components/ticket_screen/ticket_screen.xml`, `<t t-name="pos_restaurant.TicketScreen" t-inherit="point_of_sale.TicketScreen" t-inherit-mode="extension" xml:space="preserve">
        <xpath expr="//div[hasclass('header-row')]//div[@name='delete']" position="before">
            <div t-if="pos.config.module_pos_restaurant" class="col p-2" name="table">Table</div>
            <div t-if="state.filter == 'TIPPING'" class="col end narrow p-2" name="tip">Tip</div>
        </xpath>
        <xpath expr="//div[hasclass('order-row')]//div[@name='delete']" position="before">
            <div t-if="pos.config.module_pos_restaurant" class="col p-2" name="table">
                <t t-if="order.table_id">
                    <div t-if="ui.isSmall">Table</div>
                    <div><t t-esc="getTable(order)"/></div>
                </t>
                <div t-elif="pos.config.module_pos_restaurant" t-esc="order.getFloatingOrderName()"/>
            </div>
            <div t-if="state.filter == 'TIPPING'" class="col end narrow p-2" name="tip">
                <div t-if="ui.isSmall">Tip</div>
                <div><TipCell order="order"/></div>
            </div>
        </xpath>
        <xpath expr="//div[hasclass('mobileOrderList')]//div[hasclass('orderStatus')]" position="before">
            <div t-if="order.table_id" t-esc="getTable(order)"/>
            <div t-elif="pos.config.module_pos_restaurant" t-esc="order.getFloatingOrderName()"/>
        </xpath>
        <xpath expr="//div[hasclass('buttons')]" position="inside">
            <button class="settle-tips btn btn-lg btn-primary" t-if="state.filter == 'TIPPING'" t-on-click="settleTips">Settle</button>
        </xpath>
    </t>

    `);
registerTemplate("pos_restaurant.TipCell", `/pos_restaurant/static/src/overrides/components/ticket_screen/ticket_screen.xml`, `<t t-name="pos_restaurant.TipCell" xml:space="preserve">
        <div class="tip-cell" t-on-click.stop="editTip">
            <t t-if="state.isEditing">
                <input type="text" name="tip-amount" t-ref="autofocus" t-model="orderUiState.inputTipAmount" t-on-blur="onBlur" t-on-keydown="onKeydown"/>
            </t>
            <div t-else="">
                <t t-esc="tipAmountStr"/>
            </div>
        </div>
    </t>

`);
registerTemplate("pos_epson_printer.ePOSLayout", `/pos_epson_printer/static/src/app/components/epos_templates.xml`, `<t t-name="pos_epson_printer.ePOSLayout" xml:space="preserve">
        <s:Envelope xmlns:s="http://schemas.xmlsoap.org/soap/envelope/">
            <s:Body>
                <epos-print xmlns="http://www.epson-pos.com/schemas/2011/03/epos-print"/>
            </s:Body>
        </s:Envelope>
    </t>
`);
registerTemplateExtension("point_of_sale.ControlButtons", `/pos_sale/static/src/overrides/components/control_buttons/control_buttons.xml`, `<t t-name="pos_sale.ControlButtons" t-inherit="point_of_sale.ControlButtons" t-inherit-mode="extension" xml:space="preserve">
        <xpath expr="//t[@t-if='props.showRemainingButtons']/div/OrderlineNoteButton" position="after">
            <button t-att-class="buttonClass" t-on-click="() =&gt; this.onClickQuotation()">
                <i class="fa fa-link me-1" role="img" aria-label="Set Sale Order" title="Set Sale Order"/> Quotation/Order
            </button>
        </xpath>
    </t>
`);
registerTemplateExtension("point_of_sale.Orderline", `/pos_sale/static/src/overrides/components/orderline/orderline.xml`, `<t t-name="pos_sale.Orderline" t-inherit="point_of_sale.Orderline" t-inherit-mode="extension" xml:space="preserve">
        <xpath expr="//ul[hasclass('info-list')]" position="inside">
            <t t-if="line.so_reference">
                <li>
                    <i class="fa fa-shopping-basket me-1" role="img" aria-label="SO" title="SO"/>
                    <t t-esc="line.so_reference"/>
                </li>
                <table t-if="line.details" class="sale-order-info">
                    <tr t-foreach="line.details" t-as="soLine" t-key="soLine_index">
                        <td class="text-truncate"><t t-esc="soLine.product_uom_qty"/>x</td>
                        <td class="text-truncate" style="max-width: 275px;" t-esc="soLine.product_name"/>
                        <td class="text-truncate">: </td>
                        <td t-if="!props.basic_receipt" class="text-truncate"><t t-esc="soLine.total"/> (tax incl.)</td>
                    </tr>
                </table>
            </t>
        </xpath>
    </t>
`);
registerTemplateExtension("point_of_sale.ProductInfoPopup", `/pos_sale/static/src/overrides/components/product_info_popup/product_info_popup.xml`, `<t t-name="pos_sale.ProductInfoPopup" t-inherit="point_of_sale.ProductInfoPopup" t-inherit-mode="extension" xml:space="preserve">
        <xpath expr="//div[hasclass('financials-order')]" position="before">
            <div class="section-optional-product mt-3 mb-4 pb-4 border-bottom text-start" t-if="props.info.productInfo.optional_products.length &gt; 0">
                <h3 class="section-title">Optional Products:</h3>
                <div class="section-optional-product-body" t-foreach="props.info.productInfo.optional_products" t-as="optional" t-key="optional.name">
                    <span>
                        <a class="text-primary text-decoration-underline" t-esc="optional.name" t-on-click="() =&gt; this.searchProduct(optional.name)"/>
 from
                        <t t-esc="env.utils.formatCurrency(optional.price)"/>
                    </span>
                </div>
            </div>
        </xpath>
    </t>
`);
registerTemplateExtension("point_of_sale.ProductInfoPopup", `/pos_self_order/static/src/overrides/components/product_info_popup/product_info_popup.xml`, `<t t-name="pos_self_order.ProductInfoPopup" t-inherit="point_of_sale.ProductInfoPopup" t-inherit-mode="extension" xml:space="preserve">
        <xpath expr="//div[hasclass('section-inventory')]" position="before">
            <div t-if="this.pos.config.self_ordering_mode != 'nothing'" class="section-self-order-availability mt-3 mb-4 pb-4 border-bottom text-start d-flex align-items-center">
                <h3 class="section-title">Self-ordering:</h3>
                <div class="section-self-order-availability-body d-flex ms-auto">
                    <div class="form-check form-switch">
                        <input class="form-check-input" type="checkbox" t-att-checked="props.product.self_order_available" t-on-click="() =&gt; this.switchSelfAvailability()"/>
                    </div>
                    <span>
                        <t t-if="props.product.self_order_available">Available</t>
                        <t t-else="">Not available</t>
                    </span>
                </div>
            </div>
        </xpath>
    </t>
`);
registerTemplateExtension("point_of_sale.ProductScreen", `/pos_self_order/static/src/overrides/components/product_screen.xml`, `<t t-name="ProductScreen" t-inherit="point_of_sale.ProductScreen" t-inherit-mode="extension" xml:space="preserve">
        <xpath expr="//ProductCard" position="attributes">
            <attribute name="showWarning">!product?.self_order_available</attribute>
        </xpath>
    </t>
`);
registerTemplateExtension("point_of_sale.ReceiptHeader", `/pos_self_order/static/src/overrides/components/receipt_header/receipt_header.xml`, `<t t-name="pos_self_order.ReceiptHeader" t-inherit="point_of_sale.ReceiptHeader" t-inherit-mode="extension" xml:space="preserve">
        <xpath expr="//h1[hasclass('tracking-number')]" position="after">
            <div t-if="props.data.pickingService" class="picking-service text-center pb-2">
                <span t-if="props.data.pickingService == 'table'">Service at Table</span>
                <span t-else="">Pickup At Counter</span>
            </div>
            <div t-if="props.data.tableTracker" class="table-tracker text-center pb-2">
                Table Tracker:
                <span class="pt-3" t-esc="props.data.tableTracker"/>
            </div>
        </xpath>
    </t>
`);
registerTemplate("pos_online_payment.OnlinePaymentPopup", `/pos_online_payment/static/src/app/online_payment_popup/online_payment_popup.xml`, `<t t-name="pos_online_payment.OnlinePaymentPopup" xml:space="preserve">
        <Dialog title.translate="Scan to pay" footer="false" bodyClass="'w-100 h-100 d-flex flex-column justify-content-center align-items-center'">
            <p>Scan the QR code to pay</p>
            <img class="w-25 pb-3" t-att-src="props.qrCode" alt="QR Code to pay"/>
            <div class="amount">Amount: <t t-esc="props.formattedAmount"/></div>
            <div>Order reference: <t t-esc="props.orderName"/></div>
        </Dialog>
    </t>
`);
                    });
