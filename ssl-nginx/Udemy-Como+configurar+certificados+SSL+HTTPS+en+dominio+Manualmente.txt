sudo apt update
sudo apt install nginx -y 

sudo apt install certbot -y

sudo openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048

sudo mkdir -p /var/lib/letsencrypt/.well-known
sudo chgrp www-data /var/lib/letsencrypt
sudo chmod g+s /var/lib/letsencrypt

---------------------------------------------------------------

sudo nano /etc/nginx/snippets/letsencrypt.conf

-----

location ^~ /.well-known/acme-challenge/ {
  allow all;
  root /var/lib/letsencrypt/;
  default_type "text/plain";
  try_files $uri =404;
}

----

---------------------------------------------------------------

sudo nano /etc/nginx/snippets/ssl.conf

----

ssl_dhparam /etc/ssl/certs/dhparam.pem;

ssl_session_timeout 1d;
ssl_session_cache shared:SSL:10m;
ssl_session_tickets off;

ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
ssl_prefer_server_ciphers on;

ssl_stapling on;
ssl_stapling_verify on;
resolver 8.8.8.8 8.8.4.4 valid=300s;
resolver_timeout 30s;

add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
add_header X-Frame-Options SAMEORIGIN;
add_header X-Content-Type-Options nosniff;

----

---------------------------------------------------------------

sudo nano /etc/nginx/sites-available/adlacademy.online.conf

----

server {
  listen 80;
  server_name adlacademy.online www.adlacademy.online;

  include snippets/letsencrypt.conf;
}

----

----------------------------------------------------------------



sudo ln -s /etc/nginx/sites-available/adlacademy.online.conf /etc/nginx/sites-enabled/


sudo systemctl restart nginx


sudo certbot certonly --agree-tos --email admin@adlacademy.online --webroot -w /var/lib/letsencrypt/ -d adlacademy.online


-----------------------------------------------------------------

sudo nano /etc/nginx/sites-available/adlacademy.online.conf

----

server {
    listen 80;
    server_name www.adlacademy.online adlacademy.online;

    include snippets/letsencrypt.conf;
    return 301 https://$host$request_uri;
}

### Todo lo que diga example.com debe ser cambiado por el nombre del dominio

server {
    listen 443 ssl http2;
    server_name www.example.com;

    ssl_certificate /etc/letsencrypt/live/adlacademy.online/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/adlacademy.online/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/adlacademy.online/chain.pem;
    include snippets/ssl.conf;
    include snippets/letsencrypt.conf;

    return 301 https://example.com$request_uri;
}

server {
    listen 443 ssl http2;
    server_name example.com;

    ssl_certificate /etc/letsencrypt/live/adlacademy.online/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/adlacademy.online/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/adlacademy.online/chain.pem;
    include snippets/ssl.conf;
    include snippets/letsencrypt.conf;

    # . . . other code
}



----



sudo systemctl reload nginx



https://www.ssllabs.com/ssltest/

---------------------------------------------------------------------

sudo nano /etc/letsencrypt/cli.ini

----

deploy-hook = systemctl reload nginx

----

sudo certbot renew --dry-run



sudo nano /etc/nginx/sites-enabled/adlacademy.online.conf

----

# Odoo servers
upstream odoo {
 server 127.0.0.1:8069;
}

upstream odoochat {
 server 127.0.0.1:8072;
}

# HTTP -> HTTPS
server {
    listen 80;
    server_name www.example.com example.com;

    include snippets/letsencrypt.conf;
    return 301 https://example.com$request_uri;
}

# WWW -> NON WWW
server {
    listen 443 ssl http2;
    server_name www.example.com;

    ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/example.com/chain.pem;
    include snippets/ssl.conf;
    include snippets/letsencrypt.conf;

    return 301 https://example.com$request_uri;
}

server {
    listen 443 ssl http2;
    server_name example.com;

    proxy_read_timeout 720s;
    proxy_connect_timeout 720s;
    proxy_send_timeout 720s;

    # Proxy headers
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Real-IP $remote_addr;

    # SSL parameters
    ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/example.com/chain.pem;
    include snippets/ssl.conf;
    include snippets/letsencrypt.conf;

    # log files
    access_log /var/log/nginx/odoo.access.log;
    error_log /var/log/nginx/odoo.error.log;

    # Handle longpoll requests
    location /longpolling {
        proxy_pass http://odoochat;
    }

    # Handle / requests
    location / {
       proxy_redirect off;
       proxy_pass http://odoo;
    }

    # Cache static files
    location ~* /web/static/ {
        proxy_cache_valid 200 90m;
        proxy_buffering on;
        expires 864000;
        proxy_pass http://odoo;
    }

    # Gzip
    gzip_types text/css text/less text/plain text/xml application/xml application/json application/javascript;
    gzip on;
}

----

sudo systemctl restart nginx

--------------------------------------------------------------------

nano /etc/odoo-server.conf

----

proxy_mode = True
xmlrpc_interface = 127.0.0.1
netrpc_interface = 127.0.0.1

---

sudo systemctl restart odoo-server
