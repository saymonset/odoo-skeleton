services:
  web:
    image: "odoo-pers:${VERSION}"
    container_name: "odoo-${VERSION}"
    user: odoo
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${VERSION}069:8069"
      - "${VERSION}072:8072"
      - "${DEBUGPY_PORT}:${DEBUGPY_PORT}"
    networks:
      - odoo_network_18
    volumes:
      - "./v${VERSION}/odoo-web-data:/var/lib/odoo"
      - "./v${VERSION}/config:/etc/odoo"
      - "./v${VERSION}/addons:/mnt/extra-addons"
      - "./v${VERSION}/logs:/var/log/odoo"
      - "./v${VERSION}/filestore:/var/lib/odoo/.local/share/Odoo"
    environment:
      - HOST=db
      - USER=${POSTGRES_USER}
      - PASSWORD_FILE=/run/secrets/postgres_password
    secrets:
      - postgres_password

  db:
    image: pgvector/pgvector:pg16
    container_name: "odoo-db${VERSION}"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - PGDATA=${PGDATA}
    ports:
      - "${VERSION}432:5432"
    networks:
      - odoo_network_18
    volumes:
      - "./v${VERSION}/pgdata/data:${PGDATA}"
      - "./v${VERSION}/pgdata/init:/docker-entrypoint-initdb.d"
    secrets:
      - postgres_password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7
    container_name: evolution_redis
    restart: always
    ports:
      - "6379:6379"
    command: ["sh", "-c", "redis-server --requirepass $(cat /run/secrets/redis_password)"]
    secrets:
      - redis_password
    networks:
      - odoo_network_18
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a $(cat /run/secrets/redis_password) ping | grep PONG"]
      interval: 5s
      timeout: 5s
      retries: 5
  evolution-api:
    image: evoapicloud/evolution-api:latest
    container_name: evolution_api
    restart: always
    ports:
      - "8080:8080"
    environment:
      - DATABASE_PROVIDER=postgresql
      - DATABASE_URL=postgresql://odoo:$(cat /run/secrets/postgres_password)@db:5432/evolution_db?schema=evolution_api
      - DATABASE_CONNECTION_HOST=db
      - DATABASE_CONNECTION_PORT=5432
      - DATABASE_CONNECTION_DATABASE=evolution_db
      - DATABASE_CONNECTION_SCHEMA=evolution_api
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD_FILE=/run/secrets/redis_password     
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - odoo_network_18
    volumes:
      - evolution_instances:/evolution/instances
    secrets:
      - postgres_password
      - redis_password

  n8n:
    image: docker.n8n.io/n8nio/n8n
    container_name: "n8n-container"
    restart: unless-stopped
    ports:
      - "5678:5678"
    networks:
      - odoo_network_18
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_HOST=db
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD_FILE=/run/secrets/postgres_password
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_USER}
      - N8N_BASIC_AUTH_PASSWORD_FILE=/run/secrets/n8n_password
      - N8N_ENCRYPTION_KEY_FILE=/run/secrets/n8n_encryption_key
    user: "1000:1000"
    volumes:
      - "./v${VERSION}/n8n_data:/home/node/.n8n"
    depends_on:
      db:
        condition: service_healthy
    secrets:
      - postgres_password
      - n8n_password
      - n8n_encryption_key

secrets:
  postgres_password:
    file: ./secrets/postgres_password.txt
  evolution_password:
    file: ./secrets/evolution_password.txt
  redis_password:
    file: ./secrets/redis_password.txt
  n8n_password:
    file: ./secrets/n8n_password.txt
  n8n_encryption_key:
    file: ./secrets/n8n_encryption_key.txt

volumes:
  evolution_instances:
    name: evolution_instances

networks:
  odoo_network_18:
    driver: bridge