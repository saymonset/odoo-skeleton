version: "3.9"

services:
  ########################
  # üß± PostgreSQL
  ########################
  db:
    image: pgvector/pgvector:pg16
    container_name: "odoo-db${VERSION}"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - PGDATA=${PGDATA}
    command: >
      bash -c "
      echo 'Iniciando PostgreSQL y creando bases adicionales...';
      docker-entrypoint.sh postgres &
      sleep 5;
      psql -U ${POSTGRES_USER} -d ${POSTGRES_DB} -c \"CREATE USER evolution_user WITH PASSWORD '$(cat /run/secrets/evolution_password)';\";
      psql -U ${POSTGRES_USER} -d ${POSTGRES_DB} -c \"CREATE DATABASE evolutiondb OWNER evolution_user;\";
      wait"
    volumes:
      - "./v${VERSION}/pgdata:${PGDATA}"
    ports:
      - "${VERSION}432:5432"
    restart: always
    secrets:
      - postgres_password
      - evolution_password
    networks:
      - odoo_network_18

  ########################
  # üß± Odoo Web
  ########################
  web:
    image: "odoo-pers:${VERSION}"
    container_name: "odoo-${VERSION}"
    user: root
    depends_on:
      - db
    ports:
      - "${VERSION}069:8069"
      - "${VERSION}072:8072"
      - "${DEBUGPY_PORT}:${DEBUGPY_PORT}"
    environment:
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
    volumes:
      - "./v${VERSION}/odoo-web-data:/var/lib/odoo"
      - "./v${VERSION}/config:/etc/odoo"
      - "./v${VERSION}/addons:/mnt/extra-addons"
      - "./v${VERSION}/logs:/var/log/odoo"
      - "${ODOO_SERVER:-./src/odoo-18}:/var/lib/odoo/odoo"
      - "${CUSTOM_ADDONS:-./v18/addons}:/var/lib/odoo/custom_addons"
      - "./v${VERSION}/filestore:/var/lib/odoo/.local/share/Odoo"
    restart: always
    secrets:
      - postgres_password
    networks:
      - odoo_network_18

  ########################
  # üî¥ Redis
  ########################
  redis:
    image: redis:7
    container_name: evolution_redis
    restart: always
    command: ["redis-server", "--requirepass", "$(cat /run/secrets/redis_password)"]
    ports:
      - "6379:6379"
    secrets:
      - redis_password
    networks:
      - odoo_network_18

  ########################
  # üöÄ Evolution API
  ########################
  evolution-api:
    image: evoapicloud/evolution-api:latest
    container_name: evolution_api
    restart: always
    depends_on:
      - db
      - redis
    environment:
      - AUTHENTICATION_API_KEY_FILE=/run/secrets/evolution_password
      - REDIS_PASSWORD_FILE=/run/secrets/redis_password
    volumes:
      - evolution_instances:/evolution/instances
    secrets:
      - evolution_password
      - redis_password
    networks:
      - odoo_network_18

  ########################
  # ü§ñ n8n
  ########################
  n8n:
    image: docker.n8n.io/n8nio/n8n
    container_name: "n8n-container"
    restart: unless-stopped
    user: "node"
    depends_on:
      - db
    ports:
      - "5678:5678"
    environment:
      - N8N_HOST=${N8N_HOST}
      - N8N_PROTOCOL=${N8N_PROTOCOL}
      - WEBHOOK_URL=${WEBHOOK_URL}
      - N8N_EDITOR_BASE_URL=${N8N_EDITOR_BASE_URL}
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=db
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD_FILE=/run/secrets/postgres_password
      - DB_POSTGRESDB_DATABASE=postgres
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_USER}
      - N8N_BASIC_AUTH_PASSWORD_FILE=/run/secrets/n8n_password
      - N8N_ENCRYPTION_KEY_FILE=/run/secrets/n8n_encryption_key
      - N8N_RUNNERS_ENABLED=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - "./v${VERSION}/n8n_data:/home/node/.n8n"
    secrets:
      - postgres_password
      - n8n_password
      - n8n_encryption_key
    networks:
      - odoo_network_18

########################
# üîê Secrets
########################
secrets:
  postgres_password:
    file: ./secrets/postgres_password.txt
  evolution_password:
    file: ./secrets/evolution_password.txt
  redis_password:
    file: ./secrets/redis_password.txt
  n8n_password:
    file: ./secrets/n8n_password.txt
  n8n_encryption_key:
    file: ./secrets/n8n_encryption_key.txt
  ########################
  # üíæ Automatic Backups
  ########################
  backup:
    image: alpine:latest
    container_name: "${APP}_backup"
    restart: always
    depends_on:
      - db
      - n8n
    env_file: .env
    secrets:
      - postgres_password
    volumes:
      - ./backup:/backup
      - ./v${VERSION}/pgdata:/var/lib/postgresql/data:ro
      - ./v${VERSION}/n8n_data:/n8n_data:ro
    command: [ "sh", "/backup/backup.sh" ]
    networks:
      - odoo_network_18


########################
# üì¶ Volumes
########################
volumes:
  evolution_instances:
    name: evolution-instances

########################
# üåê Networks
########################
networks:
  odoo_network_18:
    external: true
